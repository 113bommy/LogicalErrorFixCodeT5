PID	Correct_code	Incorrect_code
1	 #include <bits/stdc++.h> using namespace std; mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); int N, X[6005], Y[6005]; long long cnt[4][4]; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cin >> N; for (int i = 0; i < N; i++) { cin >> X[i] >> Y[i]; X[i] /= 2; Y[i] /= 2; cnt[X[i] % 2][Y[i] % 2]++; } long long ans1 = 0, ans2 = 0; for (int i = 0; i < N; i++) { for (int j = i + 1; j < N; j++) { if (abs(X[i] - X[j]) % 2 != 0 || abs(Y[i] - Y[j]) % 2 != 0) continue; cnt[X[i] % 2][Y[i] % 2]--; cnt[X[j] % 2][Y[j] % 2]--; int v1 = X[i] % 2; int v2 = Y[i] % 2; ans1 += cnt[v1][v2]; ans2 += cnt[(v1 + 1) % 2][v2] + cnt[v1][(v2 + 1) % 2] + cnt[(v1 + 1) % 2][(v2 + 1) % 2]; cnt[X[i] % 2][Y[i] % 2]++; cnt[X[j] % 2][Y[j] % 2]++; } } cout << ans1 / 2 + ans2 << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); int N, X[6005], Y[6005]; long long cnt[4][4]; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cin >> N; for (int i = 0; i < N; i++) { cin >> X[i] >> Y[i]; X[i] /= 2; Y[i] /= 2; cnt[X[i] % 2][Y[i] % 2]++; } long long ans1 = 0, ans2 = 0; for (int i = 0; i < N; i++) { for (int j = i + 1; j < N; j++) { if (abs(X[i] - X[j]) % 2 != 0 || abs(Y[i] - Y[j]) % 2 != 0) continue; cnt[X[i] % 2][Y[i] % 2]--; cnt[X[j] % 2][Y[j] % 2]--; int v1 = X[i] % 2; int v2 = Y[i] % 2; ans1 += cnt[v1][v2]; ans2 += cnt[(v1 + 1) % 2][v2] + cnt[v1][(v2 + 1) % 2] + cnt[(v1 + 1) % 2][(v2 + 1) % 2]; cnt[X[i] % 2][Y[i] % 2]++; cnt[X[j] % 2][Y[j] % 2]++; } } cout << ans1 / 3 + ans2 << endl; return 0; }
1	 #include <bits/stdc++.h> using namespace std; int N; int X[6060], Y[6060]; long long C[4][4]; int main() { ios::sync_with_stdio(0); cin.tie(0); cin.exceptions(ios::badbit | ios::failbit); cin >> N; for (int i = 1; i <= N; i++) cin >> X[i] >> Y[i]; long long res = 0; for (int i = 1; i <= N; i++) C[X[i] % 4][Y[i] % 4]++; res += C[0][0] * (C[0][0] - 1) * (C[0][0] - 2) / 6; res += C[0][2] * (C[0][2] - 1) * (C[0][2] - 2) / 6; res += C[2][0] * (C[2][0] - 1) * (C[2][0] - 2) / 6; res += C[2][2] * (C[2][2] - 1) * (C[2][2] - 2) / 6; for (int i = 1; i <= N; i++) for (int j = i + 1; j <= N; j++) { if (X[i] % 4 == X[j] % 4 && Y[i] % 4 == Y[j] % 4) { int x = X[i] % 4, y = X[j] % 4; for (int nx = 0; nx < 4; nx += 2) for (int ny = 0; ny < 4; ny += 2) { if (nx == x && ny == y) continue; res += C[nx][ny]; } } } cout << res << "\n"; return 0; }	 #include <bits/stdc++.h> using namespace std; int N; int X[6060], Y[6060]; long long C[4][4]; int main() { ios::sync_with_stdio(0); cin.tie(0); cin.exceptions(ios::badbit | ios::failbit); cin >> N; for (int i = 1; i <= N; i++) cin >> X[i] >> Y[i]; long long res = 0; for (int i = 1; i <= N; i++) C[X[i] % 4][Y[i] % 4]++; res += C[0][0] * (C[0][0] - 1) * (C[0][0] - 2) / 6; res += C[0][2] * (C[0][2] - 1) * (C[0][2] - 2) / 6; res += C[2][0] * (C[2][0] - 1) * (C[2][0] - 2) / 6; res += C[2][2] * (C[2][2] - 1) * (C[2][2] - 2) / 6; for (int i = 1; i <= N; i++) for (int j = i + 1; j <= N; j++) { if (X[i] % 4 == X[j] % 4 && Y[i] % 4 == Y[j] % 4) { int x = X[i] % 4, y = Y[i] % 4; for (int nx = 0; nx < 4; nx += 2) for (int ny = 0; ny < 4; ny += 2) { if (nx == x && ny == y) continue; res += C[nx][ny]; } } } cout << res << "\n"; return 0; }
1	 #include <bits/stdc++.h> using namespace std; const int N = 6005; const int mod = 1e9 + 7; const int INF = 0x3f3f3f3f; int _, n, x[N], y[N], cnt[2][2]; void solve() { cin >> n; return; } int main() { cin >> n; for (int i = 0; i < n; i++) cin >> x[i] >> y[i], x[i] /= 2, y[i] /= 2, cnt[x[i] % 2][y[i] % 2]++; long long ans = 0; for (int i = 0; i < 2; i++) for (int j = 0; j < 2; j++) ans += cnt[i][j] * (cnt[i][j] - 1) / 2 * (n - 2) - cnt[i][j] * (cnt[i][j] - 1) * (cnt[i][j] - 2) / 6 * 2; cout << ans << "\n"; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 6005; const int mod = 1e9 + 7; const int INF = 0x3f3f3f3f; long long _, n, x[N], y[N], cnt[2][2]; void solve() { cin >> n; return; } int main() { cin >> n; for (int i = 0; i < n; i++) cin >> x[i] >> y[i], x[i] /= 2, y[i] /= 2, cnt[x[i] % 2][y[i] % 2]++; long long ans = 0; for (int i = 0; i < 2; i++) for (int j = 0; j < 2; j++) ans += cnt[i][j] * (cnt[i][j] - 1) / 2 * (n - 2) - cnt[i][j] * (cnt[i][j] - 1) * (cnt[i][j] - 2) / 6 * 2; cout << ans << "\n"; return 0; }
1	 #include <bits/stdc++.h> long long i = 4, j, n, m, r, sb[6], k; int main() { std::cin >> n; m = n; while (n--) { std::cin >> i >> j; sb[(i & 2) + (j & 2) / 2]++; } while (i--) { k = sb[i]; r += k * (k - 1) * (k - 2) / 6 + k * (k - 1) * (m - k) / 2; } std::cout << r; }	 #include <bits/stdc++.h> long long i = 4, j, n, m, r, s[6], k; int main() { std::cin >> n; m = n; while (n--) { std::cin >> k >> j; s[(k & 2) + (j & 2) / 2]++; } while (i--) { k = s[i]; r += k * (k - 1) * (k - 2) / 6 + k * (k - 1) * (m - k) / 2; } std::cout << r; }
1	 #include <bits/stdc++.h> using namespace std; void run_case() { long long n; cin >> n; vector<long long> h(4); for (long long i = 0; i < n; i++) { long long x, y; cin >> x >> y; if (x % 4 != 0 && y % 4 != 0) { h[0]++; } else if (x % 4 != 0) { h[1]++; } else if (y % 4 != 0) { h[2]++; } else { h[3]++; } } auto choose = [&](long long n, long long r) { if (r == 2) { return n * (n - 1) / 2; } if (r == 3) { return n * (n - 1) * (n - 2) / 3; } }; auto calc = [&](long long x, long long y, long long z) { return (choose(x, 2) + choose(y, 2)) * z; }; long long res = 0; for (long long i = 0; i < 3; i++) { res += choose(h[i], 3); res += h[3 - i] * choose(h[i], 2); } res += calc(h[0], h[3], h[1] + h[2]); res += calc(h[1], h[2], h[0] + h[3]); cout << res << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long T = 1; for (long long t = 1; t <= T; t++) { run_case(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void run_case() { long long n; cin >> n; vector<long long> h(4); for (long long i = 0; i < n; i++) { long long x, y; cin >> x >> y; if (x % 4 != 0 && y % 4 != 0) { h[0]++; } else if (x % 4 != 0) { h[1]++; } else if (y % 4 != 0) { h[2]++; } else { h[3]++; } } auto choose = [&](long long n, long long r) { if (r == 2) { return n * (n - 1) / 2; } if (r == 3) { return n * (n - 1) * (n - 2) / 6; } }; auto calc = [&](long long x, long long y, long long z) { return (choose(x, 2) + choose(y, 2)) * z; }; long long res = 0; for (long long i = 0; i < 4; i++) { res += choose(h[i], 3); res += h[3 - i] * choose(h[i], 2); } res += calc(h[0], h[3], h[1] + h[2]); res += calc(h[1], h[2], h[0] + h[3]); cout << res << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long T = 1; for (long long t = 1; t <= T; t++) { run_case(); } return 0; }
1	 #include <bits/stdc++.h> using namespace std; void run_case() { long long n; cin >> n; vector<long long> h(4); for (long long i = 0; i < n; i++) { long long x, y; cin >> x >> y; if (x % 4 != 0 && y % 4 != 0) { h[0]++; } else if (x % 4 != 0) { h[1]++; } else if (y % 4 != 0) { h[2]++; } else { h[3]++; } } auto choose = [&](long long n, long long r) { if (r == 2) { return n * (n - 1) / 2; } if (r == 3) { return n * (n - 1) * (n - 2) / 6; } }; auto calc = [&](long long x, long long y, long long z) { return (choose(x, 2) + choose(y, 2)) * z; }; long long res = 0; for (long long i = 0; i < 3; i++) { res += choose(h[i], 3); res += h[3 - i] * choose(h[i], 2); } res += calc(h[0], h[3], h[1] + h[2]); res += calc(h[1], h[2], h[0] + h[3]); cout << res << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long T = 1; for (long long t = 1; t <= T; t++) { run_case(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void run_case() { long long n; cin >> n; vector<long long> h(4); for (long long i = 0; i < n; i++) { long long x, y; cin >> x >> y; if (x % 4 != 0 && y % 4 != 0) { h[0]++; } else if (x % 4 != 0) { h[1]++; } else if (y % 4 != 0) { h[2]++; } else { h[3]++; } } auto choose = [&](long long n, long long r) { if (r == 2) { return n * (n - 1) / 2; } if (r == 3) { return n * (n - 1) * (n - 2) / 6; } }; auto calc = [&](long long x, long long y, long long z) { return (choose(x, 2) + choose(y, 2)) * z; }; long long res = 0; for (long long i = 0; i < 4; i++) { res += choose(h[i], 3); res += h[3 - i] * choose(h[i], 2); } res += calc(h[0], h[3], h[1] + h[2]); res += calc(h[1], h[2], h[0] + h[3]); cout << res << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long T = 1; for (long long t = 1; t <= T; t++) { run_case(); } return 0; }
1	 #include <bits/stdc++.h> using namespace std; int n, a[4]; long long res; int main() { scanf("%d", &n); for (int i = 1, x, y; i <= n; i++) scanf("%d%d", &x, &y), x >>= 1, y >>= 1, a[((x & 1) << 1) + (y & 1)]++; for (int i = 0; i < 4; i++) res += 1ll * a[i] * (a[i] - 1) * (a[i] - 2) / 6; for (int i = 0; i < 4; i++) for (int j = 0; j < 4; j++) if (i != j) res += 1ll * a[i] * (a[i] - 1) / 2 * a[j]; printf("%d\n", res); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, a[4]; long long res; int main() { scanf("%d", &n); for (int i = 1, x, y; i <= n; i++) scanf("%d%d", &x, &y), x >>= 1, y >>= 1, a[((x & 1) << 1) + (y & 1)]++; for (int i = 0; i < 4; i++) res += 1ll * a[i] * (a[i] - 1) * (a[i] - 2) / 6; for (int i = 0; i < 4; i++) for (int j = 0; j < 4; j++) if (i != j) res += 1ll * a[i] * (a[i] - 1) / 2 * a[j]; printf("%lld\n", res); return 0; }
4	 #include <bits/stdc++.h> int main() { int t, p; scanf("%d", &t); while (t--) { scanf("%d", &p); printf("2 %d", p - 1); } }	 #include <bits/stdc++.h> int main() { int t, p; scanf("%d", &t); while (t--) { scanf("%d", &p); printf("2 %d\n", p - 1); } }
4	 #include <bits/stdc++.h> using namespace std; void refresh() {} int main() { long long tc = 1; cin >> tc; while (tc--) { refresh(); long long n, ans1, ans2; cin >> n; ans1 = n - 1; ans2 = ans1 / 2; cout << ans1 << ' ' << ans2 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; void refresh() {} int main() { long long tc = 1; cin >> tc; while (tc--) { refresh(); long long n, ans1, ans2; cin >> n; ans1 = n - 1; ans2 = ans1 / 2; cout << ans2 << ' ' << ans1 << endl; } return 0; }
4	 #include <bits/stdc++.h> using namespace std; long long int bpow(long long int a, long long int b) { long long int ans = 1; while (b > 0) { if (b & 1) ans = (ans * a) % 1000000007; b /= 2; a = (a * a) % 1000000007; } return ans; } int main() { long long int testc; cin >> testc; while (testc--) { long long int n; cin >> n; cout << 2 << " " << n / 2 << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long int bpow(long long int a, long long int b) { long long int ans = 1; while (b > 0) { if (b & 1) ans = (ans * a) % 1000000007; b /= 2; a = (a * a) % 1000000007; } return ans; } int main() { long long int testc; cin >> testc; while (testc--) { long long int n; cin >> n; cout << 2 << " " << n - 1 << "\n"; } }
4	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int P; cin >> P; int re = P - 1; cout << re << " " << 2 << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int P; cin >> P; int re = P - 1; cout << 2 << " " << re << endl; } }
4	 #include <bits/stdc++.h> void solve() { int P; scanf("%d", &P); int a, b; a = P - 1; b = (P - 1) / 2; printf("%d %d\n", a, b); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }	 #include <bits/stdc++.h> void solve() { int P; scanf("%d", &P); int a, b; a = P - 1; b = (P - 1) / 2; printf("%d %d\n", b, a); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }
4	 #include <bits/stdc++.h> using namespace std; int main() { int t, b, p, k, pj; int a[2000], q; cin >> t; for (int i = 0; i < t; i++) { q = 2; pj = 0; cin >> p; for (int j = 2; j < p; j++) { pj = 0; k = p % j; for (int l = 2; l < q; l++) { if (k == a[l]) { cout << j << ' ' << l << endl; pj = 1; break; } } if (pj == 1) break; a[q++] = k; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, b, p, k, pj; int a[2000], q; cin >> t; for (int i = 0; i < t; i++) { q = 2; pj = 0; cin >> p; for (int j = 2; j < p; j++) { pj = 0; k = p % j; for (int l = 2; l < q; l++) { if (k == a[l]) { cout << l << ' ' << j << endl; pj = 1; break; } } if (pj == 1) break; a[q++] = k; } } return 0; }
4	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 1; void solve() { long long p; cin >> p; if (p == 5) { cout << "2 4\n"; return; } p--; long long x = p / 2; p = p / x; cout << x << ' ' << p << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 1; void solve() { long long p; cin >> p; if (p == 5) { cout << "2 4\n"; return; } p--; long long x = p / 2; p = p / x; cout << p << ' ' << x << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); }
4	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long a, b; a = 2; b = n / 2; cout << a << " " << b << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long a, b; a = 2; b = n - 1; cout << a << " " << b << endl; } }
5	 #include <bits/stdc++.h> using namespace std; void TombStonePiledrider(void) { long long int a; cin >> a; string c; cin >> c; string b; cin >> b; long long int d = 0; for (long long int i = 0; i < a; ++i) { if (b[i] == '0') { continue; } bool ok = (c[i] == '0'); if (!ok && i - 1 >= 0) { ok = (c[i - 1] == '1'); if (ok) { c[i - 1] == 'k'; } } if (!ok && i + 1 < a) { ok = (c[i + 1] == '1'); if (ok) { c[i + 1] == 'k'; } } d += ok; } cout << d << '\n'; } int main() { std::ios_base::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); long long int TotalTestCase = 1; std::cin >> TotalTestCase; while (TotalTestCase--) { TombStonePiledrider(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void TombStonePiledrider(void) { long long int a; cin >> a; string c; cin >> c; string b; cin >> b; long long int d = 0; for (long long int i = 0; i < a; ++i) { if (b[i] == '0') { continue; } bool ok = (c[i] == '0'); if (!ok && i - 1 >= 0) { ok = (c[i - 1] == '1'); if (ok) { c[i - 1] = 'k'; } } if (!ok && i + 1 < a) { ok = (c[i + 1] == '1'); if (ok) { c[i + 1] = 'k'; } } d += ok; } cout << d << '\n'; } int main() { std::ios_base::sync_with_stdio(false); std::cin.tie(nullptr); std::cout.tie(nullptr); long long int TotalTestCase = 1; std::cin >> TotalTestCase; while (TotalTestCase--) { TombStonePiledrider(); } return 0; }
5	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, n; cin >> t; while (t--) { cin >> n; char arr1[n], arr2[n]; long long int result = 0; for (long long int i = 0; i < n; i++) { cin >> arr1[i]; } for (long long int i = 0; i < n; i++) { cin >> arr2[i]; } vector<bool> taken(n, false); for (long long int i = 0; i < n; i++) { if (arr2[i] == '1') { for (int j = i - 1; j <= i + 1; j++) { if (j >= 0 and j < n) { if (!taken[j]) { if ((arr1[j] == '1' and j != i) or (arr1[j] == '0' and j == i)) { result++; taken[j] = true; } } } } } } cout << result << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, n; cin >> t; while (t--) { cin >> n; char arr1[n], arr2[n]; long long int result = 0; for (long long int i = 0; i < n; i++) { cin >> arr1[i]; } for (long long int i = 0; i < n; i++) { cin >> arr2[i]; } vector<bool> taken(n, false); for (long long int i = 0; i < n; i++) { if (arr2[i] == '1') { for (int j = i - 1; j <= i + 1; j++) { if (j >= 0 and j < n) { if (!taken[j]) { if ((arr1[j] == '1' and j != i) or (arr1[j] == '0' and j == i)) { result++; taken[j] = true; break; } } } } } } cout << result << endl; } }
5	 #include <bits/stdc++.h> using namespace std; void solve() { int n, sum = 0; cin >> n; string str, ch; cin >> str >> ch; for (int i = 0; i < n; i++) if (ch[i] == '1') { if (str[i] == '0') sum++; else { if (i - 1 >= 0 && str[i - 1] == '1') str[i - 1] = '*', sum++; if (i + 1 < n && str[i + 1] == '1') str[i + 1] = '*', sum++; } } cout << sum << endl; } int main() { ios_base::sync_with_stdio(false), cin.tie(0); int n; cin >> n; while (n--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, sum = 0; cin >> n; string str, ch; cin >> str >> ch; for (int i = 0; i < n; i++) if (ch[i] == '1') { if (str[i] == '0') sum++; else { if (i - 1 >= 0 && str[i - 1] == '1') str[i - 1] = '*', sum++; else if (i + 1 < n && str[i + 1] == '1') str[i + 1] = '*', sum++; } } cout << sum << endl; } int main() { ios_base::sync_with_stdio(false), cin.tie(0); int n; cin >> n; while (n--) { solve(); } return 0; }
5	 #include <bits/stdc++.h> using namespace std; const bool read_file = false; const char fi[] = "XX.INP"; const char fo[] = "XX.OUT"; void set_up() { if (read_file) { freopen(fi, "r", stdin); freopen(fo, "w", stdout); } cin.clear(); ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } void just_do_it(); int main() { set_up(); just_do_it(); } int t, n; char c; const int ms = 2e5 + 20; int a[ms]; int b[ms]; int res; void query() { cin >> n; a[0] = -1; for (int i = 1; i <= n; i++) { cin >> c; a[i] = c - '0'; } a[n + 1] = -1; b[0] = -1; for (int i = 1; i <= n; i++) { cin >> c; b[i] = c - '0'; } b[n + 1] = -1; res = 0; for (int i = 1; i <= n; i++) { if (b[i] == 1) { if (a[i - 1] == 1) { a[i - 1] = -1; res++; } if (a[i] == 0) { a[i] = -1; res++; } if (a[i + 1] == 1) { a[i + 1] = -1; res++; } } } cout << res << endl; } void just_do_it() { cin >> t; for (int i = 0; i < t; i++) { query(); } }	 #include <bits/stdc++.h> using namespace std; const bool read_file = false; const char fi[] = "XX.INP"; const char fo[] = "XX.OUT"; void set_up() { if (read_file) { freopen(fi, "r", stdin); freopen(fo, "w", stdout); } cin.clear(); ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } void just_do_it(); int main() { set_up(); just_do_it(); } int t, n; char c; const int ms = 2e5 + 20; int a[ms]; int b[ms]; int res; void query() { cin >> n; a[0] = -1; for (int i = 1; i <= n; i++) { cin >> c; a[i] = c - '0'; } a[n + 1] = -1; b[0] = -1; for (int i = 1; i <= n; i++) { cin >> c; b[i] = c - '0'; } b[n + 1] = -1; res = 0; for (int i = 1; i <= n; i++) { if (b[i] == 1) { if (a[i - 1] == 1) { a[i - 1] = -1; res++; } else if (a[i] == 0) { a[i] = -1; res++; } else if (a[i + 1] == 1) { a[i + 1] = -1; res++; } } } cout << res << endl; } void just_do_it() { cin >> t; for (int i = 0; i < t; i++) { query(); } }
5	 #include <bits/stdc++.h> using namespace std; int main() { int n; string s; cin >> s; n = stoi(s); while (n-- > 0) { cin >> s; int t = stoi(s); string s1; string s2; cin >> s1; cin >> s2; vector<int> enemy; for (int i = 0; i < s1.size(); i++) { if (s1[i] == '1') { enemy.push_back(i); } } int cnt = 0; for (int i = 0; i < s2.size(); i++) { if (s2[i] == '1' && s1[i] == '0') { cnt++; continue; } if (s2[i] == '1' && s1[i] == '1') { if (i != 0 && s1[i - 1] == '1') { s1[i - 1] = '2'; cnt++; continue; } if (i != t - 1 && s1[i + 1] == '1') { s1[i + 1] = '2'; cnt++; continue; } } } cout << cnt << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int n; string s; cin >> s; n = stoi(s); while (n-- > 0) { cin >> s; int t = stoi(s); string s1; string s2; cin >> s1; cin >> s2; vector<int> enemy; for (int i = 0; i < s1.size(); i++) { if (s1[i] == '1') { enemy.push_back(i); } } int cnt = 0; for (int i = 0; i < s2.size(); i++) { if (s2[i] == '1' && s1[i] == '0') { cnt++; continue; } if (s2[i] == '1' && s1[i] != '0') { if (i != 0 && s1[i - 1] == '1') { s1[i - 1] = '2'; cnt++; continue; } if (i != t - 1 && s1[i + 1] == '1') { s1[i + 1] = '2'; cnt++; continue; } } } cout << cnt << endl; } }
5	 #include <bits/stdc++.h> using namespace std; int hashPower = 31; float pi = 3.141593; long long int power(long long int a, long long int b) { long long int res = 1; while (b) { if (b % 2) res = (res * a) % 1000000007; b /= 2; a = (a * a) % 1000000007; } return res; } int main() { long long int t; cin >> t; while (t--) { long long int n; cin >> n; string first, second; cin >> first; cin >> second; int a[n], b[n]; for (int i = 0; i < n; i++) { if (first[i] == '0') { a[i] = 0; } else { a[i] = 1; } } for (int i = 0; i < n; i++) { if (second[i] == '0') { b[i] = 0; } else { b[i] = 1; } } int count = 0; for (int i = 0; i < n; i++) { if (b[i]) { if (a[i] == 0) { count++; a[i] = 1; } else { if (a[i - 1] == 1 && (i - 1 >= 0)) { count++; a[i - 1] = 2; } else if (a[i + 1] == 1 && (i + 1 < n)) { count++; a[i + 1] = 2; } } } } cout << count << endl; } }	 #include <bits/stdc++.h> using namespace std; int hashPower = 31; float pi = 3.141593; long long int power(long long int a, long long int b) { long long int res = 1; while (b) { if (b % 2) res = (res * a) % 1000000007; b /= 2; a = (a * a) % 1000000007; } return res; } int main() { long long int t; cin >> t; while (t--) { long long int n; cin >> n; string first, second; cin >> first; cin >> second; int a[n], b[n]; for (int i = 0; i < n; i++) { if (first[i] == '0') { a[i] = 0; } else { a[i] = 1; } } for (int i = 0; i < n; i++) { if (second[i] == '0') { b[i] = 0; } else { b[i] = 1; } } int count = 0; for (int i = 0; i < n; i++) { if (b[i]) { if (a[i] == 0) { count++; a[i] = 2; } else { if (a[i - 1] == 1 && (i - 1 >= 0)) { count++; a[i - 1] = 2; } else if (a[i + 1] == 1 && (i + 1 < n)) { count++; a[i + 1] = 2; } } } } cout << count << endl; } }
6	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, m; cin >> n >> m; long long arr[n]; memset(arr, 0, sizeof(arr)); long long ans = n; for (long long i = 0; i < m; i++) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]--; if (arr[v] == -1) ans--; } else { arr[u]--; if (arr[u] == -1) ans--; } } long long q; cin >> q; for (long long i = 0; i < q; i++) { int c; cin >> c; if (c == 1) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]--; if (arr[v] == -1) ans--; } else { arr[u]--; if (arr[u] == -1) ans--; } } else if (c == 2) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]++; if (arr[v] == 0) ans++; } else { arr[u]++; if (arr[u] == -1) ans++; } } else { cout << ans << "\n"; } } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, m; cin >> n >> m; long long arr[n]; memset(arr, 0, sizeof(arr)); long long ans = n; for (long long i = 0; i < m; i++) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]--; if (arr[v] == -1) ans--; } else { arr[u]--; if (arr[u] == -1) ans--; } } long long q; cin >> q; for (long long i = 0; i < q; i++) { int c; cin >> c; if (c == 1) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]--; if (arr[v] == -1) ans--; } else { arr[u]--; if (arr[u] == -1) ans--; } } else if (c == 2) { long long u, v; cin >> u >> v; u--, v--; if (u > v) { arr[v]++; if (arr[v] == 0) ans++; } else { arr[u]++; if (arr[u] == 0) ans++; } } else { cout << ans << "\n"; } } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; solve(); return 0; }
6	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; const long long M = 1e9 + 7; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); ; int n, m; cin >> n >> m; unordered_map<int, int> hi; int cnt = 0; while (m--) { int u, v; cin >> u >> v; if (!hi[min(u, v)]) cnt++; hi[min(u, v)]++; } int q; cin >> q; while (q--) { int x; cin >> x; if (x == 3) cout << n - cnt << '\n'; else { int y, z; cin >> y >> z; if (x == 1) { if (!hi[min(y, z)]) cnt++; hi[min(y, z)]++; } else { hi[min(y, z)]--; if (!hi[min(y, z)]) cnt++; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; const long long M = 1e9 + 7; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); ; int n, m; cin >> n >> m; unordered_map<int, int> hi; int cnt = 0; while (m--) { int u, v; cin >> u >> v; if (!hi[min(u, v)]) cnt++; hi[min(u, v)]++; } int q; cin >> q; while (q--) { int x; cin >> x; if (x == 3) cout << n - cnt << '\n'; else { int y, z; cin >> y >> z; if (x == 1) { if (!hi[min(y, z)]) cnt++; hi[min(y, z)]++; } else { hi[min(y, z)]--; if (!hi[min(y, z)]) cnt--; } } } return 0; }
8	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { long long x; scanf("%lld", &x); int di = x / 3; if (x % 3 == 2) { di++; } else if (x % 3 == 1) { } printf("%d %d\n", x - 2 * di, di); } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { long long x; scanf("%lld", &x); int di = x / 3; if (x % 3 == 2) { di++; } else if (x % 3 == 1) { } printf("%lld %d\n", x - 2 * di, di); } }
8	 #include <bits/stdc++.h> using namespace std; const long long MX = 1e7 + 123; long long arr[MX]; long long brr[MX]; long long crr[MX]; void solve() { long long t; cin >> t; while (t--) { long long n; cin >> n; if (n % 3 == 0) { cout << n / 3 << " " << n / 3 << '\n'; } else if (n % 3 == 1) { cout << n / 3 + 1 << " " << n / 3 << '\n'; } else if (n % 3 == 2) { cout << n / 3 << " " << n / 3 + 2 << '\n'; } } } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const long long MX = 1e7 + 123; long long arr[MX]; long long brr[MX]; long long crr[MX]; void solve() { long long t; cin >> t; while (t--) { long long n; cin >> n; if (n % 3 == 0) { cout << n / 3 << " " << n / 3 << '\n'; } else if (n % 3 == 1) { cout << n / 3 + 1 << " " << n / 3 << '\n'; } else if (n % 3 == 2) { cout << n / 3 << " " << n / 3 + 1 << '\n'; } } } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; solve(); return 0; }
8	 #include <bits/stdc++.h> int main() { int t, i; scanf("%d", &t); long n[t], n1[t], n2[t]; for (i = 0; i < t; i++) { scanf("%ld", &n[i]); if ((n[i] % 3) == 1) { n1[i] = (n[i] / 3) + 1; n2[i] = n1[i] - 1; } else if ((n[i] % 3) == 2) { n1[i] = n[i] / 3; n2[i] = n1[i] + 1; } else if ((n[i] % 3) == 0) { n1[i] = n[i] / 3; n2[i] = n1[i]; } } for (i = 0; i < t; i++) printf("%ld %d", n1[i], n2[i]); }	 #include <bits/stdc++.h> int main() { int t, i; scanf("%d", &t); long n[t], n1[t], n2[t]; for (i = 0; i < t; i++) { scanf("%ld", &n[i]); if ((n[i] % 3) == 1) { n1[i] = (n[i] / 3) + 1; n2[i] = n1[i] - 1; } else if ((n[i] % 3) == 2) { n1[i] = n[i] / 3; n2[i] = n1[i] + 1; } else if ((n[i] % 3) == 0) { n1[i] = n[i] / 3; n2[i] = n1[i]; } } for (i = 0; i < t; i++) printf("%ld %ld\n", n1[i], n2[i]); }
8	 #include <bits/stdc++.h> using namespace std; int main() { unsigned int t; cin >> t; while (t--) { unsigned long long n; cin >> n; unsigned long long rem = n % 3; if (n < 3) { if (n == 1) cout << 1 << " " << 0 << "\n"; else { cout << 0 << " " << 2 << "\n"; } } else { if (rem == 1) { cout << (n / 3) + 1 << " " << (n / 3) << "\n"; } else if (rem == 2) { cout << (n / 3) << " " << (n / 3) + 1 << "\n"; } else { cout << (n / 3) << " " << (n / 3) << "\n"; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { unsigned int t; cin >> t; while (t--) { unsigned long long n; cin >> n; unsigned long long rem = n % 3; if (n < 3) { if (n == 1) cout << 1 << " " << 0 << "\n"; else { cout << 0 << " " << 1 << "\n"; } } else { if (rem == 1) { cout << (n / 3) + 1 << " " << (n / 3) << "\n"; } else if (rem == 2) { cout << (n / 3) << " " << (n / 3) + 1 << "\n"; } else { cout << (n / 3) << " " << (n / 3) << "\n"; } } } return 0; }
8	 #include <bits/stdc++.h> using namespace std; long long mod = 10e9 + 7; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { long long n; cin >> n; if (n % 3 == 0) { cout << (n / 3) << " " << (n / 3) << "\n"; } else if (n % 3 == 1) { cout << ((n - 1) / 3) + 1 << " " << ((n - 1) / 3) << "\n"; } else if (n % 3 == 2) { cout << ((n - 1) / 3) << " " << ceil((n - 1) / 3) + 1 << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; long long mod = 10e9 + 7; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { long long n; cin >> n; if (n % 3 == 0) { cout << (n / 3) << " " << (n / 3) << "\n"; } else if (n % 3 == 1) { cout << ((n - 1) / 3) + 1 << " " << ((n - 1) / 3) << "\n"; } else if (n % 3 == 2) { cout << ((n - 1) / 3) << " " << ((n - 1) / 3) + 1 << "\n"; } } return 0; }
8	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; if (n == 1) { cout << "1 0"; return; } else if (n == 2) { cout << "0 1"; return; } long long a = n / 3; long long b = (n - a) / 2; if (a + b * 2 != n) { b++; } cout << a << ' ' << b; } int main() { int T = 1; cin >> T; while (T--) { solve(); cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; if (n == 1) { cout << "1 0"; return; } else if (n == 2) { cout << "0 1"; return; } long long a = n / 3; long long b = (n - a) / 2; if (a + b * 2 != n) { a++; } cout << a << ' ' << b; } int main() { int T = 1; cin >> T; while (T--) { solve(); cout << "\n"; } return 0; }
8	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize("Ofast") #pragma GCC target("avx,avx2,fma") #pragma GCC optimize("unroll-loops") int main() { ios_base::sync_with_stdio(false); cin.tie(0); unsigned int t; cin >> t; while (t--) { long long int n; cin >> n; if (n % 3 == 0) cout << n / 3 << " " << n / 3 << endl; else if (n % 3 == 0) cout << n / 3 + 1 << " " << n / 3 << endl; else cout << n / 3 << " " << n / 3 + 1 << endl; } }	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize("Ofast") #pragma GCC target("avx,avx2,fma") #pragma GCC optimize("unroll-loops") int main() { ios_base::sync_with_stdio(false); cin.tie(0); unsigned int t; cin >> t; while (t--) { long long int n; cin >> n; if (n % 3 == 0) cout << n / 3 << " " << n / 3 << endl; else if (n % 3 == 1) cout << n / 3 + 1 << " " << n / 3 << endl; else cout << n / 3 << " " << n / 3 + 1 << endl; } }
8	 #include <bits/stdc++.h> int main() { int n; scanf("%d", &n); while (n--) { double a; scanf("%lf", &a); double s = round(a / 3); printf("%.0lf %.0lf\n", a - (s * 2), s); } return 0; }	 #include <bits/stdc++.h> int main() { int n; scanf("%d", &n); while (n--) { double a; scanf("%lf", &a); double s = round(a / 3); printf("%.0f %.0f\n", a - (s * 2), s); } return 0; }
8	 #include <bits/stdc++.h> using namespace std; int t, n; long long fn; long long f(long long x) { return fabs(fn - 3.0 * x); } void out_pair(long long x) { cout << (int)(fn - 2.0 * x) << ' ' << (int)x << '\n'; return; } int main() { cin >> t; while (t--) { cin >> n; fn = (long long)n; if (n % 3 == 0) { out_pair(fn / 3.0); } else { if (ceil(fn / 3.0) < fn / 2.0) { if (f(ceil(fn / 3.0)) < f(floor(fn / 3.0))) { out_pair(ceil(fn / 3.0)); } else out_pair(floor(fn / 3.0)); } else out_pair(floor(fn / 3.0)); } } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n; long long fn; long long f(long long x) { return fabs(fn - 3.0 * x); } void out_pair(long long x) { cout << (int)(fn - 2.0 * x) << ' ' << (int)x << '\n'; return; } int main() { cin >> t; while (t--) { cin >> n; fn = (long long)n; if (n % 3 == 0) { out_pair(fn / 3.0); } else { if (ceil(fn / 3.0) <= fn / 2.0) { if (f(ceil(fn / 3.0)) < f(floor(fn / 3.0))) { out_pair(ceil(fn / 3.0)); } else out_pair(floor(fn / 3.0)); } else out_pair(floor(fn / 3.0)); } } return 0; }
8	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; int main() { long long t; cin >> t; while (t--) { long long n; cin >> n; long long c1, c2, c3, c4; for (long long i = 0; i < 1e3; i++) { if ((n - i) % 3 == 0) { c2 = (n - i) / 3; c1 = c2 + i; break; } } long long diff1 = c1 - c2; for (long long i = 0; i < 1e3; i++) { if ((n - 2 * i) % 3 == 0) { c3 = (n - 2 * i) / 3; c4 = c3 + i; break; } } long long diff2 = c4 - c3; if (diff1 <= diff2) { cout << c2 << " " << c1 << '\n'; } else { cout << c3 << " " << c4 << '\n'; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; int main() { long long t; cin >> t; while (t--) { long long n; cin >> n; long long c1, c2, c3, c4; for (long long i = 0; i < 1e3; i++) { if ((n - i) % 3 == 0) { c2 = (n - i) / 3; c1 = c2 + i; break; } } long long diff1 = c1 - c2; for (long long i = 0; i < 1e3; i++) { if ((n - 2 * i) % 3 == 0) { c3 = (n - 2 * i) / 3; c4 = c3 + i; break; } } long long diff2 = c4 - c3; if (diff1 <= diff2) { cout << c1 << " " << c2 << '\n'; } else { cout << c3 << " " << c4 << '\n'; } } return 0; }
9	 #include <bits/stdc++.h> using namespace std; template <typename T> T min_(T a, T b) { return a > b ? b : a; } template <typename T, typename... Ts> T min_(T first, Ts... last) { return min_(first, min_(last...)); } template <typename T, typename T1> T amax(T& a, T1 b) { if (b > a) a = b; return a; } template <typename T, typename T1> T amin(T& a, T1 b) { if (b < a) a = b; return a; } template <class T, class S> std::ostream& operator<<(std::ostream& os, const std::pair<T, S>& t) { os << "(" << t.first << ", " << t.second << ")"; return os; } template <typename T> ostream& operator<<(ostream& out, const vector<T>& v) { out << "["; size_t last = v.size() - 1; for (size_t i = 0; i < v.size(); ++i) { out << v[i]; if (i != last) out << ", "; } out << "]"; return out; } void solve() { string s; cin >> s; int n = s.length(); int cnt[27]; memset(cnt, 0, sizeof cnt); int red = 0; for (auto i = 0; i < n; i++) { if (cnt[s[i] - 'a'] > 2) continue; cnt[s[i] - 'a']++; red++; } cout << red / 2 << '\n'; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; while (T--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; template <typename T> T min_(T a, T b) { return a > b ? b : a; } template <typename T, typename... Ts> T min_(T first, Ts... last) { return min_(first, min_(last...)); } template <typename T, typename T1> T amax(T& a, T1 b) { if (b > a) a = b; return a; } template <typename T, typename T1> T amin(T& a, T1 b) { if (b < a) a = b; return a; } template <class T, class S> std::ostream& operator<<(std::ostream& os, const std::pair<T, S>& t) { os << "(" << t.first << ", " << t.second << ")"; return os; } template <typename T> ostream& operator<<(ostream& out, const vector<T>& v) { out << "["; size_t last = v.size() - 1; for (size_t i = 0; i < v.size(); ++i) { out << v[i]; if (i != last) out << ", "; } out << "]"; return out; } void solve() { string s; cin >> s; int n = s.length(); int cnt[27]; memset(cnt, 0, sizeof cnt); int red = 0; for (auto i = 0; i < n; i++) { if (cnt[s[i] - 'a'] >= 2) continue; cnt[s[i] - 'a']++; red++; } cout << red / 2 << '\n'; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; while (T--) { solve(); } }
9	 #include <bits/stdc++.h> using namespace std; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { string s; cin >> s; long long a[26] = {0}; long long cnt = 0; for (long long i = 0; i < s.size(); i++) { a[s[i] - 97]++; } for (long long i = 0; i < 26; i++) { if (a[i] <= 3) cnt += a[i]; else cnt += 3; } cout << cnt / 2 << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { string s; cin >> s; long long a[26] = {0}; long long cnt = 0; for (long long i = 0; i < s.size(); i++) { a[s[i] - 97]++; } for (long long i = 0; i < 26; i++) { if (a[i] <= 2) cnt += a[i]; else cnt += 2; } cout << cnt / 2 << "\n"; } return 0; }
9	 #include <bits/stdc++.h> using namespace std; struct node { char s = '1'; int num = 0; } e[60]; char a[60]; int main() { int t; scanf("%d", &t); while (t--) { for (int i = 0; i <= 10; i++) { e[i].s = '1'; e[i].num = 0; } int n; scanf("%s", a); int len = strlen(a); if (len == 1) { printf("0\n"); continue; } int num = 0; for (int i = 0; i < len; i++) { int flag = 0; for (int j = 0; j < len; j++) { if (a[i] == e[j].s) { e[j].num++; flag = 1; } } if (flag == 0) { e[num].s = a[i]; e[num].num++; num++; } } int num1 = 0, numn = 0; for (int i = 0; i < num; i++) { if (e[i].num == 1) num1++; if (e[i].num >= 2) numn++; } int sum = 0; if (num1 % 2 == 1) { sum = (num1 - 1) / 2 + numn; } else { sum = num1 / 2 + numn; } printf("%d\n", sum); } return 0; }	 #include <bits/stdc++.h> using namespace std; struct node { char s = '1'; int num = 0; } e[60]; char a[60]; int main() { int t; scanf("%d", &t); while (t--) { for (int i = 0; i < 55; i++) { e[i].s = '1'; e[i].num = 0; } int n; scanf("%s", a); int len = strlen(a); if (len == 1) { printf("0\n"); continue; } int num = 0; for (int i = 0; i < len; i++) { int flag = 0; for (int j = 0; j < len; j++) { if (a[i] == e[j].s) { e[j].num++; flag = 1; } } if (flag == 0) { e[num].s = a[i]; e[num].num++; num++; } } int num1 = 0, numn = 0; for (int i = 0; i < num; i++) { if (e[i].num == 1) num1++; if (e[i].num >= 2) numn++; } int sum = 0; if (num1 % 2 == 1) { sum = (num1 - 1) / 2 + numn; } else { sum = num1 / 2 + numn; } printf("%d\n", sum); } return 0; }
9	 #include <bits/stdc++.h> using namespace std; int dr[] = {-1, 0, 1, 0, -1, 1, 1, -1}; int dc[] = {0, 1, 0, -1, 1, 1, -1, -1}; using namespace std; long long q, n, k; int cnt[26 + 7]; int main() { cin >> q; while (q--) { memset(cnt, 0, sizeof(cnt)); string tmp; cin >> tmp; for (int i = 0; i < tmp.length(); i++) { cnt[tmp[i] - 97]++; } if (1) { for (int i = 0; i < 26; i++) cout << cnt[i] << " "; cout << endl; } long long single = 0, more = 0; for (int i = 0; i < 26; i++) { if (cnt[i] == 1) single++; else if (cnt[i] > 1) more++; } single = floor(single / 2); cout << single + more << endl; } }	 #include <bits/stdc++.h> using namespace std; int dr[] = {-1, 0, 1, 0, -1, 1, 1, -1}; int dc[] = {0, 1, 0, -1, 1, 1, -1, -1}; using namespace std; long long q, n, k; int cnt[26 + 7]; int main() { cin >> q; while (q--) { memset(cnt, 0, sizeof(cnt)); string tmp; cin >> tmp; for (int i = 0; i < tmp.length(); i++) { cnt[tmp[i] - 97]++; } if (0) { for (int i = 0; i < 26; i++) cout << cnt[i] << " "; cout << endl; } long long single = 0, more = 0; for (int i = 0; i < 26; i++) { if (cnt[i] == 1) single++; else if (cnt[i] > 1) more++; } single = floor(single / 2); cout << single + more << endl; } }
9	 #include <bits/stdc++.h> using namespace std; bool test = 1; void solve() { string s; cin >> s; int hash[26] = {0}; for (auto x : s) { hash[x - 'a']++; } long long sum = 0; for (int i = 0; i < 26; i++) { sum += (hash[i] > 3) ? 2 : hash[i]; } cout << sum / 2 << endl; } int main() { ios::sync_with_stdio(0); cout.tie(0); cin.tie(0); if (test) { int t; cin >> t; while (t--) solve(); } else solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; bool test = 1; void solve() { string s; cin >> s; int hash[26] = {0}; for (auto x : s) { hash[x - 'a']++; } long long sum = 0; for (int i = 0; i < 26; i++) { sum += (hash[i] > 2) ? 2 : hash[i]; } cout << sum / 2 << endl; } int main() { ios::sync_with_stdio(0); cout.tie(0); cin.tie(0); if (test) { int t; cin >> t; while (t--) solve(); } else solve(); return 0; }
9	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { string s; cin >> s; sort(s.begin(), s.end()); int n = s.size(); for (int i = 0; i < n - 3; i++) { if (s[i] == s[i + 1] && s[i + 1] == s[i + 2]) { s[i] = '*'; } } int c = 0; for (int i = 0; i < n; i++) { if (s[i] != '*') { c++; } } cout << (c) / 2 << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { string s; cin >> s; sort(s.begin(), s.end()); int n = s.size(); for (int i = 0; i <= n - 3; i++) { if (s[i] == s[i + 1] && s[i + 1] == s[i + 2]) { s[i] = '*'; } } int c = 0; for (int i = 0; i < n; i++) { if (s[i] != '*') { c++; } } cout << (c) / 2 << "\n"; } }
10	 #include <bits/stdc++.h> using namespace std; void fast() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); } int a[200001]; map<int, vector<int> > mp; void solve() { int n, k; cin >> n >> k; mp.clear(); memset(a, 0, n * sizeof(a[0])); for (int i = 0; i < n; i++) { int x; cin >> x; if (mp[i].size() < k) mp[x].push_back(i); } int m = 0; for (auto p : mp) m += p.second.size(); m -= m % k; int color = 0; bool ok = 0; for (auto e : mp) { for (auto c : e.second) { a[c] = ++color; color %= k; if (--m == 0) { ok = 1; break; } } if (ok) break; } if (ok) { for (int i = 0; i < n; i++) cout << a[i] << " "; cout << '\n'; } } int main() { fast(); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void fast() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); } int a[200005]; map<int, vector<int> > mp; void solve() { int n, k; cin >> n >> k; mp.clear(); memset(a, 0, n * sizeof(a[0])); for (int i = 0; i < n; i++) { int x; cin >> x; if (mp[x].size() < k) mp[x].push_back(i); } int m = 0; for (auto p : mp) m += p.second.size(); m -= m % k; int color = 0; bool ok = 0; for (auto e : mp) { for (auto c : e.second) { a[c] = ++color; color %= k; if (--m == 0) { ok = 1; break; } } if (ok) break; } if (ok) { for (int i = 0; i < n; i++) cout << a[i] << " "; cout << '\n'; } } int main() { fast(); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solve(); } return 0; }
10	 #include <bits/stdc++.h> using namespace std; const int tam = 1e9 + 5; void solve() { int n, k; cin >> n >> k; vector<int> f[n + 1]; for (int i = 1; i <= n; i++) { int aux; cin >> aux; f[aux].push_back(i - 1); } vector<int> ans(n); vector<vector<int>> r; int t = 0; for (int i = 1; i <= n; i++) { if ((int)f[i].size() >= k) { int c = 1; for (auto &first : f[i]) { ans[first] = c; c++; if (c > k) break; } } else { t += (int)f[i].size(); r.push_back(f[i]); } } if (t >= k) { if (t % k) t -= (t % k); int j = 1; int c = 1; for (auto &ri : r) { for (auto &rii : ri) { ans[rii] = c; j++; c++; if (c > k) { c = 1; } else if (j > t) break; } if (j > t) break; } } for (auto &ai : ans) cout << ai << ' '; cout << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int tam = 1e9 + 5; void solve() { int n, k; cin >> n >> k; vector<int> f[n + 1]; for (int i = 1; i <= n; i++) { int aux; cin >> aux; f[aux].push_back(i - 1); } vector<int> ans(n); vector<vector<int>> r; int t = 0; for (int i = 1; i <= n; i++) { if ((int)f[i].size() >= k) { int c = 1; for (auto &first : f[i]) { ans[first] = c; c++; if (c > k) break; } } else { t += (int)f[i].size(); r.push_back(f[i]); } } if (t >= k) { if (t % k) t -= (t % k); int j = 1; int c = 1; for (auto &ri : r) { for (auto &rii : ri) { ans[rii] = c; j++; c++; if (c > k) { c = 1; } if (j > t) break; } if (j > t) break; } } for (auto &ai : ans) cout << ai << ' '; cout << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); return 0; }
11	 #include <bits/stdc++.h> using namespace std; vector<vector<int>> arr(5, vector<int>(200005)); int main() { int t, n, i, ans, a, b, c, d, e, m, j, s, curr; string s1; cin >> t; while (t--) { cin >> n; for (i = 0; i < n; i++) { cin >> s1; a = 0; b = 0; c = 0; d = 0; e = 0; m = s1.size(); for (j = 0; j < m; j++) { if (s1[j] == 'a') a++; else if (s1[j] == 'b') b++; else if (s1[j] == 'c') c++; else if (s1[j] == 'd') d++; else if (s1[i] == 'e') e++; } arr[0][i] = a - (m - a); arr[1][i] = b - (m - b); arr[2][i] = c - (m - c); arr[3][i] = d - (m - d); arr[4][i] = e - (m - e); } for (i = 0; i < 5; i++) sort(arr[i].begin(), arr[i].begin() + n, greater<int>()); ans = 0; for (i = 0; i < 5; i++) { curr = 0; j = 0; s = 0; while (j < n && arr[i][j] > 0) { s += arr[i][j]; curr++; j++; } while (j < n && (s + arr[i][j]) > 0) { s += arr[i][j]; curr++; j++; } ans = max(ans, curr); } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; vector<vector<int>> arr(5, vector<int>(200005)); int main() { int t, n, i, ans, a, b, c, d, e, m, j, s, curr; string s1; cin >> t; while (t--) { cin >> n; for (i = 0; i < n; i++) { cin >> s1; a = 0; b = 0; c = 0; d = 0; e = 0; m = s1.size(); for (j = 0; j < m; j++) { if (s1[j] == 'a') a++; else if (s1[j] == 'b') b++; else if (s1[j] == 'c') c++; else if (s1[j] == 'd') d++; else if (s1[j] == 'e') e++; } arr[0][i] = a - (m - a); arr[1][i] = b - (m - b); arr[2][i] = c - (m - c); arr[3][i] = d - (m - d); arr[4][i] = e - (m - e); } for (i = 0; i < 5; i++) sort(arr[i].begin(), arr[i].begin() + n, greater<int>()); ans = 0; for (i = 0; i < 5; i++) { curr = 0; j = 0; s = 0; while (j < n && arr[i][j] > 0) { s += arr[i][j]; curr++; j++; } while (j < n && (s + arr[i][j]) > 0) { s += arr[i][j]; curr++; j++; } ans = max(ans, curr); } cout << ans << endl; } return 0; }
11	 #include <bits/stdc++.h> using namespace std; int t; int n; char li[400001]; int num[200001][5]; int wat[200001]; int l = 1, r = 0; int res; int getsum(int u) { int orz = 0; for (int i = 1; i <= 5; i++) { orz += num[u][i]; } return orz; } int getrest(int u, int v) { return num[u][v] * 2 - getsum(u); } void dfs(int u) { int ans = 0; l = 1; r = 0; int rst = 0; for (int i = 1; i <= n; i++) { int tmp = getrest(i, u); wat[++r] = tmp; sort(wat + 1, wat + 1 + r); while (l <= r) { if (rst + wat[r] > 0) { ans++; rst += wat[r]; r--; continue; } break; } res = max(res, ans); } } int main() { cin >> t; while (t--) { cin >> n; memset(num, 0, sizeof(num)); res = 0; for (int i = 1; i <= n; i++) { scanf("%s", li + 1); int len = strlen(li + 1); for (int j = 1; j <= len; j++) { num[i][li[j] - 'a' + 1]++; } } for (int i = 1; i <= 5; i++) dfs(i); cout << res << endl; } }	 #include <bits/stdc++.h> using namespace std; int t; int n; char li[400001]; int num[200001][5]; int wat[200001]; int l = 1, r = 0; int res; int getsum(int u) { int orz = 0; for (int i = 1; i <= 5; i++) { orz += num[u][i]; } return orz; } int getrest(int u, int v) { return num[u][v] * 2 - getsum(u); } void dfs(int u) { int ans = 0; l = 1; r = 0; int rst = 0; for (int i = 1; i <= n; i++) { int tmp = getrest(i, u); wat[++r] = tmp; } sort(wat + 1, wat + 1 + r); while (l <= r) { if (rst + wat[r] > 0) { ans++; rst += wat[r]; r--; continue; } break; } res = max(res, ans); } int main() { cin >> t; while (t--) { cin >> n; memset(num, 0, sizeof(num)); res = 0; for (int i = 1; i <= n; i++) { scanf("%s", li + 1); int len = strlen(li + 1); for (int j = 1; j <= len; j++) { num[i][li[j] - 'a' + 1]++; } } for (int i = 1; i <= 5; i++) dfs(i); cout << res << endl; } }
12	 #include <bits/stdc++.h> using namespace std; using namespace std::chrono; void solve() { long long int n, i, m = 0, q = 0, mx = -20000000000000000, mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0, sum = 0, pdt = 1, l = 0, r = 0; cin >> n >> m >> k; if (k % 2 == 0) { if (n % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } if (m == 1) { cout << "NO" << endl; return; } if (n % 2 == 0) { if (m % 2 == 1) { l = (n * (m - 1)) / 2; if (k > l) { cout << "NO" << endl; return; } } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } q = m / 2; if (q > k) { cout << "NO" << endl; return; } k -= q; n--; if (n == 0) { cout << "YES" << endl; return; } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using namespace std::chrono; void solve() { long long int n, i, m = 0, q = 0, mx = -20000000000000000, mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0, sum = 0, pdt = 1, l = 0, r = 0; cin >> n >> m >> k; if (k == 0) { if (n % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } if (m == 1) { cout << "NO" << endl; return; } if (n % 2 == 0) { if (m % 2 == 1) { l = (n * (m - 1)) / 2; if (k > l) { cout << "NO" << endl; return; } } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } q = m / 2; if (q > k) { cout << "NO" << endl; return; } k -= q; n--; if (n == 0) { cout << "YES" << endl; return; } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; while (t--) { solve(); } return 0; }
12	 #include <bits/stdc++.h> using namespace std; using namespace std::chrono; void solve() { long long int n, i, m = 0, q = 0, mx = -20000000000000000, mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0, sum = 0, pdt = 1, l = 0, r = 0; cin >> n >> m >> k; if (k == 0) { if (n % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } if (m == 1) { cout << "NO" << endl; return; } if (n % 2 == 0) { if (m % 2 == 1) { l = (n * (m - 1)) / 2; if (k > l) { cout << "NO" << endl; return; } } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } q = m / 2; if (q < k) { cout << "NO" << endl; return; } k -= q; n--; if (n == 0) { cout << "YES" << endl; return; } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using namespace std::chrono; void solve() { long long int n, i, m = 0, q = 0, mx = -20000000000000000, mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0, sum = 0, pdt = 1, l = 0, r = 0; cin >> n >> m >> k; if (k == 0) { if (n % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } if (m == 1) { cout << "NO" << endl; return; } if (n % 2 == 0) { if (m % 2 == 1) { l = (n * (m - 1)) / 2; if (k > l) { cout << "NO" << endl; return; } } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } q = m / 2; if (q > k) { cout << "NO" << endl; return; } k -= q; n--; if (n == 0) { cout << "YES" << endl; return; } if (k % 2 == 0) cout << "YES" << endl; else cout << "NO" << endl; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; while (t--) { solve(); } return 0; }
12	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, k, p; cin >> n >> m >> k; p = (n * m) / 2 - k; if (n == m) { if (k % 2 == 0) cout << "yes\n"; else cout << "no\n"; } else if (n % 2 != 0) { if ((k - m / 2) % 2 == 0 && k >= m / 2) cout << "yes\n"; else cout << "no\n"; } else if (m % 2 != 0) { if ((p - n / 2) % 2 == 0 && p >= n / 2) cout << "yes\n"; else cout << "no\n"; } else if (n > m) { if (k % m == 0) cout << "yes\n"; else cout << "no\n"; } else { if (p % n == 0) cout << "yes\n"; else cout << "no\n"; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, k, p; cin >> n >> m >> k; p = (n * m) / 2 - k; if (n == m) { if (k % 2 == 0) cout << "yes\n"; else cout << "no\n"; } else if (n % 2 != 0) { if ((k - m / 2) % 2 == 0 && k >= m / 2) cout << "yes\n"; else cout << "no\n"; } else if (m % 2 != 0) { if ((p - n / 2) % 2 == 0 && p >= n / 2) cout << "yes\n"; else cout << "no\n"; } else if (n > m) { if (k % 2 == 0) cout << "yes\n"; else cout << "no\n"; } else { if (p % 2 == 0) cout << "yes\n"; else cout << "no\n"; } } }
12	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n, m, k; cin >> n >> m >> k; long long int a = m / 2; if (k > n * a) { cout << "NO " << endl; return; } if (k == 0) { if (n % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO" << endl; return; } } if (n % 2 == 0) { if (k % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO " << endl; return; } } else { if (k > m / 2) { k = k - m / 2; n--; if (k % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO " << endl; return; } } else { cout << "NO " << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n, m, k; cin >> n >> m >> k; long long int a = m / 2; if (k > n * a) { cout << "NO " << endl; return; } if (k == 0) { if (n % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO" << endl; return; } } if (n % 2 == 0) { if (k % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO " << endl; return; } } else { if (k >= m / 2) { k = k - m / 2; n--; if (k % 2 == 0) { cout << "YES" << endl; return; } else { cout << "NO " << endl; return; } } else { cout << "NO " << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int t; cin >> t; while (t--) solve(); }
12	 #include <bits/stdc++.h> using namespace std; void no() { cout << "NO" << '\n'; ; } void yes() { cout << "YES" << '\n'; ; } void solve() { int n, m, k; cin >> n >> m >> k; if (k > (n) * (m / 2)) { no(); return; } if (n % 2 == 0) { if (k % 2 == 0) { yes(); return; } else { no(); return; } } else { if (k <= m / 2) { no(); return; } else { if ((k - m / 2) % 2 == 0 && n % 2) { yes(); return; } else { no(); return; } } } } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void no() { cout << "NO" << '\n'; ; } void yes() { cout << "YES" << '\n'; ; } void solve() { int n, m, k; cin >> n >> m >> k; if (k > (n) * (m / 2)) { no(); return; } if (n % 2 == 0) { if (k % 2 == 0) { yes(); return; } else { no(); return; } } else { if (k < m / 2) { no(); return; } else { if ((k - m / 2) % 2 == 0 && n % 2) { yes(); return; } else { no(); return; } } } } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) solve(); return 0; }
12	 #include <bits/stdc++.h> using namespace std; int t; int n, m, k; int main(void) { ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr); cin >> t; for (int test_case = 0; test_case < t; test_case++) { cin >> n >> m >> k; bool flag = false; if (n % 2 == 0 && m % 2 == 0) { if (k % 2 == 0) { flag = true; } } else if (n % 2 == 0) { if (m == 1) { if (k == 0) flag = true; } else { if (k % 2 == 0) { if (2 * k <= (m - 1) * n) { flag = true; } } } } else { if (n == 1) { if (2 * k == m * n) { flag = true; } } else { if (k > m / 2) { k -= m / 2; if (k % 2 == 0) { flag = true; } } } } if (flag) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; int t; int n, m, k; int main(void) { ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr); cin >> t; for (int test_case = 0; test_case < t; test_case++) { cin >> n >> m >> k; bool flag = false; if (n % 2 == 0 && m % 2 == 0) { if (k % 2 == 0) { flag = true; } } else if (n % 2 == 0) { if (m == 1) { if (k == 0) flag = true; } else { if (k % 2 == 0) { if (2 * k <= (m - 1) * n) { flag = true; } } } } else { if (n == 1) { if (2 * k == m * n) { flag = true; } } else { if (k >= m / 2) { k -= m / 2; if (k % 2 == 0) { flag = true; } } } } if (flag) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } }
12	 #include <bits/stdc++.h> using namespace std; template <class T> void chmax(T& a, const T& b) { a = max(a, b); } template <class T> void chmin(T& a, const T& b) { a = min(a, b); } using ll = long long; using P = pair<int, int>; using VI = vector<int>; using VVI = vector<VI>; using VL = vector<ll>; using VVL = vector<VL>; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n, m, k; cin >> n >> m >> k; int k1 = k, k2 = n * m / 2 - k1; bool flipped = false; if (m % 2) { flipped = true; swap(n, m); swap(k1, k2); } if (m % 2 == 0) { cout << (k2 % 2 == 0 ? "YES" : "NO") << '\n'; } else { int r = m / 2; bool ok = r <= k1 && r % 2 == k1 % 2 && k2 % 2 == 0; cout << (ok ? "YES" : "NO") << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; template <class T> void chmax(T& a, const T& b) { a = max(a, b); } template <class T> void chmin(T& a, const T& b) { a = min(a, b); } using ll = long long; using P = pair<int, int>; using VI = vector<int>; using VVI = vector<VI>; using VL = vector<ll>; using VVL = vector<VL>; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n, m, k; cin >> n >> m >> k; int k1 = k, k2 = n * m / 2 - k1; bool flipped = false; if (m % 2) { flipped = true; swap(n, m); swap(k1, k2); } if (n % 2 == 0) { cout << (k2 % 2 == 0 ? "YES" : "NO") << '\n'; } else { int r = m / 2; bool ok = r <= k1 && r % 2 == k1 % 2 && k2 % 2 == 0; cout << (ok ? "YES" : "NO") << '\n'; } } }
12	 #include <bits/stdc++.h> using namespace std; unsigned long long gcd(unsigned long long a, unsigned long long b) { if (a == 0) return b; if (b == 0) return a; if (a == 1 || b == 1) return 1; if (a == b) return a; if (a > b) return gcd(b, a % b); else return gcd(a, b % a); } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { int long long n, m, k; cin >> n >> m >> k; if (n == 1) { if (k == m * n / 2) cout << "YES" << "\n"; else cout << "NO" << "\n"; continue; } if (m == 1) { if (k == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; continue; } if (n % 2 == 0 && m % 2 == 0) { if (k % 2 == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; } else if (n % 2 == 1 && m % 2 == 0) { if (k < m / 2) cout << "NO" << "\n"; else if (k > m / 2 && (k - m / 2) % 2 == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; } else { if (k > (m - 1) * n / 2) cout << "NO" << "\n"; else if (k % 2 == 0 || k == (m - 1) * n / 2) cout << "YES" << "\n"; else cout << "NO" << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; unsigned long long gcd(unsigned long long a, unsigned long long b) { if (a == 0) return b; if (b == 0) return a; if (a == 1 || b == 1) return 1; if (a == b) return a; if (a > b) return gcd(b, a % b); else return gcd(a, b % a); } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { int long long n, m, k; cin >> n >> m >> k; if (n == 1) { if (k == m * n / 2) cout << "YES" << "\n"; else cout << "NO" << "\n"; continue; } if (m == 1) { if (k == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; continue; } if (n % 2 == 0 && m % 2 == 0) { if (k % 2 == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; } else if (n % 2 == 1 && m % 2 == 0) { if (k < m / 2) cout << "NO" << "\n"; else if (k >= m / 2 && (k - m / 2) % 2 == 0) cout << "YES" << "\n"; else cout << "NO" << "\n"; } else { if (k > (m - 1) * n / 2) cout << "NO" << "\n"; else if (k % 2 == 0 || k == (m - 1) * n / 2) cout << "YES" << "\n"; else cout << "NO" << "\n"; } } return 0; }
12	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int n, m, k; cin >> n >> m >> k; if (n % 2 == 0 && m % 2 == 0) { if (k % 2) cout << "NO" << '\n'; else cout << "YES" << '\n'; } else if (n % 2 == 1 && m % 2 == 0) { if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - n) / 2 && ((n * m / 2 - k) % 2 == 0)) cout << "YES" << '\n'; else cout << "NO" << '\n'; } else { if (k >= 0 && k <= (n * m - n) / 2 && (k % 2 == 0)) cout << "YES" << '\n'; else cout << "NO" << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int n, m, k; cin >> n >> m >> k; if (n % 2 == 0 && m % 2 == 0) { if (k % 2) cout << "NO" << '\n'; else cout << "YES" << '\n'; } else if (n % 2 == 1 && m % 2 == 0) { if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - m) / 2 && ((n * m / 2 - k) % 2 == 0)) cout << "YES" << '\n'; else cout << "NO" << '\n'; } else { if (k >= 0 && k <= (n * m - n) / 2 && (k % 2 == 0)) cout << "YES" << '\n'; else cout << "NO" << '\n'; } } }
12	 #include <bits/stdc++.h> using namespace std; const long long int maxn = 2 * 1e5 + 10; int main() { long long int t; cin >> t; while (t-- > 0) { long long int n, m, k; cin >> n >> m >> k; if (n % 2 == 0 && m % 2 == 0 && k % 2 == 0) { cout << "YES" << endl; continue; } if (n % 2 == 0 && m % 2 == 1 && k % 2 == 0 && (n * m) - (k * 2) >= n) { cout << "YES" << endl; continue; } k = (n * m) / 2 - k; if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= n) { cout << "YES" << endl; continue; } cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long int maxn = 2 * 1e5 + 10; int main() { long long int t; cin >> t; while (t-- > 0) { long long int n, m, k; cin >> n >> m >> k; if (n % 2 == 0 && m % 2 == 0 && k % 2 == 0) { cout << "YES" << endl; continue; } if (n % 2 == 0 && m % 2 == 1 && k % 2 == 0 && (n * m) - (k * 2) >= n) { cout << "YES" << endl; continue; } k = (n * m) / 2 - k; if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= m) { cout << "YES" << endl; continue; } cout << "NO" << endl; } return 0; }
14	 #include <bits/stdc++.h> using namespace std; const long long maxn = 2e5 + 50; long long n, dp[maxn], k, a[maxn], b[maxn], tp[maxn]; void solve() { for (long long i = 1; i <= n; i++) b[i] = i - a[i]; long long pos = 1, ans = 1e18; for (long long i = 1; i <= n; i++) { dp[i] = (b[i] >= 0); for (long long j = 1; j <= i - 1; j++) { if (b[i] >= 0 and a[i] > a[j] and b[j] <= b[i]) { dp[i] = max(dp[i], dp[j] + 1); } if (dp[i] >= k and b[i] >= 0) { ans = min(ans, b[i]); } } } if (ans != 1e18) cout << ans << '\n'; else cout << -1 << '\n'; } void input() { cin >> n >> k; for (long long i = 1; i <= n; i++) cin >> a[i], dp[i] = 0; } signed main() { ios_base::sync_with_stdio(false), cin.tie(0); ; long long tt; cin >> tt; while (tt--) { input(); solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long maxn = 2e5 + 50; long long n, dp[maxn], k, a[maxn], b[maxn], tp[maxn]; void solve() { for (long long i = 1; i <= n; i++) b[i] = i - a[i]; long long pos = 1, ans = 1e18; for (long long i = 1; i <= n; i++) { dp[i] = (b[i] >= 0); for (long long j = 1; j <= i - 1; j++) { if (b[i] >= 0 and a[i] > a[j] and b[j] <= b[i]) { dp[i] = max(dp[i], dp[j] + 1); } } if (dp[i] >= k and b[i] >= 0) { ans = min(ans, b[i]); } } if (ans != 1e18) cout << ans << '\n'; else cout << -1 << '\n'; } void input() { cin >> n >> k; for (long long i = 1; i <= n; i++) cin >> a[i], dp[i] = 0; } signed main() { ios_base::sync_with_stdio(false), cin.tie(0); ; long long tt; cin >> tt; while (tt--) { input(); solve(); } }
14	 #include <bits/stdc++.h> using namespace std; int task(vector<int> &nums, int k) { int n = nums.size(); vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0)); for (int i = 1; i <= n; i++) { for (int j = 1; j <= n; j++) { dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + ((nums[i - 1] == j) ? 1 : 0)); } } int ans = INT_MAX; for (int i = k; i <= n; i++) { for (int j = 1; j <= n; j++) { if (dp[i][j] >= k) { ans = min(ans, i - j); } } } if (ans == INT_MAX) { return -1; } return ans; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; for (int i = 0; i < t; i++) { int n, k; cin >> n >> k; vector<int> nums(n); for (int j = 0; j < n; j++) { cin >> nums[j]; } int ans = task(nums, k); cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; int task(vector<int> &nums, int k) { int n = nums.size(); vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0)); for (int i = 1; i <= n; i++) { for (int j = 1; j <= i; j++) { dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + ((nums[i - 1] == j) ? 1 : 0)); } } int ans = INT_MAX; for (int i = k; i <= n; i++) { for (int j = 1; j <= n; j++) { if (dp[i][j] >= k) { ans = min(ans, i - j); } } } if (ans == INT_MAX) { return -1; } return ans; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; for (int i = 0; i < t; i++) { int n, k; cin >> n >> k; vector<int> nums(n); for (int j = 0; j < n; j++) { cin >> nums[j]; } int ans = task(nums, k); cout << ans << '\n'; } }
14	 #include <bits/stdc++.h> using namespace std; void solve() { int n, k; cin >> n >> k; vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i]; int dp[n + 1][n + 1]; memset(dp, 0, sizeof(dp)); for (int i = 1; i <= n; i++) { for (int j = 0; j <= i; j++) { dp[i][j] = dp[i - 1][j]; dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + (a[i - 1] == j)); } } for (int i = n; i >= k; i--) { if (dp[n][i] >= k) { cout << n - i << endl; return; } } cout << -1 << endl; } int main() { int t; cin >> t; for (int i = 0; i < t; i++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, k; cin >> n >> k; vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i]; int dp[n + 1][n + 1]; memset(dp, 0, sizeof(dp)); for (int i = 1; i <= n; i++) { for (int j = 1; j <= i; j++) { dp[i][j] = dp[i - 1][j]; dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + (a[i - 1] == j)); } } for (int i = n; i >= k; i--) { if (dp[n][i] >= k) { cout << n - i << endl; return; } } cout << -1 << endl; } int main() { int t; cin >> t; for (int i = 0; i < t; i++) { solve(); } return 0; }
14	 #include <bits/stdc++.h> using namespace std; const int maxn = 2002; void solve() { int n, k; cin >> n >> k; int ans = -1; vector<int> a(n + 1, 0); vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0)); for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) { dp[i][0] = dp[i - 1][0] + (i == a[i]); for (int cnt = 1; cnt <= i; cnt++) { dp[i][cnt] = max(dp[i - 1][cnt - 1], dp[i - 1][cnt] + ((i - cnt) == a[i])); } } for (int i = n; i > 0; i--) if (dp[n][i] >= k) ans = i; cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2002; void solve() { int n, k; cin >> n >> k; int ans = -1; vector<int> a(n + 1, 0); vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0)); for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) { dp[i][0] = dp[i - 1][0] + (i == a[i]); for (int cnt = 1; cnt <= i; cnt++) { dp[i][cnt] = max(dp[i - 1][cnt - 1], dp[i - 1][cnt] + ((i - cnt) == a[i])); } } for (int i = n; i >= 0; i--) if (dp[n][i] >= k) ans = i; cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { solve(); } }
14	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k; cin >> n >> k; vector<long long> v(n); vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12)); for (long long i = 0; i < n; i++) cin >> v[i]; dp[0][0] = dp[0][1] = 0; if (v[0] == 1) dp[0][0] = 1; for (long long i = 1; i < n; i++) { for (long long j = 0; j < i; j++) { if (dp[i - 1][j] >= 0) { long long add = 0; if (v[i] == i + 1 - j) add = 1; dp[i][j] = max(dp[i][j], dp[i - 1][j] + add); if (j + 1 <= n) { dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]); } } } } for (long long i = 0; i < n; i++) { if (dp[n - 1][i] >= k) { cout << i << '\n'; return; } } cout << -1 << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k; cin >> n >> k; vector<long long> v(n); vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12)); for (long long i = 0; i < n; i++) cin >> v[i]; dp[0][0] = dp[0][1] = 0; if (v[0] == 1) dp[0][0] = 1; for (long long i = 1; i < n; i++) { for (long long j = 0; j < n; j++) { if (dp[i - 1][j] >= 0) { long long add = 0; if (v[i] == i + 1 - j) add = 1; dp[i][j] = max(dp[i][j], dp[i - 1][j] + add); if (j + 1 <= n) { dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]); } } } } for (long long i = 0; i < n; i++) { if (dp[n - 1][i] >= k) { cout << i << '\n'; return; } } cout << -1 << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) solve(); }
14	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long N = 2e3 + 10; long long dp[N][N]; long long n, k; long long A[N]; long long dfs(long long i, long long removed) { if (removed < 0) { return -MOD; } if (i == 0) { return removed == 0 ? 0 : -MOD; } long long &ans = dp[i][removed]; if (ans != -1) { return ans; } ans = max(dfs(i - 1, removed) + (A[i] == i - removed), dfs(i - 1, removed - 1)); return ans; } void Perform() { cin >> n >> k; for (long long i = 0; i <= n; ++i) { for (long long j = 0; j <= k; ++j) { dp[i][j] = -1; } } for (long long i = 1; i <= n; ++i) { cin >> A[i]; } for (long long i = 0; i <= n; ++i) { if (dfs(n, i) >= k) { cout << i << "\n"; return; } } cout << "-1\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); long long tc = 1; cin >> tc; while (tc--) { Perform(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long N = 2e3 + 10; long long dp[N][N]; long long n, k; long long A[N]; long long dfs(long long i, long long removed) { if (removed < 0) { return -MOD; } if (i == 0) { return removed == 0 ? 0 : -MOD; } long long &ans = dp[i][removed]; if (ans != -1) { return ans; } ans = max(dfs(i - 1, removed) + (A[i] == i - removed), dfs(i - 1, removed - 1)); return ans; } void Perform() { cin >> n >> k; for (long long i = 0; i <= n; ++i) { for (long long j = 0; j <= n; ++j) { dp[i][j] = -1; } } for (long long i = 1; i <= n; ++i) { cin >> A[i]; } for (long long i = 0; i <= n; ++i) { if (dfs(n, i) >= k) { cout << i << "\n"; return; } } cout << "-1\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); long long tc = 1; cin >> tc; while (tc--) { Perform(); } return 0; }
14	 #include <bits/stdc++.h> const int NMAX = 2e3; int a[1 + NMAX]; int dp[1 + NMAX][1 + NMAX]; int main() { int tests; std::cin >> tests; while (tests--) { int n, k; std::cin >> n >> k; for (int i = 1; i <= n; ++i) std::cin >> a[i]; for (int i = 0; i <= n; ++i) { for (int del = 0; del <= k; ++del) dp[i][del] = 0; } for (int i = 1; i <= n; ++i) { dp[i][0] = dp[i - 1][0] + (a[i] == i); for (int del = 1; del <= k; ++del) dp[i][del] = std::max(dp[i - 1][del - 1], dp[i - 1][del] + (a[i] == i - del)); } bool found = false; for (int del = 0; del <= k; ++del) { if (dp[n][del] >= k) { std::cout << del << '\n'; found = true; break; } } if (!found) std::cout << "-1\n"; } return 0; }	 #include <bits/stdc++.h> const int NMAX = 2e3; int a[1 + NMAX]; int dp[1 + NMAX][1 + NMAX]; int main() { int tests; std::cin >> tests; while (tests--) { int n, k; std::cin >> n >> k; for (int i = 1; i <= n; ++i) std::cin >> a[i]; for (int i = 0; i <= n; ++i) { for (int del = 0; del <= k; ++del) dp[i][del] = 0; } for (int i = 1; i <= n; ++i) { dp[i][0] = dp[i - 1][0] + (a[i] == i); for (int del = 1; del <= i; ++del) dp[i][del] = std::max(dp[i - 1][del - 1], dp[i - 1][del] + (a[i] == i - del)); } bool found = false; for (int del = 0; del <= n; ++del) { if (dp[n][del] >= k) { std::cout << del << '\n'; found = true; break; } } if (!found) std::cout << "-1\n"; } return 0; }
14	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k; cin >> n >> k; vector<long long> v(n); vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12)); for (long long i = 0; i < n; i++) cin >> v[i]; dp[0][0] = dp[0][1] = 0; if (v[0] == 1) dp[0][0] = 1; for (long long i = 1; i < n; i++) { for (long long j = 0; j < i; j++) { if (dp[i - 1][j] >= 0) { long long add = 0; if (v[i] == i + 1 - j) add = 1; dp[i][j] = max(dp[i][j], dp[i - 1][j] + add); if (j + 1 <= n) { dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]); } } } } for (long long i = 0; i < n; i++) { if (dp[n - 1][i] >= k) { cout << i << '\n'; return; } } cout << -1 << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k; cin >> n >> k; vector<long long> v(n); vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12)); for (long long i = 0; i < n; i++) cin >> v[i]; dp[0][0] = dp[0][1] = 0; if (v[0] == 1) dp[0][0] = 1; for (long long i = 1; i < n; i++) { for (long long j = 0; j <= i; j++) { if (dp[i - 1][j] >= 0) { long long add = 0; if (v[i] == i + 1 - j) add = 1; dp[i][j] = max(dp[i][j], dp[i - 1][j] + add); if (j + 1 <= n) { dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]); } } } } for (long long i = 0; i <= n; i++) { if (dp[n - 1][i] >= k) { cout << i << '\n'; return; } } cout << -1 << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) solve(); }
14	 #include <bits/stdc++.h> using namespace std; const int maxn = 2004; int nums[maxn]; int dp[maxn][maxn]; int n, k; void solve() { cin >> n >> k; for (int i = 1; i <= n; i++) cin >> nums[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= i - 1; j++) { dp[i][j] = dp[i - 1][j] + (i - j == nums[i]); } for (int j = 1; j < i; j++) { dp[i][j] = max(dp[i][j], dp[i - 1][j - 1]); } } int ans = -1; for (int i = 1; i <= n; i++) { if (dp[n][i] >= k) { ans = i; break; } } cout << ans << endl; for (int i = 0; i <= n; i++) for (int u = 0; u <= n; u++) dp[i][u] = 0; } int main() { int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2004; int nums[maxn]; int dp[maxn][maxn]; int n, k; void solve() { cin >> n >> k; for (int i = 1; i <= n; i++) cin >> nums[i]; for (int i = 1; i <= n; i++) { for (int j = 0; j <= i - 1; j++) { dp[i][j] = dp[i - 1][j] + (i - j == nums[i]); } for (int j = 1; j < i; j++) { dp[i][j] = max(dp[i][j], dp[i - 1][j - 1]); } } int ans = -1; for (int i = 0; i <= n; i++) { if (dp[n][i] >= k) { ans = i; break; } } cout << ans << endl; for (int i = 0; i <= n; i++) for (int u = 0; u <= n; u++) dp[i][u] = 0; } int main() { int t; cin >> t; while (t--) { solve(); } }
14	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long N = 2e3 + 10; long long dp[N][N]; long long n, k; long long A[N]; long long dfs(long long i, long long removed) { if (removed < 0) { return -MOD; } if (i == 0) { return removed == 0 ? 0 : -MOD; } long long &ans = dp[i][removed]; if (ans != -1) { return ans; } ans = dfs(i - 1, removed) + (A[i] == i - removed); ans = max(ans, dfs(i - 1, removed - 1)); return ans; } void Perform() { cin >> n >> k; for (long long i = 0; i <= n; ++i) { for (long long j = 0; j <= k; ++j) { dp[i][j] = -1; } } for (long long i = 1; i <= n; ++i) { cin >> A[i]; } for (long long i = 0; i <= n; ++i) { if (dfs(n, i) >= k) { cout << i << "\n"; return; } } cout << "-1\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); long long tc = 1; cin >> tc; while (tc--) { Perform(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long N = 2e3 + 10; long long dp[N][N]; long long n, k; long long A[N]; long long dfs(long long i, long long removed) { if (removed < 0) { return -MOD; } if (i == 0) { return removed == 0 ? 0 : -MOD; } long long &ans = dp[i][removed]; if (ans != -1) { return ans; } ans = dfs(i - 1, removed) + (A[i] == i - removed); ans = max(ans, dfs(i - 1, removed - 1)); return ans; } void Perform() { cin >> n >> k; for (long long i = 0; i <= n; ++i) { for (long long j = 0; j <= n; ++j) { dp[i][j] = -1; } } for (long long i = 1; i <= n; ++i) { cin >> A[i]; } for (long long i = 0; i <= n; ++i) { if (dfs(n, i) >= k) { cout << i << "\n"; return; } } cout << "-1\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); long long tc = 1; cin >> tc; while (tc--) { Perform(); } return 0; }
14	 #include <bits/stdc++.h> using namespace std; int T; int n, k; int a[2010]; int dp[2010][2010], mx[2010]; template <typename Tp> void read(Tp &x) { x = 0; int f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); } x *= f; } int main() { read(T); while (T--) { read(n), read(k); for (int i = 1; i <= n; i++) read(a[i]); for (int i = 1; i <= n; i++) { for (int j = 0; j < i; j++) { dp[i][j] = mx[i - j - 1] + (i - j == a[i]); } for (int j = 0; j <= i; j++) mx[j] = max(mx[j], dp[i][i - j]); } bool flag = false; for (int i = 0; i < n; i++) { if (dp[n][i] >= k) { flag = true; printf("%d\n", i); break; } } if (!flag) printf("-1\n"); for (int i = 1; i <= n; i++) for (int j = 0; j < n; j++) dp[i][j] = mx[j] = 0; } return 0; }	 #include <bits/stdc++.h> using namespace std; int T; int n, k; int a[2010]; int dp[2010][2010], mx[2010]; template <typename Tp> void read(Tp &x) { x = 0; int f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); } x *= f; } int main() { read(T); while (T--) { read(n), read(k); for (int i = 1; i <= n; i++) read(a[i]); for (int i = 1; i <= n; i++) { for (int j = 0; j < i; j++) { dp[i][j] = mx[i - j - 1] + (i - j == a[i]); } for (int j = 0; j <= i; j++) mx[j] = max(mx[j], dp[i][i - j]); } bool flag = false; for (int i = 0; i < n; i++) { if (dp[n][i] >= k) { flag = true; printf("%d\n", i); break; } } if (!flag) printf("-1\n"); for (int i = 1; i <= n; i++) for (int j = 0; j <= n; j++) dp[i][j] = mx[j] = 0; } return 0; }
14	 #include <bits/stdc++.h> constexpr int N = 2005; int T, n, k; int a[N], f[N][N]; int main() { std::ios::sync_with_stdio(false), std::cin.tie(nullptr); std::cin >> T; while (T--) { std::cin >> n >> k; for (int i = 1; i <= n; ++i) std::cin >> a[i], a[i] = i - a[i]; for (int i = 1; i <= n; ++i) for (int j = 0; j <= i; ++j) { f[i][j] = f[i - 1][j]; if (a[i] == j) ++f[i][j]; if (j) f[i][j] = std::max(f[i][j], f[i - 1][j - 1]); } bool ok = false; for (int i = 1; i <= n; ++i) if (f[n][i] >= k) { std::cout << i << '\n'; ok = true; break; } if (!ok) std::cout << "-1\n"; } return 0; }	 #include <bits/stdc++.h> constexpr int N = 2005; int T, n, k; int a[N], f[N][N]; int main() { std::ios::sync_with_stdio(false), std::cin.tie(nullptr); std::cin >> T; while (T--) { std::cin >> n >> k; for (int i = 1; i <= n; ++i) std::cin >> a[i], a[i] = i - a[i]; for (int i = 1; i <= n; ++i) for (int j = 0; j <= i; ++j) { f[i][j] = f[i - 1][j]; if (a[i] == j) ++f[i][j]; if (j) f[i][j] = std::max(f[i][j], f[i - 1][j - 1]); } bool ok = false; for (int i = 0; i <= n; ++i) if (f[n][i] >= k) { std::cout << i << '\n'; ok = true; break; } if (!ok) std::cout << "-1\n"; } return 0; }
14	 #include <bits/stdc++.h> #pragma GCC optimize("O3") #pragma GCC target("avx2") using namespace std; const int mxN = 2000; int t, n, k; int a[mxN]; int dp[mxN + 1][mxN + 1]; void solve() { cin >> n >> k; for (int i = 0; i < n; ++i) { cin >> a[i]; } for (int i = 1; i <= n; ++i) { for (int j = 1; j <= n; ++j) { dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1]); if (a[i - 1] == j) dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 1); } } for (int i = n; i >= 0; --i) { if (dp[n][i] >= k) { cout << n - i << '\n'; return; } } cout << -1 << '\n'; return; } int main() { ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0); ; cin >> t; for (int x = 0; x < t; ++x) { solve(); } }	 #include <bits/stdc++.h> #pragma GCC optimize("O3") #pragma GCC target("avx2") using namespace std; const int mxN = 2000; int t, n, k; int a[mxN]; int dp[mxN + 1][mxN + 1]; void solve() { cin >> n >> k; for (int i = 0; i < n; ++i) { cin >> a[i]; } for (int i = 1; i <= n; ++i) { for (int j = 1; j <= i; ++j) { dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1]); if (a[i - 1] == j) dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 1); } } for (int i = n; i >= 0; --i) { if (dp[n][i] >= k) { cout << n - i << '\n'; return; } } cout << -1 << '\n'; return; } int main() { ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0); ; cin >> t; for (int x = 0; x < t; ++x) { solve(); } }
14	 #include <bits/stdc++.h> using namespace std; using ll = long long; constexpr ll mod = 1000000007; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout << fixed << setprecision(20); int T; cin >> T; while (T--) { int n, k; cin >> n >> k; vector<int> p(n); for (int i = 0; i < n; i++) { cin >> p[i]; p[i]--; } vector<int> f(n + 1, -1); f[0] = 0; for (int i = 0; i < n; i++) { vector<int> dp(n + 1, -1); dp[0] = 0; for (int j = 0; j <= i; j++) { if (p[i] == i - j) { dp[j] = max(dp[j], f[j] + 1); } else { dp[j] = max(dp[j], f[j]); } dp[j + 1] = max(dp[j + 1], dp[j]); } swap(dp, f); } int ans = -1; for (int i = 0; i <= n; i++) { if (f[i] >= k) { ans = i; break; } } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; constexpr ll mod = 1000000007; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout << fixed << setprecision(20); int T; cin >> T; while (T--) { int n, k; cin >> n >> k; vector<int> p(n); for (int i = 0; i < n; i++) { cin >> p[i]; p[i]--; } vector<int> f(n + 1, -1); f[0] = 0; for (int i = 0; i < n; i++) { vector<int> dp(n + 1, -1); dp[0] = 0; for (int j = 0; j <= i; j++) { if (p[i] == i - j) { dp[j] = max(dp[j], f[j] + 1); } else { dp[j] = max(dp[j], f[j]); } dp[j + 1] = max(dp[j + 1], f[j]); } swap(dp, f); } int ans = -1; for (int i = 0; i <= n; i++) { if (f[i] >= k) { ans = i; break; } } cout << ans << '\n'; } return 0; }
16	 #include <bits/stdc++.h> using namespace std; using namespace __detail; template <typename A, typename B> inline void chmin(A &a, B b) { if (a > b) a = b; } template <typename A, typename B> inline void chmax(A &a, B b) { if (a < b) a = b; } int getMinimum(string s, int start) { int mn = start; for (int i = start; i < s.length(); i++) { if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[mn] - 'a')) { mn = i; } } return mn; } void solve() { int n; string s; cin >> n; cin >> s; set<int> st; for (int i = 0; i < n; i++) { int mn = getMinimum(s, i); char temp = s[i]; s[i] = s[mn]; s[mn] = temp; if (i != mn) { st.insert(i); st.insert(mn); } } int sz = st.size(); cout << sz << endl; } int main() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; using namespace __detail; template <typename A, typename B> inline void chmin(A &a, B b) { if (a > b) a = b; } template <typename A, typename B> inline void chmax(A &a, B b) { if (a < b) a = b; } int getMinimum(string s, int start) { int mn = start; for (int i = start; i < s.length(); i++) { if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[start] - 'a')) { mn = i; } } return mn; } void solve() { int n; string s; cin >> n; cin >> s; set<int> st; for (int i = 0; i < n; i++) { int mn = getMinimum(s, i); char temp = s[i]; s[i] = s[mn]; s[mn] = temp; if (i != mn) { st.insert(i); st.insert(mn); } } int sz = st.size(); cout << sz << endl; } int main() { ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; int t; cin >> t; while (t--) { solve(); } }
16	 #include <bits/stdc++.h> void sort(char string[], int len); int main() { int tc; scanf("%d", &tc); for (int i = 0; i < tc; i++) { int len; scanf("%d", &len); char string[len]; scanf("%s", &string); char dup[len]; int l = 0; while (l <= len) { dup[l] = string[l]; l++; } sort(string, len); int count = 0; for (int i = 0; i < len; i++) { if (dup[i] != string[i]) { count++; } } printf("%d", count); } return 0; } void sort(char string[], int len) { for (int i = 0; i < len - 1; i++) { for (int j = 0; j < len - 1 - i; j++) { if (string[j] > string[j + 1]) { int temp; temp = string[j]; string[j] = string[j + 1]; string[j + 1] = temp; } } } }	 #include <bits/stdc++.h> void sort(char string[], int len); int main() { int tc; scanf("%d", &tc); for (int i = 0; i < tc; i++) { int len; scanf("%d", &len); char string[len]; scanf("%s", &string); char dup[len]; int l = 0; while (l < len) { dup[l] = string[l]; l++; } sort(string, len); int count = 0; for (int i = 0; i < len; i++) { if (dup[i] != string[i]) { count++; } } printf("%d\n", count); } return 0; } void sort(char string[], int len) { for (int i = 0; i < len - 1; i++) { for (int j = 0; j < len - 1 - i; j++) { if (string[j] > string[j + 1]) { int temp; temp = string[j]; string[j] = string[j + 1]; string[j + 1] = temp; } } } }
16	 #include <bits/stdc++.h> void sort(char string[], int len); int main() { int tc; scanf("%d", &tc); for (int i = 0; i < tc; i++) { int len; scanf("%d", &len); char string[len]; scanf("%s", &string); char dup[len]; int l = 0; while (l <= len) { dup[l] = string[l]; l++; } sort(string, len); int count = 0; for (int i = 0; i < len; i++) { if (dup[i] != string[i]) { count++; } } printf("%d\n", count); } return 0; } void sort(char string[], int len) { for (int i = 0; i < len - 1; i++) { for (int j = 0; j < len - 1 - i; j++) { if (string[j] > string[j + 1]) { int temp; temp = string[j]; string[j] = string[j + 1]; string[j + 1] = temp; } } } }	 #include <bits/stdc++.h> void sort(char string[], int len); int main() { int tc; scanf("%d", &tc); for (int i = 0; i < tc; i++) { int len; scanf("%d", &len); char string[len]; scanf("%s", &string); char dup[len]; int l = 0; while (l < len) { dup[l] = string[l]; l++; } sort(string, len); int count = 0; for (int i = 0; i < len; i++) { if (dup[i] != string[i]) { count++; } } printf("%d\n", count); } return 0; } void sort(char string[], int len) { for (int i = 0; i < len - 1; i++) { for (int j = 0; j < len - 1 - i; j++) { if (string[j] > string[j + 1]) { int temp; temp = string[j]; string[j] = string[j + 1]; string[j + 1] = temp; } } } }
18	 #include <bits/stdc++.h> using namespace std; int T, N, K, id[101 * 2], a[101], b[101]; bool vis[101 * 2]; int get() { int x = 0; char c = getchar(); while (c < '0' || c > '9') c = getchar(); while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar(); return x; } bool cross(int a, int b, int c, int d) { if (a > b) swap(a, b); if (c > a && c < b) return d < a || d > b; if (d > a && d < b) return c < a || c > b; return 0; } int main() { T = get(); while (T--) { N = get(), K = get(); for (int i = 1; i <= N * 2; i++) vis[i] = 0; for (int i = 1; i <= K; i++) a[i] = get(), b[i] = get(), vis[a[i]] = 1, vis[b[i]] = 1; int j = 1; for (int i = 1; i <= N - K << 1; i++) { while (vis[j]) j++; id[i] = j++; } for (int i = K + 1; i <= N; i++) a[i] = id[i - K], b[i] = id[i + N - K * 2]; int ans = 0; for (int i = 1; i <= N; i++) for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[i]); cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int T, N, K, id[101 * 2], a[101], b[101]; bool vis[101 * 2]; int get() { int x = 0; char c = getchar(); while (c < '0' || c > '9') c = getchar(); while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar(); return x; } bool cross(int a, int b, int c, int d) { if (a > b) swap(a, b); if (c > a && c < b) return d < a || d > b; if (d > a && d < b) return c < a || c > b; return 0; } int main() { T = get(); while (T--) { N = get(), K = get(); for (int i = 1; i <= N * 2; i++) vis[i] = 0; for (int i = 1; i <= K; i++) a[i] = get(), b[i] = get(), vis[a[i]] = 1, vis[b[i]] = 1; int j = 1; for (int i = 1; i <= N - K << 1; i++) { while (vis[j]) j++; id[i] = j++; } for (int i = K + 1; i <= N; i++) a[i] = id[i - K], b[i] = id[i + N - K * 2]; int ans = 0; for (int i = 1; i <= N; i++) for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[j]); cout << ans << '\n'; } return 0; }
18	 #include <bits/stdc++.h> using namespace std; void read(vector<long long> &a) { for (long long i = 0; i < a.size(); i++) cin >> a[i]; } void read(vector<string> &a) { for (long long i = 0; i < a.size(); i++) cin >> a[i]; } bool intersect(pair<long long, long long> c, pair<long long, long long> d) { if (c.first > d.first) swap(c, d); return c.second > d.first and c.second < d.second; } void solve() { long long n, k; cin >> n >> k; vector<pair<long long, long long>> a; vector<bool> used(2 * n + 1, false); for (long long i = 0; i < k; i++) { long long x, y; cin >> x >> y; if (x < y) a.push_back({x, y}); else a.push_back({y, x}); used[x] = used[y] = true; } vector<long long> left; for (long long i = 1; i <= 2 * n; i++) { if (!used[i]) left.push_back(i); } for (long long i = 1; i <= n - k; i++) { a.push_back({left[i], left[n - k + i]}); } long long ans = 0; for (long long i = 0; i < n; i++) { for (long long j = i + 1; j < n; j++) { if (intersect(a[i], a[j])) ans++; } } cout << ans << "\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void read(vector<long long> &a) { for (long long i = 0; i < a.size(); i++) cin >> a[i]; } void read(vector<string> &a) { for (long long i = 0; i < a.size(); i++) cin >> a[i]; } bool intersect(pair<long long, long long> c, pair<long long, long long> d) { if (c.first > d.first) swap(c, d); return c.second > d.first and c.second < d.second; } void solve() { long long n, k; cin >> n >> k; vector<pair<long long, long long>> a; vector<bool> used(2 * n + 1, false); for (long long i = 0; i < k; i++) { long long x, y; cin >> x >> y; if (x < y) a.push_back({x, y}); else a.push_back({y, x}); used[x] = used[y] = true; } vector<long long> left; for (long long i = 1; i <= 2 * n; i++) { if (!used[i]) left.push_back(i); } for (long long i = 0; i < n - k; i++) { a.push_back({left[i], left[n - k + i]}); } long long ans = 0; for (long long i = 0; i < n; i++) { for (long long j = i + 1; j < n; j++) { if (intersect(a[i], a[j])) ans++; } } cout << ans << "\n"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } }
18	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; int free[210]{0}; int a[105], b[105]; long long int l = 2 * n; for (int i = 0; i < k; i++) { l -= 2; cin >> a[i] >> b[i]; free[a[i]]++; free[b[i]]++; } long long int ans = ((n - k) * (n - k - 1)) / 2; for (int i = 0; i < k; i++) { int x = a[i]; int y = b[i]; if (x > y) swap(x, y); long long int cnt = 0; for (int j = x + 1; j < y; j++) { if (!free[j]) cnt++; } ans += min(cnt, l - cnt); for (int j = i + 1; i < k; i++) { int u = a[j]; int v = b[j]; if ((x < u && u < y) ^ (x < v && v < y)) ans++; } } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; int free[210]{0}; int a[105], b[105]; long long int l = 2 * n; for (int i = 0; i < k; i++) { l -= 2; cin >> a[i] >> b[i]; free[a[i]]++; free[b[i]]++; } long long int ans = ((n - k) * (n - k - 1)) / 2; for (int i = 0; i < k; i++) { int x = a[i]; int y = b[i]; if (x > y) swap(x, y); long long int cnt = 0; for (int j = x + 1; j < y; j++) { if (!free[j]) cnt++; } ans += min(cnt, l - cnt); for (int j = i + 1; j < k; j++) { int u = a[j]; int v = b[j]; if ((x < u && u < y) ^ (x < v && v < y)) ans++; } } cout << ans << endl; } }
19	 #include <bits/stdc++.h> using namespace std; using ll = long long; using P = pair<ll, ll>; using vec = vector<ll>; using vecp = vector<P>; using mat = vector<vec>; using matp = vector<vecp>; const ll MOD = 998244353; const ll INF = 1e18; ll Pow(ll a, ll n) { if (n == 0) return 1; if (n == 1) return a; if (n % 2 == 1) return (a * Pow(a, n - 1)); ll t = Pow(a, n / 2); return (t * t); } int main() { ll T; cin >> T; for (long long l = 0; l < (T); ++l) { ll N; cin >> N; vec A(N); for (long long i = 0; i < (N); ++i) cin >> A.at(i); if (N == 1) { if (A.at(0) == 0) { cout << "YES" << endl; } else { cout << "NO" << endl; } continue; } ll t = 0; for (long long i = 0; i < (N); ++i) { for (long long tmp = 0; tmp < (Pow(3, N - 1)); ++tmp) { ll k = 0, s = tmp; for (long long j = 0; j < (N); ++j) { if (j == i) { continue; } if (s % 3 == 1) k += A.at(j); else if (s % 3 == 2) k -= A.at(i); s /= 3; } if (k == A.at(i)) t = 1; } } if (t == 1) { cout << "YES" << endl; } else { cout << "NO" << endl; } } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using P = pair<ll, ll>; using vec = vector<ll>; using vecp = vector<P>; using mat = vector<vec>; using matp = vector<vecp>; const ll MOD = 998244353; const ll INF = 1e18; ll Pow(ll a, ll n) { if (n == 0) return 1; if (n == 1) return a; if (n % 2 == 1) return (a * Pow(a, n - 1)); ll t = Pow(a, n / 2); return (t * t); } int main() { ll T; cin >> T; for (long long l = 0; l < (T); ++l) { ll N; cin >> N; vec A(N); for (long long i = 0; i < (N); ++i) cin >> A.at(i); if (N == 1) { if (A.at(0) == 0) { cout << "YES" << endl; } else { cout << "NO" << endl; } continue; } ll t = 0; for (long long i = 0; i < (N); ++i) { for (long long tmp = 0; tmp < (Pow(3, N - 1)); ++tmp) { ll k = 0, s = tmp; for (long long j = 0; j < (N); ++j) { if (j == i) { continue; } if (s % 3 == 1) k += A.at(j); else if (s % 3 == 2) k -= A.at(j); s /= 3; } if (k == A.at(i)) t = 1; } } if (t == 1) { cout << "YES" << endl; } else { cout << "NO" << endl; } } }
19	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; int a[20], n; int main() { int t; cin >> t; while (t--) { cin >> n; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 1; for (int i = 0; i < n; i++) x *= 3; bool ans = 0; for (int i = 1; i < x; i++) { int sum = 0; long long y = i; for (int j = 0; j < n; j++) { if (y % 3 == 2) sum -= a[i]; else if (y % 3) sum += a[i]; y /= 3; } if (!sum) { ans = 1; break; } } if (ans) cout << "YES\n"; else cout << "NO\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; int a[20], n; int main() { int t; cin >> t; while (t--) { cin >> n; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 1; for (int i = 0; i < n; i++) x *= 3; bool ans = 0; for (int i = 1; i < x; i++) { int sum = 0; long long y = i; for (int j = 0; j < n; j++) { if (y % 3 == 2) sum -= a[j]; else if (y % 3) sum += a[j]; y /= 3; } if (!sum) { ans = 1; break; } } if (ans) cout << "YES\n"; else cout << "NO\n"; } return 0; }
20	 #include <bits/stdc++.h> using namespace std; int n, k; struct node { int left; int right; int color; bool operator<(const node &b) const { return right > b.right; } }; int t[10005]; int last[105], weight[10005]; bool vis[105]; pair<int, int> ans[105]; int main() { int x; vector<node> que; scanf("%d%d", &n, &k); for (int i = 1; i <= n * k; i++) { scanf("%d", &x); if (last[x]) que.push_back((node){last[x], i, x}); last[x] = i; } int limit = (n + k - 2) / (k - 1); sort(que.begin(), que.end()); for (auto i : que) { if (vis[i.color]) continue; int times = 0; for (int j = i.left; j <= i.right; j++) times = max(times, weight[j]); if (times < limit) { ans[i.color] = make_pair(i.left, i.right); vis[i.color] = 1; for (int j = i.left; j <= i.right; j++) weight[j]++; } } for (int i = 1; i <= n; i++) printf("%d %d\n", ans[i].first, ans[i].second); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, k; struct node { int left; int right; int color; bool operator<(const node &b) const { return right < b.right; } }; int t[10005]; int last[105], weight[10005]; bool vis[105]; pair<int, int> ans[105]; int main() { int x; vector<node> que; scanf("%d%d", &n, &k); for (int i = 1; i <= n * k; i++) { scanf("%d", &x); if (last[x]) que.push_back((node){last[x], i, x}); last[x] = i; } int limit = (n + k - 2) / (k - 1); sort(que.begin(), que.end()); for (auto i : que) { if (vis[i.color]) continue; int times = 0; for (int j = i.left; j <= i.right; j++) times = max(times, weight[j]); if (times < limit) { ans[i.color] = make_pair(i.left, i.right); vis[i.color] = 1; for (int j = i.left; j <= i.right; j++) weight[j]++; } } for (int i = 1; i <= n; i++) printf("%d %d\n", ans[i].first, ans[i].second); return 0; }
20	 #include <bits/stdc++.h> struct interval { int l, r; int operator<(const interval &i) const { return r < i.r; } } is[10005]; int n, k, a[10005], tot, app[105][105], cnt[105], ci, lim, sel[105]; int sell[105], selr[105]; int main() { scanf("%d%d", &n, &k); tot = n * k; lim = (n + k - 2) / (k - 1); for (int i = 1; i <= tot; ++i) { scanf("%d", a + i); app[a[i]][++cnt[a[i]]] = i; } for (int i = 1; i <= n; ++i) for (int j = 1; j < k; ++j) is[++ci] = (interval){app[i][j], app[i][j + 1]}; std::sort(is + 1, is + ci + 1); memset(cnt, 0, sizeof cnt); for (int i = 1; i <= ci; ++i) if (!sel[a[is[i].l]]) { int can = 1; for (int j = is[i].l; j <= is[i].r; ++j) can &= cnt[j] < lim; if (can) { for (int j = is[i].l; j <= is[i].r; ++j) ++cnt[j]; sell[a[is[i].l]] = is[i].l; selr[a[is[i].r]] = is[i].r; sel[a[is[i].l]] = 1; } } for (int i = 1; i <= n; ++i) printf("%d %d\n", sell[i], selr[i]); return 0; }	 #include <bits/stdc++.h> struct interval { int l, r; int operator<(const interval &i) const { return r < i.r; } } is[10005]; int n, k, a[10005], tot, app[105][105], cnt[10005], ci, lim, sel[105]; int sell[105], selr[105]; int main() { scanf("%d%d", &n, &k); tot = n * k; lim = (n + k - 2) / (k - 1); for (int i = 1; i <= tot; ++i) { scanf("%d", a + i); app[a[i]][++cnt[a[i]]] = i; } for (int i = 1; i <= n; ++i) for (int j = 1; j < k; ++j) is[++ci] = (interval){app[i][j], app[i][j + 1]}; std::sort(is + 1, is + ci + 1); memset(cnt, 0, sizeof cnt); for (int i = 1; i <= ci; ++i) if (!sel[a[is[i].l]]) { int can = 1; for (int j = is[i].l; j <= is[i].r; ++j) can &= cnt[j] < lim; if (can) { for (int j = is[i].l; j <= is[i].r; ++j) ++cnt[j]; sell[a[is[i].l]] = is[i].l; selr[a[is[i].r]] = is[i].r; sel[a[is[i].l]] = 1; } } for (int i = 1; i <= n; ++i) printf("%d %d\n", sell[i], selr[i]); return 0; }
20	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 1e2 + 14; int n, k, a[MAX_N], b[MAX_N], c[MAX_N * MAX_N]; uint8_t blocked[MAX_N * MAX_N]; int main() { ios::sync_with_stdio(0), cin.tie(0); cin >> n >> k; for (int i = 0; i < n * k; ++i) { cin >> c[i]; --c[i]; if (!b[c[i]]) { int j = i - 1; while (j >= 0 && c[j] != c[i]) --j; if (j >= 0 && *max_element(blocked + j, blocked + i) <= (n + k - 2) / (k - 1)) { a[c[i]] = j; b[c[i]] = i; while (j < i) ++blocked[j++]; } } } assert(*min_element(b, b + n)); for (int i = 0; i < n; ++i) cout << a[i] + 1 << ' ' << b[i] + 1 << '\n'; }	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 1e2 + 14; int n, k, a[MAX_N], b[MAX_N], c[MAX_N * MAX_N]; uint8_t blocked[MAX_N * MAX_N]; int main() { ios::sync_with_stdio(0), cin.tie(0); cin >> n >> k; for (int i = 0; i < n * k; ++i) { cin >> c[i]; --c[i]; if (!b[c[i]]) { int j = i - 1; while (j >= 0 && c[j] != c[i]) --j; if (j >= 0 && *max_element(blocked + j, blocked + i) < (n + k - 2) / (k - 1)) { a[c[i]] = j; b[c[i]] = i; while (j < i) ++blocked[j++]; } } } assert(*min_element(b, b + n)); for (int i = 0; i < n; ++i) cout << a[i] + 1 << ' ' << b[i] + 1 << '\n'; }
21	 #include <bits/stdc++.h> using namespace std; vector<int> x, y, s, dp; void solve() { int n; cin >> n; x.push_back(0); y.push_back(0); s.push_back(0); dp.push_back(0); for (int i = 1; i < n + 1; i++) { x.push_back(0); y.push_back(0); s.push_back(0); dp.push_back(0); cin >> x[i] >> y[i] >> s[i]; } for (int i = 1; i < n + 1; i++) { int tmp = lower_bound(x.begin(), x.end(), y[i]) - x.begin(); dp[i] = dp[i - 1] + dp[i - 1] - dp[tmp - 1] + (x[i] - y[i]); dp[i] = (dp[i] + (long long)(998244353)) % (long long)(998244353); } long long ans = x[n] + 1; ans %= (long long)(998244353); for (int i = 1; i < n + 1; i++) { if (s[i]) { ans += dp[i] - dp[i - 1]; ans = (ans + (long long)(998244353)) % (long long)(998244353); } } cout << ans << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); ; int t; t = 1; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; vector<long long> x, y, s, dp; void solve() { int n; cin >> n; x.push_back(0); y.push_back(0); s.push_back(0); dp.push_back(0); for (int i = 1; i < n + 1; i++) { x.push_back(0); y.push_back(0); s.push_back(0); dp.push_back(0); cin >> x[i] >> y[i] >> s[i]; } for (int i = 1; i < n + 1; i++) { int tmp = lower_bound(x.begin(), x.end(), y[i]) - x.begin(); dp[i] = dp[i - 1] + dp[i - 1] - dp[tmp - 1] + (x[i] - y[i]); dp[i] = (dp[i] + (long long)(998244353)) % (long long)(998244353); } long long ans = x[n] + 1; ans %= (long long)(998244353); for (int i = 1; i < n + 1; i++) { if (s[i]) { ans += dp[i] - dp[i - 1]; ans = (ans + (long long)(998244353)) % (long long)(998244353); } } cout << ans << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); ; int t; t = 1; while (t--) { solve(); } }
24	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1000000007; const long long maxN = 1e5 + 5; void debug(vector<long long> vec) { long long n = vec.size(); for (long long i = 0; i < n; i++) cout << vec[i] << " "; cout << endl; return; } long long gcd(long long a, long long b) { if (b > a) { return gcd(b, a); } if (b == 0) { return a; } return gcd(b, a % b); } long long power(long long x, long long y, long long p) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; } void solve() { long long n; cin >> n; long long ans = n / 10; if (n % 9 == 0) { cout << ans + 1 << endl; } else { cout << ans << endl; } } int32_t main() { ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0); long long t = 1; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1000000007; const long long maxN = 1e5 + 5; void debug(vector<long long> vec) { long long n = vec.size(); for (long long i = 0; i < n; i++) cout << vec[i] << " "; cout << endl; return; } long long gcd(long long a, long long b) { if (b > a) { return gcd(b, a); } if (b == 0) { return a; } return gcd(b, a % b); } long long power(long long x, long long y, long long p) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; } void solve() { long long n; cin >> n; long long ans = n / 10; if (n % 10 == 9) { cout << ans + 1 << endl; } else { cout << ans << endl; } } int32_t main() { ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0); long long t = 1; cin >> t; while (t--) { solve(); } }
25	 #include <bits/stdc++.h> using namespace std; bool equ(string s, string t, int n, int m, int l) { if (m == t.length()) return 1; if (l == 1 && n == 0) { if (m == t.length() - 1) { if (s[n] == t[m]) return 1; } return 0; } int a, b; a = b = 0; if (s[n] != t[m]) return 0; if (n > 0) a = equ(s, t, n - 1, m + 1, 1); if (n < s.length() - 1 && l != 1) { b = equ(s, t, n + 1, m + 1, l); } return a || b; } void solve() { string s, t; cin >> s >> t; if (t.length() == 1) { if (s == t) { cout << "YES"; return; } cout << "NO"; return; } int ans = 0; int j = 0; for (auto i : s) { if (i == t[0]) { ans = equ(s, t, j, 0, 0); if (ans == 1) { cout << "YES"; return; } } j++; } cout << "NO"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { solve(); cout << "\n"; } cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << "\n"; return 0; }	 #include <bits/stdc++.h> using namespace std; bool equ(string s, string t, int n, int m, int l) { if (m == t.length()) return 1; if (l == 1 && n == 0) { if (m == t.length() - 1) { if (s[n] == t[m]) return 1; } return 0; } int a, b; a = b = 0; if (s[n] != t[m]) return 0; if (n > 0) a = equ(s, t, n - 1, m + 1, 1); if (n < s.length() - 1 && l != 1) { b = equ(s, t, n + 1, m + 1, l); } return a || b; } void solve() { string s, t; cin >> s >> t; if (s.length() == 1) { if (s == t) { cout << "YES"; return; } cout << "NO"; return; } int ans = 0; int j = 0; for (auto i : s) { if (i == t[0]) { ans = equ(s, t, j, 0, 0); if (ans == 1) { cout << "YES"; return; } } j++; } cout << "NO"; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { solve(); cout << "\n"; } cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " secs" << "\n"; return 0; }
25	 #include <bits/stdc++.h> using namespace std; using ll = long long; bool Is_tp(string t, int k); string Trans_t(string t, int tp); string rv(string s); int main() { ll t; cin >> t; for (ll i = 0; i < t; i++) { string s, t; cin >> s >> t; bool find = 0; for (int j = 0; j < t.size(); j++) { if (Is_tp(t, j)) { int f = s.find(Trans_t(t, j)); if (f != -1) { cout << "YES" << endl; find = 1; break; } } } if (!find) { cout << "NO" << endl; } } return 0; } bool Is_tp(string t, int k) { if (k == 0 || k == t.size() - 1) { return 1; } if (k <= t.size() / 2) { if (t.substr(0, k) == rv(t.substr(k + 1, k))) { return 1; } else { return 0; } } else { if (t.substr(k + 1, t.size() - k - 1) == rv(t.substr(2 * k + 1 - t.size(), t.size() - k - 1))) { return 1; } else { return 0; } } return 0; } string Trans_t(string t, int tp) { string ans; if (tp < t.size() / 2) { ans = rv(t.substr(tp, t.size() - tp)); } else { ans = t.substr(0, tp + 1); } return ans; } string rv(string s) { string t = s; for (int i = 0; i < s.size(); i++) { t[i] = s[s.size() - i - 1]; } return t; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; bool Is_tp(string t, int k); string Trans_t(string t, int tp); string rv(string s); int main() { ll t; cin >> t; for (ll i = 0; i < t; i++) { string s, t; cin >> s >> t; bool find = 0; for (int j = 0; j < t.size(); j++) { if (Is_tp(t, j)) { int f = s.find(Trans_t(t, j)); if (f != -1) { cout << "YES" << endl; find = 1; break; } } } if (!find) { cout << "NO" << endl; } } return 0; } bool Is_tp(string t, int k) { if (k == 0 || k == t.size() - 1) { return 1; } if (k < t.size() / 2) { if (t.substr(0, k) == rv(t.substr(k + 1, k))) { return 1; } else { return 0; } } else { if (t.substr(k + 1, t.size() - k - 1) == rv(t.substr(2 * k + 1 - t.size(), t.size() - k - 1))) { return 1; } else { return 0; } } return 0; } string Trans_t(string t, int tp) { string ans; if (tp < t.size() / 2) { ans = rv(t.substr(tp, t.size() - tp)); } else { ans = t.substr(0, tp + 1); } return ans; } string rv(string s) { string t = s; for (int i = 0; i < s.size(); i++) { t[i] = s[s.size() - i - 1]; } return t; }
26	 #include <bits/stdc++.h> using namespace std; const long long a = 1e9 + 7; long long power(long long n, long long m, long long p) { int res = 1; while (m > 0) { if (n & 1) { res = (res * n) % p; } n = (n * n) % p; m >>= 1; } return res % p; } bool prime(long long b) { for (long long i = 2; i <= sqrt(b); i++) { if (b % i == 0) return false; } return true; } int main() { long long t; cin >> t; while (t--) { string s; cin >> s; long long decide = 0, cnt1 = 0, cnt = 0, decide2 = 0, ans = -1; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { if (s[i] == '1') cnt1++; else if (s[i] == '?') decide++; } else { if (s[i] == '1') cnt++; else if (s[i] == '?') decide2++; } if (cnt1 + decide > cnt + (10 - i) / 2 || cnt + decide2 > cnt1 + (10 - i) / 2) { ans = i + 1; break; } } if (ans == -1) cout << 10 << "\n"; else cout << ans << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long a = 1e9 + 7; long long power(long long n, long long m, long long p) { int res = 1; while (m > 0) { if (n & 1) { res = (res * n) % p; } n = (n * n) % p; m >>= 1; } return res % p; } bool prime(long long b) { for (long long i = 2; i <= sqrt(b); i++) { if (b % i == 0) return false; } return true; } int main() { long long t; cin >> t; while (t--) { string s; cin >> s; long long decide = 0, cnt1 = 0, cnt = 0, decide2 = 0, ans = -1; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { if (s[i] == '1') cnt1++; else if (s[i] == '?') decide++; } else { if (s[i] == '1') cnt++; else if (s[i] == '?') decide2++; } if (cnt1 + decide > cnt + (10 - i) / 2 || cnt + decide2 > cnt1 + (9 - i) / 2) { ans = i + 1; break; } } if (ans == -1) cout << 10 << "\n"; else cout << ans << "\n"; } return 0; }
26	 #include <bits/stdc++.h> using namespace std; const long long INF = 1000000007; const long long N = 10000000; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cout.precision(numeric_limits<double>::max_digits10); long long q; cin >> q; while (q--) { string s; cin >> s; string s1 = s; long long i = 0, j = 1; long long scrA = 0, scrB = 0, ans1 = 10, ans2 = 10; while (i < 10) { if (i % 2 == 0) { if (s[i] == '1' || s[i] == '?') scrA++; if (scrB + (5 - i / 2) < scrA) { ans1 = i + 1; break; } i++; } if (i % 2) { if (s[i] == '1') scrB++; if (scrB + (5 - i / 2) < scrA) { ans1 = i + 1; break; } i++; } } i = 0; scrA = 0; scrB = 0; while (i < 10) { if (i % 2 == 0) { if (s[i] == '1') scrA++; if (scrA + (4 - i / 2) < scrB) { ans2 = i + 1; break; } i++; } if (i % 2) { if (s[i] == '?' || s[i] == '1') scrB++; if (scrA + (4 - i / 2) < scrB) { ans2 = i + 1; break; } i++; } } cout << min(ans1, ans2) << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long INF = 1000000007; const long long N = 10000000; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cout.precision(numeric_limits<double>::max_digits10); long long q; cin >> q; while (q--) { string s; cin >> s; string s1 = s; long long i = 0, j = 1; long long scrA = 0, scrB = 0, ans1 = 10, ans2 = 10; while (i < 10) { if (i % 2 == 0) { if (s[i] == '1' || s[i] == '?') scrA++; if (scrB + (5 - i / 2) < scrA) { ans1 = i + 1; break; } i++; } if (i % 2) { if (s[i] == '1') scrB++; if (scrB + (4 - i / 2) < scrA) { ans1 = i + 1; break; } i++; } } i = 0; scrA = 0; scrB = 0; while (i < 10) { if (i % 2 == 0) { if (s[i] == '1') scrA++; if (scrA + (4 - i / 2) < scrB) { ans2 = i + 1; break; } i++; } if (i % 2) { if (s[i] == '?' || s[i] == '1') scrB++; if (scrA + (4 - i / 2) < scrB) { ans2 = i + 1; break; } i++; } } cout << min(ans1, ans2) << '\n'; } return 0; }
26	 #include <bits/stdc++.h> using namespace std; void solve() { string s; cin >> s; int ans = 10; { int me = 0, his = 0, mybaki = 5, hisbaki = 5; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { mybaki--; if (s[i] != '0') me++; } else { hisbaki--; if (s[i] == '1') his++; } if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1); } } { int me = 0, his = 0, mybaki = 5, hisbaki = 5; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { mybaki--; if (s[i] != '0') me++; } else { hisbaki--; if (s[i] == '1') his++; } if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1); } } cout << ans << ("\n"); } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { string s; cin >> s; int ans = 10; { int me = 0, his = 0, mybaki = 5, hisbaki = 5; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { mybaki--; if (s[i] != '0') me++; } else { hisbaki--; if (s[i] == '1') his++; } if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1); } } { int me = 0, his = 0, mybaki = 5, hisbaki = 5; for (int i = 0; i < 10; i++) { if (i % 2 == 0) { mybaki--; if (s[i] == '1') me++; } else { hisbaki--; if (s[i] != '0') his++; } if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1); } } cout << ans << ("\n"); } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); int t; cin >> t; while (t--) { solve(); } return 0; }
27	 #include <bits/stdc++.h> using namespace std; void sove() { string a, b; cin >> a >> b; int n = a.size(), m = b.size(); int i = n - 1, j = m - 1; while (i >= 0 && j >= 0) { if (a[i] == a[j]) { i--; j--; } else { i -= 2; } } if (j == -1) cout << "YES" << endl; else cout << "NO" << endl; } int main() { ios::sync_with_stdio(false); int t; cin >> t; while (t--) sove(); return 0; }	 #include <bits/stdc++.h> using namespace std; void sove() { string a, b; cin >> a >> b; int n = a.size(), m = b.size(); int i = n - 1, j = m - 1; while (i >= 0 && j >= 0) { if (a[i] == b[j]) { i--; j--; } else { i -= 2; } } if (j == -1) cout << "YES" << endl; else cout << "NO" << endl; } int main() { ios::sync_with_stdio(false); int t; cin >> t; while (t--) sove(); return 0; }
27	 #include <bits/stdc++.h> using i64 = long long; int main() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); int q; std::cin >> q; while (q--) { std::string s, t; std::cin >> s >> t; int lens = s.size(), lent = t.size(); if (lent > lens) { std::cout << "NO" << '\n'; continue; } int pre = lens, fg = 0; for (int i = lens - 1, j = lent - 1; i >= 0; i--) { if (s[i] == t[j] && (pre - i) % 2 == 1) { j--, pre = i; } if (j == 0) { fg = 1; break; } } if (fg) { std::cout << "YES" << '\n'; } else std::cout << "NO" << '\n'; } return 0; }	 #include <bits/stdc++.h> using i64 = long long; int main() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); int q; std::cin >> q; while (q--) { std::string s, t; std::cin >> s >> t; int lens = s.size(), lent = t.size(); if (lent > lens) { std::cout << "NO" << '\n'; continue; } int pre = lens, fg = 0; for (int i = lens - 1, j = lent - 1; i >= 0; i--) { if (s[i] == t[j] && (pre - i) % 2 == 1) { j--, pre = i; } if (j == -1) { fg = 1; break; } } if (fg) { std::cout << "YES" << '\n'; } else std::cout << "NO" << '\n'; } return 0; }
28	 #include <bits/stdc++.h> using namespace std; const int Maxn = 300005; int T, n, m, ct, x[Maxn], fa[Maxn], cnt[Maxn], ans[Maxn]; int get_fa(int x) { return x == fa[x] ? x : fa[x] = get_fa(fa[x]); } int main() { scanf("%d", &T); while (T--) { ct = 0; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) cnt[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &x[i]); x[i]--; cnt[(i - x[i] + n) % n]++; } for (int i = 0; i < n; i++) if (cnt[i] + 2 * m >= n) { int tmp = 0; for (int j = 0; j < n; j++) fa[i] = i; for (int j = 0; j < n; j++) if (get_fa(x[j]) != get_fa((j - i + n) % n)) tmp++, fa[get_fa((j - i + n) % n)] = get_fa(x[j]); if (tmp <= m) ans[++ct] = i; } printf("%d ", ct); for (int i = 1; i <= ct; i++) printf("%d ", ans[i]); puts(""); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int Maxn = 300005; int T, n, m, ct, x[Maxn], fa[Maxn], cnt[Maxn], ans[Maxn]; int get_fa(int x) { return x == fa[x] ? x : fa[x] = get_fa(fa[x]); } int main() { scanf("%d", &T); while (T--) { ct = 0; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) cnt[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &x[i]); x[i]--; cnt[(i - x[i] + n) % n]++; } for (int i = 0; i < n; i++) if (cnt[i] + 2 * m >= n) { int tmp = 0; for (int j = 0; j < n; j++) fa[j] = j; for (int j = 0; j < n; j++) if (get_fa(x[j]) != get_fa((j - i + n) % n)) tmp++, fa[get_fa((j - i + n) % n)] = get_fa(x[j]); if (tmp <= m) ans[++ct] = i; } printf("%d ", ct); for (int i = 1; i <= ct; i++) printf("%d ", ans[i]); puts(""); } return 0; }
29	 #include <bits/stdc++.h> const double pi = acos(-1.0); const double eps = 1e-9; using namespace std; const int N = 5e5 + 10; struct Fenwick { long long ft[N]; long long sum(int r) { long long result = 0; for (; r >= 0; r = (r & (r + 1)) - 1) result += ft[r]; return result; } long long sum(int l, int r) { return (l > r ? 0ll : sum(r) - sum(l - 1)); } void inc(int i, long long delta) { for (; i < N; i = (i | (i + 1))) ft[i] += delta; } } ft1, ft2; void solve() { int n; cin >> n; int MX = 3e5; long long pref = 0, ans = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x - 1); for (int j = x; j <= MX; j += x) { int l = j; int r = min(MX, l + x - 1); ans -= ft2.sum(l, r) * j; ft1.inc(l, x); } ft2.inc(x, 1); cout << ans << " "; pref += x; } } int main() { ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0); cout.setf(ios::fixed), cout.precision(10); int step = 1; for (int i = 0; i < step; i++) { solve(); } }	 #include <bits/stdc++.h> const double pi = acos(-1.0); const double eps = 1e-9; using namespace std; const int N = 5e5 + 10; struct Fenwick { long long ft[N]; long long sum(int r) { long long result = 0; for (; r >= 0; r = (r & (r + 1)) - 1) result += ft[r]; return result; } long long sum(int l, int r) { return (l > r ? 0ll : sum(r) - sum(l - 1)); } void inc(int i, long long delta) { for (; i < N; i = (i | (i + 1))) ft[i] += delta; } } ft1, ft2; void solve() { int n; cin >> n; int MX = 3e5; long long pref = 0, ans = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x); for (int j = x; j <= MX; j += x) { int l = j; int r = min(MX, l + x - 1); ans -= ft2.sum(l, r) * j; ft1.inc(l, x); } ft2.inc(x, 1); cout << ans << " "; pref += x; } } int main() { ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0); cout.setf(ios::fixed), cout.precision(10); int step = 1; for (int i = 0; i < step; i++) { solve(); } }
29	 #include <bits/stdc++.h> using namespace std; const int N = 4e5 + 113; struct fenw { vector<long long> t; void init() { t.assign(N, 0); } long long getsum(int r) { long long result = 0; for (; r >= 0; r = (r & (r + 1)) - 1) result += t[r]; return result; } void inc(int i, long long delta) { for (; i < N; i = (i | (i + 1))) t[i] += delta; } long long sum_pos(int pos) { if (pos == 0) return getsum(pos); return getsum(pos); } void inc_segment(int l, int r, long long val) { inc(l, val); inc(r + 1, -val); } long long sum_segment(int l, int r) { return getsum(r) - getsum(l - 1); } }; signed main() { cin.tie(NULL); ios_base::sync_with_stdio(false); int n; cin >> n; fenw f1, f2, f3; f1.init(), f2.init(), f3.init(); long long res = 0; for (int i = 0; i < n; i++) { int a; cin >> a; long long pr = 0; res += f3.sum_pos(a) + (long long)a * i; for (int j = a - 1; j < 20; j += a) { res += f1.sum_segment(j - a + 1, j) - f2.sum_segment(j - a + 1, j) * pr; f3.inc_segment(j - a + 1, j, -pr); pr += a; } f1.inc(a, a); f2.inc(a, 1); cout << res << ' '; } }	 #include <bits/stdc++.h> using namespace std; const int N = 7e5 + 113; struct fenw { vector<long long> t; void init() { t.assign(N, 0); } long long getsum(int r) { long long result = 0; for (; r >= 0; r = (r & (r + 1)) - 1) result += t[r]; return result; } void inc(int i, long long delta) { for (; i < N; i = (i | (i + 1))) t[i] += delta; } long long sum_pos(int pos) { if (pos == 0) return getsum(pos); return getsum(pos); } void inc_segment(int l, int r, long long val) { inc(l, val); inc(r + 1, -val); } long long sum_segment(int l, int r) { return getsum(r) - getsum(l - 1); } }; signed main() { cin.tie(NULL); ios_base::sync_with_stdio(false); int n; cin >> n; fenw f1, f2, f3; f1.init(), f2.init(), f3.init(); long long res = 0; for (int i = 0; i < n; i++) { int a; cin >> a; long long pr = 0; res += f3.sum_pos(a) + (long long)a * i; for (int j = a - 1; j < N; j += a) { res += f1.sum_segment(j - a + 1, j) - f2.sum_segment(j - a + 1, j) * pr; f3.inc_segment(j - a + 1, j, -pr); pr += a; } f1.inc(a, a); f2.inc(a, 1); cout << res << ' '; } }
29	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char c = getchar(); while (!isdigit(c)) f ^= c == '-', c = getchar(); while (isdigit(c)) r = (r << 1) + (r << 3) + (c & 15), c = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 3e5 + 7; int n, m, a[N]; struct b1t { long long c[M]; inline void add(int p, int x) { for (; p <= m; p += ((p) & -(p))) c[p] += x; } inline long long ask(int p) { long long res = 0; for (; p; p -= ((p) & -(p))) res += c[p]; return res; } } T1, T2; int main() { n = read(); for (int i = 1; i <= n; i++) a[i] = read(), m = max(m, a[i]); long long ans = 0, sum = 0; for (int j = 1; j <= n; j++) { int x = a[j]; ans += sum + (j - 1) * x - T2.ask(x), sum += x; for (int i = x; i <= m; i += x) ans -= x * (j - 1 - T1.ask(i - 1)); T1.add(x, 1); for (int i = x; i <= m; i += x) T2.add(i, x); printf("%lld ", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char c = getchar(); while (!isdigit(c)) f ^= c == '-', c = getchar(); while (isdigit(c)) r = (r << 1) + (r << 3) + (c & 15), c = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 3e5 + 7; int n, m, a[N]; struct b1t { long long c[M]; inline void add(int p, int x) { for (; p <= m; p += ((p) & -(p))) c[p] += x; } inline long long ask(int p) { long long res = 0; for (; p; p -= ((p) & -(p))) res += c[p]; return res; } } T1, T2; int main() { n = read(); for (int i = 1; i <= n; i++) a[i] = read(), m = max(m, a[i]); long long ans = 0, sum = 0; for (int j = 1; j <= n; j++) { int x = a[j]; ans += sum + 1ll * (j - 1) * x - T2.ask(x), sum += x; for (int i = x; i <= m; i += x) ans -= x * (j - 1 - T1.ask(i - 1)); T1.add(x, 1); for (int i = x; i <= m; i += x) T2.add(i, x); printf("%lld ", ans); } return 0; }
34	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n, k; cin >> n >> k; vector<long long int> v(n); for (long long int i = 0; i < n; i++) cin >> v[i]; long long int ans = -1e7, m1 = 0, m2 = INT_MAX; m1 = v[0]; m2 = 1; for (long long int i = 1; i < n; i++) { long long int c = m2 * (i + 1) - k * (m1 | v[i]); ans = max(ans, c); long long int mm = (ans + (k) * (v[i])) / (i + 1); for (long long int j = i - 1; j >= mm - 1; j--) { if (j <= 0) break; long long int c2 = (i + 1) * (j + 1) - k * (v[i] | v[j]); ans = max(ans, c2); } if (v[i] < m1) { m2 = i, m1 = v[i]; } } cout << ans << "\n"; } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); long long int t = 1; cin >> t; for (long long int i = 1; i <= t; i++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n, k; cin >> n >> k; vector<long long int> v(n); for (long long int i = 0; i < n; i++) cin >> v[i]; long long int ans = -1e7, m1 = 0, m2 = INT_MAX; m1 = v[0]; m2 = 1; for (long long int i = 1; i < n; i++) { long long int c = m2 * (i + 1) - k * (m1 | v[i]); ans = max(ans, c); long long int mm = (ans + (k) * (v[i])) / (i + 1); for (long long int j = i - 1; j >= mm - 1; j--) { if (j < 0) break; long long int c2 = (i + 1) * (j + 1) - k * (v[i] | v[j]); ans = max(ans, c2); } if (v[i] < m1) { m2 = i, m1 = v[i]; } } cout << ans << "\n"; } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); long long int t = 1; cin >> t; for (long long int i = 1; i <= t; i++) { solve(); } }
34	 #include <bits/stdc++.h> using namespace std; unsigned long long power(unsigned long long a, unsigned long long p, unsigned long long mod = 1e9 + 7) { unsigned long long res = 1, run = p % mod; while (p > 0) { if (p & 1) { res = (res * run) % mod; } p = (p >> 1); run = (run * run) % mod; } return res; } unsigned long long inverse(unsigned long long a, unsigned long long mod = 1e9 + 7) { return power(a, mod - 2, mod); } unsigned long long gcd(unsigned long long a, unsigned long long b) { if (b == 0) return a; return gcd(b, a % b); } void pre() {} void solve() { long long n, k; cin >> n >> k; vector<long long> a(n); for (auto &x : a) cin >> x; long long ans = INT_MIN; for (long long i = max(0LL, n - 2 * k); i <= n; i++) { for (long long j = i + 1; j <= n; j++) { ans = max(ans, i * j - k * (a[i - 1] | a[j - 1])); } } cout << ans << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; pre(); while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; unsigned long long power(unsigned long long a, unsigned long long p, unsigned long long mod = 1e9 + 7) { unsigned long long res = 1, run = p % mod; while (p > 0) { if (p & 1) { res = (res * run) % mod; } p = (p >> 1); run = (run * run) % mod; } return res; } unsigned long long inverse(unsigned long long a, unsigned long long mod = 1e9 + 7) { return power(a, mod - 2, mod); } unsigned long long gcd(unsigned long long a, unsigned long long b) { if (b == 0) return a; return gcd(b, a % b); } void pre() {} void solve() { long long n, k; cin >> n >> k; vector<long long> a(n); for (auto &x : a) cin >> x; long long ans = INT_MIN; for (long long i = max(1LL, n - 2 * k); i < n; i++) { for (long long j = i + 1; j <= n; j++) { ans = max(ans, i * j - k * (a[i - 1] | a[j - 1])); } } cout << ans << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; pre(); while (t--) { solve(); } }
35	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m; cin >> n >> m; ++m; int ans = 0; for (int i = 30; i >= 0 && n < m; ++i) { if ((n >> i & 1) == (m >> i & 1)) continue; if (m >> i & 1) ans ^= 1 << i, n ^= 1 << i; } cout << ans << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(NULL); int T; cin >> T; while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m; cin >> n >> m; ++m; int ans = 0; for (int i = 30; i >= 0 && n < m; --i) { if ((n >> i & 1) == (m >> i & 1)) continue; if (m >> i & 1) ans ^= 1 << i, n ^= 1 << i; } cout << ans << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(NULL); int T; cin >> T; while (T--) { solve(); } return 0; }
35	 #include <bits/stdc++.h> using namespace std; int n, m; vector<pair<int, int>> vc; void fun(int l, int r, int x) { if (r <= m) { int _l = (l ^ n) & (~x); int _r = _l + x; vc.push_back({_l, _r}); } else { int mid = (l + r) >> 1; fun(l, mid, x >> 1); if (m > mid) fun(mid + 1, r, x >> 1); } } void solve() { scanf("%d %d", &n, &m); vc.clear(); int x = 1; while (x < m) x <<= 1; fun(0, x - 1, x - 1); sort(vc.begin(), vc.end()); int ans = 0; for (auto &it : vc) { if (it.first != ans) { break; } else { ans = it.second + 1; } } printf("%d\n", ans); } int main() { int T; scanf("%d", &T); while (T--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m; vector<pair<int, int>> vc; void fun(int l, int r, int x) { if (r <= m) { int _l = (l ^ n) & (~x); int _r = _l + x; vc.push_back({_l, _r}); } else { int mid = (l + r) >> 1; fun(l, mid, x >> 1); if (m > mid) fun(mid + 1, r, x >> 1); } } void solve() { scanf("%d %d", &n, &m); vc.clear(); int x = 1; while (x <= m) x <<= 1; fun(0, x - 1, x - 1); sort(vc.begin(), vc.end()); int ans = 0; for (auto &it : vc) { if (it.first != ans) { break; } else { ans = it.second + 1; } } printf("%d\n", ans); } int main() { int T; scanf("%d", &T); while (T--) solve(); return 0; }
35	 #include <bits/stdc++.h> using namespace std; signed main() { long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; if (n == 0) { cout << m + 1 << endl; continue; } bitset<35> b(n); long long high = 1; long long cnt = 0; while (high < max(n + 1, m + 1)) { high *= 2; cnt++; } cnt--; long long l = 0, r = high - 1; bitset<35> ans; for (long long i = cnt; i >= 0; i--) { long long mid = (l + r) / 2; if (mid > m) { ans[i] = 0; if (b[i] == 0) { r = mid; } else { l = mid + 1; } } else { if (b[i] == 0) { ans[i] = 1; } else { ans[i] = 0; } l = mid + 1; } } long long ans_num = 0; for (long long i = 0; i <= cnt; i++) { ans_num += (ans[i] << i); } cout << ans_num << endl; } }	 #include <bits/stdc++.h> using namespace std; signed main() { long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; if (n == 0) { cout << m + 1 << endl; continue; } bitset<35> b(n); long long high = 1; long long cnt = 0; while (high <= max(n + 1, m + 1)) { high *= 2; cnt++; } cnt--; long long l = 0, r = high - 1; bitset<35> ans; for (long long i = cnt; i >= 0; i--) { long long mid = (l + r) / 2; if (mid > m) { ans[i] = 0; if (b[i] == 0) { r = mid; } else { l = mid + 1; } } else { if (b[i] == 0) { ans[i] = 1; } else { ans[i] = 0; } l = mid + 1; } } long long ans_num = 0; for (long long i = 0; i <= cnt; i++) { ans_num += (ans[i] << i); } cout << ans_num << endl; } }
35	 #include <bits/stdc++.h> using namespace std; const long long INF = 1000000000000000; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long x; cin >> x; while (x--) { long long n; long long m; cin >> n >> m; m++; long long ans = 0; if (n > m) { cout << 0 << endl; continue; } for (long long i = 32; i >= 0; i--) { long long ni = (n >> i & 1); long long mi = (m >> i & 1); if (ni == mi) continue; else if (ni == 0 && mi == 1) { ans = ans | (1 << i); } else if (ni == 0 && mi == 1) { break; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long INF = 1000000000000000; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); long long x; cin >> x; while (x--) { long long n; long long m; cin >> n >> m; m++; long long ans = 0; if (n > m) { cout << 0 << endl; continue; } for (long long i = 32; i >= 0; i--) { long long ni = (n >> i & 1); long long mi = (m >> i & 1); if (ni == mi) continue; else if (ni == 0 && mi == 1) { ans = ans | (1 << i); } else if (ni == 1 && mi == 0) { break; } } cout << ans << endl; } return 0; }
36	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 100; void solve() { int n; cin >> n; if (n <= 26) { for (int i = 1; i <= n; ++i) { cout << ('a' + i - 1); } cout << endl; return; } if (n & 1) { for (int i = 1; i <= n / 2; ++i) cout << "a"; cout << "bc"; for (int i = n / 2 + 3; i <= n; ++i) cout << "a"; } else { for (int i = 1; i <= n / 2; ++i) cout << "a"; cout << "b"; for (int i = n / 2 + 2; i <= n; ++i) cout << "a"; } cout << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 100; void solve() { int n; cin >> n; if (n <= 26) { for (int i = 1; i <= n; ++i) { cout << char('a' + i - 1); } cout << endl; return; } if (n & 1) { for (int i = 1; i <= n / 2; ++i) cout << "a"; cout << "bc"; for (int i = n / 2 + 3; i <= n; ++i) cout << "a"; } else { for (int i = 1; i <= n / 2; ++i) cout << "a"; cout << "b"; for (int i = n / 2 + 2; i <= n; ++i) cout << "a"; } cout << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } }
36	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long n; cin >> n; if (n == 1) { cout << "v\n"; continue; } cout << string(n / 2, 'a') + (n & 1 ? "bb" : "a") + string(n / 2 - 1, 'a') << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long n; cin >> n; if (n == 1) { cout << "v\n"; continue; } cout << string(n / 2, 'a') + (n & 1 ? "bv" : "b") + string(n / 2 - 1, 'a') << "\n"; } return 0; }
36	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long n; cin >> n; if (n == 1) { cout << "v\n"; continue; } cout << string(n / 2, 'a') + (n & 1 ? "bv" : "a") + string(n / 2 - 1, 'a') << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long n; cin >> n; if (n == 1) { cout << "v\n"; continue; } cout << string(n / 2, 'a') + (n & 1 ? "bv" : "b") + string(n / 2 - 1, 'a') << "\n"; } return 0; }
38	 #include <bits/stdc++.h> using ll = long long; using namespace std; int mod = 1e9 + 7; string to_string(string& s) { return '"' + s + '"'; } string to_string(bool& b) { return b ? "true" : "false"; } string to_string(const char* s) { string t; return to_string(t = s); } template <class A, class B> string to_string(pair<A, B>& p) { return "(" + to_string(p.first) + ", " + to_string(p.second) + ")"; } template <class A> string to_string(A& v) { string s; for (auto& x : v) s += (s.empty() ? "" : ", ") + to_string(x); return "{" + s + "}"; } template <class... Ts> void _debug(Ts&... args) { (..., (cerr << " " << to_string(args))); cerr << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { ll n; cin >> n; if (n <= 3) { cout << 15 << '\n'; continue; } if (n % 2 != 0) n++; cout << n * 5 / 2 << '\n'; } }	 #include <bits/stdc++.h> using ll = long long; using namespace std; int mod = 1e9 + 7; string to_string(string& s) { return '"' + s + '"'; } string to_string(bool& b) { return b ? "true" : "false"; } string to_string(const char* s) { string t; return to_string(t = s); } template <class A, class B> string to_string(pair<A, B>& p) { return "(" + to_string(p.first) + ", " + to_string(p.second) + ")"; } template <class A> string to_string(A& v) { string s; for (auto& x : v) s += (s.empty() ? "" : ", ") + to_string(x); return "{" + s + "}"; } template <class... Ts> void _debug(Ts&... args) { (..., (cerr << " " << to_string(args))); cerr << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { ll n; cin >> n; if (n <= 5) { cout << 15 << '\n'; continue; } if (n % 2 != 0) n++; cout << n * 5 / 2 << '\n'; } }
39	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; int dp[1005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { int W, H; cin >> W >> H; int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; int w, h; cin >> w >> h; int res = INT_MAX; if (x1 >= w) { res = 0; } else if (x2 - x1 + w <= W && h <= H) { res = min(res, w + (x2 - x1) - x2); } if (W - x2 >= w) { res = 0; } else if (x2 - x1 + w <= W) { res = min(res, w + (x2 - x1) - (W - x1)); } if (y1 >= h) { res = 0; } else if (y2 - y1 + w <= H) { res = min(res, h + (y2 - y1) - y2); } if (H - y2 >= h) { res = 0; } else if (y2 - y1 + h <= H) { res = min(res, h + (y2 - y1) - (H - y1)); } if (h > H || w > W) res = -1; if (res == INT_MAX) res = -1; cout << res << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; int dp[1005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { int W, H; cin >> W >> H; int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; int w, h; cin >> w >> h; int res = INT_MAX; if (x1 >= w) { res = 0; } else if (x2 - x1 + w <= W && h <= H) { res = min(res, w + (x2 - x1) - x2); } if (W - x2 >= w) { res = 0; } else if (x2 - x1 + w <= W) { res = min(res, w + (x2 - x1) - (W - x1)); } if (y1 >= h) { res = 0; } else if (y2 - y1 + h <= H) { res = min(res, h + (y2 - y1) - y2); } if (H - y2 >= h) { res = 0; } else if (y2 - y1 + h <= H) { res = min(res, h + (y2 - y1) - (H - y1)); } if (h > H || w > W) res = -1; if (res == INT_MAX) res = -1; cout << res << '\n'; } }
39	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int W, H, w, h; cin >> W >> H; long long int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; cin >> w >> h; long long int disth, distw; distw = max(x1, w - x2); disth = max(y1, h - y2); long long int ans1 = INT_MAX, ans2 = INT_MAX; if (h <= disth || w <= distw) { cout << 0 << endl; } else if (h + abs(y2 - y1) > H && w + abs(x2 - x1) > W) { cout << -1 << endl; } else { if (h + y2 - y1 <= H) { ans1 = abs(disth - h); } if (w + abs(x2 - x1) <= W) { ans2 = abs(distw - w); } cout << min(ans1, ans2) << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { long long int W, H, w, h; cin >> W >> H; long long int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; cin >> w >> h; long long int disth, distw; distw = max(x1, W - x2); disth = max(y1, H - y2); long long int ans1 = INT_MAX, ans2 = INT_MAX; if (h <= disth || w <= distw) { cout << 0 << endl; } else if (h + abs(y2 - y1) > H && w + abs(x2 - x1) > W) { cout << -1 << endl; } else { if (h + y2 - y1 <= H) { ans1 = abs(disth - h); } if (w + abs(x2 - x1) <= W) { ans2 = abs(distw - w); } cout << min(ans1, ans2) << endl; } } }
39	 #include <bits/stdc++.h> using namespace std; int min(int a, int b) { if (a <= b) return a; else return b; } int min_dis(int W, int H, int x1, int y1, int x2, float y2, int w, int h) { int dis = 1e9; if (h > H || w > W) { return -1; } else { if ((x2 - x1 + w) > W && (y2 - y1 + h) > H) { return -1; } else { if (w + (x2 - x1) <= W) { dis = min(dis, min(w - x1, w - (W - x2))); } if (h + (y2 - y1) <= H) { dis = min(dis, min(h - (H - y2), h - y1)); } } } if (dis < 0) { dis = 0; } return dis; } int main() { int t; cin >> t; while (t--) { int W, H; cin >> W >> H; int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; int w, h; cin >> w >> h; int dis = min_dis(W, H, x1, y1, x2, y2, w, h); cout << dis << endl; } }	 #include <bits/stdc++.h> using namespace std; int min(int a, int b) { if (a <= b) return a; else return b; } int min_dis(int W, int H, int x1, int y1, int x2, int y2, int w, int h) { int dis = 1e9; if (h > H || w > W) { return -1; } else { if ((x2 - x1 + w) > W && (y2 - y1 + h) > H) { return -1; } else { if (w + (x2 - x1) <= W) { dis = min(dis, min(w - x1, w - (W - x2))); } if (h + (y2 - y1) <= H) { dis = min(dis, min(h - (H - y2), h - y1)); } } } if (dis < 0) { dis = 0; } return dis; } int main() { int t; cin >> t; while (t--) { int W, H; cin >> W >> H; int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2; int w, h; cin >> w >> h; int dis = min_dis(W, H, x1, y1, x2, y2, w, h); cout << dis << endl; } }
39	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int h, w, H, W, minn = 999999999; cin >> w >> h; int xx, dx, xy, dy; cin >> xx >> xy >> dx >> dy; cin >> W >> H; if (W + dx - xx <= w) { if (W <= xx) minn = 0; else minn = min(minn, W - xx); dx = w - dx; if (W <= dx) minn = 0; else minn = min(minn, W - dx); } if (H + dy - xy <= h) { if (H <= xy) minn = 0; else minn = min(minn, H - xy); dy = H - dy; if (H <= dy) minn = 0; else minn = min(minn, H - dy); } if (minn == 999999999) cout << "-1\n"; else cout << minn << ".0000000\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int h, w, H, W, minn = 999999999; cin >> w >> h; int xx, dx, xy, dy; cin >> xx >> xy >> dx >> dy; cin >> W >> H; if (W + dx - xx <= w) { if (W <= xx) minn = 0; else minn = min(minn, W - xx); dx = w - dx; if (W <= dx) minn = 0; else minn = min(minn, W - dx); } if (H + dy - xy <= h) { if (H <= xy) minn = 0; else minn = min(minn, H - xy); dy = h - dy; if (H <= dy) minn = 0; else minn = min(minn, H - dy); } if (minn == 999999999) cout << "-1\n"; else cout << minn << ".0000000\n"; } }
39	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int W, H, w, h; int x1, y1, x2, y2; cin >> W >> H; cin >> x1 >> y1 >> x2 >> y2; cin >> w >> h; int ans = INT_MAX; if (x2 + (w - x1) <= W) { ans = min(ans, (w - x1)); } if (x1 - (w - (W - x2)) > 0) { ans = min(ans, (w - (W - x2))); } if (y2 + (h - y1) <= H) { ans = min(ans, (h - y1)); } if (y1 - (h - (H - y2)) > 0) { ans = min(ans, (h - (H - y2))); } if (ans == INT_MAX) { cout << -1 << endl; } else { cout << max(0, ans) << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int W, H, w, h; int x1, y1, x2, y2; cin >> W >> H; cin >> x1 >> y1 >> x2 >> y2; cin >> w >> h; int ans = INT_MAX; if (x2 + (w - x1) <= W) { ans = min(ans, (w - x1)); } if (x1 - (w - (W - x2)) >= 0) { ans = min(ans, (w - (W - x2))); } if (y2 + (h - y1) <= H) { ans = min(ans, (h - y1)); } if (y1 - (h - (H - y2)) >= 0) { ans = min(ans, (h - (H - y2))); } if (ans == INT_MAX) { cout << -1 << endl; } else { cout << max(0, ans) << endl; } } return 0; }
40	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimization("unroll-loops") const long long INF = 1e10; void solve() { int m; cin >> m; vector<long long> a(m), b(m), s1(m + 1), s2(m + 1); for (int i = 0; i < a.size(); ++i) cin >> a[i]; ; for (int i = 0; i < b.size(); ++i) cin >> b[i]; ; for (int i = 0; i < m; ++i) s1[i + 1] = s1[i] + a[i]; for (int i = 0; i < m; ++i) s2[i + 1] = s2[i] + b[i]; if (m == 1) { cout << 0 << '\n'; return; } int l = 1, r = m + 1; while (l + 1 != r) { int j = (l + r) / 2; if (s1[m] - s1[j] >= s2[j - 1]) r = j; else l = j; } long long minn = INF; for (int i = max(1, l - 3); i < min(m + 1, r + 3); ++i) { minn = min(minn, max(s1[m] - s1[i], s2[i - 1])); } cout << minn << '\n'; } signed main() { int t = 1; cin >> t; for (; t > 0; --t) solve(); }	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimization("unroll-loops") const long long INF = 1e10; void solve() { int m; cin >> m; vector<long long> a(m), b(m), s1(m + 1), s2(m + 1); for (int i = 0; i < a.size(); ++i) cin >> a[i]; ; for (int i = 0; i < b.size(); ++i) cin >> b[i]; ; for (int i = 0; i < m; ++i) s1[i + 1] = s1[i] + a[i]; for (int i = 0; i < m; ++i) s2[i + 1] = s2[i] + b[i]; if (m == 1) { cout << 0 << '\n'; return; } int l = 1, r = m + 1; while (l + 1 != r) { int j = (l + r) / 2; if (s1[m] - s1[j] >= s2[j - 1]) l = j; else r = j; } long long minn = INF; for (int i = max(1, l - 3); i < min(m + 1, r + 3); ++i) { minn = min(minn, max(s1[m] - s1[i], s2[i - 1])); } cout << minn << '\n'; } signed main() { int t = 1; cin >> t; for (; t > 0; --t) solve(); }
40	 #include <bits/stdc++.h> using namespace std; void want() { long long n; cin >> n; long long i, j; long long A[2][n]; long long sum1 = 0; long long sum2 = 0; for (j = 0; j < 2; j++) { for (i = 0; i < n; i++) { cin >> A[j][i]; } } long long pre = 0, suf = 0; for (i = 0; i < n - 1; i++) { pre += A[1][i]; } long long ans = pre; for (i = n - 2; i > 0; i--) { pre -= A[1][i]; suf += A[0][i + 1]; ans = min(ans, max(pre, suf)); } cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { want(); } }	 #include <bits/stdc++.h> using namespace std; void want() { long long n; cin >> n; long long i, j; long long A[2][n]; long long sum1 = 0; long long sum2 = 0; for (j = 0; j < 2; j++) { for (i = 0; i < n; i++) { cin >> A[j][i]; } } long long pre = 0, suf = 0; for (i = 0; i < n - 1; i++) { pre += A[1][i]; } long long ans = pre; for (i = n - 2; i >= 0; i--) { pre -= A[1][i]; suf += A[0][i + 1]; ans = min(ans, max(pre, suf)); } cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { want(); } }
40	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; vector<vector<int>> ar(2, vector<int>()); vector<int> pref; vector<int> suf; for (int q = 0; q < t; ++q) { int m; cin >> m; ar[0].resize(m); ar[1].resize(m); pref.resize(m); suf.resize(m); int sum1 = 0; int sum2 = 0; for (int i = 0; i < 2; ++i) { for (int j = 0; j < m; ++j) { cin >> ar[i][j]; if (i == 0) sum1 += ar[i][j]; else sum2 += ar[i][j]; } } suf[m - 1] = ar[1][m - 1]; for (int i = m - 2; i > -1; --i) { suf[i] = ar[1][i] + suf[i + 1]; } pref[0] = ar[0][0]; int ans = 1e9; for (int i = 0; i < m; ++i) { pref[i] = ar[0][i] + pref[i - 1]; } for (int i = 0; i < m; ++i) { ans = min(ans, max(sum1 - pref[i], sum2 - suf[i])); } cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; vector<vector<int>> ar(2, vector<int>()); vector<int> pref; vector<int> suf; for (int q = 0; q < t; ++q) { int m; cin >> m; ar[0].resize(m); ar[1].resize(m); pref.resize(m); suf.resize(m); int sum1 = 0; int sum2 = 0; for (int i = 0; i < 2; ++i) { for (int j = 0; j < m; ++j) { cin >> ar[i][j]; if (i == 0) sum1 += ar[i][j]; else sum2 += ar[i][j]; } } suf[m - 1] = ar[1][m - 1]; for (int i = m - 2; i > -1; --i) { suf[i] = ar[1][i] + suf[i + 1]; } pref[0] = ar[0][0]; int ans = 1e9; for (int i = 1; i < m; ++i) { pref[i] = ar[0][i] + pref[i - 1]; } for (int i = 0; i < m; ++i) { ans = min(ans, max(sum1 - pref[i], sum2 - suf[i])); } cout << ans << "\n"; } }
40	 #include <bits/stdc++.h> using namespace std; void solve() { int m; cin >> m; int a[2][m], i, j; for (j = 0; j < 2; j++) { for (i = 0; i < m; i++) { cin >> a[j][i]; } } for (i = 0; i < 2; i++) { for (j = 1; j < m; j++) { a[i][j] += a[i][j - 1]; } } int ans = INT_MAX; for (i = 0; i < m; i++) { int sum; if (i == 0) { sum = a[0][m - 1] - a[0][0]; } if (i == (m - 1)) { if ((m - 2) > 0) sum = a[1][m - 2]; else sum = 0; } if (i > 0 && i < (m - 1)) { int sum2; int sum3 = a[0][m - 1] - a[0][i]; sum2 = a[1][i - 1]; sum = max(sum2, sum3); } ans = min(ans, sum); } cout << ans << '\n'; } int main() { ios::sync_with_stdio(0); cin.tie(0); int tt; cin >> tt; for (int i = 1; i <= tt; ++i) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { int m; cin >> m; int a[2][m], i, j; for (j = 0; j < 2; j++) { for (i = 0; i < m; i++) { cin >> a[j][i]; } } for (i = 0; i < 2; i++) { for (j = 1; j < m; j++) { a[i][j] += a[i][j - 1]; } } int ans = INT_MAX; for (i = 0; i < m; i++) { int sum; if (i == 0) { sum = a[0][m - 1] - a[0][0]; } if (i == (m - 1)) { if ((m - 2) >= 0) sum = a[1][m - 2]; else sum = 0; } if (i > 0 && i < (m - 1)) { int sum2; int sum3 = a[0][m - 1] - a[0][i]; sum2 = a[1][i - 1]; sum = max(sum2, sum3); } ans = min(ans, sum); } cout << ans << '\n'; } int main() { ios::sync_with_stdio(0); cin.tie(0); int tt; cin >> tt; for (int i = 1; i <= tt; ++i) solve(); }
40	 #include <bits/stdc++.h> using namespace std; const long long N = 300010, M = 1005; long long t, n, p[N], s[N], m, a[3][N]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cin >> t; while (t--) { cin >> m; for (int i = 1; i <= 2; i++) { for (int j = 1; j <= m; j++) { cin >> a[i][j]; } } s[n + 1] = 0; for (int i = 1; i <= m; i++) { p[i] = p[i - 1] + a[2][i]; } for (int i = m; i >= 1; i--) { s[i] = s[i + 1] + a[1][i]; } long long res = 2e18; for (int i = 1; i <= m; i++) { long long x = max(p[i - 1], s[i + 1]); res = min(res, x); } if (m == 1) res = 0; cout << res << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 300010, M = 1005; long long t, n, p[N], s[N], m, a[3][N]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cin >> t; while (t--) { cin >> m; for (int i = 1; i <= 2; i++) { for (int j = 1; j <= m; j++) { cin >> a[i][j]; } } s[m + 1] = 0; for (int i = 1; i <= m; i++) { p[i] = p[i - 1] + a[2][i]; } for (int i = m; i >= 1; i--) { s[i] = s[i + 1] + a[1][i]; } long long res = 2e18; for (int i = 1; i <= m; i++) { long long x = max(p[i - 1], s[i + 1]); res = min(res, x); } if (m == 1) res = 0; cout << res << "\n"; } return 0; }
41	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 5; long long h[N], e[N], nx[N], idx; long long k, T, t, n, m, ans, cnt; long long a[N], pre[10][N]; bool vis[N]; char s[N]; char str[10][10] = {" abc", " acb", " bac", " bca", " cab", " cba"}; priority_queue<long long, vector<long long>, greater<long long> > q; void init() { char x; for (long long i = 1; i <= 6; i++) { for (long long x = 1, y = 1; x <= n; x++, y++) { if (y > 3) y = 1; pre[i][x] = pre[i][x - 1] + (s[x] != str[i][y]); } } } signed main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); cin >> n >> m >> s + 1; init(); while (m--) { long long l, r, res = 0x3f3f3f3f; cin >> l >> r; if (l == r) cout << 0 << '\n'; else if (r - l == 1) { if (s[l] != s[r]) cout << 0 << '\n'; else cout << 1 << '\n'; } else { for (long long i = 1; i <= 6; i++) res = min(res, pre[i][r] - pre[i][l - 1]); cout << res << '\n'; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 5; long long h[N], e[N], nx[N], idx; long long k, T, t, n, m, ans, cnt; long long a[N], pre[10][N]; bool vis[N]; char s[N]; char str[10][10] = {" ", " abc", " acb", " bac", " bca", " cab", " cba"}; priority_queue<long long, vector<long long>, greater<long long> > q; void init() { char x; for (long long i = 1; i <= 6; i++) { for (long long x = 1, y = 1; x <= n; x++, y++) { if (y > 3) y = 1; pre[i][x] = pre[i][x - 1] + (s[x] != str[i][y]); } } } signed main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); cin >> n >> m >> s + 1; init(); while (m--) { long long l, r, res = 0x3f3f3f3f; cin >> l >> r; if (l == r) cout << 0 << '\n'; else if (r - l == 1) { if (s[l] != s[r]) cout << 0 << '\n'; else cout << 1 << '\n'; } else { for (long long i = 1; i <= 6; i++) res = min(res, pre[i][r] - pre[i][l - 1]); cout << res << '\n'; } } return 0; }
41	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 5; const int inf = 1e9; int n, m, v[maxn], l[maxn], ans[maxn], r[maxn], p[maxn]; char c; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { cin >> c; v[i] = c - 'a'; } vector<int> k; for (int i = 0; i < 3; i++) k.push_back(i); for (int i = 1; i <= m; i++) ans[i] = inf; for (int i = 1; i <= m; i++) cin >> l[i] >> r[i]; do { for (int i = 1; i <= n; i++) { p[i] = p[i - 1] + (p[i % 3] != v[i]); } for (int i = 1; i <= m; i++) ans[i] = min(ans[i], p[r[i]] - p[l[i] - 1]); } while (next_permutation(k.begin(), k.end())); for (int i = 1; i <= m; i++) cout << ans[i] << "\n"; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 5; const int inf = 1e9; int n, m, v[maxn], l[maxn], ans[maxn], r[maxn], p[maxn]; char c; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { cin >> c; v[i] = c - 'a'; } vector<int> k; for (int i = 0; i < 3; i++) k.push_back(i); for (int i = 1; i <= m; i++) ans[i] = inf; for (int i = 1; i <= m; i++) cin >> l[i] >> r[i]; do { for (int i = 1; i <= n; i++) { p[i] = p[i - 1] + (k[i % 3] != v[i]); } for (int i = 1; i <= m; i++) ans[i] = min(ans[i], p[r[i]] - p[l[i] - 1]); } while (next_permutation(k.begin(), k.end())); for (int i = 1; i <= m; i++) cout << ans[i] << "\n"; }
41	 #include <bits/stdc++.h> using namespace std; const int MAX = 200005; int sum[6][MAX]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); ; int n, m, l, r; string s, temp[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; cin >> n >> m; cin >> s; for (int i = 0; i < 6; i++) { for (int j = 0; j < n; j++) { if (temp[i][j % 3] != s[j]) sum[i][j] = 1; if (j > 0) sum[i][j] += sum[i][j - 1]; } } for (int i = 0; i < m; i++) { cin >> l >> r; int ans = 2e9; for (int j = 0; j < 6; j++) { if (i > 0) ans = min(ans, sum[j][r - 1] - sum[j][l - 2]); else ans = min(ans, sum[j][r - 1]); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; const int MAX = 200005; int sum[6][MAX]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); ; int n, m, l, r; string s, temp[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; cin >> n >> m; cin >> s; for (int i = 0; i < 6; i++) { for (int j = 0; j < n; j++) { if (temp[i][j % 3] != s[j]) sum[i][j] = 1; if (j > 0) sum[i][j] += sum[i][j - 1]; } } for (int i = 0; i < m; i++) { cin >> l >> r; int ans = 2e9; for (int j = 0; j < 6; j++) { if (l > 0) ans = min(ans, sum[j][r - 1] - sum[j][l - 2]); else ans = min(ans, sum[j][r - 1]); } cout << ans << endl; } }
41	 #include <bits/stdc++.h> using namespace std; const long long MXN = 3e5 + 10; long long n, q; long long A[MXN], ps[6][MXN][3]; vector<long long> perm[6]; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); perm[0] = {0, 1, 2}; for (int i = 1; i < 6; i++) { perm[i] = perm[i - 1]; next_permutation(perm[i].begin(), perm[i].end()); } cin >> n >> q; for (int i = 1; i <= n; i++) { char ch; cin >> ch; A[i] = (ch - 'a'); } for (int j = 0; j < 6; j++) { for (int i = 1; i <= n; i++) { for (int k = 0; k < 3; k++) { ps[j][i][k] = ps[j][i - 1][(k + 2) & 3] + (perm[j][k] != A[i]); } } } while (q--) { long long ans = n, l, r; cin >> l >> r; for (int j = 0; j < 6; j++) { long long now = ps[j][r][(r - l) & 3] - ps[j][l - 1][2]; ans = min(ans, now); } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long MXN = 3e5 + 10; long long n, q; long long A[MXN], ps[6][MXN][3]; vector<long long> perm[6]; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); perm[0] = {0, 1, 2}; for (int i = 1; i < 6; i++) { perm[i] = perm[i - 1]; next_permutation(perm[i].begin(), perm[i].end()); } cin >> n >> q; for (int i = 1; i <= n; i++) { char ch; cin >> ch; A[i] = (ch - 'a'); } for (int j = 0; j < 6; j++) { for (int i = 1; i <= n; i++) { for (int k = 0; k < 3; k++) { ps[j][i][k] = ps[j][i - 1][(k + 2) % 3] + (perm[j][k] != A[i]); } } } while (q--) { long long ans = n, l, r; cin >> l >> r; for (int j = 0; j < 6; j++) { long long now = ps[j][r][(r - l) % 3] - ps[j][l - 1][2]; ans = min(ans, now); } cout << ans << '\n'; } return 0; }
41	 #include <bits/stdc++.h> using namespace std; int main() { int n; int queryn; string s; cin >> n >> queryn; cin >> s; int dp[6][n]; int query[queryn][2]; string com[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; for (int i = 0; i < queryn; i++) { cin >> query[i][0] >> query[i][1]; } for (int k = 0; k < 6; k++) { int cost = 0; for (int i = 0, it = 0; i < n; i++, it++) { it = it % 3; if (s[i] != com[k][it]) { dp[k][i] = ++cost; } else { dp[k][i] = cost; } } } for (int w = 0; w < queryn; w++) { int sum = 100000000; for (int k = 0; k < 6; k++) { sum = min(dp[k][query[w][1] - 1] - ((query[w][0] - 2 > 0) ? dp[k][query[w][0] - 2] : 0), sum); } cout << sum << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n; int queryn; string s; cin >> n >> queryn; cin >> s; int dp[6][n]; int query[queryn][2]; string com[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; for (int i = 0; i < queryn; i++) { cin >> query[i][0] >> query[i][1]; } for (int k = 0; k < 6; k++) { int cost = 0; for (int i = 0, it = 0; i < n; i++, it++) { it = it % 3; if (s[i] != com[k][it]) { dp[k][i] = ++cost; } else { dp[k][i] = cost; } } } for (int w = 0; w < queryn; w++) { int sum = 100000000; for (int k = 0; k < 6; k++) { sum = min(dp[k][query[w][1] - 1] - ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0), sum); } cout << sum << endl; } return 0; }
41	 #include <bits/stdc++.h> using namespace std; int main() { int n; int queryn; string s; cin >> n >> queryn; cin >> s; int dp[6][n]; int query[queryn][2]; string com[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; for (int i = 0; i < queryn; i++) { cin >> query[i][0] >> query[i][1]; } for (int k = 0; k < 6; k++) { int cost = 0; for (int i = 0, it = 0; i < n; i++, it++) { it = it % 3; if (s[i] != com[k][it]) { dp[k][i] = ++cost; } else { dp[k][i] = cost; } } } for (int w = 0; w < queryn; w++) { int sum = 10000000; for (int k = 0; k < 6; k++) { sum = min(dp[k][query[w][1] - 1] - ((query[w][0] - 2 > 0) ? dp[k][query[w][0] - 2] : 0), sum); } cout << sum << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n; int queryn; string s; cin >> n >> queryn; cin >> s; int dp[6][n]; int query[queryn][2]; string com[6] = {"abc", "acb", "bac", "bca", "cab", "cba"}; for (int i = 0; i < queryn; i++) { cin >> query[i][0] >> query[i][1]; } for (int k = 0; k < 6; k++) { int cost = 0; for (int i = 0, it = 0; i < n; i++, it++) { it = it % 3; if (s[i] != com[k][it]) { dp[k][i] = ++cost; } else { dp[k][i] = cost; } } } for (int w = 0; w < queryn; w++) { int sum = 100000000; for (int k = 0; k < 6; k++) { sum = min(dp[k][query[w][1] - 1] - ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0), sum); } cout << sum << endl; } return 0; }
44	 #include <bits/stdc++.h> using namespace std; const char nl = '\n'; const int MAX_N = 100011; const long long INF = (1 << 29) + 123; const long long MOD = 1000000007; const long double PI = 4 * atan((long double)1); template <typename T> bool ckmin(T& a, const T& b) { return a > b ? a = b, 1 : 0; } template <typename T> bool ckmax(T& a, const T& b) { return b > a ? a = b, 1 : 0; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << H << " "; dbg_out(T...); } template <typename T> class SafeVector : public vector<T> { public: using vector<T>::vector; typename vector<T>::reference operator[](size_t n) { return vector<T>::at(n); } typename vector<T>::const_reference operator[](size_t n) const { return vector<T>::at(n); } }; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); const int MX = 1 << 20; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { int c, d; cin >> c >> d; if ((c - d) % 2 == 1) cout << -1 << nl; else if (c == d && c == 0) cout << 0 << nl; else if (c == d) cout << 1 << nl; else cout << 2 << nl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const char nl = '\n'; const int MAX_N = 100011; const long long INF = (1 << 29) + 123; const long long MOD = 1000000007; const long double PI = 4 * atan((long double)1); template <typename T> bool ckmin(T& a, const T& b) { return a > b ? a = b, 1 : 0; } template <typename T> bool ckmax(T& a, const T& b) { return b > a ? a = b, 1 : 0; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << H << " "; dbg_out(T...); } template <typename T> class SafeVector : public vector<T> { public: using vector<T>::vector; typename vector<T>::reference operator[](size_t n) { return vector<T>::at(n); } typename vector<T>::const_reference operator[](size_t n) const { return vector<T>::at(n); } }; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); const int MX = 1 << 20; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { int c, d; cin >> c >> d; if ((c - d) % 2) cout << -1 << nl; else if (c == d && c == 0) cout << 0 << nl; else if (c == d) cout << 1 << nl; else cout << 2 << nl; } return 0; }
44	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e5 + 5; long long power(long long x, long long n) { long long res = 1; while (n) { if (n & 1) res = 1LL * res * x % mod; x = 1LL * x * x % mod; n >>= 1; } return res; } bool isPrime(long long n) { static long long i = 2; if (n == 0 || n == 1) { return false; } if (n == i) return true; if (n % i == 0) { return false; } i++; return isPrime(n); } int32_t main() { ios::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long c, d; cin >> c >> d; if (c == 0 && d == 0) { cout << 0 << '\n'; continue; } long long diff = abs(c - d); if (diff == 0) { cout << 1 << '\n'; } else if ((c + d) % 1) { cout << -1 << '\n'; } else { cout << 2 << '\n'; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e5 + 5; long long power(long long x, long long n) { long long res = 1; while (n) { if (n & 1) res = 1LL * res * x % mod; x = 1LL * x * x % mod; n >>= 1; } return res; } bool isPrime(long long n) { static long long i = 2; if (n == 0 || n == 1) { return false; } if (n == i) return true; if (n % i == 0) { return false; } i++; return isPrime(n); } int32_t main() { ios::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long c, d; cin >> c >> d; if (c == 0 && d == 0) { cout << 0 << '\n'; continue; } long long diff = abs(c - d); if (diff == 0) { cout << 1 << '\n'; } else if ((c + d) & 1) { cout << -1 << '\n'; } else { cout << 2 << '\n'; } } return 0; }
44	 #include <bits/stdc++.h> using namespace std; void solve() { int a, b; cin >> a >> b; if ((a - b) % 2 == 1) { cout << -1 << '\n'; } else if (a == b && a == 0) { cout << 0 << '\n'; } else if (a == b) { cout << 1 << '\n'; } else { cout << 2 << '\n'; } } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { int a, b; cin >> a >> b; if (abs(a - b) % 2 == 1) { cout << -1 << '\n'; } else if (a == b && a == 0) { cout << 0 << '\n'; } else if (a == b) { cout << 1 << '\n'; } else { cout << 2 << '\n'; } } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); }
44	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { int x, y; cin >> x >> y; int d = abs(x - y); if (d == 1) { cout << -1 << '\n'; } else if (d == 0) { if (x == 0) { cout << 0 << '\n'; } else { cout << 1 << '\n'; } } else if (d == 2) { cout << 2 << '\n'; } else { if (d % 2 == 0) { if (x == 0 || y == 0) { cout << 2 << '\n'; } else { cout << 3 << '\n'; } } else cout << -1 << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { int x, y; cin >> x >> y; int d = abs(x - y); if (d == 1) { cout << -1 << '\n'; } else if (d == 0) { if (x == 0) { cout << 0 << '\n'; } else { cout << 1 << '\n'; } } else if (d == 2) { cout << 2 << '\n'; } else { if (d % 2 == 0) { if (x == 0 || y == 0) { cout << 2 << '\n'; } else { cout << 2 << '\n'; } } else cout << -1 << '\n'; } } }
44	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; for (int i = 0; i < t; i++) { long long c, d; cin >> c >> d; if (abs(c - d) % 2 != 0) { cout << -1 << endl; } else if (c == d && c == 0) { cout << 0 << endl; } else if (abs(c) == abs(d) && c != 0) { cout << 1 << endl; } else if (((c > 0 && d < 0) || (c < 0 && d > 0)) && abs(c) != abs(d)) { if (c > d) { if (abs(c) > abs(d)) { cout << 2 << endl; } else { cout << -1 << endl; } } if (c < d) { if (abs(c) < abs(d)) { cout << 2 << endl; } else { cout << -1 << endl; } } else { cout << 2 << endl; } } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; for (int i = 0; i < t; i++) { long long c, d; cin >> c >> d; if (abs(c - d) % 2 != 0) { cout << -1 << endl; } else if (c == d && c == 0) { cout << 0 << endl; } else if (abs(c) == abs(d) && c != 0) { cout << 1 << endl; } else if (((c > 0 && d < 0) || (c < 0 && d > 0)) && abs(c) != abs(d)) { if (c > d) { if (abs(c) > abs(d)) { cout << 2 << endl; } else { cout << -1 << endl; } } if (c < d) { if (abs(c) < abs(d)) { cout << 2 << endl; } else { cout << -1 << endl; } } } else { cout << 2 << endl; } } }
44	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long c, d; cin >> c >> d; if (c == 0 && d == 0) { cout << 0 << endl; continue; } if (abs(c) == abs(d)) { cout << 1 << endl; continue; } if (abs(c - d) == 1) { cout << -1 << endl; continue; } cout << 2 << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long c, d; cin >> c >> d; if (c == 0 && d == 0) { cout << 0 << endl; continue; } if (abs(c) == abs(d)) { cout << 1 << endl; continue; } if (abs(c - d) % 2) { cout << -1 << endl; continue; } cout << 2 << endl; } }
45	 #include <bits/stdc++.h> using namespace std; long long c, j, d, t, k, i, x, n, m, u; signed main() { cin >> t; for (i = 1; i <= t; i++) { cin >> n; vector<long long> v; for (j = 1; j <= n; j++) { cin >> x; if (x % 2 == 0) { v.push_back(j); } } if (n % 2 == 0) { k = n / 2; m = 0; u = 0; if (v.size() != k) { cout << -1 << "\n"; } else { for (j = 1; j <= k; j++) { m = m + abs(v[j - 1] - 2 * j + 1); u = u + abs(v[j - 1] - 2 * j); } if (m < u) { cout << m << "\n"; } else { cout << u << "\n"; } } } else { k = n / 2; m = 0; u = 0; if (v.size() == k) { for (j = 1; j <= k; j++) { m = m + abs(v[j - 1] - 2 * j); } cout << n << "\n"; } else if (v.size() == k + 1) { for (j = 1; j <= k + 1; j++) { u = u + abs(v[j - 1] - 2 * j + 1); } cout << u << "\n"; } else { cout << -1 << "\n"; } } } }	 #include <bits/stdc++.h> using namespace std; long long c, j, d, t, k, i, x, n, m, u; signed main() { cin >> t; for (i = 1; i <= t; i++) { cin >> n; vector<long long> v; for (j = 1; j <= n; j++) { cin >> x; if (x % 2 == 0) { v.push_back(j); } } if (n % 2 == 0) { k = n / 2; m = 0; u = 0; if (v.size() != k) { cout << -1 << "\n"; } else { for (j = 1; j <= k; j++) { m = m + abs(v[j - 1] - 2 * j + 1); u = u + abs(v[j - 1] - 2 * j); } if (m < u) { cout << m << "\n"; } else { cout << u << "\n"; } } } else { k = n / 2; m = 0; u = 0; if (v.size() == k) { for (j = 1; j <= k; j++) { m = m + abs(v[j - 1] - 2 * j); } cout << m << "\n"; } else if (v.size() == k + 1) { for (j = 1; j <= k + 1; j++) { u = u + abs(v[j - 1] - 2 * j + 1); } cout << u << "\n"; } else { cout << -1 << "\n"; } } } }
45	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 5; void maxi() { long long n; vector<int> v[2]; cin >> n; v[0].clear(), v[1].clear(); for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i); if (v[0].size() < v[1].size()) swap(v[0], v[1]); if (v[0].size() != (n + 1) / 2) { cout << -1 << endl; return; } long long ret = n * 1; for (int i = 0; i < 2 - (n & 1); i++) { long long x = 0; for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j); ret = min(ret, x); } cout << ret << endl; } int main() { long long t; cin >> t; while (t--) { maxi(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 5; void maxi() { long long n; vector<int> v[2]; cin >> n; v[0].clear(), v[1].clear(); for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i); if (v[0].size() < v[1].size()) swap(v[0], v[1]); if (v[0].size() != (n + 1) / 2) { cout << -1 << endl; return; } long long ret = n * n; for (int i = 0; i < 2 - (n & 1); i++) { long long x = 0; for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j); ret = min(ret, x); } cout << ret << endl; } int main() { long long t; cin >> t; while (t--) { maxi(); } return 0; }
45	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 5; void maxi() { long long n; vector<int> v[2]; cin >> n; v[0].clear(), v[1].clear(); for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i); if (v[0].size() < v[1].size()) swap(v[0], v[1]); if (v[0].size() != (n + 1) / 2) { cout << -1 << endl; return; } long long ret = n * 2; for (int i = 0; i < 2 - (n & 1); i++) { long long x = 0; for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j); ret = min(ret, x); } cout << ret << endl; } int main() { long long t; cin >> t; while (t--) { maxi(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 5; void maxi() { long long n; vector<int> v[2]; cin >> n; v[0].clear(), v[1].clear(); for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i); if (v[0].size() < v[1].size()) swap(v[0], v[1]); if (v[0].size() != (n + 1) / 2) { cout << -1 << endl; return; } long long ret = n * n; for (int i = 0; i < 2 - (n & 1); i++) { long long x = 0; for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j); ret = min(ret, x); } cout << ret << endl; } int main() { long long t; cin >> t; while (t--) { maxi(); } return 0; }
46	 #include <bits/stdc++.h> using namespace std; template <class... Args> void debug(Args... args) { auto tmp = {(cout << args << '\t', 0)...}; cout << endl; } using ll = long long; const int N = 1e3 + 10; const int mod = 4933; const double eps = 1e-9; ll a[N]; int n; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cin >> n; for (int i = 1; i <= n; ++i) { cin >> a[i]; } ll ans = 0; for (int i = 1; i <= n; i += 2) { ll x = 0; ll y = 0; ll z = 1; for (int j = i + 1; j <= n; j += 2) { int d = abs(x - y); if (x == y) { ans += max(0ll, min(a[i], a[j]) - z + 1); } else if (x > y) { ans += max(0ll, min(a[i], a[j] - d) - z + 1); } else { ans += max(0ll, min(a[i] - d, a[j]) - max(1ll, z - d) + 1); } y += a[j]; z = max(z, y - x); x += a[j + 1]; } } cout << ans; }	 #include <bits/stdc++.h> using namespace std; template <class... Args> void debug(Args... args) { auto tmp = {(cout << args << '\t', 0)...}; cout << endl; } using ll = long long; const int N = 1e3 + 10; const int mod = 4933; const double eps = 1e-9; ll a[N]; int n; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cin >> n; for (int i = 1; i <= n; ++i) { cin >> a[i]; } ll ans = 0; for (int i = 1; i <= n; i += 2) { ll x = 0; ll y = 0; ll z = 1; for (int j = i + 1; j <= n; j += 2) { ll d = abs(x - y); if (x == y) { ans += max(0ll, min(a[i], a[j]) - z + 1); } else if (x > y) { ans += max(0ll, min(a[i], a[j] - d) - z + 1); } else { ans += max(0ll, min(a[i] - d, a[j]) - max(1ll, z - d) + 1); } y += a[j]; z = max(z, y - x); x += a[j + 1]; } } cout << ans; }
47	 #include <bits/stdc++.h> using namespace std; int main() { int n, k; cin >> n >> k; vector<int> v; int x, y, z, a, b, c; int x1, y1; cout << "and 1 2" << endl; cin >> x1; cout << "or 1 2" << endl; cin >> y1; x = x1 + y1; cout << "and 3 2" << endl; cin >> x1; cout << "or 3 2" << endl; cin >> y1; z = x1 + y1; cout << "and 1 3" << endl; cin >> x1; cout << "or 1 3" << endl; cin >> y1; y = x1 + y1; a = (x - z + y) / 2; b = (z - y + x) / 2; c = (y + z - x) / 2; v.push_back(a); v.push_back(b); v.push_back(c); for (int i = 4; i <= n; i++) { cout << "and 1 " << i << endl; cin >> x1; cout << "or 1 " << i << endl; cin >> y1; x = x1 + y1; v.push_back(x - 1); } sort(v.begin(), v.end()); cout << "finish " << v[k - 1] << endl; }	 #include <bits/stdc++.h> using namespace std; int main() { int n, k; cin >> n >> k; vector<int> v; int x, y, z, a, b, c; int x1, y1; cout << "and 1 2" << endl; cin >> x1; cout << "or 1 2" << endl; cin >> y1; x = x1 + y1; cout << "and 3 2" << endl; cin >> x1; cout << "or 3 2" << endl; cin >> y1; z = x1 + y1; cout << "and 1 3" << endl; cin >> x1; cout << "or 1 3" << endl; cin >> y1; y = x1 + y1; a = (x - z + y) / 2; b = (z - y + x) / 2; c = (y + z - x) / 2; v.push_back(a); v.push_back(b); v.push_back(c); for (int i = 4; i <= n; i++) { cout << "and 1 " << i << endl; cin >> x1; cout << "or 1 " << i << endl; cin >> y1; x = x1 + y1; v.push_back(x - a); } sort(v.begin(), v.end()); cout << "finish " << v[k - 1] << endl; }
47	 #include <bits/stdc++.h> using namespace std; long long ask1(long long a, long long b) { cout << "and " << a << " " << b << "\n"; long long n; cin >> n; return n; } long long ask2(long long a, long long b) { cout << "or " << a << " " << b << "\n"; long long n; cin >> n; return n; } int32_t main() { long long T = 1; while (T--) { long long n, k; cin >> n >> k; vector<long long> v(n); long long a12 = ask1(1, 2); long long o12 = ask2(1, 2); long long a23 = ask1(2, 3); long long o23 = ask2(2, 3); long long a13 = ask1(1, 3); long long o13 = ask2(1, 3); long long o123 = o12 | o23; long long a123 = a12 | a23; long long a = -(o123 - o23 + a12 + a13 - a123); long long b = o12 - (a - a12); long long c = o13 - (a - a13); v[0] = a; v[1] = b; v[2] = c; for (long long i = 3; i < n; i++) { long long ba = ask1(1, i + 1); long long bo = ask2(1, i + 1); v[i] = bo - (a - ba); } sort(v.begin(), v.end()); cout << "finish " << v[k - 1] << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long ask1(long long a, long long b) { cout << "and " << a << " " << b << "\n"; long long n; cin >> n; return n; } long long ask2(long long a, long long b) { cout << "or " << a << " " << b << "\n"; long long n; cin >> n; return n; } int32_t main() { long long T = 1; while (T--) { long long n, k; cin >> n >> k; vector<long long> v(n); long long a12 = ask1(1, 2); long long o12 = ask2(1, 2); long long a23 = ask1(2, 3); long long o23 = ask2(2, 3); long long a13 = ask1(1, 3); long long o13 = ask2(1, 3); long long o123 = o12 | o23; long long a123 = a12 & a23; long long a = (o123 - o23 + a12 + a13 - a123); long long b = o12 - (a - a12); long long c = o13 - (a - a13); v[0] = a; v[1] = b; v[2] = c; for (long long i = 3; i < n; i++) { long long ba = ask1(1, i + 1); long long bo = ask2(1, i + 1); v[i] = bo - (a - ba); } sort(v.begin(), v.end()); cout << "finish " << v[k - 1] << "\n"; } }
47	 #include <bits/stdc++.h> using namespace std; long long ior(long long i, long long j) { cout << "or " << i << " " << j << "\n"; cout.flush(); long long ret; cin >> ret; return ret; } long long iand(long long i, long long j) { cout << "and " << i << " " << j << "\n"; cout.flush(); long long ret; cin >> ret; return ret; } void ifinish(long long n) { cout << "finish " << n << "\n"; cout.flush(); } int main() { ios_base::sync_with_stdio(0); cin.tie(0); long long a, b, c, d, e, f, i, j, k, m, n, o, x, y, z; cin >> n >> k; x = ior(1, 2) + iand(1, 2); y = ior(2, 3) + iand(2, 3); z = ior(3, 1) + iand(3, 1); a = (z + x - y) / 2; b = x - a; c = z - a; vector<long long> v; v.push_back(a); v.push_back(b); v.push_back(c); for (i = 3; i < n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i)); sort(v.begin(), v.end()); ifinish(v[k - 1]); }	 #include <bits/stdc++.h> using namespace std; long long ior(long long i, long long j) { cout << "or " << i << " " << j << "\n"; cout.flush(); long long ret; cin >> ret; return ret; } long long iand(long long i, long long j) { cout << "and " << i << " " << j << "\n"; cout.flush(); long long ret; cin >> ret; return ret; } void ifinish(long long n) { cout << "finish " << n << "\n"; cout.flush(); } int main() { ios_base::sync_with_stdio(0); cin.tie(0); long long a, b, c, d, e, f, i, j, k, m, n, o, x, y, z; cin >> n >> k; x = ior(1, 2) + iand(1, 2); y = ior(2, 3) + iand(2, 3); z = ior(3, 1) + iand(3, 1); a = (z + x - y) / 2; b = x - a; c = z - a; vector<long long> v; v.push_back(a); v.push_back(b); v.push_back(c); for (i = 4; i <= n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i)); sort(v.begin(), v.end()); ifinish(v[k - 1]); }
52	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n); for (int i = 0; i < n; i++) { cin >> a[i]; } sort(a.begin(), a.end()); vector<int> pref(n + 1); for (int i = 0; i < n; i++) { pref[i + 1] = pref[i] + a[i]; } double ans = -1e30; for (int i = 0; i < n - 1; i++) { double x = (double)pref[i + 1] / (i + 1); double y = (double)(pref[n] - pref[i + 1]) / (n - i - 1); ans = max(ans, x + y); } cout << fixed << setprecision(17) << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n); for (int i = 0; i < n; i++) { cin >> a[i]; } sort(a.begin(), a.end()); vector<long long> pref(n + 1); for (int i = 0; i < n; i++) { pref[i + 1] = pref[i] + a[i]; } double ans = -1e30; for (int i = 0; i < n - 1; i++) { double x = (double)pref[i + 1] / (i + 1); double y = (double)(pref[n] - pref[i + 1]) / (n - i - 1); ans = max(ans, x + y); } cout << fixed << setprecision(17) << ans << '\n'; } return 0; }
52	 #include <bits/stdc++.h> #pragma GCC optimize("O3") #pragma GCC target("sse4") using namespace std; template <class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; } template <class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; } mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); const int MOD = 1000000007; const char nl = '\n'; const int MX = 100001; void ap_99() { freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout); } void solve() { int n; cin >> n; vector<int> v; long double sum = 0; for (int i = 0; i < (n); i++) { int t; cin >> t; sum += t; v.push_back(t); } sort(v.begin(), v.end()); reverse(v.begin(), v.end()); long double avg = 0; long double sum1 = 0; long double sum2 = 0; long double mx = -1000000001; for (int i = 0; i < (n); i++) { sum1 += v[i]; sum2 = sum - sum1; avg = sum1 / (i + 1) + sum2 / (n - i - 1); if (avg > mx) { mx = avg; } } cout << fixed << setprecision(9) << mx; cout << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int T = 1; cin >> T; while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("O3") #pragma GCC target("sse4") using namespace std; template <class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; } template <class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; } mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); const int MOD = 1000000007; const char nl = '\n'; const int MX = 100001; void ap_99() { freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout); } void solve() { int n; cin >> n; vector<int> v; long double sum = 0; for (int i = 0; i < (n); i++) { int t; cin >> t; sum += t; v.push_back(t); } sort(v.begin(), v.end()); reverse(v.begin(), v.end()); long double avg = 0; long double sum1 = 0; long double sum2 = 0; long double mx = -2000000001; for (int i = 0; i < (n - 1); i++) { sum1 += v[i]; sum2 = sum - sum1; avg = sum1 / (i + 1) + sum2 / (n - i - 1); if (avg > mx) { mx = avg; } } cout << fixed << setprecision(12) << mx; cout << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int T = 1; cin >> T; while (T--) { solve(); } return 0; }
52	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, n; cin >> t; while (t--) { double s = 0.0; cin >> n; int ara[n]; for (long long int i = 0; i < n; i++) { cin >> ara[i]; s += ara[i]; } sort(ara, ara + n); s -= ara[n - 1]; s = s / (n - 1) * 1.0 + ara[n - 1] * 1.0; printf("%0.8lf", s); } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, n; cin >> t; while (t--) { double s = 0.0; cin >> n; int ara[n]; for (long long int i = 0; i < n; i++) { cin >> ara[i]; s += ara[i]; } sort(ara, ara + n); s -= ara[n - 1]; s = s / (n - 1) * 1.0 + ara[n - 1] * 1.0; printf("%0.8lf\n", s); } }
52	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; long long a[n]; double sum = 0.0; for (long long i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } sort(a, a + n); sum -= a[n - 1]; sum = sum / (n - 1); double ans = (a[n - 1] / 1) + sum; printf("%.9f", ans); } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; long long a[n]; double sum = 0.0; for (long long i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } sort(a, a + n); sum -= a[n - 1]; sum = sum / (n - 1); double ans = (a[n - 1] / 1) + sum; printf("%.9f\n", ans); } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { solve(); } return 0; }
53	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, k; cin >> n >> k; vector<pair<int, int>> a(n); for (int i = 0; i < n; i++) { cin >> a[i].first; a[i].second = i; } sort(a.begin(), a.end()); int j = 0, part = 0; for (j = 1; j < n; j++) { if (a[j - 1].second + 1 != a[j].second) { part++; } } if (part <= k) { cout << "YES" << endl; } else { cout << "NO" << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, k; cin >> n >> k; vector<pair<int, int>> a(n); for (int i = 0; i < n; i++) { cin >> a[i].first; a[i].second = i; } sort(a.begin(), a.end()); int j = 0, part = 1; for (j = 1; j < n; j++) { if (a[j - 1].second + 1 != a[j].second) { part++; } } if (part <= k) { cout << "YES" << endl; } else { cout << "NO" << endl; } } }
53	 #include <bits/stdc++.h> using namespace std; bool isPrime(long long n) { if (n == 1) return false; if (n == 2) return true; for (long long i = 2; i * i <= n; i++) { if (n % i == 0) return false; } return true; } void solve() { long long n, k; cin >> n >> k; vector<pair<long long, long long>> a(n); long long y = 0; long long i = 0; for (auto &x : a) { cin >> x.first; x.second = i; i++; } sort(a.begin(), a.end()); for (long long i = 0; i < n - 1; i++) { if (a[i + 1].second - 1 != a[i].second) { y++; } } if (y + 1 == k) { cout << "Yes" << endl; } else cout << "No" << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; bool isPrime(long long n) { if (n == 1) return false; if (n == 2) return true; for (long long i = 2; i * i <= n; i++) { if (n % i == 0) return false; } return true; } void solve() { long long n, k; cin >> n >> k; vector<pair<long long, long long>> a(n); long long y = 0; long long i = 0; for (auto &x : a) { cin >> x.first; x.second = i; i++; } sort(a.begin(), a.end()); for (long long i = 0; i < n - 1; i++) { if (a[i + 1].second - 1 != a[i].second) { y++; } } if (y + 1 <= k) { cout << "Yes" << endl; } else cout << "No" << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long t; cin >> t; while (t--) { solve(); } return 0; }
53	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e5 + 10; int n, k; struct st { int v, p; }; bool cmp(st a, st b) { return a.v < b.v; } st a[MAX]; void solve() { sort(a + 1, a + n + 1, cmp); int t = 0; for (int i = 2; i <= n; ++i) { if (a[i].p == a[i - 1].p + 1) { while (1) { if (a[i].p != a[i - 1].p + 1) break; else { ++i; } } --i; } else { ++t; } } if (t + 1 == k) cout << "YES\n"; else cout << "NO\n"; } int main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); int T; cin >> T; while (T--) { cin >> n >> k; for (int i = 1; i <= n; ++i) { cin >> a[i].v; a[i].p = i; } solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e5 + 10; int n, k; struct st { int v, p; }; bool cmp(st a, st b) { return a.v < b.v; } st a[MAX]; void solve() { sort(a + 1, a + n + 1, cmp); int t = 0; for (int i = 2; i <= n; ++i) { if (a[i].p == a[i - 1].p + 1) { while (1) { if (a[i].p != a[i - 1].p + 1) break; else { ++i; } } --i; } else { ++t; } } if (t + 1 <= k) cout << "YES\n"; else cout << "NO\n"; } int main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); int T; cin >> T; while (T--) { cin >> n >> k; for (int i = 1; i <= n; ++i) { cin >> a[i].v; a[i].p = i; } solve(); } return 0; }
53	 #include <bits/stdc++.h> using namespace std; signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; long long int a[n + 10]; set<long long int> s; for (long long int i = 0; i < n; i++) { cin >> a[i]; s.insert(a[i]); } long long int ctr = 0; for (long long int i = 0; i < n - 1; i++) { if (a[i + 1] > a[i]) { auto it = s.find(a[i + 1]); --it; if (a[i] == (*it)) { continue; } } ctr++; } if (ctr <= k) cout << "Yes\n"; else cout << "No\n"; } }	 #include <bits/stdc++.h> using namespace std; signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; long long int a[n + 10]; set<long long int> s; for (long long int i = 0; i < n; i++) { cin >> a[i]; s.insert(a[i]); } long long int ctr = 1; for (long long int i = 0; i < n - 1; i++) { if (a[i + 1] > a[i]) { auto it = s.find(a[i + 1]); --it; if (a[i] == (*it)) { continue; } } ctr++; } if (ctr <= k) cout << "Yes\n"; else cout << "No\n"; } }
53	 #include <bits/stdc++.h> using namespace std; using int64 = int64_t; vector<int> xs(100000), ys(100000); vector<int> ms(100000); map<int, int> xsIndexMap; void solve() { int n, k; cin >> n >> k; for (int i = 0; i < n; ++i) { cin >> xs[i]; ys[i] = xs[i]; xsIndexMap[xs[i]] = i; } sort(ys.begin(), ys.begin() + n); int m = 0; for (int i = 0; i < n; ++i) { int y0 = ys[i]; int xStart = xsIndexMap[y0]; int xEnd = xStart + 1; while (xEnd < n && xs[xEnd] == ys[i + xEnd - xStart]) { ++xEnd; } i += xEnd - xStart - 1; ms[i] = xEnd - xStart; ++m; } bool result = false; if (m == k) { result = true; } else if (m > k) { result = false; } else { int m2 = m; for (int i = 0; i < m; ++i) { m2 += ms[i] - 1; } result = (m2 >= k); } if (result) { cout << "YES" << endl; } else { cout << "NO" << endl; } } int main() { int nCases; cin >> nCases; for (int i = 0; i < nCases; ++i) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using int64 = int64_t; vector<int> xs(100000), ys(100000); vector<int> ms(100000); map<int, int> xsIndexMap; void solve() { int n, k; cin >> n >> k; for (int i = 0; i < n; ++i) { cin >> xs[i]; ys[i] = xs[i]; xsIndexMap[xs[i]] = i; } sort(ys.begin(), ys.begin() + n); int m = 0; for (int i = 0; i < n; ++i) { int y0 = ys[i]; int xStart = xsIndexMap[y0]; int xEnd = xStart + 1; while (xEnd < n && xs[xEnd] == ys[i + xEnd - xStart]) { ++xEnd; } i += xEnd - xStart - 1; ms[m] = xEnd - xStart; ++m; } bool result = false; if (m == k) { result = true; } else if (m > k) { result = false; } else { int m2 = m; for (int i = 0; i < m; ++i) { m2 += ms[i] - 1; } result = (m2 >= k); } if (result) { cout << "YES" << endl; } else { cout << "NO" << endl; } } int main() { int nCases; cin >> nCases; for (int i = 0; i < nCases; ++i) { solve(); } return 0; }
54	 #include <bits/stdc++.h> using namespace std; long long mod = 1e9 + 7; const int mx = 2e5 + 5; vector<int> fact(mx, 1), inv(mx, 1); long long binpow(long long a, long long b, long long m) { a %= m; long long res = 1; while (b > 0) { if (b & 1) res = res * a % m; a = a * a % m; b >>= 1; } return res; } void precompute() { fact[0] = inv[0] = 1; for (int i = 1; i < mx; i++) { fact[i] *= fact[i - 1] % mod; inv[i] = binpow(i, mod - 2, mod); } } void solve() { long long n, k; cin >> n >> k; int flag = 0; if (n % 2 == 1) flag = 1; long long eq = 1, ans = 0; for (int i = 1; i <= k; i++) { if (flag == 1) { eq *= binpow(2, n - 1, mod) + 1; eq %= mod; } else { long long gr; if (i == k) gr = 1; else gr = binpow(binpow(2, n - 1, mod) % mod, k - i, mod); gr %= mod; gr *= eq; gr %= mod; ans += gr; eq *= binpow(2, n - 1, mod) - 1; eq += mod; eq %= mod; } } ans += eq; ans %= mod; cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout << fixed << setprecision(10); int t = 1; cin >> t; precompute(); while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; long long mod = 1e9 + 7; const int mx = 2e5 + 5; vector<int> fact(mx, 1), inv(mx, 1); long long binpow(long long a, long long b, long long m) { a %= m; long long res = 1; while (b > 0) { if (b & 1) res = res * a % m; a = a * a % m; b >>= 1; } return res; } void precompute() { fact[0] = inv[0] = 1; for (int i = 1; i < mx; i++) { fact[i] *= fact[i - 1] % mod; inv[i] = binpow(i, mod - 2, mod); } } void solve() { long long n, k; cin >> n >> k; int flag = 0; if (n % 2 == 1) flag = 1; long long eq = 1, ans = 0; for (int i = 1; i <= k; i++) { if (flag == 1) { eq *= binpow(2, n - 1, mod) + 1; eq %= mod; } else { long long gr; if (i == k) gr = 1; else gr = binpow(binpow(2, n, mod) % mod, k - i, mod); gr %= mod; gr *= eq; gr %= mod; ans += gr; eq *= binpow(2, n - 1, mod) - 1; eq += mod; eq %= mod; } } ans += eq; ans %= mod; cout << ans << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout << fixed << setprecision(10); int t = 1; cin >> t; precompute(); while (t--) solve(); }
54	 #include <bits/stdc++.h> long long power(long long a, int k) { long long p = 1; while (k) { if (k & 1) p = p * a % 1000000007; a = a * a % 1000000007; k >>= 1; } return p; } int main() { int t; scanf("%d", &t); while (t--) { int n, k, i, ans; scanf("%d%d", &n, &k); if (k == 0) printf("1\n"); else if (n % 2 == 1) printf("%lld\n", power(power(2, n - 1) + 1, k)); else { ans = power(power(2, n - 1) - 1, n); for (i = 0; i < k; i++) ans = (ans + power(power(2, n - 1) - 1, i) * power(power(2, n), k - 1 - i)) % 1000000007; printf("%d\n", ans); } } return 0; }	 #include <bits/stdc++.h> long long power(long long a, int k) { long long p = 1; while (k) { if (k & 1) p = p * a % 1000000007; a = a * a % 1000000007; k >>= 1; } return p; } int main() { int t; scanf("%d", &t); while (t--) { int n, k, i, ans; scanf("%d%d", &n, &k); if (k == 0) printf("1\n"); else if (n % 2 == 1) printf("%lld\n", power(power(2, n - 1) + 1, k)); else { ans = power(power(2, n - 1) - 1, k); for (i = 0; i < k; i++) ans = (ans + power(power(2, n - 1) - 1, i) * power(power(2, n), k - 1 - i)) % 1000000007; printf("%d\n", ans); } } return 0; }
54	 #include <bits/stdc++.h> const long long mod = 1e9 + 7; using namespace std; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long ksm(long long a, long long b) { long long ret = 1; while (b) { if (b & 1) ret = ret * a % mod; a = a * a % mod; b >>= 1; } return ret; } long long ans, t, n, k; const int N = 2e5 + 5; long long p[N]; void solve0() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { ans = (ans + cur * ksm(p[k - 1], n) % mod) % mod; cur = cur * (p[n - 1] - 1) % mod; } cout << (ans + cur) % mod << endl; } void solve1() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { cur = cur * (p[n - 1] + 1) % mod; } cout << cur << endl; } int main() { p[0] = 1; for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod; cin >> t; while (t--) { cin >> n >> k; ans = 0; if (k == 0) { cout << 1 << endl; continue; } if (n % 2 == 0) solve0(); else solve1(); } return 0; }	 #include <bits/stdc++.h> const long long mod = 1e9 + 7; using namespace std; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long ksm(long long a, long long b) { long long ret = 1; while (b) { if (b & 1) ret = ret * a % mod; a = a * a % mod; b >>= 1; } return ret; } long long ans, t, n, k; const int N = 2e5 + 5; long long p[N]; void solve0() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod; cur = cur * (p[n - 1] - 1) % mod; } cout << (ans + cur) % mod << endl; } void solve1() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { cur = cur * (p[n - 1] + 1) % mod; } cout << cur << endl; } int main() { p[0] = 1; for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod; cin >> t; while (t--) { cin >> n >> k; ans = 0; if (k == 0) { cout << 1 << endl; continue; } if (n % 2 == 0) solve0(); else solve1(); } return 0; }
54	 #include <bits/stdc++.h> const long long mod = 1e9 + 7; using namespace std; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long ksm(long long a, long long b) { long long ret = 1; while (b) { if (b & 1) ret = ret * a % mod; a = a * a % mod; b >>= 1; } return ret; } long long ans, t, n, k; const int N = 2e5 + 5; long long p[N]; void solve0() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { ans = (ans + cur * ksm(p[k - 1], n) % mod) % mod; cur = cur * (p[n - 1] - 1) % mod; } cout << (ans + cur) % mod << endl; } void solve1() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { cur = cur * (p[n - 1] + 1) % mod; } cout << cur << endl; } int main() { p[0] = 1; for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod; cin >> t; while (t--) { cin >> n >> k; ans = 0; if (k == 0) { cout << 0 << endl; continue; } if (n % 2 == 0) solve0(); else solve1(); } return 0; }	 #include <bits/stdc++.h> const long long mod = 1e9 + 7; using namespace std; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long ksm(long long a, long long b) { long long ret = 1; while (b) { if (b & 1) ret = ret * a % mod; a = a * a % mod; b >>= 1; } return ret; } long long ans, t, n, k; const int N = 2e5 + 5; long long p[N]; void solve0() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod; cur = cur * (p[n - 1] - 1) % mod; } cout << (ans + cur) % mod << endl; } void solve1() { long long ans = 0, cur = 1; for (int i = k; i >= 1; i--) { cur = cur * (p[n - 1] + 1) % mod; } cout << cur << endl; } int main() { p[0] = 1; for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod; cin >> t; while (t--) { cin >> n >> k; ans = 0; if (k == 0) { cout << 1 << endl; continue; } if (n % 2 == 0) solve0(); else solve1(); } return 0; }
60	 #include <bits/stdc++.h> using namespace std; int n; int a[101]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int test; cin >> test; while (test--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int res = a[1]; for (int i = 2; i <= n; i++) res &= a[2]; cout << res << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int n; int a[101]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int test; cin >> test; while (test--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int res = a[1]; for (int i = 2; i <= n; i++) res &= a[i]; cout << res << '\n'; } return 0; }
61	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int T, n, m1, m2, u, v; string s; void solve() { cin >> n >> s; bool idk = 0; int j = -1; for (int i = 0; i < n; i++) { if (s[i] != '?') { j = i; break; } } if (j == -1) { for (int i = 0; i < n; i++) { if (i % 2) { cout << "B"; } else { cout << "R"; } } cout << "\n"; return; } for (int i = j; i < n; i++) { if (s[i] == '?') { if (s[i - 1] == 'B') { s[i] = 'R'; } else { s[i] = 'B'; } } } for (int i = j; i > -1; i--) { if (s[i] == '?') { if (s[i - 1] == 'B') { s[i] = 'R'; } else { s[i] = 'B'; } } } cout << s << endl; } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); T = 1; cin >> T; while (T--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int T, n, m1, m2, u, v; string s; void solve() { cin >> n >> s; bool idk = 0; int j = -1; for (int i = 0; i < n; i++) { if (s[i] != '?') { j = i; break; } } if (j == -1) { for (int i = 0; i < n; i++) { if (i % 2) { cout << "B"; } else { cout << "R"; } } cout << "\n"; return; } for (int i = j; i < n; i++) { if (s[i] == '?') { if (s[i - 1] == 'B') { s[i] = 'R'; } else { s[i] = 'B'; } } } for (int i = j; i > -1; i--) { if (s[i] == '?') { if (s[i + 1] == 'B') { s[i] = 'R'; } else { s[i] = 'B'; } } } cout << s << endl; } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); T = 1; cin >> T; while (T--) { solve(); } }
61	 #include <bits/stdc++.h> using namespace std; const int N = 111; int a[N], b[N]; int main() { cin.tie(0)->sync_with_stdio(0); int t; cin >> t; while (t--) { queue<int> que; int n; cin >> n; string S; cin >> S; S = " " + S; for (int i = 1; i <= n; i++) { if (S[i] == 'R') { a[i] = 1; b[i] = 1; que.push(i); } else if (S[i] == 'B') { a[i] = 2; b[i] = 2; que.push(i); } else { a[i] = 3; b[i] = 3; } } if (que.empty()) { for (int i = 1; i <= n; i++) { if (i % 2 == 1) cout << 'R'; else cout << 'B'; cout << "\n"; } continue; } while (!que.empty()) { int x = que.front(); que.pop(); int left = x - 1; int right = x + 1; while (b[left] == 3 && left >= 1) { if (b[left + 1] == 1) { b[left] = 2; left--; } else { b[left] = 1; left--; } } while (b[right] == 3 && right <= n) { if (b[right - 1] == 1) { b[right] = 2; right++; } else { b[right] = 1; right++; } } } for (int i = 1; i <= n; i++) { if (b[i] == 1) cout << 'R'; else cout << 'B'; } cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 111; int a[N], b[N]; int main() { cin.tie(0)->sync_with_stdio(0); int t; cin >> t; while (t--) { queue<int> que; int n; cin >> n; string S; cin >> S; S = " " + S; for (int i = 1; i <= n; i++) { if (S[i] == 'R') { a[i] = 1; b[i] = 1; que.push(i); } else if (S[i] == 'B') { a[i] = 2; b[i] = 2; que.push(i); } else { a[i] = 3; b[i] = 3; } } if (que.empty()) { for (int i = 1; i <= n; i++) { if (i % 2 == 1) cout << 'R'; else cout << 'B'; } cout << "\n"; continue; } while (!que.empty()) { int x = que.front(); que.pop(); int left = x - 1; int right = x + 1; while (b[left] == 3 && left >= 1) { if (b[left + 1] == 1) { b[left] = 2; left--; } else { b[left] = 1; left--; } } while (b[right] == 3 && right <= n) { if (b[right - 1] == 1) { b[right] = 2; right++; } else { b[right] = 1; right++; } } } for (int i = 1; i <= n; i++) { if (b[i] == 1) cout << 'R'; else cout << 'B'; } cout << "\n"; } return 0; }
61	 #include <bits/stdc++.h> using namespace std; const int maxn = 105; const int inf = 1e9 + 7; int a[maxn]; int dp[maxn]; int main() { int T; cin >> T; while (T--) { int n; cin >> n; string s; cin >> s; int cnt = 0; for (int i = 0; i < n; i++) { cnt += (s[i] != '?'); } if (cnt == 0) s[0] = 'R'; for (int i = 1; i < n; i++) { if (s[i] == '?' && s[i - 1] != '?') { s[i] = (s[i - 1] == 'B' ? 'R' : 'B'); } } for (int i = n - 2; i >= 0; i--) { if (s[i] == '?' && s[i + 1] != '?') { s[i] = (s[i - 1] == 'B' ? 'R' : 'B'); } } cout << s << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 105; const int inf = 1e9 + 7; int a[maxn]; int dp[maxn]; int main() { int T; cin >> T; while (T--) { int n; cin >> n; string s; cin >> s; int cnt = 0; for (int i = 0; i < n; i++) { cnt += (s[i] != '?'); } if (cnt == 0) s[0] = 'R'; for (int i = 1; i < n; i++) { if (s[i] == '?' && s[i - 1] != '?') { s[i] = (s[i - 1] == 'B' ? 'R' : 'B'); } } for (int i = n - 2; i >= 0; i--) { if (s[i] == '?' && s[i + 1] != '?') { s[i] = (s[i + 1] == 'B' ? 'R' : 'B'); } } cout << s << endl; } return 0; }
61	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tst = 0; cin >> tst; while (tst--) { int n = 0; cin >> n; string s; cin >> s; int i = 0; while (s[i] == '?' && i < n && i++) ; while (i >= 0 && i--) { if (s[i] == '?') { if (s[i + 1] == 'B') s[i] = 'R'; else s[i] = 'B'; } } for (int i = 1; i < n; i++) { if (s[i] == '?') { if (s[i - 1] == 'B') s[i] = 'R'; else s[i] = 'B'; } } cout << s << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tst = 0; cin >> tst; while (tst--) { int n = 0; cin >> n; string s; cin >> s; int i = 0; while (s[i] == '?' && i < n && ++i) ; while (i >= 0 && i--) { if (s[i] == '?') { if (s[i + 1] == 'B') s[i] = 'R'; else s[i] = 'B'; } } for (int i = 1; i < n; i++) { if (s[i] == '?') { if (s[i - 1] == 'B') s[i] = 'R'; else s[i] = 'B'; } } cout << s << endl; } return 0; }
62	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; for (int i = 0; i < n; ++i) { int k = 0; cin >> k; bool already_ok = false; bool left_down = false; vector<int> ans; int cur = -1; for (int j = 0; j < k; ++j) { std::cin >> cur; if (cur == 1) { left_down = true; } else if (!already_ok && left_down && cur == 1) { already_ok = true; ans.push_back(k); } ans.push_back(j); } if (!already_ok) { if (!left_down) { cout << k + 1 << ' '; for (auto& i : ans) { cout << i + 1 << ' '; } } else { for (auto& i : ans) { cout << i + 1 << ' '; } cout << k + 1 << ' '; } } else { for (auto& i : ans) { cout << i + 1 << ' '; } } cout << std::endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; for (int i = 0; i < n; ++i) { int k = 0; cin >> k; bool already_ok = false; bool left_down = false; vector<int> ans; int cur = -1; for (int j = 0; j < k; ++j) { std::cin >> cur; if (cur == 0) { left_down = true; } else if (!already_ok && left_down && cur == 1) { already_ok = true; ans.push_back(k); } ans.push_back(j); } if (!already_ok) { if (!left_down) { cout << k + 1 << ' '; for (auto& i : ans) { cout << i + 1 << ' '; } } else { for (auto& i : ans) { cout << i + 1 << ' '; } cout << k + 1 << ' '; } } else { for (auto& i : ans) { cout << i + 1 << ' '; } } cout << std::endl; } return 0; }
62	 #include <bits/stdc++.h> using namespace std; void main2() { long long int n; cin >> n; vector<long long int> v(n); for (long long int i = 0; i < n; i++) cin >> v[i]; if (v[0] == 1) { cout << n + 1 << " "; for (long long int i = 1; i <= n; i++) cout << i << " "; cout << "\n"; } else if (v[n - 1] == 0) { for (long long int i = 1; i <= n; i++) cout << i << " "; cout << n + 1 << "\n"; } else { for (long long int i = 1; i < n; i++) { if (v[i - 1] == 0 && v[i] == 1) { for (long long int j = 0; j < i - 1; j++) cout << j + 1 << " "; cout << n + 1 << " "; for (long long int j = i; j < n; j++) cout << j + 1 << " "; cout << "\n"; return; } } cout << "-1\n"; } return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; for (long long int i = 1; i <= t; i++) { main2(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void main2() { long long int n; cin >> n; vector<long long int> v(n); for (long long int i = 0; i < n; i++) cin >> v[i]; if (v[0] == 1) { cout << n + 1 << " "; for (long long int i = 1; i <= n; i++) cout << i << " "; cout << "\n"; } else if (v[n - 1] == 0) { for (long long int i = 1; i <= n; i++) cout << i << " "; cout << n + 1 << "\n"; } else { for (long long int i = 1; i < n; i++) { if (v[i - 1] == 0 && v[i] == 1) { for (long long int j = 0; j <= i - 1; j++) cout << j + 1 << " "; cout << n + 1 << " "; for (long long int j = i; j < n; j++) cout << j + 1 << " "; cout << "\n"; return; } } cout << "-1\n"; } return; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t = 1; cin >> t; for (long long int i = 1; i <= t; i++) { main2(); } return 0; }
62	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; if (a[0] == '1') { cout << n + 1 << ' '; for (int i = 1; i <= n; i++) cout << i << ' '; cout << endl; } else if (a[n - 1] == 0) { for (int i = 1; i <= n; i++) cout << i << ' '; cout << n + 1 << endl; } else { int f = 0; for (int i = 0; i < n; i++) { if (a[i] == 0 && a[i + 1] == 1 && i < n - 1 && f == 0) { f = 1; cout << i + 1 << ' ' << n + 1 << ' '; } else cout << i + 1 << ' '; } cout << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; if (a[0] == 1) { cout << n + 1 << ' '; for (int i = 1; i <= n; i++) cout << i << ' '; cout << endl; } else if (a[n - 1] == 0) { for (int i = 1; i <= n; i++) cout << i << ' '; cout << n + 1 << endl; } else { int f = 0; for (int i = 0; i < n; i++) { if (a[i] == 0 && a[i + 1] == 1 && i < n - 1 && f == 0) { f = 1; cout << i + 1 << ' ' << n + 1 << ' '; } else cout << i + 1 << ' '; } cout << endl; } } }
62	 #include <bits/stdc++.h> using namespace std; template <typename T> inline T gcd(T a, T b) { return b ? gcd(b, a % b) : a; } template <typename T> inline T lowbit(T x) { return x & -x; } const int N = 2e5 + 10; int n; int a[N]; void solve() { cin >> n; for (int i = 0; i < n; ++i) cin >> a[i]; bool flag = false; int pos = 0; for (int i = 0; i < n; ++i) { if (a[i] == 0 && a[(i + 1) % n] == 1) { flag = true; pos = i; break; } } if (a[0] == 1) { printf("%d ", n + 1); for (int i = 1; i <= n; ++i) printf("%d ", i); printf("\n"); return; } if (a[n - 1] == 1) { for (int i = 1; i <= n; ++i) printf("%d ", i); printf("%d ", n + 1); printf("\n"); return; } if (!flag) puts("-1"); else { for (int i = 0; i < n; ++i) { printf("%d ", i + 1); if (pos == i) printf("%d ", n + 1); } printf("\n"); } } signed main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> inline T gcd(T a, T b) { return b ? gcd(b, a % b) : a; } template <typename T> inline T lowbit(T x) { return x & -x; } const int N = 2e5 + 10; int n; int a[N]; void solve() { cin >> n; for (int i = 0; i < n; ++i) cin >> a[i]; bool flag = false; int pos = 0; for (int i = 0; i < n; ++i) { if (a[i] == 0 && a[(i + 1) % n] == 1) { flag = true; pos = i; break; } } if (a[0] == 1) { printf("%d ", n + 1); for (int i = 1; i <= n; ++i) printf("%d ", i); printf("\n"); return; } else if (a[n - 1] == 0) { for (int i = 1; i <= n; ++i) printf("%d ", i); printf("%d ", n + 1); printf("\n"); return; } if (!flag) puts("-1"); else { for (int i = 0; i < n; ++i) { printf("%d ", i + 1); if (pos == i) printf("%d ", n + 1); } printf("\n"); } } signed main() { int t; cin >> t; while (t--) solve(); return 0; }
62	 #include <bits/stdc++.h> int main() { int t; std::cin >> t; while (t) { int n; std::cin >> n; int arr[n]; for (auto &x : arr) std::cin >> x; if (n + 1 == 2) { if (arr[0] == 0) std::cout << "1 2" << std::endl; else std::cout << "2 1" << std::endl; } else { if (arr[n - 1] == 0) { for (int i = 1; i <= n + 1; i++) std::cout << i << " "; std::cout << std::endl; } else if (arr[0] == 1) { std::cout << n + 1 << " "; for (int i = 1; i <= n; i++) std::cout << i << " "; std::cout << std::endl; } else { int turnaround = -1; for (int i = 0; i <= n - 3; i++) { if (arr[i] == 0 && arr[i + 1] == 1) { turnaround = i; break; } } if (turnaround == -1) std::cout << "-1" << std::endl; else { for (int i = 0; i <= turnaround; i++) { std::cout << i + 1 << " "; } std::cout << n + 1 << " "; for (int i = turnaround + 1; i < n; i++) std::cout << i + 1 << " "; std::cout << std::endl; } } } t--; } }	 #include <bits/stdc++.h> int main() { int t; std::cin >> t; while (t) { int n; std::cin >> n; int arr[n]; for (auto &x : arr) std::cin >> x; if (n + 1 == 2) { if (arr[0] == 0) std::cout << "1 2" << std::endl; else std::cout << "2 1" << std::endl; } else { if (arr[n - 1] == 0) { for (int i = 1; i <= n + 1; i++) std::cout << i << " "; std::cout << std::endl; } else if (arr[0] == 1) { std::cout << n + 1 << " "; for (int i = 1; i <= n; i++) std::cout << i << " "; std::cout << std::endl; } else { int turnaround = -1; for (int i = 0; i <= n - 2; i++) { if (arr[i] == 0 && arr[i + 1] == 1) { turnaround = i; break; } } if (turnaround == -1) std::cout << "-1" << std::endl; else { for (int i = 0; i <= turnaround; i++) { std::cout << i + 1 << " "; } std::cout << n + 1 << " "; for (int i = turnaround + 1; i < n; i++) std::cout << i + 1 << " "; std::cout << std::endl; } } } t--; } }
66	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; vector<int> temp; int count = 0; int num = 1; while (true) { if (count == k) break; if (num % 10 == 3 || num / 3 == 0) num++; else { temp.push_back(num); count++; num++; } } cout << temp[temp.size() - 1] << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; vector<int> temp; int count = 0; int num = 1; while (true) { if (count == k) break; if (num % 10 == 3 || num % 3 == 0) num++; else { temp.push_back(num); count++; num++; } } cout << temp[temp.size() - 1] << endl; } return 0; }
66	 #include <bits/stdc++.h> using namespace std; bool checkNum(int number) { if (number % 10 == 3 || number % 3 == 0) return false; return true; } void solve() { int k, count = 0, number = 1; cin >> k; while (count < k) { if (checkNum(number)) count++; number++; } cout << number - 1 << endl; } int main() { int t; cin >> t; while (--t) { solve(); } }	 #include <bits/stdc++.h> using namespace std; bool checkNum(int number) { if (number % 10 == 3 || number % 3 == 0) return false; return true; } void solve() { int k, count = 0, number = 1; cin >> k; while (count < k) { if (checkNum(number)) count++; number++; } cout << number - 1 << endl; } int main() { int t; cin >> t; while (t--) { solve(); } }
66	 #include <bits/stdc++.h> using namespace std; int main() { int a[1000]; int d = 1; int t; cin >> t; for (int i = 1; i < 1666; i++) { if (i % 3 == 0 || i % 10 == 3) { continue; } a[d] = i; d++; } while (t--) { int n; cin >> n; cout << a[n] << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int a[1000]; int d = 1; int t; cin >> t; for (int i = 1; i <= 1666; i++) { if (i % 3 == 0 || i % 10 == 3) { continue; } a[d] = i; d++; } while (t--) { int n; cin >> n; cout << a[n] << endl; } }
66	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); vector<int> v; for (int i = 1; i < 2000; ++i) { if (i % 3 == 0 or i % 10 == 0) { continue; } else v.push_back(i); } int t; cin >> t; while (t--) { int n; cin >> n; cout << v[n - 1] << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); vector<int> v; for (int i = 1; i < 2000; ++i) { if (i % 3 == 0 or i % 10 == 3) { continue; } else v.push_back(i); } int t; cin >> t; while (t--) { int n; cin >> n; cout << v[n - 1] << endl; } }
66	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; int count = 1; if (k == 1) cout << "1" << endl; else { for (int i = 0; i < k - 1; i++) { if ((count + 1) % 3 == 0 || (count + 1) % 10 == 3) { count += 2; while (count % 3 == 0 or count % 10 == 3) count++; } else count++; } } cout << count << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; int count = 1; if (k == 1) cout << "1" << endl; else { for (int i = 0; i < k - 1; i++) { if ((count + 1) % 3 == 0 || (count + 1) % 10 == 3) { count += 2; while (count % 3 == 0 or count % 10 == 3) count++; } else count++; } cout << count << endl; } } return 0; }
66	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 1; i < 1e9; ++i) { if (i % 3 == 0 && i % 10 == 3) continue; if (--n == 0) { cout << i << endl; break; } } } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 1; i < 1e9; ++i) { if (i % 3 == 0 || i % 10 == 3) continue; if (--n == 0) { cout << i << endl; break; } } } return 0; }
66	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int i = 0, count = 0; while (count <= n) { i++; if (i % 3 != 0 || i % 10 != 3) { count++; } } cout << i << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int i = 0, count = 0; while (count < n) { i++; if (i % 3 != 0 && i % 10 != 3) { count++; } } cout << i << "\n"; } return 0; }
66	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); vector<int> a; for (int i = 1; i <= 10000; i++) { if (i % 10 != 0 && i % 3 != 0) { a.push_back(i); } } int t; cin >> t; while (t--) { int n; cin >> n; cout << a[n - 1] << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); vector<int> a; for (int i = 1; i <= 10000; i++) { if (i % 10 != 3 && i % 3 != 0) { a.push_back(i); } } int t; cin >> t; while (t--) { int n; cin >> n; cout << a[n - 1] << endl; } }
66	 #include <bits/stdc++.h> using namespace std; int main() { int t, k[10], a[1667]; cin >> t; for (int i = 0; i < t; i++) { cin >> k[i]; cout << endl; } for (int i = 1, j = 1; j <= 1666; j++) { if ((j % 3) != 0 && (j % 10) != 3) { a[i] = j; i++; } } for (int i = 0; i < t; i++) { cout << a[k[i]] << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, k[100], a[1667]; cin >> t; for (int i = 0; i < t; i++) { cin >> k[i]; cout << endl; } for (int i = 1, j = 1; j <= 1666; j++) { if ((j % 3) != 0 && (j % 10) != 3) { a[i] = j; i++; } } for (int i = 0; i < t; i++) { cout << a[k[i]] << endl; } return 0; }
66	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; int res = 0, a = 1, j = 0; while (j < k) { if (a % 3 != 0 && a % 10 != 0) { res = a; j++; } a++; } cout << res << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int k; cin >> k; int res = 0, a = 1, j = 0; while (j < k) { if (a % 3 != 0 && a % 10 != 3) { res = a; j++; } a++; } cout << res << endl; } return 0; }
66	 #include <bits/stdc++.h> using namespace std; vector<int> jok; int main() { int t, most, a; cin >> t; for (int i = 0; i < t; ++i) { cin >> a; if (a <= jok.size()) cout << jok[a - 1] << endl; else { if (jok.size() == 0) most = 1; else most = jok[jok.size() - 1] + 1; while (jok.size() < a) { if (most % 3 != 0 && most % 10 != 0) jok.push_back(most); most++; } cout << jok[a - 1] << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; vector<int> jok; int main() { int t, most, a; cin >> t; for (int i = 0; i < t; ++i) { cin >> a; if (a <= jok.size()) cout << jok[a - 1] << endl; else { if (jok.size() == 0) most = 1; else most = jok[jok.size() - 1] + 1; while (jok.size() < a) { if (most % 3 != 0 && most % 10 != 3) jok.push_back(most); most++; } cout << jok[a - 1] << endl; } } return 0; }
67	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t > 0) { int a, b, c, d; cin >> a >> b >> c; int maxi = max(a, max(b, c)); int dif = abs(a - b); if (maxi < dif * 2) { d = c - dif; if (d <= 0) { d = dif + c; } } else { d = -1; } cout << d << endl; t--; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t > 0) { int a, b, c, d; cin >> a >> b >> c; int maxi = max(a, max(b, c)); int dif = abs(a - b); if (maxi <= dif * 2) { d = c - dif; if (d <= 0) { d = dif + c; } } else { d = -1; } cout << d << endl; t--; } return 0; }
67	 #include <bits/stdc++.h> using namespace std; int main() { long t, a, b, c; for (cin >> t; t--;) { cin >> a >> b >> c; int n = abs(a - b); int a1 = 1; int b1 = n + 1; n = n << 1; if (a > n || b > n || c > n) { cout << "-1" << endl; continue; } if (a > b) swap(a, b); if (a - a1 != b - b1) { cout << "-1" << endl; continue; } if (c == 1) cout << b1 << endl; else if (c == b1) cout << 1 << endl; else if (c > b1) { cout << 1 + b1 - c << endl; } else { cout << b1 + c - 1 << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long t, a, b, c; for (cin >> t; t--;) { cin >> a >> b >> c; int n = abs(a - b); int a1 = 1; int b1 = n + 1; n = n << 1; if (a > n || b > n || c > n) { cout << "-1" << endl; continue; } if (a > b) swap(a, b); if (a - a1 != b - b1) { cout << "-1" << endl; continue; } if (c == 1) cout << b1 << endl; else if (c == b1) cout << 1 << endl; else if (c > b1) { cout << 1 + c - b1 << endl; } else { cout << b1 + c - 1 << endl; } } return 0; }
67	 #include <bits/stdc++.h> using namespace std; int t, a, b, c; int main() { cin >> t; while (t--) { cin >> a >> b >> c; int max_number = (max(a, b) - min(a, b) + abs(a - b)); if (c > max_number || a >= max_number || b >= max_number) { cout << -1 << endl; continue; } if (c == a) { cout << b << endl; continue; } if (c == b) { cout << a << endl; continue; } if (c <= max_number / 2) { c += max_number / 2; if (c <= max_number) cout << c << endl; else cout << -1 << endl; } else { c -= max_number / 2; if (c >= 1) cout << c << endl; else cout << -1 << endl; } } }	 #include <bits/stdc++.h> using namespace std; int t, a, b, c; int main() { cin >> t; while (t--) { cin >> a >> b >> c; int max_number = (max(a, b) - min(a, b) + abs(a - b)); if (c > max_number || a > max_number || b > max_number) { cout << -1 << endl; continue; } if (c == a) { cout << b << endl; continue; } if (c == b) { cout << a << endl; continue; } if (c <= max_number / 2) { c += max_number / 2; if (c <= max_number) cout << c << endl; else cout << -1 << endl; } else { c -= max_number / 2; if (c >= 1) cout << c << endl; else cout << -1 << endl; } } }
67	 #include <bits/stdc++.h> int t, a, b, c, k; inline int read() { int d = 0, f = 0, c = getchar(); for (; c < 48 || c > 57; c = getchar()) f |= (c == '-'); for (; c > 47 && c < 58; c = getchar()) d = (d << 1) + (d << 3) + (c ^ 48); return f ? -d : d; } inline void swap(int& a, int& b) { a ^= b ^= a ^= b; } int main() { t = read(); for (; t; t--) { a = read(), b = read(), c = read(); if (a < b) swap(a, b); k = a - b; if (b > k) puts("-1"); else if (c >= 2 * k) puts("-1"); else if (c > k) printf("%d\n", c - k); else printf("%d\n", c + k); } return 0; }	 #include <bits/stdc++.h> int t, a, b, c, k; inline int read() { int d = 0, f = 0, c = getchar(); for (; c < 48 || c > 57; c = getchar()) f |= (c == '-'); for (; c > 47 && c < 58; c = getchar()) d = (d << 1) + (d << 3) + (c ^ 48); return f ? -d : d; } inline void swap(int& a, int& b) { a ^= b ^= a ^= b; } int main() { t = read(); for (; t; t--) { a = read(), b = read(), c = read(); if (a < b) swap(a, b); k = a - b; if (b > k) puts("-1"); else if (c > 2 * k) puts("-1"); else if (c > k) printf("%d\n", c - k); else printf("%d\n", c + k); } return 0; }
67	 #include <bits/stdc++.h> using namespace std; int main() { int t, a, b, c; cin >> t; while (t--) { cin >> a >> b >> c; int n = abs(a - b); int check = 2 * n; if (a > check || b > check || c > check) cout << -1 << endl; else if (c <= n) cout << c + n << endl; else cout << n - c << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, a, b, c; cin >> t; while (t--) { cin >> a >> b >> c; int n = abs(a - b); int check = 2 * n; if (a > check || b > check || c > check) cout << -1 << endl; else if (c <= n) cout << c + n << endl; else cout << c - n << endl; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int32_t main() { cin.tie(nullptr)->sync_with_stdio(false); ; int t; cin >> t; while (t--) { int n; cin >> n; int i; for (i = 1; i * i <= n; i++) ; int x = ((i - 1) * (i - 1) + 1 + i * i) / 2; if (x == n) { cout << i << ' ' << i; cout << '\n'; ; continue; } if (x > n) { cout << n - ((i - 1) * (i - 1) + 1) + 1 << ' ' << i; cout << '\n'; ; continue; } cout << i << ' ' << abs(n - i * i) + 1 << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int32_t main() { cin.tie(nullptr)->sync_with_stdio(false); ; int t; cin >> t; while (t--) { int n; cin >> n; int i; for (i = 1; i * i < n; i++) ; int x = ((i - 1) * (i - 1) + 1 + i * i) / 2; if (x == n) { cout << i << ' ' << i; cout << '\n'; ; continue; } if (x > n) { cout << n - ((i - 1) * (i - 1) + 1) + 1 << ' ' << i; cout << '\n'; ; continue; } cout << i << ' ' << abs(n - i * i) + 1 << '\n'; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int main() { int cases; cin >> cases; for (int case_ = 0; case_ < cases; case_++) { int val; cin >> val; int rangeEnd = 0; int rangeBeg = 0; int numsInRange; int i; for (i = 0; rangeEnd < val; i++) { numsInRange = 1 + i * 2; rangeEnd += numsInRange; if (rangeEnd >= val) { rangeBeg = rangeEnd - numsInRange + 1; break; } } int row = 0; int column = i + 1; int j; for (j = 0; j <= val % rangeBeg; j++) { if (j <= i) { row++; } if (j > i) { column--; } } cout << row << " " << column << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int cases; cin >> cases; for (int case_ = 0; case_ < cases; case_++) { int val; cin >> val; int rangeEnd = 0; int rangeBeg = 0; int numsInRange; int i; for (i = 0; rangeEnd < val; i++) { numsInRange = 1 + i * 2; rangeEnd += numsInRange; if (rangeEnd >= val) { rangeBeg = rangeEnd - numsInRange + 1; break; } } int row = 0; int column = i + 1; int j; for (j = 0; j <= val - rangeBeg; j++) { if (j <= i) { row++; } if (j > i) { column--; } } cout << row << " " << column << endl; } }
68	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; int base = sqrt(n); if (base * base == n) { cout << 1 << " " << base << endl; return; } n = n - base * base; if (n <= base + 1) { cout << n << " " << base + 1 << endl; } else cout << base + 1 << " " << (2 * (base + 1) - n) << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; int base = sqrt(n); if (base * base == n) { cout << base << " " << 1 << endl; return; } n = n - base * base; if (n <= base + 1) { cout << n << " " << base + 1 << endl; } else cout << base + 1 << " " << (2 * (base + 1) - n) << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { solve(); } }
68	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize(2) void io() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); } template <typename T> inline void debug(T const& x) { cout << x << "\n"; } inline int fread() { int ans = 0, fl = 1; char i = getchar(); while (i < '0' || i > '9') { if (i == '-') { fl = -1; } i = getchar(); } while (i >= '0' && i <= '9') { ans = ans * 10 + i - '0'; i = getchar(); } return ans * fl; } const long long maxn = 1e7 + 10; long long tot; long long a[maxn]; long long t, n; signed main() { io(); for (tot = 1;; ++tot) { a[tot] = a[tot - 1] + tot * 2ll - 1ll; if (a[tot] > 1000000000) break; } cin >> t; while (t--) { cin >> n; long long pos = lower_bound(a + 1, a + 1 + tot, n) - a; if (a[pos] == n) { cout << 1 << " " << pos << "\n"; continue; } pos--; long long res = n - a[pos]; if (res <= pos + 1ll) { cout << res << " " << pos + 1ll << "\n"; } else { res -= (pos + 1ll); cout << pos + 1ll << " " << pos + 1ll - res << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; #pragma GCC optimize(2) void io() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); } template <typename T> inline void debug(T const& x) { cout << x << "\n"; } inline int fread() { int ans = 0, fl = 1; char i = getchar(); while (i < '0' || i > '9') { if (i == '-') { fl = -1; } i = getchar(); } while (i >= '0' && i <= '9') { ans = ans * 10 + i - '0'; i = getchar(); } return ans * fl; } const long long maxn = 1e7 + 10; long long tot; long long a[maxn]; long long t, n; signed main() { io(); for (tot = 1;; ++tot) { a[tot] = a[tot - 1] + tot * 2ll - 1ll; if (a[tot] > 1000000000) break; } cin >> t; while (t--) { cin >> n; long long pos = lower_bound(a + 1, a + 1 + tot, n) - a; if (a[pos] == n) { cout << pos << " " << 1 << "\n"; continue; } pos--; long long res = n - a[pos]; if (res <= pos + 1ll) { cout << res << " " << pos + 1ll << "\n"; } else { res -= (pos + 1ll); cout << pos + 1ll << " " << pos + 1ll - res << "\n"; } } return 0; }
68	 #include <bits/stdc++.h> using namespace std; const long long N = 31625; int arr[N]; int arr2[N]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int x = 1; map<int, int> mp; arr[1] = 1; for (int i = 2; i <= 31624; i++) { arr[i] = arr[i - 1] + x; mp[arr[i]] = i; x += 2; } arr2[1] = 1; x = 3; mp[1] = 1; for (int i = 2; i <= 31623; i++) { arr2[i] = arr2[i - 1] + x; mp[arr2[i]] = i; x += 2; } int t; cin >> t; while (t--) { int a; cin >> a; int b = sqrt(a); int xxx = mp.lower_bound(a)->first; int yyy = mp.lower_bound(a)->second; if (xxx == a) { if (b * b == a) cout << yyy << " " << 1 << endl; else cout << 1 << " " << yyy << endl; } else if (a <= xxx && a >= (xxx - yyy)) cout << yyy << " " << xxx - a + 1 << endl; else { xxx = xxx - (yyy * 2 - 2); cout << a - xxx + 1 << " " << mp.lower_bound(xxx)->second << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 31625; int arr[N]; int arr2[N]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int x = 1; map<int, int> mp; arr[1] = 1; for (int i = 2; i <= 31624; i++) { arr[i] = arr[i - 1] + x; mp[arr[i]] = i; x += 2; } arr2[1] = 1; x = 3; mp[1] = 1; for (int i = 2; i <= 31623; i++) { arr2[i] = arr2[i - 1] + x; mp[arr2[i]] = i; x += 2; } int t; cin >> t; while (t--) { int a; cin >> a; int b = sqrt(a); int xxx = mp.lower_bound(a)->first; int yyy = mp.lower_bound(a)->second; if (xxx == a) { if (b * b == a) cout << yyy << " " << 1 << endl; else cout << 1 << " " << yyy << endl; } else if (a <= xxx && a >= (xxx - yyy + 1)) cout << yyy << " " << xxx - a + 1 << endl; else { xxx = xxx - (yyy * 2 - 2); cout << a - xxx + 1 << " " << mp.lower_bound(xxx)->second << endl; } } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long int a = floor(pow(n, 0.5)); long long int b = ceil(pow(n, 0.5)); long long int c = a * a; long long int d = b * b; long long int diff = (d - c) / 2; if (a == b) { cout << 1 << " " << a << endl; continue; } long long int chk = ceil(double((c + d)) / 2); if (chk == n) { cout << b << " " << b << endl; } else if (n < chk) { cout << (n - c) << " " << b << endl; } else { cout << b << " " << (d - n + 1) << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long int a = floor(pow(n, 0.5)); long long int b = ceil(pow(n, 0.5)); long long int c = a * a; long long int d = b * b; long long int diff = (d - c) / 2; if (a == b) { cout << a << " " << 1 << endl; continue; } long long int chk = ceil(double((c + d)) / 2); if (chk == n) { cout << b << " " << b << endl; } else if (n < chk) { cout << (n - c) << " " << b << endl; } else { cout << b << " " << (d - n + 1) << endl; } } }
68	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; double c = sqrt(n); if (floor(c) == ceil(c)) { cout << 1 << " " << c << "\n"; return; } int a = c; long long p = pow(a + 1, 2); if (p - n > a) { cout << n - pow(a, 2) << " " << a + 1 << "\n"; return; } cout << a + 1 << " " << p - n + 1 << "\n"; return; } int main() { int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; double c = sqrt(n); if (floor(c) == ceil(c)) { cout << c << " " << 1 << "\n"; return; } int a = c; long long p = pow(a + 1, 2); if (p - n > a) { cout << n - pow(a, 2) << " " << a + 1 << "\n"; return; } cout << a + 1 << " " << p - n + 1 << "\n"; return; } int main() { int t; cin >> t; while (t--) solve(); }
68	 #include <bits/stdc++.h> const int mod = 1e9 + 7; using namespace std; void fastio() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } bool compare(pair<long long int, long long int> a, pair<long long int, long long int> b) { if (a.first > b.first) return true; if (a.first == b.first) return a.second < b.second; return false; } long long int power(long long int x, long long int y) { long long int res = 1; x = x % mod; while (y > 0) { if (y & 1) res = (res * x) % mod; y = y >> 1; x = (x * x) % mod; } return res; } void solve() { long long int k; cin >> k; long long int n = 1; long long int i = 0; while (n + 2 * i + 1 <= k) { n += 2 * i + 1; i++; } if (n == k) { cout << 1 << " " << i << "\n"; return; } int x = i + 1, y = 1; while (y != x) { y++; n++; if (n == k) { cout << y << " " << x << "\n"; return; } } while (x >= 1) { x--; n++; if (n == k) { cout << y << " " << x << "\n"; return; } } } int main() { int t = 1; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> const int mod = 1e9 + 7; using namespace std; void fastio() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } bool compare(pair<long long int, long long int> a, pair<long long int, long long int> b) { if (a.first > b.first) return true; if (a.first == b.first) return a.second < b.second; return false; } long long int power(long long int x, long long int y) { long long int res = 1; x = x % mod; while (y > 0) { if (y & 1) res = (res * x) % mod; y = y >> 1; x = (x * x) % mod; } return res; } void solve() { long long int k; cin >> k; long long int n = 1; long long int i = 0; while (n + 2 * i + 1 <= k) { n += 2 * i + 1; i++; } if (n == k) { cout << 1 << " " << i + 1 << "\n"; return; } int x = i + 1, y = 1; while (y != x) { y++; n++; if (n == k) { cout << y << " " << x << "\n"; return; } } while (x >= 1) { x--; n++; if (n == k) { cout << y << " " << x << "\n"; return; } } } int main() { int t = 1; cin >> t; while (t--) solve(); }
68	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long k, row, col, ans; cin >> k; long long num = ceil(sqrt(k)); long long sq = num * num; long long d = sq - num; if (d < num) { row = num; col = d + 1; } else { col = num; d -= num; d = num - d - 1; row = d; } cout << row << " " << col << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long k, row, col, ans; cin >> k; long long num = ceil(sqrt(k)); long long sq = num * num; long long d = sq - k; if (d < num) { row = num; col = d + 1; } else { col = num; d -= num; d = num - d - 1; row = d; } cout << row << " " << col << endl; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int l = 1, r = 1e5; while (l < r) { int mid = (l + r) / 2; long long p = (long long)mid * mid; if (p >= n) r = mid; else l = mid + 1; } int p = l * l; if (n > p - l) cout << l << " " << p - n + 1 << endl; else cout << 4 - ((p - l + 1) - n) << " " << l << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int l = 1, r = 1e5; while (l < r) { int mid = (l + r) / 2; long long p = (long long)mid * mid; if (p >= n) r = mid; else l = mid + 1; } int p = l * l; if (n > p - l) cout << l << " " << p - n + 1 << endl; else cout << l - ((p - l + 1) - n) << " " << l << endl; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int k; cin >> k; long long int r = ceil(sqrt(k)); long long int s = r * r; if (s == k) { cout << r << " " << 1 << "\n"; continue; } int a = 2 * r; int d = s - k; if (d <= r) { cout << r << " " << d + 1 << "\n"; continue; } long long int p = (r - 1) * (r - 1); cout << (k - p) << " " << r << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int k; cin >> k; long long int r = ceil(sqrt(k)); long long int s = r * r; if (s == k) { cout << r << " " << 1 << "\n"; continue; } int a = 2 * r; int d = s - k; if (d < r) { cout << r << " " << d + 1 << "\n"; continue; } long long int p = (r - 1) * (r - 1); cout << (k - p) << " " << r << "\n"; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int i = 1; int curr = 1; int old; int next; while (n >= curr) { i++; next = curr + 2 * (i - 1) - 1; old = curr; curr = next; if (n <= next - 1) break; } i--; if (n <= old + i - 1) cout << n - old + 1 << " " << i << endl; else cout << i << " " << old + 2 * i - 2 - n << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int i = 1; int curr = 1; int old; int next; while (n >= curr) { i++; next = curr + 2 * (i - 1) - 1; old = curr; curr = next; if (n <= next - 1) break; } i--; if (n <= old + i - 1) cout << n - old + 1 << " " << i << endl; else cout << i << " " << old + 2 * i - 1 - n << endl; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; vector<int> v; int main() { int t = 0; cin >> t; for (int k = 0; k < t; k++) { int n = 0; cin >> n; if (n == 1) { cout << 1 << " " << 1 << endl; } else if (n == 2) { cout << 1 << " " << 2 << endl; } else if (n == 3) { cout << 2 << " " << 2 << endl; } else if (n == 4) { cout << 2 << " " << 1 << endl; } else { long long int i = 1; while (i * i <= n) { i++; } int c = n - (i - 1) * (i - 1); if (c < i) { cout << c << " " << i << endl; } else if (c == i) { cout << i << " " << i << endl; } else { c = c - i; cout << i << " " << i - c << endl; } } } }	 #include <bits/stdc++.h> using namespace std; vector<int> v; int main() { int t = 0; cin >> t; for (int k = 0; k < t; k++) { int n = 0; cin >> n; if (n == 1) { cout << 1 << " " << 1 << endl; } else if (n == 2) { cout << 1 << " " << 2 << endl; } else if (n == 3) { cout << 2 << " " << 2 << endl; } else if (n == 4) { cout << 2 << " " << 1 << endl; } else { long long int i = 1; while (i * i < n) { i++; } int c = n - (i - 1) * (i - 1); if (c < i) { cout << c << " " << i << endl; } else if (c == i) { cout << i << " " << i << endl; } else { c = c - i; cout << i << " " << i - c << endl; } } } }
68	 #include <bits/stdc++.h> using namespace std; int main() { long long tc; cin >> tc; while (tc-- > 0) { long long n; cin >> n; long long s = sqrt(n); long long t = (s * (s + 1)) + 1; long long r, c, check; if (s * s == n) { r = s; c = s; } else { if (n == t) { r = s + 1; c = s + 1; } else if (n > t) { check = n - t; r = s + 1; c = s + 1 - check; } else if (n < t) { check = t - n; r = s + 1 - check; c = s + 1; } } cout << r << " " << c << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long tc; cin >> tc; while (tc-- > 0) { long long n; cin >> n; long long s = sqrt(n); long long t = (s * (s + 1)) + 1; long long r, c, check; if (s * s == n) { r = s; c = 1; } else { if (n == t) { r = s + 1; c = s + 1; } else if (n > t) { check = n - t; r = s + 1; c = s + 1 - check; } else if (n < t) { check = t - n; r = s + 1 - check; c = s + 1; } } cout << r << " " << c << endl; } return 0; }
68	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int i = 1; while (i * i < n) { i++; } int one = (i - 1) * (i - 10); if (one + i >= n) { cout << n - one << " " << i << endl; } else { cout << i << " " << (i) * (i)-n + 1 << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int i = 1; while (i * i < n) { i++; } int one = (i - 1) * (i - 1); if (one + i >= n) { cout << n - one << " " << i << endl; } else { cout << i << " " << (i) * (i)-n + 1 << endl; } } return 0; }
68	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; for (long long f = 1; f <= t; f++) { long long k; cin >> k; long long root = sqrt(k); if (root * root == k) { cout << root << " " << "1" << endl; continue; } if (k == 2) { cout << "1" << " " << "2" << endl; continue; } if (k == 3) { cout << "2" << " " << "2" << endl; } long long row; long long column; long long pivot = ((root + 1) * (root + 1) + root * root + 1) / 2; if (k > pivot) { row = (root + 1); column = (2 * pivot - k) % (root * root); } else { column = root + 1; row = k % (root * root); } cout << row << " " << column << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; for (long long f = 1; f <= t; f++) { long long k; cin >> k; long long root = sqrt(k); if (root * root == k) { cout << root << " " << "1" << endl; continue; } if (k == 2) { cout << "1" << " " << "2" << endl; continue; } if (k == 3) { cout << "2" << " " << "2" << endl; continue; } long long row; long long column; long long pivot = ((root + 1) * (root + 1) + root * root + 1) / 2; if (k > pivot) { row = (root + 1); column = (2 * pivot - k) % (root * root); } else { column = root + 1; row = k % (root * root); } cout << row << " " << column << endl; } }
68	 #include <bits/stdc++.h> using namespace std; void solve() { long long k, r, c, i, mid; cin >> k; i = sqrt(k); mid = (i * i) + i + 1; if (i * i == k) { c = i; r = 1; } else if (k <= mid) { c = i + 1; r = k - (i * i); } else { r = i + 1; c = (i + 1) * (i + 1) - k + 1; } cout << r << " " << c << endl; } int32_t main() { long long t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long k, r, c, i, mid; cin >> k; i = sqrt(k); mid = (i * i) + i + 1; if (i * i == k) { c = 1; r = i; } else if (k <= mid) { c = i + 1; r = k - (i * i); } else { r = i + 1; c = (i + 1) * (i + 1) - k + 1; } cout << r << " " << c << endl; } int32_t main() { long long t; cin >> t; while (t--) { solve(); } return 0; }
68	 #include <bits/stdc++.h> using namespace std; template <class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); } const int INF = 0x3f3f3f3f; void solve() { int n, i = 1, p = 1; cin >> n; while (1) { if ((n - i) < 0) { if (n <= p) { cout << n << " " << p << '\n'; return; } else { cout << p << " " << 2 * p - n << '\n'; return; } } n = n - i; i = i + 2; p++; } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; template <class T> T gcd(T a, T b) { return b == 0 ? a : gcd(b, a % b); } const int INF = 0x3f3f3f3f; void solve() { int n, i = 1, p = 1; cin >> n; while (1) { if ((n - i) <= 0) { if (n <= p) { cout << n << " " << p << '\n'; return; } else { cout << p << " " << 2 * p - n << '\n'; return; } } n = n - i; i = i + 2; p++; } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } return 0; }
69	 #include <bits/stdc++.h> using namespace std; long long int solve(string s, string w) { long long int a, b, c, i, j, k; i = 0; j = 0; a = s.length(); b = w.length(); for (i = 0; i < s.length(); i++) { if (j == w.length()) break; if (s.at(i) == w.at(j)) { b--; a--; j++; } } return a + b; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int q, T; cin >> T; for (q = 1; q <= T; q++) { string s; cin >> s; long long int a, b, c, i, j, k; long long int ans = 1e18; b = 1; for (i = 1; i <= 42; i++) { a = b; b = b * 2; string w = ""; while (a > 0) { char ch = a % 10 + '0'; w += ch; a /= 10; } reverse(w.begin(), w.end()); ans = min(ans, solve(s, w)); } cout << ans << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long int solve(string s, string w) { long long int a, b, c, i, j, k; i = 0; j = 0; a = s.length(); b = w.length(); for (i = 0; i < s.length(); i++) { if (j == w.length()) break; if (s.at(i) == w.at(j)) { b--; a--; j++; } } return a + b; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int q, T; cin >> T; for (q = 1; q <= T; q++) { string s; cin >> s; unsigned long long int a, b, c, i, j, k; long long int ans = 1e10; b = 1; for (i = 1; i <= 62; i++) { a = b; b = b * 2; string w = ""; while (a > 0) { char ch = a % 10 + '0'; w += ch; a /= 10; } reverse(w.begin(), w.end()); ans = min(ans, solve(s, w)); } cout << ans << "\n"; } return 0; }
69	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; long long a[66]; a[0] = 1; vector<string> powers; powers.push_back(to_string(a[0])); for (int i = 1; i <= 64; i++) { a[i] = a[i - 1] * 2; string str = to_string(a[i]); powers.push_back(str); } while (t--) { string nss; cin >> nss; long long ans = nss.size() + 1; for (int i = 0; i < powers.size(); i++) { long long taken = 0; long long px = 0, pn = 0; while (px < powers[i].size() && pn < nss.size()) { if (powers[i][px] == nss[pn]) { taken++; px++; } pn++; } long long tt = nss.size() + powers[i].size() - 2 * taken; ans = min(ans, tt); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; long long a[66]; a[0] = 1; vector<string> powers; powers.push_back(to_string(a[0])); for (int i = 1; i < 64; i++) { a[i] = a[i - 1] * 2; string str = to_string(a[i]); powers.push_back(str); } while (t--) { string nss; cin >> nss; long long ans = nss.size() + 1; for (int i = 0; i < powers.size(); i++) { long long taken = 0; long long px = 0, pn = 0; while (px < powers[i].size() && pn < nss.size()) { if (powers[i][px] == nss[pn]) { taken++; px++; } pn++; } long long tt = nss.size() + powers[i].size() - 2 * taken; ans = min(ans, tt); } cout << ans << endl; } }
69	 #include <bits/stdc++.h> using namespace std; string pow2[70]; void precalc() { int i = 1; int cur = 0; while (cur < 61) { pow2[cur] = to_string(i); i *= 2; cur++; } } long long calc(string a, string b) { int i = 0, j = 0; while (i < a.length() && j < b.length()) { if (a[i] == b[j]) { j++; } i++; } return b.length() - j + a.length() - j; } int main() { int q; precalc(); cin >> q; while (q--) { string s1; cin >> s1; long long ans = 10; for (int i = 0; i < 60; i++) { ans = min(ans, calc(s1, pow2[i])); } cout << ans << '\n'; ; } return 0; }	 #include <bits/stdc++.h> using namespace std; string pow2[70]; void precalc() { long long i = 1; int cur = 0; while (cur < 61) { pow2[cur] = to_string(i); i *= 2; cur++; } } long long calc(string a, string b) { int i = 0, j = 0; while (i < a.length() && j < b.length()) { if (a[i] == b[j]) { j++; } i++; } return b.length() - j + a.length() - j; } int main() { int q; precalc(); cin >> q; while (q--) { string s1; cin >> s1; long long ans = 10; for (int i = 0; i < 60; i++) { ans = min(ans, calc(s1, pow2[i])); } cout << ans << '\n'; ; } return 0; }
70	 #include <bits/stdc++.h> using namespace std; char cntsrc[30]; pair<string, string> decode(string s) { memset(cntsrc, 0, sizeof(cntsrc)); reverse(s.begin(), s.end()); string del; for (auto c : s) { if (!cntsrc[c - 'a']) del.push_back(c); cntsrc[c - 'a']++; } int orignLength = 0; int m = del.size(); for (int i = 0; i < m; i++) { orignLength += cntsrc[del[i] - 'a'] / (m - i); } reverse(del.begin(), del.end()); return {string(s.rbegin(), s.rbegin() + orignLength), del}; } string encode(pair<string, string> p) { string result = p.first; for (auto c : p.second) { string temp; for (auto d : p.first) if (d != c) { temp.push_back(d); result.push_back(d); } p.first = temp; } return result; } int main() { int t; cin >> t; while (t--) { string s; cin >> s; auto ans = decode(s); auto check = encode(ans); if (check == s) cout << ans.first << ' ' << ans.second << endl; else cout << -1 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int cntsrc[30]; pair<string, string> decode(string s) { memset(cntsrc, 0, sizeof(cntsrc)); reverse(s.begin(), s.end()); string del; for (auto c : s) { if (!cntsrc[c - 'a']) del.push_back(c); cntsrc[c - 'a']++; } int orignLength = 0; int m = del.size(); for (int i = 0; i < m; i++) { orignLength += cntsrc[del[i] - 'a'] / (m - i); } reverse(del.begin(), del.end()); return {string(s.rbegin(), s.rbegin() + orignLength), del}; } string encode(pair<string, string> p) { string result = p.first; for (auto c : p.second) { string temp; for (auto d : p.first) if (d != c) { temp.push_back(d); result.push_back(d); } p.first = temp; } return result; } int main() { int t; cin >> t; while (t--) { string s; cin >> s; auto ans = decode(s); auto check = encode(ans); if (check == s) cout << ans.first << ' ' << ans.second << endl; else cout << -1 << endl; } return 0; }
71	 #include <bits/stdc++.h> using namespace std; set<int> ans1, ans2; int x1, x2; void rec(int i, int x) { ans1.insert(x); if (x1 == x2) { ans2.insert(x); } if (i == 9) { return; } rec(i + 1, x * 10 + x1); rec(i + 1, x * 10 + x2); } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t, n, k; cin >> t; for (x1 = 0; x1 <= 9; x1++) { for (x2 = 0; x2 <= 9; x2++) { rec(0, 0); } } while (t--) { cin >> n >> k; if (n == 1e9) { if (k == 2) cout << n << "\n"; else cout << "111111111\n"; continue; } if (k == 1) { cout << (*ans2.lower_bound(n)) << "\n"; } else { cout << (*ans1.lower_bound(n)) << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; set<int> ans1, ans2; int x1, x2; void rec(int i, int x) { ans1.insert(x); if (x1 == x2) { ans2.insert(x); } if (i == 9) { return; } rec(i + 1, x * 10 + x1); rec(i + 1, x * 10 + x2); } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t, n, k; cin >> t; for (x1 = 0; x1 <= 9; x1++) { for (x2 = 0; x2 <= 9; x2++) { rec(0, 0); } } while (t--) { cin >> n >> k; if (n == 1e9) { if (k == 2) cout << n << "\n"; else cout << "1111111111\n"; continue; } if (k == 1) { cout << (*ans2.lower_bound(n)) << "\n"; } else { cout << (*ans1.lower_bound(n)) << "\n"; } } }
71	 #include <bits/stdc++.h> using namespace std; using namespace std; const int N = 500005; const long long Mod = 1e9 + 7; int main() { int t, k; string n; cin >> t; while (t--) { cin >> n >> k; string ans; for (char a = '0'; a <= '9'; a++) { string t(n.length(), a); if (t >= n) { ans = t; break; } } if (k == 1) { cout << ans << endl; } else { for (char a = '0'; a <= '9'; a++) { for (char b = a + 1; b <= '9'; b++) { bool ok = true; for (int i = 0; i < n.length(); i++) { if (n[i] < b) { string t = n; if (n[i] < a) t[i] = a; else t[i] = b; for (int j = i + 1; j < n.length(); j++) { t[j] = a; } if (ans > t) ans = t; } if (n[i] != a && n[i] != b) { ok = false; break; } } if (ok) ans = n; } } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; using namespace std; const int N = 500005; const long long Mod = 1e9 + 7; int main() { int t, k; string n; cin >> t; while (t--) { cin >> n >> k; string ans; for (char a = '0'; a <= '9'; a++) { string t(n.length(), a); if (t >= n) { ans = t; break; } } if (k == 1) { cout << ans << endl; } else { for (char a = '0'; a <= '9'; a++) { for (char b = a + 1; b <= '9'; b++) { bool ok = true; for (int i = 0; i < n.length(); i++) { if (n[i] < b) { string t = n; if (n[i] < a) t[i] = a; else t[i] = b; for (int j = i + 1; j < n.length(); j++) { t[j] = a; } if (ans > t) ans = t; } if (n[i] != a && n[i] != b) { ok = false; break; } } if (ok) ans = n; } } cout << ans << endl; } } return 0; }
72	 #include <bits/stdc++.h> using namespace std; int L, m; char a[1000]; int pan() { int j, i; set<char> s; for (i = 0; i < L; i++) { s.insert(a[i]); } if (s.size() > m) return 1; else return 0; } int main() { int j, i, w; scanf("%d", &w); while (w--) { scanf("%s %d", a, &m); L = strlen(a); i = 0; while (pan()) { set<char> s; for (i = 0; i < L; i++) { s.insert(a[i]); if (s.size() > m) { while (a[i] == '9') i--; a[i]++; for (j = i + 1; j < L; j++) a[j] = '0'; break; } } } printf("**** %s\n", a); } return 0; }	 #include <bits/stdc++.h> using namespace std; int L, m; char a[1000]; int pan() { int j, i; set<char> s; for (i = 0; i < L; i++) { s.insert(a[i]); } if (s.size() > m) return 1; else return 0; } int main() { int j, i, w; scanf("%d", &w); while (w--) { scanf("%s %d", a, &m); L = strlen(a); i = 0; while (pan()) { set<char> s; for (i = 0; i < L; i++) { s.insert(a[i]); if (s.size() > m) { while (a[i] == '9') i--; a[i]++; for (j = i + 1; j < L; j++) a[j] = '0'; break; } } } printf("%s\n", a); } return 0; }
72	 #include <bits/stdc++.h> using namespace std; int dx[4] = {1, -1, 0, 0}; int dy[4] = {0, 0, 1, -1}; long long gcd(long long a, long long b) { for (; b; a %= b, swap(a, b)) ; return a; } int main(void) { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { string n; int k; cin >> n; cin >> k; while (true) { set<char> s; for (int i = 0; i < n.size(); i++) s.insert(n[i]); if (s.size() <= k) { cout << n << "\n"; break; } s.clear(); int ptr = 0; while (true) { s.insert(n[ptr]); if (s.size() > k) { while (n[ptr] == '9') ptr--; n[ptr]++; for (int i = ptr + 1; i < n.size(); i++) n[i] = 0; break; } ptr++; } } } }	 #include <bits/stdc++.h> using namespace std; int dx[4] = {1, -1, 0, 0}; int dy[4] = {0, 0, 1, -1}; long long gcd(long long a, long long b) { for (; b; a %= b, swap(a, b)) ; return a; } int main(void) { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { string n; int k; cin >> n; cin >> k; while (true) { set<char> s; for (int i = 0; i < n.size(); i++) s.insert(n[i]); if (s.size() <= k) { cout << n << "\n"; break; } s.clear(); int ptr = 0; while (true) { s.insert(n[ptr]); if (s.size() > k) { while (n[ptr] == '9') ptr--; n[ptr]++; for (int i = ptr + 1; i < n.size(); i++) n[i] = '0'; break; } ptr++; } } } }
73	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const long double pi = 2 * acos(0.0); const int mod = 1e9 + 7; const int maxn = 2e5 + 5; void solve() { int n; cin >> n; vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> b = a; sort(b.begin(), b.end()); bool ok = 1; for (int i = 0; i < n; i++) { if (a[i] != b[i]) { ok = 0; break; } } if (ok) { cout << 0 << '\n'; return; } for (int i = 0; i < n; i++) { if (i % 2 == 0) { for (int j = 0; j < n; j += 2) { if (j + 1 < n && a[j + 1] < a[j]) { swap(a[j], a[j + 1]); } } } else { for (int j = 1; j < n; j += 2) { if (j + 1 < n && a[j + 1] < a[j]) { swap(a[j], a[j + 1]); } } } bool okk = 1; for (int j = 0; j < n; j++) { if (a[i] != b[i]) { okk = 0; break; } } if (okk) { cout << i + 1 << '\n'; return; } } return; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const long double pi = 2 * acos(0.0); const int mod = 1e9 + 7; const int maxn = 2e5 + 5; void solve() { int n; cin >> n; vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> b = a; sort(b.begin(), b.end()); bool ok = 1; for (int i = 0; i < n; i++) { if (a[i] != b[i]) { ok = 0; break; } } if (ok) { cout << 0 << '\n'; return; } for (int i = 0; i < n; i++) { if (i % 2 == 0) { for (int j = 0; j < n; j += 2) { if (j + 1 < n && a[j + 1] < a[j]) { swap(a[j], a[j + 1]); } } } else { for (int j = 1; j < n; j += 2) { if (j + 1 < n && a[j + 1] < a[j]) { swap(a[j], a[j + 1]); } } } bool okk = 1; for (int j = 0; j < n; j++) { if (a[j] != b[j]) { okk = 0; break; } } if (okk) { cout << i + 1 << '\n'; return; } } return; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }
73	 #include <bits/stdc++.h> using namespace std; void swap(int &a, int &b) { int temp = a; a = b; b = temp; } int main() { int tt; cin >> tt; int n, diff, sft, row, col, k; while (tt--) { cin >> n; vector<int> arr(n + 1); for (int i = 1; i <= n; i++) cin >> arr[i]; int count = 0; for (int i = 1;; i++) { int chck = 0; for (int j = 2; j <= n; j++) { if (arr[j - 1] < arr[j]) chck++; else break; } if (chck == n - 1) break; if (i % 2 == 0) { for (int j = 1; j <= n; j++) { if (j % 2 == 0) if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]); } } else { for (int j = 1; j <= n; j++) if (j % 2) if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]); } count++; } cout << count << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; void swap(int &a, int &b) { int temp = a; a = b; b = temp; } int main() { int tt; cin >> tt; int n, diff, sft, row, col, k; while (tt--) { cin >> n; vector<int> arr(n + 1); for (int i = 1; i <= n; i++) cin >> arr[i]; int count = 0; for (int i = 1;; i++) { int chck = 0; for (int j = 2; j <= n; j++) { if (arr[j - 1] < arr[j]) chck++; else break; } if (chck == n - 1) break; if (i % 2 == 0) { for (int j = 1; j < n; j++) { if (j % 2 == 0) if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]); } } else { for (int j = 1; j < n; j++) if (j % 2) if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]); } count++; } cout << count << endl; } return 0; }
75	 #include <bits/stdc++.h> using namespace std; const int siz = 1e5; int t, n; vector<int> cvs[siz + 5]; vector<pair<long long, int>> mnps; void clear() { for (int i = 1; i <= n; ++i) { cvs[i].clear(); } mnps.clear(); } int main() { scanf("%d", &t); while (t--) { scanf("%d", &n); for (int i = 1; i <= n; ++i) { int sz; scanf("%d", &sz); while (sz--) { int v; scanf("%d", &v); cvs[i].push_back(v); } } for (int i = 1; i <= n; ++i) { long long mnp = cvs[i][0] + 1; long long curp = mnp + 1; int sz = cvs[i].size(); for (int j = 1; j < sz; ++j) { if (curp <= cvs[i][j]) { mnp += cvs[i][j] + 1 - curp; curp = cvs[i][j] + 1; } ++curp; } mnps.push_back({mnp, i}); } sort(mnps.begin(), mnps.end()); long long ans = mnps[0].first; long long curp = ans + cvs[mnps[0].second].size(); int sz = mnps.size(); for (int i = 1; i < sz; ++i) { if (curp < mnps[i].first) { ans += mnps[i].first - curp; curp = mnps[i].first; } ++curp += cvs[mnps[i].second].size(); } printf("%I64d\n", ans); clear(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int siz = 1e5; int t, n; vector<int> cvs[siz + 5]; vector<pair<long long, int>> mnps; void clear() { for (int i = 1; i <= n; ++i) { cvs[i].clear(); } mnps.clear(); } int main() { scanf("%d", &t); while (t--) { scanf("%d", &n); for (int i = 1; i <= n; ++i) { int sz; scanf("%d", &sz); while (sz--) { int v; scanf("%d", &v); cvs[i].push_back(v); } } for (int i = 1; i <= n; ++i) { long long mnp = cvs[i][0] + 1; long long curp = mnp + 1; int sz = cvs[i].size(); for (int j = 1; j < sz; ++j) { if (curp <= cvs[i][j]) { mnp += cvs[i][j] + 1 - curp; curp = cvs[i][j] + 1; } ++curp; } mnps.push_back({mnp, i}); } sort(mnps.begin(), mnps.end()); long long ans = mnps[0].first; long long curp = ans + cvs[mnps[0].second].size(); int sz = mnps.size(); for (int i = 1; i < sz; ++i) { if (curp < mnps[i].first) { ans += mnps[i].first - curp; curp = mnps[i].first; } curp += cvs[mnps[i].second].size(); } printf("%I64d\n", ans); clear(); } return 0; }
75	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; vector<long long> prime; bool num[1000005 + 2]; void sieve() { num[0] = true; num[1] = true; for (long long i = 2; i <= 1000005; i++) { if (num[i] == false) { prime.push_back(i); for (long long j = 2 * i; j <= 1000005; j = j + i) { num[j] = true; } } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long n, m, i, j, k, l, a, b, c, p, q, r, t, ans, sum; cin >> t; vector<pair<long long, long long> > v; while (t--) { cin >> n; m = n; j = 0; while (n--) { cin >> k >> a; b = a + 1; c = b + 1; for (i = 1; i < k; i++) { cin >> a; if (a >= c) { b = b + (a - c) + 1; c = a + 2; } else c++; } v.push_back(make_pair(b, k)); } sort(v.begin(), v.end()); b = v[i].first + v[i].second; a = v[0].first; for (i = 1; i < m; i++) { if (v[i].first > b) { c = v[i].first - b; b = v[i].first + v[i].second; a = a + c; } else { b = b + v[i].second; } } cout << a << endl; v.clear(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; vector<long long> prime; bool num[1000005 + 2]; void sieve() { num[0] = true; num[1] = true; for (long long i = 2; i <= 1000005; i++) { if (num[i] == false) { prime.push_back(i); for (long long j = 2 * i; j <= 1000005; j = j + i) { num[j] = true; } } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long n, m, i, j, k, l, a, b, c, p, q, r, t, ans, sum; cin >> t; vector<pair<long long, long long> > v; while (t--) { cin >> n; m = n; j = 0; while (n--) { cin >> k >> a; b = a + 1; c = b + 1; for (i = 1; i < k; i++) { cin >> a; if (a >= c) { b = b + (a - c) + 1; c = a + 2; } else c++; } v.push_back(make_pair(b, k)); } sort(v.begin(), v.end()); b = v[0].first + v[0].second; a = v[0].first; for (i = 1; i < m; i++) { if (v[i].first > b) { c = v[i].first - b; b = v[i].first + v[i].second; a = a + c; } else { b = b + v[i].second; } } cout << a << endl; v.clear(); } return 0; }
75	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; const int P = 1e9 + 7; const int INF = 0x3f3f3f3f; int t, n; pair<long long, long long> res[N]; bool cmp(pair<long long, long long> a, pair<long long, long long> b) { return (a.first - a.second) < (b.first - b.second); } void solve() { int k; long long x, minn, ans = 0; for (int i = 0; i < n; ++i) { scanf("%d", &k); minn = 0; for (int j = 0; j < k; ++j) { scanf("%lld", &x); if (x >= minn) minn = x + 1; ++minn; } res[i].first = minn; res[i].second = k; } sort(res, res + n); ans = res[0].first - res[0].second; long long cur = res[0].first; for (int i = 1; i < n; ++i) { int temp = res[i].first - res[i].second; if (temp > cur) { ans += temp - cur; cur = res[i].first; } else { cur += res[i].second; } } printf("%lld\n", ans); } int main() { scanf("%d", &t); while (t--) { scanf("%d", &n); solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; const int P = 1e9 + 7; const int INF = 0x3f3f3f3f; int t, n; pair<long long, long long> res[N]; bool cmp(pair<long long, long long> a, pair<long long, long long> b) { return (a.first - a.second) < (b.first - b.second); } void solve() { int k; long long x, minn, ans = 0; for (int i = 0; i < n; ++i) { scanf("%d", &k); minn = 0; for (int j = 0; j < k; ++j) { scanf("%lld", &x); if (x >= minn) minn = x + 1; ++minn; } res[i].first = minn; res[i].second = k; } sort(res, res + n, cmp); ans = res[0].first - res[0].second; long long cur = res[0].first; for (int i = 1; i < n; ++i) { int temp = res[i].first - res[i].second; if (temp > cur) { ans += temp - cur; cur = res[i].first; } else { cur += res[i].second; } } printf("%lld\n", ans); } int main() { scanf("%d", &t); while (t--) { scanf("%d", &n); solve(); } return 0; }
75	 #include <bits/stdc++.h> using namespace std; long long int mod = pow(10, 9) + 7; signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int T = 1; cin >> T; while (T--) { long long int n; cin >> n; vector<long long int> v[n]; for (long long int i = 0; i < n; i++) { long long int ki; cin >> ki; for (long long int j = 0; j < ki; j++) { long long int x; cin >> x; v[i].push_back(x + 1 - j); } } map<long long int, long long int> mp; for (long long int i = 0; i < n; i++) { long long int x = *max_element(v[i].begin(), v[i].end()); mp[x] += v[i].size(); } auto it = mp.begin(); long long int ans = it->first; long long int covered = 0; long long int sumcovered = ans; for (auto x : mp) { if (x.first < sumcovered) { ans = x.first - covered; sumcovered = x.first; } sumcovered += x.second; covered += x.second; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long int mod = pow(10, 9) + 7; signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int T = 1; cin >> T; while (T--) { long long int n; cin >> n; vector<long long int> v[n]; for (long long int i = 0; i < n; i++) { long long int ki; cin >> ki; for (long long int j = 0; j < ki; j++) { long long int x; cin >> x; v[i].push_back(x + 1 - j); } } map<long long int, long long int> mp; for (long long int i = 0; i < n; i++) { long long int x = *max_element(v[i].begin(), v[i].end()); mp[x] += v[i].size(); } auto it = mp.begin(); long long int ans = it->first; long long int covered = 0; long long int sumcovered = ans; for (auto x : mp) { if (x.first >= sumcovered) { ans = x.first - covered; sumcovered = x.first; } sumcovered += x.second; covered += x.second; } cout << ans << '\n'; } return 0; }
75	 #include <bits/stdc++.h> using namespace std; int main() { int t, n, m, x; cin >> t; while (t--) { cin >> n; vector<pair<int, int> > cave(n); for (int i = 0; i < n; i++) { cin >> m; cave[i] = make_pair(0, m); for (int j = 0; j < m; j++) { cin >> x; cave[i].first = max(x - j, cave[i].first); } } int pow = 0, sol = 0; sort(cave.begin(), cave.end()); for (int i = 0; i < n; i++) { if (cave[i].first > pow) { sol += cave[i].first - pow + 1; pow += cave[i].first - pow + 1; } pow += cave[i].second; } cout << sol << '\n'; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t, n, m, x; cin >> t; while (t--) { cin >> n; vector<pair<int, int> > cave(n); for (int i = 0; i < n; i++) { cin >> m; cave[i] = make_pair(0, m); for (int j = 0; j < m; j++) { cin >> x; cave[i].first = max(x - j, cave[i].first); } } int pow = 0, sol = 0; sort(cave.begin(), cave.end()); for (int i = 0; i < n; i++) { if (cave[i].first >= pow) { sol += cave[i].first - pow + 1; pow += cave[i].first - pow + 1; } pow += cave[i].second; } cout << sol << '\n'; } }
75	 #include <bits/stdc++.h> using namespace std; const long long MAX_N = 1e5 + 1; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long long LINF = 1e18; void solve() { long long n; cin >> n; vector<vector<long long>> caves(n); for (long long i{}; i < n; ++i) { long long t; cin >> t; for (long long j{}; j < t; ++j) { long long a; cin >> a; caves[i].push_back(a); } } vector<pair<long long, long long>> t; for (long long i{}; i < n; ++i) { long long need = caves[i][0] + 1; for (long long j{1}; j < caves[i].size(); ++j) { if (caves[i][j] > need + j) { need = caves[i][j] - j + 1; } } t.push_back({need, -(long long)(caves[i].size())}); } sort(t.begin(), t.end()); long long totaladd = -t[0].second, out = t[0].first; for (long long i{1}; i < t.size(); ++i) { if (out + totaladd < t[i].first) { out = t[i].first - totaladd; } totaladd -= t[i].second; } cout << out << '\n'; } long long main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tc; cin >> tc; for (long long t = 1; t <= tc; t++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long MAX_N = 1e5 + 1; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long long LINF = 1e18; void solve() { long long n; cin >> n; vector<vector<long long>> caves(n); for (long long i{}; i < n; ++i) { long long t; cin >> t; for (long long j{}; j < t; ++j) { long long a; cin >> a; caves[i].push_back(a); } } vector<pair<long long, long long>> t; for (long long i{}; i < n; ++i) { long long need = caves[i][0] + 1; for (long long j{1}; j < caves[i].size(); ++j) { if (caves[i][j] >= need + j) { need = caves[i][j] - j + 1; } } t.push_back({need, -(long long)(caves[i].size())}); } sort(t.begin(), t.end()); long long totaladd = -t[0].second, out = t[0].first; for (long long i{1}; i < t.size(); ++i) { if (out + totaladd <= t[i].first) { out = t[i].first - totaladd; } totaladd -= t[i].second; } cout << out << '\n'; } long long main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tc; cin >> tc; for (long long t = 1; t <= tc; t++) { solve(); } }
76	 #include <bits/stdc++.h> using namespace std; const long double eps = 1e-8; const int N = 2e5 + 10; const int M = 1e6 + 10; long long dp1[N]; long long dp2[N]; void run() { long long n, m; scanf("%lld%lld", &n, &m); dp1[1] = 1; for (int i = 1; i <= n; i++) { dp2[i] = 1; } for (int i = 2, sum = 1; i <= n; i++) { dp2[i] = (dp2[i] + dp2[i - 1]) % m; dp1[i] = (dp2[i] + sum) % m; dp1[i] = (dp1[i] - dp1[i - 1] + m) % m; sum = (sum + dp1[i]) % m; long long now = (dp1[i] - dp1[i - 1] + m) % m; for (int j = i; j <= n; j += i) dp2[j] = (dp2[i] + now) % m; } printf("%lld\n", dp1[n]); } int main() { run(); return 0; }	 #include <bits/stdc++.h> using namespace std; const long double eps = 1e-8; const int N = 2e5 + 10; const int M = 1e6 + 10; long long dp1[N]; long long dp2[N]; void run() { long long n, m; scanf("%lld%lld", &n, &m); dp1[1] = 1; for (int i = 1; i <= n; i++) { dp2[i] = 1; } for (int i = 2, sum = 1; i <= n; i++) { dp2[i] = (dp2[i] + dp2[i - 1]) % m; dp1[i] = (dp2[i] + sum) % m; dp1[i] = (dp1[i] - dp1[i - 1] + m) % m; sum = (sum + dp1[i]) % m; long long now = (dp1[i] - dp1[i - 1] + m) % m; for (int j = i; j <= n; j += i) dp2[j] = (dp2[j] + now) % m; } printf("%lld\n", dp1[n]); } int main() { run(); return 0; }
76	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; int f[N]; int main() { long long n, m; cin >> n >> m; f[1] = 1; long long sum = 1; for (int i = 2; i <= n; i++) { f[i] += sum; for (int l = 2, r = 0; l <= i; l = r + 1) { r = min(i, i / (i / l)); f[i] += 1ll * f[i / l] * (r - l + 1); f[i] %= m; } sum += f[i]; sum %= m; } cout << f[n] << endl; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; long long f[N]; int main() { long long n, m; cin >> n >> m; f[1] = 1; long long sum = 1; for (int i = 2; i <= n; i++) { f[i] += sum; for (int l = 2, r = 0; l <= i; l = r + 1) { r = min(i, i / (i / l)); f[i] += 1ll * f[i / l] * (r - l + 1); f[i] %= m; } sum += f[i]; sum %= m; } cout << f[n] << endl; }
76	 #include <bits/stdc++.h> using namespace std; int n, m; int dp[200001]; int main() { cin >> n >> m; dp[1] = 1 % m; int sum = 1; for (int i = 2; i <= n; i++) { for (int l = 2, r; l <= i; l = r + 1) { r = i / (i / l); dp[i] = (dp[i] + (r - l + 1) * dp[i / l]) % m; } dp[i] = (dp[i] + sum) % m; sum = (sum + dp[i]) % m; } cout << dp[n] << endl; }	 #include <bits/stdc++.h> using namespace std; int n, m; int dp[200001]; int main() { cin >> n >> m; dp[1] = 1 % m; int sum = 1; for (int i = 2; i <= n; i++) { for (int l = 2, r; l <= i; l = r + 1) { r = i / (i / l); dp[i] = (dp[i] + (r - l + 1LL) * dp[i / l]) % m; } dp[i] = (dp[i] + sum) % m; sum = (sum + dp[i]) % m; } cout << dp[n] << endl; }
76	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; int f[N], sum[N]; int n, mod; int main() { scanf("%d%d", &n, &mod); f[n] = sum[n] = 1; for (int i = n - 1; i; --i) { f[i] = (f[i] + sum[i + 1]) % mod; for (int j = 2; i * j <= n; ++j) { int l = i * j, r = min(n, j * (i + 1) - 1); f[i] = (f[i] + sum[l] - sum[r + 1]) % mod; } sum[i] = (sum[i + 1] + f[i]) % mod; } cout << f[1] << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; long long f[N], sum[N]; int n, mod; int main() { scanf("%d%d", &n, &mod); f[n] = sum[n] = 1; for (int i = n - 1; i; --i) { f[i] = (f[i] + sum[i + 1]) % mod; for (int j = 2; i * j <= n; ++j) { int l = i * j, r = min(n, j * (i + 1) - 1); f[i] = (f[i] + sum[l] - sum[r + 1]) % mod; } sum[i] = (sum[i + 1] + f[i]) % mod; } cout << f[1] << endl; return 0; }
77	 #include <bits/stdc++.h> #pragma warning(disable : 4996) #pragma comment(linker, "/STACK:16777216") using namespace std; const int INF = 1000000000 + 1e8; const long long LINF = 2000000000000000000; const int N = 4e6 + 1010; long long dp[N]; long long pref[N]; long long n, mod; long long get(int l, int r) { return (pref[l] - (r == n ? 0 : pref[r + 1]) + 2 * mod) % mod; } void solve() { cin >> n >> mod; dp[n] = 1, pref[n] = 1; int l, r; for (int i = n - 1; i >= 1; i--) { dp[i] = pref[i + 1] % mod; for (int x = 2; i * x <= n; x++) { l = i * x; r = i * x + x - 1; dp[i] = (dp[i] + get(l, r)) % mod; } pref[i] = (pref[i + 1] + dp[i]) % mod; } cout << dp[1]; } int main() { srand(time(0)); ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int tst = 1; while (tst--) solve(); }	 #include <bits/stdc++.h> #pragma warning(disable : 4996) #pragma comment(linker, "/STACK:16777216") using namespace std; const int INF = 1000000000 + 1e8; const long long LINF = 2000000000000000000; const int N = 4e6 + 1010; long long dp[N]; long long pref[N]; long long n, mod; long long get(int l, int r) { return (pref[l] - (r >= n ? 0 : pref[r + 1]) + 2 * mod) % mod; } void solve() { cin >> n >> mod; dp[n] = 1, pref[n] = 1; int l, r; for (int i = n - 1; i >= 1; i--) { dp[i] = pref[i + 1] % mod; for (int x = 2; i * x <= n; x++) { l = i * x; r = i * x + x - 1; dp[i] = (dp[i] + get(l, r)) % mod; } pref[i] = (pref[i + 1] + dp[i]) % mod; } cout << dp[1]; } int main() { srand(time(0)); ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int tst = 1; while (tst--) solve(); }
77	 #include <bits/stdc++.h> using namespace std; const int maxn = 4e6 + 5; int f[maxn] = {}; int main() { int q = 1; while (q--) { long long n, m; cin >> n >> m; f[1] = 1; f[2] = 2; for (int i = 2; i <= n; i++) { if (i == 2) f[i] = 2; else f[i] = (f[i] + 2 * f[i - 1] + 1) % m; long long x = f[i] - f[i - 1]; for (int j = i * 2; j <= n; j += i) f[j] = (f[j] + x) % m; } cout << (f[n] % m + m) % m << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 4e6 + 5; long long f[maxn] = {}; int main() { int q = 1; while (q--) { long long n, m; cin >> n >> m; f[1] = 1; f[2] = 2; for (int i = 2; i <= n; i++) { if (i == 2) f[i] = 2; else f[i] = (f[i] + 2 * f[i - 1] + 1) % m; long long x = f[i] - f[i - 1]; for (int j = i * 2; j <= n; j += i) f[j] = (f[j] + x) % m; } cout << (f[n] % m + m) % m << endl; } return 0; }
77	 #include <bits/stdc++.h> using namespace std; const int inf = 1e9; const int N = 10000007; const int mod = 1e9 + 7; const double eps = 1e-6; const double pi = acos(-1.0); inline int read() { int x; scanf("%lld", &x); return x; } struct Node { int mn, key; bool operator<(const Node& b) const { if (mn == b.mn) return key < b.key; return mn < b.mn; } }; int T, n, m; int dp[2][N]; int ksm(int a, int b) { int res = 1; while (b) { if (b & 1) res = res * a % mod; a = a * a % mod; b <<= 1; } return res; } void solve() { n = read(), m = read(); dp[0][1] = 1; long long pre = 0; for (int i = (1); i <= (n); ++i) { dp[1][i] = (0ll + dp[1][i] + dp[1][i - 1]) % m; if (i > 1) dp[0][i] = dp[1][i]; dp[0][i] = (0ll + dp[0][i] + pre) % m; int l = 1, r = 2 * i; while (r <= n) { dp[1][r] = (0ll + dp[1][r] + dp[0][i]) % m; dp[1][r + l + 1] = (0ll + dp[1][r + l + 1] + m - dp[0][i]) % m; ++l; r += i; } pre = (0ll + dp[0][i] + pre) % m; } printf("%lld\n", dp[0][n]); } signed main() { solve(); }	 #include <bits/stdc++.h> using namespace std; const int inf = 1e9; const int N = 10000007; const int mod = 1e9 + 7; const double eps = 1e-6; const double pi = acos(-1.0); inline int read() { int x; scanf("%d", &x); return x; } struct Node { int mn, key; bool operator<(const Node& b) const { if (mn == b.mn) return key < b.key; return mn < b.mn; } }; int T, n, m; int dp[2][N]; int ksm(int a, int b) { int res = 1; while (b) { if (b & 1) res = res * a % mod; a = a * a % mod; b <<= 1; } return res; } void solve() { n = read(), m = read(); dp[0][1] = 1; long long pre = 0; for (int i = (1); i <= (n); ++i) { dp[1][i] = (0ll + dp[1][i] + dp[1][i - 1]) % m; if (i > 1) dp[0][i] = dp[1][i]; dp[0][i] = (0ll + dp[0][i] + pre) % m; int l = 1, r = 2 * i; while (r <= n) { dp[1][r] = (0ll + dp[1][r] + dp[0][i]) % m; dp[1][r + l + 1] = (0ll + dp[1][r + l + 1] + m - dp[0][i]) % m; ++l; r += i; } pre = (0ll + dp[0][i] + pre) % m; } printf("%d\n", dp[0][n]); } signed main() { solve(); }
77	 #include <bits/stdc++.h> using namespace std; const long long N = 1e6 + 10; const long long mod = 1e9 + 7; const long long inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; long long n, m; long long dp[N]; void solve() { cin >> n >> m; dp[1] = 1, dp[2] = 2; for (long long i = (2); i <= (n); ++i) { if (i > 2) dp[i] = (dp[i] + dp[i - 1] * 2 + 1) % mod; long long d = dp[i] - dp[i - 1]; for (long long j = 2; j <= n / i; j++) { dp[i * j] += d; } } cout << (dp[n] % mod + mod) % mod << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 4e6 + 10; long long mod = 1e9 + 7; const long long inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; long long n, m; long long dp[N]; void solve() { cin >> n >> mod; dp[1] = 1, dp[2] = 2; for (long long i = (2); i <= (n); ++i) { if (i > 2) dp[i] = (dp[i] + dp[i - 1] * 2 + 1) % mod; long long d = dp[i] - dp[i - 1]; for (long long j = 2; j <= n / i; j++) { dp[i * j] += d; } } cout << (dp[n] % mod + mod) % mod << endl; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); solve(); return 0; }
77	 #include <bits/stdc++.h> using namespace std; const long long inf = 0x3f3f3f3f; long long sum[200010], f[200010]; signed main() { long long n, m; sum[1] = 1; f[1] = 1; cin >> n >> m; f[n] = sum[n] = 1; for (long long i = n - 1; i >= 1; i--) { f[i] = sum[i + 1]; for (long long j = 2; i * j <= n; j++) { long long l = i * j, r = min(n, (i + 1) * j - 1); if (l <= r) f[i] = ((f[i] + sum[l]) % m - sum[r + 1]) % m; } sum[i] = (sum[i + 1] + f[i]) % m; } cout << (f[n] + m) % m << '\n'; }	 #include <bits/stdc++.h> using namespace std; const long long inf = 0x3f3f3f3f; long long sum[4000010], f[4000010]; signed main() { long long n, m; sum[1] = 1; f[1] = 1; cin >> n >> m; f[n] = sum[n] = 1; for (long long i = n - 1; i >= 1; i--) { f[i] = sum[i + 1]; for (long long j = 2; i * j <= n; j++) { long long l = i * j, r = min(n, (i + 1) * j - 1); if (l <= r) f[i] = ((f[i] + sum[l]) % m - sum[r + 1]) % m; } sum[i] = (sum[i + 1] + f[i]) % m; } cout << (f[1] + m) % m << '\n'; }
77	 #include <bits/stdc++.h> using namespace std; const int N = 1e6, mod = 1e9 + 7; int n, m, ans[4 * N + 1]; void input() { cin >> n >> m; ans[1] = 1; for (int i = 2; i <= n; i++) { ans[i] = (ans[i] + 2LL * ans[i - 1] + 1) % m; if (i == 2) ans[i]--; for (int j = 2 * i; j <= n; j += i) ans[j] = (ans[j] + ans[i] - ans[i - 1] + m) % m; } cout << ans[n] << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); input(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6, mod = 1e9 + 7; long long n, m, ans[4 * N + 1]; void input() { cin >> n >> m; ans[1] = 1; for (int i = 2; i <= n; i++) { ans[i] = (ans[i] + 2LL * ans[i - 1] + 1) % m; if (i == 2) ans[i]--; for (int j = 2 * i; j <= n; j += i) ans[j] = (ans[j] + ans[i] - ans[i - 1] + m) % m; } cout << ans[n] << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); input(); return 0; }
77	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; const long long INF = INT_MAX; const long double pi = 4 * atan((long double)1); template <class T> inline T gcd(T a, T b) { if (b) return gcd(b, a % b); else return a; } template <class T> inline T lcm(T a, T b) { return a / gcd(a, b) * b; } long long f[4000006]; signed main() { ios::sync_with_stdio(); cin.tie(0); cout.tie(0); ; long long n, m; scanf("%d%d", &n, &m); f[1] = 1; for (long long i = 2; i <= n; ++i) { f[i] += ((2 * f[i - 1] + 1) % m); f[i] = f[i] % m; if (i == 2) f[i]--; for (long long j = 2 * i; j <= n; j += i) { f[j] += (f[i] - f[i - 1]); f[j] = (f[j] + m) % m; } } cout << f[n]; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; const long long INF = INT_MAX; const long double pi = 4 * atan((long double)1); template <class T> inline T gcd(T a, T b) { if (b) return gcd(b, a % b); else return a; } template <class T> inline T lcm(T a, T b) { return a / gcd(a, b) * b; } long long f[4000006]; signed main() { ios::sync_with_stdio(); cin.tie(0); cout.tie(0); ; long long n, m; scanf("%lld%lld", &n, &m); f[1] = 1; for (long long i = 2; i <= n; ++i) { f[i] += ((2 * f[i - 1] + 1) % m); f[i] = f[i] % m; if (i == 2) f[i]--; for (long long j = 2 * i; j <= n; j += i) { f[j] += (f[i] - f[i - 1]); f[j] = (f[j] + m) % m; } } cout << f[n]; }
78	 #include <bits/stdc++.h> using namespace std; const int N = 100010, M = 1000010; const unsigned long long P = 13331; int n, a[N]; int main() { int T; cin >> T; while (T--) { long long l, r; cin >> l >> r; long long ans = 0; if ((long long)l * 2 > r) { ans = r - l; } else { if (r & 1) ans = (r - 2) / 2; else ans = (r - 1) / 2; } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 100010, M = 1000010; const unsigned long long P = 13331; int n, a[N]; int main() { int T; cin >> T; while (T--) { long long l, r; cin >> l >> r; long long ans = 0; if ((long long)l * 2 > r) { ans = r - l; } else { if (r & 1) ans = (r - 1) / 2; else ans = (r - 2) / 2; } cout << ans << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { unsigned long long m, n; cin >> m >> n; long long max = -1; long long diff = n - m; long long a = n / 2; if (m < (n / 2)) { cout << n % (a + 1); } else { cout << n % m; } cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { unsigned long long m, n; cin >> m >> n; long long max = -1; long long diff = n - m; long long a = n / 2; if (m <= (n / 2)) { cout << n % (a + 1); } else { cout << n % m; } cout << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long l, r; cin >> l >> r; if (l == r) { cout << 0 << endl; } else if (l * 2 <= r) { cout << (r + 1) / 2 - 1 << endl; } else { cout << r % 1 << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long l, r; cin >> l >> r; if (l == r) { cout << 0 << endl; } else if (l * 2 <= r) { cout << (r + 1) / 2 - 1 << endl; } else { cout << r % l << endl; } } }
78	 #include <bits/stdc++.h> using namespace std; long long mod = 1e9 + 7; const long long N = 4e6 + 6; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long powmod(long long a, long long b) { long long ans = 1; while (b > 0) { if (b & 1) ans = ans * a % mod; a = a * a % mod; b >>= 1; } return ans; } long long readn() { long long sum = 0, f = 1; char ch = getchar(); while (ch > '9' || ch < '0') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { sum = sum * 10 + (ch - '0'); ch = getchar(); } return sum * f; } long long t, l, r, p; int main() { t = readn(); while (t--) { l = readn(); r = readn(); p = r - l; if (p > l) cout << r / 2 - (r % 2 == 0); else cout << p; cout << endl; } }	 #include <bits/stdc++.h> using namespace std; long long mod = 1e9 + 7; const long long N = 4e6 + 6; long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; } long long powmod(long long a, long long b) { long long ans = 1; while (b > 0) { if (b & 1) ans = ans * a % mod; a = a * a % mod; b >>= 1; } return ans; } long long readn() { long long sum = 0, f = 1; char ch = getchar(); while (ch > '9' || ch < '0') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { sum = sum * 10 + (ch - '0'); ch = getchar(); } return sum * f; } long long t, l, r, p; int main() { t = readn(); while (t--) { l = readn(); r = readn(); p = r - l; if (p >= l) cout << r / 2 - (r % 2 == 0); else cout << p; cout << endl; } }
78	 #include <bits/stdc++.h> using namespace std; void solve() { long long int a, b; cin >> a >> b; if (b % 2 == 1) { if ((b + 1) / 2 >= a) cout << b / 2 << endl; else cout << b - a << endl; } else { if ((b / 2) + 2 >= a) cout << (b / 2) - 1 << endl; else cout << b - a << endl; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int a, b; cin >> a >> b; if (b % 2 == 1) { if ((b + 1) / 2 >= a) cout << b / 2 << endl; else cout << b - a << endl; } else { if ((b / 2) + 1 >= a) cout << (b / 2) - 1 << endl; else cout << b - a << endl; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) solve(); return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main() { int l, r, ans, n; cin >> n; while (n--) { cin >> l >> r; int c = (r / 2) + 1; if (l < c) { ans = r % c; cout << ans << endl; } else { ans = l % r; cout << ans << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int l, r, ans, n; cin >> n; while (n--) { cin >> l >> r; int c = (r / 2) + 1; if (l < c) { ans = r % c; cout << ans << endl; } else { ans = r % l; cout << ans << endl; } } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; int reminder; int s; if (r / 2 > l && r > 1) { s = r / 2; reminder = r % (s + 1); } else { s = l; reminder = r % s; } cout << reminder << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; int reminder; int s; if (r / 2 >= l && r > 1) { s = r / 2; reminder = r % (s + 1); } else { s = l; reminder = r % s; } cout << reminder << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int M = 5e5 + 5; const int INF = 2e9; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int n, m, t, i, j, k, a, b, c; cin >> t; while (t--) { cin >> n >> m; if (m % 2 == 0) { a = m - 1; b = max(m / 2, n); c = m % b; if (n == m) { c = 0; } } else { a = m; b = max((m + 1) / 2, n); c = 0; } cout << max(c, a % b) << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int M = 5e5 + 5; const int INF = 2e9; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int n, m, t, i, j, k, a, b, c; cin >> t; while (t--) { cin >> n >> m; if (m % 2 == 0) { a = m - 1; b = max(m / 2, n); c = m % b; if (n == m) { a = 0; } } else { a = m; b = max((m + 1) / 2, n); c = 0; } cout << max(c, a % b) << '\n'; } }
78	 #include <bits/stdc++.h> using namespace std; const long long int MOD = 1e9 + 7; const long long int MAX_N = 1e5 + 1; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int l, r; long long int t; cin >> t; while (t--) { cin >> l >> r; long long int h = r / 2; if (l >= h) cout << (r % l) << "\n"; else cout << (r) % (h + 1) << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long int MOD = 1e9 + 7; const long long int MAX_N = 1e5 + 1; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int l, r; long long int t; cin >> t; while (t--) { cin >> l >> r; long long int h = r / 2; if (l > h) cout << (r % l) << "\n"; else cout << (r) % (h + 1) << "\n"; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; if (r < l * 2) cout << r - 1 << endl; else cout << (r - 1) / 2 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; if (r < l * 2) cout << r - l << endl; else cout << (r - 1) / 2 << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int findN(int l, int r) { int num, i, j; if (r == 1) return 0; num = 0; if (l < r / 2) { l = r / 2 + 1; } num = r % l; return num; } int main() { int TC, l, r; cin >> TC; while (TC--) { cin >> l >> r; cout << findN(l, r) << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int findN(int l, int r) { int num, i, j; if (r == 1) return 0; num = 0; if (l <= r / 2) { l = r / 2 + 1; } num = r % l; return num; } int main() { int TC, l, r; cin >> TC; while (TC--) { cin >> l >> r; cout << findN(l, r) << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int main(void) { int t; cin >> t; while (t--) { int a, b; cin >> a >> b; int max_t = a > b ? a : b; int min_t = a < b ? a : b; if (min_t < max_t / 2) cout << max_t % (max_t / 2 + 1) << endl; else cout << max_t % min_t << endl; } }	 #include <bits/stdc++.h> using namespace std; int main(void) { int t; cin >> t; while (t--) { int a, b; cin >> a >> b; int max_t = a > b ? a : b; int min_t = a < b ? a : b; if (min_t <= max_t / 2) cout << max_t % (max_t / 2 + 1) << endl; else cout << max_t % min_t << endl; } }
78	 #include <bits/stdc++.h> using namespace std; void solve() { long long a, b; cin >> a >> b; if (2 * a <= b) cout << (b - 1) / 2 << "\n"; else cout << (b - 1) << "\n"; } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); int t = 1; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long a, b; cin >> a >> b; if (2 * a <= b) cout << (b - 1) / 2 << "\n"; else cout << (b - a) << "\n"; } int main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); int t = 1; cin >> t; while (t--) { solve(); } }
78	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; if (l < r / 2) { cout << (r - 1) / 2 << endl; } else { cout << r % l << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int l, r; cin >> l >> r; if (l <= r / 2) { cout << (r - 1) / 2 << endl; } else { cout << r % l << endl; } } }
78	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; for (int i = 1; i <= T; i++) { int l, r, a, b; cin >> l >> r; a = r; if (l < (r / 2)) { b = ((r / 2) + 1); } else { b = l; } int largest = a % b; cout << largest << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; for (int i = 1; i <= T; i++) { int l, r, a, b; cin >> l >> r; a = r; if (l <= (r / 2)) { b = ((r / 2) + 1); } else { b = l; } int largest = a % b; cout << largest << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; const long long int maxn = 1e5 + 55; const long long int inf = 1e18; const long long int lg = 20; const long long int modn = 1e9 + 7; long long int T, len, num, sum, x, fir, sec; long long int all[maxn]; int main() { std::ios_base::sync_with_stdio(false); cin >> T; while (T--) { cin >> fir >> sec; if ((sec + 1) / 2 >= fir) cout << (sec - 1) / 2 << endl; else cout << fir % sec << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long int maxn = 1e5 + 55; const long long int inf = 1e18; const long long int lg = 20; const long long int modn = 1e9 + 7; long long int T, len, num, sum, x, fir, sec; long long int all[maxn]; int main() { std::ios_base::sync_with_stdio(false); cin >> T; while (T--) { cin >> fir >> sec; if ((sec + 1) / 2 >= fir) cout << (sec - 1) / 2 << endl; else cout << sec % fir << endl; } return 0; }
79	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC optimize("unroll-loops") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native") const double Pi = acos(-1); using namespace std; int debug = 01; void solve() { int n; string s; cin >> n >> s; int a = -1, b = -1, c = 0, d = 0, e = 0; for (auto x : s) { if (x == '1' || x == '4' || x == '6' || x == '8' || x == '9') { cout << "1\n" << x << "\n"; return; } if (x == '3') a = c, d++; if (x == '7') b = c, e++; c++; } for (int i = 1; i < n; i++) { if (s[i] == '2' || s[i] == '5') { cout << "2\n" << s[0] << s[i] << "\n"; return; } if ((s[0] == '2' || s[i] == '5') && (s[i] == '7')) { cout << "2\n" << s[0] << s[i] << "\n"; return; } } if (d > 1) cout << "2\n33\n"; else if (e > 1) cout << "2\n77\n"; else cout << n << "\n" << s << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tst = 1; cin >> tst; for (int T = 1; T <= tst; T++) { solve(); } }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC optimize("unroll-loops") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native") const double Pi = acos(-1); using namespace std; int debug = 01; void solve() { int n; string s; cin >> n >> s; int a = -1, b = -1, c = 0, d = 0, e = 0; for (auto x : s) { if (x == '1' || x == '4' || x == '6' || x == '8' || x == '9') { cout << "1\n" << x << "\n"; return; } if (x == '3') a = c, d++; if (x == '7') b = c, e++; c++; } for (int i = 1; i < n; i++) { if (s[i] == '2' || s[i] == '5') { cout << "2\n" << s[0] << s[i] << "\n"; return; } if ((s[0] == '2' || s[0] == '5') && (s[i] == '7')) { cout << "2\n" << s[0] << s[i] << "\n"; return; } } if (d > 1) cout << "2\n33\n"; else if (e > 1) cout << "2\n77\n"; else cout << n << "\n" << s << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tst = 1; cin >> tst; for (int T = 1; T <= tst; T++) { solve(); } }
79	 #include <bits/stdc++.h> using namespace std; const int N = 55; int n; char s[N]; inline bool isprime(int num) { if (num <= 1) return 0; for (int i = 1; i <= sqrt(num); i++) if (num % i == 0) return 0; return 1; } int main() { int T; scanf("%d", &T); while (T--) { scanf("%d", &n); scanf("%s", s + 1); bool succeed = 0; for (int i = 1; i <= n; i++) if (s[i] != '2' && s[i] != '3' && s[i] != '5' && s[i] != '7') { puts("1"); printf("%c\n", s[i]); succeed = 1; break; } if (succeed) continue; for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) { if (succeed) break; int num = (s[i] - '0') * 10 + (s[j] - '0'); if (!isprime(num)) { puts("2"); printf("%c%c\n", s[i], s[j]); succeed = 1; break; } } if (!succeed) assert(0); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 55; int n; char s[N]; inline bool isprime(int num) { if (num <= 1) return 0; for (int i = 2; i <= sqrt(num); i++) if (num % i == 0) return 0; return 1; } int main() { int T; scanf("%d", &T); while (T--) { scanf("%d", &n); scanf("%s", s + 1); bool succeed = 0; for (int i = 1; i <= n; i++) if (s[i] != '2' && s[i] != '3' && s[i] != '5' && s[i] != '7') { puts("1"); printf("%c\n", s[i]); succeed = 1; break; } if (succeed) continue; for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) { if (succeed) break; int num = (s[i] - '0') * 10 + (s[j] - '0'); if (!isprime(num)) { puts("2"); printf("%c%c\n", s[i], s[j]); succeed = 1; break; } } if (!succeed) assert(0); } return 0; }
79	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int _q; cin >> _q; string n2 = "2225273233355557727577"; int sizn2 = n2.size(); for (int _t = 0; _t < _q; _t++) { int k, ans = 0; cin >> k; cin.ignore(); string s; getline(cin, s); int a[10] = {}; for (int i = 0; i < k; i++) { a[s[i] - '0']++; } if (a[4] != 0) cout << 1 << '\n' << 4 << '\n'; else if (a[1] != 0) cout << 1 << '\n' << 1 << '\n'; else if (a[6] != 0) cout << 1 << '\n' << 6 << '\n'; else if (a[8] != 0) cout << 1 << '\n' << 8 << '\n'; else if (a[9] != 0) cout << 1 << '\n' << 9 << '\n'; else { int fl = 0; for (int i = 0; i < sizn2; i += 2) { int ind1 = s.find(n2[i]); if (!(ind1 != string::npos)) continue; int ind2 = s.find(n2[i + 1], ind1 + 1); if (ind2 != string::npos) { cout << 2 << '\n' << n2[i] << n2[i + 1] << '\n'; fl = 1; break; } } } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int _q; cin >> _q; string n2 = "222527323335525557727577"; int sizn2 = n2.size(); for (int _t = 0; _t < _q; _t++) { int k, ans = 0; cin >> k; cin.ignore(); string s; getline(cin, s); int a[10] = {}; for (int i = 0; i < k; i++) { a[s[i] - '0']++; } if (a[4] != 0) cout << 1 << '\n' << 4 << '\n'; else if (a[1] != 0) cout << 1 << '\n' << 1 << '\n'; else if (a[6] != 0) cout << 1 << '\n' << 6 << '\n'; else if (a[8] != 0) cout << 1 << '\n' << 8 << '\n'; else if (a[9] != 0) cout << 1 << '\n' << 9 << '\n'; else { int fl = 0; for (int i = 0; i < sizn2; i += 2) { int ind1 = s.find(n2[i]); if (!(ind1 != string::npos)) continue; int ind2 = s.find(n2[i + 1], ind1 + 1); if (ind2 != string::npos) { cout << 2 << '\n' << n2[i] << n2[i + 1] << '\n'; fl = 1; break; } } } } }
79	 #include <bits/stdc++.h> using namespace std; using namespace std; const int maxn = 1e5 + 10; int n, m, t; bool prime[maxn]; string s; void solve() { for (int i = 0; i < n; i++) { if ((s[i] == '1') || (s[i] == '4') || (s[i] == '6') || (s[i] == '8') || (s[i] == '9')) { cout << 1 << endl; cout << s[i] << endl; return; } } for (int i = 0; i < n; i++) { for (int j = i + 1; j < n; j++) { if (!prime[(s[i] - '0') * 10 + (s[j] - '0')]) { cout << 2 << endl; cout << s[i] << s[j] << endl; } } } } int main() { for (int i = 2; i <= 100; i++) { prime[i] = true; for (int j = 2; j * j <= i; j++) { if (i % j == 0) { prime[i] = false; } } } cin >> t; while (t--) { cin >> n; cin >> s; solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using namespace std; const int maxn = 1e5 + 10; int n, m, t; bool prime[maxn]; string s; void solve() { for (int i = 0; i < n; i++) { if ((s[i] == '1') || (s[i] == '4') || (s[i] == '6') || (s[i] == '8') || (s[i] == '9')) { cout << 1 << endl; cout << s[i] << endl; return; } } for (int i = 0; i < n; i++) { for (int j = i + 1; j < n; j++) { if (!prime[(s[i] - '0') * 10 + (s[j] - '0')]) { cout << 2 << endl; cout << s[i] << s[j] << endl; return; } } } } int main() { for (int i = 2; i <= 100; i++) { prime[i] = true; for (int j = 2; j * j <= i; j++) { if (i % j == 0) { prime[i] = false; } } } cin >> t; while (t--) { cin >> n; cin >> s; solve(); } return 0; }
80	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { long long pos = s.find('0', 0) + 1; if (pos == num) { long long ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { long long pos = s.find('0', 0) + 1; if (pos == num) { int ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }
80	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { int pos = s.find('0', 0) + 1; if (pos == num) { long long ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { int pos = s.find('0', 0) + 1; if (pos == num) { int ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }
80	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimize("unroll-loops") using namespace std; long long MOD = 998244353; void solve() { int n; string s; cin >> n; cin >> s; int z = 0, o = 0; for (auto x : s) x == '0' ? z++ : o++; if (z == 0 || o == 0) { cout << "1 " << n - 1 << " 2 " << n << endl; } int i = 0, j = (n / 2) - 1; for (; j < n - 1; i++, j++) { if (s[i] == '0') { cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << endl; return; } if (s[j + 1] == '0') { cout << 1 << ' ' << j + 2 << ' ' << 1 << ' ' << j + 1 << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimize("unroll-loops") using namespace std; long long MOD = 998244353; void solve() { int n; string s; cin >> n; cin >> s; int z = 0, o = 0; for (auto x : s) x == '0' ? z++ : o++; if (z == 0 || o == 0) { cout << "1 " << n - 1 << " 2 " << n << endl; return; } int i = 0, j = (n / 2) - 1; for (; j < n - 1; i++, j++) { if (s[i] == '0') { cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << endl; return; } if (s[j + 1] == '0') { cout << 1 << ' ' << j + 2 << ' ' << 1 << ' ' << j + 1 << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } return 0; }
80	 #include <bits/stdc++.h> using namespace std; void print(int a, int b, int c, int d) { a++; b++; c++; d++; cout << a << " " << b << " " << c << " " << d; cout << endl; } void solve() { string s; int n; cin >> n; cin >> s; int zero = -1; for (int i = 0; i < s.length(); i++) { if (s[i] == '0') { zero = i; } } if (zero == -1) { print(0, n - 2, 1, n - 1); } else if (zero > n / 2) { print(0, zero, 0, zero - 1); } else { print(zero, n - 1, zero + 1, n - 1); } } int main() { int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void print(int a, int b, int c, int d) { a++; b++; c++; d++; cout << a << " " << b << " " << c << " " << d; cout << endl; } void solve() { string s; int n; cin >> n; cin >> s; int zero = -1; for (int i = 0; i < s.length(); i++) { if (s[i] == '0') { zero = i; } } if (zero == -1) { print(0, n - 2, 1, n - 1); } else if (zero >= n / 2) { print(0, zero, 0, zero - 1); } else { print(zero, n - 1, zero + 1, n - 1); } } int main() { int t; cin >> t; while (t--) { solve(); } }
80	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { long long pos = s.find('0', 0) + 1; if (pos == num) { long long ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int inf = 0x3f3f3f3f; const long long INF = 0x3f3f3f3f3f3f3f3f; const double eps = 1e-8; const int maxn = 2e5 + 100; const int mod = 1e9 + 7; const int N = 1010; signed main() { ios::sync_with_stdio(0); cin.tie(0), cout.tie(0); int temp; cin >> temp; while (temp--) { int n; cin >> n; string s; cin >> s; int num = n / 2; if (s.find('0') == -1) { cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n'; } else { long long pos = s.find('0', 0) + 1; if (pos == num) { int ppp = s.find('0', pos); if (ppp == -1 and num != 1) cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n'; else if (ppp == -1 and num == 1) cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n'; else { ppp++; cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n'; } } else if (pos > num) { cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n'; } else if (pos < num) { cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n'; } } } return 0; }
80	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; char s[N]; int n; int main() { int T; cin >> T; while (T--) { scanf("%d", &n); scanf("%s", s + 1); int x = -1; for (int i = 1; i <= n; i++) { if (s[i] == '0') x = i; } if (x >= (n / 2) + 1) printf("1 %d 1 %d\n", x, x - 1); else if (x >= 1) printf("%d %d %d %d", x, n, x + 1, n); else printf("1 %d 2 %d\n", n - 1, n); } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; char s[N]; int n; int main() { int T; cin >> T; while (T--) { scanf("%d", &n); scanf("%s", s + 1); int x = -1; for (int i = 1; i <= n; i++) { if (s[i] == '0') x = i; } if (x >= (n / 2) + 1) printf("1 %d 1 %d\n", x, x - 1); else if (x >= 1) printf("%d %d %d %d\n", x, n, x + 1, n); else printf("1 %d 2 %d\n", n - 1, n); } }
80	 #include <bits/stdc++.h> using namespace std; template <class... Args> void debug(Args... args) { auto tmp = {(cout << args << ' ', 0)...}; cout << endl; } using ll = long long; const int N = 2e4 + 10; const int mod = 4933; const double eps = 1e-9; char a[N]; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T; cin >> T; while (T--) { int n; cin >> n; cin >> (a + 1); bool flg = true; for (int i = 1; i <= n; ++i) { if (a[i] == '0') { if (i - 1 > n - i + 1) { cout << 1 << ' ' << i << ' ' << 1 << ' ' << i - 1 << endl; } else { cout << i << ' ' << n << ' ' << i + 1 << ' ' << n << endl; } flg = false; break; } } if (flg) { cout << 1 << ' ' << n - 1 << ' ' << 2 << ' ' << n << endl; } } }	 #include <bits/stdc++.h> using namespace std; template <class... Args> void debug(Args... args) { auto tmp = {(cout << args << ' ', 0)...}; cout << endl; } using ll = long long; const int N = 2e4 + 10; const int mod = 4933; const double eps = 1e-9; char a[N]; int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T; cin >> T; while (T--) { int n; cin >> n; cin >> (a + 1); bool flg = true; for (int i = 1; i <= n; ++i) { if (a[i] == '0') { if (i - 1 > n - i - 1) { cout << 1 << ' ' << i << ' ' << 1 << ' ' << i - 1 << endl; } else { cout << i << ' ' << n << ' ' << i + 1 << ' ' << n << endl; } flg = false; break; } } if (flg) { cout << 1 << ' ' << n - 1 << ' ' << 2 << ' ' << n << endl; } } }
80	 #include <bits/stdc++.h> using namespace std; long long t = 1, n; string s; int main() { std::ios::sync_with_stdio(0); cin.tie(NULL); cin >> t; while (t--) { cin >> n >> s; long long l1, r1, l2, r2; l1 = r1 = l2 = r2 = -1; long long l = 0, r = 0; for (int i = n / 2; i < n; i++) { if (s[i] == '0') { l1 = 1; r1 = i + 1; l2 = 1; r2 = i; } } for (int i = n / 2 + 1; i >= 0; i--) { if (s[i] == '0') { l1 = i + 1; r1 = n; l2 = i + 2; r2 = n; } } while (l <= r && r < n) { if (s[r] == '0') { l = r + 1; r = l; } else { if ((r - l + 1) > (n / 2)) { l1 = l + 1; r1 = r; l2 = l + 2; r2 = r + 1; } r++; } } cout << l1 << ' ' << r1 << ' ' << l2 << ' ' << r2 << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long t = 1, n; string s; int main() { std::ios::sync_with_stdio(0); cin.tie(NULL); cin >> t; while (t--) { cin >> n >> s; long long l1, r1, l2, r2; l1 = r1 = l2 = r2 = -1; long long l = 0, r = 0; for (int i = n / 2; i < n; i++) { if (s[i] == '0') { l1 = 1; r1 = i + 1; l2 = 1; r2 = i; } } for (int i = n / 2 - 1; i >= 0; i--) { if (s[i] == '0') { l1 = i + 1; r1 = n; l2 = i + 2; r2 = n; } } while (l <= r && r < n) { if (s[r] == '0') { l = r + 1; r = l; } else { if ((r - l + 1) > (n / 2)) { l1 = l + 1; r1 = r; l2 = l + 2; r2 = r + 1; } r++; } } cout << l1 << ' ' << r1 << ' ' << l2 << ' ' << r2 << "\n"; } return 0; }
80	 #include <bits/stdc++.h> using namespace std; const int MAX = 2e4 + 50; int a[MAX], n; int main() { int T; scanf("%d", &T); while (T--) { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%1d", &a[i]); int l1 = -1, r1 = -1, l2 = -1, r2 = -1; for (int i = n / 2 + 1; i <= n; i++) { if (a[i] == 0) { l1 = l2 = 1; r1 = i; r2 = i - 1; break; } } if (l1 != -1) { printf("%d %d %d %d\n", l1, r1, l2, r2); continue; } for (int i = 1; i <= n / 2; i--) { if (a[i] == 0) { l1 = i; l2 = i + 1; r1 = r2 = n; break; } } if (l1 != -1) { printf("%d %d %d %d\n", l1, r1, l2, r2); continue; } printf("1 %d 1 %d\n", n -= (n & 1), n / 2); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAX = 2e4 + 50; int a[MAX], n; int main() { int T; scanf("%d", &T); while (T--) { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%1d", &a[i]); int l1 = -1, r1 = -1, l2 = -1, r2 = -1; for (int i = n / 2 + 1; i <= n; i++) { if (a[i] == 0) { l1 = l2 = 1; r1 = i; r2 = i - 1; break; } } if (l1 != -1) { printf("%d %d %d %d\n", l1, r1, l2, r2); continue; } for (int i = 1; i <= n / 2; i++) { if (a[i] == 0) { l1 = i; l2 = i + 1; r1 = r2 = n; break; } } if (l1 != -1) { printf("%d %d %d %d\n", l1, r1, l2, r2); continue; } printf("1 %d 1 %d\n", n -= (n & 1), n / 2); } return 0; }
80	 #include <bits/stdc++.h> using namespace std; int _read() { char ch = getchar(); while (ch != '0' && ch != '1') ch = getchar(); return ch - 48; } int T, n, a[20005], pd, w; void work() { scanf("%d", &n); pd = 0; for (int i = 1; i <= n; i++) { a[i] = _read(); if (a[i] == 0) w = i, pd = 1; } if (pd = 0) { printf("%d %d %d %d\n", 1, n - 1, 2, n); } else { if (w <= n / 2) printf("%d %d %d %d\n", w, n, w + 1, n); else printf("%d %d %d %d\n", 1, w, 1, w - 1); } } int main() { scanf("%d", &T); while (T--) work(); return 0; }	 #include <bits/stdc++.h> using namespace std; int _read() { char ch = getchar(); while (ch != '0' && ch != '1') ch = getchar(); return ch - 48; } int T, n, a[20005], pd, w; void work() { scanf("%d", &n); pd = 0; for (int i = 1; i <= n; i++) { a[i] = _read(); if (a[i] == 0) w = i, pd = 1; } if (pd == 0) { printf("%d %d %d %d\n", 1, n - 1, 2, n); } else { if (w <= n / 2) printf("%d %d %d %d\n", w, n, w + 1, n); else printf("%d %d %d %d\n", 1, w, 1, w - 1); } } int main() { scanf("%d", &T); while (T--) work(); return 0; }
80	 #include <bits/stdc++.h> using namespace std; long long a[1000005]; long long n; string s; void speed() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); } void sol() { long long flag = 0; for (long long i = 0; i < s.size(); i++) if (s[i] == '0') { if (i > n / 2) printf("1 %lld 1 %lld\n", i + 1, i); else if (n - i > n / 2) printf("%lld %lld %lld %lld\n", i + 1, n, i + 2, n); return; } printf("1 %lld 2 %lld\n", n - 1, n); return; } int main() { speed(); long long tt; cin >> tt; while (tt--) { cin >> n >> s; sol(); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long a[1000005]; long long n; string s; void speed() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); } void sol() { long long flag = 0; for (long long i = 0; i < s.size(); i++) if (s[i] == '0') { if (i >= n / 2) printf("1 %lld 1 %lld\n", i + 1, i); else if (n - i > n / 2) printf("%lld %lld %lld %lld\n", i + 1, n, i + 2, n); return; } printf("1 %lld 2 %lld\n", n - 1, n); return; } int main() { speed(); long long tt; cin >> tt; while (tt--) { cin >> n >> s; sol(); } return 0; }
80	 #include <bits/stdc++.h> using namespace std; const int MAXN = 4e4 + 6; int T; char str[MAXN]; int main() { scanf("%d", &T); while (T--) { int len; bool flag; flag = 0; scanf("%d", &len); scanf("%s", str); for (int i = 0; i < len; i++) { if ((!flag) && str[i] == '0') { if (len & 1) { if (i + 1 <= (len + 1) / 2) { printf("%d %d %d %d\n", i + 1, len, i + 2, len); flag = 1; } else { printf("%d %d %d %d\n", 1, i + 1, 1, i); flag = 1; } } else { if (i + 1 <= len / 2) { printf("%d %d %d %d\n", i + 1, len, i + 2, len); flag = 1; } else { printf("%d %d %d %d\n", 1, i + 1, 1, i); flag = 1; } } } } if (!flag) { printf("1 %d 1 %d\n", len, len - 1); } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 4e4 + 6; int T; char str[MAXN]; int main() { scanf("%d", &T); while (T--) { int len; bool flag; flag = 0; scanf("%d", &len); scanf("%s", str); for (int i = 0; i < len; i++) { if ((!flag) && str[i] == '0') { if (len & 1) { if (i + 1 <= (len + 1) / 2) { printf("%d %d %d %d\n", i + 1, len, i + 2, len); flag = 1; } else { printf("%d %d %d %d\n", 1, i + 1, 1, i); flag = 1; } } else { if (i + 1 <= len / 2) { printf("%d %d %d %d\n", i + 1, len, i + 2, len); flag = 1; } else { printf("%d %d %d %d\n", 1, i + 1, 1, i); flag = 1; } } } } if (!flag) { printf("2 %d 1 %d\n", len, len - 1); } } return 0; }
80	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; string s; cin >> s; if (s[n - 1] == '0') { cout << 1 << " " << n << " " << 1 << " " << n - 1 << '\n'; } else { long long idx = -1; for (long long i = 0; i < n; i++) { if (s[i] == '0') idx = i + 1; } if (idx == -1) { cout << 1 << " " << n - 1 << " " << 2 << " " << n << '\n'; return; } if (idx >= n / 2) { cout << 1 << " " << idx << " " << 1 << " " << idx - 1 << '\n'; } else { cout << idx << " " << n << " " << idx + 1 << " " << n << '\n'; } } } signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; string s; cin >> s; if (s[n - 1] == '0') { cout << 1 << " " << n << " " << 1 << " " << n - 1 << '\n'; } else { long long idx = -1; for (long long i = 0; i < n; i++) { if (s[i] == '0') idx = i + 1; } if (idx == -1) { cout << 1 << " " << n - 1 << " " << 2 << " " << n << '\n'; return; } if (idx > n / 2) { cout << 1 << " " << idx << " " << 1 << " " << idx - 1 << '\n'; } else { cout << idx << " " << n << " " << idx + 1 << " " << n << '\n'; } } } signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); return 0; }
80	 #include <bits/stdc++.h> using namespace std; int constexpr N = 2e5 + 5; int n, m; char s[20004]; void solve() { bool b = false; int ind; cin >> n; for (int i = 0; i < n; ++i) { cin >> s[i]; if (s[i] == '0') b = true, ind = i; } if (b) { if (ind + 1 <= n / 2) cout << ind + 1 << " " << n << " " << ind + 2 << " " << n << '\n'; else cout << 1 << " " << ind + 1 << " " << 1 << " " << ind << '\n'; } else { cout << 1 << " " << n / 2 << " " << (n + 1) / 2 << " " << n << '\n'; } return; } signed main() { ios::sync_with_stdio(0), cin.tie(0); int t = 1; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; int constexpr N = 2e5 + 5; int n, m; char s[20004]; void solve() { bool b = false; int ind; cin >> n; for (int i = 0; i < n; ++i) { cin >> s[i]; if (s[i] == '0') b = true, ind = i; } if (b) { if (ind + 1 <= n / 2) cout << ind + 1 << " " << n << " " << ind + 2 << " " << n << '\n'; else cout << 1 << " " << ind + 1 << " " << 1 << " " << ind << '\n'; } else { cout << 1 << " " << n / 2 << " " << (n + 3) / 2 << " " << n << '\n'; } return; } signed main() { ios::sync_with_stdio(0), cin.tie(0); int t = 1; cin >> t; while (t--) solve(); return 0; }
81	 #include <bits/stdc++.h> using namespace std; const long long M = 998244353; void solve() { int n, q; string s; cin >> n >> q >> s; vector<int> sum(n + 1, 0), a(n + 1); for (int i = 1; i <= n; ++i) { sum[i] = sum[i - 1]; if (s[i - 1] == '+') a[i] = 1; else a[i] = -1; if (i % 2) sum[i] += a[i]; else sum[i] -= a[i]; } while (q--) { int l, r; cin >> l >> r; if (sum[r] - sum[l - 1] == 0) cout << 0; else if (r - l + 1 % 2) cout << 1; else cout << 2; cout << '\n'; } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; const long long M = 998244353; void solve() { int n, q; string s; cin >> n >> q >> s; vector<int> sum(n + 1, 0), a(n + 1); for (int i = 1; i <= n; ++i) { sum[i] = sum[i - 1]; if (s[i - 1] == '+') a[i] = 1; else a[i] = -1; if (i % 2) sum[i] += a[i]; else sum[i] -= a[i]; } while (q--) { int l, r; cin >> l >> r; if (sum[r] - sum[l - 1] == 0) cout << 0; else if ((r - l + 1) % 2) cout << 1; else cout << 2; cout << '\n'; } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) solve(); }
81	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, q; cin >> n >> q; string s; cin >> s; vector<long long> plus, minus; plus.push_back(0); minus.push_back(0); for (long long i = 0; i < n; i++) { if (i % 2) { if (s[i] == '+') { s[i] = '-'; } else { s[i] = '+'; } } } long long pluscount = 0, minuscount = 0; for (long long i = 0; i < n; i++) { if (s[i] == '+') { pluscount++; } else { minuscount++; } plus.push_back(pluscount); minus.push_back(minuscount); } while (q--) { long long l, r; cin >> l >> r; long long p = plus[r] - plus[l - 1]; long long m = minus[r] - minus[l - 1]; if (p == m) { cout << 0 << endl; } else if (p + m % 2 == 0) { cout << 2 << endl; } else { cout << 1 << endl; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, q; cin >> n >> q; string s; cin >> s; vector<long long> plus, minus; plus.push_back(0); minus.push_back(0); for (long long i = 0; i < n; i++) { if (i % 2) { if (s[i] == '+') { s[i] = '-'; } else { s[i] = '+'; } } } long long pluscount = 0, minuscount = 0; for (long long i = 0; i < n; i++) { if (s[i] == '+') { pluscount++; } else { minuscount++; } plus.push_back(pluscount); minus.push_back(minuscount); } while (q--) { long long l, r; cin >> l >> r; long long p = plus[r] - plus[l - 1]; long long m = minus[r] - minus[l - 1]; if (p == m) { cout << 0 << endl; } else if ((p + m) % 2 == 0) { cout << 2 << endl; } else { cout << 1 << endl; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } }
81	 #include <bits/stdc++.h> using namespace std; int di[] = {0, -1, 0, 1, -1, 1, -1, 1}; int dj[] = {-1, 0, 1, 0, 1, -1, -1, 1}; int mod = 1e9 + 7; int INF = 1E9; long long INFF = 1E18; int const N = 3e5 + 5; int a[N]; int n; int go(int i, bool first, int second) { if (i == n) return (!second ? 0 : 1e9); long long x = a[i]; if ((i % 2 && !first) || ((i % 2 == 0 && first))) x *= -1; return min(go(i + 1, first, second + x), go(i + 1, !first, second) + 1); } int pre[N]; int main() { ios_base::sync_with_stdio(0), cin.tie(0); int q; cin >> q; while (q--) { int k; cin >> n >> k; long long ss = 0; for (int i = 0; i < n; ++i) { char x; cin >> x; if (x == '-') a[i] = -1; else a[i] = 1; if ((a[i] == 1 && i % 2 == 0) || (i % 2 && a[i] == -1)) ss++; else ss--; pre[i + 1] = ss; } while (k--) { int l, r; cin >> l >> r; long long sum = (pre[r] - pre[l - 1]); int xx = !sum ? 0 : (sum + 1) % 2 + 1; cout << xx << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; int di[] = {0, -1, 0, 1, -1, 1, -1, 1}; int dj[] = {-1, 0, 1, 0, 1, -1, -1, 1}; int mod = 1e9 + 7; int INF = 1E9; long long INFF = 1E18; int const N = 3e5 + 5; int a[N]; int n; int go(int i, bool first, int second) { if (i == n) return (!second ? 0 : 1e9); long long x = a[i]; if ((i % 2 && !first) || ((i % 2 == 0 && first))) x *= -1; return min(go(i + 1, first, second + x), go(i + 1, !first, second) + 1); } int pre[N]; int main() { ios_base::sync_with_stdio(0), cin.tie(0); int q; cin >> q; while (q--) { int k; cin >> n >> k; long long ss = 0; for (int i = 0; i < n; ++i) { char x; cin >> x; if (x == '-') a[i] = -1; else a[i] = 1; if ((a[i] == 1 && i % 2 == 0) || (i % 2 && a[i] == -1)) ss++; else ss--; pre[i + 1] = ss; } while (k--) { int l, r; cin >> l >> r; long long sum = (pre[r] - pre[l - 1]); int xx = !sum ? 0 : abs(sum + 1) % 2 + 1; cout << xx << "\n"; } } }
81	 #include <bits/stdc++.h> using namespace std; namespace io { inline long long read() { register char c = getchar(); register long long x = 0, f = 1; while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = (x << 3) + (x << 1) + c - '0'; c = getchar(); } return x * f; } } // namespace io using namespace io; int t; int n, q, l, r; int sum[300005]; int main() { t = read(); while (t--) { n = read(); q = read(); char c; for (int i = 1; i <= n; i++) { c = getchar(); if (c == '+') sum[i] = sum[i - 1] + (i & 1 ? 1 : -1); else sum[i] = sum[i - 1] - (i & 1 ? 1 : -1); } for (int i = 0; i < q; i++) { l = read(); r = read(); if (sum[r] == sum[l - 1]) printf("0\n"); if ((r - l) & 1) printf("2\n"); else printf("1\n"); } } return 0; }	 #include <bits/stdc++.h> using namespace std; namespace io { inline long long read() { register char c = getchar(); register long long x = 0, f = 1; while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = (x << 3) + (x << 1) + c - '0'; c = getchar(); } return x * f; } } // namespace io using namespace io; int t; int n, q, l, r; int sum[300005]; int main() { t = read(); while (t--) { n = read(); q = read(); char c; for (int i = 1; i <= n; i++) { c = getchar(); if (c == '+') sum[i] = sum[i - 1] + (i & 1 ? 1 : -1); else sum[i] = sum[i - 1] - (i & 1 ? 1 : -1); } for (int i = 0; i < q; i++) { l = read(); r = read(); if (sum[r] == sum[l - 1]) printf("0\n"); else if ((r - l) & 1) printf("2\n"); else printf("1\n"); } } return 0; }
81	 #include <bits/stdc++.h> #pragma GCC optimize(1) #pragma GCC optimize(2) #pragma GCC optimize(3, "Ofast", "inline") using namespace std; char ss[300005]; int a[300005], sum[300005]; int main() { int t; scanf("%d", &t); while (t--) { int n, q; scanf("%d %d", &n, &q); scanf(" %s", ss); for (int i = 0; i < n; i++) { if (ss[i] == '+') a[i] = 1; else a[i] = -1; } for (int i = 1; i <= n; i++) { if (i % 2 == 0) sum[i] = sum[i - 1] - a[i - 1]; else sum[i] = sum[i - 1] + a[i - 1]; } while (q--) { int l, r; scanf("%d %d", &l, &r); if (sum[r] - sum[l - 1] == 0) printf("0\n"); else if ((sum[r] - sum[l - 1]) % 2 == 1) printf("1\n"); else printf("2\n"); } } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize(1) #pragma GCC optimize(2) #pragma GCC optimize(3, "Ofast", "inline") using namespace std; char ss[300005]; int a[300005], sum[300005]; int main() { int t; scanf("%d", &t); while (t--) { int n, q; scanf("%d %d", &n, &q); scanf(" %s", ss); for (int i = 0; i < n; i++) { if (ss[i] == '+') a[i] = 1; else a[i] = -1; } for (int i = 1; i <= n; i++) { if (i % 2 == 0) sum[i] = sum[i - 1] - a[i - 1]; else sum[i] = sum[i - 1] + a[i - 1]; } while (q--) { int l, r; scanf("%d %d", &l, &r); if (sum[r] - sum[l - 1] == 0) printf("0\n"); else if (abs(sum[r] - sum[l - 1]) % 2 == 1) printf("1\n"); else printf("2\n"); } } return 0; }
81	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; long long dp[N]; void solve() { int n, q; cin >> n >> q; for (int i = 1; i <= n; i++) { char c; cin >> c; int val = 1; if (c == '-') val *= -1; if (i % 2 == 0) val *= -1; dp[i] = dp[i - 1] + val; } while (q--) { int l, r; cin >> l >> r; long long temp = dp[r] - dp[l - 1]; if (temp == 0) cout << "0\n"; else if (temp % 2 == 1) cout << "1\n"; else cout << "2\n"; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; long long dp[N]; void solve() { int n, q; cin >> n >> q; for (int i = 1; i <= n; i++) { char c; cin >> c; int val = 1; if (c == '-') val *= -1; if (i % 2 == 0) val *= -1; dp[i] = dp[i - 1] + val; } while (q--) { int l, r; cin >> l >> r; long long temp = dp[r] - dp[l - 1]; if (temp == 0) cout << "0\n"; else if (temp % 2 != 0) cout << "1\n"; else cout << "2\n"; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); }
81	 #include <bits/stdc++.h> using namespace std; map<char, int> mp; void solve() { int n, q; cin >> n >> q; string s; cin >> s; vector<int> sum(n + 1, 0); for (int i = 1; i <= n; i++) { if (i % 2 == 1) { sum[i] = sum[i - 1] + mp[s[i - 1]]; } else { sum[i] = sum[i - 1] - mp[s[i - 1]]; } } for (int i = 0; i < q; i++) { int l, r; cin >> l >> r; if (sum[r] - sum[l - 1] == 0) cout << 0 << "\n"; else if ((sum[r] - sum[l - 1]) % 2 == 1) cout << 1 << "\n"; else cout << 2 << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); mp['+'] = 1; mp['-'] = -1; int tc; cin >> tc; while (tc-- > 0) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; map<char, int> mp; void solve() { int n, q; cin >> n >> q; string s; cin >> s; vector<int> sum(n + 1, 0); for (int i = 1; i <= n; i++) { if (i % 2 == 1) { sum[i] = sum[i - 1] + mp[s[i - 1]]; } else { sum[i] = sum[i - 1] - mp[s[i - 1]]; } } for (int i = 0; i < q; i++) { int l, r; cin >> l >> r; if (sum[r] - sum[l - 1] == 0) cout << 0 << "\n"; else if (abs(sum[r] - sum[l - 1]) % 2 == 1) cout << 1 << "\n"; else cout << 2 << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); mp['+'] = 1; mp['-'] = -1; int tc; cin >> tc; while (tc-- > 0) solve(); return 0; }
81	 #include <bits/stdc++.h> using namespace std; int pre1[300010], pre2[300010]; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t, n, q, a, b, pre; string st; cin >> t; while (t--) { cin >> n >> q >> st; pre1[0] = pre2[0] = 0; for (int i = 0; i < n; i++) pre1[i + 1] = pre1[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? 1 : -1); for (int i = 0; i < n; i++) pre2[i + 1] = pre2[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? -1 : 1); while (q--) { cin >> a >> b; a--; b--; pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre1[a]); if (pre == 0) cout << "0\n"; else { if ((b - a + 1) % 2) cout << "1\n"; else cout << "2\n"; } } } }	 #include <bits/stdc++.h> using namespace std; int pre1[300010], pre2[300010]; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t, n, q, a, b, pre; string st; cin >> t; while (t--) { cin >> n >> q >> st; pre1[0] = pre2[0] = 0; for (int i = 0; i < n; i++) pre1[i + 1] = pre1[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? 1 : -1); for (int i = 0; i < n; i++) pre2[i + 1] = pre2[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? -1 : 1); while (q--) { cin >> a >> b; a--; b--; pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre2[a]); if (pre == 0) cout << "0\n"; else { if ((b - a + 1) % 2) cout << "1\n"; else cout << "2\n"; } } } }
84	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 1; i <= t; i++) { int n, s; cin >> n >> s; if (n == 1) cout << n << endl; else if (n == 2) cout << s / 2 << endl; else if (n > 2) { if (n % 2 == 0) { n = n - (n - 1) / 2; cout << s / n << endl; } else { n = (n + 1) / 2; cout << s / n << endl; } } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 1; i <= t; i++) { int n, s; cin >> n >> s; if (n == 1) cout << s << endl; else if (n == 2) cout << s / 2 << endl; else if (n > 2) { if (n % 2 == 0) { n = n - (n - 1) / 2; cout << s / n << endl; } else { n = (n + 1) / 2; cout << s / n << endl; } } } }
86	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimize("unroll-loops") using namespace std; void fastio() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } const int mod = 1000000007; const double PI = 3.141592653589793238; const long long int INF = 1e18; const long long int p = 998244353; int main() { long long int t = 1; cin >> t; for (int test = 0; test < t; test++) { long long int n; cin >> n; string s1, s2; cin >> s1; cin >> s2; long long int ans = 0; for (int i = 0; i < n; i++) { if ((s1[i] == '1' && s2[i] == '0') || (s1[i] == '0' && s2[i] == '1')) { ans += 2; } else if (s1[i] == '1' && s2[i] == '1') { if (i < n - 1) { if (s1[i + 1] == '0' || s2[i + 1] == '0') { ans += 2; i++; } } } else if (s1[i] == '0' && s2[i] == '0') { if (s1[i + 1] == '1' || s2[i + 1] == '1') { ans += 2; i++; } else { ans += 1; } } } cout << ans << "\n"; } }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma") #pragma GCC optimize("unroll-loops") using namespace std; void fastio() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } const int mod = 1000000007; const double PI = 3.141592653589793238; const long long int INF = 1e18; const long long int p = 998244353; int main() { long long int t = 1; cin >> t; for (int test = 0; test < t; test++) { long long int n; cin >> n; string s1, s2; cin >> s1; cin >> s2; long long int ans = 0; for (int i = 0; i < n; i++) { if ((s1[i] == '1' && s2[i] == '0') || (s1[i] == '0' && s2[i] == '1')) { ans += 2; } else if (s1[i] == '1' && s2[i] == '1') { if (i < n - 1) { if (s1[i + 1] == '0' || s2[i + 1] == '0') { ans += 2; i++; } } } else if (s1[i] == '0' && s2[i] == '0') { if (s1[i + 1] == '1' && s2[i + 1] == '1') { ans += 2; i++; } else { ans += 1; } } } cout << ans << "\n"; } }
86	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; string f, s; cin >> f >> s; int one = 0, zero = 0, st = 0, ans = 0; for (int i = 0; i < n; ++i) { if (f[i] == '1') ++one; else ++zero; if (s[i] == '1') ++one; else ++zero; ++st; if (zero > 0) { if (zero > 1 && st > 1 && one > 0) { ans += 1; zero -= 2; } if (one > 0) { ans += 2, st = 0, one = 0, zero = 0; } else if (st > 1) { st = 1, ans += 1, zero -= 2; } } } if (zero > 0) { if (one > 0) { ans += 2, st = 0, one = 0, zero = 0; } else { ans += 1; } } cout << ans << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; string f, s; cin >> f >> s; int one = 0, zero = 0, st = 0, ans = 0; for (int i = 0; i < n; ++i) { if (f[i] == '1') ++one; else ++zero; if (s[i] == '1') ++one; else ++zero; ++st; if (zero > 0) { if (zero > 1 && st > 1 && one == 1) { ans += 1; zero -= 2; } if (one > 0) { ans += 2, st = 0, one = 0, zero = 0; } else if (st > 1) { st = 1, ans += 1, zero -= 2; } } } if (zero > 0) { if (one > 0) { ans += 2, st = 0, one = 0, zero = 0; } else { ans += 1; } } cout << ans << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }
86	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { int n; cin >> n; string s1, s2; cin >> s1 >> s2; int ans = 0; for (int i = 0; i < s1.size(); i++) { if (s1[i] + s2[i] == '0' + '1') { ans += 2; } else if (s1[i] == '1') { if (i != s1.size() - 1 && s1[i + 1] == '0' && s2[i + 1] == '0') { ans += 2; i++; } } else if (s1[i] == '0') { if (i != s1.size() - 1 && s1[i + 1] == '1' && s1[i + 1] == '1') { ans += 2; i++; } else { ans++; } } } cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { int n; cin >> n; string s1, s2; cin >> s1 >> s2; int ans = 0; for (int i = 0; i < s1.size(); i++) { if (s1[i] + s2[i] == '0' + '1') { ans += 2; } else if (s1[i] == '1') { if (i != s1.size() - 1 && s1[i + 1] == '0' && s2[i + 1] == '0') { ans += 2; i++; } } else if (s1[i] == '0') { if (i != s1.size() - 1 && s1[i + 1] == '1' && s2[i + 1] == '1') { ans += 2; i++; } else { ans++; } } } cout << ans << "\n"; } }
86	 #include <bits/stdc++.h> using namespace std; bool isPrime(long long n) { if (n <= 1) return false; if (n <= 3) return true; if (n % 2 == 0 || n % 3 == 0) return false; for (long long i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0) return false; return true; } long long fac[1000000]; void solve(long long testcase) { long long n; cin >> n; string s, t; cin >> s >> t; long long ans = 0; long long i = 0; while (i < n) { string sor = "", tor = ""; sor += s[i]; tor += t[i]; long long x = stoi(sor), y = stoi(tor); if (x ^ y) { ans += 2; i++; } else { if (s[i] == '1') { if (i == n - 1) { i++; continue; } else { if (s[i + 1] == '0' || t[i + 1] == '0') { ans += 2; i += 2; } else { i++; continue; } } } else { if (i == n - 1) { ans += 1; i++; continue; } else { if (s[i + 1] == '1' || t[i + 1] == '1') { ans += 2; i += 2; } else { ans += 1; i++; continue; } } } } } cout << ans << '\n'; return; } signed main() { long long test = 1; cin >> test; for (long long init = 1; init <= test; init++) { solve(init); } return 0; }	 #include <bits/stdc++.h> using namespace std; bool isPrime(long long n) { if (n <= 1) return false; if (n <= 3) return true; if (n % 2 == 0 || n % 3 == 0) return false; for (long long i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0) return false; return true; } long long fac[1000000]; void solve(long long testcase) { long long n; cin >> n; string s, t; cin >> s >> t; long long ans = 0; long long i = 0; while (i < n) { string sor = "", tor = ""; sor += s[i]; tor += t[i]; long long x = stoi(sor), y = stoi(tor); if (x ^ y) { ans += 2; i++; } else { if (s[i] == '1') { if (i == n - 1) { i++; continue; } else { if (s[i + 1] == '0' || t[i + 1] == '0') { ans += 2; i += 2; } else { i++; continue; } } } else { if (i == n - 1) { ans += 1; i++; continue; } else { if (s[i + 1] == '1' && t[i + 1] == '1') { ans += 2; i += 2; } else { ans += 1; i++; continue; } } } } } cout << ans << '\n'; return; } signed main() { long long test = 1; cin >> test; for (long long init = 1; init <= test; init++) { solve(init); } return 0; }
87	 #include <bits/stdc++.h> #pragma GCC optimize("O3") using namespace std; template <class TH> void _dbg(const char *sdbg, TH h) { cerr << sdbg << '=' << h << endl; } template <class TH, class... TA> void _dbg(const char *sdbg, TH h, TA... a) { while (*sdbg != ',') cerr << *sdbg++; cerr << '=' << h << ','; _dbg(sdbg + 1, a...); } int n, m; int a[1010], flag[1010]; int main() { int t; cin >> t; while (t--) { cin >> n >> m; memset(flag, 0, sizeof(flag)); for (int i = 0; i < m; ++i) cin >> a[i]; int tot = 0, ans = 0; while (tot < m) { int maxx = m + 1, pos = 0; for (int i = m - 1; i >= 0; --i) if (flag[i] == 0 && a[i] < maxx) { maxx = a[i]; pos = i; } for (int j = 0; j < pos; ++j) if (flag[j] == 1) ans++; flag[pos] = 1; tot++; } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("O3") using namespace std; template <class TH> void _dbg(const char *sdbg, TH h) { cerr << sdbg << '=' << h << endl; } template <class TH, class... TA> void _dbg(const char *sdbg, TH h, TA... a) { while (*sdbg != ',') cerr << *sdbg++; cerr << '=' << h << ','; _dbg(sdbg + 1, a...); } int n, m; int a[1010], flag[1010]; int main() { int t; cin >> t; while (t--) { cin >> n >> m; memset(flag, 0, sizeof(flag)); for (int i = 0; i < m; ++i) cin >> a[i]; int tot = 0, ans = 0; while (tot < m) { int maxx = 1e9 + 100, pos = 0; for (int i = m - 1; i >= 0; --i) if (flag[i] == 0 && a[i] < maxx) { maxx = a[i]; pos = i; } for (int j = 0; j < pos; ++j) if (flag[j] == 1) ans++; flag[pos] = 1; tot++; } cout << ans << endl; } return 0; }
89	 #include <bits/stdc++.h> using namespace std; int n, m; vector<int> adj[200001]; int cp, lv; bool dfs(int x, int p) { int count = (int)adj[x].size() - (x != p); for (auto to : adj[x]) if (to != p) { if (dfs(to, x)) count--; } if (count) { if (x != 1) cp++; lv += count; } return count > 0; } int solve() { cp = 0, lv = 0; int v = dfs(1, 1); if (v) return lv - cp; return lv - cp + 1; } int main() { int tc; scanf("%d", &tc); while (tc--) { scanf("%d", &n); for (int i = 1; i <= n; ++i) adj[i].clear(); for (int i = 0; i < n - 1; ++i) { int u, v; scanf("%d%d", &u, &v); adj[u].emplace_back(v); adj[v].emplace_back(u); } printf("(%d)\n", solve()); } }	 #include <bits/stdc++.h> using namespace std; int n, m; vector<int> adj[200001]; int cp, lv; bool dfs(int x, int p) { int count = (int)adj[x].size() - (x != p); for (auto to : adj[x]) if (to != p) { if (dfs(to, x)) count--; } if (count) { if (x != 1) cp++; lv += count; } return count > 0; } int solve() { cp = 0, lv = 0; int v = dfs(1, 1); if (v) return lv - cp; return lv - cp + 1; } int main() { int tc; scanf("%d", &tc); while (tc--) { scanf("%d", &n); for (int i = 1; i <= n; ++i) adj[i].clear(); for (int i = 0; i < n - 1; ++i) { int u, v; scanf("%d%d", &u, &v); adj[u].emplace_back(v); adj[v].emplace_back(u); } printf("%d\n", solve()); } }
93	 #include <bits/stdc++.h> using namespace std; void solve() { int a, b; cin >> a >> b; int x; if (a % 4 == 1) x = a - 1; else if (a % 4 == 2) x = 1; else if (a % 4 == 3) x = a; else x = b; if (x == b) cout << a << "\n"; else if ((x ^ b) != a) cout << a + 1 << "\n"; else cout << a + 2 << "\n"; return; } signed main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int a, b; cin >> a >> b; int x; if (a % 4 == 1) x = a - 1; else if (a % 4 == 2) x = 1; else if (a % 4 == 3) x = a; else x = 0; if (x == b) cout << a << "\n"; else if ((x ^ b) != a) cout << a + 1 << "\n"; else cout << a + 2 << "\n"; return; } signed main() { int t; cin >> t; while (t--) solve(); return 0; }
98	 #include <bits/stdc++.h> using namespace std; const long long int mod = 1e9 + 7, N = 1e6 + 10; int main() { long long int time; cin >> time; while (time--) { long long int l = -1, r = -1, n; cin >> n; string s; cin >> s; for (long long int i = 1; i < s.size(); i++) { if (s[i - 1] = 'a' and s[i] == 'b') { l = i, r = i + 1; break; } if (s[i - 1] == 'b' and s[i] == 'a') { l = i; r = i + 1; break; } } cout << l << " " << r << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long int mod = 1e9 + 7, N = 1e6 + 10; int main() { long long int time; cin >> time; while (time--) { long long int l = -1, r = -1, n; cin >> n; string s; cin >> s; for (long long int i = 1; i < s.size(); i++) { if (s[i - 1] == 'a' and s[i] == 'b') { l = i, r = i + 1; break; } if (s[i - 1] == 'b' and s[i] == 'a') { l = i; r = i + 1; break; } } cout << l << " " << r << endl; } }
98	 #include <bits/stdc++.h> using namespace std; void solve(); int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; int t; cin >> t; while (t--) { solve(); } return 0; } void solve() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; int n; cin >> n; string s; cin >> s; int a = 0, b = 0; int l = -1, r = -1; for (int i = 0; i < n; i++) { a = 0; b = 0; for (int j = i; j < n; j++) { if (s[j] == 'a') a++; else if (s[j] == 'b') b++; if (a == b) { l = i; r = j; break; } } } cout << l + 1 << " " << r + 1 << "\n"; }	 #include <bits/stdc++.h> using namespace std; void solve(); int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; int t; cin >> t; while (t--) { solve(); } return 0; } void solve() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; int n; cin >> n; string s; cin >> s; int a = 0, b = 0; int l = -2, r = -2; for (int i = 0; i < n; i++) { a = 0; b = 0; for (int j = i; j < n; j++) { if (s[j] == 'a') a++; else if (s[j] == 'b') b++; if (a == b) { l = i; r = j; break; } } } cout << l + 1 << " " << r + 1 << "\n"; }
98	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; string s; cin >> s; long long int a = 0, b = 0; for (long long int i = 0; i < n; i++) { a = 0, b = 0; for (long long int j = 0; j < n; j++) { if (s[j] == 'a') a++; else b++; if (a == b) { cout << i + 1 << " " << j + 1 << "\n"; return; } } } cout << -1 << " " << -1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); ; ; long long int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; string s; cin >> s; long long int a = 0, b = 0; for (long long int i = 0; i < n; i++) { a = 0, b = 0; for (long long int j = i; j < n; j++) { if (s[j] == 'a') a++; else b++; if (a == b) { cout << i + 1 << " " << j + 1 << "\n"; return; } } } cout << -1 << " " << -1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); ; ; long long int t; cin >> t; while (t--) { solve(); } return 0; }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); char s[n + 1]; scanf("%s", s + 1); int a[100] = {0}, b[100] = {0}; int aa = 0, bb = 0; for (int i = 1; i <= n; i++) { if (s[i] == 'a') { aa++; b[i] = b[i - 1]; a[i] = a[i - 1] + 1; } else { bb++; a[i] = a[i - 1]; b[i] = b[i - 1] + 1; } } int flag = 1; if (aa == 0 || bb == 0) { printf("-1 -1\n"); continue; } else { for (int i = 1; i <= n; i++) { if (flag == 1) for (int j = n; j >= 1; j--) { if (a[j] - a[i - 1] == b[j] - b[i - 1]) { printf("%d %d\n", i, j); flag = 0; break; } } else break; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); char s[n + 1]; scanf("%s", s + 1); int a[100] = {0}, b[100] = {0}; int aa = 0, bb = 0; for (int i = 1; i <= n; i++) { if (s[i] == 'a') { aa++; b[i] = b[i - 1]; a[i] = a[i - 1] + 1; } else { bb++; a[i] = a[i - 1]; b[i] = b[i - 1] + 1; } } int flag = 1; if (aa == 0 || bb == 0) { printf("-1 -1\n"); continue; } else { for (int i = 1; i <= n; i++) { if (flag == 1) for (int j = n; j >= i; j--) { if (a[j] - a[i - 1] == b[j] - b[i - 1]) { printf("%d %d\n", i, j); flag = 0; break; } } else break; } } } return 0; }
98	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 10; int power(int a, int b) { int res = 1; while (b > 0) { if (b % 2) { res = 1LL * res * a % mod; } a = 1LL * a * a % mod; b /= 2; } return res; } int main() { int test = 1, n; char s[100]; scanf("%d", &test); while (test--) { int l = -1, r = -1; scanf("%d", &n); scanf("%s", s + 1); for (int i = 1; i <= n; i++) { int cnt = 0; for (int j = 1; j <= n; j++) { cnt += (s[j] == 'a'); cnt -= (s[j] == 'b'); if (cnt == 0) { l = i, r = j; break; } } if (l != -1) { break; } } printf("%d %d\n", l, r); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 10; int power(int a, int b) { int res = 1; while (b > 0) { if (b % 2) { res = 1LL * res * a % mod; } a = 1LL * a * a % mod; b /= 2; } return res; } int main() { int test = 1, n; char s[100]; scanf("%d", &test); while (test--) { int l = -1, r = -1; scanf("%d", &n); scanf("%s", s + 1); for (int i = 1; i <= n; i++) { int cnt = 0; for (int j = i; j <= n; j++) { cnt += (s[j] == 'a'); cnt -= (s[j] == 'b'); if (cnt == 0) { l = i, r = j; break; } } if (l != -1) { break; } } printf("%d %d\n", l, r); } return 0; }
99	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int ii = 0; ii < t; ii++) { int n; cin >> n; bool A[52]; char Aa[52][52]; for (int i = 0; i < n; i++) { char t; cin >> t; if (t == '1') A[i] = 0; else A[i] = 1; } int k = 0; int t = -1; for (int i = n - 1; i >= 0; i--) { if (A[i] == 0) { k++; } else { t = i; } } if (n - k > 1 || n - k == 0) cout << "YES" << endl; else { cout << "NO" << endl; continue; } for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { Aa[i][j] = '='; } } for (int i = 0; i < n; i++) Aa[i][i] = 'X'; int c1 = t; if (n - k > 1) { for (int i = t + 1; i < n; i++) { if (A[i] == 1) { Aa[c1][i] = '+'; Aa[i][c1] = '-'; c1 = i; } } Aa[c1][t] = '+'; Aa[t][c1] = '-'; } for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { cout << Aa[i][j]; } cout << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int ii = 0; ii < t; ii++) { int n; cin >> n; bool A[52]; char Aa[52][52]; for (int i = 0; i < n; i++) { char t; cin >> t; if (t == '1') A[i] = 0; else A[i] = 1; } int k = 0; int t = -1; for (int i = n - 1; i >= 0; i--) { if (A[i] == 0) { k++; } else { t = i; } } if (n - k > 2 || n - k == 0) cout << "YES" << endl; else { cout << "NO" << endl; continue; } for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { Aa[i][j] = '='; } } for (int i = 0; i < n; i++) Aa[i][i] = 'X'; int c1 = t; if (n - k > 2) { for (int i = t + 1; i < n; i++) { if (A[i] == 1) { Aa[c1][i] = '+'; Aa[i][c1] = '-'; c1 = i; } } Aa[c1][t] = '+'; Aa[t][c1] = '-'; } for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { cout << Aa[i][j]; } cout << endl; } } return 0; }
101	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 100; const int mod = 1e9 + 7; const int inf = 1e6; int T; int n, m, k; int x[maxn], y[maxn]; int cntx[maxn], cnty[maxn]; map<pair<int, int>, int> prex, prey; int main() { std::ios::sync_with_stdio(false); cin >> T; while (T--) { prex.clear(); prey.clear(); memset(cntx, 0, sizeof(cntx)); memset(cnty, 0, sizeof(cnty)); int ans = 0; cin >> n >> m >> k; for (int i = 1; i <= n; i++) cin >> x[i]; for (int i = 1; i <= m; i++) cin >> y[i]; x[n + 1] = y[m + 1] = inf; while (k--) { int u, v; cin >> u >> v; int ex = lower_bound(x + 1, x + 1 + n + 1, u) - x; int ey = lower_bound(y + 1, y + 1 + m + 1, v) - y; if (u == x[ex]) { if (v == y[ey]) continue; ans += cnty[ey]++ - prex[{ex, ey}]++; } else ans += cntx[ex]++ - prey[{ex, ey}]++; } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 100; const int mod = 1e9 + 7; const int inf = 1e6; int T; int n, m, k; int x[maxn], y[maxn]; int cntx[maxn], cnty[maxn]; map<pair<int, int>, int> prex, prey; int main() { std::ios::sync_with_stdio(false); cin >> T; while (T--) { prex.clear(); prey.clear(); memset(cntx, 0, sizeof(cntx)); memset(cnty, 0, sizeof(cnty)); long long ans = 0; cin >> n >> m >> k; for (int i = 1; i <= n; i++) cin >> x[i]; for (int i = 1; i <= m; i++) cin >> y[i]; x[n + 1] = y[m + 1] = inf; while (k--) { int u, v; cin >> u >> v; int ex = lower_bound(x + 1, x + 1 + n + 1, u) - x; int ey = lower_bound(y + 1, y + 1 + m + 1, v) - y; if (u == x[ex]) { if (v == y[ey]) continue; ans += cnty[ey]++ - prex[{ex, ey}]++; } else ans += cntx[ex]++ - prey[{ex, ey}]++; } cout << ans << endl; } return 0; }
101	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 5; int n, m, k; int a[maxn], b[maxn], suma[maxn], sumb[maxn]; unordered_map<int, int> mpa[maxn], mpb[maxn]; inline int read() { int x = 0; char c = getchar(); while (!isdigit(c)) c = getchar(); while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar(); return x; } inline void init() { for (int i = 1; i <= n; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); } int main() { int T = read(); while (T--) { long long ans = 0; n = read(), m = read(), k = read(); init(); for (int i = 1; i <= n; i++) a[i] = read(); for (int i = 1; i <= m; i++) b[i] = read(); for (int i = 1; i <= k; i++) { int x = read(), y = read(); int px = lower_bound(a + 1, a + 1 + n, x) - a; int py = lower_bound(b + 1, b + 1 + m, y) - b; if (a[px] != x) ans += suma[px]++ - mpa[px][py]++; if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++; } printf("%lld\n", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 5; int n, m, k; int a[maxn], b[maxn], suma[maxn], sumb[maxn]; unordered_map<int, int> mpa[maxn], mpb[maxn]; inline int read() { int x = 0; char c = getchar(); while (!isdigit(c)) c = getchar(); while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar(); return x; } inline void init() { for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear(); for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); } int main() { int T = read(); while (T--) { long long ans = 0; n = read(), m = read(), k = read(); init(); for (int i = 1; i <= n; i++) a[i] = read(); for (int i = 1; i <= m; i++) b[i] = read(); for (int i = 1; i <= k; i++) { int x = read(), y = read(); int px = lower_bound(a + 1, a + 1 + n, x) - a; int py = lower_bound(b + 1, b + 1 + m, y) - b; if (a[px] != x) ans += suma[px]++ - mpa[px][py]++; if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++; } printf("%lld\n", ans); } return 0; }
101	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 10; int n, m, k; int a[maxn], b[maxn], suma[maxn], sumb[maxn]; unordered_map<int, int> mpa[maxn], mpb[maxn]; inline int read() { int x = 0; char c = getchar(); while (!isdigit(c)) c = getchar(); while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar(); return x; } inline void init() { for (int i = 1; i <= n; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); } int main() { int T = read(); while (T--) { long long ans = 0; n = read(), m = read(), k = read(); init(); for (int i = 1; i <= n; i++) a[i] = read(); for (int i = 1; i <= m; i++) b[i] = read(); for (int i = 1; i <= k; i++) { int x = read(), y = read(); int px = lower_bound(a + 1, a + 1 + n, x) - a; int py = lower_bound(b + 1, b + 1 + m, y) - b; if (a[px] != x) ans += suma[px]++ - mpa[px][py]++; if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++; } printf("%lld\n", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 5; int n, m, k; int a[maxn], b[maxn], suma[maxn], sumb[maxn]; unordered_map<int, int> mpa[maxn], mpb[maxn]; inline int read() { int x = 0; char c = getchar(); while (!isdigit(c)) c = getchar(); while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar(); return x; } inline void init() { for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear(); for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear(); } int main() { int T = read(); while (T--) { long long ans = 0; n = read(), m = read(), k = read(); init(); for (int i = 1; i <= n; i++) a[i] = read(); for (int i = 1; i <= m; i++) b[i] = read(); for (int i = 1; i <= k; i++) { int x = read(), y = read(); int px = lower_bound(a + 1, a + 1 + n, x) - a; int py = lower_bound(b + 1, b + 1 + m, y) - b; if (a[px] != x) ans += suma[px]++ - mpa[px][py]++; if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++; } printf("%lld\n", ans); } return 0; }
101	 #include <bits/stdc++.h> using namespace std; const long long N = 1e6 + 9; const long long inf = 0x3f3f3f3f; vector<int> x, y; map<int, int> ma[N], mb[N], cntx, cnty; void solve() { int n, m, k; cin >> n >> m >> k; for (int i = 1; i <= n; i++) { int xx; cin >> xx; x.push_back(xx); } for (int i = 1; i <= m; i++) { int yy; cin >> yy; y.push_back(yy); } int ans = 0; for (int i = 1; i <= k; i++) { int xx, yy; cin >> xx >> yy; int pos1 = lower_bound(x.begin(), x.end(), xx) - x.begin(); int pos2 = lower_bound(y.begin(), y.end(), yy) - y.begin(); if (x[pos1] == xx && y[pos2] == yy) continue; if (x[pos1] == xx) { pos2--; ans += ++cnty[pos2] - ++ma[pos1][pos2]; } else { pos1--; ans += ++cntx[pos1] - ++mb[pos2][pos1]; } } for (int i = 0; i <= max(n, m) + 1; i++) { ma[i].clear(); mb[i].clear(); } cntx.clear(); cnty.clear(); x.clear(); y.clear(); cout << ans << endl; } signed main() { long long t = 1; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long N = 1e6 + 9; const long long inf = 0x3f3f3f3f; vector<int> x, y; map<int, int> ma[N], mb[N], cntx, cnty; void solve() { int n, m, k; cin >> n >> m >> k; for (int i = 1; i <= n; i++) { int xx; cin >> xx; x.push_back(xx); } for (int i = 1; i <= m; i++) { int yy; cin >> yy; y.push_back(yy); } long long ans = 0; for (int i = 1; i <= k; i++) { int xx, yy; cin >> xx >> yy; int pos1 = lower_bound(x.begin(), x.end(), xx) - x.begin(); int pos2 = lower_bound(y.begin(), y.end(), yy) - y.begin(); if (x[pos1] == xx && y[pos2] == yy) continue; if (x[pos1] == xx) { pos2--; ans += ++cnty[pos2] - ++ma[pos1][pos2]; } else { pos1--; ans += ++cntx[pos1] - ++mb[pos2][pos1]; } } for (int i = 0; i <= max(n, m) + 1; i++) { ma[i].clear(); mb[i].clear(); } cntx.clear(); cnty.clear(); x.clear(); y.clear(); cout << ans << endl; } signed main() { long long t = 1; cin >> t; while (t--) { solve(); } }
109	 #include <bits/stdc++.h> using namespace std; int main() { int t = 0; int n = 0; cin >> t; string s = ""; int sum1 = 0; int number_of_non_zeros = 0; for (int i = 0; i < t; i++) { cin >> n; cin >> s; sum1 = 0; number_of_non_zeros = 0; for (int j = 0; j < s.size(); j++) { if (s[j] != '0') { int e = s[j] - '0'; number_of_non_zeros++; sum1 += e; } } if (s[s.size() - 1] != 0) { number_of_non_zeros--; } cout << (sum1 + number_of_non_zeros) << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t = 0; int n = 0; cin >> t; string s = ""; int sum1 = 0; int number_of_non_zeros = 0; for (int i = 0; i < t; i++) { cin >> n; cin >> s; sum1 = 0; number_of_non_zeros = 0; for (int j = 0; j < s.size(); j++) { if (s[j] != '0') { int e = s[j] - '0'; number_of_non_zeros++; sum1 += e; } } if (s[s.size() - 1] != '0') { number_of_non_zeros--; } cout << (sum1 + number_of_non_zeros) << endl; } }
109	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; while (n--) { int x; cin >> x; getchar(); string s; cin >> s; long long ans = 0; for (int i = 0; i < n; i++) { int y; y = s[i] - '0'; if (i == (n - 1)) { ans = ans + y; } else { if (y != 0) ans = ans + y + 1; } } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; while (n--) { int x; cin >> x; getchar(); string s; cin >> s; long long ans = 0; for (int i = 0; i < x; i++) { int y; y = s[i] - '0'; if (i == (x - 1)) { ans = ans + y; } else { if (y != 0) ans = ans + y + 1; } } cout << ans << endl; } }
111	 #include <bits/stdc++.h> using namespace std; void printsinglepairs(int numofpairs) { for (int i = 0; i < numofpairs; i++) { cout << "()"; } } int main() { int n, j, k, t; cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) { if (i == 1) { printsinglepairs(i); cout << endl; } else { for (k = 1; k <= i; k++) { cout << "("; } for (k = 1; k <= i; k++) { cout << ")"; } printsinglepairs(n - i); cout << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; void printsinglepairs(int numofpairs) { for (int i = 0; i < numofpairs; i++) { cout << "()"; } } int main() { int n, j, k, t; cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) { if (i == 1) { printsinglepairs(n); cout << endl; } else { for (k = 1; k <= i; k++) { cout << "("; } for (k = 1; k <= i; k++) { cout << ")"; } printsinglepairs(n - i); cout << endl; } } } return 0; }
111	 #include <bits/stdc++.h> using namespace std; template <typename T> T powe(T a, T b) { if (b == 0) return 1; T x = powe(a, b / 2) % 1000000007; x = (x * x) % 1000000007; if (b & 1) x = (x * (a % 1000000007)) % 1000000007; return x; } void fun(long long int n) { for (long long int i = 0; i < n; i++) { cout << "("; } for (long long int i = 0; i < n; i++) { cout << ")"; } } void solve() { long long int n; cin >> n; for (long long int i = 0; i <= n; i++) { fun(i); fun(n - i); cout << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> T powe(T a, T b) { if (b == 0) return 1; T x = powe(a, b / 2) % 1000000007; x = (x * x) % 1000000007; if (b & 1) x = (x * (a % 1000000007)) % 1000000007; return x; } void fun(long long int n) { for (long long int i = 0; i < n; i++) { cout << "("; } for (long long int i = 0; i < n; i++) { cout << ")"; } } void solve() { long long int n; cin >> n; for (long long int i = 1; i <= n; i++) { fun(i); fun(n - i); cout << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { solve(); } return 0; }
111	 #include <bits/stdc++.h> #pragma GCC optimize("unroll-loops") #pragma GCC optimize 03 using namespace std; int n1, m1, q, r; int ans = 0; int gcd(int a, int b) { if (a > b) swap(a, b); return (a == 0) ? b : gcd(b % a, a); } int lcm(int a, int b) { return (a * b) / gcd(a, b); } signed main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(2 * n); for (int i = 0; i < 2 * n; ++i) { if (i < n) a[i] = 1; else a[i] = 0; } vector<int> b = a; for (int i = 0; i < n; ++i) { for (int j = 0; j < 2 * n; ++j) { if (b[j] == 1) cout << "("; else cout << ")"; } cout << "\n"; b = a; swap(a[i + 1], a[2 * n - i - 2]); } } }	 #include <bits/stdc++.h> #pragma GCC optimize("unroll-loops") #pragma GCC optimize 03 using namespace std; int n1, m1, q, r; int ans = 0; int gcd(int a, int b) { if (a > b) swap(a, b); return (a == 0) ? b : gcd(b % a, a); } int lcm(int a, int b) { return (a * b) / gcd(a, b); } signed main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(2 * n); for (int i = 0; i < 2 * n; ++i) { if (i < n) a[i] = 1; else a[i] = 0; } vector<int> b = a; for (int i = 0; i < n; ++i) { for (int j = 0; j < 2 * n; ++j) { if (b[j] == 1) cout << "("; else cout << ")"; } cout << "\n"; b = a; swap(b[i + 1], b[2 * n - i - 2]); } } }
111	 #include <bits/stdc++.h> using namespace std; int main() { int t, n; cin >> t; int x, sum2 = 0; char s1 = '(', s2 = ')'; string temp; for (int i = 0; i < t; i++) { cin >> n; string sum[2 * n]; if (n > 1) { for (int j = 0; j < n; j++) { for (int i = 0; i < n; i++) { sum[i] = s1; } for (int i = n; i < 2 * n; i++) { sum[i] = s2; } } do { for (int i = 0; i < 2 * n; i++) { cout << sum[i]; } sum2 += 1; for (int i = n - 1; i >= 0; i--) { for (int j = n; j < 2 * n; j++) { temp = sum[i]; sum[i] = sum[j]; sum[j] = temp; break; } } cout << endl; } while (sum2 < n); } sum2 = 0; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, n; cin >> t; int x, sum2 = 0; char s1 = '(', s2 = ')'; string temp; for (int i = 0; i < t; i++) { cin >> n; string sum[2 * n]; if (n >= 1) { for (int j = 0; j < n; j++) { for (int i = 0; i < n; i++) { sum[i] = s1; } for (int i = n; i < 2 * n; i++) { sum[i] = s2; } } do { for (int i = 0; i < 2 * n; i++) { cout << sum[i]; } sum2 += 1; for (int i = n - 1; i >= 0; i--) { for (int j = n; j < 2 * n; j++) { temp = sum[i]; sum[i] = sum[j]; sum[j] = temp; break; } } cout << endl; } while (sum2 < n); } sum2 = 0; } return 0; }
111	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 4; void generateParenthesis(int n, int open, int close, string s, vector<string> &ans) { if (open == n && close == n) { ans.push_back(s); return; } if (ans.size() == n) { return; } if (open < n) { generateParenthesis(n, open + 1, close, s + "{", ans); } if (close < open) { generateParenthesis(n, open, close + 1, s + "}", ans); } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { int n; cin >> n; vector<string> ans; generateParenthesis(n, 0, 0, "", ans); for (int i = 0; i < n; i++) { cout << ans[i] << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 4; void generateParenthesis(int n, int open, int close, string s, vector<string> &ans) { if (open == n && close == n) { ans.push_back(s); return; } if (ans.size() == n) { return; } if (open < n) { generateParenthesis(n, open + 1, close, s + "(", ans); } if (close < open) { generateParenthesis(n, open, close + 1, s + ")", ans); } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { int n; cin >> n; vector<string> ans; generateParenthesis(n, 0, 0, "", ans); for (int i = 0; i < n; i++) { cout << ans[i] << endl; } } return 0; }
111	 #include <bits/stdc++.h> using namespace std; void pB(int a) { for (int i = a; i > 0; i--) { cout << "(" << ")"; } } void pBOC(int x, int y) { for (int i = 0; i < x; i++) { cout << "("; } pB(y - x); for (int i = 0; i < x; i++) { cout << ")"; } } int main() { int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 0; i <= n; i++) { pBOC(i, n); cout << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; void pB(int a) { for (int i = a; i > 0; i--) { cout << "(" << ")"; } } void pBOC(int x, int y) { for (int i = 0; i < x; i++) { cout << "("; } pB(y - x); for (int i = 0; i < x; i++) { cout << ")"; } } int main() { int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 0; i < n; i++) { pBOC(i, n); cout << "\n"; } } return 0; }
111	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; int main() { int t; cin >> t; while (t--) { int n; cin >> n; if (n == 1) { cout << "()" << endl; } else if (n == 2) { cout << "()" << endl; cout << "(())" << endl; } else { for (int i = 1; i <= n; i++) { int k = 2 * n; for (int j = 0; j < i; j++) { cout << "("; } for (int j = 0; j < i; j++) { cout << ")"; } k = k - (2 * i); for (int j = 0; j < k / 2; j++) { cout << "()"; } cout << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; int main() { int t; cin >> t; while (t--) { int n; cin >> n; if (n == 1) { cout << "()" << endl; } else if (n == 2) { cout << "()()" << endl; cout << "(())" << endl; } else { for (int i = 1; i <= n; i++) { int k = 2 * n; for (int j = 0; j < i; j++) { cout << "("; } for (int j = 0; j < i; j++) { cout << ")"; } k = k - (2 * i); for (int j = 0; j < k / 2; j++) { cout << "()"; } cout << endl; } } } return 0; }
111	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int tt; cin >> tt; for (int i = 1; i <= tt + 1; i++) { for (int j = 0; j < i; j++) { cout << '('; } for (int j = 0; j < i; j++) { cout << ')'; } for (int j = 0; j < tt - i; j++) { cout << "()"; } cout << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { int tt; cin >> tt; for (int i = 1; i < tt + 1; i++) { for (int j = 0; j < i; j++) { cout << '('; } for (int j = 0; j < i; j++) { cout << ')'; } for (int j = 0; j < tt - i; j++) { cout << "()"; } cout << endl; } } }
112	 #include <bits/stdc++.h> using namespace std; int main(int argc, char const *argv[]) { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long a[3], m; cin >> a[0] >> a[1] >> a[2] >> m; long long mx = a[0] + a[1] + a[2] - 3; sort(a, a + 3); long long mn = 0; if (a[0] + a[1] + 1 < a[2]) mn = a[2] - a[0] - a[1] - 1; if (m > mx || mx < mn) cout << "NO\n"; else cout << "YES\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main(int argc, char const *argv[]) { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long a[3], m; cin >> a[0] >> a[1] >> a[2] >> m; long long mx = a[0] + a[1] + a[2] - 3; sort(a, a + 3); long long mn = 0; if (a[0] + a[1] + 1 < a[2]) mn = a[2] - a[0] - a[1] - 1; if (m > mx || m < mn) cout << "NO\n"; else cout << "YES\n"; } return 0; }
112	 #include <bits/stdc++.h> using namespace std; void solve() { long long a, b, c, m; cin >> a >> b >> c >> m; if (m > a + b + c - 3) { cout << "NO" << endl; return; } vector<long long> v; v.push_back(a); v.push_back(b); v.push_back(c); sort(v.begin(), v.end()); if (m - 1 >= v[2]) { cout << "YES" << endl; return; } v[2] = v[2] - m + 1; if (v[2] > (v[0] + v[1] + v[2]) / 2) { cout << "NO" << endl; return; } cout << "YES" << endl; } int main() { ios::sync_with_stdio(0); cin.tie(0); long long t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long a, b, c, m; cin >> a >> b >> c >> m; if (m > a + b + c - 3) { cout << "NO" << endl; return; } vector<long long> v; v.push_back(a); v.push_back(b); v.push_back(c); sort(v.begin(), v.end()); if (m + 1 >= v[2]) { cout << "YES" << endl; return; } v[2] = v[2] - m - 1; if (v[2] > (v[0] + v[1] + v[2]) / 2) { cout << "NO" << endl; return; } cout << "YES" << endl; } int main() { ios::sync_with_stdio(0); cin.tie(0); long long t; cin >> t; while (t--) { solve(); } }
112	 #include <bits/stdc++.h> using namespace std; void solve() { long long x[3], m; for (long long i = 0; i < 3; i++) cin >> x[i]; cin >> m; sort(x, x + 3); long long maxm = x[0] + x[1] + x[2] - 3; long long minm = max((long long)0, x[2] - x[1] - x[0] - 2); if (m <= maxm && m >= minm) { cout << "YES\n"; } else { cout << "NO\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long x[3], m; for (long long i = 0; i < 3; i++) cin >> x[i]; cin >> m; sort(x, x + 3); long long maxm = x[0] + x[1] + x[2] - 3; long long minm = max((long long)0, x[2] - x[1] - x[0] - 1); if (m <= maxm && m >= minm) { cout << "YES\n"; } else { cout << "NO\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } }
112	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int a[3], m; scanf("%d%d%d%d", &a[0], &a[1], &a[2], &m); sort(a, a + 2); if (m >= max(0, a[2] - 1 - a[0] - a[1]) && m <= max(a[0] - 1, 0) + max(a[1] - 1, 0) + max(a[2] - 1, 0)) puts("YES"); else puts("NO"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int a[3], m; scanf("%d%d%d%d", &a[0], &a[1], &a[2], &m); sort(a, a + 3); if (m >= max(0, a[2] - 1 - a[0] - a[1]) && m <= max(a[0] - 1, 0) + max(a[1] - 1, 0) + max(a[2] - 1, 0)) puts("YES"); else puts("NO"); } return 0; }
112	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int m; int arr[5]; cin >> arr[1] >> arr[2] >> arr[3] >> m; sort(arr + 1, arr + 3 + 1); if ((arr[3] - arr[2] - arr[1] + 1) > m) cout << "NO" << endl; else if ((arr[3] + arr[2] + arr[1] - 3) < m) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int m; int arr[5]; cin >> arr[1] >> arr[2] >> arr[3] >> m; sort(arr + 1, arr + 3 + 1); if ((arr[3] - arr[2] - arr[1] - 1) > m) cout << "NO" << endl; else if ((arr[3] + arr[2] + arr[1] - 3) < m) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }
112	 #include <bits/stdc++.h> using namespace std; void solve() { int a[3], m; cin >> a[0] >> a[1] >> a[2] >> m; sort(a, a + 3); int minsum = 0, maxsum = 0; maxsum = a[0] + a[1] + a[2] - 3; minsum = a[0] - a[1] - a[2] - 1; if (m >= minsum && m <= maxsum) cout << "Yes" << endl; else cout << "No" << endl; } int main() { ios::sync_with_stdio(0), cin.tie(0); int t = 0; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int a[3], m; cin >> a[0] >> a[1] >> a[2] >> m; sort(a, a + 3); int minsum = 0, maxsum = 0; maxsum = a[0] + a[1] + a[2] - 3; minsum = a[2] - a[1] - a[0] - 1; if (m >= minsum && m <= maxsum) cout << "Yes" << endl; else cout << "No" << endl; } int main() { ios::sync_with_stdio(0), cin.tie(0); int t = 0; cin >> t; while (t--) { solve(); } return 0; }
113	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; long long a[N]; int main() { long long T, n, sum = 0, x, y, p; cin >> n; for (int i = 0; i < n; i++) { scanf("%lld", &a[i]); sum += a[i]; } cin >> T; sort(a, a + n); while (T--) { scanf("%lld%lld", &x, &y); long long p; p = lower_bound(a, a + n, x) - a; if (p == n) { printf("%lld\n", max((long long)0, x - a[n - 1]) + max((long long)0, y - sum + a[n - 1])); } else if (p == 0) { printf("%lld\n", max((long long)0, x - a[0]) + max((long long)0, y - sum + a[0])); } else { printf("%lld\n", min(min((long long)0, x - a[p]) + max((long long)0, y - sum + a[p]), max((long long)0, x - a[p - 1]) + max((long long)0, y - sum + a[p - 1]))); } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; long long a[N]; int main() { long long T, n, sum = 0, x, y, p; cin >> n; for (int i = 0; i < n; i++) { scanf("%lld", &a[i]); sum += a[i]; } cin >> T; sort(a, a + n); while (T--) { scanf("%lld%lld", &x, &y); long long p; p = lower_bound(a, a + n, x) - a; if (p == n) { printf("%lld\n", max((long long)0, x - a[n - 1]) + max((long long)0, y - sum + a[n - 1])); } else if (p == 0) { printf("%lld\n", max((long long)0, x - a[0]) + max((long long)0, y - sum + a[0])); } else { printf("%lld\n", min(max((long long)0, x - a[p]) + max((long long)0, y - sum + a[p]), max((long long)0, x - a[p - 1]) + max((long long)0, y - sum + a[p - 1]))); } } return 0; }
113	 #include <bits/stdc++.h> int main() { std::ios::sync_with_stdio(false); std::cin.tie(0); int32_t n; std::cin >> n; int64_t* arr = new int64_t[n]; for (int32_t i = 0; i < n; i++) std::cin >> arr[i]; std::sort(arr, arr + n); int64_t sum = 0; for (int32_t i = 0; i < n; i++) sum += arr[i]; int32_t m; std::cin >> m; for (int32_t i = 0; i < m; i++) { int32_t x, y; std::cin >> x >> y; int64_t answer = INT64_MAX; int32_t attacks = std::lower_bound(arr, arr + n, x) - arr; if (attacks < n) answer = std::min(answer, std::max((int64_t)0, y - (sum - arr[attacks]))); attacks--; if (attacks >= 0) answer = std::min(answer, x - arr[attacks] + std::max((int64_t)0, y - (sum - arr[attacks]))); std::cout << answer << "\n"; } return 0; }	 #include <bits/stdc++.h> int main() { std::ios::sync_with_stdio(false); std::cin.tie(0); int32_t n; std::cin >> n; int64_t* arr = new int64_t[n]; for (int32_t i = 0; i < n; i++) std::cin >> arr[i]; std::sort(arr, arr + n); int64_t sum = 0; for (int32_t i = 0; i < n; i++) sum += arr[i]; int32_t m; std::cin >> m; for (int32_t i = 0; i < m; i++) { int64_t x, y; std::cin >> x >> y; int64_t answer = INT64_MAX; int32_t attacks = std::lower_bound(arr, arr + n, x) - arr; if (attacks < n) answer = std::min(answer, std::max((int64_t)0, y - (sum - arr[attacks]))); attacks--; if (attacks >= 0) answer = std::min(answer, x - arr[attacks] + std::max((int64_t)0, y - (sum - arr[attacks]))); std::cout << answer << "\n"; } return 0; }
113	 #include <bits/stdc++.h> long long a[200001], sum = 0; int n, m; int main() { scanf("%lld", &n); for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); sum += a[i]; } std::sort(a + 1, a + n + 1); scanf("%lld", &m); for (int i = 1; i <= m; i++) { long long u, v; scanf("%lld%lld", &u, &v); int l = 1, r = n + 1, pos = n + 1; while (l < r) { int mid = l + r >> 1; if (a[mid] >= u) { r = mid; pos = std::min(pos, mid); } else { l = mid + 1; } } long long ans = 0; if (pos != n + 1) { if (sum - a[pos] >= v) ans = 0; else ans = v - (sum - a[pos]); if (pos > 1) { if (sum - a[pos - 1] >= v) ans = std::min(ans, u - a[pos - 1]); else ans = std::min(ans, u - a[pos - 1] + v - (sum - a[pos - 1])); } } else { pos = n; ans = u - a[pos]; if (v > sum - a[pos]) ans += v - (sum - a[pos]); } std::cout << ans << std::endl; } return 0; }	 #include <bits/stdc++.h> long long a[200001], sum = 0; int n, m; int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); sum += a[i]; } std::sort(a + 1, a + n + 1); scanf("%d", &m); for (int i = 1; i <= m; i++) { long long u, v; scanf("%lld%lld", &u, &v); int l = 1, r = n + 1, pos = n + 1; while (l < r) { int mid = l + r >> 1; if (a[mid] >= u) { r = mid; pos = std::min(pos, mid); } else { l = mid + 1; } } long long ans = 0; if (pos != n + 1) { if (sum - a[pos] >= v) ans = 0; else ans = v - (sum - a[pos]); if (pos > 1) { if (sum - a[pos - 1] >= v) ans = std::min(ans, u - a[pos - 1]); else ans = std::min(ans, u - a[pos - 1] + v - (sum - a[pos - 1])); } } else { pos = n; ans = u - a[pos]; if (v > sum - a[pos]) ans += v - (sum - a[pos]); } std::cout << ans << std::endl; } return 0; }
