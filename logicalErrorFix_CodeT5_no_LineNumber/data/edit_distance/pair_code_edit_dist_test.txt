PID	IID	Correct_code	Incorrect_code	Statement
0	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int N = 1e5 + 5;||| 5 int main() {||| 6 cin.tie(nullptr)->sync_with_stdio(false);||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<string> in(n);||| 10 for (auto& x : in) cin >> x;||| 11 vector<int> order(n);||| 12 iota(begin(order), end(order), 0);||| 13 sort(begin(order), end(order), [&](int i, int j) {||| 14 for (int k = 0; k < m; k++) {||| 15 if (in[i][k] != in[j][k]) {||| 16 if (k % 2 == 0) {||| 17 return in[i][k] < in[j][k];||| 18 } else {||| 19 return in[i][k] > in[j][k];||| 20 }||| 21 }||| 22 }||| 23 return false;||| 24 });||| 25 for (int i : order) cout << i + 1 << ""\n"";||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int N = 1e5 + 5;||| 5 int main() {||| 6 cin.tie(nullptr)->sync_with_stdio(false);||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<string> in(n);||| 10 for (auto& x : in) cin >> x;||| 11 vector<int> order(n);||| 12 iota(begin(order), end(order), 0);||| 13 sort(begin(order), end(order), [&](int i, int j) {||| 14 for (int k = 0; k < m; k++) {||| 15 if (in[i][k] != in[i][j]) {||| 16 if (k % 2 == 0) {||| 17 return in[i][k] < in[j][k];||| 18 } else {||| 19 return in[i][k] > in[j][k];||| 20 }||| 21 }||| 22 }||| 23 return false;||| 24 });||| 25 for (int i : order) cout << i + 1 << ""\n"";||| 26 }||| "	15 if (in[i][k] != in[j][k]) {
0	102	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 3;||| 4 const int md = 1e9 + 7;||| 5 const int inf = 1e9 + 3;||| 6 int n, m;||| 7 string a[N];||| 8 int b[N];||| 9 bool cmp(int x, int y) {||| 10 for (int i = 0; i < m; ++i) {||| 11 if (a[x][i] != a[y][i]) {||| 12 if (i & 1) {||| 13 return a[x][i] > a[y][i];||| 14 } else {||| 15 return a[x][i] < a[y][i];||| 16 }||| 17 }||| 18 }||| 19 return false;||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 cin >> n >> m;||| 26 for (int i = 1; i <= n; ++i) cin >> a[i], b[i] = i;||| 27 sort(b + 1, b + n + 1, cmp);||| 28 for (int i = 1; i <= n; ++i) cout << b[i] << ' ';||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 3;||| 4 const int md = 1e9 + 7;||| 5 const int inf = 1e9 + 3;||| 6 int n, m;||| 7 string a[N];||| 8 int b[N];||| 9 bool cmp(int x, int y) {||| 10 for (int i = 0; i < m; ++i) {||| 11 if (a[x][i] != a[y][i]) {||| 12 if (i & 1) {||| 13 return a[x][i] > a[i][i];||| 14 } else {||| 15 return a[x][i] < a[y][i];||| 16 }||| 17 }||| 18 }||| 19 return false;||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 cin >> n >> m;||| 26 for (int i = 1; i <= n; ++i) cin >> a[i], b[i] = i;||| 27 sort(b + 1, b + n + 1, cmp);||| 28 for (int i = 1; i <= n; ++i) cout << b[i] << ' ';||| 29 }||| 	13 return a[x][i] > a[y][i];
0	14	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, m;||| 4 pair<string, int> p[1000001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 for (int i = 1; i <= n; i++) {||| 8 string s;||| 9 cin >> s;||| 10 for (int j = 1; j < m; j += 2) s[j] = 155 - s[j];||| 11 p[i] = {s, i};||| 12 }||| 13 sort(p + 1, p + n + 1);||| 14 for (int i = 1; i <= n; i++) cout << p[i].second << ' ';||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, m;||| 4 pair<string, int> p[1000001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 for (int i = 1; i <= n; i++) {||| 8 string s;||| 9 cin >> s;||| 10 for (int j = 1; j < m; j += 2) s[j] = 155 - s[j];||| 11 p[i] = {s, i};||| 12 }||| 13 sort(p + 1, p + n + 1);||| 14 for (int i = 0; i <= n; i++) cout << p[i].second << ' ';||| 15 }||| 	14 for (int i = 1; i <= n; i++) cout << p[i].second << ' ';
0	65	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, m;||| 4 pair<string, int> p[1000001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 for (int i = 1; i <= n; i++) {||| 8 string s;||| 9 cin >> s;||| 10 for (int j = 1; j < m; j += 2) s[j] = 155 - s[j];||| 11 p[i] = {s, i};||| 12 }||| 13 sort(p + 1, p + n + 1);||| 14 for (int i = 1; i <= n; i++) cout << p[i].second << ' ';||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, m;||| 4 pair<string, int> p[1000001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 for (int i = 1; i <= n; i++) {||| 8 string s;||| 9 cin >> s;||| 10 for (int j = 1; j < m; j += 2) s[j] = 155 - s[j];||| 11 p[i] = {s, i};||| 12 }||| 13 sort(p + 1, p + n + 1);||| 14 for (int i = 1; i < n; i++) cout << p[i].second << ' ';||| 15 }||| 	14 for (int i = 1; i <= n; i++) cout << p[i].second << ' ';
1	65	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double pi = acos(-1);||| 4 struct P {||| 5 double x, y;||| 6 P operator+(const P b) const { return P{x + b.x, y + b.y}; }||| 7 P operator-(const P b) const { return P{x - b.x, y - b.y}; }||| 8 P operator*(const double b) const { return P{x * b, y * b}; }||| 9 P operator/(const double b) const { return P{x / b, y / b}; }||| 10 P unit() const { return *this / abs(); }||| 11 double abs() const { return hypot(x, y); }||| 12 P spin() { return P{-y, x}; }||| 13 double angle() const { return atan2(y, x); }||| 14 };||| 15 int main() {||| 16 ios_base::sync_with_stdio(0);||| 17 cin.tie(0);||| 18 int n, k;||| 19 cin >> n >> k;||| 20 vector<P> ps(n);||| 21 vector<double> d(n);||| 22 for (int i = 0; i < n; ++i) {||| 23 cin >> ps[i].x >> ps[i].y;||| 24 d[i] = ps[i].abs();||| 25 }||| 26 auto covers = [&](double r) -> int {||| 27 static vector<pair<double, int>> evs;||| 28 evs.clear();||| 29 auto add_seg = [&](double l, double r) {||| 30 evs.emplace_back(l, 1);||| 31 evs.emplace_back(r, -1);||| 32 };||| 33 for (int i = 0; i < n; ++i) {||| 34 if (d[i] >= r - 1e-9) continue;||| 35 if (d[i] < 1e-9) {||| 36 evs.emplace_back(-1000, 1);||| 37 continue;||| 38 }||| 39 P le = ps[i].spin().unit();||| 40 P ri = ps[i].spin().spin().spin().unit();||| 41 double extend = sqrt(r * r - d[i] * d[i]);||| 42 le = ps[i] + le * extend;||| 43 ri = ps[i] + ri * extend;||| 44 double omn = ri.angle();||| 45 double omx = le.angle();||| 46 if (omn > omx) {||| 47 add_seg(omn, pi);||| 48 add_seg(-pi, omx);||| 49 } else {||| 50 add_seg(omn, omx);||| 51 }||| 52 }||| 53 sort(evs.begin(), evs.end());||| 54 int cnt = 0, mx = 0;||| 55 for (auto [o, t] : evs) {||| 56 cnt += t;||| 57 mx = max(mx, cnt);||| 58 }||| 59 return mx;||| 60 };||| 61 double L = 0, R = 1e9;||| 62 for (int i = 0; i < 100; ++i) {||| 63 double M = (L + R) / 2;||| 64 if (covers(M) >= k)||| 65 R = M;||| 66 else||| 67 L = M;||| 68 }||| 69 cout << fixed << setprecision(12) << L / 2 << endl;||| 70 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int pi = acos(-1);||| 4 struct P {||| 5 double x, y;||| 6 P operator+(const P b) const { return P{x + b.x, y + b.y}; }||| 7 P operator-(const P b) const { return P{x - b.x, y - b.y}; }||| 8 P operator*(const double b) const { return P{x * b, y * b}; }||| 9 P operator/(const double b) const { return P{x / b, y / b}; }||| 10 P unit() const { return *this / abs(); }||| 11 double abs() const { return hypot(x, y); }||| 12 P spin() { return P{-y, x}; }||| 13 double angle() const { return atan2(y, x); }||| 14 };||| 15 int main() {||| 16 ios_base::sync_with_stdio(0);||| 17 cin.tie(0);||| 18 int n, k;||| 19 cin >> n >> k;||| 20 vector<P> ps(n);||| 21 vector<double> d(n);||| 22 for (int i = 0; i < n; ++i) {||| 23 cin >> ps[i].x >> ps[i].y;||| 24 d[i] = ps[i].abs();||| 25 }||| 26 auto covers = [&](double r) -> int {||| 27 static vector<pair<double, int>> evs;||| 28 evs.clear();||| 29 auto add_seg = [&](double l, double r) {||| 30 evs.emplace_back(l, 1);||| 31 evs.emplace_back(r, -1);||| 32 };||| 33 for (int i = 0; i < n; ++i) {||| 34 if (d[i] >= r - 1e-9) continue;||| 35 if (d[i] < 1e-9) {||| 36 evs.emplace_back(-1000, 1);||| 37 continue;||| 38 }||| 39 P le = ps[i].spin().unit();||| 40 P ri = ps[i].spin().spin().spin().unit();||| 41 double extend = sqrt(r * r - d[i] * d[i]);||| 42 le = ps[i] + le * extend;||| 43 ri = ps[i] + ri * extend;||| 44 double omn = ri.angle();||| 45 double omx = le.angle();||| 46 if (omn > omx) {||| 47 add_seg(omn, pi);||| 48 add_seg(-pi, omx);||| 49 } else {||| 50 add_seg(omn, omx);||| 51 }||| 52 }||| 53 sort(evs.begin(), evs.end());||| 54 int cnt = 0, mx = 0;||| 55 for (auto [o, t] : evs) {||| 56 cnt += t;||| 57 mx = max(mx, cnt);||| 58 }||| 59 return mx;||| 60 };||| 61 double L = 0, R = 1e9;||| 62 for (int i = 0; i < 100; ++i) {||| 63 double M = (L + R) / 2;||| 64 if (covers(M) >= k)||| 65 R = M;||| 66 else||| 67 L = M;||| 68 }||| 69 cout << fixed << setprecision(12) << L / 2 << endl;||| 70 }||| 	3 const double pi = acos(-1);
1	73	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double EPS = 1e-9;||| 4 const long double PI = acos(-1.0L);||| 5 const int N = 1e6 + 5;||| 6 long double a[N], d[N];||| 7 int n, k;||| 8 bool cmp(const pair<long double, bool> &e1, const pair<long double, bool> &e2) {||| 9 long double a1, a2;||| 10 int t1, t2;||| 11 tie(a1, t1) = e1, tie(a2, t2) = e2;||| 12 if (abs(a1 - a2) > EPS) return a1 < a2;||| 13 return t1 < t2;||| 14 }||| 15 bool ok(long double r) {||| 16 long double delta;||| 17 long double L, R;||| 18 long double dif;||| 19 vector<pair<long double, bool> > events;||| 20 for (int i = 0; i < n; ++i) {||| 21 if (d[i] - r > EPS) continue;||| 22 delta = acos(d[i] / r);||| 23 L = a[i] - delta;||| 24 R = a[i] + delta;||| 25 dif = -PI - L;||| 26 if (dif > EPS) {||| 27 events.emplace_back(-PI, 0);||| 28 events.emplace_back(R, 1);||| 29 L = PI - dif;||| 30 R = PI;||| 31 }||| 32 dif = R - PI;||| 33 if (dif > EPS) {||| 34 events.emplace_back(L, 0);||| 35 events.emplace_back(PI, 1);||| 36 R = -PI + dif;||| 37 L = -PI;||| 38 }||| 39 events.emplace_back(L, 0);||| 40 events.emplace_back(R, 1);||| 41 }||| 42 sort(events.begin(), events.end(), cmp);||| 43 long double angle;||| 44 bool type;||| 45 int cnt = 0;||| 46 for (auto &e : events) {||| 47 tie(angle, type) = e;||| 48 if (type == 0) {||| 49 ++cnt;||| 50 } else {||| 51 --cnt;||| 52 }||| 53 if (cnt >= k) return true;||| 54 }||| 55 return false;||| 56 }||| 57 signed main() {||| 58 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 59 cin >> n >> k;||| 60 long long x, y;||| 61 for (int i = 0; i < n; ++i) {||| 62 cin >> x >> y;||| 63 a[i] = atan2(y, x);||| 64 d[i] = sqrt(x * x + y * y) / 2;||| 65 }||| 66 long double L = 0, R = 3e5, M;||| 67 for (int i = 0; i < 50; ++i) {||| 68 M = (L + R) / 2;||| 69 if (ok(M)) {||| 70 R = M;||| 71 } else {||| 72 L = M;||| 73 }||| 74 }||| 75 cout << setprecision(10) << fixed << L;||| 76 return 0;||| 77 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double EPS = 1e-9;||| 4 const long double PI = acos(-1.0L);||| 5 const int N = 1e6 + 5;||| 6 long double a[N], d[N];||| 7 int n, k;||| 8 bool cmp(const pair<long double, bool> &e1, const pair<long double, bool> &e2) {||| 9 long double a1, a2;||| 10 int t1, t2;||| 11 tie(a1, t1) = e1, tie(a2, t2) = e2;||| 12 if (abs(a1 - a2) > EPS) return a1 < a2;||| 13 return t1 < t2;||| 14 }||| 15 bool ok(long double r) {||| 16 long double delta;||| 17 long double L, R;||| 18 long double dif;||| 19 vector<pair<long double, bool> > events;||| 20 for (int i = 0; i < n; ++i) {||| 21 if (d[i] - r > EPS) continue;||| 22 delta = acos(d[i] / r);||| 23 L = a[i] - delta;||| 24 R = a[i] + delta;||| 25 dif = -PI - L;||| 26 if (dif > EPS) {||| 27 events.emplace_back(-PI, 0);||| 28 events.emplace_back(R, 1);||| 29 L = PI - dif;||| 30 R = PI;||| 31 }||| 32 dif = R - PI;||| 33 if (dif > EPS) {||| 34 events.emplace_back(L, 0);||| 35 events.emplace_back(PI, 1);||| 36 R = -PI + dif;||| 37 L = -PI;||| 38 }||| 39 events.emplace_back(L, 0);||| 40 events.emplace_back(R, 1);||| 41 }||| 42 sort(events.begin(), events.end(), cmp);||| 43 long double angle;||| 44 bool type;||| 45 int cnt = 0;||| 46 for (auto &e : events) {||| 47 tie(angle, type) = e;||| 48 if (type == 0) {||| 49 ++cnt;||| 50 } else {||| 51 --cnt;||| 52 }||| 53 if (cnt >= k) return true;||| 54 }||| 55 return false;||| 56 }||| 57 signed main() {||| 58 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 59 cin >> n >> k;||| 60 int x, y;||| 61 for (int i = 0; i < n; ++i) {||| 62 cin >> x >> y;||| 63 a[i] = atan2(y, x);||| 64 d[i] = sqrt(x * x + y * y) / 2;||| 65 }||| 66 long double L = 0, R = 3e5, M;||| 67 for (int i = 0; i < 50; ++i) {||| 68 M = (L + R) / 2;||| 69 if (ok(M)) {||| 70 R = M;||| 71 } else {||| 72 L = M;||| 73 }||| 74 }||| 75 cout << setprecision(10) << fixed << L;||| 76 return 0;||| 77 }||| 	60 long long x, y;
1	90	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 struct P {||| 5 int x, y;||| 6 double dis() const { return hypot(x, y); }||| 7 };||| 8 int main() {||| 9 cin.tie(nullptr)->sync_with_stdio(false);||| 10 int n, k;||| 11 cin >> n >> k;||| 12 vector<P> vp(n);||| 13 double L = 0, R = 200000;||| 14 for (auto& [x, y] : vp) {||| 15 cin >> x >> y;||| 16 if (x == 0 and y == 0) {||| 17 k -= 1;||| 18 x = 2 * R;||| 19 }||| 20 }||| 21 double PI = acos(-1);||| 22 for (int step = 0; step < 50; step += 1) {||| 23 double M = (L + R) / 2;||| 24 vector<pair<double, int>> sp;||| 25 for (auto p : vp) {||| 26 double cs = p.dis() / 2 / M;||| 27 if (cs > 1) continue;||| 28 double c = atan2(p.y, p.x);||| 29 double t = acos(cs);||| 30 double x = c - t, y = c + t;||| 31 if (x <= -PI) {||| 32 sp.push_back({x + 2 * PI, 1});||| 33 sp.push_back({PI, -1});||| 34 x = -PI;||| 35 }||| 36 if (y >= PI) {||| 37 sp.push_back({-PI, 1});||| 38 sp.push_back({y - 2 * PI, -1});||| 39 y = PI;||| 40 }||| 41 sp.push_back({x, 1});||| 42 sp.push_back({y, -1});||| 43 }||| 44 sort(sp.begin(), sp.end());||| 45 int p = 0, s = 0;||| 46 for (auto [x, y] : sp) {||| 47 s += y;||| 48 p = max(p, s);||| 49 }||| 50 if (p >= k)||| 51 R = M;||| 52 else||| 53 L = M;||| 54 }||| 55 cout << fixed << setprecision(20) << L;||| 56 return 0;||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 struct P {||| 5 int x, y;||| 6 double dis() const { return hypot(x, y); }||| 7 };||| 8 int main() {||| 9 cin.tie(nullptr)->sync_with_stdio(false);||| 10 int n, k;||| 11 cin >> n >> k;||| 12 vector<P> vp(n);||| 13 double L = 0, R = 200000;||| 14 for (auto& [x, y] : vp) {||| 15 cin >> x >> y;||| 16 if (x == 0 and y == 0) {||| 17 k -= 1;||| 18 x = 2 * R;||| 19 }||| 20 }||| 21 double PI = acos(-1);||| 22 for (int step = 0; step < 30; step += 1) {||| 23 double M = (L + R) / 2;||| 24 vector<pair<double, int>> sp;||| 25 for (auto p : vp) {||| 26 double cs = p.dis() / 2 / M;||| 27 if (cs > 1) continue;||| 28 double c = atan2(p.y, p.x);||| 29 double t = acos(cs);||| 30 double x = c - t, y = c + t;||| 31 if (x <= -PI) {||| 32 sp.push_back({x - 2 * PI, 1});||| 33 sp.push_back({PI, -1});||| 34 x = -PI;||| 35 }||| 36 if (y >= PI) {||| 37 sp.push_back({-PI, 1});||| 38 sp.push_back({y - 2 * PI, -1});||| 39 y = PI;||| 40 }||| 41 sp.push_back({x, 1});||| 42 sp.push_back({y, -1});||| 43 }||| 44 sort(sp.begin(), sp.end());||| 45 int p = 0, s = 0;||| 46 for (auto [x, y] : sp) {||| 47 s += y;||| 48 p = max(p, s);||| 49 }||| 50 if (p >= k)||| 51 R = M;||| 52 else||| 53 L = M;||| 54 }||| 55 cout << fixed << setprecision(20) << L;||| 56 return 0;||| 57 }||| 	22 for (int step = 0; step < 50; step += 1) {
1	81	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5, K = 109, inf = 1e9;||| 4 const long double pi = acos(-1);||| 5 int n, k;||| 6 long long x[N], y[N];||| 7 bool solve(long double r) {||| 8 vector<pair<long double, int> > ranges;||| 9 int cnt = 0;||| 10 for (int i = 1; i <= n; i++) {||| 11 long double theta = fmod(atan2(y[i], x[i]) + 2 * pi, 2 * pi);||| 12 if (1ll * x[i] * x[i] + 1ll * y[i] * y[i] >||| 13 2 * r * (x[i] * cos(theta) + y[i] * sin(theta)))||| 14 continue;||| 15 long double low = acos(sqrt(x[i] * x[i] + y[i] * y[i]) / (2 * r));||| 16 long double L = theta - low, R = theta + low;||| 17 R = fmod(R + 2 * pi, 2 * pi);||| 18 if (L < 0) {||| 19 L += 2 * pi;||| 20 }||| 21 if (L <= R) {||| 22 ranges.push_back({L, 1});||| 23 ranges.push_back({R, 2});||| 24 } else {||| 25 ranges.push_back({L, 1});||| 26 ranges.push_back({2 * pi, 2});||| 27 ranges.push_back({0, 1});||| 28 ranges.push_back({R, 2});||| 29 }||| 30 }||| 31 sort(ranges.begin(), ranges.end());||| 32 cnt = 0;||| 33 for (auto i : ranges) {||| 34 if (i.second == 1)||| 35 cnt++;||| 36 else||| 37 cnt--;||| 38 if (cnt >= k) return true;||| 39 }||| 40 return false;||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 cout.tie(0);||| 46 cin >> n >> k;||| 47 for (int i = 1; i <= n; i++) cin >> x[i] >> y[i];||| 48 long double low = 0, high = 2e6;||| 49 for (int i = 0; i < 50; i++) {||| 50 long double m = (low + high) / 2;||| 51 if (solve(m))||| 52 high = m;||| 53 else||| 54 low = m;||| 55 }||| 56 if (low > 1.5e6) return cout << -1, 0;||| 57 cout << fixed << low;||| 58 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5, K = 109, inf = 1e9;||| 4 const long double pi = acos(-1);||| 5 int n, k;||| 6 int x[N], y[N];||| 7 bool solve(long double r) {||| 8 vector<pair<long double, int> > ranges;||| 9 int cnt = 0;||| 10 for (int i = 1; i <= n; i++) {||| 11 long double theta = fmod(atan2(y[i], x[i]) + 2 * pi, 2 * pi);||| 12 if (1ll * x[i] * x[i] + 1ll * y[i] * y[i] >||| 13 2 * r * (x[i] * cos(theta) + y[i] * sin(theta)))||| 14 continue;||| 15 long double low = acos(sqrt(x[i] * x[i] + y[i] * y[i]) / (2 * r));||| 16 long double L = theta - low, R = theta + low;||| 17 R = fmod(R + 2 * pi, 2 * pi);||| 18 if (L < 0) {||| 19 L += 2 * pi;||| 20 }||| 21 if (L <= R) {||| 22 ranges.push_back({L, 1});||| 23 ranges.push_back({R, 2});||| 24 } else {||| 25 ranges.push_back({L, 1});||| 26 ranges.push_back({2 * pi, 2});||| 27 ranges.push_back({0, 1});||| 28 ranges.push_back({R, 2});||| 29 }||| 30 }||| 31 sort(ranges.begin(), ranges.end());||| 32 cnt = 0;||| 33 for (auto i : ranges) {||| 34 if (i.second == 1)||| 35 cnt++;||| 36 else||| 37 cnt--;||| 38 if (cnt >= k) return true;||| 39 }||| 40 return false;||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 cout.tie(0);||| 46 cin >> n >> k;||| 47 for (int i = 1; i <= n; i++) cin >> x[i] >> y[i];||| 48 long double low = 0, high = 2e6;||| 49 for (int i = 0; i < 50; i++) {||| 50 long double m = (low + high) / 2;||| 51 if (solve(m))||| 52 high = m;||| 53 else||| 54 low = m;||| 55 }||| 56 if (low > 1.5e6) return cout << -1, 0;||| 57 cout << fixed << low;||| 58 }||| 	6 long long x[N], y[N];
1	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 210000;||| 4 const int M = 1100000;||| 5 const int mod = 1e9 + 7;||| 6 const int inf = (int)1e9;||| 7 const double eps = 1e-9;||| 8 int n, k;||| 9 int px[N], py[N], num;||| 10 double angle[N];||| 11 pair<double, int> a[N];||| 12 int pp[N], f[N], tp[N];||| 13 double ang[N];||| 14 double sqr(double x) { return x * x; }||| 15 const double pi = acos(-1.0);||| 16 double cal(double theta) {||| 17 if (theta >= pi) theta -= 2 * pi;||| 18 if (theta <= -pi) theta += 2 * pi;||| 19 return theta;||| 20 }||| 21 int check(double r) {||| 22 int num = 0;||| 23 int tk = k;||| 24 for (int i = 1; i <= n; i++) {||| 25 if (px[i] == 0 && py[i] == 0) {||| 26 tk--;||| 27 continue;||| 28 }||| 29 double dist = sqrt(sqr(px[i]) + sqr(py[i]));||| 30 if (dist < 2 * r) {||| 31 double theta = acos(dist / 2 / r);||| 32 a[++num] = make_pair(cal(angle[i] - theta), i);||| 33 a[++num] = make_pair(cal(angle[i] + theta), i);||| 34 }||| 35 }||| 36 sort(a + 1, a + num + 1);||| 37 memset(pp, 0, sizeof(pp));||| 38 memset(f, 0, sizeof(f));||| 39 for (int i = 1; i <= num; i++) {||| 40 int idx = a[i].second;||| 41 if (!pp[idx])||| 42 pp[idx] = i;||| 43 else {||| 44 double a1 = a[pp[idx]].first;||| 45 double a2 = a[i].first;||| 46 if (a2 - a1 > pi) {||| 47 f[1]++;||| 48 f[pp[idx] + 1]--;||| 49 f[i]++;||| 50 } else {||| 51 f[pp[idx]]++;||| 52 f[i + 1]--;||| 53 }||| 54 }||| 55 }||| 56 int cur = 0;||| 57 if (cur >= tk) return 1;||| 58 for (int i = 1; i <= num; i++) {||| 59 cur += f[i];||| 60 if (cur >= tk) return 1;||| 61 }||| 62 return 0;||| 63 }||| 64 int main() {||| 65 cin.sync_with_stdio(false);||| 66 cin.tie(0);||| 67 cout.tie(0);||| 68 ;||| 69 cin >> n >> k;||| 70 for (int i = 1; i <= n; i++) {||| 71 cin >> px[i] >> py[i];||| 72 angle[i] = atan2(py[i], px[i]);||| 73 }||| 74 double l = 0, r = 200000, ans;||| 75 for (int i = 1; i <= 100; i++) {||| 76 double mid = (l + r) / 2;||| 77 if (check(mid))||| 78 r = mid, ans = mid;||| 79 else||| 80 l = mid;||| 81 }||| 82 printf(""%.10f\n"", ans);||| 83 return 0;||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 210000;||| 4 const int M = 1100000;||| 5 const int mod = 1e9 + 7;||| 6 const int inf = (int)1e9;||| 7 const double eps = 1e-9;||| 8 int n, k;||| 9 int px[N], py[N], num;||| 10 double angle[N];||| 11 pair<double, int> a[N];||| 12 int pp[N], f[N], tp[N];||| 13 double ang[N];||| 14 double sqr(double x) { return x * x; }||| 15 const double pi = acos(-1.0);||| 16 double cal(double theta) {||| 17 if (theta >= pi) theta -= 2 * pi;||| 18 if (theta <= pi) theta += 2 * pi;||| 19 return theta;||| 20 }||| 21 int check(double r) {||| 22 int num = 0;||| 23 int tk = k;||| 24 for (int i = 1; i <= n; i++) {||| 25 if (px[i] == 0 && py[i] == 0) {||| 26 tk--;||| 27 continue;||| 28 }||| 29 double dist = sqrt(sqr(px[i]) + sqr(py[i]));||| 30 if (dist < 2 * r) {||| 31 double theta = acos(dist / 2 / r);||| 32 a[++num] = make_pair(cal(angle[i] - theta), i);||| 33 a[++num] = make_pair(cal(angle[i] + theta), i);||| 34 }||| 35 }||| 36 sort(a + 1, a + num + 1);||| 37 memset(pp, 0, sizeof(pp));||| 38 memset(f, 0, sizeof(f));||| 39 for (int i = 1; i <= num; i++) {||| 40 int idx = a[i].second;||| 41 if (!pp[idx])||| 42 pp[idx] = i;||| 43 else {||| 44 double a1 = a[pp[idx]].first;||| 45 double a2 = a[i].first;||| 46 if (a2 - a1 > pi) {||| 47 f[1]++;||| 48 f[pp[idx] + 1]--;||| 49 f[i]++;||| 50 } else {||| 51 f[pp[idx]]++;||| 52 f[i + 1]--;||| 53 }||| 54 }||| 55 }||| 56 int cur = 0;||| 57 if (cur >= tk) return 1;||| 58 for (int i = 1; i <= num; i++) {||| 59 cur += f[i];||| 60 if (cur >= tk) return 1;||| 61 }||| 62 return 0;||| 63 }||| 64 int main() {||| 65 cin.sync_with_stdio(false);||| 66 cin.tie(0);||| 67 cout.tie(0);||| 68 ;||| 69 cin >> n >> k;||| 70 for (int i = 1; i <= n; i++) {||| 71 cin >> px[i] >> py[i];||| 72 angle[i] = atan2(py[i], px[i]);||| 73 }||| 74 double l = 0, r = 200000, ans;||| 75 for (int i = 1; i <= 100; i++) {||| 76 double mid = (l + r) / 2;||| 77 if (check(mid))||| 78 r = mid, ans = mid;||| 79 else||| 80 l = mid;||| 81 }||| 82 printf(""%.10f\n"", ans);||| 83 return 0;||| 84 }||| "	18 if (theta <= -pi) theta += 2 * pi;
3	264	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string s = """";||| 4 int n = 0, ans = 0;||| 5 void check(string t) {||| 6 int res = 1;||| 7 string s2 = s;||| 8 if (s2[n - 1] == 'X') {||| 9 for (int i = 0; i < n; i++)||| 10 if (s2[i] == 'X') s2[i] = t[1];||| 11 } else if (s2[n - 1] == '_')||| 12 s2[n - 1] = t[1];||| 13 else if (s2[n - 1] != t[1])||| 14 return;||| 15 if (s2[n - 2] == 'X') {||| 16 for (int i = 0; i < n; i++)||| 17 if (s2[i] == 'X') s2[i] = t[0];||| 18 } else if (s2[n - 2] == '_')||| 19 s2[n - 2] = t[0];||| 20 else if (s2[n - 2] != t[0])||| 21 return;||| 22 for (int i = 0; i < n - 2; i++) {||| 23 if (s2[i] == '_') {||| 24 if (i == 0)||| 25 res *= 9;||| 26 else||| 27 res *= 10;||| 28 }||| 29 if (s2[i] == 'X') {||| 30 if (i == 0)||| 31 res *= 9;||| 32 else||| 33 res *= 10;||| 34 for (int j = 0; j < n; j++)||| 35 if (s2[j] == 'X') s2[j] = '?';||| 36 }||| 37 }||| 38 if (s2[0] == '0') return;||| 39 ans += res;||| 40 }||| 41 int main() {||| 42 cin >> s;||| 43 n = s.length();||| 44 if (s.length() == 1) {||| 45 if (s == ""0"" || s == ""_"" || s == ""X"")||| 46 cout << 1;||| 47 else||| 48 cout << 0;||| 49 return 0;||| 50 }||| 51 check(""25"");||| 52 check(""50"");||| 53 check(""75"");||| 54 check(""00"");||| 55 cout << ans;||| 56 return 0;||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string s = """";||| 4 int n = 0, ans = 0;||| 5 void check(string t) {||| 6 int res = 1;||| 7 string s2 = s;||| 8 if (s2[n - 1] == 'X') {||| 9 for (int i = 0; i < n; i++)||| 10 if (s2[i] == 'X') s2[i] = t[1];||| 11 } else if (s2[n - 1] == '_')||| 12 s2[n - 1] = t[1];||| 13 else if (s2[n - 1] != t[1])||| 14 return;||| 15 if (s2[n - 2] == 'X') {||| 16 for (int i = 0; i < n; i++)||| 17 if (s2[i] == 'X') s2[i] = t[0];||| 18 } else if (s2[n - 2] == '_')||| 19 s2[n - 2] = t[0];||| 20 else if (s2[n - 2] != t[0])||| 21 return;||| 22 for (int i = 0; i < n - 2; i++) {||| 23 if (s2[i] == '_') {||| 24 if (i == 0)||| 25 res *= 9;||| 26 else||| 27 res *= 10;||| 28 }||| 29 if (s2[i] == 'X') {||| 30 if (i == 0)||| 31 res *= 9;||| 32 else||| 33 res *= 10;||| 34 for (int j = 0; j < n; j++)||| 35 if (s2[i] == 'X') s2[i] = '?';||| 36 }||| 37 }||| 38 if (s2[0] == '0') return;||| 39 ans += res;||| 40 }||| 41 int main() {||| 42 cin >> s;||| 43 n = s.length();||| 44 if (s.length() == 1) {||| 45 if (s == ""0"" || s == ""_"" || s == ""X"")||| 46 cout << 1;||| 47 else||| 48 cout << 0;||| 49 return 0;||| 50 }||| 51 check(""25"");||| 52 check(""50"");||| 53 check(""75"");||| 54 check(""00"");||| 55 cout << ans;||| 56 return 0;||| 57 }||| "	35 if (s2[j] == 'X') s2[j] = '?';
3	131	"1 #include <bits/stdc++.h>||| 2 char s[10];||| 3 int len, ans;||| 4 void dfs(int pos, int cur, int x) {||| 5 if (pos == len) {||| 6 if (cur % 25 == 0) ++ans;||| 7 return;||| 8 }||| 9 if (pos && cur == 0) return;||| 10 if (s[pos] == 'X') {||| 11 if (x != -1)||| 12 dfs(pos + 1, cur * 10 + x, x);||| 13 else {||| 14 for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i);||| 15 }||| 16 } else if (s[pos] == '_') {||| 17 for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, x);||| 18 } else||| 19 dfs(pos + 1, cur * 10 + (s[pos] ^ 48), x);||| 20 }||| 21 int main() {||| 22 scanf(""%s"", s);||| 23 len = strlen(s);||| 24 dfs(0, 0, -1);||| 25 printf(""%d\n"", ans);||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 char s[10];||| 3 int len, ans;||| 4 void dfs(int pos, int cur, int x) {||| 5 if (pos == len) {||| 6 if (cur % 25 == 0) ++ans;||| 7 return;||| 8 }||| 9 if (pos && cur == 0) return;||| 10 if (s[pos] == 'X') {||| 11 if (x != -1)||| 12 dfs(pos + 1, cur * 10 + x, x);||| 13 else {||| 14 for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i);||| 15 }||| 16 } else if (s[pos] == '_') {||| 17 for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i);||| 18 } else||| 19 dfs(pos + 1, cur * 10 + (s[pos] ^ 48), x);||| 20 }||| 21 int main() {||| 22 scanf(""%s"", s);||| 23 len = strlen(s);||| 24 dfs(0, 0, -1);||| 25 printf(""%d\n"", ans);||| 26 return 0;||| 27 }||| "	17 for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, x);
5	7	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1000000007;||| 4 const int maxn = 1e5 + 10;||| 5 map<int, int> A, B;||| 6 long long k, f[maxn], p[maxn], jc[maxn], s[maxn];||| 7 int n, m;||| 8 long long pow_(long long x, long long y) {||| 9 long long ret = 1;||| 10 while (y) {||| 11 if (y & 1) ret = ret * x % M;||| 12 x = x * x % M;||| 13 y >>= 1;||| 14 }||| 15 return ret;||| 16 }||| 17 long long inv(long long x) { return pow_(x, M - 2); }||| 18 long long C(int x, int y) { return jc[x] * inv(jc[y] * jc[x - y] % M) % M; }||| 19 long long solve(int x) {||| 20 if (B.find(x) != B.end()) return B[x];||| 21 long long ret = 0;||| 22 for (int i = 0; i <= m; i++) ret = (ret + p[i] * s[x + i]) % M;||| 23 return B[x] = ret;||| 24 }||| 25 int main() {||| 26 cin >> n >> k;||| 27 jc[0] = 1;||| 28 for (int i = 1; i <= n; i++) jc[i] = jc[i - 1] * i % M;||| 29 for (int i = 1; i <= n; i++) {||| 30 int x;||| 31 cin >> x;||| 32 A[x]++;||| 33 }||| 34 f[0] = k - 1;||| 35 for (int i = 1; i < n; i++) {||| 36 long long p = inv(n) * i % M;||| 37 long long q = inv(n) * (n - i) % M * inv(k - 1) % M;||| 38 f[i] = (p * f[i - 1] + 1) % M * inv(q) % M;||| 39 }||| 40 s[n] = 0;||| 41 for (int i = n; i; i--) s[i - 1] = (s[i] + f[i - 1]) % M;||| 42 m = A[-1];||| 43 for (int i = 0; i <= m; i++)||| 44 p[i] = C(m, i) * pow_(k - 1, m - i) % M * inv(pow_(k, m)) % M;||| 45 long long tot = k;||| 46 long long ans = 0;||| 47 for (auto x : A) {||| 48 if (x.first == -1) continue;||| 49 ans = (ans + solve(x.second)) % M;||| 50 tot--;||| 51 }||| 52 ans = (ans + tot * solve(0)) % M;||| 53 ans = (ans - (k - 1) * s[0]) % M;||| 54 ans = ans * inv(k - 1) % M;||| 55 cout << (ans + M) % M << endl;||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1000000007;||| 4 const int maxn = 1e5 + 10;||| 5 map<int, int> A, B;||| 6 long long k, f[maxn], p[maxn], jc[maxn], s[maxn];||| 7 int n, m;||| 8 long long pow_(long long x, long long y) {||| 9 long long ret = 1;||| 10 while (y) {||| 11 if (y & 1) ret = ret * x % M;||| 12 x = x * x % M;||| 13 y >>= 1;||| 14 }||| 15 return ret;||| 16 }||| 17 long long inv(long long x) { return pow_(x, M - 2); }||| 18 long long C(int x, int y) { return jc[x] * inv(jc[y] * jc[x - y] % M) % M; }||| 19 long long solve(int x) {||| 20 if (B.find(x) != B.end()) return B[x];||| 21 long long ret = 0;||| 22 for (int i = 0; i <= m; i++) ret = (ret + p[i] * s[x + i]) % M;||| 23 return B[x] = ret;||| 24 }||| 25 int main() {||| 26 cin >> n >> k;||| 27 jc[0] = 1;||| 28 for (int i = 1; i <= n; i++) jc[i] = jc[i - 1] * i % M;||| 29 for (int i = 1; i <= n; i++) {||| 30 int x;||| 31 cin >> x;||| 32 A[x]++;||| 33 }||| 34 f[0] = k - 1;||| 35 for (int i = 1; i < n; i++) {||| 36 long long p = inv(n) * i % M;||| 37 long long q = inv(n) * (n - i) % M * inv(k - 1) % M;||| 38 f[i] = (p * f[i - 1] + 1) % M * inv(q) % M;||| 39 }||| 40 s[n] = 0;||| 41 for (int i = n; i; i--) s[i - 1] = (s[i] + f[i - 1]) % M;||| 42 m = A[-1];||| 43 for (int i = 0; i <= m; i++)||| 44 p[i] = C(m, i) * pow_(k - 1, m - i) * inv(pow_(k, m)) % M;||| 45 long long tot = k;||| 46 long long ans = 0;||| 47 for (auto x : A) {||| 48 if (x.first == -1) continue;||| 49 ans = (ans + solve(x.second)) % M;||| 50 tot--;||| 51 }||| 52 ans = (ans + tot * solve(0)) % M;||| 53 ans = (ans - (k - 1) * s[0]) % M;||| 54 ans = ans * inv(k - 1) % M;||| 55 cout << (ans + M) % M << endl;||| 56 }||| 	44 p[i] = C(m, i) * pow_(k - 1, m - i) % M * inv(pow_(k, m)) % M;
6	42	"1 #include <bits/stdc++.h>||| 2 #pragma comment(linker, ""/STACK:36777216"")||| 3 using namespace std;||| 4 long long mod = 1e9 + 7;||| 5 long double eps = 1e-12;||| 6 long double pi = acosl(-1);||| 7 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 8 ifstream in(""input.txt"");||| 9 ofstream out(""output.txt"");||| 10 #pragma GCC optimize(""Ofast"")||| 11 #pragma GCC target(""avx,avx2,fma"")||| 12 #pragma GCC optimization(""unroll-loops"")||| 13 using ll = long long;||| 14 using ull = unsigned long long;||| 15 using ld = long double;||| 16 using uc = unsigned char;||| 17 using us = unsigned short;||| 18 ll phi[100050];||| 19 ll a[100050];||| 20 vector<int> g[100050];||| 21 int used[100050];||| 22 int step = 1;||| 23 void solve() {||| 24 phi[1] = 1;||| 25 g[1].push_back(1);||| 26 for (int i = 2; i < 100050; i++) {||| 27 phi[i] = i - 1;||| 28 g[i].push_back(1);||| 29 g[i].push_back(i);||| 30 }||| 31 for (ll i = 2; i < 100050; i++) {||| 32 for (ll j = 2; j * i < 100050; j++) {||| 33 phi[j * i] -= phi[i];||| 34 g[i * j].push_back(j);||| 35 }||| 36 }||| 37 int n;||| 38 cin >> n;||| 39 for (int i = 1; i <= n; i++) {||| 40 cin >> a[i];||| 41 }||| 42 ll ans = 0;||| 43 for (ll i = 1; i <= n; i++) {||| 44 ll res = 0;||| 45 ll p = 1;||| 46 unordered_map<int, ll> m;||| 47 for (ll t = 1; t * i <= n; t++) {||| 48 for (auto x : g[a[t * i]]) m[x]++;||| 49 }||| 50 for (auto x : m) {||| 51 res += (((x.second * x.second) % mod) * phi[x.first]) % mod;||| 52 if (res >= mod) res -= mod;||| 53 }||| 54 ans += res * phi[i] % mod;||| 55 if (ans >= mod) ans -= mod;||| 56 }||| 57 cout << ans;||| 58 }||| 59 int main() {||| 60 cout << setprecision(20) << fixed;||| 61 ios_base::sync_with_stdio(0);||| 62 cin.tie(0);||| 63 clock_t t1 = clock();||| 64 ;||| 65 int t = 1;||| 66 int cs = 1;||| 67 while (t--) {||| 68 solve();||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma comment(linker, ""/STACK:36777216"")||| 3 using namespace std;||| 4 long long mod = 1e9 + 7;||| 5 long double eps = 1e-12;||| 6 long double pi = acosl(-1);||| 7 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 8 ifstream in(""input.txt"");||| 9 ofstream out(""output.txt"");||| 10 #pragma GCC optimize(""Ofast"")||| 11 #pragma GCC target(""avx,avx2,fma"")||| 12 #pragma GCC optimization(""unroll-loops"")||| 13 using ll = long long;||| 14 using ull = unsigned long long;||| 15 using ld = long double;||| 16 using uc = unsigned char;||| 17 using us = unsigned short;||| 18 ll phi[100050];||| 19 ll a[100050];||| 20 vector<int> g[100050];||| 21 int used[100050];||| 22 int step = 1;||| 23 void solve() {||| 24 phi[1] = 1;||| 25 g[1].push_back(1);||| 26 for (int i = 2; i < 100050; i++) {||| 27 phi[i] = i - 1;||| 28 g[i].push_back(1);||| 29 g[i].push_back(i);||| 30 }||| 31 for (ll i = 2; i < 100050; i++) {||| 32 for (ll j = 2; j * i < 100050; j++) {||| 33 phi[j * i] -= phi[i];||| 34 g[i * j].push_back(j);||| 35 }||| 36 }||| 37 int n;||| 38 cin >> n;||| 39 for (int i = 1; i <= n; i++) {||| 40 cin >> a[i];||| 41 }||| 42 ll ans = 0;||| 43 for (ll i = 1; i <= n; i++) {||| 44 ll res = 0;||| 45 ll p = 1;||| 46 unordered_map<int, int> m;||| 47 for (ll t = 1; t * i <= n; t++) {||| 48 for (auto x : g[a[t * i]]) m[x]++;||| 49 }||| 50 for (auto x : m) {||| 51 res += (((x.second * x.second) % mod) * phi[x.first]) % mod;||| 52 if (res >= mod) res -= mod;||| 53 }||| 54 ans += res * phi[i] % mod;||| 55 if (ans >= mod) ans -= mod;||| 56 }||| 57 cout << ans;||| 58 }||| 59 int main() {||| 60 cout << setprecision(20) << fixed;||| 61 ios_base::sync_with_stdio(0);||| 62 cin.tie(0);||| 63 clock_t t1 = clock();||| 64 ;||| 65 int t = 1;||| 66 int cs = 1;||| 67 while (t--) {||| 68 solve();||| 69 }||| 70 return 0;||| 71 }||| "	46 unordered_map<int, ll> m;
6	24	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 100005;||| 4 const int MOD = (int)1e9 + 7;||| 5 long long n, a[MAXN], sum_gcd[MAXN], mobius[MAXN], euler[MAXN], nxt[MAXN],||| 6 cnt[MAXN];||| 7 long long sum;||| 8 vector<long long> divisor[MAXN];||| 9 long long add(long long &a, long long b) { a += b; }||| 10 long long sub(long long &a, long long b) { a -= b; }||| 11 void update(int x, int val) {||| 12 for (int d : divisor[x]) {||| 13 sub(sum, euler[d] * cnt[d] * cnt[d]);||| 14 cnt[d] += val;||| 15 add(sum, euler[d] * cnt[d] * cnt[d]);||| 16 }||| 17 }||| 18 int main() {||| 19 for (int i = 1; i < MAXN; ++i)||| 20 for (int j = i; j < MAXN; j += i) divisor[j].push_back(i);||| 21 for (int i = 2; i < MAXN; ++i) {||| 22 for (int j = i; j < MAXN; j += i) {||| 23 if (nxt[j] == 0) nxt[j] = i;||| 24 }||| 25 }||| 26 mobius[1] = 1;||| 27 euler[1] = 1;||| 28 for (int i = 2; i < MAXN; ++i) {||| 29 int p = nxt[i];||| 30 if (p == nxt[i / p]) {||| 31 mobius[i] = 0;||| 32 euler[i] = euler[i / p] * p;||| 33 } else {||| 34 mobius[i] = -mobius[i / p];||| 35 euler[i] = euler[i / p] * (p - 1);||| 36 }||| 37 }||| 38 cin >> n;||| 39 for (int i = 1; i <= n; ++i) cin >> a[i];||| 40 for (int k = 1; k <= n; ++k) {||| 41 for (int i = k; i <= n; i += k) update(a[i], 1);||| 42 sum_gcd[k] = sum;||| 43 for (int i = k; i <= n; i += k) update(a[i], -1);||| 44 }||| 45 long long ans = 0;||| 46 for (int k = 1; k <= n; ++k) {||| 47 add(ans, euler[k] * sum_gcd[k]);||| 48 }||| 49 cout << ans % MOD;||| 50 return 0;||| 51 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 100005;||| 4 const int MOD = (int)1e9 + 7;||| 5 long long n, a[MAXN], sum_gcd[MAXN], mobius[MAXN], euler[MAXN], nxt[MAXN],||| 6 cnt[MAXN];||| 7 long long sum;||| 8 vector<long long> divisor[MAXN];||| 9 long long add(long long &a, long long b) { a += b; }||| 10 long long sub(long long &a, long long b) { a -= b; }||| 11 void update(int x, int val) {||| 12 for (int d : divisor[x]) {||| 13 sub(sum, euler[d] * cnt[d] * cnt[d]);||| 14 cnt[d] += val;||| 15 add(sum, euler[d] * cnt[d] * cnt[d]);||| 16 }||| 17 }||| 18 int main() {||| 19 for (int i = 1; i < MAXN; ++i)||| 20 for (int j = i; j < MAXN; j += i) divisor[j].push_back(i);||| 21 for (int i = 2; i < MAXN; ++i) {||| 22 for (int j = i; j < MAXN; j += i) {||| 23 if (nxt[j] == 0) nxt[j] = i;||| 24 }||| 25 }||| 26 mobius[1] = 1;||| 27 euler[1] = 1;||| 28 for (int i = 2; i < MAXN; ++i) {||| 29 int p = nxt[i];||| 30 if (p == nxt[i / p]) {||| 31 mobius[i] = 0;||| 32 euler[i] = euler[i / p] * p;||| 33 } else {||| 34 mobius[i] = -mobius[i / p];||| 35 euler[i] = euler[i / p] * (p - 1);||| 36 }||| 37 }||| 38 cin >> n;||| 39 for (int i = 1; i <= n; ++i) cin >> a[i];||| 40 for (int k = 1; k <= n; ++k) {||| 41 for (int i = k; i <= n; i += k) update(a[i], 1);||| 42 sum_gcd[k] = sum;||| 43 for (int i = k; i <= n; i += k) update(a[i], -1);||| 44 }||| 45 long long ans = 0;||| 46 for (int k = 1; k <= n; ++k) {||| 47 add(ans, euler[k] * sum_gcd[k]);||| 48 }||| 49 cout << ans;||| 50 return 0;||| 51 }||| 	49 cout << ans % MOD;
6	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void _do(vector<T> x) {||| 5 for (auto i : x) cerr << i << ' ';||| 6 cerr << ""\n"";||| 7 }||| 8 template <typename T>||| 9 void _do(set<T> x) {||| 10 for (auto i : x) cerr << i << ' ';||| 11 cerr << ""\n"";||| 12 }||| 13 template <typename T>||| 14 void _do(unordered_set<T> x) {||| 15 for (auto i : x) cerr << i << ' ';||| 16 cerr << ""\n"";||| 17 }||| 18 template <typename T>||| 19 void _do(T&& x) {||| 20 cerr << x << endl;||| 21 }||| 22 template <typename T, typename... S>||| 23 void _do(T&& x, S&&... y) {||| 24 cerr << x << "", "";||| 25 _do(y...);||| 26 }||| 27 template <typename T>||| 28 void print(T&& x) {||| 29 cout << x << ""\n"";||| 30 }||| 31 template <typename T, typename... S>||| 32 void print(T&& x, S&&... y) {||| 33 cout << x << ' ';||| 34 print(y...);||| 35 }||| 36 void solve() {||| 37 const int M = 1e5 + 1, MOD = 1e9 + 7;||| 38 vector<int> mu(M, -2);||| 39 vector<int> primes;||| 40 mu[1] = 1;||| 41 for (int i = 2; i < M; i++) {||| 42 if (mu[i] == -2) {||| 43 primes.push_back(i);||| 44 mu[i] = -1;||| 45 }||| 46 for (int p : primes) {||| 47 if (1LL * i * p >= M) break;||| 48 if (i % p == 0) {||| 49 mu[i * p] = 0;||| 50 break;||| 51 }||| 52 mu[i * p] = -mu[i];||| 53 }||| 54 }||| 55 vector<int> f(M);||| 56 for (int i = 1; i < M; i++)||| 57 for (int d = 1; i * d < M; d++) f[i * d] = (f[i * d] + mu[d] * i) % MOD;||| 58 int n;||| 59 cin >> n;||| 60 vector<vector<int>> fac(n + 1);||| 61 for (int i = 1; i <= n; i++) {||| 62 int a;||| 63 cin >> a;||| 64 for (int j = 1; 1LL * j * j <= a; j++)||| 65 if (a % j == 0) {||| 66 fac[i].push_back(j);||| 67 if (j * j != a) fac[i].push_back(a / j);||| 68 }||| 69 }||| 70 vector<int> cnt(M);||| 71 int ans = 0;||| 72 for (int T = 1; T <= n; T++) {||| 73 int G = 0;||| 74 vector<int> vec;||| 75 for (int i = 1; i * T <= n; i++) {||| 76 for (int p : fac[i * T])||| 77 if (cnt[p]++ == 0) vec.push_back(p);||| 78 }||| 79 for (int p : vec) G = (G + 1LL * f[p] * cnt[p] % MOD * cnt[p]) % MOD;||| 80 for (int i = 1; i * T <= n; i++) {||| 81 for (int p : fac[i * T]) cnt[p]--;||| 82 }||| 83 ans = (ans + 1LL * G * f[T]) % MOD;||| 84 }||| 85 if (ans < 0) ans += MOD;||| 86 cout << ans << endl;||| 87 }||| 88 int main() {||| 89 cin.tie(0), cout.tie(0);||| 90 ios::sync_with_stdio(false);||| 91 solve();||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void _do(vector<T> x) {||| 5 for (auto i : x) cerr << i << ' ';||| 6 cerr << ""\n"";||| 7 }||| 8 template <typename T>||| 9 void _do(set<T> x) {||| 10 for (auto i : x) cerr << i << ' ';||| 11 cerr << ""\n"";||| 12 }||| 13 template <typename T>||| 14 void _do(unordered_set<T> x) {||| 15 for (auto i : x) cerr << i << ' ';||| 16 cerr << ""\n"";||| 17 }||| 18 template <typename T>||| 19 void _do(T&& x) {||| 20 cerr << x << endl;||| 21 }||| 22 template <typename T, typename... S>||| 23 void _do(T&& x, S&&... y) {||| 24 cerr << x << "", "";||| 25 _do(y...);||| 26 }||| 27 template <typename T>||| 28 void print(T&& x) {||| 29 cout << x << ""\n"";||| 30 }||| 31 template <typename T, typename... S>||| 32 void print(T&& x, S&&... y) {||| 33 cout << x << ' ';||| 34 print(y...);||| 35 }||| 36 void solve() {||| 37 const int M = 1e5 + 1, MOD = 1e9 + 7;||| 38 vector<int> mu(M, -2);||| 39 vector<int> primes;||| 40 mu[1] = 1;||| 41 for (int i = 2; i < M; i++) {||| 42 if (mu[i] == -2) {||| 43 primes.push_back(i);||| 44 mu[i] = -1;||| 45 }||| 46 for (int p : primes) {||| 47 if (1LL * i * p >= M) break;||| 48 if (i % p == 0) {||| 49 mu[i * p] = 0;||| 50 break;||| 51 }||| 52 mu[i * p] = -mu[i];||| 53 }||| 54 }||| 55 vector<int> f(M);||| 56 for (int i = 1; i < M; i++)||| 57 for (int d = 1; i * d < M; d++) f[i * d] = (f[i * d] + mu[d] * i) % MOD;||| 58 int n;||| 59 cin >> n;||| 60 vector<vector<int>> fac(n + 1);||| 61 for (int i = 1; i <= n; i++) {||| 62 int a;||| 63 cin >> a;||| 64 for (int j = 1; 1LL * j * j <= a; j++)||| 65 if (a % j == 0) {||| 66 fac[i].push_back(j);||| 67 if (j * j != a) fac[i].push_back(a / j);||| 68 }||| 69 }||| 70 vector<int> cnt(M);||| 71 int ans = 0;||| 72 for (int T = 1; T <= n; T++) {||| 73 int G = 0;||| 74 vector<int> vec;||| 75 for (int i = 1; i * T <= n; i++) {||| 76 for (int p : fac[i * T])||| 77 if (cnt[p]++ == 0) vec.push_back(p);||| 78 }||| 79 for (int p : vec) G = (G + 1LL * f[p] * cnt[p] % MOD * cnt[p]) % MOD;||| 80 for (int i = 1; i * T <= n; i++) {||| 81 for (int p : fac[i * T]) cnt[p]--;||| 82 }||| 83 ans = (ans + G * f[T]) % MOD;||| 84 }||| 85 if (ans < 0) ans += MOD;||| 86 cout << ans << endl;||| 87 }||| 88 int main() {||| 89 cin.tie(0), cout.tie(0);||| 90 ios::sync_with_stdio(false);||| 91 solve();||| 92 }||| "	83 ans = (ans + 1LL * G * f[T]) % MOD;
7	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char p[1000005], q[1000005];||| 4 long long nxt[1000][2] = {0};||| 5 long long dp[2][505][505];||| 6 string x;||| 7 int main() {||| 8 long long t, n, m, i, j, k, l;||| 9 cin >> n >> m;||| 10 scanf(""%s"", p + 1);||| 11 scanf(""%s"", q + 1);||| 12 q[m + 1] = '2';||| 13 nxt[0][q[1] - '0'] = 1;||| 14 for (i = 1; i <= m; i++) {||| 15 for (l = 0; l <= 1; l++) {||| 16 for (j = 1; j <= i + 1; j++) {||| 17 string z = """", y = """";||| 18 for (k = j; k <= i; k++) z += q[k];||| 19 z += l + '0';||| 20 for (k = 1; k <= i - j + 2; k++) y += q[k];||| 21 if (y == z) nxt[i][l] = max(nxt[i][l], i - j + 2);||| 22 }||| 23 }||| 24 }||| 25 for (i = 0; i <= 1; i++)||| 26 for (j = 0; j <= 502; j++)||| 27 for (k = 0; k <= 502; k++) dp[i][j][k] = 1e17;||| 28 dp[0][0][0] = 0;||| 29 for (i = 0; i < n; i++) {||| 30 for (j = 0; j <= n; j++) {||| 31 for (k = 0; k <= m; k++) {||| 32 dp[!(i % 2)][j][k] = 1e17;||| 33 }||| 34 }||| 35 for (j = 0; j <= n; j++) {||| 36 for (k = 0; k <= m; k++) {||| 37 if (dp[i % 2][j][k] != 1e17) {||| 38 dp[!(i % 2)][j + (k == m)][nxt[k][0]] =||| 39 min(dp[!(i % 2)][j + (k == m)][nxt[k][0]],||| 40 dp[i % 2][j][k] + (p[i + 1] == '0' ? 0 : 1));||| 41 dp[!(i % 2)][j + (k == m)][nxt[k][1]] =||| 42 min(dp[!(i % 2)][j + (k == m)][nxt[k][1]],||| 43 dp[i % 2][j][k] + (p[i + 1] == '1' ? 0 : 1));||| 44 }||| 45 }||| 46 }||| 47 for (j = 0; j <= n; j++) {||| 48 for (k = 0; k <= m; k++) {||| 49 }||| 50 }||| 51 }||| 52 long long ans;||| 53 for (i = 0; i <= n - m + 1; i++) {||| 54 ans = 1e17;||| 55 for (j = 0; j < m; j++) {||| 56 ans = min(ans, dp[n % 2][i][j]);||| 57 }||| 58 if (i != 0) ans = min(ans, dp[n % 2][i - 1][m]);||| 59 if (ans == 1e17) ans = -1;||| 60 printf(""%lld "", ans);||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char p[1000005], q[1000005];||| 4 long long nxt[1000][2] = {0};||| 5 long long dp[2][505][505];||| 6 string x;||| 7 int main() {||| 8 long long t, n, m, i, j, k, l;||| 9 cin >> n >> m;||| 10 scanf(""%s"", p + 1);||| 11 scanf(""%s"", q + 1);||| 12 q[m + 1] = '2';||| 13 nxt[0][q[1] - '0'] = 1;||| 14 for (i = 1; i <= m; i++) {||| 15 for (l = 0; l <= 1; l++) {||| 16 for (j = 1; j <= i + 1; j++) {||| 17 string z = """", y = """";||| 18 for (k = j; k <= i; k++) z += q[k];||| 19 z += l + '0';||| 20 for (k = 1; k <= i - j + 2; k++) y += q[k];||| 21 if (y == z) nxt[i][l] = max(nxt[i][l], i - j + 2);||| 22 }||| 23 }||| 24 }||| 25 for (i = 0; i <= 1; i++)||| 26 for (j = 0; j <= 502; j++)||| 27 for (k = 0; k <= 502; k++) dp[i][j][k] = 1e17;||| 28 dp[0][0][0] = 0;||| 29 for (i = 0; i < n; i++) {||| 30 for (j = 0; j <= n; j++) {||| 31 for (k = 0; k <= m; k++) {||| 32 dp[!(i % 2)][j][k] = 1e17;||| 33 }||| 34 }||| 35 for (j = 0; j <= n; j++) {||| 36 for (k = 0; k <= m; k++) {||| 37 if (dp[i % 2][j][k] != 1e17) {||| 38 dp[!(i % 2)][j + (k == m)][nxt[k][0]] =||| 39 min(dp[!(i % 2)][j + (k == m)][nxt[k][0]],||| 40 dp[i % 2][j][k] + (p[i + 1] == '0' ? 0 : 1));||| 41 dp[!(i % 2)][j + (k == m)][nxt[k][1]] =||| 42 min(dp[!(i % 2)][j + (k == m)][nxt[k][1]],||| 43 dp[i % 2][j][k] + (p[i + 1] == '1' ? 0 : 1));||| 44 }||| 45 }||| 46 }||| 47 for (j = 0; j <= n; j++) {||| 48 for (k = 0; k <= m; k++) {||| 49 }||| 50 }||| 51 }||| 52 long long ans;||| 53 for (i = 0; i <= n + m - 1; i++) {||| 54 ans = 1e17;||| 55 for (j = 0; j < m; j++) {||| 56 ans = min(ans, dp[n % 2][i][j]);||| 57 }||| 58 if (i != 0) ans = min(ans, dp[n % 2][i - 1][m]);||| 59 if (ans == 1e17) ans = -1;||| 60 printf(""%lld "", ans);||| 61 }||| 62 return 0;||| 63 }||| "	53 for (i = 0; i <= n - m + 1; i++) {
7	20	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(2, 3, ""Ofast"")||| 3 using namespace std;||| 4 template <typename T1, typename T2>||| 5 void ckmin(T1 &a, T2 b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename T1, typename T2>||| 9 void ckmax(T1 &a, T2 b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int read() {||| 13 int x = 0, f = 0;||| 14 char ch = getchar();||| 15 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 16 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 17 return f ? -x : x;||| 18 }||| 19 template <typename T>||| 20 void print(T x) {||| 21 if (x < 0) putchar('-'), x = -x;||| 22 if (x >= 10) print(x / 10);||| 23 putchar(x % 10 + '0');||| 24 }||| 25 template <typename T>||| 26 void print(T x, char let) {||| 27 print(x), putchar(let);||| 28 }||| 29 const int N = 505;||| 30 char a[N], b[N];||| 31 int go[N][2], dp[2][N][N];||| 32 int kmp[N];||| 33 int n, m;||| 34 int main() {||| 35 n = read(), m = read();||| 36 scanf(""%s"", a + 1);||| 37 for (int i = 1; i <= n; i++) a[i] -= '0';||| 38 scanf(""%s"", b + 1);||| 39 for (int i = 1; i <= m; i++) b[i] -= '0';||| 40 b[m + 1] = 114;||| 41 for (int i = 2, j = 0; i <= m; i++) {||| 42 while (j && b[i] != b[j + 1]) j = kmp[j];||| 43 if (b[i] == b[j + 1]) j++;||| 44 kmp[i] = j;||| 45 }||| 46 for (int i = 0; i <= m; i++) {||| 47 for (int j = 0; j < 2; j++) {||| 48 int t = i;||| 49 while (t && j != b[t + 1]) t = kmp[t];||| 50 if (j == b[t + 1]) t++;||| 51 go[i][j] = t;||| 52 }||| 53 }||| 54 memset(dp, 0x3f, sizeof(dp));||| 55 dp[0][0][0] = 0;||| 56 int now = 0;||| 57 for (int i = 1; i <= n; i++) {||| 58 now ^= 1;||| 59 memset(dp[now], 0x3f, sizeof(dp[now]));||| 60 for (int j = 0; j <= m; j++) {||| 61 for (int k = 0; k <= i; k++) {||| 62 for (int t = 0; t < 2; t++) {||| 63 int coef = t != a[i];||| 64 ckmin(dp[now][go[j][t]][k + (go[j][t] == m)],||| 65 dp[now ^ 1][j][k] + coef);||| 66 }||| 67 }||| 68 }||| 69 }||| 70 for (int k = 0; k <= n - m + 1; k++) {||| 71 int t = 1e9;||| 72 for (int j = 0; j <= m; j++) ckmin(t, dp[now][j][k]);||| 73 if (t == 1e9) t = -1;||| 74 print(t, "" \n""[k == n - m + 1]);||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(2, 3, ""Ofast"")||| 3 using namespace std;||| 4 template <typename T1, typename T2>||| 5 void ckmin(T1 &a, T2 b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename T1, typename T2>||| 9 void ckmax(T1 &a, T2 b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int read() {||| 13 int x = 0, f = 0;||| 14 char ch = getchar();||| 15 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 16 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 17 return f ? -x : x;||| 18 }||| 19 template <typename T>||| 20 void print(T x) {||| 21 if (x < 0) putchar('-'), x = -x;||| 22 if (x >= 10) print(x / 10);||| 23 putchar(x % 10 + '0');||| 24 }||| 25 template <typename T>||| 26 void print(T x, char let) {||| 27 print(x), putchar(let);||| 28 }||| 29 const int N = 505;||| 30 char a[N], b[N];||| 31 int go[N][2], dp[2][N][N];||| 32 int kmp[N];||| 33 int n, m;||| 34 int main() {||| 35 n = read(), m = read();||| 36 scanf(""%s"", a + 1);||| 37 for (int i = 1; i <= n; i++) a[i] -= '0';||| 38 scanf(""%s"", b + 1);||| 39 for (int i = 1; i <= m; i++) b[i] -= '0';||| 40 b[m + 1] = 114;||| 41 for (int i = 2, j = 0; i <= m; i++) {||| 42 while (j && b[i] != b[j + 1]) j = kmp[j];||| 43 if (b[i] == b[j + 1]) j++;||| 44 kmp[i] = j;||| 45 }||| 46 for (int i = 0; i <= m; i++) {||| 47 for (int j = 0; j < 2; j++) {||| 48 int t = i;||| 49 while (t && j != b[t + 1]) t = kmp[t];||| 50 if (j == b[t + 1]) t++;||| 51 go[i][j] = t;||| 52 }||| 53 }||| 54 memset(dp, 0x3f, sizeof(dp));||| 55 dp[0][0][0] = 0;||| 56 int now = 0;||| 57 for (int i = 1; i <= n; i++) {||| 58 now ^= 1;||| 59 memset(dp[now], 0x3f, sizeof(dp[now]));||| 60 for (int j = 0; j <= m; j++) {||| 61 for (int k = 0; k <= i; k++) {||| 62 for (int t = 0; t < 2; t++) {||| 63 int coef = t != a[i];||| 64 ckmin(dp[now][go[j][t]][k + (go[j][t] == m)],||| 65 dp[now ^ 1][j][k] + coef);||| 66 }||| 67 }||| 68 }||| 69 }||| 70 for (int k = 0; k <= n - m + 1; k++) {||| 71 int t = 1e9;||| 72 for (int j = 1; j <= m; j++) ckmin(t, dp[now][j][k]);||| 73 if (t == 1e9) t = -1;||| 74 print(t, "" \n""[k == n - m + 1]);||| 75 }||| 76 return 0;||| 77 }||| "	72 for (int j = 0; j <= m; j++) ckmin(t, dp[now][j][k]);
7	5	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 int a[510], b[510], c[510];||| 5 int dp[2][510][510];||| 6 int nxt[510][2], nxtm;||| 7 int main() {||| 8 scanf(""%d%d"", &n, &m);||| 9 for (int i = 1; i <= n; ++i) {||| 10 scanf(""%1d"", &a[i]);||| 11 }||| 12 for (int i = 1; i <= m; ++i) {||| 13 scanf(""%1d"", &b[i]);||| 14 }||| 15 if (b[1] == 0)||| 16 nxt[0][0] = 1;||| 17 else||| 18 nxt[0][1] = 1;||| 19 for (int j = 2; j <= m; ++j) {||| 20 bool flag = 0;||| 21 for (int k = j; k <= m; ++k) {||| 22 if (b[k] != b[k - j + 1]) {||| 23 flag = 1;||| 24 }||| 25 }||| 26 if (!flag) {||| 27 nxtm = m - j + 1;||| 28 break;||| 29 }||| 30 }||| 31 for (int i = 1; i < m; ++i) {||| 32 c[i] = b[i];||| 33 if (b[i + 1] == 0) {||| 34 nxt[i][0] = i + 1;||| 35 c[i + 1] = 1;||| 36 for (int j = 1; j <= i + 1; ++j) {||| 37 bool flag = 0;||| 38 for (int k = j; k <= i + 1; ++k) {||| 39 if (c[k] != b[k - j + 1]) {||| 40 flag = 1;||| 41 }||| 42 }||| 43 if (!flag) {||| 44 nxt[i][1] = i + 2 - j;||| 45 break;||| 46 }||| 47 }||| 48 } else {||| 49 nxt[i][1] = i + 1;||| 50 c[i + 1] = 0;||| 51 for (int j = 1; j <= i + 1; ++j) {||| 52 bool flag = 0;||| 53 for (int k = j; k <= i + 1; ++k) {||| 54 if (c[k] != b[k - j + 1]) {||| 55 flag = 1;||| 56 }||| 57 }||| 58 if (!flag) {||| 59 nxt[i][0] = i + 2 - j;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 int now = 0, per = 1;||| 66 for (int j = 0; j <= n; ++j) {||| 67 for (int k = 0; k < m; ++k) {||| 68 dp[now][j][k] = dp[per][j][k] = 0x3f3f3f3f;||| 69 }||| 70 }||| 71 dp[per][0][0] = 0;||| 72 for (int i = 1; i <= n; ++i) {||| 73 for (int j = 0; j <= n; ++j) {||| 74 for (int k = 0; k < m; ++k) {||| 75 dp[now][j][k] = 0x3f3f3f3f;||| 76 }||| 77 }||| 78 for (int j = 0; j <= n; ++j) {||| 79 for (int k = 0; k < m; ++k) {||| 80 if (dp[per][j][k] != 0x3f3f3f3f) {||| 81 int nxtk = nxt[k][a[i]];||| 82 int nxtj = j;||| 83 if (nxtk == m) {||| 84 nxtj++;||| 85 nxtk = nxtm;||| 86 }||| 87 dp[now][nxtj][nxtk] = min(dp[now][nxtj][nxtk], dp[per][j][k]);||| 88 nxtk = nxt[k][!a[i]];||| 89 nxtj = j;||| 90 if (nxtk == m) {||| 91 nxtj++;||| 92 nxtk = nxtm;||| 93 }||| 94 dp[now][nxtj][nxtk] = min(dp[now][nxtj][nxtk], dp[per][j][k] + 1);||| 95 }||| 96 }||| 97 }||| 98 per++;||| 99 now++;||| 100 per %= 2;||| 101 now %= 2;||| 102 }||| 103 for (int i = 0; i <= n - m + 1; ++i) {||| 104 int minn = 0x3f3f3f3f;||| 105 for (int j = 0; j < m; ++j) {||| 106 minn = min(minn, dp[per][i][j]);||| 107 }||| 108 if (minn == 0x3f3f3f3f) {||| 109 printf(""-1 "");||| 110 } else||| 111 printf(""%d "", minn);||| 112 }||| 113 return 0;||| 114 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 int a[510], b[510], c[510];||| 5 int dp[2][510][510];||| 6 int nxt[510][2], nxtm;||| 7 int main() {||| 8 scanf(""%d%d"", &n, &m);||| 9 for (int i = 1; i <= n; ++i) {||| 10 scanf(""%1d"", &a[i]);||| 11 }||| 12 for (int i = 1; i <= m; ++i) {||| 13 scanf(""%1d"", &b[i]);||| 14 }||| 15 if (b[1] == 0)||| 16 nxt[0][0] = 1;||| 17 else||| 18 nxt[0][1] = 1;||| 19 for (int j = 2; j <= m; ++j) {||| 20 bool flag = 0;||| 21 for (int k = j; k <= m; ++k) {||| 22 if (b[k] != b[k - j + 1]) {||| 23 flag = 1;||| 24 }||| 25 }||| 26 if (!flag) {||| 27 nxtm = m - j + 1;||| 28 break;||| 29 }||| 30 }||| 31 for (int i = 1; i < m; ++i) {||| 32 c[i] = b[i];||| 33 if (b[i + 1] == 0) {||| 34 nxt[i][0] = i + 1;||| 35 c[i + 1] = 1;||| 36 for (int j = 1; j <= i + 1; ++j) {||| 37 bool flag = 0;||| 38 for (int k = j; k <= i + 1; ++k) {||| 39 if (c[k] != b[k - j + 1]) {||| 40 flag = 1;||| 41 }||| 42 }||| 43 if (!flag) {||| 44 nxt[i][1] = i + 2 - j;||| 45 break;||| 46 }||| 47 }||| 48 } else {||| 49 nxt[i][1] = i + 1;||| 50 c[i + 1] = 0;||| 51 for (int j = 1; j <= i + 1; ++j) {||| 52 bool flag = 0;||| 53 for (int k = j; k <= i + 1; ++k) {||| 54 if (c[k] != b[k - j + 1]) {||| 55 flag = 1;||| 56 }||| 57 }||| 58 if (!flag) {||| 59 nxt[i][1] = i + 2 - j;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 int now = 0, per = 1;||| 66 for (int j = 0; j <= n; ++j) {||| 67 for (int k = 0; k < m; ++k) {||| 68 dp[now][j][k] = dp[per][j][k] = 0x3f3f3f3f;||| 69 }||| 70 }||| 71 dp[per][0][0] = 0;||| 72 for (int i = 1; i <= n; ++i) {||| 73 for (int j = 0; j <= n; ++j) {||| 74 for (int k = 0; k < m; ++k) {||| 75 dp[now][j][k] = 0x3f3f3f3f;||| 76 }||| 77 }||| 78 for (int j = 0; j <= n; ++j) {||| 79 for (int k = 0; k < m; ++k) {||| 80 if (dp[per][j][k] != 0x3f3f3f3f) {||| 81 int nxtk = nxt[k][a[i]];||| 82 int nxtj = j;||| 83 if (nxtk == m) {||| 84 nxtj++;||| 85 nxtk = nxtm;||| 86 }||| 87 dp[now][nxtj][nxtk] = min(dp[now][nxtj][nxtk], dp[per][j][k]);||| 88 nxtk = nxt[k][!a[i]];||| 89 nxtj = j;||| 90 if (nxtk == m) {||| 91 nxtj++;||| 92 nxtk = nxtm;||| 93 }||| 94 dp[now][nxtj][nxtk] = min(dp[now][nxtj][nxtk], dp[per][j][k] + 1);||| 95 }||| 96 }||| 97 }||| 98 per++;||| 99 now++;||| 100 per %= 2;||| 101 now %= 2;||| 102 }||| 103 for (int i = 0; i <= n - m + 1; ++i) {||| 104 int minn = 0x3f3f3f3f;||| 105 for (int j = 0; j < m; ++j) {||| 106 minn = min(minn, dp[per][i][j]);||| 107 }||| 108 if (minn == 0x3f3f3f3f) {||| 109 printf(""-1 "");||| 110 } else||| 111 printf(""%d "", minn);||| 112 }||| 113 return 0;||| 114 }||| "	59 nxt[i][0] = i + 2 - j;
7	12	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 cin.tie(0), cout.tie(0);||| 5 ios::sync_with_stdio(false);||| 6 int n, m;||| 7 cin >> n >> m;||| 8 string a, b;||| 9 cin >> a >> b;||| 10 vector<int> fail(m + 1);||| 11 fail[0] = fail[1] = 0;||| 12 for (int i = 1; i < m; i++) {||| 13 int j = fail[i];||| 14 while (j && b[i] != b[j]) j = fail[j];||| 15 fail[i + 1] = b[i] == b[j] ? j + 1 : 0;||| 16 }||| 17 vector<vector<int>> quick_f(m + 1, vector<int>(2));||| 18 for (int i = 0; i <= m; i++) {||| 19 for (int j = 0; j < 2; j++) {||| 20 int k = fail[i];||| 21 while (k && '0' + j != b[k]) k = fail[k];||| 22 quick_f[i][j] = '0' + j == b[k] ? k + 1 : k;||| 23 }||| 24 }||| 25 auto update_min = [](int &x, int y) {||| 26 if (x == -1 || y < x) x = y;||| 27 };||| 28 vector<vector<int>> f(n - m + 2, vector<int>(m, -1));||| 29 f[0][0] = 0;||| 30 for (int i = 0; i < n; i++) {||| 31 vector<vector<int>> g(n - m + 2, vector<int>(m, -1));||| 32 for (int j = 0; j <= n - m + 1; j++) {||| 33 for (int k = 0; k < m; k++) {||| 34 if (f[j][k] == -1) continue;||| 35 int cost;||| 36 cost = a[i] == b[k] ? 0 : 1;||| 37 if (k + 1 == m) {||| 38 update_min(g[j + 1][fail[m]], f[j][k] + cost);||| 39 } else {||| 40 update_min(g[j][k + 1], f[j][k] + cost);||| 41 }||| 42 cost = a[i] == b[k] ? 1 : 0;||| 43 int idx = b[k] - '0';||| 44 int nk = quick_f[k][1 - idx];||| 45 update_min(g[j][nk], f[j][k] + cost);||| 46 }||| 47 }||| 48 f = g;||| 49 }||| 50 for (int i = 0; i <= n - m + 1; i++) {||| 51 int v = -1;||| 52 for (int j = 0; j < m; j++)||| 53 if (f[i][j] != -1) update_min(v, f[i][j]);||| 54 cout << v << "" \n""[i == n - m + 1];||| 55 }||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 cin.tie(0), cout.tie(0);||| 5 ios::sync_with_stdio(false);||| 6 int n, m;||| 7 cin >> n >> m;||| 8 string a, b;||| 9 cin >> a >> b;||| 10 vector<int> fail(m + 1);||| 11 fail[0] = fail[1] = 0;||| 12 for (int i = 1; i < m; i++) {||| 13 int j = fail[i];||| 14 while (j && b[i] != b[j]) j = fail[j];||| 15 fail[i + 1] = b[i] == b[j] ? j + 1 : 0;||| 16 }||| 17 vector<vector<int>> quick_f(m + 1, vector<int>(2));||| 18 for (int i = 0; i <= m; i++) {||| 19 for (int j = 0; j < 2; j++) {||| 20 int k = fail[i];||| 21 while (k && '0' + j != b[k]) k = fail[k];||| 22 quick_f[i][j] = '0' + j == b[k] ? k + 1 : k;||| 23 }||| 24 }||| 25 auto update_min = [](int &x, int y) {||| 26 if (x == -1 || y < x) x = y;||| 27 };||| 28 vector<vector<int>> f(n - m + 2, vector<int>(m, -1));||| 29 f[0][0] = 0;||| 30 for (int i = 0; i < n; i++) {||| 31 vector<vector<int>> g(n - m + 2, vector<int>(m, -1));||| 32 for (int j = 0; j <= n - m + 1; j++) {||| 33 for (int k = 0; k < m; k++) {||| 34 if (f[j][k] == -1) continue;||| 35 int cost;||| 36 cost = a[i] == b[k] ? 0 : 1;||| 37 if (k + 1 == m) {||| 38 update_min(g[j + 1][fail[m]], f[j][k] + cost);||| 39 } else {||| 40 update_min(g[j][k + 1], f[j][k] + cost);||| 41 }||| 42 cost = a[i] == b[k] ? 1 : 0;||| 43 int idx = b[k] - '0';||| 44 int nk = quick_f[nk][1 - idx];||| 45 update_min(g[j][nk], f[j][k] + cost);||| 46 }||| 47 }||| 48 f = g;||| 49 }||| 50 for (int i = 0; i <= n - m + 1; i++) {||| 51 int v = -1;||| 52 for (int j = 0; j < m; j++)||| 53 if (f[i][j] != -1) update_min(v, f[i][j]);||| 54 cout << v << "" \n""[i == n - m + 1];||| 55 }||| 56 }||| "	44 int nk = quick_f[k][1 - idx];
7	0	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 short D[501][501][501], PI[500], RPI[500][2];||| 4 string s, t;||| 5 void getPI(const string& s) {||| 6 int N = s.size(), j = 0;||| 7 for (int i = 1; i < N; i++) {||| 8 while (j && s[i] != s[j]) j = PI[j - 1];||| 9 if (s[i] == s[j]) PI[i] = ++j;||| 10 }||| 11 }||| 12 int get_pos(int p, char v) {||| 13 if (p == 0 || t[p] == v) return RPI[p][v - '0'] = p;||| 14 if (RPI[p][v - '0'] > -1) return RPI[p][v - '0'];||| 15 return RPI[p][v - '0'] = get_pos(PI[p - 1], v);||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int N, M, m, v;||| 21 cin >> N >> M >> s >> t;||| 22 getPI(t);||| 23 memset(RPI, -1, sizeof(RPI));||| 24 memset(D, 0x7f, sizeof(D));||| 25 if (s[0] == t[0]) {||| 26 if (M == 1)||| 27 D[0][0][1] = 0;||| 28 else||| 29 D[0][1][0] = 0;||| 30 D[0][0][0] = 1;||| 31 } else {||| 32 if (M == 1)||| 33 D[0][0][1] = 1;||| 34 else||| 35 D[0][1][0] = 1;||| 36 D[0][0][0] = 0;||| 37 }||| 38 for (int i = 1; i < N; i++)||| 39 for (int j = 0; j <= i; j++)||| 40 for (int k = 0; k <= i; k++)||| 41 if ((m = D[i - 1][j][k]) <= N) {||| 42 v = j;||| 43 if (v && s[i] != t[v]) v = get_pos(v, s[i]);||| 44 if (s[i] == t[v]) {||| 45 if (++v == M)||| 46 D[i][PI[M - 1]][k + 1] = min(D[i][PI[M - 1]][k + 1], (short)m);||| 47 else||| 48 D[i][v][k] = min(D[i][v][k], (short)m);||| 49 } else||| 50 D[i][v][k] = min(D[i][v][k], (short)m);||| 51 v = j;||| 52 if (v && s[i] == t[v]) v = get_pos(v, '1' - s[i] + '0');||| 53 if (s[i] != t[v]) {||| 54 if (++v == M)||| 55 D[i][PI[M - 1]][k + 1] =||| 56 min(D[i][PI[M - 1]][k + 1], (short)(m + 1));||| 57 else||| 58 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 59 } else||| 60 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 61 }||| 62 for (int i = 0; i < N - M + 2; i++) {||| 63 m = N + M;||| 64 for (int j = 0; j < M; j++) m = min((short)m, D[N - 1][j][i]);||| 65 cout << (m <= N ? m : -1) << ' ';||| 66 }||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 short D[501][501][501], PI[500], RPI[500][2];||| 4 string s, t;||| 5 void getPI(const string& s) {||| 6 int N = s.size(), j = 0;||| 7 for (int i = 1; i < N; i++) {||| 8 while (j && s[i] != s[j]) j = PI[j - 1];||| 9 if (s[i] == s[j]) PI[i] = ++j;||| 10 }||| 11 }||| 12 int get_pos(int p, char v) {||| 13 if (p == 0 || t[p] == v) return RPI[p][v - '0'] = p;||| 14 if (RPI[p][v - '0'] > -1) return RPI[p][v - '0'];||| 15 return RPI[p][v - '0'] = get_pos(PI[p - 1], v);||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int N, M, m, v;||| 21 cin >> N >> M >> s >> t;||| 22 getPI(t);||| 23 memset(RPI, -1, sizeof(RPI));||| 24 memset(D, 0x7f, sizeof(D));||| 25 if (s[0] == t[0]) {||| 26 if (M == 1)||| 27 D[0][0][1] = 0;||| 28 else||| 29 D[0][1][0] = 0;||| 30 D[0][0][0] = 1;||| 31 } else {||| 32 if (M == 1)||| 33 D[0][0][1] = 1;||| 34 else||| 35 D[0][1][0] = 1;||| 36 D[0][0][0] = 1;||| 37 }||| 38 for (int i = 1; i < N; i++)||| 39 for (int j = 0; j <= i; j++)||| 40 for (int k = 0; k <= i; k++)||| 41 if ((m = D[i - 1][j][k]) <= N) {||| 42 v = j;||| 43 if (v && s[i] != t[v]) v = get_pos(v, s[i]);||| 44 if (s[i] == t[v]) {||| 45 if (++v == M)||| 46 D[i][PI[M - 1]][k + 1] = min(D[i][PI[M - 1]][k + 1], (short)m);||| 47 else||| 48 D[i][v][k] = min(D[i][v][k], (short)m);||| 49 } else||| 50 D[i][v][k] = min(D[i][v][k], (short)m);||| 51 v = j;||| 52 if (v && s[i] == t[v]) v = get_pos(v, '1' - s[i] + '0');||| 53 if (s[i] != t[v]) {||| 54 if (++v == M)||| 55 D[i][PI[M - 1]][k + 1] =||| 56 min(D[i][PI[M - 1]][k + 1], (short)(m + 1));||| 57 else||| 58 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 59 } else||| 60 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 61 }||| 62 for (int i = 0; i < N - M + 2; i++) {||| 63 m = N + M;||| 64 for (int j = 0; j < M; j++) m = min((short)m, D[N - 1][j][i]);||| 65 cout << (m <= N ? m : -1) << ' ';||| 66 }||| 67 return 0;||| 68 }||| 	36 D[0][0][0] = 0;
7	33	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 short D[501][501][501], PI[500], RPI[500][2];||| 4 string s, t;||| 5 void getPI(const string& s) {||| 6 int N = s.size(), j = 0;||| 7 for (int i = 1; i < N; i++) {||| 8 while (j && s[i] != s[j]) j = PI[j - 1];||| 9 if (s[i] == s[j]) PI[i] = ++j;||| 10 }||| 11 }||| 12 int get_pos(int p, char v) {||| 13 if (p == 0 || t[p] == v) return RPI[p][v - '0'] = p;||| 14 if (RPI[p][v - '0'] > -1) return RPI[p][v - '0'];||| 15 return RPI[p][v - '0'] = get_pos(PI[p - 1], v);||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int N, M, m, v;||| 21 cin >> N >> M >> s >> t;||| 22 getPI(t);||| 23 memset(RPI, -1, sizeof(RPI));||| 24 memset(D, 0x7f, sizeof(D));||| 25 if (s[0] == t[0]) {||| 26 if (M == 1)||| 27 D[0][0][1] = 0;||| 28 else||| 29 D[0][1][0] = 0;||| 30 D[0][0][0] = 1;||| 31 } else {||| 32 if (M == 1)||| 33 D[0][0][1] = 1;||| 34 else||| 35 D[0][1][0] = 1;||| 36 D[0][0][0] = 0;||| 37 }||| 38 for (int i = 1; i < N; i++)||| 39 for (int j = 0; j <= i; j++)||| 40 for (int k = 0; k <= i; k++)||| 41 if ((m = D[i - 1][j][k]) <= N) {||| 42 v = j;||| 43 if (v && s[i] != t[v]) v = get_pos(v, s[i]);||| 44 if (s[i] == t[v]) {||| 45 if (++v == M)||| 46 D[i][PI[M - 1]][k + 1] = min(D[i][PI[M - 1]][k + 1], (short)m);||| 47 else||| 48 D[i][v][k] = min(D[i][v][k], (short)m);||| 49 } else||| 50 D[i][v][k] = min(D[i][v][k], (short)m);||| 51 v = j;||| 52 if (v && s[i] == t[v]) v = get_pos(v, '1' - s[i] + '0');||| 53 if (s[i] != t[v]) {||| 54 if (++v == M)||| 55 D[i][PI[M - 1]][k + 1] =||| 56 min(D[i][PI[M - 1]][k + 1], (short)(m + 1));||| 57 else||| 58 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 59 } else||| 60 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 61 }||| 62 for (int i = 0; i < N - M + 2; i++) {||| 63 m = N + M;||| 64 for (int j = 0; j < M; j++) m = min((short)m, D[N - 1][j][i]);||| 65 cout << (m <= N ? m : -1) << ' ';||| 66 }||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 short D[501][501][501], PI[500], RPI[500][2];||| 4 string s, t;||| 5 void getPI(const string& s) {||| 6 int N = s.size(), j = 0;||| 7 for (int i = 1; i < N; i++) {||| 8 while (j && s[i] != s[j]) j = PI[j - 1];||| 9 if (s[i] == s[j]) PI[i] = ++j;||| 10 }||| 11 }||| 12 int get_pos(int p, char v) {||| 13 if (p == 0 || t[p] == v) return RPI[p][v - '0'] = p;||| 14 if (RPI[p][v - '0'] > -1) return RPI[p][v - '0'];||| 15 return RPI[p][v - '0'] = get_pos(PI[p - 1], v);||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int N, M, m, v;||| 21 cin >> N >> M >> s >> t;||| 22 getPI(t);||| 23 memset(RPI, -1, sizeof(RPI));||| 24 memset(D, 0x7f, sizeof(D));||| 25 if (s[0] == t[0]) {||| 26 if (M == 1)||| 27 D[0][0][1] = 0;||| 28 else||| 29 D[0][1][0] = 0;||| 30 D[0][0][0] = 0;||| 31 } else {||| 32 if (M == 1)||| 33 D[0][0][1] = 1;||| 34 else||| 35 D[0][1][0] = 1;||| 36 D[0][0][0] = 1;||| 37 }||| 38 for (int i = 1; i < N; i++)||| 39 for (int j = 0; j <= i; j++)||| 40 for (int k = 0; k <= i; k++)||| 41 if ((m = D[i - 1][j][k]) <= N) {||| 42 v = j;||| 43 if (v && s[i] != t[v]) v = get_pos(v, s[i]);||| 44 if (s[i] == t[v]) {||| 45 if (++v == M)||| 46 D[i][PI[M - 1]][k + 1] = min(D[i][PI[M - 1]][k + 1], (short)m);||| 47 else||| 48 D[i][v][k] = min(D[i][v][k], (short)m);||| 49 } else||| 50 D[i][v][k] = min(D[i][v][k], (short)m);||| 51 v = j;||| 52 if (v && s[i] == t[v]) v = get_pos(v, '1' - s[i] + '0');||| 53 if (s[i] != t[v]) {||| 54 if (++v == M)||| 55 D[i][PI[M - 1]][k + 1] =||| 56 min(D[i][PI[M - 1]][k + 1], (short)(m + 1));||| 57 else||| 58 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 59 } else||| 60 D[i][v][k] = min(D[i][v][k], (short)(m + 1));||| 61 }||| 62 for (int i = 0; i < N - M + 2; i++) {||| 63 m = N + M;||| 64 for (int j = 0; j < M; j++) m = min((short)m, D[N - 1][j][i]);||| 65 cout << (m <= N ? m : -1) << ' ';||| 66 }||| 67 return 0;||| 68 }||| 	30 D[0][0][0] = 1;
8	21	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 50;||| 4 int n, q, dfn[N], rr[N], cnt, f[N][20], d[N], a[N];||| 5 long long bit[N];||| 6 vector<int> v[N];||| 7 void dfs(int x, int ff) {||| 8 dfn[x] = ++cnt;||| 9 f[x][0] = ff;||| 10 d[x] = d[ff] + 1;||| 11 for (int i = 0; i < 18; i++) f[x][i + 1] = f[f[x][i]][i];||| 12 for (int i = 0; i < v[x].size(); i++) {||| 13 int y = v[x][i];||| 14 if (y == ff) continue;||| 15 dfs(y, x);||| 16 }||| 17 rr[x] = cnt;||| 18 }||| 19 int lca(int x, int y) {||| 20 if (d[x] < d[y]) swap(x, y);||| 21 for (int i = 18; ~i; i--)||| 22 if (d[f[x][i]] >= d[y]) x = f[x][i];||| 23 if (x == y) return x;||| 24 for (int i = 18; ~i; i--)||| 25 if (f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];||| 26 return f[x][0];||| 27 }||| 28 void add(int x, int y) {||| 29 for (; x <= n; x += x & -x) bit[x] += y;||| 30 }||| 31 long long ask(int x) {||| 32 long long z = 0;||| 33 for (; x; x -= x & -x) z += bit[x];||| 34 return z;||| 35 }||| 36 int main() {||| 37 scanf(""%d%d"", &n, &q);||| 38 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]), a[i] = abs(a[i]);||| 39 for (int i = 1, x, y; i < n; i++) {||| 40 scanf(""%d%d"", &x, &y);||| 41 v[x].push_back(y);||| 42 v[y].push_back(x);||| 43 }||| 44 dfs(1, 0);||| 45 for (int i = 1; i <= n; i++) add(dfn[i], a[i]), add(rr[i] + 1, -a[i]);||| 46 for (int i = 1, op, x, y; i <= q; i++) {||| 47 scanf(""%d%d%d"", &op, &x, &y);||| 48 if (op == 1) {||| 49 add(dfn[x], -a[x]);||| 50 add(rr[x] + 1, a[x]);||| 51 add(dfn[x], a[x] = abs(y));||| 52 add(rr[x] + 1, -a[x]);||| 53 } else {||| 54 int z = lca(x, y), zz = f[z][0];||| 55 printf(""%lld\n"",||| 56 2 * (ask(dfn[x]) + ask(dfn[y]) - ask(dfn[z]) - ask(dfn[zz])) -||| 57 a[x] - a[y]);||| 58 }||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 50;||| 4 int n, q, dfn[N], rr[N], cnt, f[N][20], d[N], a[N];||| 5 long long bit[N];||| 6 vector<int> v[N];||| 7 void dfs(int x, int ff) {||| 8 dfn[x] = ++cnt;||| 9 f[x][0] = ff;||| 10 d[x] = d[ff] + 1;||| 11 for (int i = 0; i < 18; i++) f[x][i + 1] = f[f[x][i]][i];||| 12 for (int i = 0; i < v[x].size(); i++) {||| 13 int y = v[x][i];||| 14 if (y == ff) continue;||| 15 dfs(y, x);||| 16 }||| 17 rr[x] = cnt;||| 18 }||| 19 int lca(int x, int y) {||| 20 if (d[x] < d[y]) swap(x, y);||| 21 for (int i = 18; i; i--)||| 22 if (d[f[x][i]] >= d[y]) x = f[x][i];||| 23 if (x == y) return x;||| 24 for (int i = 18; i; i--)||| 25 if (f[x][i] != f[y][i]) x = f[x][i], y = f[y][i];||| 26 return f[x][0];||| 27 }||| 28 void add(int x, int y) {||| 29 for (; x <= n; x += x & -x) bit[x] += y;||| 30 }||| 31 long long ask(int x) {||| 32 long long z = 0;||| 33 for (; x; x -= x & -x) z += bit[x];||| 34 return z;||| 35 }||| 36 int main() {||| 37 scanf(""%d%d"", &n, &q);||| 38 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]), a[i] = abs(a[i]);||| 39 for (int i = 1, x, y; i < n; i++) {||| 40 scanf(""%d%d"", &x, &y);||| 41 v[x].push_back(y);||| 42 v[y].push_back(x);||| 43 }||| 44 dfs(1, 0);||| 45 for (int i = 1; i <= n; i++) add(dfn[i], a[i]), add(rr[i] + 1, -a[i]);||| 46 for (int i = 1, op, x, y; i <= q; i++) {||| 47 scanf(""%d%d%d"", &op, &x, &y);||| 48 if (op == 1) {||| 49 add(dfn[x], -a[x]);||| 50 add(rr[x] + 1, a[x]);||| 51 add(dfn[x], a[x] = abs(y));||| 52 add(rr[x] + 1, -a[x]);||| 53 } else {||| 54 int z = lca(x, y), zz = f[z][0];||| 55 printf(""%lld\n"",||| 56 2 * (ask(dfn[x]) + ask(dfn[y]) - ask(dfn[z]) - ask(dfn[zz])) -||| 57 a[x] - a[y]);||| 58 }||| 59 }||| 60 return 0;||| 61 }||| "	21 for (int i = 18; ~i; i--)
9	25	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 1000;||| 4 int N, M, K;||| 5 int a[NMAX + 2][NMAX + 2];||| 6 struct state {||| 7 int dad, sz;||| 8 int down;||| 9 };||| 10 state ds[NMAX + 2][NMAX + 2];||| 11 bool active[NMAX + 2][NMAX + 2];||| 12 int root(int col, int p) {||| 13 if (ds[p][col].dad != p) {||| 14 return ds[p][col].dad = root(col, ds[p][col].dad);||| 15 }||| 16 return p;||| 17 }||| 18 void join(int col, int p, int q) {||| 19 p = root(col, p);||| 20 q = root(col, q);||| 21 if (ds[p][col].sz > ds[q][col].sz) {||| 22 swap(p, q);||| 23 }||| 24 ds[p][col].dad = q;||| 25 ds[q][col].sz += ds[p][col].sz;||| 26 ds[q][col].down = max(ds[q][col].down, ds[p][col].down);||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(nullptr);||| 31 cin >> N >> M >> K;||| 32 for (int i = 1; i <= N; i++) {||| 33 for (int j = 1; j <= M; j++) {||| 34 cin >> a[i][j];||| 35 ds[i][j].dad = i;||| 36 ds[i][j].sz = 1;||| 37 ds[i][j].down = i;||| 38 }||| 39 }||| 40 for (int i = 1; i <= N; i++) {||| 41 for (int j = 1; j <= M; j++) {||| 42 if (a[i][j] == 2) {||| 43 active[i][j] = true;||| 44 if (active[i - 1][j] == true) {||| 45 join(j, i - 1, i);||| 46 }||| 47 }||| 48 }||| 49 }||| 50 for (int i = 1; i <= K; i++) {||| 51 int x = 1, y;||| 52 cin >> y;||| 53 while (true) {||| 54 if (active[x][y] == true) {||| 55 int r = root(y, x);||| 56 x = ds[r][y].down + 1;||| 57 }||| 58 if (x >= N + 1) {||| 59 cout << y << ' ';||| 60 break;||| 61 }||| 62 int old_x = x, old_y = y;||| 63 if (a[x][y] == 1) {||| 64 y++;||| 65 } else if (a[x][y] == 2) {||| 66 x++;||| 67 } else {||| 68 y--;||| 69 }||| 70 a[old_x][old_y] = 2;||| 71 active[old_x][old_y] = true;||| 72 if (active[old_x - 1][old_y] == true) {||| 73 join(old_y, old_x - 1, old_x);||| 74 }||| 75 if (active[old_x + 1][old_y] == true) {||| 76 join(old_y, old_x + 1, old_x);||| 77 }||| 78 }||| 79 }||| 80 return 0;||| 81 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 1000;||| 4 int N, M, K;||| 5 int a[NMAX + 2][NMAX + 2];||| 6 struct state {||| 7 int dad, sz;||| 8 int down;||| 9 };||| 10 state ds[NMAX + 2][NMAX + 2];||| 11 bool active[NMAX + 2][NMAX + 2];||| 12 int root(int col, int p) {||| 13 if (ds[p][col].dad != p) {||| 14 return ds[p][col].dad = root(col, ds[p][col].dad);||| 15 }||| 16 return p;||| 17 }||| 18 void join(int col, int p, int q) {||| 19 p = root(col, p);||| 20 q = root(col, q);||| 21 if (ds[p][col].sz > ds[q][col].sz) {||| 22 swap(p, q);||| 23 }||| 24 ds[p][col].dad = q;||| 25 ds[q][col].sz += ds[p][col].sz;||| 26 ds[q][col].down = max(ds[q][col].down, ds[p][col].down);||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(nullptr);||| 31 cin >> N >> M >> K;||| 32 for (int i = 1; i <= N; i++) {||| 33 for (int j = 1; j <= M; j++) {||| 34 cin >> a[i][j];||| 35 ds[i][j].dad = i;||| 36 ds[i][j].sz = 1;||| 37 ds[i][j].down = i;||| 38 }||| 39 }||| 40 for (int i = 1; i <= N; i++) {||| 41 for (int j = 1; j <= M; j++) {||| 42 if (a[i][j] == 2) {||| 43 active[i][j] = true;||| 44 }||| 45 if (active[i - 1][j] == true) {||| 46 join(j, i - 1, i);||| 47 }||| 48 }||| 49 }||| 50 for (int i = 1; i <= K; i++) {||| 51 int x = 1, y;||| 52 cin >> y;||| 53 while (true) {||| 54 if (active[x][y] == true) {||| 55 int r = root(y, x);||| 56 x = ds[r][y].down + 1;||| 57 }||| 58 if (x >= N + 1) {||| 59 cout << y << ' ';||| 60 break;||| 61 }||| 62 int old_x = x, old_y = y;||| 63 if (a[x][y] == 1) {||| 64 y++;||| 65 } else if (a[x][y] == 2) {||| 66 x++;||| 67 } else {||| 68 y--;||| 69 }||| 70 a[old_x][old_y] = 2;||| 71 active[old_x][old_y] = true;||| 72 if (active[old_x - 1][old_y] == true) {||| 73 join(old_y, old_x - 1, old_x);||| 74 }||| 75 if (active[old_x + 1][old_y] == true) {||| 76 join(old_y, old_x + 1, old_x);||| 77 }||| 78 }||| 79 }||| 80 return 0;||| 81 }||| 	44 if (active[i - 1][j] == true) {
9	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k, a[1000 + 5][1000 + 5];||| 4 signed main() {||| 5 scanf(""%lld%lld%lld"", &n, &m, &k);||| 6 for (long long i = 1; i <= n; i++)||| 7 for (long long j = 1; j <= m; j++) scanf(""%lld"", &a[i][j]);||| 8 while (k--) {||| 9 long long ci;||| 10 scanf(""%lld"", &ci);||| 11 long long nx = 1, ny = ci;||| 12 while (nx <= n) {||| 13 long long x = nx, y = ny;||| 14 if (a[x][y] == 1)||| 15 nx = x, ny = y + 1;||| 16 else if (a[x][y] == 2)||| 17 nx = x + 1, ny = y;||| 18 else if (a[x][y] == 3)||| 19 nx = x, ny = y - 1;||| 20 a[x][y] = 2;||| 21 }||| 22 a[nx][ny] = 2;||| 23 printf(""%lld "", ny);||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k, a[1000 + 5][1000 + 5];||| 4 signed main() {||| 5 scanf(""%lld%lld%lld"", &n, &m, &k);||| 6 for (long long i = 1; i <= n; i++)||| 7 for (long long j = 1; j <= m; j++) scanf(""%lld"", &a[i][j]);||| 8 while (k--) {||| 9 long long ci;||| 10 scanf(""%lld"", &ci);||| 11 long long nx = 1, ny = ci;||| 12 while (nx != n) {||| 13 long long x = nx, y = ny;||| 14 if (a[x][y] == 1)||| 15 nx = x, ny = y + 1;||| 16 else if (a[x][y] == 2)||| 17 nx = x + 1, ny = y;||| 18 else if (a[x][y] == 3)||| 19 nx = x, ny = y - 1;||| 20 a[x][y] = 2;||| 21 }||| 22 a[nx][ny] = 2;||| 23 printf(""%lld "", ny);||| 24 }||| 25 return 0;||| 26 }||| "	12 while (nx <= n) {
9	48	"1 #include <bits/stdc++.h>||| 2 int grid[1001][1001];||| 3 int start[100000];||| 4 int main(void) {||| 5 int n, m, k;||| 6 scanf(""%d %d %d"", &n, &m, &k);||| 7 for (int i = 1; i <= n; i++) {||| 8 for (int j = 1; j <= m; j++) {||| 9 scanf(""%d"", &grid[i][j]);||| 10 }||| 11 }||| 12 for (int i = 0; i < k; i++) {||| 13 scanf(""%d"", &start[i]);||| 14 }||| 15 for (int i = 0; i < k; i++) {||| 16 int r = 1;||| 17 int c = start[i];||| 18 while (r <= n) {||| 19 int rr, cc;||| 20 switch (grid[r][c]) {||| 21 case 1:||| 22 rr = r;||| 23 cc = c + 1;||| 24 break;||| 25 case 2:||| 26 rr = r + 1;||| 27 cc = c;||| 28 break;||| 29 case 3:||| 30 rr = r;||| 31 cc = c - 1;||| 32 break;||| 33 }||| 34 grid[r][c] = 2;||| 35 r = rr;||| 36 c = cc;||| 37 }||| 38 printf(""%d "", c);||| 39 }||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 int grid[1001][1001];||| 3 int start[100000];||| 4 int main(void) {||| 5 int n, m, k;||| 6 scanf(""%d %d %d"", &n, &m, &k);||| 7 for (int i = 1; i <= n; i++) {||| 8 for (int j = 1; j <= m; j++) {||| 9 scanf(""%d"", &grid[i][j]);||| 10 }||| 11 }||| 12 for (int i = 0; i < k; i++) {||| 13 scanf(""%d"", &start[i]);||| 14 }||| 15 for (int i = 0; i < k; i++) {||| 16 int r = 1;||| 17 int c = start[i];||| 18 while (r < n) {||| 19 int rr, cc;||| 20 switch (grid[r][c]) {||| 21 case 1:||| 22 rr = r;||| 23 cc = c + 1;||| 24 break;||| 25 case 2:||| 26 rr = r + 1;||| 27 cc = c;||| 28 break;||| 29 case 3:||| 30 rr = r;||| 31 cc = c - 1;||| 32 break;||| 33 }||| 34 grid[r][c] = 2;||| 35 r = rr;||| 36 c = cc;||| 37 }||| 38 printf(""%d "", c);||| 39 }||| 40 }||| "	18 while (r <= n) {
10	86	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int x, long long int y, long long int p) {||| 4 long long int res = 1;||| 5 x = x % p;||| 6 while (y > 0) {||| 7 if (y & 1) res = (res * x) % p;||| 8 y = y >> 1;||| 9 x = (x * x) % p;||| 10 }||| 11 return res;||| 12 }||| 13 long long int mod = 1000000007;||| 14 signed main() {||| 15 ios_base::sync_with_stdio(false);||| 16 cin.tie(0);||| 17 cout.tie(0);||| 18 long long int n, m, k, r, c;||| 19 cin >> n >> m >> k >> r >> c;||| 20 long long int ax, ay, bx, by;||| 21 cin >> ax >> ay >> bx >> by;||| 22 long long int zz = 1;||| 23 if (ax == bx && ay == by) {||| 24 zz = 0;||| 25 }||| 26 cout << power(k, n * m - r * c * zz, mod);||| 27 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int x, long long int y, long long int p) {||| 4 long long int res = 1;||| 5 x = x % p;||| 6 while (y > 0) {||| 7 if (y & 1) res = (res * x) % p;||| 8 y = y >> 1;||| 9 x = (x * x) % p;||| 10 }||| 11 return res;||| 12 }||| 13 long long int mod = 1000000007;||| 14 signed main() {||| 15 ios_base::sync_with_stdio(false);||| 16 cin.tie(0);||| 17 cout.tie(0);||| 18 long long int n, m, k, r, c;||| 19 cin >> n >> m >> k >> r >> c;||| 20 long long int ax, ay, bx, by;||| 21 cin >> ax >> ay >> bx >> by;||| 22 long long int zz = 1;||| 23 if (ax == ay && bx == by) {||| 24 zz = 0;||| 25 }||| 26 cout << power(k, n * m - r * c * zz, mod);||| 27 }||| 	23 if (ax == bx && ay == by) {
10	53	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, res;||| 4 const int mo = 1000000007;||| 5 pair<int, int> a, b, c, d;||| 6 int ksm(int x, long long y) {||| 7 int ans = 1;||| 8 while (y) {||| 9 if (y & 1) ans = 1ll * ans * x % mo;||| 10 x = 1ll * x * x % mo;||| 11 y = y / 2;||| 12 }||| 13 return ans;||| 14 }||| 15 int main() {||| 16 res = 1;||| 17 scanf(""%d%d%d%d%d"", &n, &m, &k, &c.first, &c.second);||| 18 scanf(""%d%d%d%d"", &a.first, &a.second, &b.first, &b.second);||| 19 if (a > b) swap(a, b);||| 20 int doit = 1;||| 21 while (doit) {||| 22 if (a == b) {||| 23 res = 1ll * res * ksm(k, 1ll * n * m);||| 24 break;||| 25 }||| 26 d = make_pair(0, 0);||| 27 if (a.first + c.first - 1 >= b.first) {||| 28 if (a.second <= b.second && a.second + c.second - 1 >= b.second) {||| 29 d = make_pair(a.first + c.first - b.first,||| 30 a.second + c.second - b.second);||| 31 } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) {||| 32 d = make_pair(a.first + c.first - b.first,||| 33 b.second + c.second - a.second);||| 34 b.second = a.second;||| 35 a.second = a.second + c.second - d.second;||| 36 }||| 37 }||| 38 res = 1ll * res *||| 39 ksm(k, 1ll * n * m - 2ll * c.first * c.second +||| 40 1ll * d.first * d.second) %||| 41 mo;||| 42 n = c.first;||| 43 m = c.second;||| 44 c = d;||| 45 if (c.first == 0) {||| 46 doit = 0;||| 47 res = 1ll * res * ksm(k, 1ll * n * m) % mo;||| 48 }||| 49 }||| 50 printf(""%d\n"", res);||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, res;||| 4 const int mo = 1000000007;||| 5 pair<int, int> a, b, c, d;||| 6 int ksm(int x, long long y) {||| 7 int ans = 1;||| 8 while (y) {||| 9 if (y & 1) ans = 1ll * ans * x % mo;||| 10 x = 1ll * x * x % mo;||| 11 y = y / 2;||| 12 }||| 13 return ans;||| 14 }||| 15 int main() {||| 16 res = 1;||| 17 scanf(""%d%d%d%d%d"", &n, &m, &k, &c.first, &c.second);||| 18 scanf(""%d%d%d%d"", &a.first, &a.second, &b.first, &b.second);||| 19 if (a > b) swap(a, b);||| 20 int doit = 1;||| 21 while (doit) {||| 22 if (a == b) {||| 23 res = 1ll * res * ksm(k, 1ll * n * m);||| 24 break;||| 25 }||| 26 d = make_pair(0, 0);||| 27 if (a.first + c.first - 1 >= d.first) {||| 28 if (a.second <= b.second && a.second + c.second - 1 >= b.second) {||| 29 d = make_pair(a.first + c.first - b.first,||| 30 a.second + c.second - b.second);||| 31 } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) {||| 32 d = make_pair(a.first + c.first - b.first,||| 33 b.second + c.second - a.second);||| 34 b.second = a.second;||| 35 a.second = a.second + c.second - d.second;||| 36 }||| 37 }||| 38 res = 1ll * res *||| 39 ksm(k, 1ll * n * m - 2ll * c.first * c.second +||| 40 1ll * d.first * d.second) %||| 41 mo;||| 42 n = c.first;||| 43 m = c.second;||| 44 c = d;||| 45 if (c.first == 0) {||| 46 doit = 0;||| 47 res = 1ll * res * ksm(k, 1ll * n * m) % mo;||| 48 }||| 49 }||| 50 printf(""%d\n"", res);||| 51 }||| "	27 if (a.first + c.first - 1 >= b.first) {
10	78	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, res;||| 4 const int mo = 1000000007;||| 5 pair<int, int> a, b, c, d;||| 6 int ksm(int x, long long y) {||| 7 int ans = 1;||| 8 while (y) {||| 9 if (y & 1) ans = 1ll * ans * x % mo;||| 10 x = 1ll * x * x % mo;||| 11 y = y / 2;||| 12 }||| 13 return ans;||| 14 }||| 15 int main() {||| 16 res = 1;||| 17 scanf(""%d%d%d%d%d"", &n, &m, &k, &c.first, &c.second);||| 18 scanf(""%d%d%d%d"", &a.first, &a.second, &b.first, &b.second);||| 19 if (a > b) swap(a, b);||| 20 int doit = 1;||| 21 while (doit) {||| 22 if (a == b) {||| 23 res = 1ll * res * ksm(k, 1ll * n * m);||| 24 break;||| 25 }||| 26 d = make_pair(0, 0);||| 27 if (a.first + c.first - 1 >= b.first) {||| 28 if (a.second <= b.second && a.second + c.second - 1 >= b.second) {||| 29 d = make_pair(a.first + c.first - b.first,||| 30 a.second + c.second - b.second);||| 31 } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) {||| 32 d = make_pair(a.first + c.first - b.first,||| 33 b.second + c.second - a.second);||| 34 b.second = a.second;||| 35 a.second = a.second + c.second - d.second;||| 36 }||| 37 }||| 38 res = 1ll * res *||| 39 ksm(k, 1ll * n * m - 2ll * c.first * c.second +||| 40 1ll * d.first * d.second) %||| 41 mo;||| 42 n = c.first;||| 43 m = c.second;||| 44 c = d;||| 45 if (c.first == 0) {||| 46 doit = 0;||| 47 res = 1ll * res * ksm(k, 1ll * n * m) % mo;||| 48 }||| 49 }||| 50 printf(""%d\n"", res);||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, res;||| 4 const int mo = 1000000007;||| 5 pair<int, int> a, b, c, d;||| 6 int ksm(int x, long long y) {||| 7 int ans = 1;||| 8 while (y) {||| 9 if (y & 1) ans = 1ll * ans * x % mo;||| 10 x = 1ll * x * x % mo;||| 11 y = y / 2;||| 12 }||| 13 return ans;||| 14 }||| 15 int main() {||| 16 res = 1;||| 17 scanf(""%d%d%d%d%d"", &n, &m, &k, &c.first, &c.second);||| 18 scanf(""%d%d%d%d"", &a.first, &a.second, &b.first, &b.second);||| 19 if (a > b) swap(a, b);||| 20 int doit = 1;||| 21 while (doit) {||| 22 if (a == b) {||| 23 res = 1ll * res * ksm(k, 1ll * n * m);||| 24 break;||| 25 }||| 26 d = make_pair(0, 0);||| 27 if (a.first + c.first - 1 >= d.first) {||| 28 if (a.second <= b.second && a.second + c.second - 1 >= b.second) {||| 29 d = make_pair(a.first + c.first - b.first,||| 30 a.second + c.second - b.second);||| 31 } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) {||| 32 d = make_pair(a.first + c.first - b.first,||| 33 b.second + c.second - a.second);||| 34 b.second = a.second;||| 35 a.second = a.second + c.second - d.second;||| 36 }||| 37 }||| 38 res = 1ll * res *||| 39 ksm(k, 1ll * n * m - 2ll * c.first * c.second +||| 40 1ll * d.first * d.second) %||| 41 mo;||| 42 n = c.first;||| 43 m = c.second;||| 44 c = d;||| 45 if (c.first == 0) {||| 46 doit = 0;||| 47 res = 1ll * res * ksm(k, 1ll * n * m) % mo;||| 48 }||| 49 }||| 50 printf(""%lld\n"", res);||| 51 }||| "	27 if (a.first + c.first - 1 >= b.first) {
10	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long Fast(long long x, long long y) {||| 4 long long ret = 1;||| 5 while (y) {||| 6 if (y & 1) ret = (ret * x) % 1000000007;||| 7 x = (x * x) % 1000000007, y >>= 1;||| 8 }||| 9 return ret;||| 10 }||| 11 signed main() {||| 12 long long n, m, r, c, ax, ay, bx, by, k;||| 13 scanf(""%lld%lld%lld%lld%lld"", &n, &m, &k, &r, &c);||| 14 scanf(""%lld%lld%lld%lld"", &ax, &ay, &bx, &by);||| 15 if (ax == bx && ay == by)||| 16 printf(""%lld\n"", Fast(k, n * m));||| 17 else||| 18 printf(""%lld\n"", Fast(k, n * m - r * c));||| 19 return 0;||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long Fast(long long x, long long y) {||| 4 long long ret = 1;||| 5 while (y) {||| 6 if (y & 1) ret = (ret * x) % 1000000007;||| 7 x = (x * x) % 1000000007, y >>= 1;||| 8 }||| 9 return ret;||| 10 }||| 11 signed main() {||| 12 long long n, m, r, c, ax, ay, bx, by, k;||| 13 scanf(""%lld%lld%lld%lld%lld"", &n, &m, &k, &r, &c);||| 14 scanf(""%lld%lld%lld%lld"", &ax, &ay, &bx, &by);||| 15 if (ax == ay && bx == by)||| 16 printf(""%lld\n"", Fast(k, n * m));||| 17 else||| 18 printf(""%lld\n"", Fast(k, n * m - r * c));||| 19 return 0;||| 20 }||| "	15 if (ax == bx && ay == by)
10	46	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e3 + 5, mum = 1e9 + 7;||| 4 int Pow(int A, long long B) {||| 5 int num = 1;||| 6 while (B) {||| 7 if (B & 1) num = 1LL * num * A % mum;||| 8 A = 1LL * A * A % mum;||| 9 B >>= 1;||| 10 }||| 11 return num;||| 12 }||| 13 int main() {||| 14 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 int n, m, k, r, c, ax, ay, bx, by;||| 16 cin >> n >> m >> k >> r >> c >> ax >> ay >> bx >> by;||| 17 cout << (ax == bx && ay == by ? Pow(k, 1LL * n * m)||| 18 : Pow(k, 1LL * n * m - 1LL * r * c))||| 19 << '\n';||| 20 return 0;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e3 + 5, mum = 1e9 + 7;||| 4 int Pow(int A, long long B) {||| 5 int num = 1;||| 6 while (B) {||| 7 if (B & 1) num = 1LL * num * A % mum;||| 8 A = 1LL * A * A % mum;||| 9 B >>= 1;||| 10 }||| 11 return num;||| 12 }||| 13 int main() {||| 14 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 int n, m, k, r, c, ax, ay, bx, by;||| 16 cin >> n >> m >> k >> r >> c >> ax >> ay >> bx >> by;||| 17 cout << (ax == bx && bx == by ? Pow(k, 1LL * n * m)||| 18 : Pow(k, 1LL * n * m - 1LL * r * c))||| 19 << '\n';||| 20 return 0;||| 21 }||| 	17 cout << (ax == bx && ay == by ? Pow(k, 1LL * n * m)
10	56	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long r, long long c, long long dr, long long dc) {||| 4 if (dr == 0 && dc == 0) {||| 5 return r * c;||| 6 }||| 7 if (dr >= r || dc >= c) {||| 8 return r * c;||| 9 }||| 10 if (r >= 2 * dr || c >= 2 * dc) return r * c - (r - dr) * (c - dc);||| 11 return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c);||| 12 }||| 13 long long lgput(long long b, long long e, long long mod) {||| 14 long long ret = 1;||| 15 while (e) {||| 16 if (e & 1) ret = (ret * b) % mod;||| 17 b = (b * b) % mod;||| 18 e /= 2;||| 19 }||| 20 return ret;||| 21 }||| 22 int32_t main() {||| 23 long long n, m, k, r, c;||| 24 cin >> n >> m >> k >> r >> c;||| 25 long long ax, bx, ay, by;||| 26 cin >> ax >> ay >> bx >> by;||| 27 long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay));||| 28 long long aria = n * m;||| 29 aria -= 2 * r * c;||| 30 long long dr = abs(bx - ax), dc = abs(by - ay);||| 31 if (dr < r && dc < c) aria += (r - dr) * (c - dc);||| 32 aria += ccrect;||| 33 cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl;||| 34 return 0;||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long r, long long c, long long dr, long long dc) {||| 4 if (dr == 0 && c == 0) {||| 5 return r * c;||| 6 }||| 7 if (dr >= r || dc >= c) {||| 8 return r * c;||| 9 }||| 10 if (r >= 2 * dr && c >= 2 * dc) return r * c - (r - dr) * (c - dc);||| 11 return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c);||| 12 }||| 13 long long lgput(long long b, long long e, long long mod) {||| 14 long long ret = 1;||| 15 while (e) {||| 16 if (e & 1) ret = (ret * b) % mod;||| 17 b = (b * b) % mod;||| 18 e /= 2;||| 19 }||| 20 return ret;||| 21 }||| 22 int32_t main() {||| 23 long long n, m, k, r, c;||| 24 cin >> n >> m >> k >> r >> c;||| 25 long long ax, bx, ay, by;||| 26 cin >> ax >> ay >> bx >> by;||| 27 long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay));||| 28 long long aria = n * m;||| 29 aria -= 2 * r * c;||| 30 long long dr = abs(bx - ax), dc = abs(by - ay);||| 31 if (dr < r && dc < c) aria += (r - dr) * (c - dc);||| 32 aria += ccrect;||| 33 cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl;||| 34 return 0;||| 35 }||| 	4 if (dr == 0 && dc == 0) {
10	70	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long r, long long c, long long dr, long long dc) {||| 4 if (dr == 0 && dc == 0) {||| 5 return r * c;||| 6 }||| 7 if (dr >= r || dc >= c) {||| 8 return r * c;||| 9 }||| 10 if (r >= 2 * dr || c >= 2 * dc) return r * c - (r - dr) * (c - dc);||| 11 return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c);||| 12 }||| 13 long long lgput(long long b, long long e, long long mod) {||| 14 long long ret = 1;||| 15 while (e) {||| 16 if (e & 1) ret = (ret * b) % mod;||| 17 b = (b * b) % mod;||| 18 e /= 2;||| 19 }||| 20 return ret;||| 21 }||| 22 int32_t main() {||| 23 long long n, m, k, r, c;||| 24 cin >> n >> m >> k >> r >> c;||| 25 long long ax, bx, ay, by;||| 26 cin >> ax >> ay >> bx >> by;||| 27 long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay));||| 28 long long aria = n * m;||| 29 aria -= 2 * r * c;||| 30 long long dr = abs(bx - ax), dc = abs(by - ay);||| 31 if (dr < r && dc < c) aria += (r - dr) * (c - dc);||| 32 aria += ccrect;||| 33 cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl;||| 34 return 0;||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long r, long long c, long long dr, long long dc) {||| 4 if (dr == 0 && dc == 0) {||| 5 return r * c;||| 6 }||| 7 if (dr >= r || dc >= c) {||| 8 return r * c;||| 9 }||| 10 if (r >= 2 * dr && c >= 2 * dc) return r * c - (r - dr) * (c - dc);||| 11 return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c);||| 12 }||| 13 long long lgput(long long b, long long e, long long mod) {||| 14 long long ret = 1;||| 15 while (e) {||| 16 if (e & 1) ret = (ret * b) % mod;||| 17 b = (b * b) % mod;||| 18 e /= 2;||| 19 }||| 20 return ret;||| 21 }||| 22 int32_t main() {||| 23 long long n, m, k, r, c;||| 24 cin >> n >> m >> k >> r >> c;||| 25 long long ax, bx, ay, by;||| 26 cin >> ax >> ay >> bx >> by;||| 27 long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay));||| 28 long long aria = n * m;||| 29 aria -= 2 * r * c;||| 30 long long dr = abs(bx - ax), dc = abs(by - ay);||| 31 if (dr < r && dc < c) aria += (r - dr) * (c - dc);||| 32 aria += ccrect;||| 33 cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl;||| 34 return 0;||| 35 }||| 	10 if (r >= 2 * dr || c >= 2 * dc) return r * c - (r - dr) * (c - dc);
11	127	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int n, a[MAXN];||| 5 pair<int, int> ta[MAXN];||| 6 int seq[MAXN];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i];||| 10 for (int i = (1); i <= (n); ++i) {||| 11 ta[i].first = i - a[i];||| 12 ta[i].second = a[i];||| 13 }||| 14 sort(ta + 1, ta + 1 + n,||| 15 [](const pair<int, int> &lhs, const pair<int, int> &rhs) {||| 16 return lhs.first < rhs.first ||||| 17 (lhs.first == rhs.first && lhs.second < rhs.second);||| 18 });||| 19 int i = 1;||| 20 while (i <= n && ta[i].first < 0) ++i;||| 21 if (i > n) {||| 22 cout << ""0\n"";||| 23 return;||| 24 }||| 25 int ans = 1;||| 26 seq[1] = ta[i].second;||| 27 for (++i; i <= n; ++i) {||| 28 auto p = lower_bound(seq + 1, seq + 1 + ans, ta[i].second);||| 29 *p = ta[i].second;||| 30 ans = max(ans, int(p - seq));||| 31 }||| 32 cout << ans << '\n';||| 33 }||| 34 int main() {||| 35 ios::sync_with_stdio(false);||| 36 cin.tie(0);||| 37 int _;||| 38 _ = 1;||| 39 while (_--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int n, a[MAXN];||| 5 pair<int, int> ta[MAXN];||| 6 int seq[MAXN];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i];||| 10 for (int i = (1); i <= (n); ++i) {||| 11 ta[i].first = i - a[i];||| 12 ta[i].second = a[i];||| 13 }||| 14 sort(ta + 1, ta + 1 + n,||| 15 [](const pair<int, int> &lhs, const pair<int, int> &rhs) {||| 16 return lhs.first < rhs.first ||||| 17 (lhs.first < rhs.first && lhs.second < rhs.second);||| 18 });||| 19 int i = 1;||| 20 while (i <= n && ta[i].first < 0) ++i;||| 21 if (i > n) {||| 22 cout << ""0\n"";||| 23 return;||| 24 }||| 25 int ans = 1;||| 26 seq[1] = ta[i].second;||| 27 for (++i; i <= n; ++i) {||| 28 auto p = lower_bound(seq + 1, seq + 1 + ans, ta[i].second);||| 29 *p = ta[i].second;||| 30 ans = max(ans, int(p - seq));||| 31 }||| 32 cout << ans << '\n';||| 33 }||| 34 int main() {||| 35 ios::sync_with_stdio(false);||| 36 cin.tie(0);||| 37 int _;||| 38 _ = 1;||| 39 while (_--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	17 (lhs.first == rhs.first && lhs.second < rhs.second);
11	88	"1 #include <bits/stdc++.h>||| 2 template <class T>||| 3 void read(T &a) {||| 4 a = 0;||| 5 char x = getchar();||| 6 bool f = 0;||| 7 for (; x < '0' || x > '9'; x = getchar()) f |= x == '-';||| 8 for (; x >= '0' && x <= '9'; x = getchar()) a = (a << 3) + (a << 1) + x - '0';||| 9 if (f) a = -a;||| 10 }||| 11 template <class T, class... Args>||| 12 void read(T &a, Args &...args) {||| 13 read(a);||| 14 read(args...);||| 15 }||| 16 using namespace std;||| 17 const int N = 2e5 + 5;||| 18 int n;||| 19 int f[N], lim;||| 20 pair<int, int> d[N];||| 21 bool cmp(pair<int, int> a, pair<int, int> b) {||| 22 if (a.first ^ b.first) {||| 23 return a.first < b.first;||| 24 }||| 25 return a.second > b.second;||| 26 }||| 27 int main() {||| 28 read(n);||| 29 for (int i = 1; i <= n; ++i) {||| 30 read(d[i].first);||| 31 d[i].second = i;||| 32 }||| 33 sort(d + 1, d + n + 1, cmp);||| 34 int lim = 0;||| 35 for (int i = 1; i <= n; ++i) {||| 36 int c = d[i].second - d[i].first;||| 37 if (c < 0) continue;||| 38 if (lim == 0) {||| 39 f[++lim] = c;||| 40 continue;||| 41 }||| 42 if (c >= f[lim]) {||| 43 f[++lim] = c;||| 44 continue;||| 45 }||| 46 int l = 1, r = lim + 1;||| 47 while (l < r - 1) {||| 48 int mid = l + r >> 1;||| 49 if (f[mid] <= c) {||| 50 l = mid;||| 51 } else {||| 52 r = mid;||| 53 }||| 54 }||| 55 if (f[l] > c) {||| 56 f[l] = c;||| 57 } else if (l != lim) {||| 58 f[l + 1] = c;||| 59 }||| 60 }||| 61 printf(""%d\n"", lim);||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 template <class T>||| 3 void read(T &a) {||| 4 a = 0;||| 5 char x = getchar();||| 6 bool f = 0;||| 7 for (; x < '0' || x > '9'; x = getchar()) f |= x == '-';||| 8 for (; x >= '0' && x <= '9'; x = getchar()) a = (a << 3) + (a << 1) + x - '0';||| 9 if (f) a = -a;||| 10 }||| 11 template <class T, class... Args>||| 12 void read(T &a, Args &...args) {||| 13 read(a);||| 14 read(args...);||| 15 }||| 16 using namespace std;||| 17 const int N = 2e5 + 5;||| 18 int n;||| 19 int f[N], lim;||| 20 pair<int, int> d[N];||| 21 bool cmp(pair<int, int> a, pair<int, int> b) {||| 22 if (a.first ^ b.first) {||| 23 return a.first < b.first;||| 24 }||| 25 return a.second < b.second;||| 26 }||| 27 int main() {||| 28 read(n);||| 29 for (int i = 1; i <= n; ++i) {||| 30 read(d[i].first);||| 31 d[i].second = i;||| 32 }||| 33 sort(d + 1, d + n + 1, cmp);||| 34 int lim = 0;||| 35 for (int i = 1; i <= n; ++i) {||| 36 int c = d[i].second - d[i].first;||| 37 if (c < 0) continue;||| 38 if (lim == 0) {||| 39 f[++lim] = c;||| 40 continue;||| 41 }||| 42 if (c >= f[lim]) {||| 43 f[++lim] = c;||| 44 continue;||| 45 }||| 46 int l = 1, r = lim + 1;||| 47 while (l < r - 1) {||| 48 int mid = l + r >> 1;||| 49 if (f[mid] <= c) {||| 50 l = mid;||| 51 } else {||| 52 r = mid;||| 53 }||| 54 }||| 55 if (f[l] > c) {||| 56 f[l] = c;||| 57 } else if (l != lim) {||| 58 f[l + 1] = c;||| 59 }||| 60 }||| 61 printf(""%d\n"", lim);||| 62 return 0;||| 63 }||| "	25 return a.second > b.second;
11	15	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct FenwickTree2D {||| 4 vector<vector<int>> nodes;||| 5 vector<vector<int>> f;||| 6 int n;||| 7 FenwickTree2D() {}||| 8 FenwickTree2D(int n) : n(n) {||| 9 nodes.resize(n + 1);||| 10 f.resize(n + 1);||| 11 }||| 12 void fakeUpdate(int u, int v) {||| 13 if (u == 0 || v == 0) {||| 14 return;||| 15 }||| 16 for (int x = u; x <= n; x += x & -x) {||| 17 nodes[x].push_back(v);||| 18 }||| 19 }||| 20 void fakeGet(int u, int v) {||| 21 if (u == 0 || v == 0) {||| 22 return;||| 23 }||| 24 for (int x = u; x > 0; x -= x & -x) nodes[x].push_back(v);||| 25 }||| 26 void update(int u, int v, int delta) {||| 27 if (u == 0 || v == 0) {||| 28 return;||| 29 }||| 30 for (int x = u; x <= n; x += x & -x) {||| 31 for (int y = lower_bound(nodes[x].begin(), nodes[x].end(), v) -||| 32 nodes[x].begin() + 1;||| 33 y <= nodes[x].size(); y += y & -y) {||| 34 f[x][y] = max(f[x][y], delta);||| 35 }||| 36 }||| 37 }||| 38 int get(int u, int v) {||| 39 if (u == 0 || v == 0) {||| 40 return 0;||| 41 }||| 42 int res = 0;||| 43 for (int x = u; x > 0; x -= x & -x)||| 44 for (int y = upper_bound(nodes[x].begin(), nodes[x].end(), v) -||| 45 nodes[x].begin();||| 46 y > 0; y -= y & -y)||| 47 res = max(res, f[x][y]);||| 48 return res;||| 49 }||| 50 void build() {||| 51 for (int i = 1; i <= n; ++i) {||| 52 nodes[i].push_back(1000111000);||| 53 sort(nodes[i].begin(), nodes[i].end());||| 54 f[i].resize(nodes[i].size() + 3);||| 55 }||| 56 }||| 57 };||| 58 const int MAX = 2e5 + 5;||| 59 int n, a[MAX], b[MAX], f[MAX];||| 60 FenwickTree2D fw = FenwickTree2D(MAX);||| 61 int main() {||| 62 ios_base::sync_with_stdio(false);||| 63 cin.tie(nullptr);||| 64 cin >> n;||| 65 for (int i = 1; i <= n; i++) {||| 66 cin >> a[i];||| 67 b[i] = i - a[i] + 1;||| 68 fw.fakeUpdate(a[i], b[i]);||| 69 fw.fakeGet(a[i], b[i]);||| 70 }||| 71 fw.build();||| 72 int rs = 0;||| 73 for (int i = 1; i <= n; i++)||| 74 if (b[i] > 0) {||| 75 f[i] = fw.get(a[i] - 1, b[i]) + 1;||| 76 rs = max(rs, f[i]);||| 77 fw.update(a[i], b[i], f[i]);||| 78 }||| 79 cout << rs;||| 80 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct FenwickTree2D {||| 4 vector<vector<int>> nodes;||| 5 vector<vector<int>> f;||| 6 int n;||| 7 FenwickTree2D() {}||| 8 FenwickTree2D(int n) : n(n) {||| 9 nodes.resize(n + 1);||| 10 f.resize(n + 1);||| 11 }||| 12 void fakeUpdate(int u, int v) {||| 13 if (u == 0 || v == 0) {||| 14 return;||| 15 }||| 16 for (int x = u; x <= n; x += x & -x) {||| 17 nodes[x].push_back(v);||| 18 }||| 19 }||| 20 void fakeGet(int u, int v) {||| 21 if (u == 0 || v == 0) {||| 22 return;||| 23 }||| 24 for (int x = u; x > 0; x -= x & -x) nodes[x].push_back(v);||| 25 }||| 26 void update(int u, int v, int delta) {||| 27 if (u == 0 || v == 0) {||| 28 return;||| 29 }||| 30 for (int x = u; x <= n; x += x & -x) {||| 31 for (int y = lower_bound(nodes[x].begin(), nodes[x].end(), v) -||| 32 nodes[x].begin() + 1;||| 33 y <= nodes[x].size(); y += y & -y) {||| 34 f[x][y] = max(f[x][y], delta);||| 35 }||| 36 }||| 37 }||| 38 int get(int u, int v) {||| 39 if (u == 0 || v == 0) {||| 40 return 0;||| 41 }||| 42 int res = 0;||| 43 for (int x = u; x > 0; x -= x & -x)||| 44 for (int y = upper_bound(nodes[x].begin(), nodes[x].end(), v) -||| 45 nodes[x].begin();||| 46 y > 0; y -= y & -y)||| 47 res = max(res, f[x][y]);||| 48 return res;||| 49 }||| 50 void build() {||| 51 for (int i = 1; i <= n; ++i) {||| 52 nodes[i].push_back(1000111000);||| 53 sort(nodes[i].begin(), nodes[i].end());||| 54 f[i].resize(nodes[i].size() + 3);||| 55 }||| 56 }||| 57 };||| 58 const int MAX = 2e5 + 5;||| 59 int n, a[MAX], b[MAX], f[MAX];||| 60 FenwickTree2D fw = FenwickTree2D(MAX);||| 61 int main() {||| 62 ios_base::sync_with_stdio(false);||| 63 cin.tie(nullptr);||| 64 cin >> n;||| 65 for (int i = 1; i <= n; i++) {||| 66 cin >> a[i];||| 67 b[i] = i - a[i] + 1;||| 68 fw.fakeUpdate(a[i], b[i]);||| 69 fw.fakeGet(a[i], b[i]);||| 70 }||| 71 fw.build();||| 72 int rs = 0;||| 73 for (int i = 1; i <= n; i++)||| 74 if (b[i] >= 0) {||| 75 f[i] = fw.get(a[i] - 1, b[i]) + 1;||| 76 rs = max(rs, f[i]);||| 77 fw.update(a[i], b[i], f[i]);||| 78 }||| 79 cout << rs;||| 80 }||| 	74 if (b[i] > 0) {
11	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace io {||| 4 char ibuf[(1 << 20)], *iS, *iT, obuf[(1 << 20)],||| 5 *oS = obuf, *oT = oS + (1 << 20) - 1, c, qu[55];||| 6 int f, qr;||| 7 inline void flush(void) {||| 8 return fwrite(obuf, 1, oS - obuf, stdout), oS = obuf, void();||| 9 }||| 10 inline char getch(void) {||| 11 return (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20), stdin),||| 12 (iS == iT ? EOF : *iS++))||| 13 : *iS++);||| 14 }||| 15 inline void putch(char x) {||| 16 *oS++ = x;||| 17 if (oS == oT) flush();||| 18 return;||| 19 }||| 20 string getstr(void) {||| 21 string s = """";||| 22 char c = getch();||| 23 while (c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == EOF)||| 24 c = getch();||| 25 while (!(c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == EOF))||| 26 s.push_back(c), c = getch();||| 27 return s;||| 28 }||| 29 void putstr(string str, int begin = 0, int end = -1) {||| 30 if (end == -1) end = str.size();||| 31 for (register int i = begin; i < end; i++) putch(str[i]);||| 32 return;||| 33 }||| 34 template <typename T>||| 35 inline T read() {||| 36 register T x = 0;||| 37 for (f = 1, c = getch(); c < '0' || c > '9'; c = getch())||| 38 if (c == '-') f = -1;||| 39 for (x = 0; c <= '9' && c >= '0'; c = getch()) x = x * 10 + (c & 15);||| 40 return x * f;||| 41 }||| 42 template <typename T>||| 43 inline void write(const T& t) {||| 44 register T x = t;||| 45 if (!x) putch('0');||| 46 if (x < 0) putch('-'), x = -x;||| 47 while (x) qu[++qr] = x % 10 + '0', x /= 10;||| 48 while (qr) putch(qu[qr--]);||| 49 return;||| 50 }||| 51 struct Flusher_ {||| 52 ~Flusher_() { flush(); }||| 53 } io_flusher_;||| 54 }  // namespace io||| 55 using io::getch;||| 56 using io::getstr;||| 57 using io::putch;||| 58 using io::putstr;||| 59 using io::read;||| 60 using io::write;||| 61 bool mem1;||| 62 pair<int, int> a[200005];||| 63 int S[200005];||| 64 void solve(void) {||| 65 int n = read<int>();||| 66 for (int i = 1; i <= n; i++) {||| 67 int x = read<int>();||| 68 a[i] = {i - x, x};||| 69 }||| 70 sort(a + 1, a + n + 1);||| 71 int answer = 0;||| 72 memset(S, 0x3f, sizeof(S));||| 73 for (int i = 1; i <= n; i++) {||| 74 if (a[i].first < 0) continue;||| 75 int x = a[i].second, p = lower_bound(S + 1, S + answer + 1, x) - S;||| 76 S[p] = min(S[p], x);||| 77 answer = max(answer, p);||| 78 }||| 79 write(answer), putch('\n');||| 80 return;||| 81 }||| 82 bool mem2;||| 83 int main() {||| 84 clock_t t1 = clock();||| 85 cerr << ""Memory: "" << abs(&mem1 - &mem2) / 1024.0 / 1024.0 << ""MB"" << endl;||| 86 int _ = 1;||| 87 while (_--) solve();||| 88 clock_t t2 = clock();||| 89 cerr << ""Time: "" << (t2 - t1) * 1000.0 / CLOCKS_PER_SEC << ""ms"" << endl;||| 90 return 0;||| 91 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace io {||| 4 char ibuf[(1 << 20)], *iS, *iT, obuf[(1 << 20)],||| 5 *oS = obuf, *oT = oS + (1 << 20) - 1, c, qu[55];||| 6 int f, qr;||| 7 inline void flush(void) {||| 8 return fwrite(obuf, 1, oS - obuf, stdout), oS = obuf, void();||| 9 }||| 10 inline char getch(void) {||| 11 return (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20), stdin),||| 12 (iS == iT ? EOF : *iS++))||| 13 : *iS++);||| 14 }||| 15 inline void putch(char x) {||| 16 *oS++ = x;||| 17 if (oS == oT) flush();||| 18 return;||| 19 }||| 20 string getstr(void) {||| 21 string s = """";||| 22 char c = getch();||| 23 while (c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == EOF)||| 24 c = getch();||| 25 while (!(c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == EOF))||| 26 s.push_back(c), c = getch();||| 27 return s;||| 28 }||| 29 void putstr(string str, int begin = 0, int end = -1) {||| 30 if (end == -1) end = str.size();||| 31 for (register int i = begin; i < end; i++) putch(str[i]);||| 32 return;||| 33 }||| 34 template <typename T>||| 35 inline T read() {||| 36 register T x = 0;||| 37 for (f = 1, c = getch(); c < '0' || c > '9'; c = getch())||| 38 if (c == '-') f = -1;||| 39 for (x = 0; c <= '9' && c >= '0'; c = getch()) x = x * 10 + (c & 15);||| 40 return x * f;||| 41 }||| 42 template <typename T>||| 43 inline void write(const T& t) {||| 44 register T x = t;||| 45 if (!x) putch('0');||| 46 if (x < 0) putch('-'), x = -x;||| 47 while (x) qu[++qr] = x % 10 + '0', x /= 10;||| 48 while (qr) putch(qu[qr--]);||| 49 return;||| 50 }||| 51 struct Flusher_ {||| 52 ~Flusher_() { flush(); }||| 53 } io_flusher_;||| 54 }  // namespace io||| 55 using io::getch;||| 56 using io::getstr;||| 57 using io::putch;||| 58 using io::putstr;||| 59 using io::read;||| 60 using io::write;||| 61 bool mem1;||| 62 pair<int, int> a[200005];||| 63 int S[200005];||| 64 void solve(void) {||| 65 int n = read<int>();||| 66 for (int i = 1; i <= n; i++) {||| 67 int x = read<int>();||| 68 a[i] = {i - x, x};||| 69 }||| 70 sort(a + 1, a + n + 1);||| 71 int answer = 0;||| 72 memset(S, 0x3f, sizeof(S));||| 73 for (int i = 1; i <= n; i++) {||| 74 if (a[i].first < 0) continue;||| 75 int x = a[i].second, p = upper_bound(S + 1, S + answer + 1, x) - S;||| 76 S[p] = min(S[p], x);||| 77 answer = max(answer, p);||| 78 }||| 79 write(answer), putch('\n');||| 80 return;||| 81 }||| 82 bool mem2;||| 83 int main() {||| 84 clock_t t1 = clock();||| 85 cerr << ""Memory: "" << abs(&mem1 - &mem2) / 1024.0 / 1024.0 << ""MB"" << endl;||| 86 int _ = 1;||| 87 while (_--) solve();||| 88 clock_t t2 = clock();||| 89 cerr << ""Time: "" << (t2 - t1) * 1000.0 / CLOCKS_PER_SEC << ""ms"" << endl;||| 90 return 0;||| 91 }||| "	75 int x = a[i].second, p = lower_bound(S + 1, S + answer + 1, x) - S;
11	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 struct info {||| 5 int maxi = 0;||| 6 };||| 7 struct segtree {||| 8 int n;||| 9 vector<info> t;||| 10 segtree(int n) {||| 11 this->n = n + 1;||| 12 t.resize(n * 4);||| 13 }||| 14 void Merge(info &node, info &l, info &r) { node.maxi = max(l.maxi, r.maxi); }||| 15 void update(int node, int l, int r, int i, int j, int add) {||| 16 if (l > j || r < i) {||| 17 return;||| 18 }||| 19 if (l >= i && r <= j) {||| 20 t[node].maxi = add;||| 21 return;||| 22 }||| 23 int mid = (l + r) / 2;||| 24 update(node * 2, l, mid, i, j, add);||| 25 update(node * 2 + 1, mid + 1, r, i, j, add);||| 26 Merge(t[node], t[node * 2], t[node * 2 + 1]);||| 27 }||| 28 void update(int l, int add) { update(1, 0, n, l, l, add); }||| 29 info query(int node, int l, int r, int i, int j) {||| 30 if (l > j || r < i) {||| 31 info x;||| 32 return x;||| 33 }||| 34 if (l >= i && r <= j) {||| 35 return t[node];||| 36 }||| 37 int mid = (l + r) / 2;||| 38 info x = query(node * 2, l, mid, i, j);||| 39 info y = query(node * 2 + 1, mid + 1, r, i, j);||| 40 info ret;||| 41 Merge(ret, x, y);||| 42 return ret;||| 43 }||| 44 int query(int l, int r) {||| 45 info ret = query(1, 0, n, l, r);||| 46 return ret.maxi;||| 47 }||| 48 };||| 49 int n;||| 50 vector<pair<pair<int, int>, int> > a;||| 51 segtree seg(N);||| 52 int dp[N];||| 53 bool comp(pair<pair<int, int>, int> &a, pair<pair<int, int>, int> &b) {||| 54 if (a.first.first == b.first.first) {||| 55 return a.first.second > b.first.second;||| 56 }||| 57 return a.first.first < b.first.first;||| 58 }||| 59 void solve(int l, int r) {||| 60 if (l > r) {||| 61 return;||| 62 }||| 63 if (l == r) {||| 64 dp[l] = max(dp[l], 1);||| 65 return;||| 66 }||| 67 int m = (l + r) / 2;||| 68 solve(l, m);||| 69 vector<pair<pair<int, int>, int> > now;||| 70 for (int i = l; i <= r; i++) {||| 71 now.push_back(a[i]);||| 72 }||| 73 sort(now.begin(), now.end(), comp);||| 74 for (int i = 0; i < now.size(); i++) {||| 75 int x = now[i].first.first;||| 76 int y = now[i].first.second;||| 77 int id = now[i].second;||| 78 if (id >= l && id <= m) {||| 79 seg.update(y, dp[id]);||| 80 } else {||| 81 int q = seg.query(0, y);||| 82 dp[id] = max(dp[id], q + 1);||| 83 }||| 84 }||| 85 for (int i = 0; i < now.size(); i++) {||| 86 int x = now[i].first.first;||| 87 int y = now[i].first.second;||| 88 int id = now[i].second;||| 89 if (id >= l && id <= m) {||| 90 seg.update(y, 0);||| 91 }||| 92 }||| 93 solve(m + 1, r);||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(nullptr);||| 98 cin >> n;||| 99 for (int i = 1; i <= n; i++) {||| 100 int x, y;||| 101 cin >> x;||| 102 y = i - x;||| 103 if (y >= 0) {||| 104 int sz = a.size();||| 105 a.push_back({{x, y}, sz});||| 106 }||| 107 }||| 108 n = a.size();||| 109 if (n == 0) {||| 110 cout << ""0\n"";||| 111 return 0;||| 112 };||| 113 solve(0, n - 1);||| 114 int ans = 0;||| 115 for (int i = 0; i < n; i++) {||| 116 ans = max(ans, dp[i]);||| 117 }||| 118 cout << ans << ""\n"";||| 119 return 0;||| 120 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 struct info {||| 5 int maxi = 0;||| 6 };||| 7 struct segtree {||| 8 int n;||| 9 vector<info> t;||| 10 segtree(int n) {||| 11 this->n = n + 1;||| 12 t.resize(n * 4);||| 13 }||| 14 void Merge(info &node, info &l, info &r) { node.maxi = max(l.maxi, r.maxi); }||| 15 void update(int node, int l, int r, int i, int j, int add) {||| 16 if (l > j || r < i) {||| 17 return;||| 18 }||| 19 if (l >= i && r <= j) {||| 20 t[node].maxi = add;||| 21 return;||| 22 }||| 23 int mid = (l + r) / 2;||| 24 update(node * 2, l, mid, i, j, add);||| 25 update(node * 2 + 1, mid + 1, r, i, j, add);||| 26 Merge(t[node], t[node * 2], t[node * 2 + 1]);||| 27 }||| 28 void update(int l, int add) { update(1, 0, n, l, l, add); }||| 29 info query(int node, int l, int r, int i, int j) {||| 30 if (l > j || r < i) {||| 31 info x;||| 32 return x;||| 33 }||| 34 if (l >= i && r <= j) {||| 35 return t[node];||| 36 }||| 37 int mid = (l + r) / 2;||| 38 info x = query(node * 2, l, mid, i, j);||| 39 info y = query(node * 2 + 1, mid + 1, r, i, j);||| 40 info ret;||| 41 Merge(ret, x, y);||| 42 return ret;||| 43 }||| 44 int query(int l, int r) {||| 45 info ret = query(1, 0, n, l, r);||| 46 return ret.maxi;||| 47 }||| 48 };||| 49 int n;||| 50 vector<pair<pair<int, int>, int> > a;||| 51 segtree seg(N);||| 52 int dp[N];||| 53 bool comp(pair<pair<int, int>, int> &a, pair<pair<int, int>, int> &b) {||| 54 if (a.first.first == b.first.first) {||| 55 return a.first.second < b.first.second;||| 56 }||| 57 return a.first.first < b.first.first;||| 58 }||| 59 void solve(int l, int r) {||| 60 if (l > r) {||| 61 return;||| 62 }||| 63 if (l == r) {||| 64 dp[l] = max(dp[l], 1);||| 65 return;||| 66 }||| 67 int m = (l + r) / 2;||| 68 solve(l, m);||| 69 vector<pair<pair<int, int>, int> > now;||| 70 for (int i = l; i <= r; i++) {||| 71 now.push_back(a[i]);||| 72 }||| 73 sort(now.begin(), now.end(), comp);||| 74 for (int i = 0; i < now.size(); i++) {||| 75 int x = now[i].first.first;||| 76 int y = now[i].first.second;||| 77 int id = now[i].second;||| 78 if (id >= l && id <= m) {||| 79 seg.update(y, dp[id]);||| 80 } else {||| 81 int q = seg.query(0, y);||| 82 dp[id] = max(dp[id], q + 1);||| 83 }||| 84 }||| 85 for (int i = 0; i < now.size(); i++) {||| 86 int x = now[i].first.first;||| 87 int y = now[i].first.second;||| 88 int id = now[i].second;||| 89 if (id >= l && id <= m) {||| 90 seg.update(y, 0);||| 91 }||| 92 }||| 93 solve(m + 1, r);||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(nullptr);||| 98 cin >> n;||| 99 for (int i = 1; i <= n; i++) {||| 100 int x, y;||| 101 cin >> x;||| 102 y = i - x;||| 103 if (y >= 0) {||| 104 int sz = a.size();||| 105 a.push_back({{x, y}, sz});||| 106 }||| 107 }||| 108 n = a.size();||| 109 if (n == 0) {||| 110 cout << ""0\n"";||| 111 return 0;||| 112 }||| 113 solve(0, n - 1);||| 114 int ans = 0;||| 115 for (int i = 0; i < n; i++) {||| 116 ans = max(ans, dp[i]);||| 117 }||| 118 cout << ans << ""\n"";||| 119 return 0;||| 120 }||| "	55 return a.first.second > b.first.second;
12	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, ans;||| 4 long long dis[2010][2010], c[2010][2010];||| 5 char s[2010][2010];||| 6 inline void solve(long long row, long long tl, long long tr, long long l,||| 7 long long r) {||| 8 if (l > r) return;||| 9 long long mid = (l + r) >> 1;||| 10 dis[row][mid] = 1000000000;||| 11 long long t = tl;||| 12 for (long long i = tl; i <= tr; i++) {||| 13 long long val = c[row][i] + (i - mid) * (i - mid);||| 14 if (val < dis[row][mid]) {||| 15 dis[row][mid] = val;||| 16 t = i;||| 17 }||| 18 }||| 19 solve(row, tl, t, l, mid - 1);||| 20 solve(row, t, tr, mid + 1, r);||| 21 }||| 22 signed main() {||| 23 scanf(""%lld%lld"", &n, &m);||| 24 for (long long i = 0; i <= n; i++) scanf(""%s"", s[i]);||| 25 for (long long i = 0; i <= n; i++) {||| 26 for (long long j = 0; j <= m; j++) c[i][j] = 1000000000;||| 27 }||| 28 for (long long j = 0; j <= m; j++) {||| 29 long long res = 10000;||| 30 for (long long i = 0; i <= n; i++) {||| 31 if (s[i][j] == '1') res = i;||| 32 c[i][j] = min(c[i][j], (i - res) * (i - res));||| 33 }||| 34 res = 10000;||| 35 for (long long i = n; ~i; i--) {||| 36 if (s[i][j] == '1') res = i;||| 37 c[i][j] = min(c[i][j], (i - res) * (i - res));||| 38 }||| 39 }||| 40 for (long long i = 0; i <= n; i++) {||| 41 solve(i, 0, m, 0, m);||| 42 for (long long j = 0; j <= m; j++) ans += dis[i][j];||| 43 }||| 44 printf(""%lld\n"", ans);||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, ans;||| 4 long long dis[2010][2010], c[2010][2010];||| 5 char s[2010][2010];||| 6 inline void solve(long long row, long long tl, long long tr, long long l,||| 7 long long r) {||| 8 if (l > r) return;||| 9 long long mid = (l + r) >> 1;||| 10 dis[row][mid] = 1000000000;||| 11 long long t = tl;||| 12 for (long long i = tl; i <= tr; i++) {||| 13 long long val = c[row][i] + (i - mid) * (i - mid);||| 14 if (val < dis[row][mid]) {||| 15 dis[row][mid] = val;||| 16 t = i;||| 17 }||| 18 }||| 19 solve(row, tl, t, l, mid - 1);||| 20 solve(row, t, tr, mid + 1, r);||| 21 }||| 22 signed main() {||| 23 scanf(""%lld%lld"", &n, &m);||| 24 for (long long i = 0; i <= n; i++) scanf(""%s"", s[i]);||| 25 for (long long i = 0; i <= n; i++) {||| 26 for (long long j = 0; j <= m; j++) c[i][j] = 1000000000;||| 27 }||| 28 for (long long j = 0; j <= m; j++) {||| 29 long long res = 1000;||| 30 for (long long i = 0; i <= n; i++) {||| 31 if (s[i][j] == '1') res = i;||| 32 c[i][j] = min(c[i][j], (i - res) * (i - res));||| 33 }||| 34 res = 10000;||| 35 for (long long i = n; ~i; i--) {||| 36 if (s[i][j] == '1') res = i;||| 37 c[i][j] = min(c[i][j], (i - res) * (i - res));||| 38 }||| 39 }||| 40 for (long long i = 0; i <= n; i++) {||| 41 solve(i, 0, m, 0, m);||| 42 for (long long j = 0; j <= m; j++) ans += dis[i][j];||| 43 }||| 44 printf(""%lld\n"", ans);||| 45 return 0;||| 46 }||| "	29 long long res = 10000;
12	9	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const int MOD = (int)1e9 + 7;||| 5 const int N = (int)5e7;||| 6 struct CHT {||| 7 vector<pair<int, int> > lines;||| 8 vector<pair<int, int> > st;||| 9 int ind;||| 10 int f(pair<int, int> p, int first) { return p.first * first + p.second; }||| 11 bool check(pair<int, int> a, pair<int, int> b, pair<int, int> c) {||| 12 return 1LL * (b.first - a.first) * (c.second - b.second) >=||| 13 1LL * (c.first - b.first) * (b.second - a.second);||| 14 }||| 15 void clear() {||| 16 lines.clear();||| 17 st.clear();||| 18 ind = 0;||| 19 }||| 20 void add(pair<int, int> p) { lines.push_back(p); }||| 21 void build() {||| 22 sort(lines.begin(), lines.end());||| 23 reverse(lines.begin(), lines.end());||| 24 for (auto &p : lines) {||| 25 while ((int)st.size() >= 2 &&||| 26 check(st[st.size() - 2], st[st.size() - 1], p))||| 27 st.pop_back();||| 28 st.push_back(p);||| 29 }||| 30 }||| 31 int query(int first) {||| 32 while (ind < (int)st.size() - 1 &&||| 33 f(st[ind], first) > f(st[ind + 1], first))||| 34 ind++;||| 35 return f(st[ind], first);||| 36 }||| 37 };||| 38 CHT cht;||| 39 int T;||| 40 int n, m;||| 41 long long ans;||| 42 char v[2005][2005];||| 43 int ind[2005];||| 44 vector<int> poles[2005];||| 45 int lgput(int n, long long p) {||| 46 int ans = 1, first = n;||| 47 while (p) {||| 48 if (p & 1) ans = 1LL * ans * first % MOD;||| 49 first = 1LL * first * first % MOD;||| 50 p >>= 1;||| 51 }||| 52 return ans;||| 53 }||| 54 void precalc() {}||| 55 void solve() {||| 56 cin >> n >> m;||| 57 for (int i = 0; i <= n; i++) {||| 58 cin >> v[i];||| 59 for (int j = 0; j <= m; j++) {||| 60 if (v[i][j] == '1') poles[j].push_back(i);||| 61 }||| 62 }||| 63 for (int i = 0; i <= n; i++) {||| 64 for (int j = 0; j <= m; j++) {||| 65 if (poles[j].empty()) continue;||| 66 if (poles[j][ind[j]] < i && ind[j] < (int)poles[j].size() - 1) {||| 67 ind[j]++;||| 68 }||| 69 }||| 70 cht.clear();||| 71 for (int j = 0; j <= m; j++) {||| 72 if (poles[j].empty()) continue;||| 73 int p = ind[j];||| 74 if (ind[j] && abs(i - poles[j][ind[j] - 1]) < abs(i - poles[j][ind[j]]))||| 75 p = ind[j] - 1;||| 76 p = poles[j][p];||| 77 cht.add(make_pair(-2 * j, j * j + (i - p) * (i - p)));||| 78 }||| 79 cht.build();||| 80 for (int j = 0; j <= m; j++) {||| 81 int val = cht.query(j) + j * j;||| 82 ans += val;||| 83 }||| 84 }||| 85 cout << ans << ""\n"";||| 86 }||| 87 int main() {||| 88 ios_base ::sync_with_stdio(false);||| 89 cin.tie(0);||| 90 cout.tie(0);||| 91 T = 1;||| 92 precalc();||| 93 for (; T; T--) {||| 94 solve();||| 95 }||| 96 return 0;||| 97 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const int MOD = (int)1e9 + 7;||| 5 const int N = (int)5e7;||| 6 struct CHT {||| 7 vector<pair<int, int> > lines;||| 8 vector<pair<int, int> > st;||| 9 int ind;||| 10 int f(pair<int, int> p, int first) { return p.first * first + p.second; }||| 11 bool check(pair<int, int> a, pair<int, int> b, pair<int, int> c) {||| 12 return 1LL * (b.first - a.first) * (c.second - b.second) >=||| 13 1LL * (c.first - b.first) * (b.second - a.second);||| 14 }||| 15 void clear() {||| 16 lines.clear();||| 17 st.clear();||| 18 ind = 0;||| 19 }||| 20 void add(pair<int, int> p) { lines.push_back(p); }||| 21 void build() {||| 22 sort(lines.begin(), lines.end());||| 23 reverse(lines.begin(), lines.end());||| 24 for (auto &p : lines) {||| 25 while ((int)st.size() >= 2 &&||| 26 check(st[st.size() - 2], st[st.size() - 1], p))||| 27 st.pop_back();||| 28 st.push_back(p);||| 29 }||| 30 }||| 31 int query(int first) {||| 32 while (ind < (int)st.size() - 1 &&||| 33 f(st[ind], first) > f(st[ind + 1], first))||| 34 ind++;||| 35 return f(st[ind], first);||| 36 }||| 37 };||| 38 CHT cht;||| 39 int T;||| 40 int n, m;||| 41 long long ans;||| 42 char v[2005][2005];||| 43 int ind[2005];||| 44 vector<int> poles[2005];||| 45 int lgput(int n, long long p) {||| 46 int ans = 1, first = n;||| 47 while (p) {||| 48 if (p & 1) ans = 1LL * ans * first % MOD;||| 49 first = 1LL * first * first % MOD;||| 50 p >>= 1;||| 51 }||| 52 return ans;||| 53 }||| 54 void precalc() {}||| 55 void solve() {||| 56 cin >> n >> m;||| 57 for (int i = 0; i <= n; i++) {||| 58 cin >> v[i];||| 59 for (int j = 0; j <= m; j++) {||| 60 if (v[i][j] == '1') poles[j].push_back(i);||| 61 }||| 62 }||| 63 for (int i = 0; i <= n; i++) {||| 64 for (int j = 0; j <= m; j++) {||| 65 if (poles[j].empty()) continue;||| 66 if (poles[j][ind[j]] < i && ind[j] < (int)poles[j].size() - 1) {||| 67 ind[j]++;||| 68 }||| 69 }||| 70 cht.clear();||| 71 for (int j = 0; j <= m; j++) {||| 72 if (poles[j].empty()) continue;||| 73 int p = ind[j];||| 74 if (ind[j] && abs(i - poles[j][ind[j] - 1]) < abs(i - poles[j][ind[j]]))||| 75 p = ind[j - 1];||| 76 p = poles[j][p];||| 77 cht.add(make_pair(-2 * j, j * j + (i - p) * (i - p)));||| 78 }||| 79 cht.build();||| 80 for (int j = 0; j <= m; j++) {||| 81 int val = cht.query(j) + j * j;||| 82 ans += val;||| 83 }||| 84 }||| 85 cout << ans << ""\n"";||| 86 }||| 87 int main() {||| 88 ios_base ::sync_with_stdio(false);||| 89 cin.tie(0);||| 90 cout.tie(0);||| 91 T = 1;||| 92 precalc();||| 93 for (; T; T--) {||| 94 solve();||| 95 }||| 96 return 0;||| 97 }||| "	75 p = ind[j] - 1;
13	175	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 string sep;||| 12 for (const T &x : v) os << sep << x, sep = "" "";||| 13 return os;||| 14 }||| 15 const int mxN = 1e5 + 1, oo = 1e9;||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 string s;||| 21 cin >> s;||| 22 int a[3] = {};||| 23 for (int i = 0; i < 3; ++i) a[i] = count(begin(s), end(s), 'A' + i);||| 24 int n = s.size();||| 25 cout << ((n % 2 == 0 and a[0] + a[2] == a[1]) ? ""Yes\n"" : ""No\n"");||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 string sep;||| 12 for (const T &x : v) os << sep << x, sep = "" "";||| 13 return os;||| 14 }||| 15 const int mxN = 1e5 + 1, oo = 1e9;||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 string s;||| 21 cin >> s;||| 22 int a[3] = {};||| 23 for (int i = 0; i < 3; ++i) a[i] = count(begin(s), end(s), 'A' + i);||| 24 int n = s.size();||| 25 cout << ((n % 2 == 0 and a[0] + a[2] <= a[1]) ? ""Yes\n"" : ""No\n"");||| 26 }||| 27 }||| "	"25 cout << ((n % 2 == 0 and a[0] + a[2] == a[1]) ? ""Yes\n"" : ""No\n"");"
13	188	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e5 + 2;||| 5 inline void solve() {||| 6 string s;||| 7 cin >> s;||| 8 long long a = 0, b = 0, c = 0;||| 9 for (int i = 0; i < s.size(); ++i) {||| 10 if (s[i] == 'A') a++;||| 11 if (s[i] == 'B') b++;||| 12 if (s[i] == 'C') c++;||| 13 }||| 14 if (b == (a + c))||| 15 return void(cout << ""YES""||| 16 << ""\n"");||| 17 return void(cout << ""NO""||| 18 << ""\n"");||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 ;||| 26 int tc = 1;||| 27 cin >> tc;||| 28 while (tc--) solve();||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e5 + 2;||| 5 inline void solve() {||| 6 string s;||| 7 cin >> s;||| 8 long long a = 0, b = 0, c = 0;||| 9 for (int i = 0; i < s.size(); ++i) {||| 10 if (s[i] == 'A') a++;||| 11 if (s[i] == 'B') b++;||| 12 if (s[i] == 'C') c++;||| 13 }||| 14 if (b >= (a + c))||| 15 return void(cout << ""YES""||| 16 << ""\n"");||| 17 return void(cout << ""NO""||| 18 << ""\n"");||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 ;||| 26 int tc = 1;||| 27 cin >> tc;||| 28 while (tc--) solve();||| 29 return 0;||| 30 }||| "	14 if (b == (a + c))
13	183	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 long long int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 if (s[i] == 'A')||| 12 a++;||| 13 else if (s[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (b == c + a)||| 19 cout << ""YES\n"";||| 20 else||| 21 cout << ""NO\n"";||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 long long int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 if (s[i] == 'A')||| 12 a++;||| 13 else if (s[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (b == c + a)||| 19 cout << ""YES\n"";||| 20 else||| 21 cout << ""N0\n"";||| 22 }||| 23 return 0;||| 24 }||| "	"21 cout << ""NO\n"";"
13	150	"1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 auto getint() -> T {||| 4 T ret = 0;||| 5 char c;||| 6 while ((c = getchar()) && !isspace(c)) {||| 7 ret = ret * 10 + c - '0';||| 8 }||| 9 return ret;||| 10 }||| 11 int main() {||| 12 unsigned T = getint<unsigned>(), cntA, cntB, cntC;||| 13 char c;||| 14 while (T--) {||| 15 cntA = cntB = cntC = 0;||| 16 while ((c = getchar()) && !isspace(c)) {||| 17 if (c == 'A')||| 18 ++cntA;||| 19 else if (c == 'B')||| 20 ++cntB;||| 21 else||| 22 ++cntC;||| 23 }||| 24 printf(""%s\n"", ((cntA + cntC == cntB) ? ""YES"" : ""NO""));||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 auto getint() -> T {||| 4 T ret = 0;||| 5 char c;||| 6 while ((c = getchar()) && !isspace(c)) {||| 7 ret = ret * 10 + c - '0';||| 8 }||| 9 return ret;||| 10 }||| 11 int main() {||| 12 unsigned T = getint<unsigned>(), cntA, cntB, cntC;||| 13 char c;||| 14 while (T--) {||| 15 cntA = cntB = cntC = 0;||| 16 while ((c = getchar()) && !isspace(c)) {||| 17 if (c == 'A')||| 18 ++cntA;||| 19 else if (c == 'B')||| 20 ++cntB;||| 21 else||| 22 ++cntC;||| 23 }||| 24 printf(""%s\n"", ((cntA + cntC <= cntB) ? ""YES"" : ""NO""));||| 25 }||| 26 }||| "	"24 printf(""%s\n"", ((cntA + cntC == cntB) ? ""YES"" : ""NO""));"
13	77	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 17;||| 4 int q, a, b, c;||| 5 void solve() {||| 6 string s;||| 7 cin >> s;||| 8 for (int i = 0; i < s.size(); i++) {||| 9 if (s[i] == 'A') {||| 10 a++;||| 11 }||| 12 if (s[i] == 'B') {||| 13 b++;||| 14 }||| 15 if (s[i] == 'C') {||| 16 c++;||| 17 }||| 18 }||| 19 if (b == (a + c) && b >= a && b >= c) {||| 20 cout << ""YES\n"";||| 21 } else||| 22 cout << ""NO\n"";||| 23 a = 0;||| 24 b = 0;||| 25 c = 0;||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(false);||| 29 cin.tie(NULL);||| 30 cout.tie(NULL);||| 31 int t = 1;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 17;||| 4 int q, a, b, c;||| 5 void solve() {||| 6 string s;||| 7 cin >> s;||| 8 for (int i = 0; i < s.size(); i++) {||| 9 if (s[i] == 'A') {||| 10 a++;||| 11 }||| 12 if (s[i] == 'B') {||| 13 b++;||| 14 }||| 15 if (s[i] == 'C') {||| 16 c++;||| 17 }||| 18 }||| 19 if (b >= (a + c) && b >= a && b >= c) {||| 20 cout << ""YES\n"";||| 21 } else||| 22 cout << ""NO\n"";||| 23 a = 0;||| 24 b = 0;||| 25 c = 0;||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(false);||| 29 cin.tie(NULL);||| 30 cout.tie(NULL);||| 31 int t = 1;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	19 if (b == (a + c) && b >= a && b >= c) {
13	43	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, i;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 char s[55];||| 7 int a = 0, b = 0, c = 0, l;||| 8 scanf(""%s"", s);||| 9 l = strlen(s);||| 10 for (i = 0; i < l; i++) {||| 11 if (s[i] == 'A')||| 12 a++;||| 13 else if (s[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (a + c == b) {||| 19 printf(""YES\n"");||| 20 } else||| 21 printf(""NO\n"");||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, i;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 char s[55];||| 7 int a = 0, b = 0, c = 0, l;||| 8 scanf(""%s"", s);||| 9 l = strlen(s);||| 10 for (i = 0; i < l; i++) {||| 11 if (s[i] == 'A')||| 12 a++;||| 13 else if (s[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (a + c == b) {||| 19 printf(""YES\n"");||| 20 } else||| 21 printf(""N0\n"");||| 22 }||| 23 return 0;||| 24 }||| "	"21 printf(""NO\n"");"
13	173	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, i, j, da, db, dc;||| 4 string a;||| 5 int main() {||| 6 cin >> n;||| 7 for (i = 0; i < n; ++i) {||| 8 cin >> a;||| 9 da = 0;||| 10 db = 0;||| 11 dc = 0;||| 12 for (j = 0; j < a.size(); ++j) {||| 13 if (a[j] == 'A') ++da;||| 14 if (a[j] == 'B') ++db;||| 15 if (a[j] == 'C') ++dc;||| 16 }||| 17 if (da + dc == db)||| 18 cout << ""YES\n"";||| 19 else||| 20 cout << ""NO\n"";||| 21 }||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, i, j, da, db, dc;||| 4 string a;||| 5 int main() {||| 6 cin >> n;||| 7 for (i = 0; i < n; ++i) {||| 8 cin >> a;||| 9 da = 0;||| 10 db = 0;||| 11 dc = 0;||| 12 for (j = 0; j < a.size(); ++j) {||| 13 if (a[j] == 'A') ++da;||| 14 if (a[j] == 'B') ++db;||| 15 if (a[j] == 'C') ++dc;||| 16 }||| 17 if (da + dc == db)||| 18 cout << ""YES"";||| 19 else||| 20 cout << ""NO"";||| 21 }||| 22 }||| "	"18 cout << ""YES\n"";"
13	5	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 string s;||| 6 cin >> T;||| 7 while (T-- > 0) {||| 8 cin >> s;||| 9 int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 if (s[i] == 'A') {||| 12 ++a;||| 13 } else if (s[i] == 'B') {||| 14 ++b;||| 15 } else {||| 16 ++c;||| 17 }||| 18 }||| 19 if (a == 0 && b == c) {||| 20 cout << ""YES"" << endl;||| 21 continue;||| 22 }||| 23 if (a == b && c == 0) {||| 24 cout << ""YES"" << endl;||| 25 continue;||| 26 }||| 27 if (b == a + c) {||| 28 cout << ""YES"" << endl;||| 29 continue;||| 30 }||| 31 cout << ""NO"" << endl;||| 32 }||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 string s;||| 6 cin >> T;||| 7 while (T-- > 0) {||| 8 cin >> s;||| 9 int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 if (s[i] == 'A') {||| 12 ++a;||| 13 } else if (s[i] == 'B') {||| 14 ++b;||| 15 } else {||| 16 ++c;||| 17 }||| 18 }||| 19 if (a == 0 && b == c) {||| 20 cout << ""YES"" << endl;||| 21 continue;||| 22 }||| 23 if (a == b && c == 0) {||| 24 cout << ""YES"" << endl;||| 25 continue;||| 26 }||| 27 if (b = a + c) {||| 28 cout << ""YES"" << endl;||| 29 continue;||| 30 }||| 31 cout << ""NO"" << endl;||| 32 }||| 33 return 0;||| 34 }||| "	27 if (b == a + c) {
13	248	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int cubeta[1000];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 cubeta[s[i]]++;||| 12 }||| 13 if (cubeta['A'] == 0) {||| 14 if (cubeta['B'] == cubeta['C']) {||| 15 cout << ""YES\n"";||| 16 } else {||| 17 cout << ""NO\n"";||| 18 }||| 19 } else if (cubeta['C'] == 0) {||| 20 if (cubeta['B'] == cubeta['A']) {||| 21 cout << ""YES\n"";||| 22 } else {||| 23 cout << ""NO\n"";||| 24 }||| 25 } else if (cubeta['B'] == 0) {||| 26 cout << ""NO\n"";||| 27 } else {||| 28 if (cubeta['A'] <= cubeta['B'] &&||| 29 cubeta['B'] - cubeta['A'] == cubeta['C']) {||| 30 cout << ""YES\n"";||| 31 } else {||| 32 cout << ""NO\n"";||| 33 }||| 34 }||| 35 cubeta['A'] = 0;||| 36 cubeta['B'] = 0;||| 37 cubeta['C'] = 0;||| 38 }||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int cubeta[1000];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.size(); i++) {||| 11 cubeta[s[i]]++;||| 12 }||| 13 if (cubeta['A'] == 0) {||| 14 if (cubeta['B'] == cubeta['C']) {||| 15 cout << ""YES\n"";||| 16 } else {||| 17 cout << ""NO"";||| 18 }||| 19 } else if (cubeta['C'] == 0) {||| 20 if (cubeta['B'] == cubeta['A']) {||| 21 cout << ""YES\n"";||| 22 } else {||| 23 cout << ""NO"";||| 24 }||| 25 } else if (cubeta['B'] == 0) {||| 26 cout << ""NO\n"";||| 27 } else {||| 28 if (cubeta['A'] <= cubeta['B'] &&||| 29 cubeta['B'] - cubeta['A'] == cubeta['C']) {||| 30 cout << ""YES\n"";||| 31 } else {||| 32 cout << ""NO\n"";||| 33 }||| 34 }||| 35 cubeta['A'] = 0;||| 36 cubeta['B'] = 0;||| 37 cubeta['C'] = 0;||| 38 }||| 39 return 0;||| 40 }||| "	"17 cout << ""NO\n"";"
13	230	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool cat(string s) {||| 4 int a = 0, b = 0, c = 0;||| 5 for (int i = 0; i < s.size(); i++) {||| 6 if (s[i] == 'A')||| 7 a++;||| 8 else if (s[i] == 'B')||| 9 b++;||| 10 else||| 11 c++;||| 12 }||| 13 if ((b - c) == a)||| 14 return true;||| 15 else||| 16 return false;||| 17 }||| 18 int main() {||| 19 string s;||| 20 int x;||| 21 cin >> x;||| 22 for (int i = 0; i < x; i++) {||| 23 cin >> s;||| 24 if (cat(s))||| 25 cout << ""YES"" << endl;||| 26 else||| 27 cout << ""NO"" << endl;||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool cat(string s) {||| 4 int a = 0, b = 0, c = 0;||| 5 for (int i = 0; i < s.size(); i++) {||| 6 if (s[i] == 'A')||| 7 a++;||| 8 else if (s[i] == 'B')||| 9 b++;||| 10 else||| 11 c++;||| 12 }||| 13 if (abs(b - c) == a)||| 14 return true;||| 15 else||| 16 return false;||| 17 }||| 18 int main() {||| 19 string s;||| 20 int x;||| 21 cin >> x;||| 22 for (int i = 0; i < x; i++) {||| 23 cin >> s;||| 24 if (cat(s))||| 25 cout << ""YES"" << endl;||| 26 else||| 27 cout << ""NO"" << endl;||| 28 }||| 29 }||| "	13 if ((b - c) == a)
13	258	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool cat(string s) {||| 4 int a = 0, b = 0, c = 0;||| 5 for (int i = 0; i < s.size(); i++) {||| 6 if (s[i] == 'A')||| 7 a++;||| 8 else if (s[i] == 'B')||| 9 b++;||| 10 else||| 11 c++;||| 12 }||| 13 if ((b - c) == a)||| 14 return true;||| 15 else||| 16 return false;||| 17 }||| 18 int main() {||| 19 string s;||| 20 int x;||| 21 cin >> x;||| 22 for (int i = 0; i < x; i++) {||| 23 cin >> s;||| 24 if (cat(s))||| 25 cout << ""YES"" << endl;||| 26 else||| 27 cout << ""NO"" << endl;||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool cat(string s) {||| 4 int a = 0, b = 0, c = 0;||| 5 for (int i = 0; i < s.size(); i++) {||| 6 if (s[i] == 'a')||| 7 a++;||| 8 else if (s[i] == 'b')||| 9 b++;||| 10 else||| 11 c++;||| 12 }||| 13 if (abs(b - c) == a)||| 14 return true;||| 15 else||| 16 return false;||| 17 }||| 18 int main() {||| 19 string s;||| 20 int x;||| 21 cin >> x;||| 22 for (int i = 0; i < x; i++) {||| 23 cin >> s;||| 24 if (cat(s))||| 25 cout << ""YES"" << endl;||| 26 else||| 27 cout << ""NO"" << endl;||| 28 }||| 29 }||| "	6 if (s[i] == 'A')
13	216	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int test(string str) {||| 4 int len = str.length();||| 5 int a = 0, b = 0, c = 0;||| 6 for (int i = 0; i < len; i++) {||| 7 if (str[i] == 'A')||| 8 a += 1;||| 9 else if (str[i] == 'B')||| 10 b += 1;||| 11 else if (str[i] == 'C')||| 12 c += 1;||| 13 }||| 14 if (a <= b && b - a == c) return 1;||| 15 return 0;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 string s;||| 21 while (t--) {||| 22 cin >> s;||| 23 if (test(s))||| 24 cout << ""YES"" << endl;||| 25 else||| 26 cout << ""NO"" << endl;||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int test(string str) {||| 4 int len = str.length();||| 5 int a = 0, b = 0, c = 0;||| 6 for (int i = 0; i < len; i++) {||| 7 if (str[i] == 'A')||| 8 a += 1;||| 9 else if (str[i] == 'B')||| 10 b += 1;||| 11 else if (str[i] == 'C')||| 12 c += 1;||| 13 }||| 14 if (a == b && b - a == c) return 1;||| 15 return 0;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 string s;||| 21 while (t--) {||| 22 cin >> s;||| 23 if (test(s))||| 24 cout << ""YES"" << endl;||| 25 else||| 26 cout << ""NO"" << endl;||| 27 }||| 28 return 0;||| 29 }||| "	14 if (a <= b && b - a == c) return 1;
13	73	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 template <class T, class U>||| 7 ostream &operator<<(ostream &os, const pair<T, U> &p) {||| 8 os << '(' << p.first << ',' << p.second << ')';||| 9 return os;||| 10 }||| 11 template <class T>||| 12 ostream &operator<<(ostream &os, const vector<T> &v) {||| 13 os << '{';||| 14 for (int i = 0; i < (int)v.size(); i++) {||| 15 if (i) {||| 16 os << ',';||| 17 }||| 18 os << v[i];||| 19 }||| 20 os << '}';||| 21 return os;||| 22 }||| 23 ostream &operator<<(ostream &os, const set<int> &se) {||| 24 os << '{';||| 25 int now = 0;||| 26 for (auto x : se) {||| 27 if (now) {||| 28 os << ',';||| 29 }||| 30 os << x;||| 31 now++;||| 32 }||| 33 os << '}';||| 34 return os;||| 35 }||| 36 void debugg() { cerr << endl; }||| 37 template <class T, class... Args>||| 38 void debugg(const T &x, const Args &...args) {||| 39 cerr << "" "" << x;||| 40 debugg(args...);||| 41 }||| 42 using namespace std;||| 43 const int inf = (1 << 30) - 1;||| 44 const long long linf = 1LL << 61;||| 45 const int MAX = 510000;||| 46 int dy[8] = {0, 1, 0, -1, 1, -1, -1, 1};||| 47 int dx[8] = {-1, 0, 1, 0, 1, -1, 1, -1};||| 48 const double pi = acos(-1);||| 49 const double eps = 1e-8;||| 50 template <typename T1, typename T2>||| 51 inline bool chmin(T1 &a, T2 b) {||| 52 if (a > b) {||| 53 a = b;||| 54 return true;||| 55 } else||| 56 return false;||| 57 }||| 58 template <typename T1, typename T2>||| 59 inline bool chmax(T1 &a, T2 b) {||| 60 if (a < b) {||| 61 a = b;||| 62 return true;||| 63 } else||| 64 return false;||| 65 }||| 66 template <typename T>||| 67 inline void print(T &a) {||| 68 int sz = a.size();||| 69 for (auto itr = a.begin(); itr != a.end(); itr++) {||| 70 cout << *itr;||| 71 sz--;||| 72 if (sz) cout << "" "";||| 73 }||| 74 cout << ""\n"";||| 75 }||| 76 template <typename T1, typename T2>||| 77 inline void print2(T1 a, T2 b) {||| 78 cout << a << "" "" << b << ""\n"";||| 79 }||| 80 template <typename T1, typename T2, typename T3>||| 81 inline void print3(T1 a, T2 b, T3 c) {||| 82 cout << a << "" "" << b << "" "" << c << ""\n"";||| 83 }||| 84 void mark() {||| 85 cout << ""#""||| 86 << ""\n"";||| 87 }||| 88 long long pcount(long long x) { return __builtin_popcountll(x); }||| 89 const int mod = 998244353;||| 90 void solve() {||| 91 string s;||| 92 cin >> s;||| 93 int cnt = 0;||| 94 for (auto c : s)||| 95 if (c == 'B') cnt++;||| 96 if (cnt * 2 == s.size())||| 97 cout << ""YES\n"";||| 98 else||| 99 cout << ""NO\n"";||| 100 }||| 101 int main() {||| 102 cin.tie(nullptr);||| 103 ios::sync_with_stdio(false);||| 104 int t = 1;||| 105 cin >> t;||| 106 while (t--) {||| 107 solve();||| 108 }||| 109 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 template <class T, class U>||| 7 ostream &operator<<(ostream &os, const pair<T, U> &p) {||| 8 os << '(' << p.first << ',' << p.second << ')';||| 9 return os;||| 10 }||| 11 template <class T>||| 12 ostream &operator<<(ostream &os, const vector<T> &v) {||| 13 os << '{';||| 14 for (int i = 0; i < (int)v.size(); i++) {||| 15 if (i) {||| 16 os << ',';||| 17 }||| 18 os << v[i];||| 19 }||| 20 os << '}';||| 21 return os;||| 22 }||| 23 ostream &operator<<(ostream &os, const set<int> &se) {||| 24 os << '{';||| 25 int now = 0;||| 26 for (auto x : se) {||| 27 if (now) {||| 28 os << ',';||| 29 }||| 30 os << x;||| 31 now++;||| 32 }||| 33 os << '}';||| 34 return os;||| 35 }||| 36 void debugg() { cerr << endl; }||| 37 template <class T, class... Args>||| 38 void debugg(const T &x, const Args &...args) {||| 39 cerr << "" "" << x;||| 40 debugg(args...);||| 41 }||| 42 using namespace std;||| 43 const int inf = (1 << 30) - 1;||| 44 const long long linf = 1LL << 61;||| 45 const int MAX = 510000;||| 46 int dy[8] = {0, 1, 0, -1, 1, -1, -1, 1};||| 47 int dx[8] = {-1, 0, 1, 0, 1, -1, 1, -1};||| 48 const double pi = acos(-1);||| 49 const double eps = 1e-8;||| 50 template <typename T1, typename T2>||| 51 inline bool chmin(T1 &a, T2 b) {||| 52 if (a > b) {||| 53 a = b;||| 54 return true;||| 55 } else||| 56 return false;||| 57 }||| 58 template <typename T1, typename T2>||| 59 inline bool chmax(T1 &a, T2 b) {||| 60 if (a < b) {||| 61 a = b;||| 62 return true;||| 63 } else||| 64 return false;||| 65 }||| 66 template <typename T>||| 67 inline void print(T &a) {||| 68 int sz = a.size();||| 69 for (auto itr = a.begin(); itr != a.end(); itr++) {||| 70 cout << *itr;||| 71 sz--;||| 72 if (sz) cout << "" "";||| 73 }||| 74 cout << ""\n"";||| 75 }||| 76 template <typename T1, typename T2>||| 77 inline void print2(T1 a, T2 b) {||| 78 cout << a << "" "" << b << ""\n"";||| 79 }||| 80 template <typename T1, typename T2, typename T3>||| 81 inline void print3(T1 a, T2 b, T3 c) {||| 82 cout << a << "" "" << b << "" "" << c << ""\n"";||| 83 }||| 84 void mark() {||| 85 cout << ""#""||| 86 << ""\n"";||| 87 }||| 88 long long pcount(long long x) { return __builtin_popcountll(x); }||| 89 const int mod = 998244353;||| 90 void solve() {||| 91 string s;||| 92 cin >> s;||| 93 int cnt = 0;||| 94 for (auto c : s)||| 95 if (c == 'B') cnt++;||| 96 if (cnt * 2 >= s.size())||| 97 cout << ""YES\n"";||| 98 else||| 99 cout << ""NO\n"";||| 100 }||| 101 int main() {||| 102 cin.tie(nullptr);||| 103 ios::sync_with_stdio(false);||| 104 int t = 1;||| 105 cin >> t;||| 106 while (t--) {||| 107 solve();||| 108 }||| 109 }||| "	96 if (cnt * 2 == s.size())
13	212	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 int cnt = 0;||| 11 for (int i = 0; i < n; i++) {||| 12 cnt += s[i] == 'B';||| 13 }||| 14 if (cnt + cnt == n)||| 15 cout << ""YES\n"";||| 16 else||| 17 cout << ""NO\n"";||| 18 }||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 int cnt = 0;||| 11 for (int i = 0; i < n; i++) {||| 12 cnt += s[i] == 'B';||| 13 }||| 14 if (cnt + cnt >= n)||| 15 cout << ""YES\n"";||| 16 else||| 17 cout << ""NO\n"";||| 18 }||| 19 }||| "	14 if (cnt + cnt == n)
13	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str;||| 8 cin >> str;||| 9 int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < str.size(); i++) {||| 11 if (str[i] == 'A')||| 12 a++;||| 13 else if (str[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (a + c == b)||| 19 cout << ""YES\n"";||| 20 else||| 21 cout << ""NO\n"";||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str;||| 8 cin >> str;||| 9 int a = 0, b = 0, c = 0;||| 10 for (int i = 0; i < str.size(); i++) {||| 11 if (str[i] == 'A')||| 12 a++;||| 13 else if (str[i] == 'B')||| 14 b++;||| 15 else||| 16 c++;||| 17 }||| 18 if (a + c == b)||| 19 cout << ""YES"";||| 20 else||| 21 cout << ""NO"";||| 22 }||| 23 return 0;||| 24 }||| "	"19 cout << ""YES\n"";"
13	9	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 char str[100];||| 7 scanf(""%s"", str);||| 8 int a = 0, b = 0, c = 0;||| 9 for (int i = 0; i < strlen(str); i++) {||| 10 if (str[i] == 'A') {||| 11 a++;||| 12 } else if (str[i] == 'B') {||| 13 b++;||| 14 } else {||| 15 c++;||| 16 }||| 17 }||| 18 int d = a + c;||| 19 if (d == b) {||| 20 printf(""YES\n"");||| 21 } else||| 22 printf(""NO\n"");||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 char str[100];||| 7 scanf(""%s"", str);||| 8 int a = 0, b = 0, c = 0;||| 9 for (int i = 0; i < strlen(str); i++) {||| 10 if (str[i] == 'A') {||| 11 a++;||| 12 } else if (str[i] == 'B') {||| 13 b++;||| 14 } else {||| 15 c++;||| 16 }||| 17 }||| 18 int d = a + c;||| 19 if (d == b) {||| 20 printf(""YES"");||| 21 } else||| 22 printf(""NO"");||| 23 }||| 24 return 0;||| 25 }||| "	"20 printf(""YES\n"");"
13	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int l = s.length(), counta = 0, countb = 0, countc = 0, i;||| 10 for (i = 0; i < l; i++) {||| 11 if (s[i] == 'A') counta++;||| 12 if (s[i] == 'B') countb++;||| 13 if (s[i] == 'C') countc++;||| 14 }||| 15 if (countb == counta + countc)||| 16 cout << ""YES""||| 17 << ""\n"";||| 18 else||| 19 cout << ""NO""||| 20 << ""\n"";||| 21 }||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int l = s.length(), counta = 0, countb = 0, countc = 0, i;||| 10 for (i = 0; i < l; i++) {||| 11 if (s[i] == 'A') counta++;||| 12 if (s[i] == 'B') countb++;||| 13 if (s[i] == 'C') countc++;||| 14 }||| 15 if (countb >= counta + countc)||| 16 cout << ""YES""||| 17 << ""\n"";||| 18 else||| 19 cout << ""NO""||| 20 << ""\n"";||| 21 }||| 22 }||| "	15 if (countb == counta + countc)
14	280	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int a[n];||| 10 vector<pair<pair<int, int>, int>> res;||| 11 for (int i = 0; i < n; i++) cin >> a[i];||| 12 for (int i = 0; i < n; i++) {||| 13 int m = a[i];||| 14 int ind = i;||| 15 for (int j = i + 1; j < n; j++) {||| 16 if (a[j] < a[ind]) {||| 17 m = a[j];||| 18 ind = j;||| 19 }||| 20 }||| 21 if (i != ind) {||| 22 int k = a[ind];||| 23 for (int j = ind; j > i; j--) {||| 24 a[j] = a[j - 1];||| 25 }||| 26 a[i] = k;||| 27 res.push_back({{i + 1, ind + 1}, abs(ind - i)});||| 28 }||| 29 }||| 30 cout << res.size() << endl;||| 31 for (auto x : res) {||| 32 cout << x.first.first << "" "" << x.first.second << "" "" << x.second << endl;||| 33 }||| 34 }||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int a[n];||| 10 vector<pair<pair<int, int>, int>> res;||| 11 for (int i = 0; i < n; i++) cin >> a[i];||| 12 for (int i = 0; i < n; i++) {||| 13 int m = a[i];||| 14 int ind = i;||| 15 for (int j = i + 1; j < n; j++) {||| 16 if (a[j] < a[i]) {||| 17 m = a[j];||| 18 ind = j;||| 19 }||| 20 }||| 21 if (i != ind) {||| 22 int k = a[ind];||| 23 for (int j = ind; j > i; j--) {||| 24 a[j] = a[j - 1];||| 25 }||| 26 a[i] = k;||| 27 res.push_back({{i + 1, ind + 1}, abs(ind - i)});||| 28 }||| 29 }||| 30 cout << res.size() << endl;||| 31 for (auto x : res) {||| 32 cout << x.first.first << "" "" << x.first.second << "" "" << x.second << endl;||| 33 }||| 34 }||| 35 }||| "	16 if (a[j] < a[ind]) {
14	267	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1000005];||| 4 long long tot;||| 5 struct que {||| 6 long long x, y, z;||| 7 } t[1000005];||| 8 int main() {||| 9 long long tt;||| 10 scanf(""%lld"", &tt);||| 11 while (tt--) {||| 12 long long n;||| 13 tot = 0;||| 14 scanf(""%lld"", &n);||| 15 for (long long i = 1; i <= n; i++) scanf(""%lld"", &a[i]);||| 16 for (long long i = 1; i <= n; i++) {||| 17 long long mi = i;||| 18 for (long long j = i + 1; j <= n; j++)||| 19 if (a[mi] > a[j]) mi = j;||| 20 long long k = a[mi];||| 21 for (long long j = mi - 1; j >= i; j--) a[j + 1] = a[j];||| 22 a[i] = k;||| 23 if (mi != i) t[++tot].x = i, t[tot].y = mi, t[tot].z = mi - i;||| 24 }||| 25 printf(""%lld\n"", tot);||| 26 for (long long i = 1; i <= tot; i++)||| 27 printf(""%lld %lld %lld\n"", t[i].x, t[i].y, t[i].z);||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1000005];||| 4 long long tot;||| 5 struct que {||| 6 long long x, y, z;||| 7 } t[1000005];||| 8 int main() {||| 9 long long tt;||| 10 scanf(""%lld"", &tt);||| 11 while (tt--) {||| 12 long long n;||| 13 tot = 0;||| 14 scanf(""%lld"", &n);||| 15 for (long long i = 1; i <= n; i++) scanf(""%lld"", &a[i]);||| 16 for (long long i = 1; i <= n; i++) {||| 17 long long mi = i;||| 18 for (long long j = i + 1; j <= n; j++)||| 19 if (a[mi] > a[j]) mi = j;||| 20 long long k = a[mi];||| 21 for (long long j = mi - 1; j >= i; j--) a[j + 1] = a[j];||| 22 a[i] = k;||| 23 if (mi != i) t[++tot].x = i, t[++tot].y = mi, t[++tot].z = mi - i;||| 24 }||| 25 printf(""%lld\n"", tot);||| 26 for (long long i = 1; i <= tot; i++)||| 27 printf(""%lld %lld %lld\n"", t[i].x, t[i].y, t[i].z);||| 28 }||| 29 return 0;||| 30 }||| "	23 if (mi != i) t[++tot].x = i, t[tot].y = mi, t[tot].z = mi - i;
15	37	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void matrix(vector<vector<char> > &v, int r, int c, int row, int col, int k) {||| 7 int ls = -1, rs = -1, i = row, j = col, mn;||| 8 while (i >= 0 and j >= 0 and v[i][j] != '.') {||| 9 ls++;||| 10 i--;||| 11 j--;||| 12 }||| 13 i = row, j = col;||| 14 while (i >= 0 and j < c and v[i][j] != '.') {||| 15 rs++;||| 16 i--;||| 17 j++;||| 18 }||| 19 mn = min(ls, rs);||| 20 if (mn >= k) {||| 21 ls = -1, rs = -1;||| 22 i = row, j = col;||| 23 while (i >= 0 and j >= 0 and v[i][j] != '.' and ls < mn) {||| 24 v[i][j] = '$';||| 25 i--;||| 26 j--;||| 27 ls++;||| 28 }||| 29 i = row, j = col;||| 30 while (i >= 0 and j < c and v[i][j] != '.' and rs < mn) {||| 31 v[i][j] = '$';||| 32 i--;||| 33 j++;||| 34 rs++;||| 35 }||| 36 }||| 37 return;||| 38 }||| 39 void solve() {||| 40 char temp;||| 41 bool ans = 1;||| 42 int r, c, d;||| 43 cin >> r >> c >> d;||| 44 vector<vector<char> > v(r, vector<char>(c));||| 45 for (long long i = 0; i < r; i++)||| 46 for (long long j = 0; j < c; j++) {||| 47 cin >> temp;||| 48 v[i][j] = temp;||| 49 }||| 50 for (long long i = d; i < r; i++) {||| 51 for (long long j = 0; j < c; j++)||| 52 if (v[i][j] != '.') matrix(v, r, c, i, j, d);||| 53 }||| 54 for (long long i = 0; i < r; i++)||| 55 for (long long j = 0; j < c; j++)||| 56 if (v[i][j] == '*') {||| 57 ans = 0;||| 58 break;||| 59 }||| 60 ans ? cout << ""YES"" : cout << ""NO"";||| 61 cout << '\n';||| 62 return;||| 63 }||| 64 int main() {||| 65 ios_base::sync_with_stdio(false);||| 66 cin.tie(NULL);||| 67 cout.tie(NULL);||| 68 long long t;||| 69 cin >> t;||| 70 while (t--) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void matrix(vector<vector<char> > &v, int r, int c, int row, int col, int k) {||| 7 int ls = -1, rs = -1, i = row, j = col, mn;||| 8 while (i >= 0 and j >= 0 and v[i][j] != '.') {||| 9 ls++;||| 10 i--;||| 11 j--;||| 12 }||| 13 i = row, j = col;||| 14 while (i >= 0 and j < c and v[i][j] != '.') {||| 15 rs++;||| 16 i--;||| 17 j++;||| 18 }||| 19 mn = min(ls, rs);||| 20 if (mn >= k) {||| 21 ls = -1, rs = -1;||| 22 i = row, j = col;||| 23 while (i >= 0 and j >= 0 and v[i][j] != '.' and ls <= mn) {||| 24 v[i][j] = '$';||| 25 i--;||| 26 j--;||| 27 ls++;||| 28 }||| 29 i = row, j = col;||| 30 while (i >= 0 and j < c and v[i][j] != '.' and rs <= mn) {||| 31 v[i][j] = '$';||| 32 i--;||| 33 j++;||| 34 rs++;||| 35 }||| 36 }||| 37 return;||| 38 }||| 39 void solve() {||| 40 char temp;||| 41 bool ans = 1;||| 42 int r, c, d;||| 43 cin >> r >> c >> d;||| 44 vector<vector<char> > v(r, vector<char>(c));||| 45 for (long long i = 0; i < r; i++)||| 46 for (long long j = 0; j < c; j++) {||| 47 cin >> temp;||| 48 v[i][j] = temp;||| 49 }||| 50 for (long long i = d; i < r; i++) {||| 51 for (long long j = 0; j < c; j++)||| 52 if (v[i][j] != '.') matrix(v, r, c, i, j, d);||| 53 }||| 54 for (long long i = 0; i < r; i++)||| 55 for (long long j = 0; j < c; j++)||| 56 if (v[i][j] == '*') {||| 57 ans = 0;||| 58 break;||| 59 }||| 60 ans ? cout << ""YES"" : cout << ""NO"";||| 61 cout << '\n';||| 62 return;||| 63 }||| 64 int main() {||| 65 ios_base::sync_with_stdio(false);||| 66 cin.tie(NULL);||| 67 cout.tie(NULL);||| 68 long long t;||| 69 cin >> t;||| 70 while (t--) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	23 while (i >= 0 and j >= 0 and v[i][j] != '.' and ls < mn) {
15	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long max(long long a, long long b) {||| 4 if (a >= b) {||| 5 return a;||| 6 }||| 7 return b;||| 8 }||| 9 long long min(long long a, long long b) {||| 10 if (a <= b) {||| 11 return a;||| 12 }||| 13 return b;||| 14 }||| 15 long long modpower(long long a, long long n, long long d = 1000000007) {||| 16 long long res = 1;||| 17 while (n) {||| 18 if (n % 2) {||| 19 res = ((res % d) * (a % d)) % d;||| 20 n--;||| 21 } else {||| 22 a = ((a % d) * (a % d)) % d;||| 23 n /= 2;||| 24 }||| 25 }||| 26 return res;||| 27 }||| 28 long long modadd(long long a, long long b, long long d = 1000000007) {||| 29 return ((a % d) + (b % d)) % d;||| 30 }||| 31 long long modsubtract(long long a, long long b, long long d = 1000000007) {||| 32 return ((a % d) - (b % d)) % d;||| 33 }||| 34 long long modproduct(long long a, long long b, long long d = 1000000007) {||| 35 return ((a % d) * (b % d)) % d;||| 36 }||| 37 long long n, m, k;||| 38 long long up(long long i, long long j, vector<vector<char>> &input) {||| 39 long long r = i - 1;||| 40 long long c = j + 1;||| 41 long long ct = 0;||| 42 while (r >= 0 && c < m && input[r][c] != '.') {||| 43 ct++;||| 44 r--;||| 45 c++;||| 46 }||| 47 return ct >= k ? ct : 0;||| 48 }||| 49 void fill(long long i, long long j, long long total,||| 50 vector<vector<char>> &input) {||| 51 long long r = i;||| 52 long long c1 = j;||| 53 long long c2 = j;||| 54 while (total) {||| 55 total--;||| 56 input[r][c1] = '#';||| 57 input[r][c2] = '#';||| 58 r--;||| 59 c1--;||| 60 c2++;||| 61 }||| 62 }||| 63 void down(long long i, long long j, vector<vector<char>> &input) {||| 64 long long r = i + 1;||| 65 long long c = j + 1;||| 66 long long ct = 0;||| 67 while (r < n && c < m && input[r][c] != '.') {||| 68 ct++;||| 69 if (ct >= k) {||| 70 long long small = up(r, c, input);||| 71 fill(r, c, 1 + min(small, ct), input);||| 72 }||| 73 r++;||| 74 c++;||| 75 }||| 76 }||| 77 void solve() {||| 78 cin >> n >> m >> k;||| 79 vector<vector<char>> input(n, vector<char>(m));||| 80 for (long long i = 0; i < n; i++) {||| 81 for (long long j = 0; j < m; j++) {||| 82 cin >> input[i][j];||| 83 }||| 84 }||| 85 for (long long i = 0; i < n; i++) {||| 86 for (long long j = 0; j < m; j++) {||| 87 if (input[i][j] != '.') {||| 88 down(i, j, input);||| 89 }||| 90 }||| 91 }||| 92 for (long long i = 0; i < n; i++) {||| 93 for (long long j = 0; j < m; j++) {||| 94 if (input[i][j] == '*') {||| 95 cout << ""NO \n"";||| 96 return;||| 97 }||| 98 }||| 99 }||| 100 cout << ""YES \n"";||| 101 }||| 102 signed main() {||| 103 ios_base::sync_with_stdio(false);||| 104 cin.tie(NULL);||| 105 long long t = 1;||| 106 cin >> t;||| 107 while (t > 0) {||| 108 t--;||| 109 solve();||| 110 }||| 111 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long max(long long a, long long b) {||| 4 if (a >= b) {||| 5 return a;||| 6 }||| 7 return b;||| 8 }||| 9 long long min(long long a, long long b) {||| 10 if (a <= b) {||| 11 return a;||| 12 }||| 13 return b;||| 14 }||| 15 long long modpower(long long a, long long n, long long d = 1000000007) {||| 16 long long res = 1;||| 17 while (n) {||| 18 if (n % 2) {||| 19 res = ((res % d) * (a % d)) % d;||| 20 n--;||| 21 } else {||| 22 a = ((a % d) * (a % d)) % d;||| 23 n /= 2;||| 24 }||| 25 }||| 26 return res;||| 27 }||| 28 long long modadd(long long a, long long b, long long d = 1000000007) {||| 29 return ((a % d) + (b % d)) % d;||| 30 }||| 31 long long modsubtract(long long a, long long b, long long d = 1000000007) {||| 32 return ((a % d) - (b % d)) % d;||| 33 }||| 34 long long modproduct(long long a, long long b, long long d = 1000000007) {||| 35 return ((a % d) * (b % d)) % d;||| 36 }||| 37 long long n, m, k;||| 38 long long up(long long i, long long j, vector<vector<char>> &input) {||| 39 long long r = i - 1;||| 40 long long c = j + 1;||| 41 long long ct = 0;||| 42 while (r >= 0 && c < m && input[r][c] != '.') {||| 43 ct++;||| 44 r--;||| 45 c++;||| 46 }||| 47 return ct >= k ? ct : 0;||| 48 }||| 49 void fill(long long i, long long j, long long total,||| 50 vector<vector<char>> &input) {||| 51 long long r = i;||| 52 long long c1 = j;||| 53 long long c2 = j;||| 54 while (total) {||| 55 total--;||| 56 input[r][c1] = '#';||| 57 input[r][c2] = '#';||| 58 r--;||| 59 c1--;||| 60 c2++;||| 61 }||| 62 }||| 63 void down(long long i, long long j, vector<vector<char>> &input) {||| 64 long long r = i + 1;||| 65 long long c = j + 1;||| 66 long long ct = 0;||| 67 while (r < n && c < m && input[r][c] != '.') {||| 68 ct++;||| 69 if (ct >= k) {||| 70 long long small = up(r, c, input);||| 71 fill(r, c, 1 + min(small, ct), input);||| 72 }||| 73 r++;||| 74 c++;||| 75 }||| 76 }||| 77 void solve() {||| 78 cin >> n >> m >> k;||| 79 vector<vector<char>> input(n, vector<char>(m));||| 80 for (long long i = 0; i < n; i++) {||| 81 for (long long j = 0; j < m; j++) {||| 82 cin >> input[i][j];||| 83 }||| 84 }||| 85 for (long long i = 0; i < n; i++) {||| 86 for (long long j = 0; j < m; j++) {||| 87 if (input[i][j] == '*') {||| 88 down(i, j, input);||| 89 }||| 90 }||| 91 }||| 92 for (long long i = 0; i < n; i++) {||| 93 for (long long j = 0; j < m; j++) {||| 94 if (input[i][j] == '*') {||| 95 cout << ""NO \n"";||| 96 return;||| 97 }||| 98 }||| 99 }||| 100 cout << ""YES \n"";||| 101 }||| 102 signed main() {||| 103 ios_base::sync_with_stdio(false);||| 104 cin.tie(NULL);||| 105 long long t = 1;||| 106 cin >> t;||| 107 while (t > 0) {||| 108 t--;||| 109 solve();||| 110 }||| 111 }||| "	87 if (input[i][j] != '.') {
15	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void in() { return; }||| 4 template <typename T, typename... Types>||| 5 void in(T &a, Types &...b) {||| 6 cin >> (a);||| 7 in(b...);||| 8 }||| 9 void o() { return; }||| 10 template <typename T, typename... Types>||| 11 void o(T a, Types... b) {||| 12 cout << (a);||| 13 cout << ' ';||| 14 o(b...);||| 15 }||| 16 bool sortin(const pair<long long int, long long int> &e,||| 17 const pair<long long int, long long int> &f) {||| 18 return (e.first < f.first);||| 19 }||| 20 bool POT(long long int x) { return x && (!(x & (x - 1))); }||| 21 long long int i, j, k, l, m, n, p, q, r, a, b, c, x, y, z, ts, mn = 1e18,||| 22 mod = 1e9 + 7;||| 23 long long int ar[250005], br[250005], xr[250005], tem[250005];||| 24 int main() {||| 25 {||| 26 ios_base::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 };||| 30 in(ts);||| 31 while (ts--) {||| 32 in(n, m, k);||| 33 string s[n + 2];||| 34 vector<vector<long long int> > vis(n + 2, vector<long long int>(m + 2, 0));||| 35 for (long long int i = 0; i <= n - 1; i++) {||| 36 in(s[i]);||| 37 }||| 38 for (long long int i = 0; i <= n - 1; i++) {||| 39 for (long long int j = 0; j <= m - 1; j++) {||| 40 x = i;||| 41 y = j;||| 42 p = q = 0;||| 43 while (x >= 0 and y >= 0 and s[x][y] == '*') x--, y--, p++;||| 44 x = i;||| 45 y = j;||| 46 while (x >= 0 and y < m and s[x][y] == '*') x--, y++, q++;||| 47 if (min(p, q) > k) {||| 48 x = i;||| 49 y = j;||| 50 c = 0;||| 51 while (c < min(p, q)) vis[x--][y--] = 1, c++;||| 52 x = i;||| 53 y = j;||| 54 c = 0;||| 55 while (c < min(p, q)) vis[x--][y++] = 1, c++;||| 56 }||| 57 }||| 58 }||| 59 c = 0;||| 60 for (long long int i = 0; i <= n - 1; i++) {||| 61 for (long long int j = 0; j <= m - 1; j++) {||| 62 if (s[i][j] == '*' and vis[i][j] == 0) {||| 63 c = 1;||| 64 break;||| 65 }||| 66 }||| 67 }||| 68 c ? o(""NO"") : o(""YES"");||| 69 cout << endl;||| 70 }||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void in() { return; }||| 4 template <typename T, typename... Types>||| 5 void in(T &a, Types &...b) {||| 6 cin >> (a);||| 7 in(b...);||| 8 }||| 9 void o() { return; }||| 10 template <typename T, typename... Types>||| 11 void o(T a, Types... b) {||| 12 cout << (a);||| 13 cout << ' ';||| 14 o(b...);||| 15 }||| 16 bool sortin(const pair<long long int, long long int> &e,||| 17 const pair<long long int, long long int> &f) {||| 18 return (e.first < f.first);||| 19 }||| 20 bool POT(long long int x) { return x && (!(x & (x - 1))); }||| 21 long long int i, j, k, l, m, n, p, q, r, a, b, c, x, y, z, ts, mn = 1e18,||| 22 mod = 1e9 + 7;||| 23 long long int ar[250005], br[250005], xr[250005], tem[250005];||| 24 int main() {||| 25 {||| 26 ios_base::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 };||| 30 in(ts);||| 31 while (ts--) {||| 32 in(n, m, k);||| 33 string s[n + 1];||| 34 vector<vector<long long int> > vis(n + 5, vector<long long int>(m + 5, 0));||| 35 for (long long int i = 0; i <= n - 1; i++) {||| 36 in(s[i]);||| 37 }||| 38 for (long long int i = 0; i <= n - 1; i++) {||| 39 for (long long int j = 0; j <= m - 1; j++) {||| 40 x = i;||| 41 y = j;||| 42 p = q = 0;||| 43 while (x >= 0 and y >= 0 and s[x][y] == '*') x--, y--, p++;||| 44 x = i;||| 45 y = j;||| 46 while (x >= 0 and y < m and s[x][y] == '*') x--, y++, q++;||| 47 if (min(p, q) > k) {||| 48 x = i;||| 49 y = j;||| 50 c = 0;||| 51 while (c < min(p, q)) vis[x--][y--] = 1, c++;||| 52 x = i;||| 53 y = j;||| 54 c = 0;||| 55 while (c < min(p, q)) vis[x--][y++] = 1, c++;||| 56 }||| 57 }||| 58 }||| 59 c = 0;||| 60 for (long long int i = 0; i <= n - 1; i++) {||| 61 for (long long int j = 0; j <= n - 1; j++) {||| 62 if (s[i][j] == '*' and vis[i][j] == 0) {||| 63 c = 1;||| 64 break;||| 65 }||| 66 }||| 67 }||| 68 c ? o(""NO"") : o(""YES"");||| 69 cout << endl;||| 70 }||| 71 }||| "	33 string s[n + 2];
15	71	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k;||| 4 vector<vector<bool>> used;||| 5 vector<vector<char>> a;||| 6 void f(int i, int j) {||| 7 if (a[i][j] == '.') {||| 8 return;||| 9 }||| 10 int left = 0;||| 11 int right = 0;||| 12 while (i - right >= 0 && j + right < m && a[i - right][j + right] == '*') {||| 13 right += 1;||| 14 }||| 15 while (j - left >= 0 && i - left >= 0 && a[i - left][j - left] == '*') {||| 16 left += 1;||| 17 }||| 18 if (right - 1 >= k && left - 1 >= k) {||| 19 int mi = min(right, left);||| 20 for (int t = 0; t < mi; t++) {||| 21 used[i - t][j + t] = true;||| 22 used[i - t][j - t] = true;||| 23 }||| 24 }||| 25 }||| 26 void solution() {||| 27 cin >> n >> m >> k;||| 28 a.assign(n, vector<char>(m));||| 29 for (auto &line : a) {||| 30 for (char &x : line) {||| 31 cin >> x;||| 32 }||| 33 }||| 34 used.assign(n, vector<bool>(m, false));||| 35 for (int i = 0; i < n; i++) {||| 36 for (int j = 0; j < m; j++) {||| 37 f(i, j);||| 38 }||| 39 }||| 40 bool ok = true;||| 41 for (int i = 0; i < n; i++) {||| 42 for (int j = 0; j < m; j++) {||| 43 if (a[i][j] == '*' && !used[i][j]) {||| 44 ok = false;||| 45 }||| 46 }||| 47 }||| 48 cout << (ok ? ""YES"" : ""NO"") << endl;||| 49 }||| 50 int32_t main() {||| 51 cin.tie(nullptr);||| 52 ios_base::sync_with_stdio(false);||| 53 int t = 1;||| 54 cin >> t;||| 55 for (int i = 0; i < t; i++) {||| 56 solution();||| 57 }||| 58 return 0;||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k;||| 4 vector<vector<bool>> used;||| 5 vector<vector<char>> a;||| 6 void f(int i, int j) {||| 7 if (a[i][j] == '.') {||| 8 return;||| 9 }||| 10 int left = 0;||| 11 int right = 0;||| 12 while (i - right >= 0 && j + right < m && a[i - right][j + right] == '*') {||| 13 right += 1;||| 14 }||| 15 while (j - left >= 0 && i - left >= 0 && a[i - left][j - left] == '*') {||| 16 left += 1;||| 17 }||| 18 if (right - 1 >= k && left - 1 >= k) {||| 19 int mi = min(right, left);||| 20 for (int t = 0; t < mi; t++) {||| 21 used[i - t][j + t] = true;||| 22 used[i - t][j - t] = true;||| 23 }||| 24 }||| 25 }||| 26 void solution() {||| 27 cin >> n >> m >> k;||| 28 a.assign(n, vector<char>(m));||| 29 for (auto &line : a) {||| 30 for (char &x : line) {||| 31 cin >> x;||| 32 }||| 33 }||| 34 used.assign(n, vector<bool>(m, false));||| 35 for (int i = 0; i < n; i++) {||| 36 for (int j = 0; j < m; j++) {||| 37 f(i, j);||| 38 }||| 39 }||| 40 bool ok = true;||| 41 for (int i = 0; i < n; i++) {||| 42 for (int j = 0; j < n; j++) {||| 43 if (a[i][j] == '*' && !used[i][j]) {||| 44 ok = false;||| 45 }||| 46 }||| 47 }||| 48 cout << (ok ? ""YES"" : ""NO"") << endl;||| 49 }||| 50 int32_t main() {||| 51 cin.tie(nullptr);||| 52 ios_base::sync_with_stdio(false);||| 53 int t = 1;||| 54 cin >> t;||| 55 for (int i = 0; i < t; i++) {||| 56 solution();||| 57 }||| 58 return 0;||| 59 }||| "	42 for (int j = 0; j < m; j++) {
15	166	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k;||| 4 bool solve(vector<vector<char>>& board) {||| 5 function<bool(int, int, int)> check = [&](int row, int x, int y) {||| 6 if (x > y) swap(x, y);||| 7 if (((y - x) & 1) || (y - x) / 2 < k || row + (y - x) / 2 >= n)||| 8 return false;||| 9 int a = row + (y - x) / 2, b = (x + y) / 2;||| 10 while (a >= row) {||| 11 if (board[a][b] == '.') return false;||| 12 --a, --b;||| 13 }||| 14 a = row + (y - x) / 2, b = (x + y) / 2;||| 15 while (a >= row) {||| 16 if (board[a][b] == '.') return false;||| 17 --a, ++b;||| 18 }||| 19 return true;||| 20 };||| 21 function<void(int, int, int)> fill = [&](int row, int x, int y) {||| 22 if (x > y) swap(x, y);||| 23 int a = row + (y - x) / 2, b = (x + y) / 2;||| 24 while (a >= row) {||| 25 board[a][b] = 'X';||| 26 --a, --b;||| 27 }||| 28 a = row + (y - x) / 2, b = (x + y) / 2;||| 29 while (a >= row) {||| 30 board[a][b] = 'X';||| 31 --a, ++b;||| 32 }||| 33 };||| 34 function<void()> paint = [&]() {||| 35 for (int i = 0; i < n; ++i) {||| 36 for (int j = 0; j < m; ++j) cout << board[i][j] << "" "";||| 37 cout << endl;||| 38 }||| 39 };||| 40 int i, j, t;||| 41 for (i = 0; i < n; ++i) {||| 42 for (j = 0; j < m; ++j) {||| 43 if (board[i][j] != '.') {||| 44 for (t = 0; t < m; ++t) {||| 45 if (board[i][t] != '.' && check(i, j, t)) {||| 46 fill(i, j, t);||| 47 }||| 48 }||| 49 }||| 50 if (board[i][j] == '*') return false;||| 51 }||| 52 }||| 53 return true;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 cin >> t;||| 59 while (t--) {||| 60 cin >> n >> m >> k;||| 61 vector<vector<char>> board(n, vector<char>(m));||| 62 for (int i = 0; i < n; ++i) {||| 63 for (int j = 0; j < m; ++j) {||| 64 cin >> board[i][j];||| 65 }||| 66 }||| 67 if (solve(board))||| 68 cout << ""YES"" << endl;||| 69 else||| 70 cout << ""NO"" << endl;||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k;||| 4 bool solve(vector<vector<char>>& board) {||| 5 function<bool(int, int, int)> check = [&](int row, int x, int y) {||| 6 if (x > y) swap(x, y);||| 7 if (((y - x) & 1) || (y - x) / 2 < k || row + (y - x) / 2 >= n)||| 8 return false;||| 9 int a = row + (y - x) / 2, b = (x + y) / 2;||| 10 while (a >= row) {||| 11 if (board[a][b] == '.') return false;||| 12 --a, --b;||| 13 }||| 14 a = row + (y - x) / 2, b = (x + y) / 2;||| 15 while (a >= row) {||| 16 if (board[a][b] == '.') return false;||| 17 --a, ++b;||| 18 }||| 19 return true;||| 20 };||| 21 function<void(int, int, int)> fill = [&](int row, int x, int y) {||| 22 if (x > y) swap(x, y);||| 23 int a = row + (y - x) / 2, b = (x + y) / 2;||| 24 while (a >= row) {||| 25 board[a][b] = 'X';||| 26 --a, --b;||| 27 }||| 28 a = row + (y - x) / 2, b = (x + y) / 2;||| 29 while (a >= row) {||| 30 board[a][b] = 'X';||| 31 --a, ++b;||| 32 }||| 33 };||| 34 function<void()> paint = [&]() {||| 35 for (int i = 0; i < n; ++i) {||| 36 for (int j = 0; j < m; ++j) cout << board[i][j] << "" "";||| 37 cout << endl;||| 38 }||| 39 };||| 40 int i, j, t;||| 41 for (i = 0; i < n; ++i) {||| 42 for (j = 0; j < m; ++j) {||| 43 if (board[i][j] == '*') {||| 44 for (t = 0; t < m; ++t) {||| 45 if (board[i][t] != '.' && check(i, j, t)) {||| 46 fill(i, j, t);||| 47 }||| 48 }||| 49 }||| 50 if (board[i][j] == '*') return false;||| 51 }||| 52 }||| 53 return true;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 cin >> t;||| 59 while (t--) {||| 60 cin >> n >> m >> k;||| 61 vector<vector<char>> board(n, vector<char>(m));||| 62 for (int i = 0; i < n; ++i) {||| 63 for (int j = 0; j < m; ++j) {||| 64 cin >> board[i][j];||| 65 }||| 66 }||| 67 if (solve(board))||| 68 cout << ""YES"" << endl;||| 69 else||| 70 cout << ""NO"" << endl;||| 71 }||| 72 return 0;||| 73 }||| "	43 if (board[i][j] != '.') {
16	233	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print(vector<pair<int, int>> a) {||| 4 for (auto x : a) {||| 5 cout << x.first << "" "";||| 6 }||| 7 cout << ""\n"";||| 8 }||| 9 void solve() {||| 10 int n;||| 11 cin >> n;||| 12 vector<pair<int, int>> aa(n);||| 13 set<pair<int, int>> sp;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> aa[i].first;||| 16 aa[i].second = i;||| 17 if (aa[i].first > 0) sp.insert(aa[i]);||| 18 }||| 19 vector<pair<int, int>> ans;||| 20 while (sp.size() > 1) {||| 21 pair<int, int> a = *sp.begin();||| 22 pair<int, int> b = *sp.rbegin();||| 23 sp.erase(a);||| 24 sp.erase(b);||| 25 ans.push_back({a.second, b.second});||| 26 a.first--;||| 27 b.first--;||| 28 if (a.first > 0) sp.insert(a);||| 29 if (b.first > 0) sp.insert(b);||| 30 }||| 31 cout << ans.size() << ""\n"";||| 32 for (int i = 0; i < ans.size(); i++) {||| 33 cout << ans[i].first + 1 << "" "" << ans[i].second + 1 << ""\n"";||| 34 }||| 35 }||| 36 int main() {||| 37 int t;||| 38 cin >> t;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print(vector<pair<int, int>> a) {||| 4 for (auto x : a) {||| 5 cout << x.first << "" "";||| 6 }||| 7 cout << ""\n"";||| 8 }||| 9 void solve() {||| 10 int n;||| 11 cin >> n;||| 12 vector<pair<int, int>> aa(n);||| 13 set<pair<int, int>> sp;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> aa[i].first;||| 16 aa[i].second = i;||| 17 if (aa[i].first > 0) sp.insert(aa[i]);||| 18 }||| 19 vector<pair<int, int>> ans;||| 20 while (sp.size() > 1) {||| 21 pair<int, int> a = *sp.begin();||| 22 pair<int, int> b = *sp.rbegin();||| 23 sp.erase(a);||| 24 sp.erase(b);||| 25 ans.push_back({a.second, b.second});||| 26 a.first--;||| 27 b.first--;||| 28 if (a.first > 0) sp.insert(a);||| 29 if (b.first > 0)||| 30 ;||| 31 sp.insert(b);||| 32 }||| 33 cout << ans.size() << ""\n"";||| 34 for (int i = 0; i < ans.size(); i++) {||| 35 cout << ans[i].first + 1 << "" "" << ans[i].second + 1 << ""\n"";||| 36 }||| 37 }||| 38 int main() {||| 39 int t;||| 40 cin >> t;||| 41 while (t--) {||| 42 solve();||| 43 }||| 44 return 0;||| 45 }||| "	29 if (b.first > 0) sp.insert(b);
16	203	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Nmax = 2e5 + 5;||| 4 const int Mod = 666013;||| 5 const int oo = 1e9 + 1;||| 6 int T;||| 7 int main() {||| 8 cin >> T;||| 9 while (T--) {||| 10 int n;||| 11 vector<pair<int, int> > v;||| 12 cin >> n;||| 13 int sum = 0;||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 cin >> x;||| 17 sum += x;||| 18 v.push_back({x, i});||| 19 }||| 20 sort(v.begin(), v.end());||| 21 int mx = (*v.rbegin()).first;||| 22 sum -= mx;||| 23 if (mx >= sum) {||| 24 cout << sum << ""\n"";||| 25 for (auto e : v)||| 26 while (sum > 0 && e.first > 0)||| 27 sum--, e.first--,||| 28 cout << e.second << "" "" << (*v.rbegin()).second << ""\n"";||| 29 } else {||| 30 int k = 0;||| 31 pair<int, int> sol[Nmax];||| 32 for (int i = 0; i < v.size(); i++)||| 33 if (v[i].first > 0) {||| 34 while (sum - 2 >= mx && v[i].first > 0) {||| 35 k++;||| 36 sol[k] = {v[i].second, v[i + 1].second};||| 37 sum -= 2;||| 38 v[i].first--;||| 39 v[i + 1].first--;||| 40 }||| 41 }||| 42 for (auto e : v)||| 43 while ((sum > 0 && mx > 0) && e.first > 0)||| 44 mx--, sum--, e.first--, k++,||| 45 sol[k] = {e.second, (*v.rbegin()).second};||| 46 cout << k << ""\n"";||| 47 for (int i = 1; i <= k; i++)||| 48 cout << sol[i].first << "" "" << sol[i].second << ""\n"";||| 49 }||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Nmax = 1e5 + 5;||| 4 const int Mod = 666013;||| 5 const int oo = 1e9 + 1;||| 6 int T;||| 7 int main() {||| 8 cin >> T;||| 9 while (T--) {||| 10 int n;||| 11 vector<pair<int, int> > v;||| 12 cin >> n;||| 13 int sum = 0;||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 cin >> x;||| 17 sum += x;||| 18 v.push_back({x, i});||| 19 }||| 20 sort(v.begin(), v.end());||| 21 int mx = (*v.rbegin()).first;||| 22 sum -= mx;||| 23 if (mx >= sum) {||| 24 cout << sum << ""\n"";||| 25 for (auto e : v)||| 26 while (sum > 0 && e.first > 0)||| 27 sum--, e.first--,||| 28 cout << e.second << "" "" << (*v.rbegin()).second << ""\n"";||| 29 } else {||| 30 int k = 0;||| 31 pair<int, int> sol[Nmax];||| 32 for (int i = 0; i < v.size(); i++)||| 33 if (v[i].first > 0) {||| 34 while (sum - 2 >= mx && v[i].first > 0) {||| 35 k++;||| 36 sol[k] = {v[i].second, v[i + 1].second};||| 37 sum -= 2;||| 38 v[i].first--;||| 39 v[i + 1].first--;||| 40 }||| 41 }||| 42 for (auto e : v)||| 43 while ((sum > 0 || mx > 0) && e.first > 0)||| 44 mx--, sum--, e.first--, k++,||| 45 sol[k] = {e.second, (*v.rbegin()).second};||| 46 cout << k << ""\n"";||| 47 for (int i = 1; i <= k; i++)||| 48 cout << sol[i].first << "" "" << sol[i].second << ""\n"";||| 49 }||| 50 }||| 51 return 0;||| 52 }||| "	3 const int Nmax = 2e5 + 5;
16	126	"1 #include <bits/stdc++.h>||| 2 const int maxn = 2e5 + 9;||| 3 using namespace std;||| 4 pair<int, int> rr;||| 5 int main() {||| 6 int t;||| 7 scanf(""%d"", &t);||| 8 while (t--) {||| 9 int n;||| 10 scanf(""%d"", &n);||| 11 priority_queue<pair<int, int>> ss;||| 12 for (int i = 0; i < n; i++) {||| 13 scanf(""%d"", &rr.first);||| 14 rr.second = i;||| 15 ss.push(rr);||| 16 }||| 17 queue<pair<int, int>> qq;||| 18 while (!ss.empty()) {||| 19 pair<int, int> r1 = ss.top();||| 20 ss.pop();||| 21 pair<int, int> r2;||| 22 if (!ss.empty()) {||| 23 r2 = ss.top();||| 24 ss.pop();||| 25 } else {||| 26 break;||| 27 }||| 28 if (r1.first > 0 && r2.first > 0) {||| 29 r1.first--;||| 30 r2.first--;||| 31 qq.push({r1.second, r2.second});||| 32 }||| 33 if (r1.first > 0) {||| 34 ss.push(r1);||| 35 }||| 36 if (r2.first > 0) {||| 37 ss.push(r2);||| 38 }||| 39 }||| 40 printf(""%d\n"", qq.size());||| 41 while (!qq.empty()) {||| 42 pair<int, int> rr = qq.front();||| 43 qq.pop();||| 44 printf(""%d %d\n"", rr.first + 1, rr.second + 1);||| 45 }||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 const int maxn = 2e5 + 9;||| 3 using namespace std;||| 4 pair<int, int> rr;||| 5 int main() {||| 6 int t;||| 7 scanf(""%d"", &t);||| 8 while (t--) {||| 9 int n;||| 10 scanf(""%d"", &n);||| 11 priority_queue<pair<int, int>> ss;||| 12 for (int i = 0; i < n; i++) {||| 13 scanf(""%d"", &rr.first);||| 14 rr.second = i;||| 15 ss.push(rr);||| 16 }||| 17 queue<pair<int, int>> qq;||| 18 while (!ss.empty()) {||| 19 pair<int, int> r1 = ss.top();||| 20 ss.pop();||| 21 pair<int, int> r2;||| 22 if (!ss.empty()) {||| 23 r2 = ss.top();||| 24 ss.pop();||| 25 } else {||| 26 break;||| 27 }||| 28 while (r1.first > 0 && r2.first > 0) {||| 29 r1.first--;||| 30 r2.first--;||| 31 qq.push({r1.second, r2.second});||| 32 }||| 33 if (r1.first > 0) {||| 34 ss.push(r1);||| 35 }||| 36 if (r2.first > 0) {||| 37 ss.push(r2);||| 38 }||| 39 }||| 40 printf(""%d\n"", qq.size());||| 41 while (!qq.empty()) {||| 42 pair<int, int> rr = qq.front();||| 43 qq.pop();||| 44 printf(""%d %d\n"", rr.first + 1, rr.second + 1);||| 45 }||| 46 }||| 47 }||| "	28 if (r1.first > 0 && r2.first > 0) {
16	203	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Nmax = 1e5 + 5;||| 4 const int Mod = 666013;||| 5 const int oo = 1e9 + 1;||| 6 int T;||| 7 int main() {||| 8 cin >> T;||| 9 while (T--) {||| 10 int n;||| 11 vector<pair<int, int> > v;||| 12 cin >> n;||| 13 int sum = 0;||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 cin >> x;||| 17 sum += x;||| 18 v.push_back({x, i});||| 19 }||| 20 sort(v.begin(), v.end());||| 21 int mx = (*v.rbegin()).first;||| 22 sum -= mx;||| 23 if (mx >= sum) {||| 24 cout << sum << ""\n"";||| 25 for (auto e : v)||| 26 while (sum > 0 && e.first > 0)||| 27 sum--, e.first--,||| 28 cout << e.second << "" "" << (*v.rbegin()).second << ""\n"";||| 29 } else {||| 30 int k = 0;||| 31 pair<int, int> sol[Nmax];||| 32 for (int i = 0; i < v.size(); i++)||| 33 if (v[i].first > 0) {||| 34 while (sum - 2 >= mx && v[i].first > 0) {||| 35 k++;||| 36 sol[k] = {v[i].second, v[i + 1].second};||| 37 sum -= 2;||| 38 v[i].first--;||| 39 v[i + 1].first--;||| 40 }||| 41 }||| 42 for (auto e : v)||| 43 while ((sum > 0 && mx > 0) && e.first > 0)||| 44 mx--, sum--, e.first--, k++,||| 45 sol[k] = {e.second, (*v.rbegin()).second};||| 46 cout << k << ""\n"";||| 47 for (int i = 1; i <= k; i++)||| 48 cout << sol[i].first << "" "" << sol[i].second << ""\n"";||| 49 }||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Nmax = 1e5 + 5;||| 4 const int Mod = 666013;||| 5 const int oo = 1e9 + 1;||| 6 int T;||| 7 int main() {||| 8 cin >> T;||| 9 while (T--) {||| 10 int n;||| 11 vector<pair<int, int> > v;||| 12 cin >> n;||| 13 int sum = 0;||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 cin >> x;||| 17 sum += x;||| 18 v.push_back({x, i});||| 19 }||| 20 sort(v.begin(), v.end());||| 21 int mx = (*v.rbegin()).first;||| 22 sum -= mx;||| 23 if (mx >= sum) {||| 24 cout << sum << ""\n"";||| 25 for (auto e : v)||| 26 while (sum > 0 && e.first > 0)||| 27 sum--, e.first--,||| 28 cout << e.second << "" "" << (*v.rbegin()).second << ""\n"";||| 29 } else {||| 30 int k = 0;||| 31 pair<int, int> sol[Nmax];||| 32 for (int i = 0; i < v.size(); i++)||| 33 if (v[i].first > 0) {||| 34 while (sum - 2 >= mx && v[i].first > 0) {||| 35 k++;||| 36 sol[k] = {v[i].second, v[i + 1].second};||| 37 sum -= 2;||| 38 v[i].first--;||| 39 v[i + 1].first--;||| 40 }||| 41 }||| 42 for (auto e : v)||| 43 while ((sum > 0 || mx > 0) && e.first > 0)||| 44 mx--, sum--, e.first--, k++,||| 45 sol[k] = {e.second, (*v.rbegin()).second};||| 46 cout << k << ""\n"";||| 47 for (int i = 1; i <= k; i++)||| 48 cout << sol[i].first << "" "" << sol[i].second << ""\n"";||| 49 }||| 50 }||| 51 return 0;||| 52 }||| "	43 while ((sum > 0 && mx > 0) && e.first > 0)
17	185	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 long long a[N], tr[N], n;||| 5 int lowbit(int x) { return x & -x; }||| 6 int sum(int x) {||| 7 long long res = 0;||| 8 for (int i = x; i; i -= lowbit(i)) res += tr[i];||| 9 return res;||| 10 }||| 11 void add(int x, int c) {||| 12 for (int i = x; i <= n; i += lowbit(i)) tr[i] += c;||| 13 }||| 14 void solve() {||| 15 cin >> n;||| 16 vector<int> q;||| 17 for (int i = 1; i <= n; i++) {||| 18 scanf(""%lld"", &a[i]);||| 19 q.push_back(a[i]);||| 20 }||| 21 sort(q.begin(), q.end());||| 22 q.erase(unique(q.begin(), q.end()), q.end());||| 23 for (int i = 1; i <= n; i++)||| 24 a[i] = lower_bound(q.begin(), q.end(), a[i]) - q.begin() + 1;||| 25 for (int i = 1; i <= n; i++) tr[i] = 0;||| 26 long long res = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 int head = sum(a[i] - 1), tail = sum(n) - sum(a[i]);||| 29 if (head <= tail) {||| 30 res += head;||| 31 add(a[i], 1);||| 32 } else {||| 33 res += tail;||| 34 add(a[i], 1);||| 35 }||| 36 }||| 37 cout << res << ""\n"";||| 38 }||| 39 int main() {||| 40 int t;||| 41 cin >> t;||| 42 while (t--) solve();||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 long long a[N], tr[N], n;||| 5 int lowbit(int x) { return x & -x; }||| 6 int sum(int x) {||| 7 long long res = 0;||| 8 for (int i = x; i; i -= lowbit(i)) res += tr[i];||| 9 return res;||| 10 }||| 11 void add(int x, int c) {||| 12 for (int i = x; i <= n; i += lowbit(i)) tr[i] += c;||| 13 }||| 14 void solve() {||| 15 cin >> n;||| 16 vector<int> q;||| 17 for (int i = 1; i <= n; i++) {||| 18 scanf(""%lld"", &a[i]);||| 19 q.push_back(a[i]);||| 20 }||| 21 sort(q.begin(), q.end());||| 22 q.erase(unique(q.begin(), q.end()), q.end());||| 23 for (int i = 1; i <= n; i++)||| 24 a[i] = lower_bound(q.begin(), q.end(), a[i]) - q.begin() + 1;||| 25 for (int i = 1; i <= n; i++) tr[i] = 0;||| 26 int res = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 int head = sum(a[i] - 1), tail = sum(n) - sum(a[i]);||| 29 if (head <= tail) {||| 30 res += head;||| 31 add(a[i], 1);||| 32 } else {||| 33 res += tail;||| 34 add(a[i], 1);||| 35 }||| 36 }||| 37 cout << res << ""\n"";||| 38 }||| 39 int main() {||| 40 int t;||| 41 cin >> t;||| 42 while (t--) solve();||| 43 return 0;||| 44 }||| "	26 long long res = 0;
17	28	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace fast_read {||| 4 char gc(void) {||| 5 const int S = 1 << 17;||| 6 static char buf[S], *s = buf, *t = buf;||| 7 if (s == t) t = buf + fread(s = buf, 1, S, stdin);||| 8 if (s == t) return EOF;||| 9 return *s++;||| 10 }||| 11 long long RD(void) {||| 12 long long a = 0, b = 1, c = gc();||| 13 for (; !isdigit(c); c = gc()) b ^= (c == '-');||| 14 for (; isdigit(c); c = gc()) a = a * 10 + c - '0';||| 15 return b ? a : -a;||| 16 }||| 17 };  // namespace fast_read||| 18 using fast_read::RD;||| 19 const long long LINF = 1e18 + 5, INF = 0x3f3f3f3f, hxe = 1319, mod = 998244353;||| 20 inline long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 21 inline long long Qpow(long long a, long long b) {||| 22 long long s = 1;||| 23 while (b) {||| 24 if (b & 1) {||| 25 s = (s * a) % mod;||| 26 }||| 27 a = a * a % mod;||| 28 b >>= 1;||| 29 }||| 30 return s;||| 31 }||| 32 inline long long Qinv(long long a) { return Qpow(a, mod - 2); }||| 33 const int maxn = 2e5 + 5;||| 34 int n, a[maxn];||| 35 int tree[maxn];||| 36 void update(int x, int v) {||| 37 while (x <= n) {||| 38 tree[x] += v;||| 39 x += (x & (-x));||| 40 }||| 41 }||| 42 int query(int x) {||| 43 int res = 0;||| 44 while (x > 0) {||| 45 res += tree[x];||| 46 x -= (x & (-x));||| 47 }||| 48 return res;||| 49 }||| 50 void solve() {||| 51 cin >> n;||| 52 memset(tree, 0, sizeof(tree));||| 53 vector<int> qc;||| 54 for (int i = 1; i <= n; i++) cin >> a[i], qc.push_back(a[i]);||| 55 sort(begin(qc), end(qc));||| 56 qc.erase(unique(begin(qc), end(qc)), qc.end());||| 57 for (int i = 1; i <= n; i++)||| 58 a[i] = lower_bound(begin(qc), end(qc), a[i]) - qc.begin() + 1;||| 59 long long ans = 0;||| 60 for (int i = 1; i <= n; i++) {||| 61 int L = query(a[i] - 1);||| 62 int R = query(n) - query(a[i]);||| 63 if (L <= R)||| 64 ans += L;||| 65 else||| 66 ans += R;||| 67 update(a[i], 1);||| 68 }||| 69 cout << ans << '\n';||| 70 }||| 71 int main() {||| 72 ios::sync_with_stdio(false);||| 73 cin.tie(0);||| 74 cout.tie(0);||| 75 ;||| 76 int _;||| 77 cin >> _;||| 78 while (_--) solve();||| 79 return 0;||| 80 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace fast_read {||| 4 char gc(void) {||| 5 const int S = 1 << 17;||| 6 static char buf[S], *s = buf, *t = buf;||| 7 if (s == t) t = buf + fread(s = buf, 1, S, stdin);||| 8 if (s == t) return EOF;||| 9 return *s++;||| 10 }||| 11 long long RD(void) {||| 12 long long a = 0, b = 1, c = gc();||| 13 for (; !isdigit(c); c = gc()) b ^= (c == '-');||| 14 for (; isdigit(c); c = gc()) a = a * 10 + c - '0';||| 15 return b ? a : -a;||| 16 }||| 17 };  // namespace fast_read||| 18 using fast_read::RD;||| 19 const long long LINF = 1e18 + 5, INF = 0x3f3f3f3f, hxe = 1319, mod = 998244353;||| 20 inline long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 21 inline long long Qpow(long long a, long long b) {||| 22 long long s = 1;||| 23 while (b) {||| 24 if (b & 1) {||| 25 s = (s * a) % mod;||| 26 }||| 27 a = a * a % mod;||| 28 b >>= 1;||| 29 }||| 30 return s;||| 31 }||| 32 inline long long Qinv(long long a) { return Qpow(a, mod - 2); }||| 33 const int maxn = 2e5 + 5;||| 34 int n, a[maxn];||| 35 int tree[maxn];||| 36 void update(int x, int v) {||| 37 while (x <= n) {||| 38 tree[x] += v;||| 39 x += (x & (-x));||| 40 }||| 41 }||| 42 int query(int x) {||| 43 int res = 0;||| 44 while (x > 0) {||| 45 res += tree[x];||| 46 x -= (x & (-x));||| 47 }||| 48 return res;||| 49 }||| 50 void solve() {||| 51 cin >> n;||| 52 memset(tree, 0, sizeof(tree));||| 53 vector<int> qc;||| 54 for (int i = 1; i <= n; i++) cin >> a[i], qc.push_back(a[i]);||| 55 sort(begin(qc), end(qc));||| 56 qc.erase(unique(begin(qc), end(qc)), qc.end());||| 57 for (int i = 1; i <= n; i++)||| 58 a[i] = lower_bound(begin(qc), end(qc), a[i]) - qc.begin() + 1;||| 59 int ans = 0;||| 60 for (int i = 1; i <= n; i++) {||| 61 int L = query(a[i] - 1);||| 62 int R = query(n) - query(a[i]);||| 63 if (L <= R)||| 64 ans += L;||| 65 else||| 66 ans += R;||| 67 update(a[i], 1);||| 68 }||| 69 cout << ans << '\n';||| 70 }||| 71 int main() {||| 72 ios::sync_with_stdio(false);||| 73 cin.tie(0);||| 74 cout.tie(0);||| 75 ;||| 76 int _;||| 77 cin >> _;||| 78 while (_--) solve();||| 79 return 0;||| 80 }||| 	59 long long ans = 0;
17	139	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 5e5 + 7;||| 4 const long long M = 1e6 + 7;||| 5 const long long mod = 1e9 + 7;||| 6 const long long INF = 0x3f3f3f3f;||| 7 const double eps = 1e-6;||| 8 long long t, n, tot = 0;||| 9 long long arr[N], lsh[N], tree[N << 1];||| 10 inline void pushup(long long node) {||| 11 tree[node] = tree[node << 1] + tree[node << 1 | 1];||| 12 }||| 13 void build(long long node, long long l, long long r) {||| 14 if (l == r) {||| 15 tree[node] = 0;||| 16 return;||| 17 }||| 18 long long mid = l + r >> 1;||| 19 build(node << 1, l, mid), build(node << 1 | 1, mid + 1, r);||| 20 pushup(node);||| 21 }||| 22 void Updata(long long node, long long l, long long r, long long pos,||| 23 long long val) {||| 24 if (l == r) {||| 25 tree[node] += val;||| 26 return;||| 27 }||| 28 long long mid = l + r >> 1;||| 29 if (pos <= mid)||| 30 Updata(node << 1, l, mid, pos, val);||| 31 else||| 32 Updata(node << 1 | 1, mid + 1, r, pos, val);||| 33 pushup(node);||| 34 }||| 35 long long quary(long long node, long long l, long long r, long long ql,||| 36 long long qr) {||| 37 if (!ql || ql > qr) return 0;||| 38 if (ql <= l && r <= qr) return tree[node];||| 39 long long mid = l + r >> 1;||| 40 long long ans = 0;||| 41 if (ql <= mid) ans += quary(node << 1, l, mid, ql, qr);||| 42 if (qr > mid) ans += quary(node << 1 | 1, mid + 1, r, ql, qr);||| 43 return ans;||| 44 }||| 45 long long getid(long long val) {||| 46 return lower_bound(lsh + 1, lsh + 1 + tot, val) - lsh;||| 47 }||| 48 void solve() {||| 49 cin >> n;||| 50 tot = 0;||| 51 for (long long i = 1; i <= n; ++i) {||| 52 cin >> arr[i];||| 53 lsh[++tot] = arr[i];||| 54 }||| 55 sort(lsh + 1, lsh + 1 + tot);||| 56 tot = unique(lsh + 1, lsh + 1 + tot) - (lsh + 1);||| 57 build(1, 1, tot);||| 58 long long ans = 0;||| 59 for (long long i = 1; i <= n; ++i) {||| 60 long long id = getid(arr[i]);||| 61 ans += min(quary(1, 1, tot, 1, id - 1), quary(1, 1, tot, id + 1, tot));||| 62 Updata(1, 1, tot, id, 1);||| 63 }||| 64 cout << ans << '\n';||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 68 cin >> t;||| 69 while (t--) solve();||| 70 return 0;||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 5e5 + 7;||| 4 const long long M = 1e6 + 7;||| 5 const long long mod = 1e9 + 7;||| 6 const long long INF = 0x3f3f3f3f;||| 7 const double eps = 1e-6;||| 8 long long t, n, tot = 0;||| 9 long long arr[N], lsh[N], tree[N];||| 10 inline void pushup(long long node) {||| 11 tree[node] = tree[node << 1] + tree[node << 1 | 1];||| 12 }||| 13 void build(long long node, long long l, long long r) {||| 14 if (l == r) {||| 15 tree[node] = 0;||| 16 return;||| 17 }||| 18 long long mid = l + r >> 1;||| 19 build(node << 1, l, mid), build(node << 1 | 1, mid + 1, r);||| 20 pushup(node);||| 21 }||| 22 void Updata(long long node, long long l, long long r, long long pos,||| 23 long long val) {||| 24 if (l == r) {||| 25 tree[node] += val;||| 26 return;||| 27 }||| 28 long long mid = l + r >> 1;||| 29 if (pos <= mid)||| 30 Updata(node << 1, l, mid, pos, val);||| 31 else||| 32 Updata(node << 1 | 1, mid + 1, r, pos, val);||| 33 pushup(node);||| 34 }||| 35 long long quary(long long node, long long l, long long r, long long ql,||| 36 long long qr) {||| 37 if (!ql || ql > qr) return 0;||| 38 if (ql <= l && r <= qr) return tree[node];||| 39 long long mid = l + r >> 1;||| 40 long long ans = 0;||| 41 if (ql <= mid) ans += quary(node << 1, l, mid, ql, qr);||| 42 if (qr > mid) ans += quary(node << 1 | 1, mid + 1, r, ql, qr);||| 43 return ans;||| 44 }||| 45 long long getid(long long val) {||| 46 return lower_bound(lsh + 1, lsh + 1 + tot, val) - lsh;||| 47 }||| 48 void solve() {||| 49 cin >> n;||| 50 tot = 0;||| 51 for (long long i = 1; i <= n; ++i) {||| 52 cin >> arr[i];||| 53 lsh[++tot] = arr[i];||| 54 }||| 55 sort(lsh + 1, lsh + 1 + tot);||| 56 tot = unique(lsh + 1, lsh + 1 + tot) - (lsh + 1);||| 57 build(1, 1, tot);||| 58 long long ans = 0;||| 59 for (long long i = 1; i <= n; ++i) {||| 60 long long id = getid(arr[i]);||| 61 ans += min(quary(1, 1, tot, 1, id - 1), quary(1, 1, tot, id + 1, tot));||| 62 Updata(1, 1, tot, id, 1);||| 63 }||| 64 cout << ans << '\n';||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 68 cin >> t;||| 69 while (t--) solve();||| 70 return 0;||| 71 }||| 	9 long long arr[N], lsh[N], tree[N << 1];
17	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, M = 1e5 + 29;||| 4 int a[N], b[N];||| 5 int c[N];||| 6 int n;||| 7 int cnt;||| 8 void add(int x) {||| 9 while (x <= n) {||| 10 c[x] += 1;||| 11 x += x & -x;||| 12 }||| 13 }||| 14 int get(int x) {||| 15 int ans = 0;||| 16 while (x) {||| 17 ans += c[x];||| 18 x -= x & -x;||| 19 }||| 20 return ans;||| 21 }||| 22 void solve() {||| 23 cin >> n;||| 24 for (int i = 1; i <= n; i++) {||| 25 c[i] = 0;||| 26 scanf(""%d"", &a[i]);||| 27 b[i] = a[i];||| 28 }||| 29 sort(b + 1, b + 1 + n);||| 30 cnt = unique(b + 1, b + 1 + n) - b - 1;||| 31 long long ans = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 int p = lower_bound(b + 1, b + 1 + n, a[i]) - b;||| 34 int x = get(p - 1);||| 35 int y = get(n) - get(p);||| 36 ans += min(x, y);||| 37 add(p);||| 38 }||| 39 cout << ans << endl;||| 40 }||| 41 int main() {||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, M = 1e5 + 29;||| 4 int a[N], b[N];||| 5 int c[N];||| 6 int n;||| 7 int cnt;||| 8 void add(int x) {||| 9 while (x <= cnt) {||| 10 c[x] += 1;||| 11 x += x & -x;||| 12 }||| 13 }||| 14 int get(int x) {||| 15 int ans = 0;||| 16 while (x) {||| 17 ans += c[x];||| 18 x -= x & -x;||| 19 }||| 20 return ans;||| 21 }||| 22 void solve() {||| 23 cin >> n;||| 24 for (int i = 1; i <= n; i++) {||| 25 c[i] = 0;||| 26 scanf(""%d"", &a[i]);||| 27 b[i] = a[i];||| 28 }||| 29 sort(b + 1, b + 1 + n);||| 30 cnt = unique(b + 1, b + 1 + n) - b - 1;||| 31 long long ans = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 int p = lower_bound(b + 1, b + 1 + n, a[i]) - b;||| 34 int x = get(p - 1);||| 35 int y = get(n) - get(p);||| 36 ans += min(x, y);||| 37 add(p);||| 38 }||| 39 cout << ans << endl;||| 40 }||| 41 int main() {||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	9 while (x <= n) {
17	71	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, M = 1e5 + 29;||| 4 int a[N], b[N];||| 5 int c[N];||| 6 int n;||| 7 int cnt;||| 8 void add(int x) {||| 9 while (x <= n) {||| 10 c[x] += 1;||| 11 x += x & -x;||| 12 }||| 13 }||| 14 int get(int x) {||| 15 int ans = 0;||| 16 while (x) {||| 17 ans += c[x];||| 18 x -= x & -x;||| 19 }||| 20 return ans;||| 21 }||| 22 void solve() {||| 23 cin >> n;||| 24 for (int i = 1; i <= n; i++) {||| 25 c[i] = 0;||| 26 scanf(""%d"", &a[i]);||| 27 b[i] = a[i];||| 28 }||| 29 sort(b + 1, b + 1 + n);||| 30 cnt = unique(b + 1, b + 1 + n) - b - 1;||| 31 long long ans = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 int p = lower_bound(b + 1, b + 1 + n, a[i]) - b;||| 34 int x = get(p - 1);||| 35 int y = get(n) - get(p);||| 36 ans += min(x, y);||| 37 add(p);||| 38 }||| 39 cout << ans << endl;||| 40 }||| 41 int main() {||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, M = 1e5 + 29;||| 4 int a[N], b[N];||| 5 int c[N];||| 6 int n;||| 7 int cnt;||| 8 void add(int x) {||| 9 while (x <= cnt) {||| 10 c[x] += 1;||| 11 x += x & -x;||| 12 }||| 13 }||| 14 int get(int x) {||| 15 int ans = 0;||| 16 while (x) {||| 17 ans += c[x];||| 18 x -= x & -x;||| 19 }||| 20 return ans;||| 21 }||| 22 void solve() {||| 23 cin >> n;||| 24 for (int i = 1; i <= n; i++) {||| 25 c[i] = 0;||| 26 scanf(""%d"", &a[i]);||| 27 b[i] = a[i];||| 28 }||| 29 sort(b + 1, b + 1 + n);||| 30 cnt = unique(b + 1, b + 1 + n) - b - 1;||| 31 long long ans = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 int p = lower_bound(b + 1, b + 1 + n, a[i]) - b;||| 34 int x = get(p - 1);||| 35 int y = get(cnt) - get(p);||| 36 ans += min(x, y);||| 37 add(p);||| 38 }||| 39 cout << ans << endl;||| 40 }||| 41 int main() {||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	9 while (x <= n) {
17	144	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 inline T lowbit(T x) {||| 9 return x & -x;||| 10 }||| 11 const long long N = 2e5 + 10;||| 12 long long n;||| 13 vector<long long> vec;||| 14 long long tr[N];||| 15 long long a[N];||| 16 void modify(long long x) {||| 17 for (long long i = x; i <= n; i += lowbit(i)) tr[i]++;||| 18 }||| 19 long long query(long long x) {||| 20 long long res = 0;||| 21 for (long long i = x; i >= 1; i -= lowbit(i)) res += tr[i];||| 22 return res;||| 23 }||| 24 void init() {||| 25 for (long long i = 1; i <= n; ++i) tr[i] = 0;||| 26 }||| 27 void solve() {||| 28 cin >> n;||| 29 vec.clear();||| 30 init();||| 31 for (long long i = 1; i <= n; ++i) {||| 32 long long x;||| 33 scanf(""%lld"", &x);||| 34 a[i] = x;||| 35 vec.push_back(x);||| 36 }||| 37 sort(vec.begin(), vec.end());||| 38 vec.erase(unique(vec.begin(), vec.end()), vec.end());||| 39 long long res = 0;||| 40 for (long long i = 1; i <= n; ++i) {||| 41 long long p = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin() + 1ll;||| 42 long long x = query(p - 1);||| 43 long long y = query(n) - query(p);||| 44 res += min(x, y);||| 45 modify(p);||| 46 }||| 47 cout << res << endl;||| 48 }||| 49 signed main() {||| 50 long long _;||| 51 cin >> _;||| 52 while (_--) solve();||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 inline T lowbit(T x) {||| 9 return x & -x;||| 10 }||| 11 const long long N = 2e5 + 10;||| 12 long long n;||| 13 vector<long long> vec;||| 14 long long tr[N];||| 15 long long a[N];||| 16 void modify(long long x) {||| 17 for (long long i = x; i <= n; i += lowbit(i)) tr[i]++;||| 18 }||| 19 long long query(long long x) {||| 20 long long res = 0;||| 21 for (long long i = x; i >= 1; i -= lowbit(i)) res += tr[i];||| 22 return res;||| 23 }||| 24 void init() {||| 25 for (long long i = 1; i <= n; ++i) tr[i] = 0;||| 26 }||| 27 void solve() {||| 28 cin >> n;||| 29 vec.clear();||| 30 init();||| 31 for (long long i = 1; i <= n; ++i) {||| 32 long long x;||| 33 scanf(""%d"", &x);||| 34 a[i] = x;||| 35 vec.push_back(x);||| 36 }||| 37 sort(vec.begin(), vec.end());||| 38 vec.erase(unique(vec.begin(), vec.end()), vec.end());||| 39 long long res = 0;||| 40 for (long long i = 1; i <= n; ++i) {||| 41 long long p = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin() + 1;||| 42 long long x = query(p - 1);||| 43 long long y = query(n) - query(p);||| 44 res += min(x, y);||| 45 modify(p);||| 46 }||| 47 cout << res << endl;||| 48 }||| 49 signed main() {||| 50 long long _;||| 51 cin >> _;||| 52 while (_--) solve();||| 53 return 0;||| 54 }||| "	"33 scanf(""%lld"", &x);"
17	38	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream& operator>>(istream& is, vector<T>& v) {||| 5 for (auto& i : v) is >> i;||| 6 return is;||| 7 }||| 8 const long long INF = 1e18;||| 9 const long long MOD = 1e9 + 7;||| 10 const int inf = 1e9;||| 11 const int N = 2e5 + 10;||| 12 bool flag;||| 13 struct ftree {||| 14 vector<int> a;||| 15 ftree(int n) { a.resize(n + 1); }||| 16 long long qu(int n) {||| 17 long long res = 0;||| 18 for (int i = n; i >= 0; i = (i + 1 & i) - 1) res += a[i];||| 19 return res;||| 20 }||| 21 long long qu(int l, int r) { return qu(r) - qu(l - 1); }||| 22 void set(int x) {||| 23 for (; x < (int)a.size(); x |= x + 1) a[x]++;||| 24 }||| 25 };||| 26 void solve() {||| 27 int n;||| 28 cin >> n;||| 29 vector<int> a(n), rv;||| 30 cin >> a;||| 31 rv = a;||| 32 map<int, int> mp;||| 33 ftree ftr(n);||| 34 sort(rv.begin(), rv.end());||| 35 rv.erase(unique(rv.begin(), rv.end()), rv.end());||| 36 for (int i = 0; i < n; i++)||| 37 a[i] = lower_bound(rv.begin(), rv.end(), a[i]) - rv.begin();||| 38 long long ans = 0;||| 39 for (auto now : a) {||| 40 int l = ftr.qu(0, now - 1), r = ftr.qu(now + 1, (int)rv.size());||| 41 ans += min(l, r);||| 42 ftr.set(now);||| 43 }||| 44 cout << ans;||| 45 }||| 46 int main() {||| 47 ios::sync_with_stdio(0);||| 48 cin.tie(0);||| 49 cout.tie(0);||| 50 cout << fixed << setprecision(12);||| 51 int tt = 1;||| 52 cin >> tt;||| 53 while (tt--) {||| 54 flag = 0;||| 55 solve();||| 56 cout << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream& operator>>(istream& is, vector<T>& v) {||| 5 for (auto& i : v) is >> i;||| 6 return is;||| 7 }||| 8 const long long INF = 1e18;||| 9 const long long MOD = 1e9 + 7;||| 10 const int inf = 1e9;||| 11 const int N = 2e5 + 10;||| 12 bool flag;||| 13 struct ftree {||| 14 vector<int> a;||| 15 ftree(int n) { a.resize(n + 1); }||| 16 long long qu(int n) {||| 17 long long res = 0;||| 18 for (int i = n; i >= 0; i = (i + 1 & i) - 1) res += a[i];||| 19 return res;||| 20 }||| 21 long long qu(int l, int r) { return qu(r) - qu(l - 1); }||| 22 void set(int x) {||| 23 for (; x < (int)a.size(); x |= x + 1) a[x]++;||| 24 }||| 25 };||| 26 void solve() {||| 27 int n;||| 28 cin >> n;||| 29 vector<int> a(n), rv;||| 30 cin >> a;||| 31 rv = a;||| 32 map<int, int> mp;||| 33 ftree ftr(n);||| 34 sort(rv.begin(), rv.end());||| 35 rv.erase(unique(rv.begin(), rv.end()), rv.end());||| 36 for (int i = 0; i < n; i++)||| 37 a[i] = lower_bound(rv.begin(), rv.end(), a[i]) - rv.begin();||| 38 int ans = 0;||| 39 for (auto now : a) {||| 40 int l = ftr.qu(0, now - 1), r = ftr.qu(now + 1, (int)rv.size());||| 41 ans += min(l, r);||| 42 ftr.set(now);||| 43 }||| 44 cout << ans;||| 45 }||| 46 int main() {||| 47 ios::sync_with_stdio(0);||| 48 cin.tie(0);||| 49 cout.tie(0);||| 50 cout << fixed << setprecision(12);||| 51 int tt = 1;||| 52 cin >> tt;||| 53 while (tt--) {||| 54 flag = 0;||| 55 solve();||| 56 cout << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	38 long long ans = 0;
17	119	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 10;||| 4 int tree[maxn], a[maxn], b[maxn], cnt;||| 5 map<int, int> mp;||| 6 map<int, int> cnt1;||| 7 int n;||| 8 int lowbit(int x) { return x & (-x); }||| 9 void update(int x) {||| 10 for (; x <= n; x += lowbit(x)) tree[x]++;||| 11 }||| 12 int query(int x) {||| 13 int ans = 0;||| 14 for (; x > 0; x -= lowbit(x)) ans += tree[x];||| 15 return ans;||| 16 }||| 17 void init() {||| 18 for (int i = 0; i <= n; i++) tree[i] = 0;||| 19 mp.clear();||| 20 cnt1.clear();||| 21 cnt = 0;||| 22 }||| 23 int main() {||| 24 int t;||| 25 scanf(""%d"", &t);||| 26 while (t--) {||| 27 scanf(""%d"", &n);||| 28 init();||| 29 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]), b[i] = a[i];||| 30 long long ans = 0;||| 31 sort(b + 1, b + 1 + n);||| 32 for (int i = 1; i <= n; i++)||| 33 if (!mp[b[i]]) mp[b[i]] = ++cnt;||| 34 for (int i = 1; i <= n; i++) {||| 35 int j = mp[a[i]];||| 36 update(j);||| 37 cnt1[j]++;||| 38 int pre = query(j);||| 39 ans += min(i - pre, pre - cnt1[j]);||| 40 }||| 41 printf(""%lld\n"", ans);||| 42 }||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 10;||| 4 int tree[maxn], a[maxn], b[maxn], cnt;||| 5 map<int, int> mp;||| 6 map<int, int> cnt1;||| 7 int n;||| 8 int lowbit(int x) { return x & (-x); }||| 9 void update(int x) {||| 10 for (; x <= n; x += lowbit(x)) tree[x]++;||| 11 }||| 12 int query(int x) {||| 13 int ans = 0;||| 14 for (; x > 0; x -= lowbit(x)) ans += tree[x];||| 15 return ans;||| 16 }||| 17 void init() {||| 18 for (int i = 0; i <= n; i++) tree[i] = 0;||| 19 mp.clear();||| 20 cnt1.clear();||| 21 cnt = 0;||| 22 }||| 23 int main() {||| 24 int t;||| 25 scanf(""%d"", &t);||| 26 while (t--) {||| 27 scanf(""%d"", &n);||| 28 init();||| 29 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]), b[i] = a[i];||| 30 long long ans = 0;||| 31 sort(b + 1, b + 1 + n);||| 32 for (int i = 1; i <= n; i++)||| 33 if (!mp[b[i]]) mp[b[i]] = ++cnt;||| 34 for (int i = 1; i <= n; i++) {||| 35 int j = mp[a[i]];||| 36 update(j);||| 37 cnt1[j]++;||| 38 int pre = query(j);||| 39 ans += min(i - pre, pre - tree[j]);||| 40 }||| 41 printf(""%lld\n"", ans);||| 42 }||| 43 return 0;||| 44 }||| "	39 ans += min(i - pre, pre - cnt1[j]);
17	126	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st_size;||| 4 vector<int> st;||| 5 void modi(int p, int v) {||| 6 for (st[p += st_size / 2] += v; p > 1; p >>= 1)||| 7 st[p >> 1] = st[p] + st[p ^ 1];||| 8 }||| 9 int sum(int l, int r) {||| 10 int res = 0;||| 11 for (l += st_size / 2, r += st_size / 2; l < r; l >>= 1, r >>= 1) {||| 12 if (l & 1) res += st[l++];||| 13 if (r & 1) res += st[--r];||| 14 }||| 15 return res;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n;||| 22 cin >> n;||| 23 vector<int> a(n);||| 24 for (auto &e : a) cin >> e;||| 25 vector<int> b(n);||| 26 for (int i = 0; i < n; i++) b[i] = a[i];||| 27 sort(b.begin(), b.end());||| 28 b.erase(unique(b.begin(), b.end()), b.end());||| 29 for (int i = 0; i < n; i++)||| 30 a[i] = (int)(lower_bound(b.begin(), b.end(), a[i]) - b.begin());||| 31 int ts = 0;||| 32 for (; (1 << ts) < n; ts++)||| 33 ;||| 34 ts++;||| 35 st.clear();||| 36 st_size = 1 << ts;||| 37 st.resize(st_size);||| 38 long long ans = 0;||| 39 for (int i = 0; i < n; i++) {||| 40 ans += min(sum(0, a[i]), sum(a[i] + 1, n));||| 41 modi(a[i], 1);||| 42 }||| 43 cout << ans << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st_size;||| 4 vector<int> st;||| 5 void modi(int p, int v) {||| 6 for (st[p += st_size / 2] += v; p > 1; p >>= 1)||| 7 st[p >> 1] = st[p] + st[p ^ 1];||| 8 }||| 9 int sum(int l, int r) {||| 10 int res = 0;||| 11 for (l += st_size / 2, r += st_size / 2; l < r; l >>= 1, r >>= 1) {||| 12 if (l & 1) res += st[l++];||| 13 if (r & 1) res += st[--r];||| 14 }||| 15 return res;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n;||| 22 cin >> n;||| 23 vector<int> a(n);||| 24 for (auto &e : a) cin >> e;||| 25 vector<int> b(n);||| 26 for (int i = 0; i < n; i++) b[i] = a[i];||| 27 sort(b.begin(), b.end());||| 28 b.erase(unique(b.begin(), b.end()), b.end());||| 29 for (int i = 0; i < n; i++)||| 30 a[i] = (int)(lower_bound(b.begin(), b.end(), a[i]) - b.begin());||| 31 int ts = 0;||| 32 for (; (1 << ts) < n; ts++)||| 33 ;||| 34 ts++;||| 35 st.clear();||| 36 st_size = 1 << ts;||| 37 st.resize(st_size);||| 38 int ans = 0;||| 39 for (int i = 0; i < n; i++) {||| 40 ans += min(sum(0, a[i]), sum(a[i] + 1, n));||| 41 modi(a[i], 1);||| 42 }||| 43 cout << ans << endl;||| 44 }||| 45 }||| 	38 long long ans = 0;
17	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 using ii = pair<long long, long long>;||| 5 long long power(long long x, long long y) {||| 6 long long res = 1;||| 7 while (y) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y / 2, x = (x * x) % mod;||| 10 }||| 11 return res % mod;||| 12 }||| 13 long long seg[800100];||| 14 void build(long long idx, long long l, long long r) {||| 15 long long mid = (l + r) / 2;||| 16 if (l == r) {||| 17 seg[idx] = 0;||| 18 return;||| 19 }||| 20 build(2 * idx, l, mid);||| 21 build(2 * idx + 1, mid + 1, r);||| 22 seg[idx] = seg[2 * idx] + seg[2 * idx + 1];||| 23 return;||| 24 }||| 25 void upd(long long idx, long long l, long long r, long long ind,||| 26 long long val) {||| 27 if (l == r) {||| 28 seg[idx] += val;||| 29 return;||| 30 }||| 31 long long mid = (l + r) / 2;||| 32 if (ind <= mid and ind >= l) {||| 33 upd(2 * idx, l, mid, ind, val);||| 34 } else {||| 35 upd(2 * idx + 1, mid + 1, r, ind, val);||| 36 }||| 37 seg[idx] = seg[2 * idx] + seg[2 * idx + 1];||| 38 return;||| 39 }||| 40 long long get(long long idx, long long l, long long r, long long gl,||| 41 long long gr) {||| 42 if (l >= gl and r <= gr) {||| 43 return seg[idx];||| 44 }||| 45 if (gl > r or gr < l) {||| 46 return 0;||| 47 }||| 48 long long mid = (l + r) / 2;||| 49 return get(2 * idx, l, mid, gl, gr) + get(2 * idx + 1, mid + 1, r, gl, gr);||| 50 }||| 51 void solve() {||| 52 long long n;||| 53 cin >> n;||| 54 long long a[n];||| 55 long long b[n];||| 56 for (long long i = 0; i < n; i++) {||| 57 cin >> a[i];||| 58 b[i] = a[i];||| 59 }||| 60 sort(a, a + n);||| 61 map<long long, long long> mpp;||| 62 long long st = 1;||| 63 for (long long i = 0; i < n; i++) {||| 64 if (mpp.find(a[i]) == mpp.end()) {||| 65 mpp[a[i]] = st++;||| 66 }||| 67 }||| 68 long long ans = 0;||| 69 build(1, 0, n);||| 70 for (long long i = 0; i < n; i++) {||| 71 long long sim = get(1, 0, n, mpp[b[i]], mpp[b[i]]);||| 72 upd(1, 0, n, mpp[b[i]], 1);||| 73 long long sm = get(1, 0, n, 0, mpp[b[i]] - 1);||| 74 ans += min(i - sm - sim, sm);||| 75 }||| 76 cout << ans << ""\n"";||| 77 }||| 78 signed main() {||| 79 ios_base::sync_with_stdio(0);||| 80 cin.tie(0);||| 81 cout.tie(0);||| 82 int t;||| 83 cin >> t;||| 84 while (t--) {||| 85 solve();||| 86 }||| 87 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 using ii = pair<long long, long long>;||| 5 long long power(long long x, long long y) {||| 6 long long res = 1;||| 7 while (y) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y / 2, x = (x * x) % mod;||| 10 }||| 11 return res % mod;||| 12 }||| 13 long long seg[800100];||| 14 void build(long long idx, long long l, long long r) {||| 15 long long mid = (l + r) / 2;||| 16 if (l == r) {||| 17 seg[idx] = 0;||| 18 return;||| 19 }||| 20 build(2 * idx, l, mid);||| 21 build(2 * idx + 1, mid + 1, r);||| 22 seg[idx] = seg[2 * idx] + seg[2 * idx + 1];||| 23 return;||| 24 }||| 25 void upd(long long idx, long long l, long long r, long long ind,||| 26 long long val) {||| 27 if (l == r) {||| 28 seg[idx] = val;||| 29 return;||| 30 }||| 31 long long mid = (l + r) / 2;||| 32 if (ind <= mid and ind >= l) {||| 33 upd(2 * idx, l, mid, ind, val);||| 34 } else {||| 35 upd(2 * idx + 1, mid + 1, r, ind, val);||| 36 }||| 37 seg[idx] = seg[2 * idx] + seg[2 * idx + 1];||| 38 return;||| 39 }||| 40 long long get(long long idx, long long l, long long r, long long gl,||| 41 long long gr) {||| 42 if (l >= gl and r <= gr) {||| 43 return seg[idx];||| 44 }||| 45 if (gl > r or gr < l) {||| 46 return 0;||| 47 }||| 48 long long mid = (l + r) / 2;||| 49 return get(2 * idx, l, mid, gl, gr) + get(2 * idx + 1, mid + 1, r, gl, gr);||| 50 }||| 51 void solve() {||| 52 long long n;||| 53 cin >> n;||| 54 long long a[n];||| 55 long long b[n];||| 56 for (long long i = 0; i < n; i++) {||| 57 cin >> a[i];||| 58 b[i] = a[i];||| 59 }||| 60 sort(a, a + n);||| 61 map<long long, long long> mpp;||| 62 long long st = 1;||| 63 for (long long i = 0; i < n; i++) {||| 64 if (mpp.find(a[i]) == mpp.end()) {||| 65 mpp[a[i]] = st++;||| 66 }||| 67 }||| 68 long long ans = 0;||| 69 build(1, 0, n);||| 70 for (long long i = 0; i < n; i++) {||| 71 long long sim = get(1, 0, n, mpp[b[i]], mpp[b[i]]);||| 72 upd(1, 0, n, mpp[b[i]], 1);||| 73 long long sm = get(1, 0, n, 0, mpp[b[i]] - 1);||| 74 ans += min(i - sm - sim, sm);||| 75 }||| 76 cout << ans << ""\n"";||| 77 }||| 78 signed main() {||| 79 ios_base::sync_with_stdio(0);||| 80 cin.tie(0);||| 81 cout.tie(0);||| 82 int t;||| 83 cin >> t;||| 84 while (t--) {||| 85 solve();||| 86 }||| 87 }||| "	28 seg[idx] += val;
18	134	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 const int INF = 10000000;||| 5 void work() {||| 6 int n, d;||| 7 cin >> n >> d;||| 8 vector<int> a(n, 0);||| 9 vector<int> st(n, false);||| 10 for (int i = 1; i <= n; i++) cin >> a[i - 1];||| 11 int res = 0;||| 12 for (int i = 0; i < n; i++) {||| 13 if (!st[i]) {||| 14 st[i] = true;||| 15 int v = i;||| 16 vector<int> ans;||| 17 ans.push_back(v);||| 18 while (1) {||| 19 int w = (v + d) % n;||| 20 if (st[w]) break;||| 21 st[w] = true;||| 22 ans.push_back(w);||| 23 v = w;||| 24 }||| 25 int cnt = ans.size();||| 26 vector<int> p;||| 27 for (int j = 0; j < cnt; j++) {||| 28 if (a[ans[j]] == 0) p.push_back(j);||| 29 }||| 30 int cnt2 = p.size();||| 31 if (p.empty()) {||| 32 res = INF;||| 33 } else {||| 34 for (int j = 0; j < cnt2 - 1; j++) {||| 35 res = max(res, p[j + 1] - p[j] - 1);||| 36 }||| 37 res = max(res, p[0] - p[cnt2 - 1] + cnt - 1);||| 38 }||| 39 }||| 40 }||| 41 if (res == INF) {||| 42 cout << ""-1\n"";||| 43 } else||| 44 cout << res << ""\n"";||| 45 }||| 46 int main() {||| 47 int T;||| 48 scanf(""%d"", &T);||| 49 for (int ca = 1; ca <= T; ++ca) {||| 50 work();||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 const int INF = 10000000;||| 5 void work() {||| 6 int n, d;||| 7 cin >> n >> d;||| 8 vector<int> a(n, 0);||| 9 vector<int> st(n, false);||| 10 for (int i = 1; i <= n; i++) cin >> a[i - 1];||| 11 int res = 0;||| 12 for (int i = 0; i < n; i++) {||| 13 if (!st[i]) {||| 14 st[i] = true;||| 15 int v = i;||| 16 vector<int> ans;||| 17 ans.push_back(v);||| 18 while (1) {||| 19 int w = (v + d) % n;||| 20 if (st[w]) break;||| 21 st[w] = true;||| 22 ans.push_back(w);||| 23 v = w;||| 24 }||| 25 int cnt = ans.size();||| 26 vector<int> p;||| 27 for (int j = 0; j < cnt; j++) {||| 28 if (a[ans[j]] == 0) p.push_back(j);||| 29 }||| 30 int cnt2 = p.size();||| 31 if (p.empty()) {||| 32 res = INF;||| 33 } else {||| 34 for (int j = 0; j < cnt2 - 1; j++) {||| 35 res = max(res, p[i + 1] - p[i] - 1);||| 36 }||| 37 res = max(res, p[0] - p[cnt2 - 1] + cnt - 1);||| 38 }||| 39 }||| 40 }||| 41 if (res == INF) {||| 42 cout << ""-1\n"";||| 43 } else||| 44 cout << res << ""\n"";||| 45 }||| 46 int main() {||| 47 int T;||| 48 scanf(""%d"", &T);||| 49 for (int ca = 1; ca <= T; ++ca) {||| 50 work();||| 51 }||| 52 return 0;||| 53 }||| "	35 res = max(res, p[j + 1] - p[j] - 1);
18	152	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 int z, T;||| 10 cin >> T;||| 11 for (z = 1; z <= T; z++) {||| 12 long long int N, M;||| 13 cin >> N >> M;||| 14 long long int a, b, c, i, j, k, A[N], dp[N];||| 15 queue<long long int> q;||| 16 bool x[N];||| 17 for (i = 0; i < N; i++) {||| 18 x[i] = true;||| 19 dp[i] = 1e10;||| 20 cin >> A[i];||| 21 if (A[i] == 0) {||| 22 x[i] = false;||| 23 dp[i] = 0;||| 24 q.push(i);||| 25 }||| 26 }||| 27 while (q.size() != 0) {||| 28 a = q.front();||| 29 x[a] = false;||| 30 q.pop();||| 31 if (a - M >= 0) {||| 32 if (x[a - M]) {||| 33 dp[a - M] = dp[a] + 1;||| 34 x[a - M] = false;||| 35 q.push(a - M);||| 36 }||| 37 } else {||| 38 b = N - (M - a);||| 39 if (x[b]) {||| 40 dp[b] = dp[a] + 1;||| 41 x[b] = false;||| 42 q.push(b);||| 43 }||| 44 }||| 45 }||| 46 a = 0;||| 47 for (i = 0; i < N; i++) {||| 48 a = max(a, dp[i]);||| 49 }||| 50 if (a >= 1e10) {||| 51 cout << ""-1\n"";||| 52 } else {||| 53 cout << a << ""\n"";||| 54 }||| 55 }||| 56 return 0;||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 int z, T;||| 10 cin >> T;||| 11 for (z = 1; z <= T; z++) {||| 12 long long int N, M;||| 13 cin >> N >> M;||| 14 long long int a, b, c, i, j, k, A[N], dp[N];||| 15 queue<long long int> q;||| 16 bool x[N];||| 17 for (i = 0; i < N; i++) {||| 18 x[i] = true;||| 19 dp[N] = 1e10;||| 20 cin >> A[i];||| 21 if (A[i] == 0) {||| 22 x[i] = false;||| 23 dp[i] = 0;||| 24 q.push(i);||| 25 }||| 26 }||| 27 while (q.size() != 0) {||| 28 a = q.front();||| 29 x[a] = false;||| 30 q.pop();||| 31 if (a - M >= 0) {||| 32 if (x[a - M]) {||| 33 dp[a - M] = dp[a] + 1;||| 34 x[a - M] = false;||| 35 q.push(a - M);||| 36 }||| 37 } else {||| 38 b = N - (M - a);||| 39 if (x[b]) {||| 40 dp[b] = dp[a] + 1;||| 41 x[b] = false;||| 42 q.push(b);||| 43 }||| 44 }||| 45 }||| 46 a = 0;||| 47 for (i = 0; i < N; i++) {||| 48 a = max(a, dp[i]);||| 49 }||| 50 if (a >= 1e10) {||| 51 cout << ""-1\n"";||| 52 } else {||| 53 cout << a << ""\n"";||| 54 }||| 55 }||| 56 return 0;||| 57 }||| "	19 dp[i] = 1e10;
18	101	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""avx,avx2,sse,sse2,sse3,sse4,popcnt,fma"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 void prepareIO() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.precision(std::numeric_limits<double>::max_digits10);||| 10 }||| 11 struct HASH {||| 12 size_t operator()(const pair<long long int, long long int>& x) const {||| 13 return hash<long long>()(x.first ^ (x.second) << 32);||| 14 }||| 15 };||| 16 const long long int MOD = 1e9 + 7;||| 17 const long long int N = 1e5 + 5;||| 18 void dfs(long long int u, long long int st, vector<long long int>& a,||| 19 vector<long long int>& adj, vector<bool>& vis, long long int& ans,||| 20 bool& notPoss) {||| 21 if (a[u] == 0) {||| 22 vis[u] = true;||| 23 return;||| 24 }||| 25 long long int v = adj[u];||| 26 if (vis[v] && v == st) {||| 27 notPoss = true;||| 28 return;||| 29 }||| 30 vis[u] = true;||| 31 ans++;||| 32 dfs(v, st, a, adj, vis, ans, notPoss);||| 33 }||| 34 int main() {||| 35 prepareIO();||| 36 long long int t = 1;||| 37 cin >> t;||| 38 for (long long int Case = 1; Case <= t; Case++) {||| 39 long long int n, d;||| 40 cin >> n >> d;||| 41 vector<long long int> a(n), b(n);||| 42 for (long long int i = 0; i < n; i++) {||| 43 cin >> a[i];||| 44 }||| 45 long long int st = n - d;||| 46 for (long long int i = 0; i < d; i++) {||| 47 b[i] = st;||| 48 st++;||| 49 }||| 50 st = 0;||| 51 for (long long int i = d; i < n; i++) {||| 52 b[i] = st;||| 53 st++;||| 54 }||| 55 vector<long long int> adj(n);||| 56 long long int numOnes = 0;||| 57 for (long long int i = 0; i < n; i++) {||| 58 if (a[b[i]] == 0) {||| 59 continue;||| 60 }||| 61 adj[b[i]] = i;||| 62 numOnes++;||| 63 }||| 64 vector<bool> vis(n, false);||| 65 long long int ans = LLONG_MIN;||| 66 for (long long int i = 0; i < n; i++) {||| 67 if (a[i] == 0) {||| 68 continue;||| 69 }||| 70 if (vis[i]) {||| 71 continue;||| 72 }||| 73 bool notPoss = false;||| 74 long long int tmpAns = 0;||| 75 dfs(i, i, a, adj, vis, tmpAns, notPoss);||| 76 if (notPoss) {||| 77 ans = LLONG_MIN;||| 78 break;||| 79 }||| 80 ans = max(ans, tmpAns);||| 81 }||| 82 if (ans == LLONG_MIN) {||| 83 ans = -1;||| 84 if (!numOnes) {||| 85 ans = 0;||| 86 }||| 87 }||| 88 cout << ans << ""\n"";||| 89 }||| 90 return 0;||| 91 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""avx,avx2,sse,sse2,sse3,sse4,popcnt,fma"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 void prepareIO() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.precision(std::numeric_limits<double>::max_digits10);||| 10 }||| 11 struct HASH {||| 12 size_t operator()(const pair<long long int, long long int>& x) const {||| 13 return hash<long long>()(x.first ^ (x.second) << 32);||| 14 }||| 15 };||| 16 const long long int MOD = 1e9 + 7;||| 17 const long long int N = 1e5 + 5;||| 18 void dfs(long long int u, long long int st, vector<long long int>& a,||| 19 vector<long long int>& adj, vector<bool>& vis, long long int& ans,||| 20 bool& notPoss) {||| 21 if (a[u] == 0) {||| 22 vis[u] = true;||| 23 return;||| 24 }||| 25 long long int v = adj[u];||| 26 if (vis[v] && v == st) {||| 27 notPoss = true;||| 28 return;||| 29 }||| 30 vis[u] = true;||| 31 ans++;||| 32 dfs(v, st, a, adj, vis, ans, notPoss);||| 33 }||| 34 int main() {||| 35 prepareIO();||| 36 long long int t = 1;||| 37 cin >> t;||| 38 for (long long int Case = 1; Case <= t; Case++) {||| 39 long long int n, d;||| 40 cin >> n >> d;||| 41 vector<long long int> a(n), b(n);||| 42 for (long long int i = 0; i < n; i++) {||| 43 cin >> a[i];||| 44 }||| 45 long long int st = n - d;||| 46 for (long long int i = 0; i < d; i++) {||| 47 b[i] = st;||| 48 st++;||| 49 }||| 50 st = 0;||| 51 for (long long int i = d; i < n; i++) {||| 52 b[i] = st;||| 53 st++;||| 54 }||| 55 vector<long long int> adj(n);||| 56 long long int numOnes = 0;||| 57 for (long long int i = 0; i < n; i++) {||| 58 if (a[b[i]] == 0) {||| 59 continue;||| 60 }||| 61 adj[b[i]] = i;||| 62 numOnes++;||| 63 }||| 64 vector<bool> vis(n, false);||| 65 long long int ans = LLONG_MIN;||| 66 for (long long int i = 0; i < n; i++) {||| 67 if (a[i] == 0) {||| 68 continue;||| 69 }||| 70 if (vis[i]) {||| 71 continue;||| 72 }||| 73 bool notPoss = false;||| 74 long long int tmpAns = 0;||| 75 dfs(i, i, a, adj, vis, tmpAns, notPoss);||| 76 if (notPoss) {||| 77 ans == LLONG_MIN;||| 78 break;||| 79 }||| 80 ans = max(ans, tmpAns);||| 81 }||| 82 if (ans == LLONG_MIN) {||| 83 ans = -1;||| 84 if (!numOnes) {||| 85 ans = 0;||| 86 }||| 87 }||| 88 cout << ans << ""\n"";||| 89 }||| 90 return 0;||| 91 }||| "	77 ans = LLONG_MIN;
18	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int const N = 1e6 + 5;||| 4 bitset<N> v, viz;||| 5 int n, d;||| 6 int next(int i) { return (i + n - d) % n; }||| 7 int main() {||| 8 ios_base::sync_with_stdio(false);||| 9 cin.tie(0x0);||| 10 cout.tie(0x0);||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 cin >> n >> d;||| 15 int ones = 0;||| 16 for (int i = 0; i < n; ++i) {||| 17 int x;||| 18 cin >> x;||| 19 v[i] = x;||| 20 if (v[i]) ++ones;||| 21 viz[i] = 0;||| 22 }||| 23 if (!ones) {||| 24 cout << ""0\n"";||| 25 continue;||| 26 }||| 27 int best = -1;||| 28 for (int i = 0; i < n; ++i) {||| 29 if (v[i]) continue;||| 30 if (!v[next(i)]) continue;||| 31 int curr = next(i);||| 32 int cnt = 1;||| 33 viz[curr] = 1;||| 34 while (v[next(curr)] && !viz[next(curr)]) {||| 35 ++cnt;||| 36 curr = next(curr);||| 37 viz[curr] = 1;||| 38 }||| 39 ones -= cnt;||| 40 best = max(best, cnt);||| 41 }||| 42 if (ones)||| 43 cout << ""-1\n"";||| 44 else||| 45 cout << best << '\n';||| 46 }||| 47 return 0;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int const N = 1e6 + 5;||| 4 bitset<N> v, viz;||| 5 int n, d;||| 6 int next(int i) { return (i + n - d) % n; }||| 7 int main() {||| 8 ios_base::sync_with_stdio(false);||| 9 cin.tie(0x0);||| 10 cout.tie(0x0);||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 cin >> n >> d;||| 15 int ones = 0;||| 16 for (int i = 0; i < n; ++i) {||| 17 int x;||| 18 cin >> x;||| 19 v[i] = x;||| 20 if (v[i]) ++ones;||| 21 viz[i] = 0;||| 22 }||| 23 if (!ones) {||| 24 cout << ""0\n"";||| 25 return 0;||| 26 }||| 27 int best = -1;||| 28 for (int i = 0; i < n; ++i) {||| 29 if (v[i]) continue;||| 30 if (!v[next(i)]) continue;||| 31 int curr = next(i);||| 32 int cnt = 1;||| 33 viz[curr] = 1;||| 34 while (v[next(curr)] && !viz[next(curr)]) {||| 35 ++cnt;||| 36 curr = next(curr);||| 37 viz[curr] = 1;||| 38 }||| 39 ones -= cnt;||| 40 best = max(best, cnt);||| 41 }||| 42 if (ones)||| 43 cout << ""-1\n"";||| 44 else||| 45 cout << best << '\n';||| 46 }||| 47 return 0;||| 48 }||| "	25 continue;
19	19	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void init_code() {||| 64 ios::sync_with_stdio(0);||| 65 cin.tie(0);||| 66 cout.tie(0);||| 67 }||| 68 int n;||| 69 vector<int> a;||| 70 int dp[10001][2011];||| 71 int make(int i, int val = 0) {||| 72 if (val >= 2010) return 1e9;||| 73 if (val < 0) return 1e9;||| 74 if (i == n) {||| 75 return val;||| 76 }||| 77 if (dp[i][val] == -1) {||| 78 if (i == 0) {||| 79 dp[i][val] = max(val, min({make(i + 1, val + a[i]),||| 80 make(i + 1, val - a[i]), make(i, val + 1)}));||| 81 } else||| 82 dp[i][val] =||| 83 max(val, min(make(i + 1, val + a[i]), make(i + 1, val - a[i])));||| 84 }||| 85 return dp[i][val];||| 86 }||| 87 void solve() {||| 88 cin >> n;||| 89 a.clear();||| 90 for (int i = 0; i < n; i++) {||| 91 int el;||| 92 cin >> el;||| 93 a.push_back(el);||| 94 };||| 95 for (int i = 0; i < n; i++) {||| 96 for (int j = 0; j <= 2010; j++) {||| 97 dp[i][j] = -1;||| 98 }||| 99 }||| 100 cout << make(0, 0) << ""\n"";||| 101 }||| 102 signed main() {||| 103 init_code();||| 104 long long t = 1;||| 105 cin >> t;||| 106 while (t--) {||| 107 solve();||| 108 }||| 109 return 0;||| 110 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void init_code() {||| 64 ios::sync_with_stdio(0);||| 65 cin.tie(0);||| 66 cout.tie(0);||| 67 }||| 68 int n;||| 69 vector<int> a;||| 70 int dp[10001][2011];||| 71 int make(int i, int val = 0) {||| 72 ;||| 73 if (val >= 10) return 1e9;||| 74 if (val < 0) return 1e9;||| 75 if (i == n) {||| 76 return val;||| 77 }||| 78 if (dp[i][val] == -1) {||| 79 if (i == 0) {||| 80 dp[i][val] = max(val, min({make(i + 1, val + a[i]),||| 81 make(i + 1, val - a[i]), make(i, val + 1)}));||| 82 } else||| 83 dp[i][val] =||| 84 max(val, min(make(i + 1, val + a[i]), make(i + 1, val - a[i])));||| 85 }||| 86 return dp[i][val];||| 87 }||| 88 void solve() {||| 89 cin >> n;||| 90 a.clear();||| 91 for (int i = 0; i < n; i++) {||| 92 int el;||| 93 cin >> el;||| 94 a.push_back(el);||| 95 };||| 96 for (int i = 0; i < n; i++) {||| 97 for (int j = 0; j <= 2010; j++) {||| 98 dp[i][j] = -1;||| 99 }||| 100 }||| 101 cout << make(0, 0) << ""\n"";||| 102 }||| 103 signed main() {||| 104 init_code();||| 105 long long t = 1;||| 106 cin >> t;||| 107 while (t--) {||| 108 solve();||| 109 }||| 110 return 0;||| 111 }||| "	72 if (val >= 2010) return 1e9;
19	12	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 10;||| 4 int T, n;||| 5 int a[maxn];||| 6 bool flag[maxn], tmp[maxn];||| 7 bool check(int x) {||| 8 for (int i = 0; i < a[1]; i++) flag[i] = 0;||| 9 for (int i = a[1]; i <= x; i++) flag[i] = 1;||| 10 for (int i = 2; i <= n; i++) {||| 11 for (int j = 0; j <= x; j++) tmp[j] = flag[j], flag[j] = 0;||| 12 for (int j = 0; j <= x; j++) {||| 13 if (tmp[j] && j + a[i] <= x) flag[j + a[i]] = 1;||| 14 if (tmp[j] && j - a[i] >= 0) flag[j - a[i]] = 1;||| 15 }||| 16 }||| 17 bool ret = 0;||| 18 for (int i = 0; i <= x; i++) ret |= flag[i];||| 19 return ret;||| 20 }||| 21 int main() {||| 22 scanf(""%d"", &T);||| 23 while (T--) {||| 24 scanf(""%d"", &n);||| 25 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 26 int L = a[1], R = 3e3;||| 27 while (L < R) {||| 28 int mid = (L + R) >> 1;||| 29 if (check(mid))||| 30 R = mid;||| 31 else||| 32 L = mid + 1;||| 33 }||| 34 printf(""%d\n"", L);||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 10;||| 4 int T, n;||| 5 int a[maxn];||| 6 bool flag[maxn], tmp[maxn];||| 7 bool check(int x) {||| 8 for (int i = 0; i < a[1]; i++) flag[i] = 1;||| 9 for (int i = a[1]; i <= x; i++) flag[i] = 1;||| 10 for (int i = 2; i <= n; i++) {||| 11 for (int j = 0; j <= x; j++) tmp[j] = flag[j], flag[j] = 0;||| 12 for (int j = 0; j <= x; j++) {||| 13 if (tmp[j] && j + a[i] <= x) flag[j + a[i]] = 1;||| 14 if (tmp[j] && j - a[i] >= 0) flag[j - a[i]] = 1;||| 15 }||| 16 }||| 17 bool ret = 0;||| 18 for (int i = 0; i <= x; i++) ret |= flag[i];||| 19 return ret;||| 20 }||| 21 int main() {||| 22 scanf(""%d"", &T);||| 23 while (T--) {||| 24 scanf(""%d"", &n);||| 25 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 26 int L = a[1], R = 3e3;||| 27 while (L < R) {||| 28 int mid = (L + R) >> 1;||| 29 if (check(mid))||| 30 R = mid;||| 31 else||| 32 L = mid + 1;||| 33 }||| 34 printf(""%d\n"", L);||| 35 }||| 36 }||| "	8 for (int i = 0; i < a[1]; i++) flag[i] = 0;
19	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 5;||| 4 const int INF = 1e9;||| 5 const long long mod = 1e9 + 7;||| 6 int n, arr[N], dp[N][2005];||| 7 int main() {||| 8 ios_base::sync_with_stdio(false);||| 9 cin.tie(NULL);||| 10 cout.tie(NULL);||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 cin >> n;||| 15 for (int i = 1; i <= n; i++) {||| 16 cin >> arr[i];||| 17 }||| 18 for (int i = 0; i <= 2000; i++) dp[0][i] = i;||| 19 for (int i = 1; i <= n; i++) {||| 20 for (int j = 0; j <= 2000; j++) {||| 21 dp[i][j] = INF;||| 22 }||| 23 for (int j = 0; j <= 2000; j++) {||| 24 if (j >= arr[i]) {||| 25 dp[i][j] = min(dp[i][j], dp[i - 1][j - arr[i]]);||| 26 }||| 27 if (arr[i] + j <= 2000) {||| 28 dp[i][j] = min(dp[i][j], dp[i - 1][j + arr[i]]);||| 29 }||| 30 dp[i][j] = max(dp[i][j], j);||| 31 }||| 32 }||| 33 int ans = INF;||| 34 for (int i = 0; i <= 2000; i++) {||| 35 ans = min(ans, dp[n][i]);||| 36 }||| 37 cout << ans << '\n';||| 38 }||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 5;||| 4 const int INF = 1e9;||| 5 const long long mod = 1e9 + 7;||| 6 int n, arr[N], dp[N][2005];||| 7 int main() {||| 8 ios_base::sync_with_stdio(false);||| 9 cin.tie(NULL);||| 10 cout.tie(NULL);||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 cin >> n;||| 15 for (int i = 1; i <= n; i++) {||| 16 cin >> arr[i];||| 17 }||| 18 for (int i = 0; i <= 2000; i++) dp[0][i] = i;||| 19 for (int i = 1; i <= n; i++) {||| 20 for (int j = 0; j <= 2000; j++) {||| 21 dp[i][j] = INF;||| 22 }||| 23 for (int j = 0; j <= 2000; j++) {||| 24 if (j >= arr[i]) {||| 25 dp[i][j] = min(dp[i][j], dp[i - 1][j - arr[i]]);||| 26 } else if (arr[i] + j <= 2000) {||| 27 dp[i][j] = min(dp[i][j], dp[i - 1][j + arr[i]]);||| 28 }||| 29 dp[i][j] = max(dp[i][j], j);||| 30 }||| 31 }||| 32 int ans = INF;||| 33 for (int i = 0; i <= 2000; i++) {||| 34 ans = min(ans, dp[n][i]);||| 35 }||| 36 cout << ans << '\n';||| 37 }||| 38 }||| 	26 }
19	40	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e4 + 100, INF = 1e9 + 7;||| 4 int kase, n, a[N], s[2100], t[2100];||| 5 bool check(int x) {||| 6 for (int i = 0; i <= x; i++) s[i] = 1;||| 7 for (int i = 1; i <= n; i++) {||| 8 memset(t, 0, sizeof t);||| 9 for (int j = a[i]; j <= x; j++) t[j - a[i]] = s[j];||| 10 for (int j = x - a[i]; j >= 0; j--) t[j + a[i]] |= s[j];||| 11 for (int j = 0; j <= x; j++) s[j] = t[j];||| 12 }||| 13 for (int i = 0; i <= x; i++)||| 14 if (s[i]) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 scanf(""%d"", &kase);||| 19 while (kase--) {||| 20 scanf(""%d"", &n);||| 21 int max_ = 0;||| 22 for (int i = 1; i <= n; i++) {||| 23 scanf(""%d"", &a[i]);||| 24 max_ = max(max_, a[i]);||| 25 }||| 26 int l = max_, r = max_ * 2;||| 27 while (l < r) {||| 28 int m = (l + r) / 2;||| 29 if (check(m))||| 30 r = m;||| 31 else||| 32 l = m + 1;||| 33 }||| 34 printf(""%d\n"", l);||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e4 + 100, INF = 1e9 + 7;||| 4 int kase, n, a[N], s[2100], t[2100];||| 5 bool check(int x) {||| 6 for (int i = 0; i <= x; i++) s[i] = 1;||| 7 for (int i = 1; i <= n; i++) {||| 8 memset(t, 0, sizeof t);||| 9 for (int j = a[i]; j <= x; j++) t[j - a[i]] = s[j];||| 10 for (int j = x - a[i]; j >= 0; j--) t[j + a[i]] = s[j];||| 11 for (int j = 0; j <= x; j++) s[j] = t[j];||| 12 }||| 13 for (int i = 0; i <= x; i++)||| 14 if (s[i]) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 scanf(""%d"", &kase);||| 19 while (kase--) {||| 20 scanf(""%d"", &n);||| 21 int max_ = 0;||| 22 for (int i = 1; i <= n; i++) {||| 23 scanf(""%d"", &a[i]);||| 24 max_ = max(max_, a[i]);||| 25 }||| 26 int l = max_, r = max_ * 2;||| 27 while (l < r) {||| 28 int m = (l + r) / 2;||| 29 if (check(m))||| 30 r = m;||| 31 else||| 32 l = m + 1;||| 33 }||| 34 printf(""%d\n"", l);||| 35 }||| 36 }||| "	10 for (int j = x - a[i]; j >= 0; j--) t[j + a[i]] |= s[j];
19	90	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10010;||| 4 const int inf = 0x3f3f3f3f;||| 5 int dp[10010][2010], a[N];||| 6 int n, t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 1; i <= n; i++) cin >> a[i];||| 12 for (int i = 0; i <= n; i++)||| 13 for (int j = 0; j <= 2000; j++) dp[i][j] = inf;||| 14 dp[0][0] = 1;||| 15 for (int i = 1; i <= n; i++)||| 16 for (int k = 0; k <= 2000; k++) {||| 17 if (dp[i - 1][k] == inf) continue;||| 18 if (k + a[i] <= 2000)||| 19 dp[i][k + a[i]] = min(dp[i][k + a[i]], max(dp[i - 1][k], k + a[i]));||| 20 if (k - a[i] >= 0)||| 21 dp[i][k - a[i]] = min(dp[i][k - a[i]], dp[i - 1][k]);||| 22 else||| 23 dp[i][0] = min(dp[i][0], dp[i - 1][k] + a[i] - k);||| 24 }||| 25 int ans = 0x3f3f3f3f;||| 26 for (int i = 0; i <= 2000; i++) ans = min(ans, dp[n][i]);||| 27 cout << ans << endl;||| 28 }||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2010;||| 4 const int inf = 0x3f3f3f3f;||| 5 int dp[10010][N], a[N];||| 6 int n, t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 1; i <= n; i++) cin >> a[i];||| 12 for (int i = 0; i <= n; i++)||| 13 for (int j = 0; j <= 2000; j++) dp[i][j] = inf;||| 14 dp[0][0] = 1;||| 15 for (int i = 1; i <= n; i++)||| 16 for (int k = 0; k <= 2000; k++) {||| 17 if (dp[i - 1][k] == inf) continue;||| 18 if (k + a[i] <= 2000)||| 19 dp[i][k + a[i]] = min(dp[i][k + a[i]], max(dp[i - 1][k], k + a[i]));||| 20 if (k - a[i] >= 0)||| 21 dp[i][k - a[i]] = min(dp[i][k - a[i]], dp[i - 1][k]);||| 22 else||| 23 dp[i][0] = min(dp[i][0], dp[i - 1][k] + a[i] - k);||| 24 }||| 25 int ans = 0x3f3f3f3f;||| 26 for (int i = 0; i <= 2000; i++) ans = min(ans, dp[n][i]);||| 27 cout << ans << endl;||| 28 }||| 29 }||| 	3 const int N = 10010;
19	27	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,unroll-loops,no-stack-protector,fast-math"")||| 3 using namespace std;||| 4 const int INF = 1e9;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n);||| 9 for (int& i : a) cin >> i;||| 10 const int mx = *max_element(a.begin(), a.end()) << 1;||| 11 vector<int> dp(mx + 1, INF);||| 12 dp[0] = 0;||| 13 for (int i = 0; i < n; ++i) {||| 14 vector<int> new_dp(mx + 1, INF);||| 15 for (int j = 0; j <= mx; ++j) {||| 16 if (dp[j] == INF) continue;||| 17 new_dp[max(0, j - a[i])] = min(new_dp[max(0, j - a[i])], dp[j] + a[i]);||| 18 if (j + a[i] <= mx)||| 19 new_dp[j + a[i]] = min(new_dp[j + a[i]], max(dp[j] - a[i], 0));||| 20 }||| 21 dp = new_dp;||| 22 }||| 23 int ans = INF;||| 24 for (int i = 0; i <= mx; ++i) ans = min(ans, i + dp[i]);||| 25 cout << ans << ""\n"";||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false), cin.tie(NULL);||| 29 int t;||| 30 cin >> t;||| 31 while (t--) solve();||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,unroll-loops,no-stack-protector,fast-math"")||| 3 using namespace std;||| 4 const int INF = 1e9;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n);||| 9 for (int& i : a) cin >> i;||| 10 const int mx = *max_element(a.begin(), a.end()) << 1;||| 11 vector<int> dp(mx + 1, INF);||| 12 dp[0] = 0;||| 13 for (int i = 0; i < n; ++i) {||| 14 vector<int> new_dp(mx + 1, INF);||| 15 for (int j = 0; j <= mx; ++j) {||| 16 if (dp[j] == INF) continue;||| 17 new_dp[max(0, j - a[i])] = min(new_dp[max(0, j - a[i])], dp[j] + a[i]);||| 18 if (j + a[i] <= mx)||| 19 new_dp[j + a[i]] = min(dp[j + a[i]], max(dp[j] - a[i], 0));||| 20 }||| 21 dp = new_dp;||| 22 }||| 23 int ans = INF;||| 24 for (int i = 0; i <= mx; ++i) ans = min(ans, i + dp[i]);||| 25 cout << ans << ""\n"";||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false), cin.tie(NULL);||| 29 int t;||| 30 cin >> t;||| 31 while (t--) solve();||| 32 return 0;||| 33 }||| "	19 new_dp[j + a[i]] = min(new_dp[j + a[i]], max(dp[j] - a[i], 0));
19	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 10;||| 4 const int M = 2000 + 10;||| 5 const int INF = 0x3f3f3f3f;||| 6 int n;||| 7 int a[N];||| 8 int f[N][M];||| 9 void solve() {||| 10 scanf(""%d"", &n);||| 11 for (int i = 1; i <= n; ++i) {||| 12 scanf(""%d"", &a[i]);||| 13 }||| 14 for (int i = 1; i <= n; ++i)||| 15 for (int j = 0; j <= 2000; ++j) f[i][j] = INF;||| 16 f[1][a[1]] = a[1];||| 17 for (int i = 2; i <= n; ++i) {||| 18 for (int l = 0; l <= 2000; ++l) {||| 19 if (l <= a[i])||| 20 f[i][0] = min(f[i][0], f[i - 1][l] + (a[i] - l));||| 21 else||| 22 f[i][l - a[i]] = min(f[i][l - a[i]], f[i - 1][l]);||| 23 f[i][l + a[i]] = min(f[i][l + a[i]], max(f[i - 1][l], l + a[i]));||| 24 }||| 25 }||| 26 int ans = INF;||| 27 for (int j = 0; j <= 2000; ++j) ans = min(ans, f[n][j]);||| 28 printf(""%d\n"", ans);||| 29 }||| 30 int main() {||| 31 int T;||| 32 scanf(""%d"", &T);||| 33 while (T--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 10;||| 4 const int M = 2000 + 10;||| 5 const int INF = 0x3f3f3f3f;||| 6 int n;||| 7 int a[M];||| 8 int f[N][M];||| 9 void solve() {||| 10 scanf(""%d"", &n);||| 11 for (int i = 1; i <= n; ++i) {||| 12 scanf(""%d"", &a[i]);||| 13 }||| 14 for (int i = 1; i <= n; ++i)||| 15 for (int j = 0; j <= 2000; ++j) f[i][j] = INF;||| 16 f[1][a[1]] = a[1];||| 17 for (int i = 2; i <= n; ++i) {||| 18 for (int l = 0; l <= 2000; ++l) {||| 19 if (l <= a[i])||| 20 f[i][0] = min(f[i][0], f[i - 1][l] + (a[i] - l));||| 21 else||| 22 f[i][l - a[i]] = min(f[i][l - a[i]], f[i - 1][l]);||| 23 f[i][l + a[i]] = min(f[i][l + a[i]], max(f[i - 1][l], l + a[i]));||| 24 }||| 25 }||| 26 int ans = INF;||| 27 for (int j = 0; j <= 2000; ++j) ans = min(ans, f[n][j]);||| 28 printf(""%d\n"", ans);||| 29 }||| 30 int main() {||| 31 int T;||| 32 scanf(""%d"", &T);||| 33 while (T--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	7 int a[N];
20	35	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void chmax(T& a, const T& b) {||| 5 a = max(a, b);||| 6 }||| 7 template <class T>||| 8 void chmin(T& a, const T& b) {||| 9 a = min(a, b);||| 10 }||| 11 using ll = long long;||| 12 using P = pair<int, int>;||| 13 using VI = vector<int>;||| 14 using VVI = vector<VI>;||| 15 using VL = vector<ll>;||| 16 using VVL = vector<VL>;||| 17 int dp[6][410][410];||| 18 int d[410];||| 19 int main() {||| 20 ios::sync_with_stdio(false);||| 21 cin.tie(0);||| 22 int tt;||| 23 cin >> tt;||| 24 while (tt--) {||| 25 int n, m;||| 26 cin >> n >> m;||| 27 for (int k = 0; k < int(5); ++k)||| 28 for (int i = 0; i < int(m + 1); ++i)||| 29 for (int j = 0; j < int(m + 1); ++j) dp[k][i][j] = 100;||| 30 int ans = 100;||| 31 for (int _ = 0; _ < int(n); ++_) {||| 32 for (int j = 0; j < int(m); ++j) {||| 33 char c;||| 34 cin >> c;||| 35 d[j + 1] = c - '0';||| 36 }||| 37 for (int j = 0; j < int(m); ++j) d[j + 1] += d[j];||| 38 for (int k = int(5) - 1; k >= 0; --k)||| 39 for (int r = 0; r < int(m + 1); ++r)||| 40 for (int l = int(r - 4 + 1) - 1; l >= 0; --l) {||| 41 if (k == 0 || k == 4) {||| 42 int x = r - 1 - (l + 1) - (d[r - 1] - d[l + 1]);||| 43 if (k == 4) {||| 44 chmin(ans, x + dp[k][l][r]);||| 45 dp[k][l][r] += d[r - 1] - d[l + 1] + 1 - (d[l + 1] - d[l]) + 1 -||| 46 (d[r] - d[r - 1]);||| 47 } else {||| 48 dp[1][l][r] = x;||| 49 }||| 50 } else {||| 51 int x = d[r - 1] - d[l + 1] + 1 - (d[l + 1] - d[l]) + 1 -||| 52 (d[r] - d[r - 1]);||| 53 if (k < 3) {||| 54 dp[k + 1][l][r] = dp[k][l][r] + x;||| 55 } else {||| 56 chmin(dp[k + 1][l][r], dp[k][l][r] + x);||| 57 }||| 58 }||| 59 }||| 60 }||| 61 cout << ans << '\n';||| 62 }||| 63 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void chmax(T& a, const T& b) {||| 5 a = max(a, b);||| 6 }||| 7 template <class T>||| 8 void chmin(T& a, const T& b) {||| 9 a = min(a, b);||| 10 }||| 11 using ll = long long;||| 12 using P = pair<int, int>;||| 13 using VI = vector<int>;||| 14 using VVI = vector<VI>;||| 15 using VL = vector<ll>;||| 16 using VVL = vector<VL>;||| 17 int dp[6][410][410];||| 18 int d[410];||| 19 int main() {||| 20 ios::sync_with_stdio(false);||| 21 cin.tie(0);||| 22 int tt;||| 23 cin >> tt;||| 24 while (tt--) {||| 25 int n, m;||| 26 cin >> n >> m;||| 27 for (int k = 0; k < int(5); ++k)||| 28 for (int i = 0; i < int(n + 1); ++i)||| 29 for (int j = 0; j < int(m + 1); ++j) dp[k][i][j] = 100;||| 30 int ans = 100;||| 31 for (int _ = 0; _ < int(n); ++_) {||| 32 for (int j = 0; j < int(m); ++j) {||| 33 char c;||| 34 cin >> c;||| 35 d[j + 1] = c - '0';||| 36 }||| 37 for (int j = 0; j < int(m); ++j) d[j + 1] += d[j];||| 38 for (int k = int(5) - 1; k >= 0; --k)||| 39 for (int r = 0; r < int(m + 1); ++r)||| 40 for (int l = int(r - 4 + 1) - 1; l >= 0; --l) {||| 41 if (k == 0 || k == 4) {||| 42 int x = r - 1 - (l + 1) - (d[r - 1] - d[l + 1]);||| 43 if (k == 4) {||| 44 chmin(ans, x + dp[k][l][r]);||| 45 dp[k][l][r] += d[r - 1] - d[l + 1] + 1 - (d[l + 1] - d[l]) + 1 -||| 46 (d[r] - d[r - 1]);||| 47 } else {||| 48 dp[1][l][r] = x;||| 49 }||| 50 } else {||| 51 int x = d[r - 1] - d[l + 1] + 1 - (d[l + 1] - d[l]) + 1 -||| 52 (d[r] - d[r - 1]);||| 53 if (k < 3) {||| 54 dp[k + 1][l][r] = dp[k][l][r] + x;||| 55 } else {||| 56 chmin(dp[k + 1][l][r], dp[k][l][r] + x);||| 57 }||| 58 }||| 59 }||| 60 }||| 61 cout << ans << '\n';||| 62 }||| 63 }||| 	28 for (int i = 0; i < int(m + 1); ++i)
20	68	"1 #include <bits/stdc++.h>||| 2 int n, m, ans = 0x3f3f3f3f;||| 3 char a[402][402];||| 4 int pre[402][402];||| 5 inline int min(int x, int y) { return x < y ? x : y; }||| 6 int main() {||| 7 int T;||| 8 scanf(""%d"", &T);||| 9 while (T--) {||| 10 ans = 0x3f3f3f3f;||| 11 scanf(""%d%d"", &n, &m);||| 12 for (int i = 1; i <= n; i++) scanf(""%s"", a[i] + 1);||| 13 for (int i = 1; i <= n; i++)||| 14 for (int j = 1; j <= m; j++) a[i][j] -= '0';||| 15 for (int j = 1; j <= m; j++)||| 16 for (int i = 1; i <= n; i++) pre[j][i] = pre[j][i - 1] + a[i][j];||| 17 for (int i = 1; i <= n; i++)||| 18 for (int j = i + 5 - 1; j <= n; j++) {||| 19 int temp = 0x3f3f3f3f;||| 20 for (int k = 4; k <= m; k++)||| 21 temp = min(temp + (1 - a[i][k - 1]) + (1 - a[j][k - 1]) +||| 22 (pre[k - 1][j - 1] - pre[k - 1][i + 1 - 1]),||| 23 ((j - 1) - (i + 1) + 1 -||| 24 (pre[k - 3][j - 1] - pre[k - 3][i + 1 - 1])) +||| 25 (pre[k - 2][j - 1] - pre[k - 2][i + 1 - 1]) +||| 26 (pre[k - 1][j - 1] - pre[k - 1][i + 1 - 1]) +||| 27 (1 - a[i][k - 2]) + (1 - a[i][k - 1]) +||| 28 (1 - a[j][k - 2]) + (1 - a[j][k - 1])),||| 29 ans = min(ans, temp + ((j - 1) - (i + 1) + 1 -||| 30 (pre[k][j - 1] - pre[k][i + 1 - 1])));||| 31 }||| 32 printf(""%d\n"", ans);||| 33 }||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 int n, m, ans = 0x3f3f3f3f;||| 3 char a[402][402];||| 4 int pre[402][402];||| 5 inline int min(int x, int y) { return x < y ? x : y; }||| 6 int main() {||| 7 int T;||| 8 scanf(""%d"", &T);||| 9 while (T--) {||| 10 ans = 0x3f3f3f3f;||| 11 scanf(""%d%d"", &n, &m);||| 12 for (int i = 1; i <= n; i++) scanf(""%s"", a[i] + 1);||| 13 for (int i = 1; i <= n; i++)||| 14 for (int j = 1; j <= m; j++) a[i][j] -= '0';||| 15 for (int j = 1; j <= m; j++)||| 16 for (int i = 1; i <= n; i++) pre[j][i] = pre[j][i - 1] + a[i][j];||| 17 for (int i = 1; i <= n; i++)||| 18 for (int j = i + 5 - 1; j <= n; j++) {||| 19 int temp = 0x3f3f3f3f;||| 20 for (int k = 4; k <= m; k++)||| 21 temp = min(temp + (1 - a[i][k - 1]) + (1 - a[j][k - 1]) +||| 22 (pre[k - 1][j - 1] - pre[k - 1][i + 1 - 1]),||| 23 ((j - 1) - (i + 1) + 1 -||| 24 (pre[k - 3][j - 1] - pre[k - 3][i + 1 - 1])) +||| 25 (pre[k - 2][j - 1] - pre[k - 2][i + 1 - 1]) +||| 26 (pre[k - 1][j - 1] - pre[k - 1][i + 1 - 1]) +||| 27 (1 - a[i][k - 2]) + (1 - a[i][k - 1]) +||| 28 (1 - a[j][k - 2]) + (1 - a[j][k - 1])),||| 29 ans = min(ans, temp + ((j - 1) - (i + 1) + 1 -||| 30 (pre[j][j - 1] - pre[j][i + 1 - 1])));||| 31 }||| 32 printf(""%d\n"", ans);||| 33 }||| 34 return 0;||| 35 }||| "	30 (pre[k][j - 1] - pre[k][i + 1 - 1])));
20	62	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const int MAXN = 1e3 + 5;||| 5 const long long MAXV = LLONG_MAX;||| 6 template <typename T1, typename T2>||| 7 inline void chmin(T1& x, T2 y) {||| 8 if (x > y) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void swapmin(T1& x, T2& y) {||| 12 if (x > y) swap(x, y);||| 13 }||| 14 template <typename T1, typename T2>||| 15 inline void chmax(T1& x, T2 y) {||| 16 if (x < y) x = y;||| 17 }||| 18 template <typename T1, typename T2>||| 19 inline void swapmax(T1& x, T2& y) {||| 20 if (x < y) swap(x, y);||| 21 }||| 22 long long qpow(long long a, long long b) {||| 23 long long ans = 1;||| 24 a %= MOD;||| 25 while (b) {||| 26 if (b & 1) {||| 27 ans = (ans * a) % MOD;||| 28 }||| 29 a = (a * a) % MOD;||| 30 b >>= 1;||| 31 }||| 32 return ans;||| 33 }||| 34 long long fac[MAXN], ifac[MAXN];||| 35 void init() {||| 36 fac[0] = 1;||| 37 for (int i = 1; i < MAXN; i++) {||| 38 fac[i] = (fac[i - 1] * i) % MOD;||| 39 }||| 40 ifac[MAXN - 1] = qpow(fac[MAXN - 1], MOD - 2);||| 41 for (int i = MAXN - 2; i >= 0; i--) {||| 42 ifac[i] = (ifac[i + 1] * (i + 1)) % MOD;||| 43 }||| 44 }||| 45 long long C(int n, int k) {||| 46 if (k > n) return 0;||| 47 return (((fac[n] * ifac[n - k]) % MOD) * ifac[k]) % MOD;||| 48 }||| 49 long long n, m, k;||| 50 void solve() {||| 51 cin >> n >> m;||| 52 vector<string> a(n);||| 53 for (int i = 0; i < n; i++) {||| 54 cin >> a[i];||| 55 }||| 56 vector<vector<int> > prefix(n + 1, vector<int>(m + 1, 0));||| 57 for (int i = 0; i < n; i++) {||| 58 for (int j = 0; j < m; j++) {||| 59 a[i][j] -= '0';||| 60 prefix[i + 1][j + 1] =||| 61 prefix[i][j + 1] + prefix[i + 1][j] - prefix[i][j] + a[i][j];||| 62 }||| 63 }||| 64 auto get_sum = [&](int x1, int y1, int x2, int y2) {||| 65 return prefix[x2 + 1][y2 + 1] - prefix[x1][y2 + 1] - prefix[x2 + 1][y1] +||| 66 prefix[x1][y1];||| 67 };||| 68 int ans = INT_MAX;||| 69 for (int i = 0; i < n; i++) {||| 70 for (int j = 0; j < m; j++) {||| 71 for (int k = i + 4; k < n; k++) {||| 72 for (int l = j + 3; l < m; l++) {||| 73 int inside_cost = get_sum(i + 1, j + 1, k - 1, l - 1);||| 74 int upper_cost = l - j - 1 - get_sum(i, j + 1, i, l - 1);||| 75 int lower_cost = l - j - 1 - get_sum(k, j + 1, k, l - 1);||| 76 int left_cost = k - i - 1 - get_sum(i + 1, j, k - 1, j);||| 77 int right_cost = k - i - 1 - get_sum(i + 1, l, k - 1, l);||| 78 int cur =||| 79 inside_cost + upper_cost + lower_cost + left_cost + right_cost;||| 80 chmin(ans, cur);||| 81 if (ans == 0) break;||| 82 if (inside_cost > 16 || upper_cost + lower_cost > 16 ||||| 83 left_cost > 16)||| 84 break;||| 85 }||| 86 }||| 87 }||| 88 }||| 89 printf(""%d\n"", ans);||| 90 }||| 91 int main() {||| 92 int t = 1;||| 93 cin.tie(0);||| 94 ios::sync_with_stdio(0);||| 95 cin >> t;||| 96 while (t--) {||| 97 solve();||| 98 }||| 99 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const int MAXN = 1e3 + 5;||| 5 const long long MAXV = LLONG_MAX;||| 6 template <typename T1, typename T2>||| 7 inline void chmin(T1& x, T2 y) {||| 8 if (x > y) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void swapmin(T1& x, T2& y) {||| 12 if (x > y) swap(x, y);||| 13 }||| 14 template <typename T1, typename T2>||| 15 inline void chmax(T1& x, T2 y) {||| 16 if (x < y) x = y;||| 17 }||| 18 template <typename T1, typename T2>||| 19 inline void swapmax(T1& x, T2& y) {||| 20 if (x < y) swap(x, y);||| 21 }||| 22 long long qpow(long long a, long long b) {||| 23 long long ans = 1;||| 24 a %= MOD;||| 25 while (b) {||| 26 if (b & 1) {||| 27 ans = (ans * a) % MOD;||| 28 }||| 29 a = (a * a) % MOD;||| 30 b >>= 1;||| 31 }||| 32 return ans;||| 33 }||| 34 long long fac[MAXN], ifac[MAXN];||| 35 void init() {||| 36 fac[0] = 1;||| 37 for (int i = 1; i < MAXN; i++) {||| 38 fac[i] = (fac[i - 1] * i) % MOD;||| 39 }||| 40 ifac[MAXN - 1] = qpow(fac[MAXN - 1], MOD - 2);||| 41 for (int i = MAXN - 2; i >= 0; i--) {||| 42 ifac[i] = (ifac[i + 1] * (i + 1)) % MOD;||| 43 }||| 44 }||| 45 long long C(int n, int k) {||| 46 if (k > n) return 0;||| 47 return (((fac[n] * ifac[n - k]) % MOD) * ifac[k]) % MOD;||| 48 }||| 49 long long n, m, k;||| 50 void solve() {||| 51 cin >> n >> m;||| 52 vector<string> a(n);||| 53 for (int i = 0; i < n; i++) {||| 54 cin >> a[i];||| 55 }||| 56 vector<vector<int> > prefix(n + 1, vector<int>(m + 1, 0));||| 57 for (int i = 0; i < n; i++) {||| 58 for (int j = 0; j < m; j++) {||| 59 a[i][j] -= '0';||| 60 prefix[i + 1][j + 1] =||| 61 prefix[i][j + 1] + prefix[i + 1][j] - prefix[i][j] + a[i][j];||| 62 }||| 63 }||| 64 auto get_sum = [&](int x1, int y1, int x2, int y2) {||| 65 return prefix[x2 + 1][y2 + 1] - prefix[x1][y2 + 1] - prefix[x2 + 1][y1] +||| 66 prefix[x1][y1];||| 67 };||| 68 int ans = INT_MAX;||| 69 for (int i = 0; i < n; i++) {||| 70 for (int j = 0; j < m; j++) {||| 71 for (int k = i + 4; k < n; k++) {||| 72 for (int l = j + 3; l < m; l++) {||| 73 int inside_cost = get_sum(i + 1, j + 1, k - 1, l - 1);||| 74 int upper_cost = l - j - 1 - get_sum(i, j + 1, i, l - 1);||| 75 int lower_cost = l - j - 1 - get_sum(k, j + 1, k, l - 1);||| 76 int left_cost = k - i - 1 - get_sum(i + 1, j, k - 1, j);||| 77 int right_cost = k - i - 1 - get_sum(i + 1, l, k - 1, l);||| 78 int cur =||| 79 inside_cost + upper_cost + lower_cost + left_cost + right_cost;||| 80 chmin(ans, cur);||| 81 if (ans == 0) break;||| 82 if (inside_cost > 16 || upper_cost + lower_cost > 16 ||||| 83 left_cost + right_cost > 16)||| 84 break;||| 85 }||| 86 }||| 87 }||| 88 }||| 89 printf(""%d\n"", ans);||| 90 }||| 91 int main() {||| 92 int t = 1;||| 93 cin.tie(0);||| 94 ios::sync_with_stdio(0);||| 95 cin >> t;||| 96 while (t--) {||| 97 solve();||| 98 }||| 99 }||| "	83 left_cost > 16)
20	67	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 500 + 5, mod = 998244353;||| 4 char a[N][N];||| 5 long long sum[N][N];||| 6 long long f[N];||| 7 long long s(long long lx, long long ly, long long rx, long long ry) {||| 8 return sum[rx][ry] - sum[lx - 1][ry] - sum[rx][ly - 1] + sum[lx - 1][ly - 1];||| 9 }||| 10 signed main() {||| 11 ios::sync_with_stdio(0);||| 12 cin.tie(0);||| 13 long long t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long n, m;||| 17 cin >> n >> m;||| 18 long long ans = 999999999;||| 19 for (long long i = 1; i <= n; i++) {||| 20 for (long long j = 1; j <= m; j++) {||| 21 cin >> a[i][j];||| 22 }||| 23 }||| 24 for (long long i = 1; i <= n; i++) {||| 25 for (long long j = 1; j <= m; j++) {||| 26 sum[i][j] += sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] +||| 27 (a[i][j] == '1');||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; i++) {||| 31 for (long long j = i + 4; j <= n; j++) {||| 32 for (long long k = 4; k <= m; k++) {||| 33 f[k] = s(i + 1, 1, j - 1, k - 1) - s(i, 1, i, k - 1) -||| 34 s(j, 1, j, k - 1) + (k - 1) * 2 +||| 35 (j - i - 1 - s(i + 1, k, j - 1, k));||| 36 }||| 37 for (long long k = m - 1; k >= 4; k--) {||| 38 f[k] = min(f[k + 1], f[k]);||| 39 }||| 40 for (long long k = 1; k <= m - 3; k++) {||| 41 long long sh = k - s(i, 1, i, k), xi = k - s(j, 1, j, k);||| 42 ans = min(ans, f[k + 3] + (j - i - 1 - s(i + 1, k, j - 1, k)) - sh -||| 43 xi - s(i + 1, 1, j - 1, k));||| 44 }||| 45 }||| 46 }||| 47 cout << ans << endl;||| 48 for (long long i = 1; i <= n; i++) {||| 49 for (long long j = 1; j <= m; j++) sum[i][j] = 0;||| 50 }||| 51 }||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 500 + 5, mod = 998244353;||| 4 char a[N][N];||| 5 long long sum[N][N];||| 6 long long f[N];||| 7 long long s(long long lx, long long ly, long long rx, long long ry) {||| 8 return sum[rx][ry] - sum[lx - 1][ry] - sum[rx][ly - 1] + sum[lx - 1][ly - 1];||| 9 }||| 10 signed main() {||| 11 ios::sync_with_stdio(0);||| 12 cin.tie(0);||| 13 long long t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long n, m;||| 17 cin >> n >> m;||| 18 long long ans = 999999999;||| 19 for (long long i = 1; i <= n; i++) {||| 20 for (long long j = 1; j <= m; j++) {||| 21 cin >> a[i][j];||| 22 }||| 23 }||| 24 for (long long i = 1; i <= n; i++) {||| 25 for (long long j = 1; j <= m; j++) {||| 26 sum[i][j] += sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1] +||| 27 (a[i][j] == '1');||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; i++) {||| 31 for (long long j = i + 4; j <= n; j++) {||| 32 for (long long k = 4; k <= m; k++) {||| 33 f[k] = s(i + 1, 1, j - 1, k - 1) - s(i, 1, i, k - 1) -||| 34 s(j, 1, j, k - 1) + (k - 1) * 2 +||| 35 (j - i - 1 - s(i + 1, k, j - 1, k));||| 36 }||| 37 for (long long k = m - 1; k >= 4; k--) {||| 38 f[k] = min(f[k + 1], f[k]);||| 39 }||| 40 for (long long k = 1; k <= m - 3; k++) {||| 41 long long sh = k - s(i, 1, i, k), xi = k - s(j, 1, j, k);||| 42 ans = min(ans, f[k + 3] + (j - i - 1 - s(i + 1, k, j - 1, k)) - sh -||| 43 xi - s(i + 1, 1, j - 1, k));||| 44 }||| 45 }||| 46 }||| 47 cout << ans << endl;||| 48 for (long long i = 1; i <= n; i++) {||| 49 for (long long j = 1; j <= n; j++) sum[i][j] = 0;||| 50 }||| 51 }||| 52 return 0;||| 53 }||| 	49 for (long long j = 1; j <= m; j++) sum[i][j] = 0;
20	78	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 1e9;||| 4 const int N = 4e2 + 99;||| 5 const int A = 5;||| 6 const int B = 4;||| 7 int pref[N][N], t[N][N];||| 8 int n, m;||| 9 deque<pair<int, int>> q;||| 10 int ans = INF;||| 11 void dodaj(int i, int j, int z) {||| 12 int suma = (pref[j - 1][z - 1] - pref[i][z - 1]);||| 13 suma += (j - i - 1 -||| 14 (pref[j - 1][z] - pref[i][z] - pref[j - 1][z - 1] + pref[i][z - 1]));||| 15 suma += (z - 1 - (pref[j][z - 1] - pref[j - 1][z - 1]));||| 16 suma += (z - 1 - (pref[i][z - 1] - pref[i - 1][z - 1]));||| 17 while (!q.empty() && q.back().second >= suma) q.pop_back();||| 18 q.push_back({z, suma});||| 19 }||| 20 void usun(int z) {||| 21 while (!q.empty() && q.front().first < z + B) q.pop_front();||| 22 }||| 23 int licz(int i, int j, int z) {||| 24 int suma = q.front().second;||| 25 suma -= (pref[j - 1][z] - pref[i][z]);||| 26 suma -= (z - (pref[i][z] - pref[i - 1][z]));||| 27 suma -= (z - (pref[j][z] - pref[j - 1][z]));||| 28 suma += (j - i - 1 -||| 29 (pref[j - 1][z] - pref[i][z] - pref[j - 1][z - 1] + pref[i][z - 1]));||| 30 return suma;||| 31 }||| 32 void solve() {||| 33 cin >> n >> m;||| 34 for (int i = 1; i <= n; i++) {||| 35 for (int j = 1; j <= m; j++) {||| 36 char c;||| 37 cin >> c;||| 38 t[i][j] = (c == '1');||| 39 pref[i][j] =||| 40 pref[i - 1][j] + pref[i][j - 1] - pref[i - 1][j - 1] + t[i][j];||| 41 }||| 42 }||| 43 for (int i = 1; i <= n - A + 1; i++) {||| 44 for (int j = i + A - 1; j <= n; j++) {||| 45 q.clear();||| 46 for (int z = B; z <= m; z++) {||| 47 dodaj(i, j, z);||| 48 }||| 49 for (int z = 1; z <= m - B + 1; z++) {||| 50 ans = min(ans, licz(i, j, z));||| 51 usun(z);||| 52 }||| 53 }||| 54 }||| 55 cout << ans << ""\n"";||| 56 ans = INF;||| 57 }||| 58 int main() {||| 59 int Q;||| 60 cin >> Q;||| 61 while (Q--) solve();||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INf = 1e9;||| 4 const int N = 4e2 + 99;||| 5 const int A = 5;||| 6 const int B = 4;||| 7 int pref[N][N], t[N][N];||| 8 int n, m;||| 9 deque<pair<int, int>> q;||| 10 int ans = INf;||| 11 void dodaj(int i, int j, int z) {||| 12 int suma = (pref[j - 1][z - 1] - pref[i][z - 1]);||| 13 suma += (j - i - 1 -||| 14 (pref[j - 1][z] - pref[i][z] - pref[j - 1][z - 1] + pref[i][z - 1]));||| 15 suma += (z - 1 - (pref[j][z - 1] - pref[j - 1][z - 1]));||| 16 suma += (z - 1 - (pref[i][z - 1] - pref[i - 1][z - 1]));||| 17 while (!q.empty() && q.back().second >= suma) q.pop_back();||| 18 q.push_back({z, suma});||| 19 }||| 20 void usun(int z) {||| 21 while (!q.empty() && q.front().first < z + B) q.pop_front();||| 22 }||| 23 int licz(int i, int j, int z) {||| 24 int suma = q.front().second;||| 25 suma -= (pref[j - 1][z] - pref[i][z]);||| 26 suma -= (z - (pref[i][z] - pref[i - 1][z]));||| 27 suma -= (z - (pref[j][z] - pref[j - 1][z]));||| 28 suma += (j - i - 1 -||| 29 (pref[j - 1][z] - pref[i][z] - pref[j - 1][z - 1] + pref[i][z - 1]));||| 30 return suma;||| 31 }||| 32 void solve() {||| 33 cin >> n >> m;||| 34 for (int i = 1; i <= n; i++) {||| 35 for (int j = 1; j <= m; j++) {||| 36 char c;||| 37 cin >> c;||| 38 t[i][j] = (c == '1');||| 39 pref[i][j] =||| 40 pref[i - 1][j] + pref[i][j - 1] - pref[i - 1][j - 1] + t[i][j];||| 41 }||| 42 }||| 43 for (int i = 1; i <= n - A + 1; i++) {||| 44 for (int j = i + A - 1; j <= n; j++) {||| 45 q.clear();||| 46 for (int z = B; z <= m; z++) {||| 47 dodaj(i, j, z);||| 48 }||| 49 for (int z = 1; z <= m - B + 1; z++) {||| 50 ans = min(ans, licz(i, j, z));||| 51 usun(z);||| 52 }||| 53 }||| 54 }||| 55 cout << ans << ""\n"";||| 56 ans = 0;||| 57 }||| 58 int main() {||| 59 int Q;||| 60 cin >> Q;||| 61 while (Q--) solve();||| 62 }||| "	3 const int INF = 1e9;
21	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T1, typename T2>||| 4 void CMax(T1 &x, T2 y) {||| 5 if (y > x) x = y;||| 6 }||| 7 template <typename T1, typename T2>||| 8 void CMin(T1 &x, T2 y) {||| 9 if (y < x) x = y;||| 10 }||| 11 template <typename T>||| 12 void read(T &x) {||| 13 x = 0;||| 14 int op = 1;||| 15 char c = getchar();||| 16 while (!isdigit(c)) {||| 17 if (c == '-') op = -1;||| 18 c = getchar();||| 19 }||| 20 while (isdigit(c)) {||| 21 x = (x << 1) + (x << 3) + (c ^ 48);||| 22 c = getchar();||| 23 }||| 24 x *= op;||| 25 }||| 26 inline void swap(int &x, int &y) { x ^= y ^= x ^= y; }||| 27 inline int max(int x, int y) { return x > y ? x : y; }||| 28 inline int min(int x, int y) { return x < y ? x : y; }||| 29 const int MN = 105;||| 30 int n, m, k, P;||| 31 int dp[MN][MN][MN];||| 32 inline int Pls(int x, int y) {||| 33 x += y;||| 34 return x >= P ? x - P : x;||| 35 }||| 36 int C[MN][MN], fac[MN];||| 37 void process(int n = 100) {||| 38 fac[0] = 1;||| 39 for (int i = (1); i <= (n); ++i) fac[i] = 1ll * fac[i - 1] * i % P;||| 40 for (int i = 0; i <= n; ++i) {||| 41 C[i][0] = 1;||| 42 for (int j = (1); j <= (i); ++j)||| 43 C[i][j] = Pls(C[i - 1][j], C[i - 1][j - 1]);||| 44 }||| 45 }||| 46 int main() {||| 47 read(n);||| 48 read(m);||| 49 read(k);||| 50 read(P);||| 51 process();||| 52 for (int i = (0); i <= (n); ++i) dp[0][i][0] = 1;||| 53 for (int i = (1); i <= (n); ++i) dp[i][1][1] = dp[i][0][0] = fac[i];||| 54 for (int i = (1); i <= (n); ++i)||| 55 for (int j = (i + 1); j <= (n); ++j) dp[i][j][0] = fac[i];||| 56 if (n < m + k - 1) {||| 57 puts(""0"");||| 58 return 0;||| 59 }||| 60 for (int i = 2; i <= n; ++i)||| 61 for (int j = 2; j <= i; ++j) {||| 62 int upx = min(k, i - j + 1);||| 63 for (int x = 0; x <= upx; ++x) {||| 64 for (int l = 0; l < i; ++l) {||| 65 int res = 0;||| 66 for (int y = 0; y <= x; ++y)||| 67 res = Pls(res,||| 68 1ll * dp[l][j - 1][y] * dp[i - l - 1][j - 1][x - y] % P);||| 69 dp[i][j][x] = Pls(dp[i][j][x], 1ll * res * C[i - 1][l] % P);||| 70 }||| 71 }||| 72 }||| 73 printf(""%d\n"", dp[n][m][k]);||| 74 return 0;||| 75 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T1, typename T2>||| 4 void CMax(T1 &x, T2 y) {||| 5 if (y > x) x = y;||| 6 }||| 7 template <typename T1, typename T2>||| 8 void CMin(T1 &x, T2 y) {||| 9 if (y < x) x = y;||| 10 }||| 11 template <typename T>||| 12 void read(T &x) {||| 13 x = 0;||| 14 int op = 1;||| 15 char c = getchar();||| 16 while (!isdigit(c)) {||| 17 if (c == '-') op = -1;||| 18 c = getchar();||| 19 }||| 20 while (isdigit(c)) {||| 21 x = (x << 1) + (x << 3) + (c ^ 48);||| 22 c = getchar();||| 23 }||| 24 x *= op;||| 25 }||| 26 inline void swap(int &x, int &y) { x ^= y ^= x ^= y; }||| 27 inline int max(int x, int y) { return x > y ? x : y; }||| 28 inline int min(int x, int y) { return x < y ? x : y; }||| 29 const int MN = 105;||| 30 int n, m, k, P;||| 31 int dp[MN][MN][MN];||| 32 inline int Pls(int x, int y) {||| 33 x += y;||| 34 return x >= P ? x - P : x;||| 35 }||| 36 int C[MN][MN], fac[MN];||| 37 void process(int n = 100) {||| 38 fac[0] = 1;||| 39 for (int i = (1); i <= (n); ++i) fac[i] = 1ll * fac[i - 1] * i % P;||| 40 for (int i = 0; i <= n; ++i) {||| 41 C[i][0] = 1;||| 42 for (int j = (1); j <= (i); ++j)||| 43 C[i][j] = Pls(C[i - 1][j], C[i - 1][j - 1]);||| 44 }||| 45 }||| 46 int main() {||| 47 read(n);||| 48 read(m);||| 49 read(k);||| 50 read(P);||| 51 process();||| 52 for (int i = (0); i <= (n); ++i) dp[0][i][0] = 1;||| 53 for (int i = (1); i <= (n); ++i) dp[i][1][1] = dp[i][0][0] = fac[i];||| 54 for (int i = (1); i <= (n); ++i)||| 55 for (int j = (i + 1); j <= (n); ++j) dp[i][j][0] = fac[i];||| 56 if (n < m + k) {||| 57 puts(""0"");||| 58 return 0;||| 59 }||| 60 for (int i = 2; i <= n; ++i)||| 61 for (int j = 2; j <= i; ++j) {||| 62 int upx = min(k, i - j + 1);||| 63 for (int x = 0; x <= upx; ++x) {||| 64 for (int l = 0; l < i; ++l) {||| 65 int res = 0;||| 66 for (int y = 0; y <= x; ++y)||| 67 res = Pls(res,||| 68 1ll * dp[l][j - 1][y] * dp[i - l - 1][j - 1][x - y] % P);||| 69 dp[i][j][x] = Pls(dp[i][j][x], 1ll * res * C[i - 1][l] % P);||| 70 }||| 71 }||| 72 }||| 73 printf(""%d\n"", dp[n][m][k]);||| 74 return 0;||| 75 }||| "	56 if (n < m + k - 1) {
21	48	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100;||| 4 long long f[N + 5][N + 5][N + 5];||| 5 long long fac[N + 5], C[N + 5][N + 5];||| 6 long long mod;||| 7 long long dfs(int n, int m, int k) {||| 8 if (n == 0) return k == 0;||| 9 if (m == 1) return k == 1 ? fac[n] : 0;||| 10 if (n == 1) return k == 0;||| 11 if (2 * k > n + 1) return 0;||| 12 if (m > n) return k == 0 ? fac[n] : 0;||| 13 if (f[n][m][k] != -1) return f[n][m][k];||| 14 long long ans = 0;||| 15 for (int i = 0; i < n; i++)||| 16 for (int j = 0; j <= k; j++)||| 17 ans = (ans + C[n - 1][i] * dfs(i, m - 1, j) % mod *||| 18 dfs(n - i - 1, m - 1, k - j) % mod) %||| 19 mod;||| 20 return f[n][m][k] = ans;||| 21 }||| 22 int main() {||| 23 memset(f, 0xff, sizeof(f));||| 24 int n, m, k;||| 25 scanf(""%d%d%d%lld"", &n, &m, &k, &mod);||| 26 for (int i = 0; i <= N; i++) C[i][0] = C[i][i] = 1;||| 27 for (int i = 1; i <= N; i++)||| 28 for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 29 fac[0] = fac[1] = 1;||| 30 for (int i = 1; i <= N; i++) fac[i] = fac[i - 1] * i % mod;||| 31 printf(""%lld"", dfs(n, m, k));||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100;||| 4 long long f[N + 5][N + 5][N + 5];||| 5 long long fac[N + 5], C[N + 5][N + 5];||| 6 long long mod;||| 7 long long dfs(int n, int m, int k) {||| 8 if (n == 0) return k == 0;||| 9 if (m == 1) return k == 1 ? fac[n] : 0;||| 10 if (n == 1) return k == 0;||| 11 if (2 * k > n + 1) return 0;||| 12 if (m > n) return k == 0 ? fac[n] : 0;||| 13 if (f[n][m][k] != -1) return f[n][m][k];||| 14 long long ans = 0;||| 15 for (int i = 0; i < n; i++)||| 16 for (int j = 0; j <= k; j++)||| 17 ans = (ans + C[n - 1][i] * dfs(i, m - 1, j) % mod *||| 18 dfs(n - i - 1, m - 1, k - j) % mod);||| 19 return f[n][m][k] = ans;||| 20 }||| 21 int main() {||| 22 memset(f, 0xff, sizeof(f));||| 23 int n, m, k;||| 24 scanf(""%d%d%d%lld"", &n, &m, &k, &mod);||| 25 for (int i = 0; i <= N; i++) C[i][0] = C[i][i] = 1;||| 26 for (int i = 1; i <= N; i++)||| 27 for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 28 fac[0] = fac[1] = 1;||| 29 for (int i = 1; i <= N; i++) fac[i] = fac[i - 1] * i % mod;||| 30 printf(""%lld"", dfs(n, m, k));||| 31 return 0;||| 32 }||| "	18 dfs(n - i - 1, m - 1, k - j) % mod) %
21	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T1, typename T2>||| 4 void chkmin(T1 &x, T2 y) {||| 5 if (x > y) x = y;||| 6 }||| 7 template <typename T1, typename T2>||| 8 void chkmax(T1 &x, T2 y) {||| 9 if (x < y) x = y;||| 10 }||| 11 const int MOD = 1e9 + 7;||| 12 const int INF = 0x3f3f3f3f;||| 13 const long long INFll = 0x3f3f3f3f3f3f3f3fll;||| 14 const double EPS = 1e-6;||| 15 namespace fastio {||| 16 char rbuf[1 << 23], *p1 = rbuf, *p2 = rbuf, wbuf[1 << 23], *p3 = wbuf;||| 17 inline char getc() {||| 18 return p1 == p2 &&||| 19 (p2 = (p1 = rbuf) + fread(rbuf, 1, 1 << 23, stdin), p1 == p2)||| 20 ? -1||| 21 : *p1++;||| 22 }||| 23 inline void putc(char x) { (*p3++ = x); }||| 24 template <typename T>||| 25 void read(T &x) {||| 26 x = 0;||| 27 char c = getchar();||| 28 T neg = 0;||| 29 while (!isdigit(c)) neg |= (c == '-'), c = getchar();||| 30 while (isdigit(c)) x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();||| 31 if (neg) x = -x;||| 32 }||| 33 template <typename T>||| 34 void recursive_print(T x) {||| 35 if (!x) return;||| 36 recursive_print(x / 10);||| 37 putc(x % 10 + '0');||| 38 }||| 39 template <typename T>||| 40 void print(T x) {||| 41 if (!x) putc('0');||| 42 if (x < 0) putc('-'), x = -x;||| 43 recursive_print(x);||| 44 }||| 45 template <typename T>||| 46 void print(T x, char c) {||| 47 print(x);||| 48 putc(c);||| 49 }||| 50 void print_final() { fwrite(wbuf, 1, p3 - wbuf, stdout); }||| 51 }  // namespace fastio||| 52 template <typename Tv, int limN, int limM>||| 53 struct link_list {||| 54 int hd[limN + 5], nxt[limM + 5], item_n = 0;||| 55 Tv val[limM + 5];||| 56 void clear() {||| 57 memset(hd, 0, sizeof(hd));||| 58 item_n = 0;||| 59 }||| 60 void ins(int x, Tv y) {||| 61 val[++item_n] = y;||| 62 nxt[item_n] = hd[x];||| 63 hd[x] = item_n;||| 64 }||| 65 };||| 66 const int MAXN = 100;||| 67 int n, k, m, mod, fac[MAXN + 5], c[MAXN + 5][MAXN + 5];||| 68 int dp[MAXN + 5][MAXN + 5][MAXN + 5];||| 69 int calc(int n, int m, int k) {||| 70 if (!n) return (!k) ? 1 : 0;||| 71 if (!m) return (!k) ? fac[n] : 0;||| 72 if (m == 1) return (k == 1) ? fac[n] : 0;||| 73 if (~dp[n][m][k]) return dp[n][m][k];||| 74 if (m + k - 1 > n) return (!k) ? fac[n] : 0;||| 75 dp[n][m][k] = 0;||| 76 for (int i = 1; i <= n; i++)||| 77 for (int j = 0; j <= min(k, i - 1); j++)||| 78 dp[n][m][k] = (dp[n][m][k] + 1ll * calc(i - 1, m - 1, j) *||| 79 calc(n - i, m - 1, k - j) % mod *||| 80 c[n - 1][i - 1]) %||| 81 mod;||| 82 return dp[n][m][k];||| 83 }||| 84 int main() {||| 85 scanf(""%d%d%d%d"", &n, &m, &k, &mod);||| 86 for (int i = 0; i <= n; i++) {||| 87 c[i][0] = 1;||| 88 for (int j = 1; j <= i; j++)||| 89 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;||| 90 }||| 91 for (int i = (fac[0] = 1); i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 92 memset(dp, -1, sizeof(dp));||| 93 printf(""%d\n"", calc(n, m, k));||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T1, typename T2>||| 4 void chkmin(T1 &x, T2 y) {||| 5 if (x > y) x = y;||| 6 }||| 7 template <typename T1, typename T2>||| 8 void chkmax(T1 &x, T2 y) {||| 9 if (x < y) x = y;||| 10 }||| 11 const int MOD = 1e9 + 7;||| 12 const int INF = 0x3f3f3f3f;||| 13 const long long INFll = 0x3f3f3f3f3f3f3f3fll;||| 14 const double EPS = 1e-6;||| 15 namespace fastio {||| 16 char rbuf[1 << 23], *p1 = rbuf, *p2 = rbuf, wbuf[1 << 23], *p3 = wbuf;||| 17 inline char getc() {||| 18 return p1 == p2 &&||| 19 (p2 = (p1 = rbuf) + fread(rbuf, 1, 1 << 23, stdin), p1 == p2)||| 20 ? -1||| 21 : *p1++;||| 22 }||| 23 inline void putc(char x) { (*p3++ = x); }||| 24 template <typename T>||| 25 void read(T &x) {||| 26 x = 0;||| 27 char c = getchar();||| 28 T neg = 0;||| 29 while (!isdigit(c)) neg |= (c == '-'), c = getchar();||| 30 while (isdigit(c)) x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();||| 31 if (neg) x = -x;||| 32 }||| 33 template <typename T>||| 34 void recursive_print(T x) {||| 35 if (!x) return;||| 36 recursive_print(x / 10);||| 37 putc(x % 10 + '0');||| 38 }||| 39 template <typename T>||| 40 void print(T x) {||| 41 if (!x) putc('0');||| 42 if (x < 0) putc('-'), x = -x;||| 43 recursive_print(x);||| 44 }||| 45 template <typename T>||| 46 void print(T x, char c) {||| 47 print(x);||| 48 putc(c);||| 49 }||| 50 void print_final() { fwrite(wbuf, 1, p3 - wbuf, stdout); }||| 51 }  // namespace fastio||| 52 template <typename Tv, int limN, int limM>||| 53 struct link_list {||| 54 int hd[limN + 5], nxt[limM + 5], item_n = 0;||| 55 Tv val[limM + 5];||| 56 void clear() {||| 57 memset(hd, 0, sizeof(hd));||| 58 item_n = 0;||| 59 }||| 60 void ins(int x, Tv y) {||| 61 val[++item_n] = y;||| 62 nxt[item_n] = hd[x];||| 63 hd[x] = item_n;||| 64 }||| 65 };||| 66 const int MAXN = 100;||| 67 int n, k, m, mod, fac[MAXN + 5], c[MAXN + 5][MAXN + 5];||| 68 int dp[MAXN + 5][MAXN + 5][MAXN + 5];||| 69 int calc(int n, int m, int k) {||| 70 if (!n) return (!k) ? 1 : 0;||| 71 if (!m) return (!k) ? fac[n] : 0;||| 72 if (m == 1) return (k == 1) ? fac[n] : 0;||| 73 if (~dp[n][m][k]) return dp[n][m][k];||| 74 if (m + k - 1 >= n) return (!k) ? fac[n] : 0;||| 75 dp[n][m][k] = 0;||| 76 for (int i = 1; i <= n; i++)||| 77 for (int j = 0; j <= min(k, i - 1); j++)||| 78 dp[n][m][k] = (dp[n][m][k] + 1ll * calc(i - 1, m - 1, j) *||| 79 calc(n - i, m - 1, k - j) % mod *||| 80 c[n - 1][i - 1]) %||| 81 mod;||| 82 return dp[n][m][k];||| 83 }||| 84 int main() {||| 85 scanf(""%d%d%d%d"", &n, &m, &k, &mod);||| 86 for (int i = 0; i <= n; i++) {||| 87 c[i][0] = 1;||| 88 for (int j = 1; j <= i; j++)||| 89 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;||| 90 }||| 91 for (int i = (fac[0] = 1); i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 92 memset(dp, -1, sizeof(dp));||| 93 printf(""%d\n"", calc(n, m, k));||| 94 return 0;||| 95 }||| "	74 if (m + k - 1 > n) return (!k) ? fac[n] : 0;
21	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 103;||| 4 int n, P;||| 5 int f[N][N][N], fc[N], C[N][N];||| 6 inline int add(const int &a, const int &b) {||| 7 return a + b >= P ? a + b - P : a + b;||| 8 }||| 9 int cl(int i, int j, int k) {||| 10 if (i == 0) return k == 0;||| 11 if (j == 0) return k == 1 ? fc[i] : 0;||| 12 if (i <= j) return k == 0 ? fc[i] : 0;||| 13 if (j + k > i) return 0;||| 14 register int &g = f[i][j][k];||| 15 if (g != -1) return g;||| 16 g = 0;||| 17 for (register int a = 0; a < i; a++) {||| 18 register int h = 0;||| 19 for (register int b = max(0, k + a - i + 1); b <= k && b <= a; b++)||| 20 h = (h + 1ll * cl(i - a - 1, j - 1, k - b) * cl(a, j - 1, b)) % P;||| 21 g = (g + 1ll * h * C[i - 1][a]) % P;||| 22 }||| 23 return g;||| 24 }||| 25 int main() {||| 26 int m, k;||| 27 scanf(""%d%d%d%d"", &n, &m, &k, &P);||| 28 memset(f, -1, sizeof f);||| 29 fc[0] = 1;||| 30 for (register int i = 1; i <= n; i++) fc[i] = 1ll * fc[i - 1] * i % P;||| 31 for (register int i = 0; i <= n; i++)||| 32 for (register int j = 0; j <= i; j++) {||| 33 if (j == 0)||| 34 C[i][j] = 1;||| 35 else||| 36 C[i][j] = add(C[i - 1][j], C[i - 1][j - 1]);||| 37 }||| 38 printf(""%d"", cl(n, m - 1, k));||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 103;||| 4 int n, P;||| 5 int f[N][N][N], fc[N], C[N][N];||| 6 inline int add(const int &a, const int &b) {||| 7 return a + b >= P ? a + b - P : a + b;||| 8 }||| 9 int cl(int i, int j, int k) {||| 10 if (i == 0) return k == 0;||| 11 if (j == 0) return k == 1 ? fc[i] : 0;||| 12 if (i <= j) return k == 0 ? fc[i] : 0;||| 13 if (j + k > i) return 0;||| 14 register int &g = f[i][j][k];||| 15 if (g != -1) return g;||| 16 g = 0;||| 17 for (register int a = 0; a < i; a++) {||| 18 register int h = 0;||| 19 for (register int b = max(0, k + a - i + 1); b <= k && b <= a; b++)||| 20 h = (h + 1ll * cl(i - a - 1, j - 1, k - b) * cl(a, j - 1, b)) % P;||| 21 g = (g + 1ll * h * C[i - 1][a]) % P;||| 22 }||| 23 return g;||| 24 }||| 25 int main() {||| 26 int m, k;||| 27 scanf(""%d%d%d%d"", &n, &m, &k, &P);||| 28 memset(f, -1, sizeof f);||| 29 fc[0] = 1;||| 30 for (register int i = 1; i <= n; i++) fc[i] = 1ll * fc[i - 1] * i % P;||| 31 for (register int i = 0; i <= n; i++)||| 32 for (register int j = 0; j <= i; j++) {||| 33 if (j == 0)||| 34 C[i][j] = 1;||| 35 else||| 36 C[i][j] = add(C[i - 1][j], C[i - 1][j - 1]);||| 37 }||| 38 printf(""%d"", cl(n, m + 1, k));||| 39 return 0;||| 40 }||| "	"38 printf(""%d"", cl(n, m - 1, k));"
21	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100 + 3;||| 4 int mod;||| 5 int bigmod(int a, int b) {||| 6 int ans = 1;||| 7 while (b > 0) {||| 8 if (b & 1) {||| 9 ans = (ans * 1ll * a) % mod;||| 10 }||| 11 a = (a * 1ll * a) % mod;||| 12 b >>= 1;||| 13 }||| 14 return ans;||| 15 }||| 16 inline int add(int x, int y) { return (x + y >= mod ? x + y - mod : x + y); }||| 17 inline int sub(int x, int y) { return (x - y < 0 ? x - y + mod : x - y); }||| 18 inline int gun(int x, int y) { return ((x * 1ll * y) % mod); }||| 19 inline int vag(int x, int y) { return (x * 1ll * bigmod(y, mod - 2)) % mod; }||| 20 int ncr[N][N];||| 21 void NCR() {||| 22 ncr[0][0] = 1;||| 23 for (int i = 1; i < N; i++) {||| 24 for (int j = 0; j < N; j++) {||| 25 if (j > i)||| 26 ncr[i][j] = 0;||| 27 else if (j == i || j == 0)||| 28 ncr[i][j] = 1;||| 29 else {||| 30 ncr[i][j] = add(ncr[i - 1][j], ncr[i - 1][j - 1]);||| 31 }||| 32 }||| 33 }||| 34 }||| 35 int dp[N][N][N];||| 36 int n, m, k;||| 37 int32_t main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(nullptr);||| 40 cin >> n >> m >> k >> mod;||| 41 if (mod == 1 || m + k > n + 1) {||| 42 cout << ""0\n"";||| 43 return 0;||| 44 }||| 45 for (int i = 0; i < N; i++) {||| 46 for (int j = 0; j < N; j++) {||| 47 dp[0][i][j] = 1;||| 48 }||| 49 }||| 50 NCR();||| 51 for (int len = 1; len <= n; len++) {||| 52 for (int maxi = n - len; maxi >= 0; maxi--) {||| 53 for (int koto = 0; koto <= len; koto++) {||| 54 int ans = 0;||| 55 int tkoto = koto;||| 56 if (maxi + 1 == m) {||| 57 tkoto--;||| 58 }||| 59 if (tkoto < 0) {||| 60 dp[len][maxi][koto] = 0;||| 61 continue;||| 62 }||| 63 for (int i = 0; i < len; i++) {||| 64 int dan = len - i - 1;||| 65 for (int j = min(i, tkoto); j >= 0; j--) {||| 66 if (tkoto - j > dan) break;||| 67 int t3 = gun(ncr[len - 1][i], dp[i][maxi + 1][j]);||| 68 int t2 = dp[dan][maxi + 1][tkoto - j];||| 69 ans = add(ans, gun(t2, t3));||| 70 }||| 71 }||| 72 dp[len][maxi][koto] = ans;||| 73 }||| 74 }||| 75 }||| 76 cout << dp[n][0][k];||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100 + 3;||| 4 int mod;||| 5 int bigmod(int a, int b) {||| 6 int ans = 1;||| 7 while (b > 0) {||| 8 if (b & 1) {||| 9 ans = (ans * 1ll * a) % mod;||| 10 }||| 11 a = (a * 1ll * a) % mod;||| 12 b >>= 1;||| 13 }||| 14 return ans;||| 15 }||| 16 inline int add(int x, int y) { return (x + y >= mod ? x + y - mod : x + y); }||| 17 inline int sub(int x, int y) { return (x - y < 0 ? x - y + mod : x - y); }||| 18 inline int gun(int x, int y) { return ((x * 1ll * y) % mod); }||| 19 inline int vag(int x, int y) { return (x * 1ll * bigmod(y, mod - 2)) % mod; }||| 20 int ncr[N][N];||| 21 void NCR() {||| 22 ncr[0][0] = 1;||| 23 for (int i = 1; i < N; i++) {||| 24 for (int j = 0; j < N; j++) {||| 25 if (j > i)||| 26 ncr[i][j] = 0;||| 27 else if (j == i || j == 0)||| 28 ncr[i][j] = 1;||| 29 else {||| 30 ncr[i][j] = add(ncr[i - 1][j], ncr[i - 1][j - 1]);||| 31 }||| 32 }||| 33 }||| 34 }||| 35 int dp[N][N][N];||| 36 int n, m, k;||| 37 int32_t main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(nullptr);||| 40 cin >> n >> m >> k >> mod;||| 41 if (mod == 1 || m + k > n) {||| 42 cout << ""0\n"";||| 43 return 0;||| 44 }||| 45 for (int i = 0; i < N; i++) {||| 46 for (int j = 0; j < N; j++) {||| 47 dp[0][i][j] = 1;||| 48 }||| 49 }||| 50 NCR();||| 51 for (int len = 1; len <= n; len++) {||| 52 for (int maxi = n - len; maxi >= 0; maxi--) {||| 53 for (int koto = 0; koto <= len; koto++) {||| 54 int ans = 0;||| 55 int tkoto = koto;||| 56 if (maxi + 1 == m) {||| 57 tkoto--;||| 58 }||| 59 if (tkoto < 0) {||| 60 dp[len][maxi][koto] = 0;||| 61 continue;||| 62 }||| 63 for (int i = 0; i < len; i++) {||| 64 int dan = len - i - 1;||| 65 for (int j = min(i, tkoto); j >= 0; j--) {||| 66 if (tkoto - j > dan) break;||| 67 int t3 = gun(ncr[len - 1][i], dp[i][maxi + 1][j]);||| 68 int t2 = dp[dan][maxi + 1][tkoto - j];||| 69 ans = add(ans, gun(t2, t3));||| 70 }||| 71 }||| 72 dp[len][maxi][koto] = ans;||| 73 }||| 74 }||| 75 }||| 76 cout << dp[n][0][k];||| 77 return 0;||| 78 }||| "	41 if (mod == 1 || m + k > n + 1) {
21	10	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 102;||| 4 const int LINMAX = NMAX * NMAX * NMAX;||| 5 int N, M, K, P;||| 6 int memo[LINMAX + 5];||| 7 int fact[NMAX + 2], c[NMAX + 2][NMAX + 2];||| 8 int comb(int k, int n) { return c[n][k]; }||| 9 int index(int a, int b, int c) { return a * 101 * 101 + b * 101 + c; }||| 10 int ways(int len, int levels_deep, int count) {||| 11 int ind = index(len, levels_deep, count);||| 12 if (memo[ind] != -1) {||| 13 return memo[ind];||| 14 }||| 15 if (count > len || (len > 1 && count > len / 2 + 1)) {||| 16 return memo[ind] = 0;||| 17 }||| 18 if (len == 0) {||| 19 if (count == 0) {||| 20 return memo[ind] = 1;||| 21 } else {||| 22 return memo[ind] = 0;||| 23 }||| 24 }||| 25 if (levels_deep == 1) {||| 26 if (count <= 0 || count >= 2) {||| 27 return memo[ind] = 0;||| 28 }||| 29 return memo[ind] = fact[len];||| 30 }||| 31 int res = 0;||| 32 res = (res + ways(len - 1, levels_deep - 1, count)) % P;||| 33 for (int pos_me = 2; pos_me < len; pos_me++) {||| 34 for (int c1 = 0; c1 <= count; c1++) {||| 35 res = (res + 1LL * comb(pos_me - 1, len - 1) *||| 36 ways(pos_me - 1, levels_deep - 1, c1) % P *||| 37 ways(len - pos_me, levels_deep - 1, count - c1)) %||| 38 P;||| 39 }||| 40 }||| 41 if (len != 1) {||| 42 res = (res + ways(len - 1, levels_deep - 1, count)) % P;||| 43 }||| 44 return memo[ind] = res;||| 45 }||| 46 int main() {||| 47 cin >> N >> M >> K >> P;||| 48 fact[0] = 1;||| 49 for (int i = 1; i <= N; i++) {||| 50 fact[i] = (1LL * i * fact[i - 1]) % P;||| 51 }||| 52 c[0][0] = 1;||| 53 for (int i = 1; i <= N; i++) {||| 54 c[i][0] = c[i][i] = 1;||| 55 for (int j = 1; j < i; j++) {||| 56 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % P;||| 57 }||| 58 }||| 59 for (int i = 0; i <= N; i++) {||| 60 for (int j = 0; j <= N; j++) {||| 61 for (int k = 0; k <= N; k++) {||| 62 memo[index(i, j, k)] = -1;||| 63 }||| 64 }||| 65 }||| 66 cout << ways(N, M, K) << '\n';||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 102;||| 4 const int LINMAX = NMAX * NMAX * NMAX;||| 5 int N, M, K, P;||| 6 int memo[LINMAX + 5];||| 7 int fact[NMAX + 2], c[NMAX + 2][NMAX + 2];||| 8 int comb(int k, int n) { return c[n][k]; }||| 9 int index(int a, int b, int c) { return a * 101 * 101 + b * 101 + c; }||| 10 int ways(int len, int levels_deep, int count) {||| 11 int ind = index(len, levels_deep, count);||| 12 if (memo[ind] != -1) {||| 13 return memo[ind];||| 14 }||| 15 if (count > len || (len > 1 && count > len / 2)) {||| 16 return memo[ind] = 0;||| 17 }||| 18 if (len == 0) {||| 19 if (count == 0) {||| 20 return memo[ind] = 1;||| 21 } else {||| 22 return memo[ind] = 0;||| 23 }||| 24 }||| 25 if (levels_deep == 1) {||| 26 if (count <= 0 || count >= 2) {||| 27 return memo[ind] = 0;||| 28 }||| 29 return memo[ind] = fact[len];||| 30 }||| 31 int res = 0;||| 32 res = (res + ways(len - 1, levels_deep - 1, count)) % P;||| 33 for (int pos_me = 2; pos_me < len; pos_me++) {||| 34 for (int c1 = 0; c1 <= count; c1++) {||| 35 res = (res + 1LL * comb(pos_me - 1, len - 1) *||| 36 ways(pos_me - 1, levels_deep - 1, c1) % P *||| 37 ways(len - pos_me, levels_deep - 1, count - c1)) %||| 38 P;||| 39 }||| 40 }||| 41 if (len != 1) {||| 42 res = (res + ways(len - 1, levels_deep - 1, count)) % P;||| 43 }||| 44 return memo[ind] = res;||| 45 }||| 46 int main() {||| 47 cin >> N >> M >> K >> P;||| 48 fact[0] = 1;||| 49 for (int i = 1; i <= N; i++) {||| 50 fact[i] = (1LL * i * fact[i - 1]) % P;||| 51 }||| 52 c[0][0] = 1;||| 53 for (int i = 1; i <= N; i++) {||| 54 c[i][0] = c[i][i] = 1;||| 55 for (int j = 1; j < i; j++) {||| 56 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % P;||| 57 }||| 58 }||| 59 for (int i = 0; i <= N; i++) {||| 60 for (int j = 0; j <= N; j++) {||| 61 for (int k = 0; k <= N; k++) {||| 62 memo[index(i, j, k)] = -1;||| 63 }||| 64 }||| 65 }||| 66 cout << ways(N, M, K) << '\n';||| 67 return 0;||| 68 }||| 	15 if (count > len || (len > 1 && count > len / 2 + 1)) {
21	78	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void Read(T &x) {||| 5 x = 0;||| 6 char c;||| 7 long long dau = 1;||| 8 while (!isdigit(c = getchar()))||| 9 if (c == '-') dau = -1;||| 10 do {||| 11 x = x * 10 + c - '0';||| 12 } while (isdigit(c = getchar()));||| 13 x *= dau;||| 14 }||| 15 long long read() {||| 16 long long tmp;||| 17 cin >> tmp;||| 18 return tmp;||| 19 }||| 20 void giuncute() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 cout.tie(0);||| 24 }||| 25 void OF() {||| 26 if (fopen(""f""||| 27 "".inp"",||| 28 ""r"")) {||| 29 freopen(||| 30 ""f""||| 31 "".inp"",||| 32 ""r"", stdin);||| 33 freopen(||| 34 ""f""||| 35 "".out"",||| 36 ""w"", stdout);||| 37 } else if (fopen(""f""||| 38 "".in"",||| 39 ""r"")) {||| 40 freopen(||| 41 ""f""||| 42 "".in"",||| 43 ""r"", stdin);||| 44 freopen(||| 45 ""f""||| 46 "".out"",||| 47 ""w"", stdout);||| 48 }||| 49 }||| 50 const long long mxn = 107;||| 51 long long dp[mxn][mxn][mxn], n, m, k, MOD, cnk[mxn][mxn] = {{0}}, p[mxn];||| 52 inline long long sol(long long len, long long ma, long long cnt) {||| 53 if (cnt > len || cnt < 0) return 0;||| 54 if (ma < 0 || ma > len) return (cnt ? 0 : p[len]);||| 55 long long &cur = dp[len][ma][cnt];||| 56 if (!len) return cur = !cnt;||| 57 if (len == 1) return cur = (ma == 1 ? (cnt == 1) : (cnt == 0));||| 58 if (~cur) return cur;||| 59 cur = 0;||| 60 for (long long i = 1; i <= (len + 1) / 2; ++i) {||| 61 for (long long ncnt = 0; ncnt <= min(i - 1, cnt); ++ncnt)||| 62 (cur += (1 + (i + i <= len)) * cnk[len - 1][i - 1] *||| 63 ((sol(i - 1, ma - 1, ncnt) *||| 64 sol(len - i, ma - 1, cnt - ncnt - (ma == 1))) %||| 65 MOD)) %= MOD;||| 66 }||| 67 return cur;||| 68 }||| 69 int main() {||| 70 giuncute();||| 71 cin >> n >> m >> k >> MOD;||| 72 p[0] = 1;||| 73 for (long long i = 1; i <= n; ++i) p[i] = (p[i - 1] * i) % MOD;||| 74 for (long long i = 0; i <= n; ++i) cnk[i][0] = 1;||| 75 for (long long i = 1; i <= n; ++i)||| 76 for (long long j = 1; j <= i; ++j)||| 77 cnk[i][j] = (cnk[i - 1][j] + cnk[i - 1][j - 1]) % MOD;||| 78 memset(dp, -1, sizeof dp);||| 79 cout << sol(n, m, k);||| 80 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void Read(T &x) {||| 5 x = 0;||| 6 char c;||| 7 long long dau = 1;||| 8 while (!isdigit(c = getchar()))||| 9 if (c == '-') dau = -1;||| 10 do {||| 11 x = x * 10 + c - '0';||| 12 } while (isdigit(c = getchar()));||| 13 x *= dau;||| 14 }||| 15 long long read() {||| 16 long long tmp;||| 17 cin >> tmp;||| 18 return tmp;||| 19 }||| 20 void giuncute() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 cout.tie(0);||| 24 }||| 25 void OF() {||| 26 if (fopen(""f""||| 27 "".inp"",||| 28 ""r"")) {||| 29 freopen(||| 30 ""f""||| 31 "".inp"",||| 32 ""r"", stdin);||| 33 freopen(||| 34 ""f""||| 35 "".out"",||| 36 ""w"", stdout);||| 37 } else if (fopen(""f""||| 38 "".in"",||| 39 ""r"")) {||| 40 freopen(||| 41 ""f""||| 42 "".in"",||| 43 ""r"", stdin);||| 44 freopen(||| 45 ""f""||| 46 "".out"",||| 47 ""w"", stdout);||| 48 }||| 49 }||| 50 const long long mxn = 107;||| 51 long long dp[mxn][mxn][mxn], n, m, k, MOD, cnk[mxn][mxn] = {{0}}, p[mxn];||| 52 inline long long sol(long long len, long long ma, long long cnt) {||| 53 if (cnt > len || cnt < 0) return 0;||| 54 if (ma < 0 || ma > len) return (cnt ? 0 : p[len]);||| 55 long long &cur = dp[len][ma][cnt];||| 56 if (!len) return cur = !cnt;||| 57 if (len == 1) return cur = (ma == 1 ? (cnt == 1) : (cnt == 0));||| 58 if (~cur) return cur;||| 59 cur = 0;||| 60 for (long long i = 1; i <= (len + 1) / 2; ++i) {||| 61 for (long long ncnt = 0; ncnt <= min(i - 1, cnt); ++ncnt)||| 62 (cur += (1 + (i + i <= n)) * cnk[len - 1][i - 1] *||| 63 ((sol(i - 1, ma - 1, ncnt) *||| 64 sol(len - i, ma - 1, cnt - ncnt - (ma == 1))) %||| 65 MOD)) %= MOD;||| 66 }||| 67 return cur;||| 68 }||| 69 int main() {||| 70 giuncute();||| 71 cin >> n >> m >> k >> MOD;||| 72 p[0] = 1;||| 73 for (long long i = 1; i <= n; ++i) p[i] = (p[i - 1] * i) % MOD;||| 74 for (long long i = 0; i <= n; ++i) cnk[i][0] = 1;||| 75 for (long long i = 1; i <= n; ++i)||| 76 for (long long j = 1; j <= i; ++j)||| 77 cnk[i][j] = (cnk[i - 1][j] + cnk[i - 1][j - 1]) % MOD;||| 78 memset(dp, -1, sizeof dp);||| 79 cout << sol(n, m, k);||| 80 }||| "	62 (cur += (1 + (i + i <= len)) * cnk[len - 1][i - 1] *
21	54	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e2 + 1e1 + 7;||| 4 long long n, m, k, P;||| 5 long long f[N][N][N], C[N][N];||| 6 void inc(long long &a, long long b) {||| 7 a += b;||| 8 a >= P ? a -= P : 0;||| 9 }||| 10 signed main() {||| 11 scanf(""%lld%lld%lld%lld"", &n, &m, &k, &P);||| 12 C[0][0] = 1;||| 13 for (long long i = 1; i <= n; i++) {||| 14 C[i][0] = 1;||| 15 for (long long j = 1; j <= i; j++)||| 16 C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % P;||| 17 }||| 18 for (long long i = 0; i <= n + 1; i++) f[0][0][i] = 1;||| 19 for (long long d = n + 1; d >= 2; d--)||| 20 for (long long l = 0; l < n; l++)||| 21 for (long long lj = max(0ll, k + l - n); lj <= min(l, k); lj++)||| 22 if (f[l][lj][d])||| 23 for (long long r = 0; r < n - l; r++)||| 24 for (long long rj = max(0ll, k + l + r - n - lj);||| 25 rj <= min(r, k - ((d - 1) == m) - lj); rj++)||| 26 inc(f[l + r + 1][lj + rj + ((d - 1) == m)][d - 1],||| 27 C[l + r][l] * f[l][lj][d] % P * f[r][rj][d] % P);||| 28 printf(""%lld\n"", f[n][k][1]);||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e2 + 1e1 + 7;||| 4 long long n, m, k, P;||| 5 long long f[N][N][N], C[N][N];||| 6 void inc(long long &a, long long b) {||| 7 a += b;||| 8 a >= P ? a -= P : 0;||| 9 }||| 10 signed main() {||| 11 scanf(""%lld%lld%lld%lld"", &n, &m, &k, &P);||| 12 C[0][0] = 1;||| 13 for (long long i = 1; i <= n; i++) {||| 14 C[i][0] = 1;||| 15 for (long long j = 1; j <= i; j++)||| 16 C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % P;||| 17 }||| 18 for (long long i = 0; i <= n + 1; i++) f[0][0][i] = 1;||| 19 for (long long d = n - m + 1; d >= 2; d--)||| 20 for (long long l = 0; l < n; l++)||| 21 for (long long lj = max(0ll, k + l - n); lj <= min(l, k); lj++)||| 22 if (f[l][lj][d])||| 23 for (long long r = 0; r < n - l; r++)||| 24 for (long long rj = max(0ll, k + l + r - n - lj);||| 25 rj <= min(r, k - ((d - 1) == m) - lj); rj++)||| 26 inc(f[l + r + 1][lj + rj + ((d - 1) == m)][d - 1],||| 27 C[l + r][l] * f[l][lj][d] % P * f[r][rj][d] % P);||| 28 printf(""%lld\n"", f[n][k][1]);||| 29 }||| "	19 for (long long d = n + 1; d >= 2; d--)
22	53	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int SQRT = 450;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<int> x(n), y(n);||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> x[i] >> y[i];||| 12 }||| 13 vector<int> op(m), k(m);||| 14 for (int i = 0; i < m; i++) {||| 15 cin >> op[i] >> k[i];||| 16 k[i]--;||| 17 }||| 18 vector<vector<int>> id(n);||| 19 for (int i = 0; i < m; i++) {||| 20 id[k[i]].push_back(i);||| 21 }||| 22 vector<int> imos(m + 1, 0);||| 23 vector<vector<int>> imos2(SQRT, vector<int>(m + 1, 0));||| 24 for (int i = 0; i < n; i++) {||| 25 if (id[i].size() % 2 == 1) {||| 26 id[i].push_back(m);||| 27 }||| 28 int cnt = id[i].size();||| 29 for (int j = 0; j < cnt; j += 2) {||| 30 int L = id[i][j];||| 31 int R = id[i][j + 1];||| 32 if (x[i] + y[i] >= SQRT) {||| 33 while (true) {||| 34 if (L + x[i] > R) {||| 35 break;||| 36 } else if (L + x[i] + y[i] > R) {||| 37 imos[L + x[i]]++;||| 38 imos[R]--;||| 39 break;||| 40 } else {||| 41 imos[L + x[i]]++;||| 42 imos[L + x[i] + y[i]]--;||| 43 L += x[i] + y[i];||| 44 }||| 45 }||| 46 } else if (x[i] <= m) {||| 47 int c = x[i] + y[i];||| 48 if (L + x[i] <= m) {||| 49 imos2[c][L + x[i]]++;||| 50 }||| 51 if (L + x[i] + y[i] <= m) {||| 52 imos2[c][L + x[i] + y[i]]--;||| 53 }||| 54 int r = (R - L) % c;||| 55 int R2 = R - r;||| 56 if (r <= x[i]) {||| 57 if (R2 + x[i] <= m) {||| 58 imos2[c][R2 + x[i]]--;||| 59 }||| 60 if (R2 + c <= m) {||| 61 imos2[c][R2 + c]++;||| 62 }||| 63 } else {||| 64 imos2[c][R]--;||| 65 if (R2 + c <= m) {||| 66 imos2[c][R2 + c]++;||| 67 }||| 68 if (R2 + c + x[i] <= m) {||| 69 imos2[c][R2 + c + x[i]]--;||| 70 }||| 71 if (R + c <= m) {||| 72 imos2[c][R + c]++;||| 73 }||| 74 }||| 75 }||| 76 }||| 77 }||| 78 for (int i = 0; i < m; i++) {||| 79 imos[i + 1] += imos[i];||| 80 }||| 81 for (int i = 2; i < SQRT; i++) {||| 82 for (int j = 0; j < m; j++) {||| 83 imos2[i][j + 1] += imos2[i][j];||| 84 }||| 85 for (int j = 0; j <= m - i; j++) {||| 86 imos2[i][j + i] += imos2[i][j];||| 87 }||| 88 }||| 89 for (int i = 0; i < m; i++) {||| 90 int ans = imos[i];||| 91 for (int j = 2; j < SQRT; j++) {||| 92 ans += imos2[j][i];||| 93 }||| 94 cout << ans << ""\n"";||| 95 }||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int SQRT = 450;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<int> x(n), y(n);||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> x[i] >> y[i];||| 12 }||| 13 vector<int> op(m), k(m);||| 14 for (int i = 0; i < m; i++) {||| 15 cin >> op[i] >> k[i];||| 16 k[i]--;||| 17 }||| 18 vector<vector<int>> id(n);||| 19 for (int i = 0; i < m; i++) {||| 20 id[k[i]].push_back(i);||| 21 }||| 22 vector<int> imos(m + 1, 0);||| 23 vector<vector<int>> imos2(SQRT, vector<int>(m + 1, 0));||| 24 for (int i = 0; i < n; i++) {||| 25 if (id[i].size() % 2 == 1) {||| 26 id[i].push_back(m);||| 27 }||| 28 int cnt = id[i].size();||| 29 for (int j = 0; j < cnt; j += 2) {||| 30 int L = id[i][j];||| 31 int R = id[i][j + 1];||| 32 if (x[i] + y[i] >= SQRT) {||| 33 while (true) {||| 34 if (L + x[i] > R) {||| 35 break;||| 36 } else if (L + x[i] + y[i] > R) {||| 37 imos[L + x[i]]++;||| 38 imos[R]--;||| 39 break;||| 40 } else {||| 41 imos[L + x[i]]++;||| 42 imos[L + x[i] + y[i]]--;||| 43 L += x[i] + y[i];||| 44 }||| 45 }||| 46 } else if (x[i] <= m) {||| 47 int c = x[i] + y[i];||| 48 if (L + x[i] <= m) {||| 49 imos2[c][L + x[i]]++;||| 50 }||| 51 if (L + x[i] + y[i] <= m) {||| 52 imos2[c][L + x[i] + y[i]]--;||| 53 }||| 54 int r = (R - L) % c;||| 55 int R2 = R - r;||| 56 if (r <= x[i]) {||| 57 if (R2 + x[i] <= m) {||| 58 imos2[c][R2 + x[i]]--;||| 59 }||| 60 if (R2 + c <= m) {||| 61 imos2[c][R2 + c]++;||| 62 }||| 63 } else {||| 64 imos2[c][R]--;||| 65 if (R2 + c <= m) {||| 66 imos2[c][R2 + c]++;||| 67 }||| 68 if (R2 + c + x[i] <= m) {||| 69 imos2[c][R2 + c + x[i]]--;||| 70 }||| 71 if (R + c <= m) {||| 72 imos2[c][R + c]--;||| 73 }||| 74 }||| 75 }||| 76 }||| 77 }||| 78 for (int i = 0; i < m; i++) {||| 79 imos[i + 1] += imos[i];||| 80 }||| 81 for (int i = 2; i < SQRT; i++) {||| 82 for (int j = 0; j < m; j++) {||| 83 imos2[i][j + 1] += imos2[i][j];||| 84 }||| 85 for (int j = 0; j <= m - i; j++) {||| 86 imos2[i][j + i] += imos2[i][j];||| 87 }||| 88 }||| 89 for (int i = 0; i < m; i++) {||| 90 int ans = imos[i];||| 91 for (int j = 2; j < SQRT; j++) {||| 92 ans += imos2[j][i];||| 93 }||| 94 cout << ans << ""\n"";||| 95 }||| 96 }||| "	72 imos2[c][R + c]++;
22	134	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err(istream_iterator<string> it) { cout << endl; }||| 4 template <typename T, typename... Args>||| 5 void err(istream_iterator<string> it, T a, Args... args) {||| 6 cerr << *it << "" = "" << a << "" "";||| 7 err(++it, args...);||| 8 }||| 9 template <typename T>||| 10 inline void read(T& x) {||| 11 x = 0;||| 12 T f = 1;||| 13 char ch = getchar();||| 14 while (!isdigit(ch)) f = (ch == '-') ? -1 : 1, ch = getchar();||| 15 while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();||| 16 x *= f;||| 17 }||| 18 template <typename T, typename... Args>||| 19 inline void read(T& x, Args&... args) {||| 20 read(x), read(args...);||| 21 }||| 22 template <typename T>||| 23 inline void write(T x) {||| 24 if (x < 0) putchar('-'), x = -x;||| 25 if (x >= 10) write(x / 10);||| 26 putchar(x % 10 + '0');||| 27 }||| 28 template <typename T, typename... Args>||| 29 inline void write(T& x, Args&... args) {||| 30 write(x), putchar('\n'), write(args...);||| 31 }||| 32 constexpr int MAXN = 2e5 + 5, MOD = 1e9 + 7;||| 33 int n, m, x[MAXN], y[MAXN], B, pref, a[MAXN], in[MAXN];||| 34 int cnt[256][256];||| 35 void block_update(int s, int k, int tag) {||| 36 int b = x[k] + y[k];||| 37 for (int i = max(0, s % b - y[k]); i < s % b; i++) cnt[b][i] += tag;||| 38 for (int i = s % b + x[k]; i < b; i++) cnt[b][i] += tag;||| 39 }||| 40 int block_query(int t) {||| 41 int res = 0;||| 42 for (int i = 2; i <= B; i++) res += cnt[i][t % i];||| 43 return res;||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 47 ;||| 48 cin >> n >> m;||| 49 B = min(255LL, llround(sqrt(m)) + 1);||| 50 for (int i = 1; i <= n; i++) cin >> x[i] >> y[i];||| 51 for (int t = 1; t <= m; t++) {||| 52 int op, k;||| 53 cin >> op >> k;||| 54 if (op == 1) {||| 55 if (x[k] + y[k] >= B) {||| 56 for (int cur = t + x[k]; cur <= m; cur += x[k] + y[k]) {||| 57 a[cur]++;||| 58 if (cur + y[k] <= m) a[cur + y[k]]--;||| 59 }||| 60 } else||| 61 block_update(t, k, 1);||| 62 in[k] = t;||| 63 } else {||| 64 if (x[k] + y[k] >= B) {||| 65 for (int cur = in[k] + x[k]; cur <= m; cur += x[k] + y[k]) {||| 66 a[cur]--;||| 67 if (cur + y[k] <= m) a[cur + y[k]]++;||| 68 if (cur + 1 <= t && t <= cur + y[k]) pref--;||| 69 }||| 70 } else||| 71 block_update(in[k], k, -1);||| 72 }||| 73 pref += a[t];||| 74 cout << pref + block_query(t) << ""\n"";||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err(istream_iterator<string> it) { cout << endl; }||| 4 template <typename T, typename... Args>||| 5 void err(istream_iterator<string> it, T a, Args... args) {||| 6 cerr << *it << "" = "" << a << "" "";||| 7 err(++it, args...);||| 8 }||| 9 template <typename T>||| 10 inline void read(T& x) {||| 11 x = 0;||| 12 T f = 1;||| 13 char ch = getchar();||| 14 while (!isdigit(ch)) f = (ch == '-') ? -1 : 1, ch = getchar();||| 15 while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();||| 16 x *= f;||| 17 }||| 18 template <typename T, typename... Args>||| 19 inline void read(T& x, Args&... args) {||| 20 read(x), read(args...);||| 21 }||| 22 template <typename T>||| 23 inline void write(T x) {||| 24 if (x < 0) putchar('-'), x = -x;||| 25 if (x >= 10) write(x / 10);||| 26 putchar(x % 10 + '0');||| 27 }||| 28 template <typename T, typename... Args>||| 29 inline void write(T& x, Args&... args) {||| 30 write(x), putchar('\n'), write(args...);||| 31 }||| 32 constexpr int MAXN = 2e5 + 5, MOD = 1e9 + 7;||| 33 int n, m, x[MAXN], y[MAXN], B, pref, a[MAXN], in[MAXN];||| 34 int cnt[256][256];||| 35 void block_update(int s, int k, int tag) {||| 36 int b = x[k] + y[k];||| 37 for (int i = max(0, s % b - y[k]); i < s % b; i++) cnt[b][i] += tag;||| 38 for (int i = s % b + x[k]; i < b; i++) cnt[b][i] += tag;||| 39 }||| 40 int block_query(int t) {||| 41 int res = 0;||| 42 for (int i = 2; i <= B; i++) res += cnt[i][t % i];||| 43 return res;||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 47 ;||| 48 cin >> n >> m;||| 49 B = min(255LL, llround(sqrt(m)) + 1);||| 50 for (int i = 1; i <= n; i++) cin >> x[i] >> y[i];||| 51 for (int t = 1; t <= m; t++) {||| 52 int op, k;||| 53 cin >> op >> k;||| 54 if (op == 1) {||| 55 if (x[k] + y[k] >= B) {||| 56 for (int cur = t + x[k]; cur <= m; cur += x[k] + y[k]) {||| 57 a[cur]++;||| 58 if (cur + y[k] <= m) a[cur + y[k]]--;||| 59 }||| 60 } else||| 61 block_update(t, k, 1);||| 62 in[k] = t;||| 63 } else {||| 64 if (x[k] + y[k] >= B) {||| 65 for (int cur = in[k] + x[k]; cur <= m; cur += x[k] + y[k]) {||| 66 a[cur]--;||| 67 if (cur + y[k] <= m) a[cur + y[k]]++;||| 68 if (cur + 1 <= t && t < cur + y[k]) pref--;||| 69 }||| 70 } else||| 71 block_update(in[k], k, -1);||| 72 }||| 73 pref += a[t];||| 74 cout << pref + block_query(t) << ""\n"";||| 75 }||| 76 return 0;||| 77 }||| "	68 if (cur + 1 <= t && t <= cur + y[k]) pref--;
22	49	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 5, B = 400;||| 4 int ans[B + 1][B + 1], pr[N], n, m, x[N], y[N], xx, yy, ty, idx, sm, add[N];||| 5 void update(int i, int xx, int yy, int val, int idd) {||| 6 if (xx + yy >= B) {||| 7 for (int j = i; j <= m; j += (xx + yy)) {||| 8 if (j + xx > m) break;||| 9 pr[min(m + 1, j + xx)] += val;||| 10 pr[min(m + 1, j + xx + yy)] -= val;||| 11 }||| 12 } else {||| 13 sm = xx + yy;||| 14 for (int j = 0; j < sm; j++) {||| 15 if (((j - i) % sm + sm) % sm >= xx) {||| 16 ans[sm][j] += val;||| 17 }||| 18 }||| 19 }||| 20 }||| 21 int getans(int i) {||| 22 int pas = pr[i];||| 23 for (int j = 1; j <= B; j++) {||| 24 pas += ans[j][i % j];||| 25 }||| 26 return pas;||| 27 }||| 28 int check(int i, int xx, int yy, int i1) {||| 29 if (xx + yy < B) return 0;||| 30 int vl = (i - i1) / (xx + yy);||| 31 int le = i1 + vl * (xx + yy) + xx;||| 32 int le1 = i1 + (vl - 1) * (xx + yy) + xx;||| 33 if ((le < i && le + yy >= i) || (le1 < i && le1 + yy >= i)) {||| 34 pr[i]--;||| 35 return 1;||| 36 } else||| 37 return 0;||| 38 }||| 39 int main() {||| 40 std::ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 41 cin >> n >> m;||| 42 for (int i = 1; i <= n; i++) {||| 43 cin >> x[i] >> y[i];||| 44 }||| 45 for (int i = 1; i <= m; i++) {||| 46 cin >> ty >> idx;||| 47 pr[i] = pr[i - 1] + pr[i];||| 48 if (ty == 1) {||| 49 add[idx] = i;||| 50 xx = x[idx];||| 51 yy = y[idx];||| 52 update(i, xx, yy, 1, i);||| 53 cout << getans(i) << ""\n"";||| 54 continue;||| 55 }||| 56 if (ty == 2) {||| 57 xx = x[idx];||| 58 yy = y[idx];||| 59 update(add[idx], xx, yy, -1, i);||| 60 cout << getans(i) - check(i, xx, yy, add[idx]) << ""\n"";||| 61 continue;||| 62 }||| 63 }||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 5, B = 400;||| 4 int ans[B + 1][B + 1], pr[N], n, m, x[N], y[N], xx, yy, ty, idx, sm, add[N];||| 5 void update(int i, int xx, int yy, int val, int idd) {||| 6 if (xx + yy >= B) {||| 7 for (int j = i; j <= m; j += (xx + yy)) {||| 8 if (j + xx > m) break;||| 9 pr[min(m + 1, j + xx)] += val;||| 10 pr[min(m + 1, j + xx + yy)] -= val;||| 11 }||| 12 } else {||| 13 sm = xx + yy;||| 14 for (int j = 0; j < sm; j++) {||| 15 if (((j - i) % sm + sm) % sm >= xx) {||| 16 ans[sm][j] += val;||| 17 }||| 18 }||| 19 }||| 20 }||| 21 int getans(int i) {||| 22 int pas = pr[i];||| 23 for (int j = 1; j <= B; j++) {||| 24 pas += ans[j][i % j];||| 25 }||| 26 return pas;||| 27 }||| 28 int check(int i, int xx, int yy, int i1) {||| 29 if (xx + yy < B) return 0;||| 30 int vl = (i - i1) / (xx + yy);||| 31 int le = i1 + vl * (xx + yy) + xx;||| 32 int le1 = i1 + (vl + 1) * (xx + yy) + xx;||| 33 if ((le < i && le + yy >= i) || (le1 < i && le1 + yy >= i)) {||| 34 pr[i]--;||| 35 return 1;||| 36 } else||| 37 return 0;||| 38 }||| 39 int main() {||| 40 std::ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 41 cin >> n >> m;||| 42 for (int i = 1; i <= n; i++) {||| 43 cin >> x[i] >> y[i];||| 44 }||| 45 for (int i = 1; i <= m; i++) {||| 46 cin >> ty >> idx;||| 47 pr[i] = pr[i - 1] + pr[i];||| 48 if (ty == 1) {||| 49 add[idx] = i;||| 50 xx = x[idx];||| 51 yy = y[idx];||| 52 update(i, xx, yy, 1, i);||| 53 cout << getans(i) << ""\n"";||| 54 continue;||| 55 }||| 56 if (ty == 2) {||| 57 xx = x[idx];||| 58 yy = y[idx];||| 59 update(add[idx], xx, yy, -1, i);||| 60 cout << getans(i) - check(i, xx, yy, add[idx]) << ""\n"";||| 61 continue;||| 62 }||| 63 }||| 64 }||| "	32 int le1 = i1 + (vl - 1) * (xx + yy) + xx;
22	88	"1 #include <bits/stdc++.h>||| 2 const int N = 200005, B = 505, lim = 500, blc = 500;||| 3 int n, m, x[N], y[N], is[N], t[N];||| 4 int sum[B][B];||| 5 int tag[B], val[N];||| 6 inline void add(int x, int v) {||| 7 tag[(((x) + blc - 1) / blc)] += v, val[x] += v;||| 8 }||| 9 inline int ask(int x) {||| 10 int ret = 0;||| 11 for (int i = 1; i < (((x) + blc - 1) / blc); ++i) ret += tag[i];||| 12 for (int i = ((((x) + blc - 1) / blc) - 1) * blc + 1; i <= x; ++i)||| 13 ret += val[i];||| 14 return ret;||| 15 }||| 16 inline void solve(int x) {||| 17 int ans = 0;||| 18 for (int i = 1; i <= lim; ++i) ans += sum[i][(x - 1) % i + 1];||| 19 printf(""%d\n"", ans + ask(x));||| 20 }||| 21 inline void radd(int u, int v, int t) {||| 22 is[u] += v;||| 23 if (x[u] + y[u] > lim) {||| 24 int cur = t - 1;||| 25 while (cur + x[u] < m) {||| 26 add(cur + x[u] + 1, v);||| 27 if (cur + x[u] + y[u] + 1 <= m) add(cur + x[u] + y[u] + 1, -v);||| 28 cur += x[u] + y[u];||| 29 }||| 30 } else {||| 31 for (int i = x[u] + 1; i <= x[u] + y[u]; ++i)||| 32 sum[x[u] + y[u]][(i + t - 2) % (x[u] + y[u]) + 1] += v;||| 33 }||| 34 }||| 35 int main() {||| 36 scanf(""%d%d"", &n, &m);||| 37 for (int i = 1; i <= n; ++i) scanf(""%d%d"", x + i, y + i);||| 38 for (int i = 1, op, k; i <= m; ++i) {||| 39 scanf(""%d%d"", &op, &k);||| 40 if (op == 1)||| 41 radd(k, 1, i), t[k] = i;||| 42 else||| 43 radd(k, -1, t[k]);||| 44 solve(i);||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 const int N = 200005, B = 505, lim = 500, blc = 500;||| 3 int n, m, x[N], y[N], is[N], t[N];||| 4 int sum[B][B];||| 5 int tag[B], val[N];||| 6 inline void add(int x, int v) {||| 7 tag[(((x) + blc - 1) / blc)] += v, val[x] += v;||| 8 }||| 9 inline int ask(int x) {||| 10 int ret = 0;||| 11 for (int i = 1; i < (((x) + blc - 1) / blc); ++i) ret += tag[i];||| 12 for (int i = ((((x) + blc - 1) / blc) - 1) * blc + 1; i <= x; ++i)||| 13 ret += val[i];||| 14 return ret;||| 15 }||| 16 inline void solve(int x) {||| 17 int ans = 0;||| 18 for (int i = 1; i <= lim; ++i) ans += sum[i][(x - 1) % i + 1];||| 19 printf(""%d\n"", ans + ask(x));||| 20 }||| 21 inline void radd(int u, int v, int t) {||| 22 is[u] += v;||| 23 if (x[u] + y[u] > lim) {||| 24 int cur = t - 1;||| 25 while (cur + x[u] < n) {||| 26 add(cur + x[u] + 1, v);||| 27 if (cur + x[u] + y[u] + 1 <= n) add(cur + x[u] + y[u] + 1, -v);||| 28 cur += x[u] + y[u];||| 29 }||| 30 } else {||| 31 for (int i = x[u] + 1; i <= x[u] + y[u]; ++i)||| 32 sum[x[u] + y[u]][(i + t - 2) % (x[u] + y[u]) + 1] += v;||| 33 }||| 34 }||| 35 int main() {||| 36 scanf(""%d%d"", &n, &m);||| 37 for (int i = 1; i <= n; ++i) scanf(""%d%d"", x + i, y + i);||| 38 for (int i = 1, op, k; i <= m; ++i) {||| 39 scanf(""%d%d"", &op, &k);||| 40 if (op == 1)||| 41 radd(k, 1, i), t[k] = i;||| 42 else||| 43 radd(k, -1, t[k]);||| 44 solve(i);||| 45 }||| 46 return 0;||| 47 }||| "	25 while (cur + x[u] < m) {
22	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f ^= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 450;||| 11 int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7];||| 12 inline void work(int t) {||| 13 int opt = read(), x = read(), r = a[x] + b[x];||| 14 if (opt == 1) {||| 15 lst[x] = t;||| 16 if (r <= M)||| 17 for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++;||| 18 else||| 19 for (int i = t + a[x]; i <= m; i += r) {||| 20 s[i]++;||| 21 if (i + b[x] <= m) s[i + b[x]]--;||| 22 }||| 23 } else {||| 24 int T = lst[x];||| 25 if (r <= M)||| 26 for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--;||| 27 else||| 28 for (int i = T + a[x]; i <= m; i += r) {||| 29 s[i]--;||| 30 if (i + b[x] <= m) s[i + b[x]]++;||| 31 if (i < t && t <= i + b[x]) ans--;||| 32 }||| 33 }||| 34 ans += s[t];||| 35 int res = ans;||| 36 for (int i = 1; i <= M; i++) res += sum[i][t % i];||| 37 printf(""%d\n"", res);||| 38 }||| 39 int main() {||| 40 n = read(), m = read();||| 41 for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read();||| 42 for (int t = 1; t <= m; t++) work(t);||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f ^= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 450;||| 11 int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7];||| 12 inline void work(int t) {||| 13 int opt = read(), x = read(), r = a[x] + b[x];||| 14 if (opt == 1) {||| 15 lst[x] = t;||| 16 if (r <= M)||| 17 for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++;||| 18 else||| 19 for (int i = t + a[x]; i <= m; i += r) {||| 20 s[i]++;||| 21 if (i + b[x] <= m) s[i + b[x]]--;||| 22 }||| 23 } else {||| 24 int T = lst[x];||| 25 if (r <= M)||| 26 for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--;||| 27 else||| 28 for (int i = T + a[x]; i <= m; i += r) {||| 29 s[i]--;||| 30 if (i + b[x] <= m) s[i + b[x]]++;||| 31 if (i <= t && t < i + b[x]) ans--;||| 32 }||| 33 }||| 34 ans += s[t];||| 35 int res = ans;||| 36 for (int i = 1; i <= M; i++) res += sum[i][t % i];||| 37 printf(""%d\n"", res);||| 38 }||| 39 int main() {||| 40 n = read(), m = read();||| 41 for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read();||| 42 for (int t = 1; t <= m; t++) work(t);||| 43 return 0;||| 44 }||| "	31 if (i < t && t <= i + b[x]) ans--;
22	108	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f ^= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 450;||| 11 int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7];||| 12 inline void work(int t) {||| 13 int opt = read(), x = read(), r = a[x] + b[x];||| 14 if (opt == 1) {||| 15 lst[x] = t;||| 16 if (r <= M)||| 17 for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++;||| 18 else||| 19 for (int i = t + a[x]; i <= m; i += r) {||| 20 s[i]++;||| 21 if (i + b[x] <= m) s[i + b[x]]--;||| 22 }||| 23 } else {||| 24 int T = lst[x];||| 25 if (r <= M)||| 26 for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--;||| 27 else||| 28 for (int i = T + a[x]; i <= m; i += r) {||| 29 s[i]--;||| 30 if (i + b[x] <= m) s[i + b[x]]++;||| 31 if (i < t && t <= i + b[x]) ans--;||| 32 }||| 33 }||| 34 ans += s[t];||| 35 int res = ans;||| 36 for (int i = 1; i <= M; i++) res += sum[i][t % i];||| 37 printf(""%d\n"", res);||| 38 }||| 39 int main() {||| 40 n = read(), m = read();||| 41 for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read();||| 42 for (int t = 1; t <= m; t++) work(t);||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f ^= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 450;||| 11 int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7];||| 12 inline void work(int t) {||| 13 int opt = read(), x = read(), r = a[x] + b[x];||| 14 if (opt == 1) {||| 15 lst[x] = t;||| 16 if (r <= M)||| 17 for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++;||| 18 else||| 19 for (int i = t + a[x]; i <= m; i += r) {||| 20 s[i]++;||| 21 if (i + b[x] <= m) s[i + b[x]]--;||| 22 }||| 23 } else {||| 24 int T = lst[x];||| 25 if (r <= M)||| 26 for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--;||| 27 else||| 28 for (int i = T + a[x]; i <= m; i += r) {||| 29 s[i]--;||| 30 if (i + b[x] <= m) s[i + b[x]]++;||| 31 if (i < t && t < i + b[x]) ans--;||| 32 }||| 33 }||| 34 ans += s[t];||| 35 int res = ans;||| 36 for (int i = 1; i <= M; i++) res += sum[i][t % i];||| 37 printf(""%d\n"", res);||| 38 }||| 39 int main() {||| 40 n = read(), m = read();||| 41 for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read();||| 42 for (int t = 1; t <= m; t++) work(t);||| 43 return 0;||| 44 }||| "	31 if (i < t && t <= i + b[x]) ans--;
22	16	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0;||| 5 bool op = false;||| 6 char c = getchar();||| 7 while (!isdigit(c)) op |= (c == '-'), c = getchar();||| 8 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 9 return op ? -x : x;||| 10 }||| 11 const int N = 2e5 + 10;||| 12 int n, m, B;||| 13 int dif[N], d[500][500], lst[N];||| 14 struct Node {||| 15 int x, y;||| 16 Node() {}||| 17 Node(int x, int y) : x(x), y(y) {}||| 18 } a[N];||| 19 void update(int t, int x, int v) {||| 20 int p = a[x].x + a[x].y;||| 21 int l = (t + a[x].x) % p, r = (t - 1) % p;||| 22 if (l <= r)||| 23 for (int i = l; i <= r; i++) d[p][i] += v;||| 24 else {||| 25 for (int i = 0; i <= r; i++) d[p][i] += v;||| 26 for (int i = l; i < p; i++) d[p][i] += v;||| 27 }||| 28 }||| 29 int main() {||| 30 n = read();||| 31 m = read();||| 32 B = sqrt(m);||| 33 for (int i = 1; i <= n; i++) {||| 34 int x = read(), y = read();||| 35 a[i] = Node(x, y);||| 36 }||| 37 int ans = 0;||| 38 for (int t = 1; t <= m; t++) {||| 39 int op = read(), x = read();||| 40 if (op == 1) {||| 41 if (a[x].x + a[x].y > B) {||| 42 for (int i = t + a[x].x; i <= m; i += a[x].x + a[x].y) {||| 43 dif[i]++;||| 44 if (i + a[x].y <= m) dif[i + a[x].y]--;||| 45 }||| 46 } else||| 47 update(t, x, 1);||| 48 lst[x] = t;||| 49 } else {||| 50 if (a[x].x + a[x].y > B) {||| 51 for (int i = lst[x] + a[x].x; i <= m; i += a[x].x + a[x].y) {||| 52 dif[i]--;||| 53 if (i + a[x].y <= m) dif[i + a[x].y]++;||| 54 if (i < t && i + a[x].y >= t) ans--;||| 55 }||| 56 } else||| 57 update(lst[x], x, -1);||| 58 }||| 59 int res = 0;||| 60 ans += dif[t];||| 61 for (int i = 1; i <= B; i++) res += d[i][t % i];||| 62 printf(""%d\n"", res + ans);||| 63 }||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0;||| 5 bool op = false;||| 6 char c = getchar();||| 7 while (!isdigit(c)) op |= (c == '-'), c = getchar();||| 8 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 9 return op ? -x : x;||| 10 }||| 11 const int N = 2e5 + 10;||| 12 int n, m, B;||| 13 int dif[N], d[500][500], lst[N];||| 14 struct Node {||| 15 int x, y;||| 16 Node() {}||| 17 Node(int x, int y) : x(x), y(y) {}||| 18 } a[N];||| 19 void update(int t, int x, int v) {||| 20 int p = a[x].x + a[x].y;||| 21 int l = (t + a[x].x) % p, r = (t - 1) % p;||| 22 if (l <= r)||| 23 for (int i = l; i <= r; i++) d[p][i] += v;||| 24 else {||| 25 for (int i = 0; i <= l; i++) d[p][i] += v;||| 26 for (int i = r; i < p; i++) d[p][i] += v;||| 27 }||| 28 }||| 29 int main() {||| 30 n = read();||| 31 m = read();||| 32 B = sqrt(m);||| 33 for (int i = 1; i <= n; i++) {||| 34 int x = read(), y = read();||| 35 a[i] = Node(x, y);||| 36 }||| 37 int ans = 0;||| 38 for (int t = 1; t <= m; t++) {||| 39 int op = read(), x = read();||| 40 if (op == 1) {||| 41 if (a[x].x + a[x].y > B) {||| 42 for (int i = t + a[x].x; i <= m; i += a[x].x + a[x].y) {||| 43 dif[i]++;||| 44 if (i + a[x].y <= m) dif[i + a[x].y]--;||| 45 }||| 46 } else||| 47 update(t, x, 1);||| 48 lst[x] = t;||| 49 } else {||| 50 if (a[x].x + a[x].y > B) {||| 51 for (int i = lst[x] + a[x].x; i <= m; i += a[x].x + a[x].y) {||| 52 dif[i]--;||| 53 if (i + a[x].y <= m) dif[i + a[x].y]++;||| 54 if (i < t && i + a[x].y >= t) ans--;||| 55 }||| 56 } else||| 57 update(lst[x], x, -1);||| 58 }||| 59 int res = 0;||| 60 ans += dif[t];||| 61 for (int i = 1; i <= B; i++) res += d[i][t % i];||| 62 printf(""%d\n"", res + ans);||| 63 }||| 64 }||| "	25 for (int i = 0; i <= r; i++) d[p][i] += v;
23	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4010;||| 4 int n, m, a[N], rt, tot, L[N], siz[N], R[N], ls[N], rs[N];||| 5 long long val[N], dp[N][N];||| 6 inline void build(int &p, int l, int r) {||| 7 if (l > r) return;||| 8 p = ++tot;||| 9 int pos = l;||| 10 for (int i = l; i <= r; ++i)||| 11 if (a[i] < a[pos]) pos = i;||| 12 val[p] = a[pos];||| 13 build(ls[p], l, pos - 1);||| 14 build(rs[p], pos + 1, r);||| 15 dp[p][0] = 0;||| 16 dp[p][1] = m * val[p] - val[p];||| 17 siz[p] = 1;||| 18 for (int i = siz[p]; i >= 0; --i)||| 19 for (int j = 0; j <= siz[ls[p]]; ++j)||| 20 dp[p][i + j] =||| 21 max(dp[p][i + j], dp[p][i] + dp[ls[p]][j] - 2ll * i * j * val[p]);||| 22 siz[p] += siz[ls[p]];||| 23 for (int i = siz[p]; i >= 0; --i)||| 24 for (int j = 0; j <= siz[rs[p]]; ++j)||| 25 dp[p][i + j] =||| 26 max(dp[p][i + j], dp[p][i] + dp[rs[p]][j] - 2ll * i * j * val[p]);||| 27 siz[p] += siz[rs[p]];||| 28 }||| 29 int main() {||| 30 memset(dp, -0x3f, sizeof(dp));||| 31 scanf(""%d%d"", &n, &m);||| 32 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 33 build(rt, 1, n);||| 34 printf(""%lld\n"", dp[1][m]);||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4010;||| 4 int n, m, a[N], rt, tot, L[N], siz[N], R[N], ls[N], rs[N];||| 5 long long val[N], dp[N][N];||| 6 inline void build(int &p, int l, int r) {||| 7 if (l > r) return;||| 8 p = ++tot;||| 9 int pos = l;||| 10 for (int i = l; i <= r; ++i)||| 11 if (a[i] < a[pos]) pos = i;||| 12 val[p] = a[pos];||| 13 build(ls[p], l, pos - 1);||| 14 build(rs[p], pos + 1, r);||| 15 dp[p][0] = 0;||| 16 dp[p][1] = m * val[p] - val[p];||| 17 siz[p] = 1;||| 18 for (int i = siz[p]; i >= 0; --i)||| 19 for (int j = 0; j <= siz[ls[p]]; ++j)||| 20 dp[p][i + j] =||| 21 max(dp[p][i + j], dp[p][i] + dp[ls[p]][j] - 2ll * i * j * val[p]);||| 22 siz[p] += siz[ls[p]];||| 23 for (int i = siz[p]; i >= 0; --i)||| 24 for (int j = 0; j <= siz[rs[p]]; ++j)||| 25 dp[p][i + j] =||| 26 max(dp[p][i + j], dp[p][i] + dp[rs[p]][j] - 2ll * i * j * val[p]);||| 27 siz[p] += siz[rs[p]];||| 28 }||| 29 int main() {||| 30 memset(dp, -0x3f, sizeof(dp));||| 31 scanf(""%d%d"", &n, &m);||| 32 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 33 build(rt, 1, n);||| 34 printf(""%d\n"", dp[1][m]);||| 35 return 0;||| 36 }||| "	"34 printf(""%lld\n"", dp[1][m]);"
23	43	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(2, 3, ""Ofast"")||| 3 using namespace std;||| 4 template <typename T1, typename T2>||| 5 void ckmin(T1 &a, T2 b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename T1, typename T2>||| 9 void ckmax(T1 &a, T2 b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int read() {||| 13 int x = 0, f = 0;||| 14 char ch = getchar();||| 15 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 16 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 17 return f ? -x : x;||| 18 }||| 19 template <typename T>||| 20 void print(T x) {||| 21 if (x < 0) putchar('-'), x = -x;||| 22 if (x >= 10) print(x / 10);||| 23 putchar(x % 10 + '0');||| 24 }||| 25 template <typename T>||| 26 void print(T x, char let) {||| 27 print(x), putchar(let);||| 28 }||| 29 const int N = 4005;||| 30 long long dp[N][N];||| 31 int sz[N], a[N], n, m, tot;||| 32 void solve(int &u, int l, int r) {||| 33 if (l > r) {||| 34 u = 0;||| 35 return;||| 36 }||| 37 u = ++tot, sz[u] = r - l + 1;||| 38 dp[u][0] = 0;||| 39 dp[u][1] = 1ll * (m - 1) * a[l];||| 40 int pos = l, ls = 0, rs = 0;||| 41 for (int i = l; i <= r; i++)||| 42 if (a[i] < a[pos]) pos = i;||| 43 solve(ls, l, pos - 1), solve(rs, pos + 1, r);||| 44 if (ls && rs) {||| 45 for (int i = 1; i <= sz[ls]; i++) {||| 46 for (int j = 1; j <= sz[rs]; j++) {||| 47 ckmax(dp[u][i + j], dp[ls][i] + dp[rs][j] - 2ll * a[pos] * i * j);||| 48 ckmax(dp[u][i + j + 1], dp[ls][i] + dp[rs][j] + 1ll * (m - 1) * a[pos] -||| 49 2ll * a[pos] * (1ll * i * j + i + j));||| 50 }||| 51 }||| 52 }||| 53 if (ls) {||| 54 for (int i = 0; i <= sz[ls]; i++) {||| 55 ckmax(dp[u][i], dp[ls][i]);||| 56 ckmax(dp[u][i + 1],||| 57 dp[ls][i] + 1ll * (m - 1) * a[pos] - 2ll * a[pos] * i);||| 58 }||| 59 }||| 60 if (rs) {||| 61 for (int i = 0; i <= sz[rs]; i++) {||| 62 ckmax(dp[u][i], dp[rs][i]);||| 63 ckmax(dp[u][i + 1],||| 64 dp[rs][i] + 1ll * (m - 1) * a[pos] - 2ll * a[pos] * i);||| 65 }||| 66 }||| 67 }||| 68 int main() {||| 69 memset(dp, -0x3f, sizeof(dp));||| 70 n = read(), m = read();||| 71 for (int i = 1; i <= n; i++) a[i] = read();||| 72 int rt;||| 73 solve(rt, 1, n);||| 74 print(dp[rt][m], '\n');||| 75 return 0;||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(2, 3, ""Ofast"")||| 3 using namespace std;||| 4 template <typename T1, typename T2>||| 5 void ckmin(T1 &a, T2 b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename T1, typename T2>||| 9 void ckmax(T1 &a, T2 b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int read() {||| 13 int x = 0, f = 0;||| 14 char ch = getchar();||| 15 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 16 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 17 return f ? -x : x;||| 18 }||| 19 template <typename T>||| 20 void print(T x) {||| 21 if (x < 0) putchar('-'), x = -x;||| 22 if (x >= 10) print(x / 10);||| 23 putchar(x % 10 + '0');||| 24 }||| 25 template <typename T>||| 26 void print(T x, char let) {||| 27 print(x), putchar(let);||| 28 }||| 29 const int N = 4005;||| 30 long long dp[N][N];||| 31 int sz[N], a[N], n, m, tot;||| 32 void solve(int &u, int l, int r) {||| 33 if (l > r) {||| 34 u = 0;||| 35 return;||| 36 }||| 37 u = ++tot, sz[u] = r - l + 1;||| 38 dp[u][0] = 0;||| 39 dp[u][1] = 1ll * (m - 1) * a[l];||| 40 int pos = l, ls = 0, rs = 0;||| 41 for (int i = l; i <= r; i++)||| 42 if (a[i] < a[pos]) pos = i;||| 43 solve(ls, l, pos - 1), solve(rs, pos + 1, r);||| 44 if (ls && rs) {||| 45 for (int i = 1; i <= sz[ls]; i++) {||| 46 for (int j = 1; j <= sz[rs]; j++) {||| 47 ckmax(dp[u][i + j], dp[ls][i] + dp[rs][j] - 2ll * a[pos] * i * j);||| 48 ckmax(dp[u][i + j + 1], dp[ls][i] + dp[rs][j] + 1ll * (m - 1) * a[pos] -||| 49 2ll * a[pos] * (1ll * i * j + i + j));||| 50 }||| 51 }||| 52 }||| 53 if (ls) {||| 54 for (int i = 0; i <= sz[ls]; i++) {||| 55 ckmax(dp[u][i], dp[ls][i]);||| 56 ckmax(dp[u][i + 1], dp[ls][i] + 1ll * (m - 1) * a[pos] - 2ll * a[l] * i);||| 57 }||| 58 }||| 59 if (rs) {||| 60 for (int i = 0; i <= sz[rs]; i++) {||| 61 ckmax(dp[u][i], dp[rs][i]);||| 62 ckmax(dp[u][i + 1], dp[rs][i] + 1ll * (m - 1) * a[pos] - 2ll * a[l] * i);||| 63 }||| 64 }||| 65 }||| 66 int main() {||| 67 memset(dp, -0x3f, sizeof(dp));||| 68 n = read(), m = read();||| 69 for (int i = 1; i <= n; i++) a[i] = read();||| 70 int rt;||| 71 solve(rt, 1, n);||| 72 print(dp[rt][m], '\n');||| 73 return 0;||| 74 }||| "	56 ckmax(dp[u][i + 1],
23	31	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4002;||| 4 long long g[N][N];||| 5 int st[N], c[N][2], f[N], siz[N], a[N];||| 6 int n, m, i, tp, rt;||| 7 void dfs(int x) {||| 8 int lc = c[x][0], rc = c[x][1];||| 9 siz[x] = 1;||| 10 if (!lc && !rc) {||| 11 g[x][0] = 0;||| 12 g[x][1] = (long long)a[x] * (m - 1);||| 13 return;||| 14 }||| 15 if (!lc && rc) swap(lc, rc);||| 16 if (!rc) {||| 17 dfs(lc);||| 18 siz[x] += siz[lc];||| 19 memcpy(g[x], g[lc], (siz[lc] + 1) * sizeof g[0][0]);||| 20 for (int i = 0; i <= siz[lc]; i++)||| 21 g[x][i + 1] = max(g[x][i + 1],||| 22 g[lc][i] + (long long)(m - 1) * a[x] - 2ll * i * a[x]);||| 23 return;||| 24 }||| 25 dfs(lc);||| 26 dfs(rc);||| 27 siz[x] += siz[lc] + siz[rc];||| 28 for (int i = 0; i <= siz[lc]; i++)||| 29 for (int j = 0; j <= siz[rc]; j++)||| 30 g[x][i + j] = max(g[x][i + j], g[lc][i] + g[rc][j] - 2ll * i * j * a[x]);||| 31 for (int i = 0; i <= siz[lc]; i++)||| 32 for (int j = 0; j <= siz[rc]; j++)||| 33 g[x][i + j + 1] =||| 34 max(g[x][i + j + 1], g[lc][i] + g[rc][j] + (long long)(m - 1) * a[x] -||| 35 2ll * (i * j + i + j) * a[x]);||| 36 }||| 37 int main() {||| 38 memset(g, -0x3f, sizeof g);||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 cin >> n >> m;||| 42 for (i = 1; i <= n; i++) {||| 43 cin >> a[i];||| 44 st[tp + 1] = 0;||| 45 while (tp && a[st[tp]] > a[i]) --tp;||| 46 c[st[tp]][1] = i;||| 47 c[i][0] = st[tp + 1];||| 48 st[++tp] = i;||| 49 }||| 50 for (i = 1; i <= n; i++) f[c[i][0]] = f[c[i][1]] = i;||| 51 rt = min_element(f + 1, f + n + 1) - f;||| 52 ;||| 53 dfs(rt);||| 54 cout << g[rt][m] << endl;||| 55 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4002;||| 4 long long g[N][N];||| 5 int st[N], c[N][2], f[N], siz[N], a[N];||| 6 int n, m, i, tp, rt;||| 7 void dfs(int x) {||| 8 int lc = c[x][0], rc = c[x][1];||| 9 siz[x] = 1;||| 10 if (!lc && !rc) {||| 11 g[x][0] = 1;||| 12 g[x][1] = (long long)a[x] * (m - 1);||| 13 return;||| 14 }||| 15 if (!lc && rc) swap(lc, rc);||| 16 if (!rc) {||| 17 dfs(lc);||| 18 siz[x] += siz[lc];||| 19 memcpy(g[x], g[lc], (siz[lc] + 1) * sizeof g[0][0]);||| 20 for (int i = 0; i <= siz[lc]; i++)||| 21 g[x][i + 1] = max(g[x][i + 1],||| 22 g[lc][i] + (long long)(m - 1) * a[x] - 2ll * i * a[x]);||| 23 return;||| 24 }||| 25 dfs(lc);||| 26 dfs(rc);||| 27 siz[x] += siz[lc] + siz[rc];||| 28 for (int i = 0; i <= siz[lc]; i++)||| 29 for (int j = 0; j <= siz[rc]; j++)||| 30 g[x][i + j] = max(g[x][i + j], g[lc][i] + g[rc][j] - 2ll * i * j * a[x]);||| 31 for (int i = 0; i <= siz[lc]; i++)||| 32 for (int j = 0; j <= siz[rc]; j++)||| 33 g[x][i + j + 1] =||| 34 max(g[x][i + j + 1], g[lc][i] + g[rc][j] + (long long)(m - 1) * a[x] -||| 35 2ll * (i * j + i + j) * a[x]);||| 36 }||| 37 int main() {||| 38 memset(g, -0x3f, sizeof g);||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 cin >> n >> m;||| 42 for (i = 1; i <= n; i++) {||| 43 cin >> a[i];||| 44 st[tp + 1] = 0;||| 45 while (tp && a[st[tp]] > a[i]) --tp;||| 46 c[st[tp]][1] = i;||| 47 c[i][0] = st[tp + 1];||| 48 st[++tp] = i;||| 49 }||| 50 for (i = 1; i <= n; i++) f[c[i][0]] = f[c[i][1]] = i;||| 51 rt = min_element(f + 1, f + n + 1) - f;||| 52 dfs(rt);||| 53 cout << g[rt][m] << endl;||| 54 }||| 	11 g[x][0] = 0;
23	50	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int MAXN = 4e3 + 1;||| 5 long long dp[MAXN][MAXN];||| 6 int g[MAXN][2];||| 7 int siz[MAXN];||| 8 int a[MAXN], n;||| 9 int root;||| 10 int m;||| 11 int solve(int l, int r) {||| 12 if (l > r) return 0;||| 13 int mn = l;||| 14 for (int i = l; i <= r; ++i)||| 15 if (a[i] < a[mn]) mn = i;||| 16 g[mn][0] = solve(l, mn - 1);||| 17 g[mn][1] = solve(mn + 1, r);||| 18 return mn;||| 19 }||| 20 void dfs(int now) {||| 21 if (g[now][0] == 0 && g[now][1] == 0) {||| 22 siz[now] = 1;||| 23 dp[now][1] = 1ll * (m - 1) * a[now];||| 24 dp[now][0] = 0;||| 25 return;||| 26 }||| 27 if (g[now][0] == 0) {||| 28 dfs(g[now][1]);||| 29 for (int j = 0; j <= n; ++j) dp[now][j] = dp[g[now][1]][j];||| 30 siz[now] = siz[g[now][1]] + 1;||| 31 } else if (g[now][1] == 0) {||| 32 dfs(g[now][0]);||| 33 for (int j = 0; j <= n; ++j) dp[now][j] = dp[g[now][0]][j];||| 34 siz[now] = siz[g[now][0]] + 1;||| 35 } else {||| 36 dfs(g[now][0]);||| 37 dfs(g[now][1]);||| 38 siz[now] = siz[g[now][0]] + siz[g[now][1]] + 1;||| 39 for (int j = 0; j <= siz[g[now][0]]; ++j)||| 40 for (int k = 0; k <= siz[g[now][1]]; ++k) {||| 41 dp[now][j + k] =||| 42 max(dp[now][j + k],||| 43 dp[g[now][0]][j] + dp[g[now][1]][k] - 2ll * j * k * a[now]);||| 44 }||| 45 }||| 46 for (int i = siz[now]; i >= 1; --i) {||| 47 dp[now][i] = max(dp[now][i], dp[now][i - 1] - 2ll * (i - 1) * a[now] +||| 48 1ll * (m - 1) * a[now]);||| 49 }||| 50 }||| 51 int main() {||| 52 cin >> n >> m;||| 53 for (int i = 1; i <= n; ++i)||| 54 for (int j = 0; j <= n; ++j) dp[i][j] = -1e18;||| 55 for (int i = 1; i <= n; ++i) cin >> a[i];||| 56 root = solve(1, n);||| 57 dfs(root);||| 58 cout << dp[root][m] << endl;||| 59 return 0;||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int MAXN = 4e3 + 1;||| 5 long long dp[MAXN][MAXN];||| 6 int g[MAXN][2];||| 7 int siz[MAXN];||| 8 int a[MAXN], n;||| 9 int root;||| 10 int m;||| 11 int solve(int l, int r) {||| 12 if (l > r) return 0;||| 13 int mn = l;||| 14 for (int i = l; i <= r; ++i)||| 15 if (a[i] < a[mn]) mn = i;||| 16 g[mn][0] = solve(l, mn - 1);||| 17 g[mn][1] = solve(mn + 1, r);||| 18 return mn;||| 19 }||| 20 void dfs(int now) {||| 21 if (g[now][0] == 0 && g[now][1] == 0) {||| 22 siz[now] = 1;||| 23 dp[now][1] = 1ll * (m - 1) * a[now];||| 24 dp[now][0] = 0;||| 25 return;||| 26 }||| 27 if (g[now][0] == 0) {||| 28 dfs(g[now][1]);||| 29 for (int j = 0; j <= n; ++j) dp[now][j] = dp[g[now][1]][j];||| 30 siz[now] = siz[g[now][1]] + 1;||| 31 } else if (g[now][1] == 0) {||| 32 dfs(g[now][0]);||| 33 for (int j = 0; j <= n; ++j) dp[now][j] = dp[g[now][0]][j];||| 34 siz[now] = siz[g[now][0]] + 1;||| 35 } else {||| 36 dfs(g[now][0]);||| 37 dfs(g[now][1]);||| 38 siz[now] = siz[g[now][0]] + siz[g[now][1]];||| 39 for (int j = 0; j <= siz[g[now][0]]; ++j)||| 40 for (int k = 0; k <= siz[g[now][1]]; ++k) {||| 41 dp[now][j + k] =||| 42 max(dp[now][j + k],||| 43 dp[g[now][0]][j] + dp[g[now][1]][k] - 2ll * j * k * a[now]);||| 44 }||| 45 }||| 46 for (int i = siz[now]; i >= 1; --i) {||| 47 dp[now][i] = max(dp[now][i], dp[now][i - 1] - 2ll * (i - 1) * a[now] +||| 48 1ll * (m - 1) * a[now]);||| 49 }||| 50 }||| 51 int main() {||| 52 cin >> n >> m;||| 53 for (int i = 1; i <= n; ++i)||| 54 for (int j = 0; j <= n; ++j) dp[i][j] = -1e18;||| 55 for (int i = 1; i <= n; ++i) cin >> a[i];||| 56 root = solve(1, n);||| 57 dfs(root);||| 58 cout << dp[root][m] << endl;||| 59 return 0;||| 60 }||| 	38 siz[now] = siz[g[now][0]] + siz[g[now][1]] + 1;
23	55	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e3 + 11;||| 4 int n, m;||| 5 long long a[N];||| 6 vector<pair<int, long long> > e[N];||| 7 void build(int l, int r, int fa) {||| 8 if (l > r) return;||| 9 int pos = l;||| 10 for (int i = l + 1; i <= r; i++)||| 11 if (a[i] < a[pos]) pos = i;||| 12 e[fa].push_back(make_pair(pos, a[pos] - a[fa]));||| 13 build(l, pos - 1, pos);||| 14 build(pos + 1, r, pos);||| 15 }||| 16 int siz[N];||| 17 long long f[N][N], g[N];||| 18 void dfs(int w, int fa) {||| 19 siz[w] = 1;||| 20 for (pair<int, long long> v : e[w]) {||| 21 if (v.first == fa) continue;||| 22 dfs(v.first, w);||| 23 for (int i = 0; i <= siz[w] + siz[v.first]; i++) g[i] = 0;||| 24 for (int i = 0; i <= siz[w]; i++)||| 25 for (int j = 0; j <= siz[v.first]; j++) {||| 26 g[i + j] =||| 27 max(g[i + j], f[w][i] + f[v.first][j] + j * (m - j) * v.second);||| 28 }||| 29 siz[w] += siz[v.first];||| 30 for (int i = 0; i <= siz[w]; i++) f[w][i] = max(f[w][i], g[i]);||| 31 }||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 cin >> n >> m;||| 36 for (int i = 1; i <= n; i++) cin >> a[i];||| 37 build(1, n, 0);||| 38 dfs(e[0][0].first, 0);||| 39 cout << f[e[0][0].first][m] << endl;||| 40 return 0;||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e3 + 11;||| 4 int n, m;||| 5 long long a[N];||| 6 vector<pair<int, long long> > e[N];||| 7 void build(int l, int r, int fa) {||| 8 if (l > r) return;||| 9 int pos = l;||| 10 for (int i = l + 1; i <= r; i++)||| 11 if (a[i] < a[pos]) pos = i;||| 12 e[fa].push_back(make_pair(pos, a[pos] - a[fa]));||| 13 build(l, pos - 1, pos);||| 14 build(pos + 1, r, pos);||| 15 }||| 16 int siz[N];||| 17 long long f[N][N], g[N];||| 18 void dfs(int w, int fa) {||| 19 siz[w] = 1;||| 20 for (pair<int, int> v : e[w]) {||| 21 if (v.first == fa) continue;||| 22 dfs(v.first, w);||| 23 for (int i = 0; i <= siz[w] + siz[v.first]; i++) g[i] = 0;||| 24 for (int i = 0; i <= siz[w]; i++)||| 25 for (int j = 0; j <= siz[v.first]; j++) {||| 26 g[i + j] =||| 27 max(g[i + j], f[w][i] + f[v.first][j] + j * (m - j) * v.second);||| 28 }||| 29 siz[w] += siz[v.first];||| 30 for (int i = 0; i <= siz[w]; i++) f[w][i] = max(f[w][i], g[i]);||| 31 }||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 cin >> n >> m;||| 36 for (int i = 1; i <= n; i++) cin >> a[i];||| 37 build(1, n, 0);||| 38 dfs(e[0][0].first, 0);||| 39 cout << f[e[0][0].first][m] << endl;||| 40 return 0;||| 41 }||| 	20 for (pair<int, long long> v : e[w]) {
23	47	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, M;||| 4 long long a[4000];||| 5 void calc(long long l, long long r, vector<long long> &res) {||| 6 if (r < l) {||| 7 res.push_back(0);||| 8 return;||| 9 }||| 10 long long m = l;||| 11 for (long long i = l + 1; i <= r; ++i)||| 12 if (a[i] < a[m]) m = i;||| 13 vector<long long> res1, res2;||| 14 calc(l, m - 1, res1);||| 15 calc(m + 1, r, res2);||| 16 res.resize(r - l + 2, -1e18);||| 17 for (long long i = 0; i < (long long)res1.size(); ++i)||| 18 for (long long j = 0; j < (long long)res2.size(); ++j) {||| 19 res[i + j] = max(res[i + j], res1[i] + res2[j] - 2 * i * j * a[m]);||| 20 res[i + j + 1] =||| 21 max(res[i + j + 1], res1[i] + res2[j] - 2 * i * j * a[m] +||| 22 (M - 1) * a[m] - 2 * (i + j) * a[m]);||| 23 }||| 24 }||| 25 int32_t main() {||| 26 cin >> n >> M;||| 27 for (long long i = 0; i < n; ++i) cin >> a[i];||| 28 vector<long long> res;||| 29 calc(0, n - 1, res);||| 30 cout << res[M];||| 31 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, M;||| 4 long long a[4000];||| 5 void calc(long long l, long long r, vector<long long> &res) {||| 6 if (r < l) {||| 7 res.push_back(0);||| 8 return;||| 9 }||| 10 long long m = l;||| 11 for (long long i = l + 1; i < r; ++i)||| 12 if (a[i] < a[m]) m = i;||| 13 vector<long long> res1, res2;||| 14 calc(l, m - 1, res1);||| 15 calc(m + 1, r, res2);||| 16 res.resize(r - l + 2, -1e18);||| 17 for (long long i = 0; i < (long long)res1.size(); ++i)||| 18 for (long long j = 0; j < (long long)res2.size(); ++j) {||| 19 res[i + j] = max(res[i + j], res1[i] + res2[j] - 2 * i * j * a[m]);||| 20 res[i + j + 1] =||| 21 max(res[i + j + 1], res1[i] + res2[j] - 2 * i * j * a[m] +||| 22 (M - 1) * a[m] - 2 * (i + j) * a[m]);||| 23 }||| 24 }||| 25 int32_t main() {||| 26 cin >> n >> M;||| 27 for (long long i = 0; i < n; ++i) cin >> a[i];||| 28 vector<long long> res;||| 29 calc(0, n - 1, res);||| 30 cout << res[M];||| 31 }||| 	11 for (long long i = l + 1; i <= r; ++i)
23	37	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4005;||| 4 int pos[N][N], ls[N], rs[N], siz[N];||| 5 int build(int l, int r) {||| 6 if (l == r) return l;||| 7 int x = pos[l][r];||| 8 if (x - 1 >= l) ls[x] = build(l, x - 1);||| 9 if (x + 1 <= r) rs[x] = build(x + 1, r);||| 10 return x;||| 11 }||| 12 int n, m;||| 13 long long a[N], dp[N][N];||| 14 void dfs(int x) {||| 15 siz[x] = 1;||| 16 if (ls[x]) dfs(ls[x]), siz[x] += siz[ls[x]];||| 17 if (rs[x]) dfs(rs[x]), siz[x] += siz[rs[x]];||| 18 if ((!ls[x]) && (!rs[x])) return;||| 19 if (!ls[x]) {||| 20 for (int i = 0; i <= siz[rs[x]]; i++) {||| 21 dp[x][i] = max(dp[x][i], dp[rs[x]][i] + (a[rs[x]] - a[x]) * i * (m - i));||| 22 dp[x][i + 1] =||| 23 max(dp[x][i + 1], dp[rs[x]][i] + (a[rs[x]] - a[x]) * i * (m - i));||| 24 }||| 25 return;||| 26 }||| 27 if (!rs[x]) {||| 28 for (int i = 0; i <= siz[ls[x]]; i++) {||| 29 dp[x][i] = max(dp[x][i], dp[ls[x]][i] + (a[ls[x]] - a[x]) * i * (m - i));||| 30 dp[x][i + 1] =||| 31 max(dp[x][i + 1], dp[ls[x]][i] + (a[ls[x]] - a[x]) * i * (m - i));||| 32 }||| 33 return;||| 34 }||| 35 for (int i = 0; i <= siz[ls[x]]; i++)||| 36 for (int j = 0; j <= siz[rs[x]]; j++) {||| 37 long long add =||| 38 (a[ls[x]] - a[x]) * i * (m - i) + (a[rs[x]] - a[x]) * j * (m - j);||| 39 dp[x][i + j] = max(dp[x][i + j], dp[ls[x]][i] + dp[rs[x]][j] + add);||| 40 dp[x][i + j + 1] =||| 41 max(dp[x][i + j + 1], dp[ls[x]][i] + dp[rs[x]][j] + add);||| 42 }||| 43 }||| 44 int main() {||| 45 scanf(""%d%d"", &n, &m);||| 46 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 47 for (int i = 1; i <= n; i++) {||| 48 pos[i][i] = i;||| 49 for (int j = i + 1; j <= n; j++)||| 50 pos[i][j] = a[pos[i][j - 1]] < a[j] ? pos[i][j - 1] : j;||| 51 }||| 52 build(1, n);||| 53 dfs(pos[1][n]);||| 54 printf(""%lld"", dp[pos[1][n]][m]);||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4005;||| 4 int pos[N][N], ls[N], rs[N], siz[N];||| 5 int build(int l, int r) {||| 6 if (l == r) return l;||| 7 int x = pos[l][r];||| 8 if (x - 1 >= l) ls[x] = build(l, x - 1);||| 9 if (x + 1 <= r) rs[x] = build(x + 1, r);||| 10 return x;||| 11 }||| 12 int n, m;||| 13 long long a[N], dp[N][N];||| 14 void dfs(int x) {||| 15 siz[x] = 1;||| 16 if (ls[x]) dfs(ls[x]), siz[x] += siz[ls[x]];||| 17 if (rs[x]) dfs(rs[x]), siz[x] += siz[rs[x]];||| 18 if ((!ls[x]) && (!rs[x])) return;||| 19 if (!ls[x]) {||| 20 for (int i = 0; i <= siz[rs[x]]; i++) {||| 21 dp[x][i] = max(dp[x][i], dp[rs[x]][i] + (a[rs[x]] - a[x]) * i * (m - i));||| 22 dp[x][i + 1] =||| 23 max(dp[x][i + 1], dp[rs[x]][i] + (a[rs[x]] - a[x]) * i * (m - i));||| 24 }||| 25 return;||| 26 }||| 27 if (!rs[x]) {||| 28 for (int i = 0; i <= siz[ls[x]]; i++) {||| 29 dp[x][i] = max(dp[x][i], dp[ls[x]][i] + (a[ls[x]] - a[x]) * i * (m - i));||| 30 dp[x][i + 1] =||| 31 max(dp[x][i + 1], dp[ls[x]][i] + (a[ls[x]] - a[x]) * i * (m - i));||| 32 }||| 33 return;||| 34 }||| 35 for (int i = 0; i <= siz[ls[x]]; i++)||| 36 for (int j = 0; j <= siz[rs[x]]; j++) {||| 37 long long add =||| 38 (a[ls[x]] - a[x]) * i * (m - i) + (a[rs[x]] - a[x]) * j * (m - j);||| 39 dp[x][i + j] = max(dp[x][i + j], dp[ls[x]][i] + dp[rs[x]][j] + add);||| 40 dp[x][i + j + 1] =||| 41 max(dp[x][i + j + 1], dp[ls[x]][i] + dp[rs[x]][j] + add);||| 42 }||| 43 }||| 44 int main() {||| 45 scanf(""%d%d"", &n, &m);||| 46 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 47 for (int i = 1; i <= n; i++) {||| 48 pos[i][i] = i;||| 49 for (int j = i + 1; j <= n; j++)||| 50 pos[i][j] = a[pos[i][j - 1]] < a[j] ? pos[i][j - 1] : j;||| 51 }||| 52 build(1, n);||| 53 dfs(pos[1][n]);||| 54 printf(""%d"", dp[pos[1][n]][m]);||| 55 return 0;||| 56 }||| "	"54 printf(""%lld"", dp[pos[1][n]][m]);"
23	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char c = getchar();||| 6 while (!isdigit(c)) {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (isdigit(c)) {||| 11 x = (x << 3) + (x << 1) + (c ^ 48);||| 12 c = getchar();||| 13 }||| 14 return f == -1 ? ~x + 1 : x;||| 15 }||| 16 long long n, m;||| 17 long long a[4010];||| 18 long long ls[4010], rs[4010];||| 19 long long stk[4010], top;||| 20 void build() {||| 21 for (long long i = 1; i <= n; ++i) {||| 22 while (top && a[stk[top]] > a[i]) {||| 23 rs[stk[top]] = ls[i], ls[i] = stk[top];||| 24 --top;||| 25 }||| 26 if (top) rs[stk[top]] = i;||| 27 stk[++top] = i;||| 28 }||| 29 }||| 30 long long sz[4010], dp[4010][4010], tmp[4010];||| 31 void dfs(long long x) {||| 32 sz[x] = 1;||| 33 dp[x][1] = (m - 1) * a[x];||| 34 if (ls[x]) {||| 35 dfs(ls[x]);||| 36 for (long long i = 0; i <= sz[x] + sz[ls[x]]; ++i) tmp[i] = 0;||| 37 for (long long i = 0; i <= sz[x]; ++i) {||| 38 for (long long j = 0; j <= sz[ls[x]]; ++j) {||| 39 tmp[i + j] =||| 40 max(tmp[i + j], dp[x][i] + dp[ls[x]][j] - 2 * i * j * a[x]);||| 41 }||| 42 }||| 43 sz[x] += sz[ls[x]];||| 44 for (long long i = 0; i <= sz[x]; ++i) dp[x][i] = tmp[i];||| 45 }||| 46 if (rs[x]) {||| 47 dfs(rs[x]);||| 48 for (long long i = 0; i <= sz[x] + sz[rs[x]]; ++i) tmp[i] = 0;||| 49 for (long long i = 0; i <= sz[x]; ++i) {||| 50 for (long long j = 0; j <= sz[rs[x]]; ++j) {||| 51 tmp[i + j] =||| 52 max(tmp[i + j], dp[x][i] + dp[rs[x]][j] - 2 * i * j * a[x]);||| 53 }||| 54 }||| 55 sz[x] += sz[rs[x]];||| 56 for (long long i = 0; i <= sz[x]; ++i) dp[x][i] = tmp[i];||| 57 }||| 58 }||| 59 signed main() {||| 60 n = read(), m = read();||| 61 for (long long i = 1; i <= n; ++i) a[i] = read();||| 62 build();||| 63 dfs(stk[1]);||| 64 printf(""%lld\n"", dp[stk[1]][m]);||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char c = getchar();||| 6 while (!isdigit(c)) {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (isdigit(c)) {||| 11 x = (x << 3) + (x << 1) + (c ^ 48);||| 12 c = getchar();||| 13 }||| 14 return f == -1 ? ~x + 1 : x;||| 15 }||| 16 long long n, m;||| 17 long long a[4010];||| 18 long long ls[4010], rs[4010];||| 19 long long stk[4010], top;||| 20 void build() {||| 21 for (long long i = 1; i <= n; ++i) {||| 22 while (top && a[stk[top]] > a[i]) {||| 23 rs[stk[top]] = ls[i], ls[i] = stk[top];||| 24 --top;||| 25 }||| 26 if (top) rs[stk[top]] = i;||| 27 stk[++top] = i;||| 28 }||| 29 }||| 30 long long sz[4010], dp[4010][4010], tmp[4010];||| 31 void dfs(long long x) {||| 32 sz[x] = 1;||| 33 dp[x][1] = (m - 1) * a[x];||| 34 if (ls[x]) {||| 35 dfs(ls[x]);||| 36 for (long long i = 0; i <= sz[x] + sz[ls[x]]; ++i) tmp[i] = 0;||| 37 for (long long i = 0; i <= sz[x]; ++i) {||| 38 for (long long j = 0; j <= sz[ls[x]]; ++j) {||| 39 tmp[i + j] =||| 40 max(tmp[i + j], dp[x][i] + dp[ls[x]][j] - 2 * i * j * a[x]);||| 41 }||| 42 }||| 43 sz[x] += sz[ls[x]];||| 44 for (long long i = 0; i <= sz[x]; ++i) dp[x][i] = tmp[i];||| 45 }||| 46 if (rs[x]) {||| 47 dfs(rs[x]);||| 48 for (long long i = 0; i <= sz[x] + sz[rs[x]]; ++i) tmp[i] = 0;||| 49 for (long long i = 0; i <= sz[x]; ++i) {||| 50 for (long long j = 0; j <= sz[rs[x]]; ++j) {||| 51 tmp[i + j] =||| 52 max(tmp[i + j], dp[x][i] + dp[rs[x]][j] - 2 * i * j * a[x]);||| 53 }||| 54 }||| 55 sz[x] += sz[rs[x]];||| 56 for (long long i = 0; i <= sz[x]; ++i) dp[x][i] = tmp[i];||| 57 }||| 58 }||| 59 signed main() {||| 60 n = read(), m = read();||| 61 for (long long i = 1; i <= n; ++i) a[i] = read();||| 62 build();||| 63 dfs(stk[1]);||| 64 printf(""%d\n"", dp[stk[1]][m]);||| 65 }||| "	"64 printf(""%lld\n"", dp[stk[1]][m]);"
23	31	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4002;||| 4 long long g[N][N];||| 5 int st[N], c[N][2], f[N], siz[N], a[N];||| 6 int n, m, i, tp, rt;||| 7 void dfs(int x) {||| 8 int lc = c[x][0], rc = c[x][1];||| 9 siz[x] = 1;||| 10 if (!lc && !rc) {||| 11 g[x][0] = 0;||| 12 g[x][1] = (long long)a[x] * (m - 1);||| 13 return;||| 14 }||| 15 if (!lc && rc) swap(lc, rc);||| 16 if (!rc) {||| 17 dfs(lc);||| 18 siz[x] += siz[lc];||| 19 memcpy(g[x], g[lc], (siz[lc] + 1) * sizeof g[0][0]);||| 20 for (int i = 0; i <= siz[lc]; i++)||| 21 g[x][i + 1] = max(g[x][i + 1],||| 22 g[lc][i] + (long long)(m - 1) * a[x] - 2ll * i * a[x]);||| 23 return;||| 24 }||| 25 dfs(lc);||| 26 dfs(rc);||| 27 siz[x] += siz[lc] + siz[rc];||| 28 for (int i = 0; i <= siz[lc]; i++)||| 29 for (int j = 0; j <= siz[rc]; j++)||| 30 g[x][i + j] = max(g[x][i + j], g[lc][i] + g[rc][j] - 2ll * i * j * a[x]);||| 31 for (int i = 0; i <= siz[lc]; i++)||| 32 for (int j = 0; j <= siz[rc]; j++)||| 33 g[x][i + j + 1] =||| 34 max(g[x][i + j + 1], g[lc][i] + g[rc][j] + (long long)(m - 1) * a[x] -||| 35 2ll * (i * j + i + j) * a[x]);||| 36 }||| 37 int main() {||| 38 memset(g, -0x3f, sizeof g);||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 cin >> n >> m;||| 42 for (i = 1; i <= n; i++) {||| 43 cin >> a[i];||| 44 st[tp + 1] = 0;||| 45 while (tp && a[st[tp]] > a[i]) --tp;||| 46 c[st[tp]][1] = i;||| 47 c[i][0] = st[tp + 1];||| 48 st[++tp] = i;||| 49 }||| 50 for (i = 1; i <= n; i++) f[c[i][0]] = f[c[i][1]] = i;||| 51 rt = min_element(f + 1, f + n + 1) - f;||| 52 dfs(rt);||| 53 cout << g[rt][m] << endl;||| 54 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4002;||| 4 long long g[N][N];||| 5 int st[N], c[N][2], f[N], siz[N], a[N];||| 6 int n, m, i, tp, rt;||| 7 void dfs(int x) {||| 8 int lc = c[x][0], rc = c[x][1];||| 9 siz[x] = 1;||| 10 if (!lc && !rc) {||| 11 g[x][0] = 1;||| 12 g[x][1] = (long long)a[x] * (m - 1);||| 13 return;||| 14 }||| 15 if (!lc && rc) swap(lc, rc);||| 16 if (!rc) {||| 17 dfs(lc);||| 18 siz[x] += siz[lc];||| 19 memcpy(g[x], g[lc], (siz[lc] + 1) * sizeof g[0][0]);||| 20 for (int i = 0; i <= siz[lc]; i++)||| 21 g[x][i + 1] = max(g[x][i + 1],||| 22 g[lc][i] + (long long)(m - 1) * a[x] - 2ll * i * a[x]);||| 23 return;||| 24 }||| 25 dfs(lc);||| 26 dfs(rc);||| 27 siz[x] += siz[lc] + siz[rc];||| 28 for (int i = 0; i <= siz[lc]; i++)||| 29 for (int j = 0; j <= siz[rc]; j++)||| 30 g[x][i + j] = max(g[x][i + j], g[lc][i] + g[rc][j] - 2ll * i * j * a[x]);||| 31 for (int i = 0; i <= siz[lc]; i++)||| 32 for (int j = 0; j <= siz[rc]; j++)||| 33 g[x][i + j + 1] =||| 34 max(g[x][i + j + 1], g[lc][i] + g[rc][j] + (long long)(m - 1) * a[x] -||| 35 2ll * (i * j + i + j) * a[x]);||| 36 }||| 37 int main() {||| 38 memset(g, -0x3f, sizeof g);||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 cin >> n >> m;||| 42 for (i = 1; i <= n; i++) {||| 43 cin >> a[i];||| 44 st[tp + 1] = 0;||| 45 while (tp && a[st[tp]] > a[i]) --tp;||| 46 c[st[tp]][1] = i;||| 47 c[i][0] = st[tp + 1];||| 48 st[++tp] = i;||| 49 }||| 50 for (i = 1; i <= n; i++) f[c[i][0]] = f[c[i][1]] = i;||| 51 rt = min_element(f + 1, f + n + 1) - f;||| 52 dfs(rt);||| 53 cout << g[rt][m] << endl;||| 54 }||| 	11 g[x][0] = 0;
26	75	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long modu = 1000000007;||| 5 unsigned long long arr[100000];||| 6 arr[0] = 1;||| 7 arr[1] = 1;||| 8 for (long long i = 2; i <= 100000; i++) {||| 9 long long j = 2 * (i - 1);||| 10 arr[i] = ((arr[i - 1] % modu) * ((j + 1) * (j + 2) % modu)) % modu;||| 11 }||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 int n;||| 16 cin >> n;||| 17 cout << arr[n] << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long modu = 1000000007;||| 5 unsigned long long arr[100000];||| 6 arr[0] = 1;||| 7 arr[1] = 1;||| 8 for (long long i = 2; i < 100000; i++) {||| 9 long long j = 2 * (i - 1);||| 10 arr[i] = ((arr[i - 1] % modu) * ((j + 1) * (j + 2) % modu)) % modu;||| 11 }||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 int n;||| 16 cin >> n;||| 17 cout << arr[n] << endl;||| 18 }||| 19 return 0;||| 20 }||| 	8 for (long long i = 2; i <= 100000; i++) {
26	63	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e6 + 6;||| 4 const long long P = 1e9 + 7;||| 5 long long read() {||| 6 long long an = 0, ff = 1;||| 7 char c = getchar();||| 8 for (; c < '0' || c > '9'; c = getchar())||| 9 if (c == '-') ff = -1;||| 10 for (; c >= '0' && c <= '9'; c = getchar())||| 11 an = (an << 3) + (an << 1) + c - '0';||| 12 return an * ff;||| 13 }||| 14 long long Add(long long a, long long b) {||| 15 return a + b >= P ? a + b - P : a + b;||| 16 }||| 17 long long Sub(long long a, long long b) {||| 18 return a - b < 0 ? a - b + P : a - b;||| 19 }||| 20 long long Mul(long long a, long long b) {||| 21 long long res = 1ll * a * b;||| 22 return res >= P ? res % P : res;||| 23 }||| 24 long long Pow(long long a, long long b) {||| 25 long long res = 1;||| 26 while (b) {||| 27 if (b & 1) res = Mul(res, a);||| 28 a = Mul(a, a);||| 29 b >>= 1;||| 30 }||| 31 return res;||| 32 }||| 33 long long Inv(long long a) { return Pow(a, P - 2); }||| 34 long long f[N];||| 35 signed main() {||| 36 f[1] = f[0] = 1;||| 37 for (long long i = 1; i <= 2e5; i++) f[i] = f[i - 1] * i % P;||| 38 long long T = read();||| 39 while (T--) {||| 40 long long x = read();||| 41 x *= 2;||| 42 if (f[x - 1] * x < P)||| 43 cout << f[x] / 2 << endl;||| 44 else||| 45 cout << f[x] * Inv(2) % P << endl;||| 46 }||| 47 return 0;||| 48 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e6 + 6;||| 4 const long long P = 1e9 + 7;||| 5 long long read() {||| 6 long long an = 0, ff = 1;||| 7 char c = getchar();||| 8 for (; c < '0' || c > '9'; c = getchar())||| 9 if (c == '-') ff = -1;||| 10 for (; c >= '0' && c <= '9'; c = getchar())||| 11 an = (an << 3) + (an << 1) + c - '0';||| 12 return an * ff;||| 13 }||| 14 long long Add(long long a, long long b) {||| 15 return a + b >= P ? a + b - P : a + b;||| 16 }||| 17 long long Sub(long long a, long long b) {||| 18 return a - b < 0 ? a - b + P : a - b;||| 19 }||| 20 long long Mul(long long a, long long b) {||| 21 long long res = 1ll * a * b;||| 22 return res >= P ? res % P : res;||| 23 }||| 24 long long Pow(long long a, long long b) {||| 25 long long res = 1;||| 26 while (b) {||| 27 if (b & 1) res = Mul(res, a);||| 28 a = Mul(a, a);||| 29 b >>= 1;||| 30 }||| 31 return res;||| 32 }||| 33 long long Inv(long long a) { return Pow(a, P - 2); }||| 34 long long f[N];||| 35 signed main() {||| 36 f[1] = f[0] = 1;||| 37 for (long long i = 1; i <= 2e5; i++) f[i] = f[i - 1] * i % P;||| 38 long long T = read();||| 39 while (T--) {||| 40 long long x = read();||| 41 x *= 2;||| 42 if (f[x - 1] * x < P)||| 43 cout << f[x] / 2 << endl;||| 44 else||| 45 cout << f[x] * Inv(2) << endl;||| 46 }||| 47 return 0;||| 48 }||| 	45 cout << f[x] * Inv(2) % P << endl;
26	43	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3000;||| 4 const int N = 1e6 + 7, M = N * 2;||| 5 const int inf = 0x3f3f3f3f;||| 6 const long long INF = 0xFFFFFFFFFF;||| 7 const long long mod = 1e9 + 7;||| 8 inline long long read();||| 9 void solve() {||| 10 long long a;||| 11 cin >> a;||| 12 if (a == 1) {||| 13 cout << 1 << '\n';||| 14 return;||| 15 }||| 16 if (a == 2) {||| 17 cout << 12 << '\n';||| 18 return;||| 19 }||| 20 long long ans = 1;||| 21 for (int i = a * 2; i >= 3; i--) {||| 22 ans = ans * i % mod;||| 23 }||| 24 ans %= mod;||| 25 cout << ans << '\n';||| 26 }||| 27 int main() {||| 28 int T = 1;||| 29 T = read();||| 30 for (int cas = 1; cas <= T; cas++) {||| 31 solve();||| 32 }||| 33 return 0;||| 34 }||| 35 inline long long read() {||| 36 char ch_read = getchar();||| 37 long long p_read = 1, data_read = 0;||| 38 while (ch_read < '0' || ch_read > '9') {||| 39 if (ch_read == '-') p_read = -1;||| 40 ch_read = getchar();||| 41 }||| 42 while (ch_read >= '0' && ch_read <= '9') {||| 43 data_read = data_read * 10 + (ch_read ^ 48);||| 44 ch_read = getchar();||| 45 }||| 46 return p_read * data_read;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3000;||| 4 const int N = 1e6 + 7, M = N * 2;||| 5 const int inf = 0x3f3f3f3f;||| 6 const long long INF = 0xFFFFFFFFFF;||| 7 const long long mod = 1e9 + 7;||| 8 inline long long read();||| 9 void solve() {||| 10 long long a;||| 11 cin >> a;||| 12 if (a == 1) {||| 13 cout << 1 << '\n';||| 14 return;||| 15 }||| 16 if (a == 2) {||| 17 cout << 12 << '\n';||| 18 }||| 19 long long ans = 1;||| 20 for (int i = a * 2; i >= 3; i--) {||| 21 ans = ans * i % mod;||| 22 }||| 23 ans %= mod;||| 24 cout << ans << '\n';||| 25 }||| 26 int main() {||| 27 int T = 1;||| 28 T = read();||| 29 for (int cas = 1; cas <= T; cas++) {||| 30 solve();||| 31 }||| 32 return 0;||| 33 }||| 34 inline long long read() {||| 35 char ch_read = getchar();||| 36 long long p_read = 1, data_read = 0;||| 37 while (ch_read < '0' || ch_read > '9') {||| 38 if (ch_read == '-') p_read = -1;||| 39 ch_read = getchar();||| 40 }||| 41 while (ch_read >= '0' && ch_read <= '9') {||| 42 data_read = data_read * 10 + (ch_read ^ 48);||| 43 ch_read = getchar();||| 44 }||| 45 return p_read * data_read;||| 46 }||| 	18 return;
26	59	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long t;||| 5 cin >> t;||| 6 for (long x = 0; x < t; x++) {||| 7 int n;||| 8 cin >> n;||| 9 int hold = 2 * n;||| 10 long long ans = 1;||| 11 if (hold == 2)||| 12 cout << ""1"" << endl;||| 13 else {||| 14 for (int y = 3; y <= hold; y++) {||| 15 ans *= y;||| 16 ans %= 1000000007;||| 17 }||| 18 cout << ans << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long t;||| 5 cin >> t;||| 6 for (long x = 0; x < t; x++) {||| 7 int n;||| 8 cin >> n;||| 9 int hold = 2 * n;||| 10 long long ans = 1;||| 11 if (hold == 2)||| 12 cout << ""2"" << endl;||| 13 else {||| 14 for (int y = 3; y <= hold; y++) {||| 15 ans *= y;||| 16 ans %= 1000000007;||| 17 }||| 18 cout << ans << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	"12 cout << ""1"" << endl;"
26	82	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ceildef(long long a, long long b) {||| 4 return (long long)ceil(double(a) / (double)b);||| 5 }||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 ;||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long n, m, i, j, a, b, ans = 1;||| 15 cin >> n;||| 16 if (n == 1)||| 17 cout << ""1\n"";||| 18 else {||| 19 for (i = 3; i <= 2 * n; i++) {||| 20 ans = (ans * i) % 1000000007;||| 21 }||| 22 cout << ans << ""\n"";||| 23 }||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ceildef(long long a, long long b) {||| 4 return (long long)ceil(double(a) / (double)b);||| 5 }||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 ;||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long n, m, i, j, a, b, ans = 1;||| 15 cin >> n;||| 16 if (n == 1)||| 17 cout << ""1\n"";||| 18 else {||| 19 for (i = 3; i <= 2 * n; i++) {||| 20 ans = (ans * i) % 1000000007;||| 21 }||| 22 }||| 23 cout << ans << ""\n"";||| 24 }||| 25 return 0;||| 26 }||| "	"22 cout << ans << ""\n"";"
27	66	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, m, k;||| 8 cin >> n >> m >> k;||| 9 if (k < 2)||| 10 cout << ""NO\n"";||| 11 else if (n == 1 && m == 0)||| 12 cout << ""YES\n"";||| 13 else if (m < n - 1 || m > (n * (n - 1)) / 2)||| 14 cout << ""NO\n"";||| 15 else {||| 16 int d;||| 17 if (m == (n * (n - 1)) / 2)||| 18 d = 1;||| 19 else||| 20 d = 2;||| 21 if (d < k - 1)||| 22 cout << ""YES\n"";||| 23 else||| 24 cout << ""NO\n"";||| 25 }||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, k;||| 8 cin >> n >> m >> k;||| 9 if (k < 2)||| 10 cout << ""NO\n"";||| 11 else if (n == 1 && m == 0)||| 12 cout << ""YES\n"";||| 13 else if (m < n - 1 || m > (n * (n - 1)) / 2)||| 14 cout << ""NO\n"";||| 15 else {||| 16 int d;||| 17 if (m == (n * (n - 1)) / 2)||| 18 d = 1;||| 19 else||| 20 d = 2;||| 21 if (d < k - 1)||| 22 cout << ""YES\n"";||| 23 else||| 24 cout << ""NO\n"";||| 25 }||| 26 }||| 27 return 0;||| 28 }||| "	7 long long n, m, k;
27	413	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long A[200005];||| 4 long long mod = 1e9 + 7;||| 5 long long inv2 = 5e8 + 4;||| 6 void init() {||| 7 A[0] = 1;||| 8 for (long long i = 1; i <= 200000; i++) {||| 9 A[i] = (A[i - 1] * i) % mod;||| 10 }||| 11 }||| 12 signed main() {||| 13 long long t;||| 14 scanf(""%lld"", &t);||| 15 long long n, m, k;||| 16 while (t--) {||| 17 scanf(""%lld%lld%lld"", &n, &m, &k);||| 18 if (m > n * (n - 1) / 2) {||| 19 cout << ""No\n"";||| 20 continue;||| 21 }||| 22 if (k <= 1) {||| 23 cout << ""No\n"";||| 24 continue;||| 25 }||| 26 if (n == 1) {||| 27 cout << ""Yes\n"";||| 28 continue;||| 29 }||| 30 if (m < n - 1 || k <= 2) {||| 31 cout << ""No\n"";||| 32 continue;||| 33 }||| 34 if (k > 3) {||| 35 cout << ""Yes\n"";||| 36 continue;||| 37 }||| 38 if (m == n * (n - 1) / 2) {||| 39 cout << ""Yes\n"";||| 40 } else||| 41 cout << ""No\n"";||| 42 }||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long A[200005];||| 4 long long mod = 1e9 + 7;||| 5 long long inv2 = 5e8 + 4;||| 6 void init() {||| 7 A[0] = 1;||| 8 for (long long i = 1; i <= 200000; i++) {||| 9 A[i] = (A[i - 1] * i) % mod;||| 10 }||| 11 }||| 12 signed main() {||| 13 long long t;||| 14 scanf(""%lld"", &t);||| 15 long long n, m, k;||| 16 while (t--) {||| 17 scanf(""%lld%lld%lld"", &n, &m, &k);||| 18 if (m > n * (n - 1) / 2) {||| 19 cout << ""No\n"";||| 20 continue;||| 21 }||| 22 if (k == 0) {||| 23 cout << ""No\n"";||| 24 continue;||| 25 }||| 26 if (n == 1) {||| 27 cout << ""Yes\n"";||| 28 continue;||| 29 }||| 30 if (m < n - 1 || k <= 2) {||| 31 cout << ""No\n"";||| 32 continue;||| 33 }||| 34 if (k > 3) {||| 35 cout << ""Yes\n"";||| 36 continue;||| 37 }||| 38 if (m == n * (n - 1) / 2) {||| 39 cout << ""Yes\n"";||| 40 } else||| 41 cout << ""No\n"";||| 42 }||| 43 return 0;||| 44 }||| "	22 if (k <= 1) {
27	39	"1 #include <bits/stdc++.h>||| 2 const int mod = 1e9 + 7;||| 3 using namespace std;||| 4 const int N = 2e5 + 9;||| 5 int main() {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 long long n, m, k;||| 10 cin >> n >> m >> k;||| 11 if (n == 1 && m == 0 && k >= 2)||| 12 puts(""YES"");||| 13 else if (m < n - 1)||| 14 puts(""NO"");||| 15 else if (n * (n - 1) / 2 < m)||| 16 puts(""NO"");||| 17 else if (m >= n - 1 && n * (n - 1) / 2 > m) {||| 18 if (k - 1 > 2)||| 19 puts(""YES"");||| 20 else||| 21 puts(""NO"");||| 22 } else if (m >= n - 1 && n * (n - 1) / 2 == m) {||| 23 if (k - 1 > 1)||| 24 puts(""YES"");||| 25 else||| 26 puts(""NO"");||| 27 }||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 const int mod = 1e9 + 7;||| 3 using namespace std;||| 4 const int N = 2e5 + 9;||| 5 int main() {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 long long n, m, k;||| 10 cin >> n >> m >> k;||| 11 if (n == 1 && m == 0 && k >= 2)||| 12 puts(""YES"");||| 13 else if (m < n - 1)||| 14 puts(""NO"");||| 15 else if (n * (n - 1) / 2 < m)||| 16 puts(""NO"");||| 17 else if (m >= n - 1 && n * (n - 1) / 2 > m) {||| 18 if (k - 1 > 2)||| 19 puts(""NO"");||| 20 else||| 21 puts(""NO"");||| 22 } else if (m >= n - 1 && n * (n - 1) / 2 == m) {||| 23 if (k - 1 > 1)||| 24 puts(""YES"");||| 25 else||| 26 puts(""NO"");||| 27 }||| 28 }||| 29 }||| "	"19 puts(""YES"");"
27	380	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[100005];||| 4 signed main() {||| 5 for (long long i = 1; i <= 100002; i++) {||| 6 a[i] = a[i - 1] + i;||| 7 }||| 8 long long t;||| 9 scanf(""%lld"", &t);||| 10 long long n, m, k;||| 11 while (t--) {||| 12 scanf(""%lld %lld %lld"", &n, &m, &k);||| 13 if (n == 1) {||| 14 if (k >= 2 && m <= a[n - 1])||| 15 printf(""YES\n"");||| 16 else||| 17 printf(""NO\n"");||| 18 } else if (k <= 2) {||| 19 printf(""NO\n"");||| 20 } else if (k == 3) {||| 21 if (n > 100000 || m < a[n - 1] || m > a[n - 1])||| 22 printf(""NO\n"");||| 23 else||| 24 printf(""YES\n"");||| 25 } else {||| 26 if (m >= (n - 1) && (n > 100000 || m <= a[n - 1]))||| 27 printf(""YES\n"");||| 28 else||| 29 printf(""NO\n"");||| 30 }||| 31 }||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[100005];||| 4 signed main() {||| 5 for (long long i = 1; i <= 100002; i++) {||| 6 a[i] = a[i - 1] + i;||| 7 }||| 8 long long t;||| 9 scanf(""%lld"", &t);||| 10 long long n, m, k;||| 11 while (t--) {||| 12 scanf(""%lld %lld %lld"", &n, &m, &k);||| 13 if (n == 1) {||| 14 if (k >= 2 && m <= a[n - 1])||| 15 printf(""YES\n"");||| 16 else||| 17 printf(""NO\n"");||| 18 } else if (k <= 2) {||| 19 printf(""NO\n"");||| 20 } else if (k == 3) {||| 21 if (n > 100000 || m < a[n - 1] || m > a[n - 1])||| 22 printf(""NO\n"");||| 23 else||| 24 printf(""YES\n"");||| 25 } else {||| 26 if (m >= (n - 1) && (n > 100000 || m < a[n - 1]))||| 27 printf(""YES\n"");||| 28 else||| 29 printf(""NO\n"");||| 30 }||| 31 }||| 32 return 0;||| 33 }||| "	26 if (m >= (n - 1) && (n > 100000 || m <= a[n - 1]))
27	316	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 1e6 + 10;||| 4 const long long INF = 0x3f3f3f3f;||| 5 const long long mod = 998244353;||| 6 const double esp = 1e-7;||| 7 signed main() {||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n, m, k;||| 12 cin >> n >> m >> k;||| 13 if ((n != 1 && m == 0) || (n != 1 && k == 2) || m < n - 1 || k < 2 ||||| 14 m > n * (n - 1) / 2) {||| 15 cout << ""NO"" << '\n';||| 16 continue;||| 17 }||| 18 if (k == 3) {||| 19 if (m == n * (n - 1) / 2) {||| 20 cout << ""YES"" << '\n';||| 21 } else {||| 22 cout << ""NO"" << '\n';||| 23 }||| 24 } else {||| 25 cout << ""YES"" << '\n';||| 26 }||| 27 }||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 1e6 + 10;||| 4 const long long INF = 0x3f3f3f3f;||| 5 const long long mod = 998244353;||| 6 const double esp = 1e-7;||| 7 signed main() {||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n, m, k;||| 12 cin >> n >> m >> k;||| 13 if ((n != 1 && m == 0) || (n != 1 && k == 2) || m < n - 1 || k == 1 ||||| 14 m > n * (n - 1) / 2) {||| 15 cout << ""NO"" << '\n';||| 16 continue;||| 17 }||| 18 if (k == 3) {||| 19 if (m == n * (n - 1) / 2) {||| 20 cout << ""YES"" << '\n';||| 21 } else {||| 22 cout << ""NO"" << '\n';||| 23 }||| 24 } else {||| 25 cout << ""YES"" << '\n';||| 26 }||| 27 }||| 28 }||| "	13 if ((n != 1 && m == 0) || (n != 1 && k == 2) || m < n - 1 || k < 2 ||
27	143	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m, k;||| 10 cin >> n >> m >> k;||| 11 k--;||| 12 int d = 0;||| 13 bool flag = false;||| 14 long long num = n * (n - 1) / 2;||| 15 if (n > 1) {||| 16 if (m == num) {||| 17 d = 1;||| 18 } else {||| 19 d = 2;||| 20 }||| 21 }||| 22 if (m >= n - 1 && m <= num) {||| 23 if (d < k) {||| 24 flag = true;||| 25 }||| 26 }||| 27 if (flag) {||| 28 cout << ""YES""||| 29 << ""\n"";||| 30 } else {||| 31 cout << ""NO""||| 32 << ""\n"";||| 33 }||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m, k;||| 10 cin >> n >> m >> k;||| 11 k--;||| 12 int d = 0;||| 13 bool flag = false;||| 14 int num = n * (n - 1) / 2;||| 15 if (n > 1) {||| 16 if (m == num) {||| 17 d = 1;||| 18 } else {||| 19 d = 2;||| 20 }||| 21 }||| 22 if (m >= n - 1 && m <= num) {||| 23 if (d < k) {||| 24 flag = true;||| 25 }||| 26 }||| 27 if (flag) {||| 28 cout << ""YES""||| 29 << ""\n"";||| 30 } else {||| 31 cout << ""NO""||| 32 << ""\n"";||| 33 }||| 34 }||| 35 return 0;||| 36 }||| "	14 long long num = n * (n - 1) / 2;
27	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k;||| 4 int main() {||| 5 int testcases;||| 6 cin >> testcases;||| 7 while (testcases-- > 0) {||| 8 cin >> n >> m >> k;||| 9 if (n == 1 && m == 0 && k >= 2)||| 10 cout << ""YES"" << endl;||| 11 else if (k >= 3 && m == n * (n - 1) / 2)||| 12 cout << ""YES"" << endl;||| 13 else if (k >= 4 && m >= n - 1 && m < n * (n - 1) / 2)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k;||| 4 int main() {||| 5 int testcases;||| 6 cin >> testcases;||| 7 while (testcases-- > 0) {||| 8 cin >> n >> m >> k;||| 9 if (n == 1 && m == 0 && k >= 2)||| 10 cout << ""YES"" << endl;||| 11 else if (k >= 3 && m == n * (n - 1) / 2)||| 12 cout << ""YES"" << endl;||| 13 else if (k >= 4 && m > n - 1 && m < n * (n - 1) / 2)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	13 else if (k >= 4 && m >= n - 1 && m < n * (n - 1) / 2)
27	436	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int T;||| 8 T = 1;||| 9 cin >> T;||| 10 while (T--) {||| 11 long long i, j, k, m, n, l, res = 0, ans = 0;||| 12 cin >> n >> m >> k;||| 13 k -= 2;||| 14 if (m < n - 1) {||| 15 cout << ""NO"" << '\n';||| 16 } else if (m > n * (n - 1) / 2) {||| 17 cout << ""NO"" << '\n';||| 18 } else if (k == 0) {||| 19 if (n == 1) {||| 20 cout << ""YES"" << '\n';||| 21 } else {||| 22 cout << ""NO"" << '\n';||| 23 }||| 24 } else if (k < 0) {||| 25 cout << ""NO"" << '\n';||| 26 } else if (k == 1) {||| 27 if (m == n * (n - 1) / 2) {||| 28 cout << ""YES"" << '\n';||| 29 } else {||| 30 cout << ""NO"" << '\n';||| 31 }||| 32 } else {||| 33 cout << ""YES"" << '\n';||| 34 }||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int T;||| 8 T = 1;||| 9 cin >> T;||| 10 while (T--) {||| 11 int i, j, k, m, n, l, res = 0, ans = 0;||| 12 cin >> n >> m >> k;||| 13 k -= 2;||| 14 if (m < n - 1) {||| 15 cout << ""NO"" << '\n';||| 16 } else if (m > n * (n - 1) / 2) {||| 17 cout << ""NO"" << '\n';||| 18 } else if (k == 0) {||| 19 if (n == 1) {||| 20 cout << ""YES"" << '\n';||| 21 } else {||| 22 cout << ""NO"" << '\n';||| 23 }||| 24 } else if (k < 0) {||| 25 cout << ""NO"" << '\n';||| 26 } else if (k == 1) {||| 27 if (m == n * (n - 1) / 2) {||| 28 cout << ""YES"" << '\n';||| 29 } else {||| 30 cout << ""NO"" << '\n';||| 31 }||| 32 } else {||| 33 cout << ""YES"" << '\n';||| 34 }||| 35 }||| 36 }||| "	11 long long i, j, k, m, n, l, res = 0, ans = 0;
27	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long n, m, i, j, k, t;||| 5 long long p;||| 6 scanf(""%lld"", &t);||| 7 while (t--) {||| 8 scanf(""%lld%lld%lld"", &n, &m, &k);||| 9 if (m > (n - 1) * n / 2)||| 10 printf(""no\n"");||| 11 else if (m < n - 1)||| 12 printf(""no\n"");||| 13 else if (k > 3)||| 14 printf(""yes\n"");||| 15 else if (k == 2) {||| 16 if (n == 1)||| 17 printf(""yes\n"");||| 18 else||| 19 printf(""no\n"");||| 20 } else if (k == 3) {||| 21 if (m >= n * (n - 1) / 2)||| 22 printf(""yes\n"");||| 23 else||| 24 printf(""no\n"");||| 25 } else if (k <= 1)||| 26 printf(""no\n"");||| 27 }||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long n, m, i, j, k, t;||| 5 long long p;||| 6 scanf(""%lld"", &t);||| 7 while (t--) {||| 8 scanf(""%lld%lld%lld"", &n, &m, &k);||| 9 if (m > (n - 1) * n / 2)||| 10 printf(""no\n"");||| 11 else if (m < n - 1)||| 12 printf(""no\n"");||| 13 else if (k > 3)||| 14 printf(""yes\n"");||| 15 else if (k == 2) {||| 16 if (n == 1)||| 17 printf(""yes\n"");||| 18 else||| 19 printf(""no\n"");||| 20 } else if (k == 3) {||| 21 if (m >= n * (n - 1) / 2)||| 22 printf(""yes\n"");||| 23 else||| 24 printf(""no\n"");||| 25 } else if (k == 1)||| 26 printf(""no\n"");||| 27 }||| 28 }||| "	25 } else if (k <= 1)
28	288	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int m, n, o, x, y, z, p, q, c = 0, l;||| 5 scanf(""%d %d %d"", &m, &n, &o);||| 6 if ((m + o) % 2 == 0) {||| 7 printf(""0\n"");||| 8 } else {||| 9 printf(""1\n"");||| 10 }||| 11 }||| 12 int main() {||| 13 int t;||| 14 scanf(""%d"", &t);||| 15 for (int i = 1; i <= t; i++) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int m, n, o, x, y, z, p, q, c = 0, l;||| 5 scanf(""%d %d %d"", &m, &n, &o);||| 6 if ((m + o) % 2 == 0) {||| 7 printf(""1\n"");||| 8 } else {||| 9 printf(""0\n"");||| 10 }||| 11 }||| 12 int main() {||| 13 int t;||| 14 scanf(""%d"", &t);||| 15 for (int i = 1; i <= t; i++) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	"7 printf(""0\n"");"
28	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int func(int a, int b, int c) {||| 4 int diff;||| 5 a = a % 2;||| 6 b = b % 2;||| 7 c = c % 2;||| 8 if (a == 0 && b == 0 && c == 0) diff = 0;||| 9 if (a == 0 && b == 0 && c == 1) diff = 1;||| 10 if (a == 0 && b == 1 && c == 0) diff = 0;||| 11 if (a == 0 && b == 1 && c == 1) diff = 1;||| 12 if (a == 1 && b == 0 && c == 0) diff = 1;||| 13 if (a == 1 && b == 0 && c == 1) diff = 0;||| 14 if (a == 1 && b == 1 && c == 0) diff = 1;||| 15 if (a == 1 && b == 1 && c == 1) diff = 0;||| 16 return diff;||| 17 }||| 18 int main() {||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int a, b, c;||| 23 cin >> a >> b >> c;||| 24 int diff = func(a, b, c);||| 25 cout << diff << ""\n"";||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int func(int a, int b, int c) {||| 4 int diff;||| 5 a = a % 2;||| 6 b = b % 2;||| 7 c = c % 2;||| 8 if (a == 0 && b == 0 && c == 0) diff = 0;||| 9 if (a == 0 && b == 0 && c == 1) diff = 0;||| 10 if (a == 0 && b == 1 && c == 0) diff = 1;||| 11 if (a == 0 && b == 1 && c == 1) diff = 1;||| 12 if (a == 1 && b == 0 && c == 0) diff = 1;||| 13 if (a == 1 && b == 0 && c == 1) diff = 0;||| 14 if (a == 1 && b == 1 && c == 0) diff = 1;||| 15 if (a == 1 && b == 1 && c == 1) diff = 0;||| 16 return diff;||| 17 }||| 18 int main() {||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int a, b, c;||| 23 cin >> a >> b >> c;||| 24 int diff = func(a, b, c);||| 25 cout << diff << ""\n"";||| 26 }||| 27 }||| "	9 if (a == 0 && b == 0 && c == 1) diff = 1;
29	29	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e9 + 7;||| 4 long long fastpower(long long x, long long n, long long M) {||| 5 if (n == 0)||| 6 return 1;||| 7 else if (n % 2 == 0)||| 8 return fastpower((x * x) % M, n / 2, M);||| 9 else||| 10 return (x * fastpower((x * x) % M, (n - 1) / 2, M)) % M;||| 11 }||| 12 long long GCD(long long A, long long B) {||| 13 if (B == 0)||| 14 return A;||| 15 else||| 16 return GCD(B, A % B);||| 17 }||| 18 bool vowl(char c) {||| 19 return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';||| 20 }||| 21 long long modInverse(long long A, long long M) {||| 22 return fastpower(A, M - 2, M);||| 23 }||| 24 void sieve(long long N) {||| 25 bool isPrime[N + 1];||| 26 for (long long i = 0; i <= N; ++i) {||| 27 isPrime[i] = true;||| 28 }||| 29 isPrime[0] = false;||| 30 isPrime[1] = false;||| 31 for (long long i = 2; i * i <= N; ++i) {||| 32 if (isPrime[i] == true) {||| 33 for (long long j = i * i; j <= N; j += i) isPrime[j] = false;||| 34 }||| 35 }||| 36 }||| 37 vector<long long> factorize(long long n) {||| 38 vector<long long> res;||| 39 for (long long i = 2; i * i <= n; ++i) {||| 40 while (n % i == 0) {||| 41 res.push_back(i);||| 42 n /= i;||| 43 }||| 44 }||| 45 if (n != 1) {||| 46 res.push_back(n);||| 47 }||| 48 return res;||| 49 }||| 50 int main() {||| 51 ios_base::sync_with_stdio(0);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 long long t;||| 55 cin >> t;||| 56 while (t--) {||| 57 long long n;||| 58 cin >> n;||| 59 long long arr[n];||| 60 for (long long i = 0; i < n; i++) cin >> arr[i];||| 61 long long one = 0, zero = 0;||| 62 for (long long i = 0; i < n; i++) {||| 63 if (arr[i] == 1) one++;||| 64 if (arr[i] == 0) zero++;||| 65 }||| 66 long long ans = ((long long)1 << zero);||| 67 ans *= (long long)one;||| 68 cout << ans << endl;||| 69 }||| 70 return 0;||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e9 + 7;||| 4 long long fastpower(long long x, long long n, long long M) {||| 5 if (n == 0)||| 6 return 1;||| 7 else if (n % 2 == 0)||| 8 return fastpower((x * x) % M, n / 2, M);||| 9 else||| 10 return (x * fastpower((x * x) % M, (n - 1) / 2, M)) % M;||| 11 }||| 12 long long GCD(long long A, long long B) {||| 13 if (B == 0)||| 14 return A;||| 15 else||| 16 return GCD(B, A % B);||| 17 }||| 18 bool vowl(char c) {||| 19 return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';||| 20 }||| 21 long long modInverse(long long A, long long M) {||| 22 return fastpower(A, M - 2, M);||| 23 }||| 24 void sieve(long long N) {||| 25 bool isPrime[N + 1];||| 26 for (long long i = 0; i <= N; ++i) {||| 27 isPrime[i] = true;||| 28 }||| 29 isPrime[0] = false;||| 30 isPrime[1] = false;||| 31 for (long long i = 2; i * i <= N; ++i) {||| 32 if (isPrime[i] == true) {||| 33 for (long long j = i * i; j <= N; j += i) isPrime[j] = false;||| 34 }||| 35 }||| 36 }||| 37 vector<long long> factorize(long long n) {||| 38 vector<long long> res;||| 39 for (long long i = 2; i * i <= n; ++i) {||| 40 while (n % i == 0) {||| 41 res.push_back(i);||| 42 n /= i;||| 43 }||| 44 }||| 45 if (n != 1) {||| 46 res.push_back(n);||| 47 }||| 48 return res;||| 49 }||| 50 int main() {||| 51 ios_base::sync_with_stdio(0);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 long long t;||| 55 cin >> t;||| 56 while (t--) {||| 57 long long n;||| 58 cin >> n;||| 59 long long arr[n];||| 60 for (long long i = 0; i < n; i++) cin >> arr[i];||| 61 long long one = 0, zero = 0;||| 62 for (long long i = 0; i < n; i++) {||| 63 if (arr[i] == 1) one++;||| 64 if (arr[i] == 0) zero++;||| 65 }||| 66 long long ans = ((long long)(1 << zero));||| 67 ans *= (long long)one;||| 68 cout << ans << endl;||| 69 }||| 70 return 0;||| 71 }||| 	66 long long ans = ((long long)1 << zero);
30	179	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int MAX = 2 * 1e5;||| 5 void solve() {||| 6 long long n;||| 7 cin >> n;||| 8 string s;||| 9 cin >> s;||| 10 string alpha = ""abcdefghijklmnopqrstuvwxyz"";||| 11 int ans = INT_MAX;||| 12 for (long long i = 0; i < 26; i++) {||| 13 int l = 0;||| 14 int r = n - 1;||| 15 int cnt = 0;||| 16 bool flag = true;||| 17 while (l <= r) {||| 18 if (s[l] == s[r]) {||| 19 l = l + 1;||| 20 r = r - 1;||| 21 } else {||| 22 if (s[l] == alpha[i]) {||| 23 l = l + 1;||| 24 cnt++;||| 25 } else if (s[r] == alpha[i]) {||| 26 r = r - 1;||| 27 cnt++;||| 28 } else {||| 29 flag = false;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 if (flag) {||| 35 ans = min(ans, cnt);||| 36 }||| 37 }||| 38 if (ans == INT_MAX)||| 39 cout << -1 << endl;||| 40 else||| 41 cout << ans << endl;||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 cout.tie(0);||| 47 int t = 1;||| 48 cin >> t;||| 49 while (t--) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int MAX = 2 * 1e5;||| 5 void solve() {||| 6 long long n;||| 7 cin >> n;||| 8 string s;||| 9 cin >> s;||| 10 string alpha = ""abcdefghijklmnopqrstuvwxyz"";||| 11 int ans = INT_MAX;||| 12 for (long long i = 0; i < 26; i++) {||| 13 int l = 0;||| 14 int r = n - 1;||| 15 int cnt = 0;||| 16 bool flag = true;||| 17 while (l <= r) {||| 18 if (s[l] == s[r]) {||| 19 l = l + 1;||| 20 r = r - 1;||| 21 } else {||| 22 if (s[l] == s[i]) {||| 23 l = l + 1;||| 24 cnt++;||| 25 } else if (s[r] == s[i]) {||| 26 r = r - 1;||| 27 cnt++;||| 28 } else {||| 29 flag = false;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 if (flag) {||| 35 ans = min(ans, cnt);||| 36 }||| 37 }||| 38 if (ans == INT_MAX)||| 39 cout << -1 << endl;||| 40 else||| 41 cout << ans << endl;||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 cout.tie(0);||| 47 int t = 1;||| 48 cin >> t;||| 49 while (t--) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	22 if (s[l] == alpha[i]) {
30	118	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, ans = 1e9 + 7;||| 5 string s;||| 6 cin >> n >> s;||| 7 bool flag = 1, f = 0;||| 8 for (long long i = 0; i < n / 2; ++i) {||| 9 if (s[i] != s[n - i - 1]) {||| 10 flag = 0;||| 11 break;||| 12 }||| 13 }||| 14 if (flag) {||| 15 cout << ""0\n"";||| 16 return;||| 17 }||| 18 for (long long i = 0; i < 26; ++i) {||| 19 string tmp = """";||| 20 vector<long long> v, p;||| 21 map<long long, long long> mp;||| 22 flag = 0;||| 23 for (long long j = 0; j < n; ++j) {||| 24 if (s[j] == i + 'a')||| 25 p.push_back(j);||| 26 else||| 27 tmp += s[j], v.push_back(j);||| 28 }||| 29 long long k = v.size(), cnt = p.size();||| 30 for (long long j = 0; j < k / 2; ++j) {||| 31 if (tmp[j] != tmp[k - j - 1]) {||| 32 flag = 1;||| 33 break;||| 34 }||| 35 }||| 36 if (flag) continue;||| 37 for (long long x : p) {||| 38 long long a = lower_bound(v.begin(), v.end(), x) - v.begin();||| 39 if (k % 2 == 0 && a == k / 2) {||| 40 --cnt;||| 41 continue;||| 42 }||| 43 if (a > k / 2) {||| 44 a = k - a;||| 45 if (mp[a]) {||| 46 --mp[a];||| 47 cnt -= 2;||| 48 }||| 49 } else {||| 50 ++mp[a];||| 51 }||| 52 }||| 53 ans = min(ans, cnt);||| 54 f = 1;||| 55 }||| 56 if (f)||| 57 cout << ans << '\n';||| 58 else||| 59 cout << ""-1\n"";||| 60 }||| 61 signed main() {||| 62 ios::sync_with_stdio(0);||| 63 cin.tie(0);||| 64 cout.tie(0);||| 65 long long t = 1;||| 66 cin >> t;||| 67 while (t--) solve();||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, ans = 1e9 + 7;||| 5 string s;||| 6 cin >> n >> s;||| 7 bool flag = 1, f = 0;||| 8 for (long long i = 0; i < n / 2; ++i) {||| 9 if (s[i] != s[n - i - 1]) {||| 10 flag = 0;||| 11 break;||| 12 }||| 13 }||| 14 if (flag) {||| 15 cout << ""0\n"";||| 16 return;||| 17 }||| 18 for (long long i = 0; i < 26; ++i) {||| 19 string tmp = """";||| 20 vector<long long> v, p;||| 21 map<long long, long long> mp;||| 22 flag = 0;||| 23 for (long long j = 0; j < n; ++j) {||| 24 if (s[j] == i + 'a')||| 25 p.push_back(j);||| 26 else||| 27 tmp += s[j], v.push_back(j);||| 28 }||| 29 long long k = v.size(), cnt = p.size();||| 30 for (long long j = 0; j < k / 2; ++j) {||| 31 if (tmp[j] != tmp[k - j - 1]) {||| 32 flag = 1;||| 33 break;||| 34 }||| 35 }||| 36 if (flag) continue;||| 37 for (long long x : p) {||| 38 long long a = lower_bound(v.begin(), v.end(), x) - v.begin();||| 39 if (k % 2 && a == k / 2) {||| 40 --cnt;||| 41 continue;||| 42 }||| 43 if (a > k / 2) {||| 44 a = k - a;||| 45 if (mp[a]) {||| 46 --mp[a];||| 47 cnt -= 2;||| 48 }||| 49 } else {||| 50 ++mp[a];||| 51 }||| 52 }||| 53 ans = min(ans, cnt);||| 54 f = 1;||| 55 }||| 56 if (f)||| 57 cout << ans << '\n';||| 58 else||| 59 cout << ""-1\n"";||| 60 }||| 61 signed main() {||| 62 ios::sync_with_stdio(0);||| 63 cin.tie(0);||| 64 cout.tie(0);||| 65 long long t = 1;||| 66 cin >> t;||| 67 while (t--) solve();||| 68 }||| "	39 if (k % 2 == 0 && a == k / 2) {
30	138	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 string s;||| 5 int solve(char c) {||| 6 int l = 0, r = n - 1;||| 7 int ret = 0;||| 8 while (l < r) {||| 9 if (s[l] != s[r]) {||| 10 if (s[l] == c) {||| 11 l++;||| 12 ret++;||| 13 continue;||| 14 } else if (s[r] == c) {||| 15 r--;||| 16 ret++;||| 17 continue;||| 18 } else||| 19 return -1;||| 20 }||| 21 l++;||| 22 r--;||| 23 }||| 24 return ret;||| 25 }||| 26 int main(void) {||| 27 ios::sync_with_stdio(false);||| 28 int t;||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n >> s;||| 32 int ans = n + 9;||| 33 int temp;||| 34 for (char c = 'a'; c <= 'z'; c++) {||| 35 temp = solve(c);||| 36 if (temp >= 0) ans = min(ans, temp);||| 37 }||| 38 if (ans > n)||| 39 cout << -1 << endl;||| 40 else||| 41 cout << ans << endl;||| 42 }||| 43 return 0;||| 44 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 string s;||| 5 int solve(char c) {||| 6 int l = 0, r = n - 1;||| 7 int ret = 0;||| 8 while (l < r) {||| 9 if (s[l] != s[r]) {||| 10 if (s[l] == c) {||| 11 l++;||| 12 ret++;||| 13 continue;||| 14 } else if (s[r] == c) {||| 15 r--;||| 16 ret++;||| 17 } else||| 18 return -1;||| 19 }||| 20 l++;||| 21 r--;||| 22 }||| 23 return ret;||| 24 }||| 25 int main(void) {||| 26 ios::sync_with_stdio(false);||| 27 int t;||| 28 cin >> t;||| 29 while (t--) {||| 30 cin >> n >> s;||| 31 int ans = n + 9;||| 32 int temp;||| 33 for (char c = 'a'; c <= 'z'; c++) {||| 34 temp = solve(c);||| 35 if (temp >= 0) ans = min(ans, temp);||| 36 }||| 37 if (ans > n)||| 38 cout << -1 << endl;||| 39 else||| 40 cout << ans << endl;||| 41 }||| 42 return 0;||| 43 }||| 	17 continue;
30	151	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char A[100005];||| 4 int main() {||| 5 int T;||| 6 scanf(""%d"", &T);||| 7 while (T--) {||| 8 int n, ans = 1e9;||| 9 scanf(""%d"", &n);||| 10 scanf(""%s"", A + 1);||| 11 for (int i = 0; i <= 26; i++) {||| 12 int l = 1, r = n, key = 0;||| 13 bool f = 1;||| 14 while (l < r) {||| 15 int a1, a2;||| 16 a1 = a2 = 0;||| 17 while (A[l] == i + 'a' - 1 && l <= r) l++, a1++;||| 18 while (A[r] == i + 'a' - 1 && l <= r) r--, a2++;||| 19 if (l > r) break;||| 20 key += abs(a1 - a2);||| 21 if (A[l] != A[r]) {||| 22 f = 0;||| 23 break;||| 24 }||| 25 l++, r--;||| 26 }||| 27 if (f) {||| 28 ans = min(ans, key);||| 29 }||| 30 }||| 31 if (ans == 1e9)||| 32 puts(""-1"");||| 33 else||| 34 printf(""%d\n"", ans);||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char A[100005];||| 4 int main() {||| 5 int T;||| 6 scanf(""%d"", &T);||| 7 while (T--) {||| 8 int n, ans = 1e9;||| 9 scanf(""%d"", &n);||| 10 scanf(""%s"", A + 1);||| 11 for (int i = 0; i <= 26; i++) {||| 12 int l = 1, r = n, key = 0;||| 13 bool f = 1;||| 14 while (l < r) {||| 15 int a1, a2;||| 16 a1 = a2 = 0;||| 17 while (A[l] == i + 'a' - 1 && l <= r) l++, a1++;||| 18 while (A[r] == i + 'a' - 1 && l <= r) r--, a2++;||| 19 if (l >= r) break;||| 20 key += abs(a1 - a2);||| 21 if (A[l] != A[r]) {||| 22 f = 0;||| 23 break;||| 24 }||| 25 l++, r--;||| 26 }||| 27 if (f) {||| 28 ans = min(ans, key);||| 29 }||| 30 }||| 31 if (ans == 1e9)||| 32 puts(""-1"");||| 33 else||| 34 printf(""%d\n"", ans);||| 35 }||| 36 return 0;||| 37 }||| "	19 if (l > r) break;
30	4	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 char l;||| 5 int s, e, t, n, ans, mn = 0, flag = 0;||| 6 ;||| 7 string str;||| 8 cin >> t;||| 9 for (int q = 0; q < t; q++) {||| 10 cin >> n;||| 11 cin >> str;||| 12 mn = 100000;||| 13 for (int i = 0; i < 26; i++) {||| 14 ans = 0;||| 15 l = 'a' + i;||| 16 s = 0;||| 17 e = n - 1;||| 18 flag = 0;||| 19 while (e - s > 0) {||| 20 if (str[s] == str[e]) {||| 21 s++;||| 22 e--;||| 23 } else if (str[s] == l) {||| 24 s++;||| 25 ans++;||| 26 } else if (str[e] == l) {||| 27 e--;||| 28 ans++;||| 29 } else {||| 30 flag = 1;||| 31 break;||| 32 }||| 33 }||| 34 if (flag == 0) {||| 35 if (ans < mn) {||| 36 mn = ans;||| 37 }||| 38 }||| 39 }||| 40 if (mn != 100000) {||| 41 cout << mn << ""\n"";||| 42 } else {||| 43 cout << ""-1\n"";||| 44 }||| 45 }||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 char l;||| 5 int s, e, t, n, ans, mn = 0, flag = 0;||| 6 ;||| 7 string str;||| 8 cin >> t;||| 9 for (int q = 0; q < t; q++) {||| 10 cin >> n;||| 11 cin >> str;||| 12 mn = 100000;||| 13 for (int i = 0; i < 26; i++) {||| 14 ans = 0;||| 15 l = 'a' + i;||| 16 s = 0;||| 17 e = n - 1;||| 18 flag = 0;||| 19 while (e - s > 1) {||| 20 if (str[s] == str[e]) {||| 21 s++;||| 22 e--;||| 23 } else if (str[s] == l) {||| 24 s++;||| 25 ans++;||| 26 } else if (str[e] == l) {||| 27 e--;||| 28 ans++;||| 29 } else {||| 30 flag = 1;||| 31 break;||| 32 }||| 33 }||| 34 if (flag == 0) {||| 35 if (ans < mn) {||| 36 mn = ans;||| 37 }||| 38 }||| 39 }||| 40 if (mn != 100000) {||| 41 cout << mn << ""\n"";||| 42 } else {||| 43 cout << ""-1\n"";||| 44 }||| 45 }||| 46 }||| "	19 while (e - s > 0) {
30	66	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = (x << 1) + (x << 3) + (ch ^ 48);||| 12 ch = getchar();||| 13 }||| 14 return x * f;||| 15 }||| 16 const int N = 1e5 + 10;||| 17 const int inf = 1e9;||| 18 int T;||| 19 int n;||| 20 char s[N];||| 21 int ans;||| 22 int main() {||| 23 T = read();||| 24 while (T--) {||| 25 n = read();||| 26 int L = 1, R = n;||| 27 scanf(""%s"", s + 1);||| 28 while (s[L] == s[R]) {||| 29 L++;||| 30 R--;||| 31 }||| 32 if (L >= R) {||| 33 printf(""0\n"");||| 34 continue;||| 35 }||| 36 ans = inf;||| 37 char p = s[L];||| 38 int l = L + 1, r = R, tmp = 1;||| 39 while (l < r) {||| 40 if (s[l] == s[r]) {||| 41 l++;||| 42 r--;||| 43 } else {||| 44 if (s[l] == p) {||| 45 l++;||| 46 tmp++;||| 47 } else if (s[r] == p) {||| 48 r--;||| 49 tmp++;||| 50 } else {||| 51 tmp = inf;||| 52 break;||| 53 }||| 54 }||| 55 }||| 56 ans = min(ans, tmp);||| 57 p = s[R];||| 58 l = L, r = R - 1, tmp = 1;||| 59 while (l < r) {||| 60 if (s[l] == s[r]) {||| 61 l++;||| 62 r--;||| 63 } else {||| 64 if (s[l] == p) {||| 65 l++;||| 66 tmp++;||| 67 } else if (s[r] == p) {||| 68 r--;||| 69 tmp++;||| 70 } else {||| 71 tmp = inf;||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 ans = min(ans, tmp);||| 77 printf(""%d\n"", ans == inf ? -1 : ans);||| 78 }||| 79 return 0;||| 80 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = (x << 1) + (x << 3) + (ch ^ 48);||| 12 ch = getchar();||| 13 }||| 14 return x * f;||| 15 }||| 16 const int N = 1e5 + 10;||| 17 const int inf = 1e9;||| 18 int T;||| 19 int n;||| 20 char s[N];||| 21 int ans;||| 22 int main() {||| 23 T = read();||| 24 while (T--) {||| 25 n = read();||| 26 int L = 1, R = n;||| 27 scanf(""%s"", s + 1);||| 28 while (s[L] == s[R]) {||| 29 L++;||| 30 R--;||| 31 }||| 32 if (L >= R) {||| 33 printf(""0\n"");||| 34 continue;||| 35 }||| 36 ans = inf;||| 37 char p = s[L];||| 38 int l = L + 1, r = R, tmp = 1;||| 39 while (l < r) {||| 40 if (s[l] == s[r]) {||| 41 l++;||| 42 r--;||| 43 } else {||| 44 if (s[l] == p) {||| 45 l++;||| 46 tmp++;||| 47 } else if (s[r] == p) {||| 48 r++;||| 49 tmp++;||| 50 } else {||| 51 tmp = inf;||| 52 break;||| 53 }||| 54 }||| 55 }||| 56 ans = min(ans, tmp);||| 57 p = s[R];||| 58 l = L, r = R - 1, tmp = 1;||| 59 while (l < r) {||| 60 if (s[l] == s[r]) {||| 61 l++;||| 62 r--;||| 63 } else {||| 64 if (s[l] == p) {||| 65 l++;||| 66 tmp++;||| 67 } else if (s[r] == p) {||| 68 r++;||| 69 tmp++;||| 70 } else {||| 71 tmp = inf;||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 ans = min(ans, tmp);||| 77 printf(""%d\n"", ans == inf ? -1 : ans);||| 78 }||| 79 return 0;||| 80 }||| "	48 r--;
31	458	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 signed long long power_binaryexp(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b > 0) {||| 7 if (b & 1) {||| 8 ans = (ans * a);||| 9 }||| 10 a = (a * a);||| 11 b = b >> 1;||| 12 }||| 13 return ans;||| 14 }||| 15 signed long long binarymul(long long a, long long b) {||| 16 long long ans = 0;||| 17 while (b) {||| 18 if (b & 1) {||| 19 ans = ans + a;||| 20 }||| 21 a += a;||| 22 b >>= 1;||| 23 }||| 24 return ans;||| 25 }||| 26 bool is_prime(long long n) {||| 27 if (n <= 1) return false;||| 28 if (n <= 3) return true;||| 29 if (n % 2 == 0 || n % 3 == 0) return false;||| 30 for (long long i = 5; i * i <= n; i = i + 6)||| 31 if (n % i == 0 || n % (i + 2) == 0) return false;||| 32 return true;||| 33 }||| 34 bool compare(pair<long long, long long> p1, pair<long long, long long> p2) {||| 35 return p1.second > p2.second;||| 36 }||| 37 bool checkp(string s) {||| 38 long long n = s.length();||| 39 for (long long i = 0; i < n / 2; i++) {||| 40 if (s[i] != s[n - i - 1]) return false;||| 41 }||| 42 return true;||| 43 }||| 44 signed main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 cout.tie(NULL);||| 48 long long ttt;||| 49 cin >> ttt;||| 50 while (ttt--) {||| 51 long long n;||| 52 cin >> n;||| 53 vector<long long> v(n);||| 54 long long sum = 0;||| 55 long long s = 0;||| 56 for (long long i = 0; i < n; i++) {||| 57 cin >> v[i];||| 58 }||| 59 vector<long long> v1(n);||| 60 if (n & 1) {||| 61 if (v[1] < 0)||| 62 v1[1] = -abs(v[0]);||| 63 else||| 64 v1[1] = abs(v[0]);||| 65 if (v[2] < 0)||| 66 v1[2] = -abs(v[0]);||| 67 else||| 68 v1[2] = abs(v[0]);||| 69 s = (v[1] * v1[1] + v1[2] * v[2]);||| 70 if (v[0] < 0) {||| 71 s = -s;||| 72 v[0] = -v[0];||| 73 }||| 74 v1[0] = -s / v[0];||| 75 if (v[0] < 0) n = -n;||| 76 for (long long i = 3; i < n; i += 2) {||| 77 v1[i] = v[i + 1];||| 78 v1[i + 1] = -v[i];||| 79 }||| 80 } else {||| 81 for (long long i = 0; i < n; i += 2) {||| 82 v1[i] = v[i + 1];||| 83 v1[i + 1] = -v[i];||| 84 }||| 85 }||| 86 for (auto x : v1) {||| 87 cout << x << "" "";||| 88 }||| 89 cout << endl;||| 90 }||| 91 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 signed long long power_binaryexp(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b > 0) {||| 7 if (b & 1) {||| 8 ans = (ans * a);||| 9 }||| 10 a = (a * a);||| 11 b = b >> 1;||| 12 }||| 13 return ans;||| 14 }||| 15 signed long long binarymul(long long a, long long b) {||| 16 long long ans = 0;||| 17 while (b) {||| 18 if (b & 1) {||| 19 ans = ans + a;||| 20 }||| 21 a += a;||| 22 b >>= 1;||| 23 }||| 24 return ans;||| 25 }||| 26 bool is_prime(long long n) {||| 27 if (n <= 1) return false;||| 28 if (n <= 3) return true;||| 29 if (n % 2 == 0 || n % 3 == 0) return false;||| 30 for (long long i = 5; i * i <= n; i = i + 6)||| 31 if (n % i == 0 || n % (i + 2) == 0) return false;||| 32 return true;||| 33 }||| 34 bool compare(pair<long long, long long> p1, pair<long long, long long> p2) {||| 35 return p1.second > p2.second;||| 36 }||| 37 bool checkp(string s) {||| 38 long long n = s.length();||| 39 for (long long i = 0; i < n / 2; i++) {||| 40 if (s[i] != s[n - i - 1]) return false;||| 41 }||| 42 return true;||| 43 }||| 44 signed main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 cout.tie(NULL);||| 48 long long ttt;||| 49 cin >> ttt;||| 50 while (ttt--) {||| 51 long long n;||| 52 cin >> n;||| 53 vector<long long> v(n);||| 54 long long sum = 0;||| 55 long long s = 0;||| 56 for (long long i = 0; i < n; i++) {||| 57 cin >> v[i];||| 58 }||| 59 vector<long long> v1(n);||| 60 if (n & 1) {||| 61 if (v[1] < 0)||| 62 v1[1] = -abs(v[0]);||| 63 else||| 64 v1[1] = abs(v[0]);||| 65 if (v[2] < 0)||| 66 v1[2] = -abs(v[0]);||| 67 else||| 68 v1[2] = abs(v[0]);||| 69 s = (v[1] * v[1] + v1[2] * v[2]);||| 70 if (v[0] < 0) {||| 71 s = -s;||| 72 v[0] = -v[0];||| 73 }||| 74 v1[0] = -s / v[0];||| 75 if (v[0] < 0) n = -n;||| 76 for (long long i = 3; i < n; i += 2) {||| 77 v1[i] = v[i + 1];||| 78 v1[i + 1] = -v[i];||| 79 }||| 80 } else {||| 81 for (long long i = 0; i < n; i += 2) {||| 82 v1[i] = v[i + 1];||| 83 v1[i + 1] = -v[i];||| 84 }||| 85 }||| 86 for (auto x : v1) {||| 87 cout << x << "" "";||| 88 }||| 89 cout << endl;||| 90 }||| 91 }||| "	69 s = (v[1] * v1[1] + v1[2] * v[2]);
31	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long arr[n];||| 13 for (long long i = 0; i < n; i++) {||| 14 cin >> arr[i];||| 15 }||| 16 long long b[n];||| 17 if (n % 2 == 0) {||| 18 for (long long i = 0; i < n - 1; i = i + 2) {||| 19 b[i] = arr[i + 1];||| 20 b[i + 1] = -1 * arr[i];||| 21 }||| 22 for (long long i = 0; i < n; i++) {||| 23 cout << b[i] << "" "";||| 24 }||| 25 cout << ""\n"";||| 26 } else {||| 27 for (long long i = 3; i < n - 1; i = i + 2) {||| 28 b[i] = arr[i + 1];||| 29 b[i + 1] = -1 * arr[i];||| 30 }||| 31 if (arr[0] + arr[1] != 0) {||| 32 cout << -arr[2] << "" "" << -arr[2] << "" "" << arr[0] + arr[1] << "" "";||| 33 } else if (arr[1] + arr[2] != 0) {||| 34 cout << arr[1] + arr[2] << "" "" << -arr[0] << "" "" << -arr[0] << "" "";||| 35 } else {||| 36 cout << -arr[1] << "" "" << arr[0] + arr[2] << "" "" << -arr[1] << "" "";||| 37 }||| 38 for (long long i = 3; i < n; i++) {||| 39 cout << b[i] << "" "";||| 40 }||| 41 cout << ""\n"";||| 42 }||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long arr[n];||| 13 for (long long i = 0; i < n; i++) {||| 14 cin >> arr[i];||| 15 }||| 16 long long b[n];||| 17 if (n % 2 == 0) {||| 18 for (long long i = 0; i < n - 1; i = i + 2) {||| 19 b[i] = arr[i + 1];||| 20 b[i + 1] = -1 * arr[i];||| 21 }||| 22 for (long long i = 0; i < n; i++) {||| 23 cout << b[i] << "" "";||| 24 }||| 25 cout << ""\n"";||| 26 } else {||| 27 for (long long i = 3; i < n - 1; i = i + 2) {||| 28 b[i] = arr[i + 1];||| 29 b[i + 1] = -1 * arr[i];||| 30 }||| 31 if (arr[0] + arr[1] != 0) {||| 32 cout << -arr[2] << "" "" << -arr[2] << "" "" << arr[0] + arr[1] << "" "";||| 33 } else if (arr[1] + arr[2] != 0) {||| 34 cout << arr[1] + arr[2] << "" "" << -arr[0] << "" "" << -arr[0] << "" "";||| 35 } else {||| 36 cout << -arr[1] << "" "" << arr[1] + arr[3] << "" "" << -arr[1] << "" "";||| 37 }||| 38 for (long long i = 3; i < n; i++) {||| 39 cout << b[i] << "" "";||| 40 }||| 41 cout << ""\n"";||| 42 }||| 43 }||| 44 return 0;||| 45 }||| "	"36 cout << -arr[1] << "" "" << arr[0] + arr[2] << "" "" << -arr[1] << "" "";"
31	426	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 void solve() {||| 5 long long n;||| 6 cin >> n;||| 7 vector<long long> a(n);||| 8 for (long long i = 0; i < n; ++i) {||| 9 cin >> a[i];||| 10 }||| 11 if (n % 2 == 0) {||| 12 for (long long i = 0; i < n; i += 2) {||| 13 cout << -a[i + 1] << "" "" << a[i] << "" "";||| 14 }||| 15 cout << '\n';||| 16 return;||| 17 }||| 18 for (long long i = 0; i < n - 3; i += 2) {||| 19 cout << -a[i + 1] << "" "" << a[i] << "" "";||| 20 }||| 21 if (a[n - 1] + a[n - 2] != 0) {||| 22 cout << (a[n - 1] + a[n - 2]) << "" "" << -a[n - 3] << "" "" << -a[n - 3]||| 23 << '\n';||| 24 return;||| 25 }||| 26 if (a[n - 3] + a[n - 2] != 0) {||| 27 cout << -a[n - 1] << "" "" << -a[n - 1] << "" "" << (a[n - 3] + a[n - 2])||| 28 << '\n';||| 29 return;||| 30 }||| 31 if (a[n - 1] + a[n - 3] != 0) {||| 32 cout << -a[n - 2] << "" "" << (a[n - 1] + a[n - 3]) << "" "" << -a[n - 2]||| 33 << '\n';||| 34 return;||| 35 }||| 36 }||| 37 signed main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 long long t = 1;||| 41 cin >> t;||| 42 for (long long i = 1; i <= t; i++) {||| 43 solve();||| 44 }||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 void solve() {||| 5 long long n;||| 6 cin >> n;||| 7 vector<long long> a(n);||| 8 for (long long i = 0; i < n; ++i) {||| 9 cin >> a[i];||| 10 }||| 11 if (n % 2 == 0) {||| 12 for (long long i = 0; i < n; i += 2) {||| 13 cout << -a[i + 1] << "" "" << -a[i] << "" "";||| 14 }||| 15 cout << '\n';||| 16 return;||| 17 }||| 18 for (long long i = 0; i < n - 3; i += 2) {||| 19 cout << -a[i + 1] << "" "" << -a[i] << "" "";||| 20 }||| 21 if (a[n - 1] + a[n - 2] != 0) {||| 22 cout << (a[n - 1] + a[n - 2]) << "" "" << -a[n - 3] << "" "" << -a[n - 3]||| 23 << '\n';||| 24 return;||| 25 }||| 26 if (a[n - 3] + a[n - 2] != 0) {||| 27 cout << -a[n - 1] << "" "" << -a[n - 1] << "" "" << (a[n - 3] + a[n - 2])||| 28 << '\n';||| 29 return;||| 30 }||| 31 if (a[n - 1] + a[n - 3] != 0) {||| 32 cout << -a[n - 2] << "" "" << (a[n - 1] + a[n - 3]) << "" "" << -a[n - 2]||| 33 << '\n';||| 34 return;||| 35 }||| 36 }||| 37 signed main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 long long t = 1;||| 41 cin >> t;||| 42 for (long long i = 1; i <= t; i++) {||| 43 solve();||| 44 }||| 45 }||| "	"13 cout << -a[i + 1] << "" "" << a[i] << "" "";"
31	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int a[100010];||| 5 void solve() {||| 6 cin >> n;||| 7 for (int i = 1; i <= n; i++) cin >> a[i];||| 8 if (n % 2 == 0) {||| 9 for (int i = 1; i <= n; i++) {||| 10 if (i % 2 == 0)||| 11 cout << a[i - 1] << "" "";||| 12 else||| 13 cout << -1 * a[i + 1] << "" "";||| 14 }||| 15 cout << endl;||| 16 } else {||| 17 for (int i = 1; i + 3 <= n; i++) {||| 18 if (i % 2 == 0)||| 19 cout << a[i - 1] << "" "";||| 20 else||| 21 cout << -1 * a[i + 1] << "" "";||| 22 }||| 23 int x, y;||| 24 if (a[n - 2] + a[n - 1] + a[n] == 0) {||| 25 cout << 1 << "" "" << 1 << "" "" << 1 << endl;||| 26 return;||| 27 }||| 28 if (a[n - 2] + a[n - 1] != 0) {||| 29 x = a[n - 2] + a[n - 1];||| 30 y = a[n];||| 31 cout << y << "" "" << y << "" ""||| 32 << "" "" << -1 * x << endl;||| 33 } else if (a[n - 1] + a[n] != 0) {||| 34 x = a[n - 1] + a[n];||| 35 y = a[n - 2];||| 36 cout << -1 * x << "" "" << y << "" "" << y << endl;||| 37 } else {||| 38 x = a[n - 2] + a[n];||| 39 y = a[n - 1];||| 40 cout << y << "" "" << -1 * x << "" "" << y << endl;||| 41 }||| 42 }||| 43 }||| 44 int main() {||| 45 int T = 1;||| 46 ios::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 cin >> T;||| 50 while (T--) {||| 51 solve();||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int a[100010];||| 5 void solve() {||| 6 cin >> n;||| 7 for (int i = 1; i <= n; i++) cin >> a[i];||| 8 if (n % 2 == 0) {||| 9 for (int i = 1; i <= n; i++) {||| 10 if (i % 2 == 0)||| 11 cout << a[i - 1] << "" "";||| 12 else||| 13 cout << -1 * a[i + 1] << "" "";||| 14 }||| 15 cout << endl;||| 16 } else {||| 17 for (int i = 1; i + 3 <= n; i++) {||| 18 if (i % 2 == 0)||| 19 cout << a[i - 1] << "" "";||| 20 else||| 21 cout << -1 * a[i + 1] << "" "";||| 22 }||| 23 int x, y;||| 24 if (a[n - 2] + a[n - 1] + a[n] == 0) {||| 25 cout << 1 << "" "" << 1 << "" "" << 1 << endl;||| 26 return;||| 27 }||| 28 if (a[n - 2] + a[n - 1] != 0) {||| 29 x = a[n - 2] + a[n - 1];||| 30 y = a[n];||| 31 cout << y << "" "" << y << "" ""||| 32 << "" "" << -1 * x << endl;||| 33 } else if (a[n - 2] + a[n] != 0) {||| 34 x = a[n - 1] + a[n];||| 35 y = a[n - 2];||| 36 cout << -1 * x << "" "" << y << "" "" << y << endl;||| 37 } else {||| 38 x = a[n - 2] + a[n];||| 39 y = a[n - 1];||| 40 cout << y << "" "" << -1 * x << "" "" << y << endl;||| 41 }||| 42 }||| 43 }||| 44 int main() {||| 45 int T = 1;||| 46 ios::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 cin >> T;||| 50 while (T--) {||| 51 solve();||| 52 }||| 53 return 0;||| 54 }||| "	33 } else if (a[n - 1] + a[n] != 0) {
31	55	1 #include <bits/stdc++.h>||| 2 const int N = 1e5 + 5;||| 3 const int mod = 1e9 + 7;||| 4 const long long int int_max = 1e18;||| 5 const long long int int_min = -1e18;||| 6 const long double PI = acos(-1);||| 7 using namespace std;||| 8 void solve() {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int a[n + 2];||| 12 for (long long int i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 if (n % 2 == 0) {||| 16 for (long long int i = 1; i <= n; i++) {||| 17 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 18 i++;||| 19 }||| 20 cout << '\n';||| 21 return;||| 22 }||| 23 if ((a[1] + a[2]) != 0) {||| 24 cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' ';||| 25 } else if (a[1] + a[3] != 0) {||| 26 cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' ';||| 27 } else {||| 28 cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' ';||| 29 }||| 30 for (long long int i = 4; i <= n; i++) {||| 31 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 32 i++;||| 33 }||| 34 cout << '\n';||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(false), cin.tie(NULL);||| 38 int t;||| 39 cin >> t;||| 40 while (t--) {||| 41 solve();||| 42 }||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 const int N = 1e5 + 5;||| 3 const int mod = 1e9 + 7;||| 4 const long long int int_max = 1e18;||| 5 const long long int int_min = -1e18;||| 6 const long double PI = acos(-1);||| 7 using namespace std;||| 8 void solve() {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int a[n + 2];||| 12 for (long long int i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 if (n % 2 == 0) {||| 16 for (long long int i = 1; i <= n; i++) {||| 17 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 18 i++;||| 19 }||| 20 cout << '\n';||| 21 return;||| 22 }||| 23 if ((a[1] + a[2]) != 0) {||| 24 cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' ';||| 25 } else if (a[1] + a[3] != 0) {||| 26 cout << a[2] << ' ' << -(a[1] + a[2]) << ' ' << a[3] << ' ';||| 27 } else {||| 28 cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' ';||| 29 }||| 30 for (long long int i = 4; i <= n; i++) {||| 31 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 32 i++;||| 33 }||| 34 cout << '\n';||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(false), cin.tie(NULL);||| 38 int t;||| 39 cin >> t;||| 40 while (t--) {||| 41 solve();||| 42 }||| 43 }||| 	26 cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' ';
31	582	1 #include <bits/stdc++.h>||| 2 const int N = 1e5 + 5;||| 3 const int mod = 1e9 + 7;||| 4 const long long int int_max = 1e18;||| 5 const long long int int_min = -1e18;||| 6 const long double PI = acos(-1);||| 7 using namespace std;||| 8 void solve() {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int a[n + 2];||| 12 for (long long int i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 if (n % 2 == 0) {||| 16 for (long long int i = 1; i <= n; i++) {||| 17 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 18 i++;||| 19 }||| 20 cout << '\n';||| 21 return;||| 22 }||| 23 if ((a[1] + a[2]) != 0) {||| 24 cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' ';||| 25 } else if (a[1] + a[3] != 0) {||| 26 cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' ';||| 27 } else {||| 28 cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' ';||| 29 }||| 30 for (long long int i = 4; i <= n; i++) {||| 31 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 32 i++;||| 33 }||| 34 cout << '\n';||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(false), cin.tie(NULL);||| 38 int t;||| 39 cin >> t;||| 40 while (t--) {||| 41 solve();||| 42 }||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 const int N = 1e5 + 5;||| 3 const int mod = 1e9 + 7;||| 4 const long long int int_max = 1e18;||| 5 const long long int int_min = -1e18;||| 6 const long double PI = acos(-1);||| 7 using namespace std;||| 8 void solve() {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int a[n + 2];||| 12 for (long long int i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 if (n % 2 == 0) {||| 16 for (long long int i = 1; i <= n; i++) {||| 17 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 18 i++;||| 19 }||| 20 cout << '\n';||| 21 return;||| 22 }||| 23 if ((a[1] + a[2]) != 0) {||| 24 cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' ';||| 25 } else if (a[1] + a[3] != 0) {||| 26 cout << a[2] << ' ' << -(a[1] + a[2]) << ' ' << a[2] << ' ';||| 27 } else {||| 28 cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' ';||| 29 }||| 30 for (long long int i = 4; i <= n; i++) {||| 31 cout << -a[i + 1] << ' ' << a[i] << ' ';||| 32 i++;||| 33 }||| 34 cout << '\n';||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(false), cin.tie(NULL);||| 38 int t;||| 39 cin >> t;||| 40 while (t--) {||| 41 solve();||| 42 }||| 43 }||| 	26 cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' ';
32	71	"1 #include <bits/stdc++.h>||| 2 const int mod = 998244353;||| 3 const int maxn = 2e5 + 5;||| 4 const long long int INF = 1e18;||| 5 using namespace std;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int tc;||| 11 cin >> tc;||| 12 while (tc--) {||| 13 int n;||| 14 cin >> n;||| 15 vector<int> arr(n);||| 16 vector<long long> prefix(n);||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> arr[i];||| 19 if (i == 0)||| 20 prefix[i] = arr[i];||| 21 else||| 22 prefix[i] = prefix[i - 1] + arr[i];||| 23 }||| 24 if (n == 1) {||| 25 cout << ""1\n"";||| 26 continue;||| 27 }||| 28 int k = 0;||| 29 while (k * (k + 1) <= 2 * n) k++;||| 30 k--;||| 31 vector<vector<long long> > dp(n + 2, vector<long long>(k + 1, -INF));||| 32 dp[n - 1][1] = arr[n - 1];||| 33 dp[n - 1][0] = INF;||| 34 for (int i = n - 1; i >= 0; i--) {||| 35 for (int j = 0; j <= k; j++) {||| 36 if (j && i + j - 1 < n &&||| 37 prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0) <||| 38 dp[i + j][j - 1])||| 39 dp[i][j] = max(dp[i][j],||| 40 prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0));||| 41 dp[i][j] = max(dp[i][j], dp[i + 1][j]);||| 42 }||| 43 }||| 44 int ans = 0;||| 45 for (int j = 0; j <= k; j++) {||| 46 if (dp[0][j] != -INF)||| 47 ans = j;||| 48 else||| 49 break;||| 50 }||| 51 cout << ans << '\n';||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 const int mod = 998244353;||| 3 const int maxn = 2e5 + 5;||| 4 const long long int INF = 1e18;||| 5 using namespace std;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int tc;||| 11 cin >> tc;||| 12 while (tc--) {||| 13 int n;||| 14 cin >> n;||| 15 vector<int> arr(n);||| 16 vector<long long> prefix(n);||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> arr[i];||| 19 if (i == 0)||| 20 prefix[i] = arr[i];||| 21 else||| 22 prefix[i] = prefix[i - 1] + arr[i];||| 23 }||| 24 if (n == 1) {||| 25 cout << ""1\n"";||| 26 continue;||| 27 }||| 28 int k = 0;||| 29 while (k * (k + 1) <= 2 * n) k++;||| 30 k--;||| 31 vector<vector<long long> > dp(n + 2, vector<long long>(k + 1, -INF));||| 32 dp[n - 1][1] = arr[n - 1];||| 33 dp[n - 1][0] = 0;||| 34 for (int i = n - 1; i >= 0; i--) {||| 35 for (int j = 0; j <= k; j++) {||| 36 if (j && i + j - 1 < n &&||| 37 prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0) <||| 38 dp[i + j][j - 1])||| 39 dp[i][j] = max(dp[i][j],||| 40 prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0));||| 41 dp[i][j] = max(dp[i][j], dp[i + 1][j]);||| 42 }||| 43 }||| 44 int ans = 0;||| 45 for (int j = 0; j <= k; j++) {||| 46 if (dp[0][j] != -INF)||| 47 ans = j;||| 48 else||| 49 break;||| 50 }||| 51 cout << ans << '\n';||| 52 }||| 53 return 0;||| 54 }||| "	33 dp[n - 1][0] = INF;
40	98	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 vector<int> graf[300005];||| 5 int cnt[300005];||| 6 pair<int, int> kveri[300005];||| 7 bool vis[300005];||| 8 int cale[300005];||| 9 int disc[300005];||| 10 int out[300005];||| 11 int t;||| 12 void dfs(int u) {||| 13 vis[u] = true;||| 14 disc[u] = t;||| 15 for (int c : graf[u]) {||| 16 if (vis[c]) continue;||| 17 t++;||| 18 cale[c] = u;||| 19 dfs(c);||| 20 }||| 21 out[u] = t;||| 22 }||| 23 bool anc(int x, int y) { return disc[x] <= disc[y] && out[y] <= out[x]; }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 cin >> n >> m;||| 28 for (int(i) = (1); (i) <= (m); ++(i)) {||| 29 int u, v;||| 30 cin >> u >> v;||| 31 graf[u].push_back(v);||| 32 graf[v].push_back(u);||| 33 }||| 34 dfs(1);||| 35 cin >> q;||| 36 for (int(i) = (1); (i) <= (q); ++(i)) {||| 37 cin >> kveri[i].first >> kveri[i].second;||| 38 cnt[kveri[i].first]++;||| 39 cnt[kveri[i].second]++;||| 40 }||| 41 int s = 0;||| 42 for (int(i) = (1); (i) <= (n); ++(i)) s += (cnt[i] & 1);||| 43 if (s) {||| 44 cout << ""NO\n"" << s / 2;||| 45 return 0;||| 46 }||| 47 cout << ""YES\n"";||| 48 for (int(i) = (1); (i) <= (q); ++(i)) {||| 49 int a = kveri[i].first;||| 50 int b = kveri[i].second;||| 51 vector<int> r;||| 52 while (!anc(a, b)) {||| 53 r.push_back(a);||| 54 a = cale[a];||| 55 }||| 56 r.push_back(a);||| 57 vector<int> l;||| 58 while (b != a) {||| 59 l.push_back(b);||| 60 b = cale[b];||| 61 }||| 62 reverse(l.begin(), l.end());||| 63 vector<int> ans;||| 64 for (int c : r) ans.push_back(c);||| 65 for (int c : l) ans.push_back(c);||| 66 cout << ans.size() << ""\n"";||| 67 for (int c : ans) cout << c << "" "";||| 68 cout << ""\n"";||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 vector<int> graf[300005];||| 5 int cnt[300005];||| 6 pair<int, int> kveri[300005];||| 7 bool vis[300005];||| 8 int cale[300005];||| 9 int disc[300005];||| 10 int out[300005];||| 11 int t;||| 12 void dfs(int u) {||| 13 vis[u] = true;||| 14 disc[u] = t;||| 15 for (int c : graf[u]) {||| 16 if (vis[c]) continue;||| 17 t++;||| 18 cale[c] = u;||| 19 dfs(c);||| 20 }||| 21 out[u] = t;||| 22 }||| 23 bool anc(int x, int y) { return disc[x] <= disc[y] && out[y] <= out[x]; }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 cin >> n >> m;||| 28 for (int(i) = (1); (i) <= (m); ++(i)) {||| 29 int u, v;||| 30 cin >> u >> v;||| 31 graf[u].push_back(v);||| 32 graf[v].push_back(u);||| 33 }||| 34 dfs(1);||| 35 cin >> q;||| 36 for (int(i) = (1); (i) <= (q); ++(i)) {||| 37 cin >> kveri[i].first >> kveri[i].second;||| 38 cnt[kveri[i].first]++;||| 39 cnt[kveri[i].second]++;||| 40 }||| 41 int s = 0;||| 42 for (int(i) = (1); (i) <= (n); ++(i)) s += (cnt[i] & 1);||| 43 if (s) {||| 44 cout << ""NO\n"" << s;||| 45 return 0;||| 46 }||| 47 cout << ""YES\n"";||| 48 for (int(i) = (1); (i) <= (q); ++(i)) {||| 49 int a = kveri[i].first;||| 50 int b = kveri[i].second;||| 51 vector<int> r;||| 52 while (!anc(a, b)) {||| 53 r.push_back(a);||| 54 a = cale[a];||| 55 }||| 56 r.push_back(a);||| 57 vector<int> l;||| 58 while (b != a) {||| 59 l.push_back(b);||| 60 b = cale[b];||| 61 }||| 62 reverse(l.begin(), l.end());||| 63 vector<int> ans;||| 64 for (int c : r) ans.push_back(c);||| 65 for (int c : l) ans.push_back(c);||| 66 cout << ans.size() << ""\n"";||| 67 for (int c : ans) cout << c << "" "";||| 68 cout << ""\n"";||| 69 }||| 70 return 0;||| 71 }||| "	"44 cout << ""NO\n"" << s / 2;"
40	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10;||| 4 int n, m, qq;||| 5 vector<int> to[N], res[N];||| 6 int sum[N], up[N], dep[N];||| 7 void dfs(int u, int fa) {||| 8 dep[u] = dep[fa] + 1;||| 9 up[u] = fa;||| 10 for (int v : to[u])||| 11 if (v != fa && !dep[v]) dfs(v, u);||| 12 }||| 13 int ss = 0;||| 14 void calc(int u, int fa) {||| 15 if (sum[u] & 1) ++ss;||| 16 for (int v : to[u])||| 17 if (v != fa && dep[v] == dep[u] + 1) calc(v, u);||| 18 }||| 19 void solve() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= m; ++i) {||| 22 int u, v;||| 23 cin >> u >> v;||| 24 to[u].push_back(v);||| 25 to[v].push_back(u);||| 26 }||| 27 dfs(1, 1);||| 28 cin >> qq;||| 29 for (int i = 1; i <= qq; ++i) {||| 30 int u, v;||| 31 cin >> u >> v;||| 32 vector<int> tmp;||| 33 while (dep[v] > dep[u]) {||| 34 tmp.push_back(v);||| 35 v = up[v];||| 36 }||| 37 while (dep[u] > dep[v]) {||| 38 res[i].push_back(u);||| 39 u = up[u];||| 40 }||| 41 while (u != v) {||| 42 res[i].push_back(u);||| 43 tmp.push_back(v);||| 44 u = up[u];||| 45 v = up[v];||| 46 }||| 47 res[i].push_back(u);||| 48 for (int j = tmp.size() - 1; j >= 0; --j) res[i].push_back(tmp[j]);||| 49 for (int j = 0; j < res[i].size(); ++j) {||| 50 if (j != 0 && j != res[i].size() - 1) ++sum[res[i][j]];||| 51 ++sum[res[i][j]];||| 52 }||| 53 }||| 54 calc(1, 1);||| 55 if (ss)||| 56 cout << ""NO\n"" << ss / 2 << '\n';||| 57 else {||| 58 cout << ""YES\n"";||| 59 for (int i = 1; i <= qq; ++i) {||| 60 cout << res[i].size() << '\n';||| 61 for (int j : res[i]) cout << j << ' ';||| 62 cout << '\n';||| 63 }||| 64 }||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(false);||| 68 cin.tie(0);||| 69 cout.tie(0);||| 70 solve();||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10;||| 4 int n, m, qq;||| 5 vector<int> to[N], res[N];||| 6 int sum[N], up[N], dep[N];||| 7 void dfs(int u, int fa) {||| 8 dep[u] = dep[fa] + 1;||| 9 up[u] = fa;||| 10 for (int v : to[u])||| 11 if (v != fa && !dep[v]) dfs(v, u);||| 12 }||| 13 int ss = 0;||| 14 void calc(int u, int fa) {||| 15 if (sum[u] & 1) ++ss;||| 16 for (int v : to[u])||| 17 if (v != fa && dep[v] == dep[u] + 1) calc(v, u);||| 18 }||| 19 void solve() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= n; ++i) {||| 22 int u, v;||| 23 cin >> u >> v;||| 24 to[u].push_back(v);||| 25 to[v].push_back(u);||| 26 }||| 27 dfs(1, 1);||| 28 cin >> qq;||| 29 for (int i = 1; i <= qq; ++i) {||| 30 int u, v;||| 31 cin >> u >> v;||| 32 vector<int> tmp;||| 33 while (dep[v] > dep[u]) {||| 34 tmp.push_back(v);||| 35 v = up[v];||| 36 }||| 37 while (dep[u] > dep[v]) {||| 38 res[i].push_back(u);||| 39 u = up[u];||| 40 }||| 41 while (u != v) {||| 42 res[i].push_back(u);||| 43 tmp.push_back(v);||| 44 u = up[u];||| 45 v = up[v];||| 46 }||| 47 res[i].push_back(u);||| 48 for (int j = tmp.size() - 1; j >= 0; --j) res[i].push_back(tmp[j]);||| 49 for (int j = 0; j < res[i].size(); ++j) {||| 50 if (j != 0 && j != res[i].size() - 1) ++sum[res[i][j]];||| 51 ++sum[res[i][j]];||| 52 }||| 53 }||| 54 calc(1, 1);||| 55 if (ss)||| 56 cout << ""NO\n"" << ss / 2 << '\n';||| 57 else {||| 58 cout << ""YES\n"";||| 59 for (int i = 1; i <= qq; ++i) {||| 60 cout << res[i].size() << '\n';||| 61 for (int j : res[i]) cout << j << ' ';||| 62 cout << '\n';||| 63 }||| 64 }||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(false);||| 68 cin.tie(0);||| 69 cout.tie(0);||| 70 solve();||| 71 return 0;||| 72 }||| "	21 for (int i = 1; i <= m; ++i) {
40	56	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 mt19937 eng(chrono::steady_clock::now().time_since_epoch().count());||| 8 const int N = 3e5 + 4;||| 9 int n, m, cnt[N];||| 10 vector<int> g[N], tree[N];||| 11 void read() {||| 12 cin >> n >> m;||| 13 for (int i = 0; i < m; ++i) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 g[u].push_back(v);||| 17 g[v].push_back(u);||| 18 }||| 19 }||| 20 bool used[N];||| 21 int p[N];||| 22 void precalc(int u = 1) {||| 23 used[u] = true;||| 24 for (int to : g[u])||| 25 if (!used[to]) {||| 26 tree[u].push_back(to);||| 27 tree[to].push_back(u);||| 28 p[to] = u;||| 29 precalc(to);||| 30 }||| 31 }||| 32 void calc(int u) {||| 33 while (u) {||| 34 cnt[u] ^= 1;||| 35 u = p[u];||| 36 }||| 37 }||| 38 vector<pii> que;||| 39 vector<int> way;||| 40 void dfs(int u, int v, int par = -1) {||| 41 way.push_back(u);||| 42 if (u == v) {||| 43 cout << (int)((way).size()) << ""\n"";||| 44 for (int x : way) cout << x << "" "";||| 45 cout << ""\n"";||| 46 way.pop_back();||| 47 return;||| 48 }||| 49 for (int to : tree[u])||| 50 if (to != par) {||| 51 dfs(to, v, u);||| 52 }||| 53 way.pop_back();||| 54 }||| 55 int endsCnt(int u) {||| 56 int cur = cnt[u];||| 57 for (int to : tree[u])||| 58 if (to != p[u]) {||| 59 cur += cnt[to];||| 60 }||| 61 return cur & 1;||| 62 }||| 63 void solve() {||| 64 read();||| 65 precalc();||| 66 int q;||| 67 cin >> q;||| 68 while (q--) {||| 69 int a, b;||| 70 cin >> a >> b;||| 71 que.emplace_back(a, b);||| 72 calc(a);||| 73 calc(b);||| 74 }||| 75 int ans = 0;||| 76 for (int i = 1; i <= n; ++i) ans += cnt[i];||| 77 if (ans != 0) {||| 78 ans = 0;||| 79 for (int u = 1; u <= n; ++u) {||| 80 ans += endsCnt(u);||| 81 }||| 82 cout << ""NO\n"" << ans / 2;||| 83 return;||| 84 }||| 85 cout << ""YES\n"";||| 86 for (pii qq : que) {||| 87 dfs(qq.first, qq.second);||| 88 }||| 89 }||| 90 int main() {||| 91 ios::sync_with_stdio(0);||| 92 cout.tie(0), cin.tie(0);||| 93 int z = 1;||| 94 while (z--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 mt19937 eng(chrono::steady_clock::now().time_since_epoch().count());||| 8 const int N = 3e5 + 4;||| 9 int n, m, cnt[N];||| 10 vector<int> g[N], tree[N];||| 11 void read() {||| 12 cin >> n >> m;||| 13 for (int i = 0; i < m; ++i) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 g[u].push_back(v);||| 17 g[v].push_back(u);||| 18 }||| 19 }||| 20 bool used[N];||| 21 int p[N];||| 22 void precalc(int u = 1) {||| 23 used[u] = true;||| 24 for (int to : g[u])||| 25 if (!used[to]) {||| 26 tree[u].push_back(to);||| 27 tree[to].push_back(u);||| 28 p[to] = u;||| 29 precalc(to);||| 30 }||| 31 }||| 32 void calc(int u) {||| 33 while (u) {||| 34 cnt[u] ^= 1;||| 35 u = p[u];||| 36 }||| 37 }||| 38 vector<pii> que;||| 39 vector<int> way;||| 40 void dfs(int u, int v, int par = -1) {||| 41 way.push_back(u);||| 42 if (u == v) {||| 43 cout << (int)((way).size()) << ""\n"";||| 44 for (int x : way) cout << x << "" "";||| 45 cout << ""\n"";||| 46 way.pop_back();||| 47 return;||| 48 }||| 49 for (int to : tree[u])||| 50 if (to != par) {||| 51 dfs(to, v, u);||| 52 }||| 53 way.pop_back();||| 54 }||| 55 int endsCnt(int u) {||| 56 int cur = cnt[u];||| 57 for (int to : tree[u])||| 58 if (to != p[u]) {||| 59 cur += cnt[to];||| 60 }||| 61 return cur == 1;||| 62 }||| 63 void solve() {||| 64 read();||| 65 precalc();||| 66 int q;||| 67 cin >> q;||| 68 while (q--) {||| 69 int a, b;||| 70 cin >> a >> b;||| 71 que.emplace_back(a, b);||| 72 calc(a);||| 73 calc(b);||| 74 }||| 75 int ans = 0;||| 76 for (int i = 1; i <= n; ++i) ans += cnt[i];||| 77 if (ans != 0) {||| 78 ans = 0;||| 79 for (int u = 1; u <= n; ++u) {||| 80 ans += endsCnt(u);||| 81 }||| 82 cout << ""NO\n"" << ans / 2;||| 83 return;||| 84 }||| 85 cout << ""YES\n"";||| 86 for (pii qq : que) {||| 87 dfs(qq.first, qq.second);||| 88 }||| 89 }||| 90 int main() {||| 91 ios::sync_with_stdio(0);||| 92 cout.tie(0), cin.tie(0);||| 93 int z = 1;||| 94 while (z--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	61 return cur & 1;
41	13	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg < n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg <= k) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	22 while (gg < n) gg = gg * k, ++ans;
41	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg < n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg <= n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	22 while (gg < n) gg = gg * k, ++ans;
41	67	1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 bool umin(T &a, const T &b) {||| 4 return (a > b ? a = b, 1 : 0);||| 5 }||| 6 template <typename T>||| 7 bool umax(T &a, const T &b) {||| 8 return (a < b ? a = b, 1 : 0);||| 9 }||| 10 using namespace std;||| 11 const int N = 1001;||| 12 int n, k;||| 13 int colors[N][N];||| 14 int diff = 0;||| 15 void slv(vector<vector<int> > sts) {||| 16 if ((int)(sts).size() == 1) return;||| 17 int i = 0;||| 18 diff++;||| 19 vector<vector<int> > nw;||| 20 while (i < (int)(sts).size()) {||| 21 vector<int> current;||| 22 int l = i, r = min((int)(sts).size(), i + k) - 1;||| 23 for (int x = l; x <= r; ++x) {||| 24 for (int y = x + 1; y <= r; ++y) {||| 25 for (auto &a : sts[x]) {||| 26 for (auto &b : sts[y]) {||| 27 colors[a][b] = diff;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 for (int x = l; x <= r; ++x) {||| 33 for (auto u : sts[x]) current.push_back(u);||| 34 }||| 35 nw.push_back(current);||| 36 i = r + 1;||| 37 }||| 38 slv(nw);||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 42 cin >> n >> k;||| 43 vector<vector<int> > sts;||| 44 for (int i = 0; i < n; ++i) {||| 45 sts.push_back({i});||| 46 }||| 47 slv(sts);||| 48 cout << diff << endl;||| 49 for (int i = 0; i < n; ++i) {||| 50 for (int j = i + 1; j < n; ++j) {||| 51 cout << colors[i][j] << ' ';||| 52 }||| 53 }||| 54 return 0;||| 55 }||| 	1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 bool umin(T &a, const T &b) {||| 4 return (a > b ? a = b, 1 : 0);||| 5 }||| 6 template <typename T>||| 7 bool umax(T &a, const T &b) {||| 8 return (a < b ? a = b, 1 : 0);||| 9 }||| 10 using namespace std;||| 11 const int N = 1001;||| 12 int n, k;||| 13 int colors[N][N];||| 14 int diff = 0;||| 15 void slv(vector<vector<int> > sts) {||| 16 if ((int)(sts).size() == 1) return;||| 17 int i = 0;||| 18 diff++;||| 19 vector<vector<int> > nw;||| 20 while (i < (int)(sts).size()) {||| 21 vector<int> current;||| 22 int l = i, r = min((int)(sts).size(), i + k) - 1;||| 23 for (int x = l; x <= r; ++x) {||| 24 for (int y = l + 1; y <= r; ++y) {||| 25 for (auto &a : sts[x]) {||| 26 for (auto &b : sts[y]) {||| 27 colors[a][b] = diff;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 for (int x = l; x <= r; ++x) {||| 33 for (auto u : sts[x]) current.push_back(u);||| 34 }||| 35 nw.push_back(current);||| 36 i = r + 1;||| 37 }||| 38 slv(nw);||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 42 cin >> n >> k;||| 43 vector<vector<int> > sts;||| 44 for (int i = 0; i < n; ++i) {||| 45 sts.push_back({i});||| 46 }||| 47 slv(sts);||| 48 cout << diff << endl;||| 49 for (int i = 0; i < n; ++i) {||| 50 for (int j = i + 1; j < n; ++j) {||| 51 cout << colors[i][j] << ' ';||| 52 }||| 53 }||| 54 return 0;||| 55 }||| 	24 for (int y = x + 1; y <= r; ++y) {
41	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La;||| 4 int main() {||| 5 register int i, j;||| 6 scanf(""%d%d"", &n, &k);||| 7 now = 1;||| 8 while (now < n) {||| 9 La = now;||| 10 now *= k;||| 11 cnt++;||| 12 for (i = 1; i <= n; i++) {||| 13 for (j = (i - 1) / La * La + La + 1;||| 14 j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now)||| 15 : (n));||| 16 j++)||| 17 A[i][j] = cnt;||| 18 }||| 19 }||| 20 printf(""%d\n"", cnt);||| 21 for (i = 1; i <= n; i++)||| 22 for (j = i + 1; j <= n; j++) printf(""%d "", A[i][j]);||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La;||| 4 int main() {||| 5 register int i, j;||| 6 scanf(""%d%d"", &n, &k);||| 7 now = 1;||| 8 while (now <= n) {||| 9 La = now;||| 10 now *= k;||| 11 cnt++;||| 12 for (i = 1; i <= n; i++) {||| 13 for (j = (i - 1) / La * La + La + 1;||| 14 j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now)||| 15 : (n));||| 16 j++)||| 17 A[i][j] = cnt;||| 18 }||| 19 }||| 20 printf(""%d\n"", cnt);||| 21 for (i = 1; i <= n; i++)||| 22 for (j = i + 1; j <= n; j++) printf(""%d "", A[i][j]);||| 23 }||| "	8 while (now < n) {
41	79	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, ans[1005][1005], cnt;||| 4 int main() {||| 5 scanf(""%d%d"", &n, &m);||| 6 int s = 1;||| 7 while (s < n) {||| 8 cnt++;||| 9 s *= m;||| 10 int res = 0;||| 11 while (res < n) {||| 12 for (int i = 1; i <= s && res + i <= n; i++)||| 13 for (int j = i + 1; j <= s && res + j <= n; j++)||| 14 if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt;||| 15 res += s;||| 16 }||| 17 }||| 18 printf(""%d\n"", cnt);||| 19 for (int i = 1; i <= n; i++)||| 20 for (int j = i + 1; j <= n; j++) printf(""%d "", ans[i][j]);||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, ans[1005][1005], cnt;||| 4 int main() {||| 5 scanf(""%d%d"", &n, &m);||| 6 int s = 1;||| 7 while (s <= n) {||| 8 cnt++;||| 9 s *= m;||| 10 int res = 0;||| 11 while (res < n) {||| 12 for (int i = 1; i <= s && res + i <= n; i++)||| 13 for (int j = i + 1; j <= s && res + j <= n; j++)||| 14 if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt;||| 15 res += s;||| 16 }||| 17 }||| 18 printf(""%d\n"", cnt);||| 19 for (int i = 1; i <= n; i++)||| 20 for (int j = i + 1; j <= n; j++) printf(""%d "", ans[i][j]);||| 21 return 0;||| 22 }||| "	7 while (s < n) {
41	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using uint = unsigned int;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 using pair2 = pair<T, T>;||| 9 using pii = pair<int, int>;||| 10 using pli = pair<ll, int>;||| 11 using pll = pair<ll, ll>;||| 12 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 13 ll myRand(ll B) { return (ull)rng() % B; }||| 14 clock_t startTime;||| 15 double getCurrentTime() {||| 16 return (double)(clock() - startTime) / CLOCKS_PER_SEC;||| 17 }||| 18 int main() {||| 19 startTime = clock();||| 20 int n, k;||| 21 scanf(""%d%d"", &n, &k);||| 22 int pw = 1;||| 23 int ans = 0;||| 24 while (pw < n) {||| 25 pw *= k;||| 26 ans++;||| 27 }||| 28 printf(""%d\n"", ans);||| 29 for (int i = 0; i < n; i++)||| 30 for (int j = i + 1; j < n; j++) {||| 31 int x = i, y = j, z = 1;||| 32 while (x % k >= y % k) {||| 33 x /= k;||| 34 y /= k;||| 35 z++;||| 36 }||| 37 printf(""%d "", z);||| 38 }||| 39 printf(""\n"");||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using uint = unsigned int;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 using pair2 = pair<T, T>;||| 9 using pii = pair<int, int>;||| 10 using pli = pair<ll, int>;||| 11 using pll = pair<ll, ll>;||| 12 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 13 ll myRand(ll B) { return (ull)rng() % B; }||| 14 clock_t startTime;||| 15 double getCurrentTime() {||| 16 return (double)(clock() - startTime) / CLOCKS_PER_SEC;||| 17 }||| 18 int main() {||| 19 startTime = clock();||| 20 int n, k;||| 21 scanf(""%d%d"", &n, &k);||| 22 int pw = 1;||| 23 int ans = 0;||| 24 while (pw < n) {||| 25 pw *= k;||| 26 ans++;||| 27 }||| 28 printf(""%d\n"", ans);||| 29 for (int i = 0; i < n; i++)||| 30 for (int j = i + 1; j < n; j++) {||| 31 int x = i, y = j, z = 1;||| 32 while (x % k == y % k) {||| 33 x /= k;||| 34 y /= k;||| 35 z++;||| 36 }||| 37 printf(""%d "", z);||| 38 }||| 39 printf(""\n"");||| 40 return 0;||| 41 }||| "	32 while (x % k >= y % k) {
41	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void out(int *a, int l, int r) {||| 4 for (int i = l; i <= r; ++i) printf(""%d "", *(a + i));||| 5 puts("""");||| 6 }||| 7 inline int read() {||| 8 int x = 0, f = 1;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) {||| 11 if (ch == '-') f = -1;||| 12 ch = getchar();||| 13 }||| 14 while (isdigit(ch)) {||| 15 x = (x << 1) + (x << 3) + (ch ^ 48);||| 16 ch = getchar();||| 17 }||| 18 return x * f;||| 19 }||| 20 long long pw[50];||| 21 signed main() {||| 22 int n = read(), k = read(), c = 0, t = n - 1;||| 23 while (t) {||| 24 t /= k;||| 25 c++;||| 26 }||| 27 pw[0] = 1;||| 28 for (int i = 1; i <= c + 1; ++i) pw[i] = pw[i - 1] * k;||| 29 cout << c << endl;||| 30 for (int i = 0; i <= n - 1; ++i)||| 31 for (int j = i + 1; j <= n - 1; ++j) {||| 32 for (int w = 1; w <= c; ++w)||| 33 if (i / pw[w] == j / pw[w]) {||| 34 printf(""%d "", w);||| 35 break;||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void out(int *a, int l, int r) {||| 4 for (int i = l; i <= r; ++i) printf(""%d "", *(a + i));||| 5 puts("""");||| 6 }||| 7 inline int read() {||| 8 int x = 0, f = 1;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) {||| 11 if (ch == '-') f = -1;||| 12 ch = getchar();||| 13 }||| 14 while (isdigit(ch)) {||| 15 x = (x << 1) + (x << 3) + (ch ^ 48);||| 16 ch = getchar();||| 17 }||| 18 return x * f;||| 19 }||| 20 long long pw[50];||| 21 signed main() {||| 22 int n = read(), k = read(), c = 0, t = n;||| 23 while (t) {||| 24 t /= k;||| 25 c++;||| 26 }||| 27 pw[0] = 1;||| 28 for (int i = 1; i <= c + 1; ++i) pw[i] = pw[i - 1] * k;||| 29 cout << c << endl;||| 30 for (int i = 0; i <= n - 1; ++i)||| 31 for (int j = i + 1; j <= n - 1; ++j) {||| 32 for (int w = 1; w <= c; ++w)||| 33 if (i / pw[w] == j / pw[w]) {||| 34 printf(""%d "", w);||| 35 break;||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	22 int n = read(), k = read(), c = 0, t = n - 1;
42	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e5 + 5, mod = 1e9 + 7;||| 4 int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans;||| 5 multiset<int> s;||| 6 void M(int x, int y) {||| 7 for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod;||| 8 }||| 9 int Q(int x) {||| 10 int ret = 0;||| 11 for (; x; x -= x & -x) (ret += t[x]) %= mod;||| 12 return ret;||| 13 }||| 14 int main() {||| 15 scanf(""%d"", &n);||| 16 for (int i = 1; i <= n; i++) scanf(""%d%d"", &a[i], &b[i]), f[i] = i;||| 17 sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; });||| 18 scanf(""%d"", &q);||| 19 for (int i = 1; i <= q; i++) scanf(""%d"", &x), d[x] = 1, s.insert(b[x]);||| 20 for (int i = 1; i <= n; i++) {||| 21 x = f[i];||| 22 g[x] = s.size() && b[x] <= *s.rbegin();||| 23 if (d[x]) s.erase(s.find(b[x]));||| 24 }||| 25 for (int i = 1; i <= n; i++)||| 26 x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod),||| 27 (ans += dp[x]) %= mod;||| 28 printf(""%d\n"", ans);||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5, mod = 1e9 + 7;||| 4 int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans;||| 5 multiset<int> s;||| 6 void M(int x, int y) {||| 7 for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod;||| 8 }||| 9 int Q(int x) {||| 10 int ret = 0;||| 11 for (; x; x -= x & -x) (ret += t[x]) %= mod;||| 12 return ret;||| 13 }||| 14 int main() {||| 15 scanf(""%d"", &n);||| 16 for (int i = 1; i <= n; i++) scanf(""%d%d"", &a[i], &b[i]), f[i] = i;||| 17 sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; });||| 18 scanf(""%d"", &q);||| 19 for (int i = 1; i <= q; i++) scanf(""%d"", &x), d[x] = 1, s.insert(b[x]);||| 20 for (int i = 1; i <= n; i++) {||| 21 x = f[i];||| 22 g[x] = !s.empty() && b[x] <= *s.rbegin();||| 23 if (d[x]) s.erase(s.find(b[x]));||| 24 }||| 25 for (int i = 1; i <= n; i++)||| 26 x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod),||| 27 (ans += dp[x]) %= mod;||| 28 printf(""%d\n"", ans);||| 29 return 0;||| 30 }||| "	3 const int N = 4e5 + 5, mod = 1e9 + 7;
42	16	"1 #include <bits/stdc++.h>||| 2 const int md = 1000000007;||| 3 inline int add(int a, int b) {||| 4 a += b;||| 5 if (a >= md) a -= md;||| 6 return a;||| 7 }||| 8 inline int sub(int a, int b) {||| 9 a -= b;||| 10 if (a < 0) a += md;||| 11 return a;||| 12 }||| 13 const int N = 200000;||| 14 int t, n, s[N], ord[N << 1], suf[N], b[N << 1];||| 15 std::pair<int, int> a[N];||| 16 bool s_cmp(int x, int y) { return a[x].first < a[y].first; }||| 17 void inc(int i, int d) {||| 18 while (i < 2 * n) {||| 19 b[i] = add(b[i], d);||| 20 i |= i + 1;||| 21 }||| 22 }||| 23 int get(int i) {||| 24 int s = 0;||| 25 while (i >= 0) {||| 26 s = add(s, b[i]);||| 27 i = (i & i + 1) - 1;||| 28 }||| 29 return s;||| 30 }||| 31 int main() {||| 32 scanf(""%d"", &n);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d%d"", &a[i].first, &a[i].second);||| 35 --a[i].first;||| 36 --a[i].second;||| 37 ord[a[i].first] = ord[a[i].second] = i;||| 38 }||| 39 scanf(""%d"", &t);||| 40 for (int i = 0; i < t; ++i) {||| 41 scanf(""%d"", s + i);||| 42 --s[i];||| 43 }||| 44 std::sort(s, s + t, s_cmp);||| 45 for (int i = t - 1; i >= 0; --i) {||| 46 if (i == t - 1 || a[s[i]].second > a[suf[i + 1]].second)||| 47 suf[i] = s[i];||| 48 else||| 49 suf[i] = suf[i + 1];||| 50 }||| 51 std::vector<std::pair<int, int> > qr;||| 52 int last = 0;||| 53 for (int i = 0; i < t;) {||| 54 qr.push_back(std::make_pair(a[suf[i]].second, last));||| 55 last = a[suf[i]].first + 1;||| 56 while (i < t && a[s[i]].first < last) ++i;||| 57 }||| 58 std::sort(qr.begin(), qr.end());||| 59 int ans = 0;||| 60 for (int i = 0, j = 0; i < n << 1; ++i) {||| 61 if (a[ord[i]].second == i) {||| 62 while (j < (int)qr.size() && qr[j].first == i) {||| 63 ans = add(ans, get(qr[j].second) + 1);||| 64 ++j;||| 65 }||| 66 int val = get(a[ord[i]].first) + 1;||| 67 inc(0, val);||| 68 inc(a[ord[i]].first + 1, sub(0, val));||| 69 }||| 70 }||| 71 printf(""%d\n"", ans);||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 const int md = 1000000007;||| 3 inline int add(int a, int b) {||| 4 a += b;||| 5 if (a >= md) a -= md;||| 6 return a;||| 7 }||| 8 inline int sub(int a, int b) {||| 9 a -= b;||| 10 if (a < 0) a += md;||| 11 return a;||| 12 }||| 13 const int N = 200000;||| 14 int t, n, s[N], ord[N << 1], suf[N], b[N << 1];||| 15 std::pair<int, int> a[N];||| 16 bool s_cmp(int x, int y) { return a[x].first < a[y].first; }||| 17 void inc(int i, int d) {||| 18 while (i < 2 * n) {||| 19 b[i] = add(b[i], d);||| 20 i |= i + 1;||| 21 }||| 22 }||| 23 int get(int i) {||| 24 int s = 0;||| 25 while (i >= 0) {||| 26 s = add(s, b[i]);||| 27 i = (i & i + 1) - 1;||| 28 }||| 29 return s;||| 30 }||| 31 int main() {||| 32 scanf(""%d"", &n);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d%d"", &a[i].first, &a[i].second);||| 35 --a[i].first;||| 36 --a[i].second;||| 37 ord[a[i].first] = ord[a[i].second] = i;||| 38 }||| 39 scanf(""%d"", &t);||| 40 for (int i = 0; i < t; ++i) {||| 41 scanf(""%d"", s + i);||| 42 --s[i];||| 43 }||| 44 std::sort(s, s + t, s_cmp);||| 45 for (int i = t - 1; i >= 0; --i) {||| 46 if (i == t - 1 || a[s[i]].second > a[suf[i + 1]].second)||| 47 suf[i] = s[i];||| 48 else||| 49 suf[i] = suf[i + 1];||| 50 }||| 51 std::vector<std::pair<int, int> > qr;||| 52 int last = 0;||| 53 for (int i = 0; i < t;) {||| 54 qr.push_back(std::make_pair(a[suf[i]].second, last));||| 55 last = a[suf[i]].first + 1;||| 56 while (i < t && a[s[i]].first < last) ++i;||| 57 }||| 58 std::sort(qr.begin(), qr.end());||| 59 int ans = 0;||| 60 for (int i = 0, j = 0; i < n << 1; ++i) {||| 61 if (a[ord[i]].second == i) {||| 62 while (j < (int)qr.size() && qr[j].first == i) {||| 63 ans = add(ans, get(qr[j].second) + 1);||| 64 ++j;||| 65 }||| 66 int val = get(a[ord[i]].first) + 1;||| 67 inc(0, val);||| 68 inc(a[ord[i]].first + 1, sub(0, -val));||| 69 }||| 70 }||| 71 printf(""%d\n"", ans);||| 72 return 0;||| 73 }||| "	68 inc(a[ord[i]].first + 1, sub(0, val));
42	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int abc;||| 4 mt19937 rnd((unsigned long long)(new char));||| 5 int rd(int l, int r) {||| 6 uniform_int_distribution<> ee(l, r);||| 7 return ee(rnd);||| 8 }||| 9 const int mxn = 4e5 + 3, mod = 1e9 + 7;||| 10 pair<int, int> ee[mxn];||| 11 int n, v1[mxn], v2[mxn], px[mxn], m, v0[mxn], xp[mxn];||| 12 bool vs[mxn];||| 13 bool cmp1(int x, int y) { return v1[x] < v1[y]; }||| 14 struct arrrr {||| 15 long long a[mxn];||| 16 void add(int x, int y) {||| 17 for (; x <= n; x += x & -x) a[x] += y;||| 18 }||| 19 long long ask(int x) {||| 20 long long r = 0;||| 21 for (; x; x &= x - 1) r += a[x], r %= mod;||| 22 return r;||| 23 }||| 24 } ar;||| 25 set<int> st;||| 26 int main() {||| 27 cin >> n;||| 28 for (int i = 1; i <= n; ++i)||| 29 abc = scanf(""%d%d"", v1 + i, v2 + i), ee[i].first = v2[i],||| 30 ee[i].second = v1[i];||| 31 sort(ee + 1, ee + n + 1);||| 32 cin >> m;||| 33 for (int i = 1; i <= m; ++i) abc = scanf(""%d"", v0 + i), v0[i] = v1[v0[i]];||| 34 for (int i = 1; i <= n; ++i)||| 35 v1[i] = ee[i].second, v2[i] = ee[i].first, px[i] = i;||| 36 sort(px + 1, px + n + 1, cmp1);||| 37 for (int i = 1; i <= n; ++i) xp[v1[i]] = i;||| 38 for (int i = 1; i <= m; ++i) st.insert(xp[v0[i]]);||| 39 for (int t = 1; t <= n && st.size(); ++t)||| 40 if (*--st.end() >= px[t]) st.erase(px[t]), vs[px[t]] = 1;||| 41 long long ans = 0;||| 42 for (int t = n; t; --t) {||| 43 int x = px[t];||| 44 long long v = ar.ask(x) + 1;||| 45 if (vs[x]) ans += v;||| 46 ar.add(x, v);||| 47 }||| 48 ans = (ans % mod + mod) % mod;||| 49 printf(""%lld\n"", ans);||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int abc;||| 4 mt19937 rnd((unsigned long long)(new char));||| 5 int rd(int l, int r) {||| 6 uniform_int_distribution<> ee(l, r);||| 7 return ee(rnd);||| 8 }||| 9 const int mxn = 4e5 + 3, mod = 1e9 + 7;||| 10 pair<int, int> ee[mxn];||| 11 int n, v1[mxn], v2[mxn], px[mxn], m, v0[mxn], xp[mxn];||| 12 bool vs[mxn];||| 13 bool cmp1(int x, int y) { return v1[x] < v1[y]; }||| 14 struct arrrr {||| 15 long long a[mxn];||| 16 void add(int x, int y) {||| 17 for (; x <= n; x += x & -x) a[x] += y;||| 18 }||| 19 long long ask(int x) {||| 20 long long r = 0;||| 21 for (; x; x &= x - 1) r += a[x], r %= mod;||| 22 return r;||| 23 }||| 24 } ar;||| 25 set<int> st;||| 26 int main() {||| 27 cin >> n;||| 28 for (int i = 1; i <= n; ++i)||| 29 abc = scanf(""%d%d"", v1 + i, v2 + i), ee[i].first = v2[i],||| 30 ee[i].second = v1[i];||| 31 sort(ee + 1, ee + n + 1);||| 32 cin >> m;||| 33 for (int i = 1; i <= m; ++i) abc = scanf(""%d"", v0 + i), v0[i] = v1[v0[i]];||| 34 for (int i = 1; i <= n; ++i)||| 35 v1[i] = ee[i].second, v2[i] = ee[i].first, px[i] = i;||| 36 sort(px + 1, px + n + 1, cmp1);||| 37 for (int i = 1; i <= n; ++i) xp[v1[i]] = i;||| 38 for (int i = 1; i <= m; ++i) st.insert(xp[v0[i]]);||| 39 for (int t = 1; t <= n && st.size(); ++t)||| 40 if (*--st.end() >= px[t]) st.erase(px[t]), vs[px[t]] = 1;||| 41 long long ans = 0;||| 42 for (int t = n; t; --t) {||| 43 int x = px[t];||| 44 long long v = ar.ask(x) + 1;||| 45 if (vs[t]) ans += v;||| 46 ar.add(x, v);||| 47 }||| 48 ans = (ans % mod + mod) % mod;||| 49 printf(""%lld\n"", ans);||| 50 return 0;||| 51 }||| "	45 if (vs[x]) ans += v;
44	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2100, rev[4] = {0, 2, 1, 3};||| 4 int n;||| 5 char a[N][N];||| 6 int tag[N];||| 7 int id[N][N];||| 8 void dye(int n) {||| 9 for (int i = 1, c = 1; i <= n; i += 2, c += 2) {||| 10 id[i][1] = id[1][i] = id[1][i + 1] = id[i + 1][1] = c;||| 11 for (int j = 2; j < i; j++) id[j][i + 1 - j] = c + (1 ^ j & 1);||| 12 for (int j = 2; j <= n - i + 1; j++)||| 13 id[i + j][j] = id[j][i + j] = c + (1 ^ j & 1);||| 14 }||| 15 for (int i = 1; i <= n; i++)||| 16 for (int j = 1; j <= n - i + 1; j++) id[n - i + 1][n - j + 1] = id[i][j];||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 if (n & 1) {||| 21 puts(""NONE"");||| 22 return 0;||| 23 }||| 24 dye(n);||| 25 for (int i = 1; i <= n; i++) {||| 26 scanf(""%s"", a[i] + 1);||| 27 for (int j = 1; j <= n; j++)||| 28 if (a[i][j] != '.') {||| 29 tag[id[i][j]] |= 1 << (a[i][j] == 'S');||| 30 }||| 31 }||| 32 for (int i = 1; i <= n; i += 2) {||| 33 int &x = tag[i], &y = tag[i + 1];||| 34 y = rev[x |= rev[y]];||| 35 }||| 36 int flag = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if (tag[i] == 3) {||| 39 puts(""NONE"");||| 40 return 0;||| 41 }||| 42 if (!tag[i]) flag = 1;||| 43 }||| 44 if (flag) {||| 45 puts(""MULTIPLE"");||| 46 return 0;||| 47 }||| 48 puts(""UNIQUE"");||| 49 for (int i = 1; i <= n; i++, puts(""""))||| 50 for (int j = 1; j <= n; j++) putchar(tag[id[i][j]] == 2 ? 'S' : 'G');||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2100, rev[4] = {0, 2, 1, 3};||| 4 int n;||| 5 char a[N][N];||| 6 int tag[N];||| 7 int id[N][N];||| 8 void dye(int n) {||| 9 for (int i = 1, c = 1; i <= 9; i += 2, c += 2) {||| 10 id[i][1] = id[1][i] = id[1][i + 1] = id[i + 1][1] = c;||| 11 for (int j = 2; j < i; j++) id[j][i + 1 - j] = c + (1 ^ j & 1);||| 12 for (int j = 2; j <= n - i + 1; j++)||| 13 id[i + j][j] = id[j][i + j] = c + (1 ^ j & 1);||| 14 }||| 15 for (int i = 1; i <= n; i++)||| 16 for (int j = 1; j <= n - i + 1; j++) id[n - i + 1][n - j + 1] = id[i][j];||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 if (n & 1) {||| 21 puts(""NONE"");||| 22 return 0;||| 23 }||| 24 dye(n);||| 25 for (int i = 1; i <= n; i++) {||| 26 scanf(""%s"", a[i] + 1);||| 27 for (int j = 1; j <= n; j++)||| 28 if (a[i][j] != '.') {||| 29 tag[id[i][j]] |= 1 << (a[i][j] == 'S');||| 30 }||| 31 }||| 32 for (int i = 1; i <= n; i += 2) {||| 33 int &x = tag[i], &y = tag[i + 1];||| 34 y = rev[x |= rev[y]];||| 35 }||| 36 int flag = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if (tag[i] == 3) {||| 39 puts(""NONE"");||| 40 return 0;||| 41 }||| 42 if (!tag[i]) flag = 1;||| 43 }||| 44 if (flag) {||| 45 puts(""MULTIPLE"");||| 46 return 0;||| 47 }||| 48 puts(""UNIQUE"");||| 49 for (int i = 1; i <= n; i++, puts(""""))||| 50 for (int j = 1; j <= n; j++) putchar(tag[id[i][j]] == 2 ? 'S' : 'G');||| 51 }||| "	9 for (int i = 1, c = 1; i <= n; i += 2, c += 2) {
44	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 bool chkmin(T &x, T y) {||| 5 return x > y ? x = y, 1 : 0;||| 6 }||| 7 template <typename T>||| 8 bool chkmax(T &x, T y) {||| 9 return x < y ? x = y, 1 : 0;||| 10 }||| 11 int readint() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (ch < '0' || ch > '9') {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (ch >= '0' && ch <= '9') {||| 19 x = x * 10 + ch - '0';||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 int n;||| 25 int a[2005][2005], res[1005];||| 26 char s[2005][2005];||| 27 int main() {||| 28 n = readint();||| 29 for (int i = 1; i <= n; i++) scanf(""%s"", s[i] + 1);||| 30 if (n & 1) {||| 31 printf(""NONE\n"");||| 32 return 0;||| 33 }||| 34 n >>= 1;||| 35 for (int i = 1; i <= n; i++) a[i][i] = i;||| 36 for (int i = n + 1; i <= n + n; i++) a[i][i] = n + n - i + 1;||| 37 for (int i = 2; i <= n + n; i++) {||| 38 if (i & 1) {||| 39 for (int j = i; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i + 2];||| 40 } else {||| 41 a[i][1] = a[i - 1][1];||| 42 for (int j = i + 1; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i];||| 43 }||| 44 }||| 45 for (int i = 1; i <= n + n; i++)||| 46 for (int j = i + 1; j <= n + n; j++) a[i][j] = a[j][i];||| 47 for (int i = 1; i <= n + n; i++) res[i] = -1;||| 48 for (int i = 1; i <= n + n; i++) {||| 49 for (int j = 1; j <= n + n; j++) {||| 50 if (s[i][j] != '.') {||| 51 int fl = s[i][j] == 'S';||| 52 if (a[i][j] < 0) fl ^= 1;||| 53 if (res[abs(a[i][j])] >= 0 && res[abs(a[i][j])] != fl)||| 54 return printf(""NONE\n""), 0;||| 55 res[abs(a[i][j])] = fl;||| 56 }||| 57 }||| 58 }||| 59 for (int i = 1; i <= n; i++)||| 60 if (res[i] < 0) return printf(""MULTIPLE\n""), 0;||| 61 printf(""UNIQUE\n"");||| 62 for (int i = 1; i <= n + n; i++) {||| 63 for (int j = 1; j <= n + n; j++) {||| 64 if (a[i][j] < 0)||| 65 putchar(res[-a[i][j]] ? 'G' : 'S');||| 66 else||| 67 putchar(res[a[i][j]] ? 'S' : 'G');||| 68 }||| 69 putchar('\n');||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 bool chkmin(T &x, T y) {||| 5 return x > y ? x = y, 1 : 0;||| 6 }||| 7 template <typename T>||| 8 bool chkmax(T &x, T y) {||| 9 return x < y ? x = y, 1 : 0;||| 10 }||| 11 int readint() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (ch < '0' || ch > '9') {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (ch >= '0' && ch <= '9') {||| 19 x = x * 10 + ch - '0';||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 int n;||| 25 int a[2005][2005], res[1005];||| 26 char s[2005][2005];||| 27 int main() {||| 28 n = readint();||| 29 for (int i = 1; i <= n; i++) scanf(""%s"", s[i] + 1);||| 30 if (n & 1) {||| 31 printf(""NONE\n"");||| 32 return 0;||| 33 }||| 34 n >>= 1;||| 35 for (int i = 1; i <= n; i++) a[i][i] = i;||| 36 for (int i = n + 1; i <= n + n; i++) a[i][i] = n + n - i + 1;||| 37 for (int i = 2; i <= n + n; i++) {||| 38 if (i & 1) {||| 39 for (int j = i; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i + 2];||| 40 } else {||| 41 a[i][1] = a[i - 1][1];||| 42 for (int j = i + 1; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i];||| 43 }||| 44 }||| 45 for (int i = 1; i <= n + n; i++)||| 46 for (int j = i + 1; j <= n + n; j++) a[i][j] = a[j][i];||| 47 for (int i = 1; i <= n + n; i++) res[i] = -1;||| 48 for (int i = 1; i <= n + n; i++) {||| 49 for (int j = 1; j <= n + n; j++) {||| 50 if (s[i][j] != '.') {||| 51 int fl = s[i][j] == 'S';||| 52 if (a[i][j] < 0) fl ^= 1;||| 53 if (res[abs(a[i][j])] >= 0 && res[abs(a[i][j])] != fl)||| 54 return printf(""NONE\n""), 0;||| 55 res[abs(a[i][j])] = fl;||| 56 }||| 57 }||| 58 }||| 59 for (int i = 1; i <= n; i++)||| 60 if (res[i] < 0) return printf(""MUTIPLE\n""), 0;||| 61 printf(""UNIQUE\n"");||| 62 for (int i = 1; i <= n + n; i++) {||| 63 for (int j = 1; j <= n + n; j++) {||| 64 if (a[i][j] < 0)||| 65 putchar(res[-a[i][j]] ? 'G' : 'S');||| 66 else||| 67 putchar(res[a[i][j]] ? 'S' : 'G');||| 68 }||| 69 putchar('\n');||| 70 }||| 71 return 0;||| 72 }||| "	"60 if (res[i] < 0) return printf(""MULTIPLE\n""), 0;"
44	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2002;||| 4 int a[N][N];||| 5 char b[N][N], color[N / 2];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int n;||| 11 cin >> n;||| 12 if (n & 1) {||| 13 cout << ""NONE"" << endl;||| 14 return 0;||| 15 }||| 16 for (int j = 0; j < n; j++) {||| 17 a[0][j] = a[n - 1][n - j - 1] = a[j][0] = a[n - j - 1][n - 1] = j / 2;||| 18 b[0][j] = b[n - 1][n - j - 1] = b[j][0] = b[n - j - 1][n - 1] = 1;||| 19 if (j == 0 || j == n - 1) continue;||| 20 a[1][j] = j & 1 ? (j + 1) / 2 : (j - 1) / 2;||| 21 b[1][j] = 0;||| 22 }||| 23 for (int i = 2; i < n - 1; ++i) {||| 24 for (int j = 1; j < n - 1; ++j) {||| 25 if (a[i - 2][j] == a[i - 1][j - 1]) {||| 26 a[i][j] = a[i - 1][j + 1];||| 27 } else {||| 28 a[i][j] = a[i - 1][j - 1];||| 29 }||| 30 }||| 31 }||| 32 memset(color, -1, sizeof(color));||| 33 bool flag = true;||| 34 for (int i = 0; i < n; ++i) {||| 35 for (int j = 0; j < n; ++j) {||| 36 char c;||| 37 cin >> c;||| 38 int col = (c == 'S');||| 39 if (i > 0 && i < n - 1 && j > 0 && j < n - 1) {||| 40 if (a[i][j] == a[i - 1][j - 1] && a[i][j] == a[i + 1][j + 1]) {||| 41 b[i][j] = 1 ^ b[i - 1][j - 1];||| 42 } else {||| 43 b[i][j] = 1 ^ b[i - 1][j + 1];||| 44 }||| 45 }||| 46 if (c == '.') continue;||| 47 if (!b[i][j]) col ^= 1;||| 48 char &prv = color[a[i][j]];||| 49 if (prv == -1 || prv == col) {||| 50 prv = col;||| 51 } else {||| 52 flag = false;||| 53 goto out;||| 54 }||| 55 }||| 56 }||| 57 out:||| 58 if (flag) {||| 59 int c = 0;||| 60 for (int i = 0; i < n / 2; ++i) {||| 61 c += color[i] != -1;||| 62 }||| 63 if (c == n / 2) {||| 64 cout << ""UNIQUE"" << endl;||| 65 for (int i = 0; i < n; ++i) {||| 66 for (int j = 0; j < n; ++j) {||| 67 cout << ""GS""[color[a[i][j]] == b[i][j]];||| 68 }||| 69 cout << endl;||| 70 }||| 71 } else {||| 72 cout << ""MULTIPLE"" << endl;||| 73 }||| 74 } else {||| 75 cout << ""NONE"" << endl;||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2002;||| 4 int a[N][N];||| 5 char b[N][N], color[N / 2];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int n;||| 11 cin >> n;||| 12 if (n & 1) {||| 13 cout << ""NONE"" << endl;||| 14 return 0;||| 15 }||| 16 for (int j = 0; j < n; j++) {||| 17 a[0][j] = a[n - 1][n - j - 1] = a[j][0] = a[n - j - 1][n - 1] = j / 2;||| 18 b[0][j] = b[n - 1][n - j - 1] = b[j][0] = b[n - j - 1][n - 1] = 1;||| 19 if (j == 0 || j == n - 1) continue;||| 20 a[1][j] = j & 1 ? (j + 1) / 2 : (j - 1) / 2;||| 21 b[1][j] = 0;||| 22 }||| 23 for (int i = 2; i < n - 1; ++i) {||| 24 for (int j = 1; j < n - 1; ++j) {||| 25 if (a[i - 2][j] == a[i - 1][j - 1]) {||| 26 a[i][j] = a[i - 1][j + 1];||| 27 } else {||| 28 a[i][j] = a[i - 1][j - 1];||| 29 }||| 30 }||| 31 }||| 32 memset(color, -1, sizeof(color));||| 33 bool flag = true;||| 34 for (int i = 0; i < n; ++i) {||| 35 for (int j = 0; j < n; ++j) {||| 36 char c;||| 37 cin >> c;||| 38 int col = (c == 'S');||| 39 if (i > 0 && i < n - 1 && j > 0 && j < n - 1) {||| 40 if (a[i][j] == a[i - 1][j - 1] && a[i][j] == a[i + 1][j + 1]) {||| 41 b[i][j] = 1 ^ b[i - 1][j - 1];||| 42 } else {||| 43 b[i][j] = 1 ^ b[i - 1][j + 1];||| 44 }||| 45 }||| 46 if (c == '.') continue;||| 47 if (!b[i][j]) col ^= 1;||| 48 char &prv = color[a[i][j]];||| 49 if (prv == -1 || prv == col) {||| 50 prv = col;||| 51 } else {||| 52 flag = false;||| 53 goto out;||| 54 }||| 55 }||| 56 }||| 57 out:||| 58 if (flag) {||| 59 int c = 0;||| 60 for (int i = 0; i < n / 2; ++i) {||| 61 c += color[i] != -1;||| 62 }||| 63 if (c == n / 2) {||| 64 cout << ""UNIQUE"" << endl;||| 65 for (int i = 0; i < n; ++i) {||| 66 for (int j = 0; j < n; ++j) {||| 67 cout << ""GS""[color[a[i][j]] == b[i][j]] << endl;||| 68 }||| 69 cout << endl;||| 70 }||| 71 } else {||| 72 cout << ""MULTIPLE"" << endl;||| 73 }||| 74 } else {||| 75 cout << ""NONE"" << endl;||| 76 }||| 77 return 0;||| 78 }||| "	"67 cout << ""GS""[color[a[i][j]] == b[i][j]];"
44	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e3 + 5;||| 4 int n;||| 5 char s[MAXN][MAXN];||| 6 int f[MAXN];||| 7 inline pair<int, int> get(int x, int y, int k) {||| 8 if (x == 1) {||| 9 if (y % 2) ++y;||| 10 return make_pair(y, k);||| 11 }||| 12 if ((x + y) % 2) {||| 13 int t = min(x - 1, y - 1);||| 14 x -= t;||| 15 y -= t;||| 16 k ^= t & 1;||| 17 } else {||| 18 int t = min(x - 1, n - y);||| 19 x -= t;||| 20 y += t;||| 21 k ^= t & 1;||| 22 }||| 23 if (x != 1) x = n - x + 1, y = n - y + 1;||| 24 return get(x, y, k);||| 25 }||| 26 int main(void) {||| 27 scanf(""%d"", &n);||| 28 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 29 if (n % 2) return printf(""NONE""), 0;||| 30 memset(f, -1, sizeof(f));||| 31 for (int i = 1; i <= n; ++i)||| 32 for (int j = 1; j <= n; ++j)||| 33 if (s[i][j] != '.') {||| 34 pair<int, int> res = get(i, j, s[i][j] == 'G');||| 35 int y = res.first, k = res.second;||| 36 if (f[y] == -1)||| 37 f[y] = k;||| 38 else if (f[y] != k)||| 39 return printf(""NONE""), 0;||| 40 }||| 41 for (int i = 2; i <= n; i += 2)||| 42 if (f[i] == -1) return printf(""MULTIPLE""), 0;||| 43 printf(""UNIQUE\n"");||| 44 for (int i = 1; i <= n; ++i, putchar('\n'))||| 45 for (int j = 1; j <= n; ++j) {||| 46 pair<int, int> res = get(i, j, 0);||| 47 int k = f[res.first] ^ res.second;||| 48 putchar(""SG""[k]);||| 49 }||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e3 + 5;||| 4 int n;||| 5 char s[MAXN][MAXN];||| 6 int f[MAXN];||| 7 inline pair<int, int> get(int x, int y, int k) {||| 8 if (x == 1) {||| 9 if (y % 2) ++y;||| 10 return make_pair(y, k);||| 11 }||| 12 if ((x + y) % 2) {||| 13 int t = min(x - 1, y - 1);||| 14 x -= t;||| 15 y -= t;||| 16 k ^= t & 1;||| 17 } else {||| 18 int t = min(x - 1, n - y);||| 19 x -= t;||| 20 y += t;||| 21 k ^= t & 1;||| 22 }||| 23 if (x != 1) x = n - x + 1, y = n - y + 1;||| 24 return get(x, y, k);||| 25 }||| 26 int main(void) {||| 27 scanf(""%d"", &n);||| 28 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 29 if (n % 2) return printf(""NONE""), 0;||| 30 memset(f, -1, sizeof(f));||| 31 for (int i = 1; i <= n; ++i)||| 32 for (int j = 1; j <= n; ++j)||| 33 if (s[i][j] != '.') {||| 34 pair<int, int> res = get(i, j, s[i][j] == 'G');||| 35 int y = res.first, k = res.second;||| 36 if (f[y] == -1)||| 37 f[y] = k;||| 38 else if (f[y] != k)||| 39 return printf(""NONE""), 0;||| 40 }||| 41 for (int i = 2; i <= n; i += 2)||| 42 if (f[i] == -1) return printf(""MULTIPLE""), 0;||| 43 printf(""UNIQUE\n"");||| 44 for (int i = 1; i <= n; ++i, putchar('\n'))||| 45 for (int j = 1; j <= n; ++j) {||| 46 pair<int, int> res = get(i, j, 0);||| 47 int k = f[res.first] ^ res.second;||| 48 putchar(""GS""[k]);||| 49 }||| 50 return 0;||| 51 }||| "	"48 putchar(""SG""[k]);"
45	13	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, i = 0, c = 0;||| 5 cin >> t;||| 6 for (; i < t; i++) {||| 7 c = 1;||| 8 int n;||| 9 cin >> n;||| 10 int a[n];||| 11 for (int j = 0; j < n; j++) {||| 12 cin >> a[j];||| 13 }||| 14 if (a[0] == 1) c++;||| 15 for (int k = 1; k < n; k++) {||| 16 if (a[k] == 1 && a[k - 1] == 0)||| 17 c++;||| 18 else if (a[k] == 1 && a[k - 1] == 1)||| 19 c = c + 5;||| 20 else if (a[k] == 0 && a[k - 1] == 1)||| 21 ;||| 22 else if (a[k] == 0 && a[k - 1] == 0) {||| 23 c = -1;||| 24 break;||| 25 }||| 26 }||| 27 cout << c << endl;||| 28 }||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, i = 0, c = 0;||| 5 cin >> t;||| 6 for (; i < t; i++) {||| 7 c = 0;||| 8 int n;||| 9 cin >> n;||| 10 int a[n];||| 11 for (int j = 0; j < n; j++) {||| 12 cin >> a[j];||| 13 }||| 14 if (a[0] == 1) c++;||| 15 for (int k = 1; k < n; k++) {||| 16 if (a[k] == 1 && a[k - 1] == 0)||| 17 c++;||| 18 else if (a[k] == 1 && a[k - 1] == 1)||| 19 c = c + 5;||| 20 else if (a[k] == 0 && a[k - 1] == 1)||| 21 ;||| 22 else if (a[k] == 0 && a[k - 1] == 0) {||| 23 c = -1;||| 24 break;||| 25 }||| 26 }||| 27 cout << c << endl;||| 28 }||| 29 }||| 	7 c = 1;
45	128	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 int sum = 1;||| 11 for (int i = 0; i < n; i++) {||| 12 int a;||| 13 cin >> a;||| 14 v.push_back(a);||| 15 }||| 16 int count0 = 0, count1 = 0;||| 17 for (int i = 0; i < n; i++) {||| 18 if (v[i] == 1) {||| 19 count1++;||| 20 if (count1 >= 2) {||| 21 sum = sum + 4;||| 22 }||| 23 sum++;||| 24 count0 = 0;||| 25 } else if (v[i] == 0) {||| 26 count0++;||| 27 if (count0 == 2) {||| 28 sum = -1;||| 29 break;||| 30 }||| 31 count1 = 0;||| 32 }||| 33 }||| 34 cout << sum << endl;||| 35 }||| 36 return 0;||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 int sum = 1;||| 11 for (int i = 0; i < n; i++) {||| 12 int a;||| 13 cin >> a;||| 14 v.push_back(a);||| 15 }||| 16 int count0 = 0, count1 = 0;||| 17 for (int i = 0; i < n; i++) {||| 18 if (v[i] == 1) {||| 19 count1++;||| 20 if (count1 == 2) {||| 21 sum = sum + 4;||| 22 }||| 23 sum++;||| 24 count0 = 0;||| 25 } else if (v[i] == 0) {||| 26 count0++;||| 27 if (count0 == 2) {||| 28 sum = -1;||| 29 break;||| 30 }||| 31 count1 = 0;||| 32 }||| 33 }||| 34 cout << sum << endl;||| 35 }||| 36 return 0;||| 37 }||| 	20 if (count1 >= 2) {
45	236	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e9 + 7;||| 4 const long long MOD = 998244353;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> a[i];||| 16 }||| 17 long long height = 1;||| 18 int flag = 1;||| 19 for (int i = 0; i < n - 1; i++) {||| 20 if (a[i] == 0 && a[i + 1] == 0) {||| 21 flag = 0;||| 22 break;||| 23 }||| 24 }||| 25 if (flag) {||| 26 if (a[0] == 1) {||| 27 height += 1;||| 28 }||| 29 for (int i = 1; i < n; i++) {||| 30 if (a[i - 1] == 1 && a[i] == 1) {||| 31 height += 5;||| 32 } else if (a[i] == 1) {||| 33 height += 1;||| 34 }||| 35 }||| 36 cout << height << ""\n"";||| 37 } else {||| 38 cout << ""-1\n"";||| 39 }||| 40 }||| 41 return 0;||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e9 + 7;||| 4 const long long MOD = 998244353;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> a[i];||| 16 }||| 17 long long height = 1;||| 18 int flag = 1;||| 19 for (int i = 0; i < n; i++) {||| 20 if (a[i] == 0 && a[i + 1] == 0) {||| 21 flag = 0;||| 22 break;||| 23 }||| 24 }||| 25 if (flag) {||| 26 if (a[0] == 1) {||| 27 height += 1;||| 28 }||| 29 for (int i = 1; i < n; i++) {||| 30 if (a[i - 1] == 1 && a[i] == 1) {||| 31 height += 5;||| 32 } else if (a[i] == 1) {||| 33 height += 1;||| 34 }||| 35 }||| 36 cout << height << ""\n"";||| 37 } else {||| 38 cout << ""-1\n"";||| 39 }||| 40 }||| 41 return 0;||| 42 }||| "	19 for (int i = 0; i < n - 1; i++) {
45	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n;||| 5 int a[N];||| 6 void solve() {||| 7 scanf(""%d"", &n);||| 8 int now = 1;||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 if (n == 1) {||| 11 if (a[1] == 1)||| 12 printf(""2\n"");||| 13 else||| 14 printf(""1\n"");||| 15 return;||| 16 }||| 17 if (a[1] == 1) now++;||| 18 for (int i = 2; i <= n; i++) {||| 19 if (a[i] == 0 && a[i - 1] == 0) {||| 20 now = -1;||| 21 printf(""%d\n"", now);||| 22 return;||| 23 }||| 24 if (a[i] == 0) continue;||| 25 if (a[i] == 1 && a[i - 1] == 1)||| 26 now += 5;||| 27 else||| 28 now++;||| 29 }||| 30 printf(""%d\n"", now);||| 31 }||| 32 int main() {||| 33 int t;||| 34 scanf(""%d"", &t);||| 35 while (t--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n;||| 5 int a[N];||| 6 void solve() {||| 7 scanf(""%d"", &n);||| 8 int now = 1;||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 if (n == 1) {||| 11 if (a[1] == 1)||| 12 printf(""2\n"");||| 13 else||| 14 printf(""1\n"");||| 15 return;||| 16 }||| 17 if (a[1] == 1) now++;||| 18 for (int i = 2; i <= n; i++) {||| 19 if (a[i] == 0 && a[i - 1] == 0) {||| 20 now == -1;||| 21 printf(""%d\n"", now);||| 22 return;||| 23 }||| 24 if (a[i] == 0) continue;||| 25 if (a[i] == 1 && a[i - 1] == 1)||| 26 now += 5;||| 27 else||| 28 now++;||| 29 }||| 30 printf(""%d\n"", now);||| 31 }||| 32 int main() {||| 33 int t;||| 34 scanf(""%d"", &t);||| 35 while (t--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	20 now = -1;
45	245	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t, v;||| 4 int arr[100];||| 5 void cf() {||| 6 cin >> n;||| 7 v = 0;||| 8 for (int i = 0; i < n; ++i) {||| 9 cin >> arr[i];||| 10 }||| 11 for (int i = 0; i < n - 1; ++i) {||| 12 if (arr[i] == 0 && arr[i + 1] == 0) {||| 13 cout << -1 << endl;||| 14 v = 1;||| 15 break;||| 16 }||| 17 }||| 18 int ans = 1;||| 19 if (v == 0) {||| 20 ans += arr[0];||| 21 for (int i = 1; i < n; ++i) {||| 22 if (arr[i] == 1) {||| 23 ans += arr[i] + 4 * arr[i - 1];||| 24 }||| 25 }||| 26 cout << ans << endl;||| 27 }||| 28 }||| 29 int main() {||| 30 cin >> t;||| 31 for (int z = 0; z < t; ++z) {||| 32 cf();||| 33 }||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t, v;||| 4 int arr[100];||| 5 void cf() {||| 6 cin >> n;||| 7 v = 0;||| 8 for (int i = 0; i < n; ++i) {||| 9 cin >> arr[i];||| 10 }||| 11 for (int i = 0; i < n - 1; ++i) {||| 12 if (arr[i] == 0 && arr[i + 1] == 0) {||| 13 cout << -1 << endl;||| 14 v = 1;||| 15 }||| 16 }||| 17 int ans = 1;||| 18 if (v == 0) {||| 19 ans += arr[0];||| 20 for (int i = 1; i < n; ++i) {||| 21 if (arr[i] == 1) {||| 22 ans += arr[i] + 4 * arr[i - 1];||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 }||| 28 int main() {||| 29 cin >> t;||| 30 for (int z = 0; z < t; ++z) {||| 31 cf();||| 32 }||| 33 }||| 	15 break;
46	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 long long int a[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 long long int count = 0, num = INT_MIN;||| 14 long long int maxn = *max_element(a, a + n);||| 15 if (a[n - 1] == maxn) {||| 16 cout << ""0\n"";||| 17 } else {||| 18 for (int i = n - 1; i >= 0; i--) {||| 19 if (a[i] == maxn) {||| 20 break;||| 21 } else if (a[i] > num) {||| 22 count++;||| 23 num = a[i];||| 24 }||| 25 }||| 26 cout << count << endl;||| 27 }||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 long long int a[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 long long int count = 0, num = INT_MIN;||| 14 long long int maxn = *max_element(a, a + n);||| 15 if (a[n - 1] == maxn) {||| 16 cout << ""0"";||| 17 } else {||| 18 for (int i = n - 1; i >= 0; i--) {||| 19 if (a[i] == maxn) {||| 20 break;||| 21 } else if (a[i] > num) {||| 22 count++;||| 23 num = a[i];||| 24 }||| 25 }||| 26 cout << count << endl;||| 27 }||| 28 }||| 29 }||| "	"16 cout << ""0\n"";"
46	110	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n;||| 10 cin >> n;||| 11 int a[n];||| 12 int itr, maxa = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 if (a[i] >= maxa) {||| 16 maxa = a[i];||| 17 itr = i;||| 18 }||| 19 }||| 20 int br = 0, maxbr = a[n - 1];||| 21 for (int i = n - 1; i >= itr; i--) {||| 22 if (maxbr < a[i]) br++;||| 23 maxbr = max(a[i], maxbr);||| 24 }||| 25 cout << br << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n;||| 10 cin >> n;||| 11 int a[n];||| 12 int itr, maxa = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 if (a[i] >= maxa) {||| 16 maxa = a[i];||| 17 itr = i;||| 18 }||| 19 }||| 20 int br = 0, maxbr = a[n - 1];||| 21 for (int i = n - 1; i > itr; i--) {||| 22 if (maxbr <= a[i]) br++;||| 23 maxbr = max(a[i], maxbr);||| 24 }||| 25 cout << br << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	21 for (int i = n - 1; i >= itr; i--) {
46	77	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 stable_sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200100];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	6 } x[200010];
46	100	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 stable_sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	17 stable_sort(x + 1, x + n + 1, cmp);
46	208	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const int64_t longinf = LLONG_MAX - 100000;||| 5 const long long inf = INT_MAX;||| 6 long long pw(long long x, long long y, long long p = longinf) {||| 7 long long res = 1;||| 8 x = x % p;||| 9 if (x == 0) return 0;||| 10 while (y > 0) {||| 11 if (y & 1) res = (res * x) % p;||| 12 y = y >> 1;||| 13 x = (x * x) % p;||| 14 }||| 15 return res;||| 16 }||| 17 long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); }||| 18 long long cl(long long a, long long x) {||| 19 return a % x == 0 ? a / x : a / x + 1;||| 20 }||| 21 void run_time_terror(long long case_no = 0) {||| 22 long long n;||| 23 cin >> n;||| 24 vector<long long> a(n);||| 25 for (long long i = 0; i < n; ++i) {||| 26 cin >> a[i];||| 27 }||| 28 long long mx = -1;||| 29 for (long long i = 0; i < n; ++i) {||| 30 mx = max(mx, a[i]);||| 31 }||| 32 vector<long long> b;||| 33 b.push_back(a[0]);||| 34 for (long long i = 1; i < n; ++i) {||| 35 while (b.size() and b.back() <= a[i]) {||| 36 b.pop_back();||| 37 }||| 38 b.push_back(a[i]);||| 39 }||| 40 cout << b.size() - 1 << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0), cout.setf(ios::fixed);||| 45 cout << setprecision(0);||| 46 long long tt = 1;||| 47 cin >> tt;||| 48 for (long long case_no = 1; case_no <= tt; case_no++) {||| 49 run_time_terror(case_no);||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const int64_t longinf = LLONG_MAX - 100000;||| 5 const long long inf = INT_MAX;||| 6 long long pw(long long x, long long y, long long p = longinf) {||| 7 long long res = 1;||| 8 x = x % p;||| 9 if (x == 0) return 0;||| 10 while (y > 0) {||| 11 if (y & 1) res = (res * x) % p;||| 12 y = y >> 1;||| 13 x = (x * x) % p;||| 14 }||| 15 return res;||| 16 }||| 17 long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); }||| 18 long long cl(long long a, long long x) {||| 19 return a % x == 0 ? a / x : a / x + 1;||| 20 }||| 21 void run_time_terror(long long case_no = 0) {||| 22 long long n;||| 23 cin >> n;||| 24 vector<long long> a(n);||| 25 for (long long i = 0; i < n; ++i) {||| 26 cin >> a[i];||| 27 }||| 28 long long mx = -1;||| 29 for (long long i = 0; i < n; ++i) {||| 30 mx = max(mx, a[i]);||| 31 }||| 32 vector<long long> b;||| 33 b.push_back(a[0]);||| 34 for (long long i = 1; i < n; ++i) {||| 35 while (b.size() and b.back() < a[i]) {||| 36 b.pop_back();||| 37 }||| 38 b.push_back(a[i]);||| 39 }||| 40 cout << b.size() - 1 << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0), cout.setf(ios::fixed);||| 45 cout << setprecision(0);||| 46 long long tt = 1;||| 47 cin >> tt;||| 48 for (long long case_no = 1; case_no <= tt; case_no++) {||| 49 run_time_terror(case_no);||| 50 }||| 51 return 0;||| 52 }||| "	35 while (b.size() and b.back() <= a[i]) {
46	98	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, cnt = 0;||| 5 cin >> n;||| 6 int arr[n];||| 7 for (int(i) = (0); (i) < (n); ++(i)) {||| 8 cin >> arr[i];||| 9 }||| 10 long long x = arr[n - 1];||| 11 for (int i = n - 1; i >= 0; i--) {||| 12 if (arr[i] > x) {||| 13 cnt++;||| 14 x = arr[i];||| 15 }||| 16 if (i == 0) {||| 17 cout << cnt;||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 long long t;||| 24 cin >> t;||| 25 while (t--) {||| 26 solve();||| 27 cout << endl;||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, cnt = 0;||| 5 cin >> n;||| 6 int arr[n];||| 7 for (int(i) = (0); (i) < (n); ++(i)) {||| 8 cin >> arr[i];||| 9 }||| 10 long long x = arr[n - 1];||| 11 for (int i = n - 2; i >= 0; i--) {||| 12 if (arr[i] > x) {||| 13 cnt++;||| 14 x = arr[i];||| 15 }||| 16 if (i == 0) {||| 17 cout << cnt;||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 long long t;||| 24 cin >> t;||| 25 while (t--) {||| 26 solve();||| 27 cout << endl;||| 28 }||| 29 return 0;||| 30 }||| 	11 for (int i = n - 1; i >= 0; i--) {
47	238	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 ;||| 10 long long int k;||| 11 cin >> k;||| 12 ;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 ;||| 16 vector<int> v, r;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] > 0)||| 19 v.push_back(a[i]);||| 20 else||| 21 r.push_back(abs(a[i]));||| 22 }||| 23 sort(v.begin(), v.end());||| 24 sort(r.begin(), r.end());||| 25 int w = v.size(), y = r.size();||| 26 long long int ans = 0;||| 27 int i = w - 1, i1 = y - 1;||| 28 while (1) {||| 29 if (i < 0) break;||| 30 if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1]))||| 31 ans += v[i];||| 32 else if (i == w - 1 && y == 0)||| 33 ans += v[i];||| 34 else||| 35 ans += 2 * v[i];||| 36 i = i - k;||| 37 if (i < 0) break;||| 38 }||| 39 while (1) {||| 40 if (i1 < 0) break;||| 41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1]))||| 42 ans += r[i1];||| 43 else if (i1 == y - 1 && w == 0)||| 44 ans += r[i1];||| 45 else||| 46 ans += 2 * r[i1];||| 47 i1 = i1 - k;||| 48 if (i1 < 0) break;||| 49 }||| 50 cout << ans << endl;||| 51 }||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 ;||| 10 long long int k;||| 11 cin >> k;||| 12 ;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 ;||| 16 vector<int> v, r;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] > 0)||| 19 v.push_back(a[i]);||| 20 else||| 21 r.push_back(abs(a[i]));||| 22 }||| 23 sort(v.begin(), v.end());||| 24 sort(r.begin(), r.end());||| 25 int w = v.size(), y = r.size();||| 26 long long int ans = 0;||| 27 int i = w - 1, i1 = y - 1;||| 28 while (1) {||| 29 if (i < 0) break;||| 30 if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1]))||| 31 ans += v[i];||| 32 else if (i == w - 1 && y == 0)||| 33 ans += v[i];||| 34 else||| 35 ans += 2 * v[i];||| 36 i = i - k;||| 37 if (i < 0) break;||| 38 }||| 39 while (1) {||| 40 if (i1 < 0) break;||| 41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] < r[y - 1]))||| 42 ans += r[i1];||| 43 else if (i1 == y - 1 && w == 0)||| 44 ans += r[i1];||| 45 else||| 46 ans += 2 * r[i1];||| 47 i1 = i1 - k;||| 48 if (i1 < 0) break;||| 49 }||| 50 cout << ans << endl;||| 51 }||| 52 }||| 	41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1]))
47	75	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 2 * 1e5 + 7;||| 4 const int INF = 1e10 + 7;||| 5 const int MOD = 1e9 + 7;||| 6 const int LOG = 22;||| 7 long long a[MAX_N];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 long long n, k;||| 16 cin >> n >> k;||| 17 for (int i = 0; i < n; i++) cin >> a[i];||| 18 sort(a, a + n);||| 19 vector<long long> v;||| 20 long long ans = 0, p = n;||| 21 for (int i = 0; i < n; i++) {||| 22 if (a[i] >= 0) {||| 23 p = i;||| 24 break;||| 25 }||| 26 }||| 27 long long MIN = INF, MAX = 0;||| 28 for (int i = 0; i < p; i += k) {||| 29 MIN = INF;||| 30 if (i + k - 1 >= p) {||| 31 for (int j = i; j < p; j++) MIN = min(MIN, a[j]);||| 32 } else {||| 33 for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]);||| 34 }||| 35 v.push_back(abs(MIN));||| 36 }||| 37 for (int i = n - 1; i >= p; i -= k) {||| 38 MAX = 0;||| 39 if (i - k + 1 < p) {||| 40 for (int j = i; j >= p; j--) MAX = max(MAX, a[j]);||| 41 } else {||| 42 for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]);||| 43 }||| 44 v.push_back(MAX);||| 45 }||| 46 sort(v.begin(), v.end());||| 47 for (int x : v) ans += (2 * x);||| 48 ans -= v[v.size() - 1];||| 49 cout << ans << '\n';||| 50 v.clear();||| 51 }||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 2 * 1e5 + 7;||| 4 const int INF = 1e10 + 7;||| 5 const int MOD = 1e9 + 7;||| 6 const int LOG = 22;||| 7 long long a[MAX_N];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 long long n, k;||| 16 cin >> n >> k;||| 17 for (int i = 0; i < n; i++) cin >> a[i];||| 18 sort(a, a + n);||| 19 vector<long long> v;||| 20 long long ans = 0, p = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (a[i] >= 0) {||| 23 p = i;||| 24 break;||| 25 }||| 26 }||| 27 long long MIN = INF, MAX = 0;||| 28 for (int i = 0; i < p; i += k) {||| 29 MIN = INF;||| 30 if (i + k - 1 >= p) {||| 31 for (int j = i; j < p; j++) MIN = min(MIN, a[j]);||| 32 } else {||| 33 for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]);||| 34 }||| 35 v.push_back(abs(MIN));||| 36 }||| 37 for (int i = n - 1; i >= p; i -= k) {||| 38 MAX = 0;||| 39 if (i - k + 1 < p) {||| 40 for (int j = i; j >= p; j--) MAX = max(MAX, a[j]);||| 41 } else {||| 42 for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]);||| 43 }||| 44 v.push_back(MAX);||| 45 }||| 46 sort(v.begin(), v.end());||| 47 for (int x : v) ans += (2 * x);||| 48 ans -= v[v.size() - 1];||| 49 cout << ans << '\n';||| 50 v.clear();||| 51 }||| 52 }||| 	20 long long ans = 0, p = n;
47	216	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 5e5 + 5;||| 4 vector<long long> a, b;||| 5 long long solve() {||| 6 a.clear();||| 7 b.clear();||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 while (n--) {||| 11 long long e;||| 12 cin >> e;||| 13 if (e > 0)||| 14 a.push_back(e);||| 15 else if (e < 0)||| 16 b.push_back(-e);||| 17 }||| 18 a.push_back(0);||| 19 b.push_back(0);||| 20 sort(a.begin(), a.end(), greater<long long>());||| 21 sort(b.begin(), b.end(), greater<long long>());||| 22 long long ans = a[0] + b[0];||| 23 long long have = m - 1;||| 24 for (long long i = 1; i < a.size(); ++i) {||| 25 if (have == 0) {||| 26 have = m;||| 27 ans += 2 * a[i];||| 28 }||| 29 have--;||| 30 }||| 31 have = m - 1;||| 32 for (long long i = 1; i < b.size(); ++i) {||| 33 if (have == 0) {||| 34 have = m;||| 35 ans += 2 * b[i];||| 36 }||| 37 have--;||| 38 }||| 39 if (a[0] < b[0])||| 40 ans += a[0];||| 41 else||| 42 ans += b[0];||| 43 return ans;||| 44 }||| 45 signed main() {||| 46 ios::sync_with_stdio(false);||| 47 long long t;||| 48 cin >> t;||| 49 while (t--) {||| 50 cout << solve() << endl;||| 51 }||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 5e5 + 5;||| 4 vector<long long> a, b;||| 5 long long solve() {||| 6 a.clear();||| 7 b.clear();||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 while (n--) {||| 11 long long e;||| 12 cin >> e;||| 13 if (e > 0)||| 14 a.push_back(e);||| 15 else if (e < 0)||| 16 b.push_back(-e);||| 17 }||| 18 a.push_back(0);||| 19 b.push_back(0);||| 20 sort(a.begin(), a.end(), greater<long long>());||| 21 sort(b.begin(), b.end(), greater<long long>());||| 22 long long ans = a[0] + b[0];||| 23 long long have = m - 1;||| 24 for (long long i = 1; i < a.size(); ++i) {||| 25 if (have == 0) {||| 26 have = m;||| 27 ans += 2 * a[i];||| 28 }||| 29 have--;||| 30 }||| 31 have = m - 1;||| 32 for (long long i = 1; i < b.size(); ++i) {||| 33 if (have == 0) {||| 34 have = m;||| 35 ans += 2 * b[i];||| 36 }||| 37 have--;||| 38 }||| 39 if (a[0] < b[0])||| 40 ans += a[0];||| 41 else||| 42 ans += 2 * b[0];||| 43 return ans;||| 44 }||| 45 signed main() {||| 46 ios::sync_with_stdio(false);||| 47 long long t;||| 48 cin >> t;||| 49 while (t--) {||| 50 cout << solve() << endl;||| 51 }||| 52 }||| 	42 ans += b[0];
48	73	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 long long merge(long long arr[], long long l, long long mid, long long r) {||| 7 long long ans = 0;||| 8 long long n1 = mid - l + 1;||| 9 long long n2 = r - mid;||| 10 long long a[n1];||| 11 long long b[n2];||| 12 for (long long i = 0; i < n1; i++) {||| 13 a[i] = arr[l + i];||| 14 }||| 15 for (long long i = 0; i < n2; i++) {||| 16 b[i] = arr[mid + 1 + i];||| 17 }||| 18 long long i = 0;||| 19 long long j = 0;||| 20 long long k = l;||| 21 while (i < n1 && j < n2) {||| 22 if (a[i] <= b[j]) {||| 23 arr[k] = a[i];||| 24 k++;||| 25 i++;||| 26 } else {||| 27 ans += n1 - i;||| 28 arr[k] = b[j];||| 29 k++;||| 30 j++;||| 31 }||| 32 }||| 33 while (i < n1) {||| 34 arr[k] = a[i];||| 35 k++;||| 36 i++;||| 37 }||| 38 while (j < n2) {||| 39 arr[k] = b[j];||| 40 k++;||| 41 j++;||| 42 }||| 43 return ans;||| 44 }||| 45 long long inversion_count(long long arr[], long long l, long long r) {||| 46 long long ans = 0;||| 47 if (l < r) {||| 48 long long mid = (l + r) / 2;||| 49 ans += inversion_count(arr, l, mid);||| 50 ans += inversion_count(arr, mid + 1, r);||| 51 ans += merge(arr, l, mid, r);||| 52 }||| 53 return ans;||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 long long t;||| 60 cin >> t;||| 61 while (t--) {||| 62 long long n;||| 63 cin >> n;||| 64 long long v[n];||| 65 for (long long i = 0; i < n; i++) cin >> v[i];||| 66 bool ans = false;||| 67 long long inv = inversion_count(v, 0, n - 1);||| 68 if (inv % 2 == 0)||| 69 ans = true;||| 70 else {||| 71 sort(v, v + n);||| 72 for (long long i = 0; i < n - 1; i++)||| 73 if (v[i] == v[i + 1]) ans = true;||| 74 }||| 75 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 long long merge(long long arr[], long long l, long long mid, long long r) {||| 7 long long ans = 0;||| 8 long long n1 = mid - l + 1;||| 9 long long n2 = r - mid;||| 10 long long a[n1];||| 11 long long b[n2];||| 12 for (long long i = 0; i < n1; i++) {||| 13 a[i] = arr[l + i];||| 14 }||| 15 for (long long i = 0; i < n2; i++) {||| 16 b[i] = arr[mid + 1 + i];||| 17 }||| 18 long long i = 0;||| 19 long long j = 0;||| 20 long long k = l;||| 21 while (i < n1 && j < n2) {||| 22 if (a[i] <= b[j]) {||| 23 arr[k] = a[i];||| 24 k++;||| 25 i++;||| 26 } else {||| 27 ans += n1 - i;||| 28 arr[k] = b[j];||| 29 k++;||| 30 j++;||| 31 }||| 32 }||| 33 while (i < n1) {||| 34 arr[k] = a[i];||| 35 k++;||| 36 i++;||| 37 }||| 38 while (j < n2) {||| 39 arr[k] = b[j];||| 40 k++;||| 41 j++;||| 42 }||| 43 return ans;||| 44 }||| 45 long long inversion_count(long long arr[], long long l, long long r) {||| 46 long long ans = 0;||| 47 if (l < r) {||| 48 long long mid = (l + r) / 2;||| 49 ans += inversion_count(arr, l, mid);||| 50 ans += inversion_count(arr, mid + 1, r);||| 51 ans += merge(arr, l, mid, r);||| 52 }||| 53 return ans;||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 long long t;||| 60 cin >> t;||| 61 while (t--) {||| 62 long long n;||| 63 cin >> n;||| 64 long long v[n];||| 65 for (long long i = 0; i < n; i++) cin >> v[i];||| 66 bool ans = false;||| 67 long long inv = inversion_count(v, 0, n);||| 68 if (inv % 2 == 0)||| 69 ans = true;||| 70 else {||| 71 sort(v, v + n);||| 72 for (long long i = 0; i < n - 1; i++)||| 73 if (v[i] == v[i + 1]) ans = true;||| 74 }||| 75 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 76 }||| 77 return 0;||| 78 }||| "	67 long long inv = inversion_count(v, 0, n - 1);
48	139	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 500000 + 50;||| 4 int T, n, h[maxn], f[maxn], tot, ti[maxn];||| 5 int ans, sum;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 for (int oo = 1; oo <= T; ++oo) {||| 9 scanf(""%d"", &n);||| 10 tot = 0;||| 11 vector<bool> used(n);||| 12 vector<set<int>> gi(n), ed(n);||| 13 vector<int> seet;||| 14 ans = 0, sum = 0;||| 15 for (int i = 0; i < n; i++) f[i] = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 scanf(""%d"", &h[i]);||| 18 tot = max(tot, ++f[--h[i]]);||| 19 }||| 20 for (int i = 0; i < n; ++i) ti[i] = h[i];||| 21 sort(h, h + n);||| 22 for (int i = 0; i < n; i++)||| 23 if (h[i] != ti[i])||| 24 gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i);||| 25 function<void(int)> dfs = [&](int u) {||| 26 ed[h[u]].erase(u);||| 27 sum++;||| 28 gi[ti[u]].erase(u);||| 29 if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin());||| 30 };||| 31 for (int i : seet)||| 32 if (gi[ti[i]].count(i)) {||| 33 sum = 0;||| 34 dfs(i);||| 35 if (sum % 2 == 0) ++ans;||| 36 }||| 37 bool p = 1;||| 38 if (tot > 1 || ans % 2 == 0) p = 0;||| 39 if (!p)||| 40 printf(""YES\n"");||| 41 else||| 42 printf(""NO\n"");||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 500000 + 50;||| 4 int T, n, h[maxn], f[maxn], tot, ti[maxn];||| 5 int ans, sum;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 for (int oo = 1; oo <= T; ++oo) {||| 9 scanf(""%d"", &n);||| 10 tot = 0;||| 11 vector<bool> used(n);||| 12 vector<set<int>> gi(n), ed(n);||| 13 vector<int> seet;||| 14 ans = 0, sum = 0;||| 15 for (int i = 0; i < n; i++) f[i] = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 scanf(""%d"", &h[i]);||| 18 tot = max(tot, f[--h[i]]++);||| 19 }||| 20 for (int i = 0; i < n; ++i) ti[i] = h[i];||| 21 sort(h, h + n);||| 22 for (int i = 0; i < n; i++)||| 23 if (h[i] != ti[i])||| 24 gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i);||| 25 function<void(int)> dfs = [&](int u) {||| 26 ed[h[u]].erase(u);||| 27 sum++;||| 28 gi[ti[u]].erase(u);||| 29 if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin());||| 30 };||| 31 for (int i : seet)||| 32 if (gi[ti[i]].count(i)) {||| 33 sum = 0;||| 34 dfs(i);||| 35 if (sum % 2 == 0) ++ans;||| 36 }||| 37 bool p = 1;||| 38 if (tot > 1 || ans % 2 == 0) p = 0;||| 39 if (!p)||| 40 printf(""YES\n"");||| 41 else||| 42 printf(""NO\n"");||| 43 }||| 44 return 0;||| 45 }||| "	18 tot = max(tot, ++f[--h[i]]);
48	152	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 int d[maxn];||| 5 unordered_map<int, int> mp;||| 6 struct node {||| 7 int id;||| 8 int va;||| 9 };||| 10 vector<node> vec;||| 11 bool cmp(node a, node b) { return a.va < b.va; }||| 12 bool vis[maxn];||| 13 int main() {||| 14 ios::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 vec.clear();||| 20 mp.clear();||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 mp[x]++;||| 27 vis[i] = 0;||| 28 vec.push_back({i, x});||| 29 }||| 30 bool flag = false;||| 31 for (auto i : mp) {||| 32 if (i.second >= 2) {||| 33 cout << ""YES"" << '\n';||| 34 ;||| 35 flag = true;||| 36 break;||| 37 }||| 38 }||| 39 if (flag) continue;||| 40 sort(vec.begin(), vec.end(), cmp);||| 41 for (int i = 0; i < n; i++) {||| 42 d[vec[i].id] = i + 1;||| 43 }||| 44 int cnt = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 if (vis[i]) continue;||| 47 int to = i;||| 48 vis[to] = true;||| 49 to = d[to];||| 50 int ta = 1;||| 51 while (to != i) {||| 52 vis[to] = true;||| 53 ta++;||| 54 to = d[to];||| 55 }||| 56 if (ta & 1)||| 57 ;||| 58 else||| 59 cnt++;||| 60 }||| 61 cout << ((cnt & 1) ? ""NO"" : ""YES"") << '\n';||| 62 ;||| 63 }||| 64 return 0;||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 int d[maxn];||| 5 unordered_map<int, int> mp;||| 6 struct node {||| 7 int id;||| 8 int va;||| 9 };||| 10 vector<node> vec;||| 11 bool cmp(node a, node b) { return a.va < b.va; }||| 12 bool vis[maxn];||| 13 int main() {||| 14 ios::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 vec.clear();||| 20 mp.clear();||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 mp[x]++;||| 27 vis[i] = 0;||| 28 vec.push_back({i, x});||| 29 }||| 30 bool flag = false;||| 31 for (auto i : mp) {||| 32 if (i.second >= 2) {||| 33 cout << ""NO"" << '\n';||| 34 ;||| 35 flag = true;||| 36 break;||| 37 }||| 38 }||| 39 if (flag) continue;||| 40 sort(vec.begin(), vec.end(), cmp);||| 41 for (int i = 0; i < n; i++) {||| 42 d[vec[i].id] = i + 1;||| 43 }||| 44 int cnt = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 if (vis[i]) continue;||| 47 int to = i;||| 48 vis[to] = true;||| 49 to = d[to];||| 50 int ta = 1;||| 51 while (to != i) {||| 52 vis[to] = true;||| 53 ta++;||| 54 to = d[to];||| 55 }||| 56 if (ta & 1)||| 57 ;||| 58 else||| 59 cnt++;||| 60 }||| 61 cout << ((cnt & 1) ? ""NO"" : ""YES"") << '\n';||| 62 ;||| 63 }||| 64 return 0;||| 65 }||| "	"33 cout << ""YES"" << '\n';"
48	80	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007;||| 4 long long q, n, a[NMX], A[NMX], kq;||| 5 bool dd[NMX], YES;||| 6 void update(long long x) {||| 7 while (x > 0) {||| 8 A[x]++;||| 9 x -= ((x) & (-(x)));||| 10 }||| 11 }||| 12 long long get(long long x) {||| 13 long long res = 0;||| 14 while (x <= n) {||| 15 res += A[x];||| 16 x += ((x) & (-(x)));||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 cout.tie(NULL);||| 24 cin >> q;||| 25 while (q--) {||| 26 cin >> n;||| 27 for (int i = 1; i <= (int)(n); i++) {||| 28 cin >> a[i];||| 29 A[i] = 0;||| 30 dd[i] = false;||| 31 }||| 32 YES = false;||| 33 for (int i = 1; i <= (int)(n); i++) {||| 34 if (dd[a[i]]) {||| 35 cout << ""YES\n"";||| 36 YES = true;||| 37 break;||| 38 }||| 39 dd[a[i]] = true;||| 40 }||| 41 if (YES) continue;||| 42 kq = 0;||| 43 for (int i = 1; i <= (int)(n); i++) {||| 44 kq += get(a[i] + 1);||| 45 update(a[i]);||| 46 }||| 47 cout << (kq % 2 == 0 ? ""YES\n"" : ""NO\n"");||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007;||| 4 long long q, n, a[NMX], A[NMX], kq;||| 5 bool dd[NMX], YES;||| 6 void update(long long x) {||| 7 while (x > 0) {||| 8 A[x]++;||| 9 x -= ((x) & (-(x)));||| 10 }||| 11 }||| 12 long long get(long long x) {||| 13 long long res = 0;||| 14 while (x < NMX) {||| 15 res += A[x];||| 16 x += ((x) & (-(x)));||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 cout.tie(NULL);||| 24 cin >> q;||| 25 while (q--) {||| 26 cin >> n;||| 27 for (int i = 1; i <= (int)(n); i++) {||| 28 cin >> a[i];||| 29 A[i] = 0;||| 30 dd[i] = false;||| 31 }||| 32 YES = false;||| 33 for (int i = 1; i <= (int)(n); i++) {||| 34 if (dd[a[i]]) {||| 35 cout << ""YES\n"";||| 36 YES = true;||| 37 break;||| 38 }||| 39 dd[a[i]] = true;||| 40 }||| 41 if (YES) continue;||| 42 kq = 0;||| 43 for (int i = 1; i <= (int)(n); i++) {||| 44 kq += get(a[i] + 1);||| 45 update(a[i]);||| 46 }||| 47 cout << (kq % 2 == 0 ? ""YES\n"" : ""NO\n"");||| 48 }||| 49 return 0;||| 50 }||| "	14 while (x <= n) {
48	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 template <typename T>||| 22 void read(T &x) {||| 23 cin >> x;||| 24 }||| 25 template <typename T, typename U>||| 26 void read(T &x, U &y) {||| 27 cin >> x >> y;||| 28 }||| 29 template <typename T>||| 30 void read(vector<T> &a) {||| 31 for (T &x : a) read(x);||| 32 }||| 33 template <typename T>||| 34 T cd(T u, T v) {||| 35 return (u + v - 1) / v;||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 read(n);||| 40 vector<long long> a(n);||| 41 read(a);||| 42 auto v = a;||| 43 sort(v.begin(), v.end());||| 44 if (n <= 2) {||| 45 cout << (a == v ? ""YES\n"" : ""NO\n"");||| 46 return;||| 47 }||| 48 map<long long, set<long long>> mp;||| 49 for (long long i = 0; i < n; i++) mp[a[i]].insert(i);||| 50 for (long long i = 0; i < n - 2; i++) {||| 51 if (a[i] == v[i]) {||| 52 mp[a[i]].erase(i);||| 53 } else {||| 54 long long j = *mp[v[i]].begin();||| 55 long long k = (j == n - 1) ? n - 2 : n - 1;||| 56 mp[a[i]].erase(i);||| 57 mp[a[k]].erase(k);||| 58 mp[a[j]].erase(j);||| 59 long long temp = a[i];||| 60 a[i] = a[j];||| 61 a[j] = a[k];||| 62 a[k] = temp;||| 63 mp[a[k]].insert(k);||| 64 mp[a[j]].insert(j);||| 65 assert(set<long long>({i, j, k}).size() == 3);||| 66 }||| 67 debug() << "" [""||| 68 << ""mp""||| 69 "": ""||| 70 << (mp) << ""] "";||| 71 }||| 72 long long mx = 0;||| 73 for (long long i = 0; i < n - 2; i++) mx = max(mx, a[i]);||| 74 if (mx > min(a[n - 1], a[n - 2])) {||| 75 cout << ""NO\n"";||| 76 return;||| 77 }||| 78 for (long long i = n - 2; i < n; i++) {||| 79 if (a[i] != v[i]) {||| 80 map<long long, long long> mpp;||| 81 for (long long j = 0; j < n; j++) mpp[a[j]]++;||| 82 for (auto &p : mpp) {||| 83 if (p.second >= 2) {||| 84 cout << ""YES\n"";||| 85 return;||| 86 }||| 87 }||| 88 cout << ""NO\n"";||| 89 return;||| 90 }||| 91 }||| 92 assert(is_sorted(a.begin(), a.end()));||| 93 cout << ""YES\n"";||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(NULL);||| 98 long long t = 1;||| 99 read(t);||| 100 for (long long testcase = 1; testcase <= t; testcase++) {||| 101 solve();||| 102 }||| 103 return 0;||| 104 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 template <typename T>||| 22 void read(T &x) {||| 23 cin >> x;||| 24 }||| 25 template <typename T, typename U>||| 26 void read(T &x, U &y) {||| 27 cin >> x >> y;||| 28 }||| 29 template <typename T>||| 30 void read(vector<T> &a) {||| 31 for (T &x : a) read(x);||| 32 }||| 33 template <typename T>||| 34 T cd(T u, T v) {||| 35 return (u + v - 1) / v;||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 read(n);||| 40 vector<long long> a(n);||| 41 read(a);||| 42 auto v = a;||| 43 sort(v.begin(), v.end());||| 44 if (n <= 2) {||| 45 cout << (a == v ? ""YES\n"" : ""NO\n"");||| 46 return;||| 47 }||| 48 map<long long, set<long long>> mp;||| 49 for (long long i = 0; i < n; i++) mp[a[i]].insert(i);||| 50 for (long long i = 0; i < n - 2; i++) {||| 51 if (a[i] == v[i]) {||| 52 mp[a[i]].erase(i);||| 53 } else {||| 54 long long j = *mp[v[i]].begin();||| 55 long long k = (j == n - 1) ? n - 2 : n - 1;||| 56 mp[a[i]].erase(i);||| 57 mp[a[k]].erase(k);||| 58 mp[a[j]].erase(j);||| 59 long long temp = a[i];||| 60 a[i] = a[j];||| 61 a[j] = a[k];||| 62 a[k] = temp;||| 63 mp[a[k]].insert(k);||| 64 mp[a[j]].insert(j);||| 65 assert(set<long long>({i, j, k}).size() == 3);||| 66 }||| 67 debug() << "" [""||| 68 << ""mp""||| 69 "": ""||| 70 << (mp) << ""] "";||| 71 }||| 72 long long mx = 0;||| 73 for (long long i = 0; i < n - 2; i++) mx = max(mx, a[i]);||| 74 if (mx > min(a[n - 1], a[n - 2])) {||| 75 cout << ""NO\n"";||| 76 return;||| 77 }||| 78 for (long long i = n - 2; i < n; i++) {||| 79 if (a[i] != v[i]) {||| 80 map<long long, long long> mpp;||| 81 for (long long j = 0; j < n - 2; j++) mpp[a[j]]++;||| 82 for (auto &p : mpp) {||| 83 if (p.second >= 2) {||| 84 cout << ""YES\n"";||| 85 return;||| 86 }||| 87 }||| 88 cout << ""NO\n"";||| 89 return;||| 90 }||| 91 }||| 92 assert(is_sorted(a.begin(), a.end()));||| 93 cout << ""YES\n"";||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(NULL);||| 98 long long t = 1;||| 99 read(t);||| 100 for (long long testcase = 1; testcase <= t; testcase++) {||| 101 solve();||| 102 }||| 103 return 0;||| 104 }||| "	81 for (long long j = 0; j < n; j++) mpp[a[j]]++;
48	125	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd;||| 4 struct node {||| 5 node *l = 0, *r = 0;||| 6 int x, y, siz;||| 7 node(int x) : x(x), y(rnd()), siz(1) {}||| 8 };||| 9 int size(node *t) {||| 10 if (!t) return 0;||| 11 return t->siz;||| 12 }||| 13 void update(node *t) { t->siz = size(t->l) + size(t->r) + 1; }||| 14 pair<node *, node *> split(node *t, int x) {||| 15 if (!t) return {0, 0};||| 16 if (t->x <= x) {||| 17 auto p = split(t->r, x);||| 18 t->r = p.first;||| 19 update(t);||| 20 return {t, p.second};||| 21 } else {||| 22 auto p = split(t->l, x);||| 23 t->l = p.second;||| 24 update(t);||| 25 return {p.first, t};||| 26 }||| 27 }||| 28 node *merge(node *a, node *b) {||| 29 if (!a) return b;||| 30 if (!b) return a;||| 31 if (a->y > b->y) {||| 32 a->r = merge(a->r, b);||| 33 update(a);||| 34 return a;||| 35 } else {||| 36 b->l = merge(a, b->l);||| 37 update(b);||| 38 return b;||| 39 }||| 40 }||| 41 node *insert(node *t, node *in) {||| 42 if (!t) return in;||| 43 if (in->y > t->y) {||| 44 auto p = split(t, in->x);||| 45 in->l = p.first;||| 46 in->r = p.second;||| 47 update(in);||| 48 return in;||| 49 }||| 50 if (in->x < t->x) {||| 51 t->l = insert(t->l, in);||| 52 } else {||| 53 t->r = insert(t->r, in);||| 54 }||| 55 update(t);||| 56 return t;||| 57 }||| 58 int main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int t;||| 63 cin >> t;||| 64 for (int useless = 0; useless < t; useless++) {||| 65 int n;||| 66 cin >> n;||| 67 vector<int> a(n);||| 68 for (int i = 0; i < n; i++) cin >> a[i];||| 69 node *t = 0;||| 70 vector<int> a_srt(n);||| 71 copy(a.begin(), a.end(), a_srt.begin());||| 72 sort(a_srt.begin(), a_srt.end());||| 73 bool good = false;||| 74 for (int i = 1; i < n; i++) {||| 75 if (a_srt[i] == a_srt[i - 1]) {||| 76 cout << ""YES\n"";||| 77 good = true;||| 78 break;||| 79 }||| 80 }||| 81 if (good) continue;||| 82 bool dp_all = true;||| 83 t = insert(t, new node(a[0]));||| 84 for (int i = 1; i < n; i++) {||| 85 auto p = split(t, a[i]);||| 86 if (size(p.second) % 2) {||| 87 dp_all = !dp_all;||| 88 }||| 89 t = merge(p.first, p.second);||| 90 t = insert(t, new node(a[i]));||| 91 }||| 92 if (dp_all)||| 93 cout << ""YES\n"";||| 94 else||| 95 cout << ""NO\n"";||| 96 }||| 97 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd;||| 4 struct node {||| 5 node *l = 0, *r = 0;||| 6 int x, y, siz;||| 7 node(int x) : x(x), y(rnd()), siz(1) {}||| 8 };||| 9 int size(node *t) {||| 10 if (!t) return 0;||| 11 return t->siz;||| 12 }||| 13 void update(node *t) { t->siz = size(t->l) + size(t->r) + 1; }||| 14 pair<node *, node *> split(node *t, int x) {||| 15 if (!t) return {0, 0};||| 16 if (t->x <= x) {||| 17 auto p = split(t->r, x);||| 18 t->r = p.first;||| 19 update(t);||| 20 return {t, p.second};||| 21 } else {||| 22 auto p = split(t->l, x);||| 23 t->l = p.second;||| 24 update(t);||| 25 return {p.first, t};||| 26 }||| 27 }||| 28 node *merge(node *a, node *b) {||| 29 if (!a) return b;||| 30 if (!b) return a;||| 31 if (a->y > b->y) {||| 32 a->r = merge(a->r, b);||| 33 update(a);||| 34 return a;||| 35 } else {||| 36 b->l = merge(a, b->l);||| 37 update(b);||| 38 return b;||| 39 }||| 40 }||| 41 node *insert(node *t, node *in) {||| 42 if (!t) return in;||| 43 if (in->y > t->y) {||| 44 auto p = split(t, in->x);||| 45 in->l = p.first;||| 46 in->r = p.second;||| 47 update(in);||| 48 return in;||| 49 }||| 50 if (in->x < t->x) {||| 51 t->l = insert(t->l, in);||| 52 } else {||| 53 t->r = insert(t->r, in);||| 54 }||| 55 update(t);||| 56 return t;||| 57 }||| 58 int main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int t;||| 63 cin >> t;||| 64 for (int useless = 0; useless < t; useless++) {||| 65 int n;||| 66 cin >> n;||| 67 vector<int> a(n);||| 68 for (int i = 0; i < n; i++) cin >> a[i];||| 69 node *t = 0;||| 70 vector<int> a_srt(n);||| 71 copy(a.begin(), a.end(), a_srt.begin());||| 72 sort(a_srt.begin(), a_srt.end());||| 73 bool good = false;||| 74 for (int i = 1; i < n; i++) {||| 75 if (a[i] == a[i - 1]) {||| 76 cout << ""YES\n"";||| 77 good = true;||| 78 break;||| 79 }||| 80 }||| 81 if (good) continue;||| 82 bool dp_all = true;||| 83 t = insert(t, new node(a[0]));||| 84 for (int i = 1; i < n; i++) {||| 85 auto p = split(t, a[i]);||| 86 if (size(p.second) % 2) {||| 87 dp_all = !dp_all;||| 88 }||| 89 t = merge(p.first, p.second);||| 90 t = insert(t, new node(a[i]));||| 91 }||| 92 if (dp_all)||| 93 cout << ""YES\n"";||| 94 else||| 95 cout << ""NO\n"";||| 96 }||| 97 }||| "	75 if (a_srt[i] == a_srt[i - 1]) {
33	151	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e5 + 10;||| 4 bool dp[MAXN][601];||| 5 int n, a[MAXN], minv[601];||| 6 void solve() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) cin >> a[i];||| 9 for (int i = (0); i <= (511); ++i) {||| 10 minv[i] = 0x7f7f7f7f;||| 11 }||| 12 dp[0][0] = 1;||| 13 minv[0] = -1;||| 14 for (int i = (1); i <= (n); ++i) {||| 15 for (int j = (0); j <= (511); ++j)||| 16 if ((a[i] ^ j) <= 511) {||| 17 dp[i][j] |= (dp[i - 1][j]);||| 18 dp[i][j] |= (minv[a[i] ^ j] < a[i]);||| 19 if ((minv[a[i] ^ j] < a[i])) minv[j] = min(minv[j], a[i]);||| 20 }||| 21 dp[i][a[i]] = 1;||| 22 minv[a[i]] = min(minv[a[i]], a[i]);||| 23 }||| 24 int cnt = 0;||| 25 for (int i = (0); i <= (511); ++i) cnt += (dp[n][i]);||| 26 cout << cnt << '\n';||| 27 for (int i = (0); i <= (511); ++i)||| 28 if (dp[n][i]) {||| 29 cout << i << ' ';||| 30 }||| 31 cout << '\n';||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 cin.tie(0);||| 36 int _;||| 37 _ = 1;||| 38 while (_--) {||| 39 solve();||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e5 + 10;||| 4 bool dp[MAXN][601];||| 5 int n, a[MAXN], minv[601];||| 6 void solve() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) cin >> a[i];||| 9 for (int i = (0); i <= (511); ++i) {||| 10 minv[i] = 0x7f7f7f7f;||| 11 }||| 12 dp[0][0] = 1;||| 13 minv[0] = -1;||| 14 for (int i = (1); i <= (n); ++i) {||| 15 for (int j = (0); j <= (16); ++j)||| 16 if ((a[i] ^ j) <= 16) {||| 17 dp[i][j] |= (dp[i - 1][j]);||| 18 dp[i][j] |= (minv[a[i] ^ j] < a[i]);||| 19 if ((minv[a[i] ^ j] < a[i])) minv[j] = min(minv[j], a[i]);||| 20 }||| 21 dp[i][a[i]] = 1;||| 22 minv[a[i]] = min(minv[a[i]], a[i]);||| 23 }||| 24 int cnt = 0;||| 25 for (int i = (0); i <= (511); ++i) cnt += (dp[n][i]);||| 26 cout << cnt << '\n';||| 27 for (int i = (0); i <= (511); ++i)||| 28 if (dp[n][i]) {||| 29 cout << i << ' ';||| 30 }||| 31 cout << '\n';||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 cin.tie(0);||| 36 int _;||| 37 _ = 1;||| 38 while (_--) {||| 39 solve();||| 40 }||| 41 return 0;||| 42 }||| 	15 for (int j = (0); j <= (511); ++j)
33	84	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 long long __pow(long long x, long long y, long long M) {||| 22 long long res = 1;||| 23 while (y > 0) {||| 24 if (y & 1) res = (res * x) % M;||| 25 y >>= 1;||| 26 x = (x * x) % M;||| 27 }||| 28 return res % M;||| 29 }||| 30 long long __pow(long long x, long long y) {||| 31 long long res = 1;||| 32 while (y > 0) {||| 33 if (y & 1) res = (res * x);||| 34 y >>= 1;||| 35 x = (x * x);||| 36 }||| 37 return res;||| 38 }||| 39 long long mi(long long x, long long M) { return __pow(x, M - 2, M); }||| 40 long long mul(vector<long long> a, long long M) {||| 41 long long res = 1;||| 42 for (auto x : a) res = (res * x) % M;||| 43 return res;||| 44 }||| 45 long long cl(long long a, long long b) {||| 46 if (a % b == 0) return a / b;||| 47 return a / b + 1;||| 48 }||| 49 void umax(long long &a, long long b) { a = max(a, b); }||| 50 void umin(long long &a, long long b) { a = min(a, b); }||| 51 const long long N = 2e5 + 2, inf = 1e18, M = 998244353, LN = 20;||| 52 long long Test, n, m, k, q, a[N];||| 53 bool ok = 1;||| 54 class BIT {||| 55 long long n, VAL;||| 56 vector<long long> bit;||| 57 ||| 58 public:||| 59 BIT() {}||| 60 BIT(long long _n, long long val) {||| 61 n = _n;||| 62 VAL = val;||| 63 bit.assign(2 * n + 2, VAL);||| 64 }||| 65 long long todo(long long a, long long b) { return a + b; }||| 66 void update(long long i, long long x) {||| 67 i++;||| 68 for (; i <= n; i += (i & -i)) bit[i] = todo(bit[i], x);||| 69 }||| 70 long long get(long long i) {||| 71 i++;||| 72 long long res = VAL;||| 73 for (; i; i -= (i & -i)) res = todo(res, bit[i]);||| 74 return res;||| 75 }||| 76 };||| 77 void test_case() {||| 78 cin >> n;||| 79 vector<BIT> trees(512);||| 80 for (long long i = 0; i <= 511; i++) trees[i] = BIT(512, 0);||| 81 vector<bool> vis(512);||| 82 vis[0] = 1;||| 83 long long cnt = 1;||| 84 for (long long i = 1, x; i <= n; i++) {||| 85 cin >> x;||| 86 if (!vis[x]) cnt++;||| 87 vis[x] = 1;||| 88 trees[x].update(x, 1);||| 89 for (long long j = 1; j <= 511; j++)||| 90 if (x > 0 && (x ^ j) > 0 && trees[x ^ j].get(x - 1) > 0)||| 91 cnt += !vis[j], vis[j] = 1, trees[j].update(x, 1);||| 92 }||| 93 cout << cnt << '\n';||| 94 for (long long i = 0; i < 512; i++)||| 95 if (vis[i]) cout << i << "" "";||| 96 cout << '\n';||| 97 }||| 98 int32_t main() {||| 99 ios::sync_with_stdio(0);||| 100 cin.tie(0);||| 101 cout.tie(0);||| 102 Test = 1;||| 103 for (long long t = 1; t <= Test; t++) {||| 104 test_case();||| 105 }||| 106 return 0;||| 107 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 long long __pow(long long x, long long y, long long M) {||| 22 long long res = 1;||| 23 while (y > 0) {||| 24 if (y & 1) res = (res * x) % M;||| 25 y >>= 1;||| 26 x = (x * x) % M;||| 27 }||| 28 return res % M;||| 29 }||| 30 long long __pow(long long x, long long y) {||| 31 long long res = 1;||| 32 while (y > 0) {||| 33 if (y & 1) res = (res * x);||| 34 y >>= 1;||| 35 x = (x * x);||| 36 }||| 37 return res;||| 38 }||| 39 long long mi(long long x, long long M) { return __pow(x, M - 2, M); }||| 40 long long mul(vector<long long> a, long long M) {||| 41 long long res = 1;||| 42 for (auto x : a) res = (res * x) % M;||| 43 return res;||| 44 }||| 45 long long cl(long long a, long long b) {||| 46 if (a % b == 0) return a / b;||| 47 return a / b + 1;||| 48 }||| 49 void umax(long long &a, long long b) { a = max(a, b); }||| 50 void umin(long long &a, long long b) { a = min(a, b); }||| 51 const long long N = 2e5 + 2, inf = 1e18, M = 998244353, LN = 20;||| 52 long long Test, n, m, k, q, a[N];||| 53 bool ok = 1;||| 54 class BIT {||| 55 long long n, VAL;||| 56 vector<long long> bit;||| 57 ||| 58 public:||| 59 BIT() {}||| 60 BIT(long long _n, long long val) {||| 61 n = _n;||| 62 VAL = val;||| 63 bit.assign(2 * n + 2, VAL);||| 64 }||| 65 long long todo(long long a, long long b) { return a + b; }||| 66 void update(long long i, long long x) {||| 67 i++;||| 68 for (; i <= n; i += (i & -i)) bit[i] = todo(bit[i], x);||| 69 }||| 70 long long get(long long i) {||| 71 i++;||| 72 long long res = VAL;||| 73 for (; i; i -= (i & -i)) res = todo(res, bit[i]);||| 74 return res;||| 75 }||| 76 };||| 77 void test_case() {||| 78 cin >> n;||| 79 vector<BIT> trees(512);||| 80 for (long long i = 0; i <= 511; i++) trees[i] = BIT(512, 0);||| 81 vector<bool> vis(512);||| 82 vis[0] = 1;||| 83 long long cnt = 1;||| 84 for (long long i = 1, x; i <= n; i++) {||| 85 cin >> x;||| 86 if (!vis[x]) cnt++;||| 87 vis[x] = 1;||| 88 trees[x].update(x, 1);||| 89 for (long long j = 1; j <= 511; j++)||| 90 if (x > 0 && (x ^ j) > 0 && trees[x ^ j].get(x - 1) > 0)||| 91 cnt += !vis[j], vis[j] = 1, trees[j].update(x, 1);||| 92 }||| 93 cout << cnt << '\n';||| 94 for (long long i = 0; i < 511; i++)||| 95 if (vis[i]) cout << i << "" "";||| 96 cout << '\n';||| 97 }||| 98 int32_t main() {||| 99 ios::sync_with_stdio(0);||| 100 cin.tie(0);||| 101 cout.tie(0);||| 102 Test = 1;||| 103 for (long long t = 1; t <= Test; t++) {||| 104 test_case();||| 105 }||| 106 return 0;||| 107 }||| "	94 for (long long i = 0; i < 512; i++)
33	148	"1 #include <bits/stdc++.h>||| 2 long long bigmod(long long a, long long b) {||| 3 if (b == 0) return 1;||| 4 long long ret = bigmod(a, b / 2);||| 5 return ret * ret % 1000000007 * (b % 2 ? a : 1) % 1000000007;||| 6 }||| 7 using namespace std;||| 8 int n;||| 9 int v[200010];||| 10 int dp[520], cp[520];||| 11 vector<int> A;||| 12 int main() {||| 13 ios::sync_with_stdio(false);||| 14 cin.tie(0);||| 15 cin >> n;||| 16 for (int i = 1; i <= n; i++) cin >> v[i];||| 17 for (int i = 1; i <= 512; i++) cp[i] = 1e9;||| 18 dp[0] = 1;||| 19 for (int i = 1; i <= n; i++) {||| 20 for (int h = 512; h >= 0; h--) {||| 21 if (dp[h] == 1 && cp[h] < v[i] && cp[h ^ v[i]] > v[i]) {||| 22 dp[h ^ v[i]] = 1;||| 23 cp[h ^ v[i]] = v[i];||| 24 }||| 25 }||| 26 }||| 27 for (int i = 0; i <= 512; i++)||| 28 if (dp[i]) A.push_back(i);||| 29 cout << A.size() << ""\n"";||| 30 for (auto i : A) cout << i << "" "";||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 long long bigmod(long long a, long long b) {||| 3 if (b == 0) return 1;||| 4 long long ret = bigmod(a, b / 2);||| 5 return ret * ret % 1000000007 * (b % 2 ? a : 1) % 1000000007;||| 6 }||| 7 using namespace std;||| 8 int n;||| 9 int v[200010];||| 10 int dp[520], cp[520];||| 11 vector<int> A;||| 12 int main() {||| 13 ios::sync_with_stdio(false);||| 14 cin.tie(0);||| 15 cin >> n;||| 16 for (int i = 1; i <= n; i++) cin >> v[i];||| 17 for (int i = 1; i <= 512; i++) cp[i] = 1e9;||| 18 dp[0] = 1;||| 19 for (int i = 1; i <= n; i++) {||| 20 for (int h = 512; h >= 0; h--) {||| 21 if (dp[h] == 1 && cp[h] < v[i] && cp[h ^ v[i]] > v[i]) {||| 22 dp[h ^ v[i]] = 1;||| 23 cp[h ^ v[i]] = v[i];||| 24 }||| 25 }||| 26 }||| 27 for (int i = 0; i <= 500; i++)||| 28 if (dp[i]) A.push_back(i);||| 29 cout << A.size() << ""\n"";||| 30 for (auto i : A) cout << i << "" "";||| 31 }||| "	27 for (int i = 0; i <= 512; i++)
33	119	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 long long ap[100005], bp[550][550];||| 5 vector<int> ve;||| 6 int main() {||| 7 int n;||| 8 for (int i = 0; i <= 500; i++) bp[i][0] = 1;||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> ap[i];||| 12 if (ap[i] == 0) continue;||| 13 for (int j = 0; j <= 512; j++) {||| 14 if (!bp[ap[i]][j]) continue;||| 15 if (bp[ap[i]][j ^ ap[i]]) continue;||| 16 bp[ap[i]][j ^ ap[i]] = 1;||| 17 for (int k = ap[i] + 1; k <= 512; k++) {||| 18 bp[k][j ^ ap[i]] = 1;||| 19 }||| 20 }||| 21 }||| 22 int fl = 0;||| 23 for (int i = 0; i <= 512; i++) {||| 24 if (bp[500][i] == 1) {||| 25 ve.push_back(i);||| 26 }||| 27 }||| 28 int len = ve.size();||| 29 cout << len << endl;||| 30 for (int i = 0; i < len; i++) {||| 31 if (i != 0) cout << "" "";||| 32 cout << ve[i];||| 33 }||| 34 cout << endl;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 long long ap[100005], bp[550][550];||| 5 vector<int> ve;||| 6 int main() {||| 7 int n;||| 8 for (int i = 0; i <= 510; i++) bp[i][0] = 1;||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> ap[i];||| 12 if (ap[i] == 0) continue;||| 13 for (int j = 0; j <= 500; j++) {||| 14 if (!bp[ap[i]][j]) continue;||| 15 if (bp[ap[i]][j ^ ap[i]]) continue;||| 16 bp[ap[i]][j ^ ap[i]] = 1;||| 17 for (int k = ap[i] + 1; k <= 500; k++) {||| 18 bp[k][j ^ ap[i]] = 1;||| 19 }||| 20 }||| 21 }||| 22 int fl = 0;||| 23 for (int i = 0; i <= 500; i++) {||| 24 if (bp[500][i] == 1) {||| 25 ve.push_back(i);||| 26 }||| 27 }||| 28 int len = ve.size();||| 29 cout << len << endl;||| 30 for (int i = 0; i < len; i++) {||| 31 if (i != 0) cout << "" "";||| 32 cout << ve[i];||| 33 }||| 34 cout << endl;||| 35 }||| "	8 for (int i = 0; i <= 500; i++) bp[i][0] = 1;
34	31	"1 #include <bits/stdc++.h>||| 2 int *ei[5000 + 1], eo[5000 + 1];||| 3 void append(int a, int i) {||| 4 int o = eo[a]++;||| 5 if (o >= 2 && (o & o - 1) == 0)||| 6 ei[a] = (int *)realloc(ei[a], o * 2 * sizeof *ei[a]);||| 7 ei[a][o] = i;||| 8 }||| 9 int main() {||| 10 static int ii[8192], bb[8192], bb_[8192];||| 11 static char in[8192];||| 12 int n, h, h_, i, a, b, o, cnt;||| 13 scanf(""%d"", &n);||| 14 for (a = 0; a <= 5000; a++) ei[a] = (int *)malloc(2 * sizeof *ei[a]);||| 15 for (i = 0; i < n; i++) {||| 16 scanf(""%d"", &a);||| 17 append(a, i);||| 18 }||| 19 for (b = 0; b < 8192; b++) ii[b] = n, bb[b] = b;||| 20 ii[0] = -1;||| 21 for (a = 1; a <= 5000; a++) {||| 22 memset(in, 0, 8192 * sizeof *in);||| 23 cnt = 0;||| 24 for (o = 0, h = 0; o <= eo[a]; o++, h = h_) {||| 25 i = o == eo[a] ? n + 1 : ei[a][o];||| 26 h_ = h;||| 27 while (h_ < 8192 && ii[bb[h_]] < i) {||| 28 if (!in[b = bb[h_]]) in[b] = 1, bb_[cnt++] = b;||| 29 h_++;||| 30 }||| 31 h_ = h;||| 32 while (h_ < 8192 && ii[bb[h_]] < i) {||| 33 if (in[bb[h_]] == 1 && !in[b = bb[h_] ^ a])||| 34 in[b] = 2, ii[b] = i, bb_[cnt++] = b;||| 35 h_++;||| 36 }||| 37 }||| 38 memcpy(bb, bb_, 8192 * sizeof *bb_);||| 39 }||| 40 cnt = 0;||| 41 for (b = 0; b < 8192; b++)||| 42 if (ii[b] != n) cnt++;||| 43 printf(""%d\n"", cnt);||| 44 for (b = 0; b < 8192; b++)||| 45 if (ii[b] != n) printf(""%d "", b);||| 46 printf(""\n"");||| 47 return 0;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 int *ei[5000 + 1], eo[5000 + 1];||| 3 void append(int a, int i) {||| 4 int o = eo[a]++;||| 5 if (o >= 2 && (o & o - 1) == 0)||| 6 ei[a] = (int *)realloc(ei[a], o * 2 * sizeof *ei[a]);||| 7 ei[a][o] = i;||| 8 }||| 9 int main() {||| 10 static int ii[8192], bb[8192], bb_[8192];||| 11 static char in[8192];||| 12 int n, h, h_, i, a, b, o, cnt;||| 13 scanf(""%d"", &n);||| 14 for (a = 0; a <= 5000; a++) ei[a] = (int *)malloc(2 * sizeof *ei[a]);||| 15 for (i = 0; i < n; i++) {||| 16 scanf(""%d"", &a);||| 17 append(a, i);||| 18 }||| 19 for (b = 0; b < 8192; b++) ii[b] = n, bb[b] = b;||| 20 ii[0] = -1;||| 21 for (a = 1; a <= 5000; a++) {||| 22 memset(in, 0, 8192 * sizeof *in);||| 23 cnt = 0;||| 24 for (o = 0, h = 0; o <= eo[a]; o++, h = h_) {||| 25 i = o == eo[a] ? n + 1 : ei[a][o];||| 26 h_ = h;||| 27 while (h_ < 8192 && ii[bb[h_]] < i) {||| 28 if (!in[b = bb[h_]]) in[b] = 1, bb_[cnt++] = b;||| 29 h_++;||| 30 }||| 31 h_ = h;||| 32 while (h_ < 8192 && ii[bb[h_]] < i) {||| 33 if (in[bb[h_]] == 1 && !in[b = bb[h_] ^ a])||| 34 in[b] = 2, ii[b] = i, bb_[cnt++] = b;||| 35 h_++;||| 36 }||| 37 }||| 38 memcpy(bb, bb_, 8192 * sizeof *in);||| 39 }||| 40 cnt = 0;||| 41 for (b = 0; b < 8192; b++)||| 42 if (ii[b] != n) cnt++;||| 43 printf(""%d\n"", cnt);||| 44 for (b = 0; b < 8192; b++)||| 45 if (ii[b] != n) printf(""%d "", b);||| 46 printf(""\n"");||| 47 return 0;||| 48 }||| "	38 memcpy(bb, bb_, 8192 * sizeof *bb_);
34	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> idxs[8192];||| 4 int dp[8192];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 memset(dp, 0x7f, sizeof(dp));||| 10 int n;||| 11 cin >> n;||| 12 for (int i = 0; i < n; i++) {||| 13 int x;||| 14 cin >> x;||| 15 idxs[x].emplace_back(i);||| 16 }||| 17 dp[0] = -1;||| 18 for (int i = 0; i < 8192; i++) {||| 19 for (int j = 0; j < 8192; j++) {||| 20 auto it = upper_bound(idxs[i].begin(), idxs[i].end(), dp[j]);||| 21 if (it == idxs[i].end()) continue;||| 22 dp[j ^ i] = min(dp[j ^ i], *it);||| 23 }||| 24 }||| 25 int ans = 0;||| 26 for (int i = 0; i < 8192; i++) {||| 27 if (dp[i] != 0x7f7f7f7f) ++ans;||| 28 }||| 29 cout << ans << ""\n"";||| 30 for (int i = 0; i < 8192; i++) {||| 31 if (dp[i] != 0x7f7f7f7f) cout << i << "" "";||| 32 }||| 33 cout << ""\n"";||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> idxs[8192];||| 4 int dp[8192];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 memset(dp, 0x7f, sizeof(dp));||| 10 int n;||| 11 cin >> n;||| 12 for (int i = 0; i < n; i++) {||| 13 int x;||| 14 cin >> x;||| 15 idxs[x].emplace_back(i);||| 16 }||| 17 dp[0] = -1;||| 18 for (int i = 0; i < 8192; i++) {||| 19 for (int j = 0; j < i; j++) {||| 20 auto it = upper_bound(idxs[i].begin(), idxs[i].end(), dp[j]);||| 21 if (it == idxs[i].end()) continue;||| 22 dp[j ^ i] = min(dp[j ^ i], *it);||| 23 }||| 24 }||| 25 int ans = 0;||| 26 for (int i = 0; i < 8192; i++) {||| 27 if (dp[i] != 0x7f7f7f7f) ++ans;||| 28 }||| 29 cout << ans << ""\n"";||| 30 for (int i = 0; i < 8192; i++) {||| 31 if (dp[i] != 0x7f7f7f7f) cout << i << "" "";||| 32 }||| 33 cout << ""\n"";||| 34 }||| "	19 for (int j = 0; j < 8192; j++) {
34	43	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return x * f;||| 15 }||| 16 vector<int> g[10010];||| 17 int r[10010];||| 18 bool ans[10010];||| 19 const int M = (1 << 13) - 1;||| 20 int main() {||| 21 int n = read();||| 22 ans[0] = 1;||| 23 for (register int i = 0; i <= M; ++i) g[i].push_back(0), r[i] = M;||| 24 while (n--) {||| 25 int x = read();||| 26 for (int y : g[x]) {||| 27 int to = x ^ y;||| 28 ans[to] = 1;||| 29 for (register int i = x + 1; i <= r[to]; ++i) g[i].push_back(to);||| 30 r[to] = min(r[to], x);||| 31 }||| 32 g[x] = {};||| 33 }||| 34 int k = 0;||| 35 for (register int i = 0; i <= M; ++i) k += ans[i];||| 36 printf(""%d\n"", k);||| 37 for (register int i = 0; i <= M; ++i)||| 38 if (ans[i]) printf(""%d "", i);||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return x * f;||| 15 }||| 16 vector<int> g[10010];||| 17 int r[10010];||| 18 bool ans[10010];||| 19 const int M = 1 << 13 - 1;||| 20 int main() {||| 21 int n = read();||| 22 ans[0] = 1;||| 23 for (register int i = 0; i <= M; ++i) g[i].push_back(0), r[i] = M;||| 24 while (n--) {||| 25 int x = read();||| 26 for (int y : g[x]) {||| 27 int to = x ^ y;||| 28 ans[to] = 1;||| 29 for (register int i = x + 1; i <= r[to]; ++i) g[i].push_back(to);||| 30 r[to] = min(r[to], x);||| 31 }||| 32 g[x] = {};||| 33 }||| 34 int k = 0;||| 35 for (register int i = 0; i <= M; ++i) k += ans[i];||| 36 printf(""%d\n"", k);||| 37 for (register int i = 0; i <= M; ++i)||| 38 if (ans[i]) printf(""%d "", i);||| 39 return 0;||| 40 }||| "	19 const int M = (1 << 13) - 1;
34	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 8192;||| 4 const int maxn = 1e6 + 10;||| 5 const int mod = 1e9 + 7;||| 6 inline int read() {||| 7 int x = 0, f = 1;||| 8 char c = getchar();||| 9 while (c < '0' || c > '9') {||| 10 if (c == '-') f = -1;||| 11 c = getchar();||| 12 }||| 13 while (c >= '0' && c <= '9') {||| 14 x = (x << 1) + (x << 3) + c - '0';||| 15 c = getchar();||| 16 }||| 17 return x * f;||| 18 }||| 19 vector<int> v[N];||| 20 int n, m, a[maxn], b[N], st[N], rec[N], ans;||| 21 int main() {||| 22 n = read();||| 23 ans = st[0] = 1;||| 24 for (int i = 0; i < N; i++) v[i].push_back(0), rec[i] = N - 1;||| 25 for (int i = 1; i <= n; i++) {||| 26 a[i] = read();||| 27 for (auto x : v[a[i]]) {||| 28 int u = x ^ a[i];||| 29 if (!st[u]) st[u] = 1, ++ans;||| 30 if (a[i] <= rec[u]) {||| 31 for (int j = a[i] + 1; j <= rec[u]; j++) v[j].push_back(u);||| 32 rec[u] = a[i] - 1;||| 33 }||| 34 }||| 35 v[a[i]].clear();||| 36 }||| 37 printf(""%d\n"", ans);||| 38 for (int i = 0; i < N; i++)||| 39 if (st[i]) printf(""%d "", i);||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 8192;||| 4 const int maxn = 2e5 + 10;||| 5 const int mod = 1e9 + 7;||| 6 inline int read() {||| 7 int x = 0, f = 1;||| 8 char c = getchar();||| 9 while (c < '0' || c > '9') {||| 10 if (c == '-') f = -1;||| 11 c = getchar();||| 12 }||| 13 while (c >= '0' && c <= '9') {||| 14 x = (x << 1) + (x << 3) + c - '0';||| 15 c = getchar();||| 16 }||| 17 return x * f;||| 18 }||| 19 vector<int> v[N];||| 20 int n, m, a[maxn], b[N], st[N], rec[N], ans;||| 21 int main() {||| 22 n = read();||| 23 ans = st[0] = 1;||| 24 for (int i = 0; i < N; i++) v[i].push_back(0), rec[i] = N - 1;||| 25 for (int i = 1; i <= n; i++) {||| 26 a[i] = read();||| 27 for (auto x : v[a[i]]) {||| 28 int u = x ^ a[i];||| 29 if (!st[u]) st[u] = 1, ++ans;||| 30 if (a[i] <= rec[u]) {||| 31 for (int j = a[i] + 1; j <= rec[u]; j++) v[j].push_back(u);||| 32 rec[u] = a[i];||| 33 }||| 34 }||| 35 v[a[i]].clear();||| 36 }||| 37 printf(""%d\n"", ans);||| 38 for (int i = 0; i < N; i++)||| 39 if (st[i]) printf(""%d "", i);||| 40 return 0;||| 41 }||| "	4 const int maxn = 1e6 + 10;
34	54	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)1e6 + 50, M = 8200;||| 4 int n, a[N];||| 5 vector<int> xs[M];||| 6 vector<pair<int, int> > ear;||| 7 bool vis[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(NULL);||| 11 cin >> n;||| 12 for (int i = 0; i < (n); ++i) cin >> a[i], xs[a[i]].push_back(i);||| 13 ear.push_back({0, -1});||| 14 for (int v = 0; v < (M); ++v) {||| 15 fill(vis, vis + M, 0);||| 16 vector<pair<int, int> > gear;||| 17 int c = 0;||| 18 for (int i : xs[v]) {||| 19 int r = c;||| 20 while (r < (int)(ear).size() && ear[r].second < i) {||| 21 if (!vis[ear[r].first]) {||| 22 gear.push_back({ear[r]});||| 23 vis[ear[r].first] = true;||| 24 }||| 25 r++;||| 26 }||| 27 for (int j = c; j < r; j++) {||| 28 int nxt = ear[j].first ^ v;||| 29 if (!vis[nxt]) {||| 30 gear.push_back({nxt, i});||| 31 vis[nxt] = true;||| 32 }||| 33 }||| 34 c = r;||| 35 }||| 36 while (c < (int)(ear).size()) {||| 37 if (!vis[ear[c].first]) {||| 38 gear.push_back({ear[c]});||| 39 vis[ear[c].first] = true;||| 40 }||| 41 c++;||| 42 }||| 43 ear = gear;||| 44 }||| 45 sort(begin(ear), end(ear));||| 46 cout << (int)(ear).size() << '\n';||| 47 for (int i = 0; i < ((int)(ear).size()); ++i) cout << ear[i].first << "" "";||| 48 cout << endl;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)1e6 + 50, M = 8200;||| 4 int n, a[N];||| 5 vector<int> xs[M];||| 6 vector<pair<int, int> > ear;||| 7 bool vis[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(NULL);||| 11 cin >> n;||| 12 for (int i = 0; i < (n); ++i) cin >> a[i], xs[a[i]].push_back(i);||| 13 ear.push_back({0, 0});||| 14 for (int v = 0; v < (M); ++v) {||| 15 fill(vis, vis + M, 0);||| 16 vector<pair<int, int> > gear;||| 17 int c = 0;||| 18 for (int i : xs[v]) {||| 19 int r = c;||| 20 while (r < (int)(ear).size() && ear[r].second < i) {||| 21 if (!vis[ear[r].first]) {||| 22 gear.push_back({ear[r]});||| 23 vis[ear[r].first] = true;||| 24 }||| 25 r++;||| 26 }||| 27 for (int j = c; j < r; j++) {||| 28 int nxt = ear[j].first ^ v;||| 29 if (!vis[nxt]) {||| 30 gear.push_back({nxt, i});||| 31 vis[nxt] = true;||| 32 }||| 33 }||| 34 c = r;||| 35 }||| 36 while (c < (int)(ear).size()) {||| 37 if (!vis[ear[c].first]) {||| 38 gear.push_back({ear[c]});||| 39 vis[ear[c].first] = true;||| 40 }||| 41 c++;||| 42 }||| 43 ear = gear;||| 44 }||| 45 sort(begin(ear), end(ear));||| 46 cout << (int)(ear).size() << '\n';||| 47 for (int i = 0; i < ((int)(ear).size()); ++i) cout << ear[i].first << "" "";||| 48 cout << endl;||| 49 }||| "	13 ear.push_back({0, -1});
35	44	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const unsigned gen_seed =||| 5 std::chrono::system_clock::now().time_since_epoch().count();||| 6 std::mt19937_64 gen(gen_seed);||| 7 const int N = 1000500;||| 8 int mindiv[N + 1];||| 9 struct sega {||| 10 sega(){};||| 11 sega(int v) { add(v); };||| 12 map<int, int> deg;||| 13 int numbad = 0;||| 14 void add(int v) {||| 15 while (v > 1) {||| 16 deg[mindiv[v]]++;||| 17 if (deg[mindiv[v]] == 0) numbad--;||| 18 v /= mindiv[v];||| 19 }||| 20 }||| 21 void rem(int v) {||| 22 while (v > 1) {||| 23 deg[mindiv[v]]--;||| 24 if (deg[mindiv[v]] == -1) numbad++;||| 25 v /= mindiv[v];||| 26 }||| 27 }||| 28 void killjoin(sega& f) {||| 29 if (f.deg.size() > deg.size()) {||| 30 swap(f.deg, deg);||| 31 swap(numbad, f.numbad);||| 32 }||| 33 for (auto x : f.deg) {||| 34 if (deg[x.first] < 0) numbad--;||| 35 deg[x.first] += x.second;||| 36 if (deg[x.first] < 0) numbad++;||| 37 }||| 38 }||| 39 bool isbad() { return numbad > 0; }||| 40 };||| 41 int main() {||| 42 vector<long long> pr;||| 43 std::vector<int> isp(N + 1, 0);||| 44 for (int i = 2; i <= N; ++i) {||| 45 if (mindiv[i] == 0) {||| 46 mindiv[i] = i;||| 47 pr.push_back(i);||| 48 isp[i] = 1;||| 49 }||| 50 for (int j = 0; j < (int)pr.size() && pr[j] <= mindiv[i] && i * pr[j] <= N;||| 51 ++j)||| 52 mindiv[i * pr[j]] = pr[j];||| 53 }||| 54 int n;||| 55 scanf(""%d"", &n);||| 56 std::vector<int> a(n);||| 57 char c[1000500];||| 58 for (int i = 0; i < n; i++) {||| 59 if (i < n - 1)||| 60 scanf(""%d"", &a[i]);||| 61 else||| 62 scanf(""%d\n"", &a[i]);||| 63 }||| 64 scanf(""%s"", c);||| 65 string s(c);||| 66 vector<sega> q;||| 67 long long ans = 0;||| 68 for (int i = 0; i < n; i++) {||| 69 sega cur;||| 70 if (s[i] == '*')||| 71 cur.add(a[i]);||| 72 else||| 73 cur.rem(a[i]);||| 74 while (cur.isbad()) {||| 75 if (q.empty()) break;||| 76 cur.killjoin(q.back());||| 77 q.pop_back();||| 78 }||| 79 if (cur.isbad() == false) {||| 80 q.emplace_back(std::move(cur));||| 81 }||| 82 ans += q.size();||| 83 }||| 84 cout << ans;||| 85 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const unsigned gen_seed =||| 5 std::chrono::system_clock::now().time_since_epoch().count();||| 6 std::mt19937_64 gen(gen_seed);||| 7 const int N = 1000500;||| 8 int mindiv[N + 1];||| 9 struct sega {||| 10 sega(){};||| 11 sega(int v) { add(v); };||| 12 map<int, int> deg;||| 13 int numbad = 0;||| 14 void add(int v) {||| 15 while (v > 1) {||| 16 deg[mindiv[v]]++;||| 17 if (deg[mindiv[v]] == 0) numbad--;||| 18 v /= mindiv[v];||| 19 }||| 20 }||| 21 void rem(int v) {||| 22 while (v > 1) {||| 23 deg[mindiv[v]]--;||| 24 if (deg[mindiv[v]] == -1) numbad++;||| 25 v /= mindiv[v];||| 26 }||| 27 }||| 28 void killjoin(sega& f) {||| 29 if (f.deg.size() > deg.size()) {||| 30 swap(f.deg, deg);||| 31 swap(numbad, f.numbad);||| 32 for (auto x : f.deg) {||| 33 if (deg[x.first] < 0) numbad--;||| 34 deg[x.first] += x.second;||| 35 if (deg[x.first] < 0) numbad++;||| 36 }||| 37 }||| 38 }||| 39 bool isbad() { return numbad > 0; }||| 40 };||| 41 int main() {||| 42 vector<long long> pr;||| 43 std::vector<int> isp(N + 1, 0);||| 44 for (int i = 2; i <= N; ++i) {||| 45 if (mindiv[i] == 0) {||| 46 mindiv[i] = i;||| 47 pr.push_back(i);||| 48 isp[i] = 1;||| 49 }||| 50 for (int j = 0; j < (int)pr.size() && pr[j] <= mindiv[i] && i * pr[j] <= N;||| 51 ++j)||| 52 mindiv[i * pr[j]] = pr[j];||| 53 }||| 54 int n;||| 55 scanf(""%d"", &n);||| 56 std::vector<int> a(n);||| 57 char c[1000500];||| 58 for (int i = 0; i < n; i++) {||| 59 if (i < n - 1)||| 60 scanf(""%d"", &a[i]);||| 61 else||| 62 scanf(""%d\n"", &a[i]);||| 63 }||| 64 scanf(""%s"", c);||| 65 string s(c);||| 66 vector<sega> q;||| 67 long long ans = 0;||| 68 for (int i = 0; i < n; i++) {||| 69 sega cur;||| 70 if (s[i] == '*')||| 71 cur.add(a[i]);||| 72 else||| 73 cur.rem(a[i]);||| 74 while (cur.isbad()) {||| 75 if (q.empty()) break;||| 76 cur.killjoin(q.back());||| 77 q.pop_back();||| 78 }||| 79 if (cur.isbad() == false) {||| 80 q.emplace_back(std::move(cur));||| 81 }||| 82 ans += q.size();||| 83 }||| 84 cout << ans;||| 85 }||| "	32 }
35	65	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0;||| 5 bool flag = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') flag = 0;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') {||| 12 x = (x << 1) + (x << 3) + ch - '0';||| 13 ch = getchar();||| 14 }||| 15 return flag ? x : ~(x - 1);||| 16 }||| 17 inline void write(long long x) {||| 18 if (x > 9) write(x / 10);||| 19 putchar(x % 10 + '0');||| 20 }||| 21 const long long N = 1e6 + 10;||| 22 long long n, ans, a[N];||| 23 long long prime[N], mp[N], cnt;||| 24 long long stk[N], top, pre[N], w[N];||| 25 bool is_prime[N];||| 26 vector<long long> vec[N];||| 27 inline void sieve(long long x) {||| 28 for (long long i = 2; i <= x; i++) {||| 29 if (!is_prime[i]) prime[++cnt] = mp[i] = i;||| 30 for (long long j = 1; prime[j] <= x / i; j++) {||| 31 is_prime[i * prime[j]] = true;||| 32 mp[i * prime[j]] = prime[j];||| 33 if (i % prime[j] == 0) break;||| 34 }||| 35 }||| 36 }||| 37 signed main() {||| 38 sieve(1000000);||| 39 n = read();||| 40 for (long long i = 1; i <= n; i++) a[i] = read();||| 41 for (long long i = 1; i <= n; i++) {||| 42 char ch = getchar();||| 43 while (ch != '*' && ch != '/') ch = getchar();||| 44 if (ch == '*') {||| 45 while (a[i] > 1) {||| 46 long long p = mp[a[i]];||| 47 vec[p].push_back(i);||| 48 a[i] /= p;||| 49 }||| 50 pre[i] = i;||| 51 } else {||| 52 pre[i] = i;||| 53 while (a[i] > 1) {||| 54 long long p = mp[a[i]];||| 55 if (vec[p].empty())||| 56 pre[i] = -1;||| 57 else||| 58 pre[i] = min(pre[i], vec[p].back()), vec[p].pop_back();||| 59 a[i] /= p;||| 60 }||| 61 }||| 62 }||| 63 for (long long i = n; i >= 1; i--) {||| 64 long long nw = 1;||| 65 while (top && pre[i] <= stk[top]) nw += w[top], top--;||| 66 stk[++top] = pre[i], w[top] = nw;||| 67 if (i == pre[i]) ans += nw;||| 68 }||| 69 write(ans), putchar('\n');||| 70 return 0;||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0;||| 5 bool flag = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') flag = 0;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') {||| 12 x = (x << 1) + (x << 3) + ch - '0';||| 13 ch = getchar();||| 14 }||| 15 return flag ? x : ~(x - 1);||| 16 }||| 17 inline void write(long long x) {||| 18 if (x > 9) write(x / 10);||| 19 putchar(x % 10 + '0');||| 20 }||| 21 const long long N = 1e6 + 10;||| 22 long long n, ans, a[N];||| 23 long long prime[N], mp[N], cnt;||| 24 long long stk[N], top, pre[N], w[N];||| 25 bool is_prime[N];||| 26 vector<long long> vec[N];||| 27 inline void sieve(long long x) {||| 28 for (long long i = 2; i <= x; i++) {||| 29 if (!is_prime[i]) prime[++cnt] = mp[i] = i;||| 30 for (long long j = 1; prime[j] <= x / i; j++) {||| 31 is_prime[i * prime[j]] = true;||| 32 mp[i * prime[j]] = prime[j];||| 33 if (i % prime[j] == 0) break;||| 34 }||| 35 }||| 36 }||| 37 signed main() {||| 38 sieve(1000000);||| 39 n = read();||| 40 for (long long i = 1; i <= n; i++) a[i] = read();||| 41 for (long long i = 1; i <= n; i++) {||| 42 char ch = getchar();||| 43 while (ch != '*' && ch != '/') ch = getchar();||| 44 if (ch == '*') {||| 45 while (a[i] > 1) {||| 46 long long p = mp[a[i]];||| 47 vec[p].push_back(i);||| 48 a[i] /= p;||| 49 }||| 50 pre[i] = i;||| 51 } else {||| 52 pre[i] = i;||| 53 while (a[i] > 1) {||| 54 long long p = mp[a[i]];||| 55 if (vec[p].empty())||| 56 pre[i] = -1;||| 57 else||| 58 pre[i] = min(pre[i], vec[p].back()), vec[p].pop_back();||| 59 a[i] /= p;||| 60 }||| 61 }||| 62 }||| 63 for (long long i = n; i >= 1; i--) {||| 64 long long nw = 1;||| 65 while (top && pre[i] < stk[top]) nw += w[top], top--;||| 66 stk[++top] = pre[i], w[top] = nw;||| 67 if (i == pre[i]) ans += nw;||| 68 }||| 69 write(ans), putchar('\n');||| 70 return 0;||| 71 }||| 	65 while (top && pre[i] <= stk[top]) nw += w[top], top--;
35	57	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int N, a[1000005], b[1000005];||| 4 string ss;||| 5 bool IsPrime[1000006];||| 6 int mp[1000006], Index, Prime[1000006], L[1000006];||| 7 vector<int> stk[1000006];||| 8 const int mx = 1e6 + 5;||| 9 void Pre() {||| 10 for (int i = 2; i <= mx; i++) {||| 11 if (!IsPrime[i]) {||| 12 mp[i] = i;||| 13 Prime[++Index] = i;||| 14 }||| 15 for (int j = 1; j <= Index && i * Prime[j] <= mx; j++) {||| 16 IsPrime[i * Prime[j]] = true;||| 17 mp[i * Prime[j]] = Prime[j];||| 18 if (i % Prime[j] == 0) break;||| 19 }||| 20 }||| 21 }||| 22 void Add(int x, int pos) {||| 23 L[pos] = pos;||| 24 while (x > 1) {||| 25 stk[mp[x]].push_back(pos);||| 26 x /= mp[x];||| 27 }||| 28 }||| 29 void Del(int x, int pos) {||| 30 if (x == 1) {||| 31 L[pos] = pos;||| 32 return;||| 33 }||| 34 L[pos] = pos;||| 35 while (x > 1) {||| 36 if (stk[mp[x]].empty()) {||| 37 L[pos] = 0;||| 38 return;||| 39 }||| 40 L[pos] = min(L[pos], stk[mp[x]].back());||| 41 stk[mp[x]].pop_back();||| 42 x /= mp[x];||| 43 }||| 44 }||| 45 int main() {||| 46 Pre();||| 47 scanf(""%d"", &N);||| 48 for (int i = 1; i <= N; i++) scanf(""%d"", &a[i]);||| 49 cin >> ss;||| 50 for (int i = 0; i < ss.length(); i++) {||| 51 if (ss[i] == '*')||| 52 Add(a[i + 1], i + 1);||| 53 else||| 54 Del(a[i + 1], i + 1);||| 55 }||| 56 long long ans = 0;||| 57 vector<pair<int, int> > ff;||| 58 for (int i = N; i >= 1; i--) {||| 59 int cnt = 1;||| 60 while (ff.size() > 0 && ff.back().first >= L[i]) {||| 61 cnt += ff.back().second;||| 62 ff.pop_back();||| 63 }||| 64 ff.push_back(make_pair(L[i], cnt));||| 65 if (L[i] == i) ans += (long long)cnt;||| 66 }||| 67 printf(""%lld"", ans);||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int N, a[1000005], b[1000005];||| 4 string ss;||| 5 bool IsPrime[1000006];||| 6 int mp[1000006], Index, Prime[1000006], L[1000006];||| 7 vector<int> stk[1000006];||| 8 const int mx = 1e6 + 5;||| 9 void Pre() {||| 10 for (int i = 2; i <= mx; i++) {||| 11 if (!IsPrime[i]) {||| 12 mp[i] = i;||| 13 Prime[++Index] = i;||| 14 }||| 15 for (int j = 1; j <= Index && i * Prime[j] <= mx; j++) {||| 16 IsPrime[i * Prime[j]] = true;||| 17 mp[i * Prime[j]] = Prime[j];||| 18 if (i % Prime[j] == 0) break;||| 19 }||| 20 }||| 21 }||| 22 void Add(int x, int pos) {||| 23 L[pos] = pos;||| 24 while (x > 1) {||| 25 stk[mp[x]].push_back(pos);||| 26 x /= mp[x];||| 27 }||| 28 }||| 29 void Del(int x, int pos) {||| 30 if (x == 1) {||| 31 L[pos] = pos;||| 32 return;||| 33 }||| 34 L[pos] = pos;||| 35 while (x != 1) {||| 36 if (stk[mp[x]].empty()) {||| 37 L[pos] = 0;||| 38 return;||| 39 }||| 40 L[pos] = min(L[pos], stk[mp[x]].back());||| 41 stk[mp[x]].pop_back();||| 42 x /= mp[x];||| 43 }||| 44 }||| 45 int main() {||| 46 Pre();||| 47 scanf(""%d"", &N);||| 48 for (int i = 1; i <= N; i++) scanf(""%d"", &a[i]);||| 49 cin >> ss;||| 50 for (int i = 0; i < ss.length(); i++) {||| 51 if (ss[i] == '*')||| 52 Add(a[i + 1], i + 1);||| 53 else||| 54 Del(a[i + 1], i + 1);||| 55 }||| 56 long long ans = 0;||| 57 vector<pair<int, int> > ff;||| 58 for (int i = N; i >= 1; i--) {||| 59 int cnt = 1;||| 60 while (ff.size() > 0 && ff.back().first > L[i]) {||| 61 cnt += ff.back().second;||| 62 ff.pop_back();||| 63 }||| 64 ff.push_back(make_pair(L[i], cnt));||| 65 if (L[i] == i) ans += (long long)cnt;||| 66 }||| 67 printf(""%lld"", ans);||| 68 return 0;||| 69 }||| "	35 while (x > 1) {
35	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 int read() {||| 5 int s = 0;||| 6 char c = getchar(), lc = '+';||| 7 while (c < '0' || '9' < c) lc = c, c = getchar();||| 8 while ('0' <= c && c <= '9') s = s * 10 + c - '0', c = getchar();||| 9 return lc == '-' ? -s : s;||| 10 }||| 11 void write(long long x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x < 10)||| 14 putchar(x + '0');||| 15 else||| 16 write(x / 10), putchar(x % 10 + '0');||| 17 }||| 18 void print(long long x, char c = '\n') {||| 19 write(x);||| 20 putchar(c);||| 21 }||| 22 void up(int &x, int y) {||| 23 if (x > y) x = y;||| 24 }||| 25 int mn[N], a[N], nxt[N];||| 26 void ysgs(int n) {||| 27 mn[1] = 1;||| 28 for (int i = 2; i <= n; i++)||| 29 if (!mn[i])||| 30 for (int j = i; j <= n; j += i)||| 31 if (!mn[j]) mn[j] = i;||| 32 }||| 33 char op[N];||| 34 vector<pair<int, int>> b[N];||| 35 signed main(signed Goodbye, char *Wangang[]) {||| 36 (void)Goodbye, (void)Wangang;||| 37 ysgs(1e6);||| 38 int n = read();||| 39 for (int i = 1; i <= n; i++) a[i] = read();||| 40 scanf(""%s"", op + 1);||| 41 for (int i = 1; i <= n; i++) {||| 42 nxt[i] = i;||| 43 int now = a[i];||| 44 while (now > 1)||| 45 b[mn[now]].push_back(make_pair(op[i] == '*' ? 1 : -1, i)), now /= mn[now];||| 46 }||| 47 for (int t = 1; t <= 1e6; t++)||| 48 if (!b[t].empty()) {||| 49 stack<int> st;||| 50 for (auto i : b[t])||| 51 if (i.first > 0)||| 52 st.push(i.second);||| 53 else if (!st.empty())||| 54 up(nxt[i.second], st.top()), st.pop();||| 55 else||| 56 nxt[i.second] = 0;||| 57 }||| 58 static int st[N], top = 0;||| 59 st[0] = n + 1;||| 60 long long ans = 0;||| 61 for (int i = n; i >= 1; i--) {||| 62 st[++top] = i;||| 63 while (top && nxt[st[top]] >= i) top--;||| 64 ans += st[top] - i;||| 65 }||| 66 print(ans);||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 int read() {||| 5 int s = 0;||| 6 char c = getchar(), lc = '+';||| 7 while (c < '0' || '9' < c) lc = c, c = getchar();||| 8 while ('0' <= c && c <= '9') s = s * 10 + c - '0', c = getchar();||| 9 return lc == '-' ? -s : s;||| 10 }||| 11 void write(long long x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x < 10)||| 14 putchar(x + '0');||| 15 else||| 16 write(x / 10), putchar(x % 10 + '0');||| 17 }||| 18 void print(long long x, char c = '\n') {||| 19 write(x);||| 20 putchar(c);||| 21 }||| 22 void up(int &x, int y) {||| 23 if (x > y) x = y;||| 24 }||| 25 int mn[N], a[N], nxt[N];||| 26 void ysgs(int n) {||| 27 mn[1] = 1;||| 28 for (int i = 2; i <= n; i++)||| 29 if (!mn[i])||| 30 for (int j = i; j <= n; j += i)||| 31 if (!mn[j]) mn[j] = i;||| 32 }||| 33 char op[N];||| 34 vector<pair<int, int>> b[N];||| 35 signed main(signed Goodbye, char *Wangang[]) {||| 36 (void)Goodbye, (void)Wangang;||| 37 ysgs(1e6);||| 38 int n = read();||| 39 for (int i = 1; i <= n; i++) a[i] = read();||| 40 scanf(""%s"", op + 1);||| 41 for (int i = 1; i <= n; i++) {||| 42 nxt[i] = i;||| 43 int now = a[i];||| 44 while (now > 1)||| 45 b[mn[now]].push_back(make_pair(op[i] == '*' ? 1 : -1, i)), now /= mn[now];||| 46 }||| 47 for (int t = 1; t <= n; t++)||| 48 if (!b[t].empty()) {||| 49 stack<int> st;||| 50 for (auto i : b[t])||| 51 if (i.first > 0)||| 52 st.push(i.second);||| 53 else if (!st.empty())||| 54 up(nxt[i.second], st.top()), st.pop();||| 55 else||| 56 nxt[i.second] = 0;||| 57 }||| 58 static int st[N], top = 0;||| 59 st[0] = n + 1;||| 60 long long ans = 0;||| 61 for (int i = n; i >= 1; i--) {||| 62 st[++top] = i;||| 63 while (top && nxt[st[top]] >= i) top--;||| 64 ans += st[top] - i;||| 65 }||| 66 print(ans);||| 67 return 0;||| 68 }||| "	47 for (int t = 1; t <= 1e6; t++)
35	25	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double EPS = 1e-9;||| 4 const int INFMEM = 63;||| 5 const int INF = 1061109567;||| 6 const long long LINF = 4557430888798830399LL;||| 7 const double DINF = numeric_limits<double>::infinity();||| 8 const long long MOD = 1000000007;||| 9 const int dx[8] = {0, 0, 1, -1, 1, -1, 1, -1};||| 10 const int dy[8] = {1, -1, 0, 0, 1, -1, -1, 1};||| 11 const char dch[4] = {'R', 'L', 'D', 'U'};||| 12 const double PI = 3.141592653589793;||| 13 inline void open(string a) {||| 14 freopen((a + "".in"").c_str(), ""r"", stdin);||| 15 freopen((a + "".out"").c_str(), ""w"", stdout);||| 16 }||| 17 inline void fasterios() {||| 18 ios_base::sync_with_stdio(0);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 }||| 22 const int MAXN = 1e6;||| 23 int prime[MAXN + 5];||| 24 int isi[MAXN + 5];||| 25 int leftMost[MAXN + 5];||| 26 vector<int> bracket[MAXN + 5];||| 27 int main() {||| 28 fasterios();||| 29 prime[0] = 1;||| 30 prime[1] = 1;||| 31 for (int i = 2; i <= MAXN; i++) {||| 32 if (prime[i]) continue;||| 33 prime[i] = i;||| 34 if (i > 1000) continue;||| 35 for (int j = i * i; j <= MAXN; j += i) prime[j] = i;||| 36 }||| 37 int n;||| 38 cin >> n;||| 39 for (int i = 1; i <= n; i++) {||| 40 cin >> isi[i];||| 41 }||| 42 for (int i = 1; i <= n; i++) {||| 43 char ch;||| 44 cin >> ch;||| 45 int cur = isi[i];||| 46 leftMost[i] = i;||| 47 if (cur == 1) continue;||| 48 if (ch == '*') {||| 49 leftMost[i] = i + 1;||| 50 while (cur > 1) {||| 51 bracket[prime[cur]].push_back(i);||| 52 cur /= prime[cur];||| 53 }||| 54 } else {||| 55 while (cur > 1) {||| 56 if ((int)(bracket[prime[cur]]).size()) {||| 57 leftMost[i] = min(leftMost[i], bracket[prime[cur]].back());||| 58 bracket[prime[cur]].pop_back();||| 59 } else||| 60 leftMost[i] = 0;||| 61 cur /= prime[cur];||| 62 }||| 63 }||| 64 }||| 65 leftMost[n + 1] = -1;||| 66 stack<int> antri;||| 67 antri.push(n + 1);||| 68 long long ans = 0;||| 69 for (int i = n; i >= 1; i--) {||| 70 while (leftMost[antri.top()] >= i) antri.pop();||| 71 if (leftMost[i] < i) {||| 72 while (leftMost[antri.top()] >= leftMost[i]) antri.pop();||| 73 antri.push(i);||| 74 }||| 75 ans += antri.top() - i;||| 76 }||| 77 cout << ans << '\n';||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double EPS = 1e-9;||| 4 const int INFMEM = 63;||| 5 const int INF = 1061109567;||| 6 const long long LINF = 4557430888798830399LL;||| 7 const double DINF = numeric_limits<double>::infinity();||| 8 const long long MOD = 1000000007;||| 9 const int dx[8] = {0, 0, 1, -1, 1, -1, 1, -1};||| 10 const int dy[8] = {1, -1, 0, 0, 1, -1, -1, 1};||| 11 const char dch[4] = {'R', 'L', 'D', 'U'};||| 12 const double PI = 3.141592653589793;||| 13 inline void open(string a) {||| 14 freopen((a + "".in"").c_str(), ""r"", stdin);||| 15 freopen((a + "".out"").c_str(), ""w"", stdout);||| 16 }||| 17 inline void fasterios() {||| 18 ios_base::sync_with_stdio(0);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 }||| 22 const int MAXN = 1e6;||| 23 int prime[MAXN + 5];||| 24 int isi[MAXN + 5];||| 25 int leftMost[MAXN + 5];||| 26 vector<int> bracket[MAXN + 5];||| 27 int main() {||| 28 fasterios();||| 29 prime[0] = 1;||| 30 prime[1] = 1;||| 31 for (int i = 2; i <= MAXN; i++) {||| 32 if (prime[i]) continue;||| 33 prime[i] = i;||| 34 if (i > 1000) continue;||| 35 for (int j = i * i; j <= MAXN; j += i) prime[j] = i;||| 36 }||| 37 int n;||| 38 cin >> n;||| 39 for (int i = 1; i <= n; i++) {||| 40 cin >> isi[i];||| 41 }||| 42 for (int i = 1; i <= n; i++) {||| 43 char ch;||| 44 cin >> ch;||| 45 int cur = isi[i];||| 46 leftMost[i] = i;||| 47 if (cur == 1) continue;||| 48 if (ch == '*') {||| 49 leftMost[i] = i + 1;||| 50 while (cur > 1) {||| 51 bracket[prime[cur]].push_back(i);||| 52 cur /= prime[cur];||| 53 }||| 54 } else {||| 55 while (cur > 1) {||| 56 if ((int)(bracket[prime[cur]]).size()) {||| 57 leftMost[i] = min(leftMost[i], bracket[prime[cur]].back());||| 58 bracket[prime[cur]].pop_back();||| 59 } else||| 60 leftMost[i] = 0;||| 61 cur /= prime[cur];||| 62 }||| 63 }||| 64 }||| 65 leftMost[n + 1] = -1;||| 66 stack<int> antri;||| 67 antri.push(n + 1);||| 68 long long ans = 0;||| 69 for (int i = n; i >= 1; i--) {||| 70 while (leftMost[antri.top()] > i) antri.pop();||| 71 if (leftMost[i] < i) {||| 72 while (leftMost[antri.top()] >= leftMost[i]) antri.pop();||| 73 antri.push(i);||| 74 }||| 75 ans += antri.top() - i;||| 76 }||| 77 cout << ans << '\n';||| 78 }||| "	70 while (leftMost[antri.top()] >= i) antri.pop();
36	182	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(int n) {||| 4 for (int i = 2; i * i <= n; i++) {||| 5 if (n % i == 0) return false;||| 6 }||| 7 return true;||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 ;||| 14 long long test = 1;||| 15 cin >> test;||| 16 while (test--) {||| 17 int n;||| 18 cin >> n;||| 19 int sum = 0;||| 20 vector<int> arr(n);||| 21 int index = -1;||| 22 for (int i = 0; i < n; i++) {||| 23 cin >> arr[i];||| 24 sum += arr[i];||| 25 if (arr[i] % 2) index = i;||| 26 }||| 27 int ans = n;||| 28 if (isPrime(sum)) {||| 29 sum -= arr[index];||| 30 arr[index] = -1;||| 31 ans--;||| 32 }||| 33 cout << ans << ""\n"";||| 34 for (int i = 0; i < n; i++) {||| 35 if (arr[i] != -1) {||| 36 cout << i + 1 << "" "";||| 37 }||| 38 }||| 39 cout << ""\n"";||| 40 }||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(int n) {||| 4 for (int i = 2; i * i < n; i++) {||| 5 if (n % i == 0) return false;||| 6 }||| 7 return true;||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 ;||| 14 long long test = 1;||| 15 cin >> test;||| 16 while (test--) {||| 17 int n;||| 18 cin >> n;||| 19 int sum = 0;||| 20 vector<int> arr(n);||| 21 int index = -1;||| 22 for (int i = 0; i < n; i++) {||| 23 cin >> arr[i];||| 24 sum += arr[i];||| 25 if (arr[i] % 2) index = i;||| 26 }||| 27 int ans = n;||| 28 if (isPrime(sum)) {||| 29 sum -= arr[index];||| 30 arr[index] = -1;||| 31 ans--;||| 32 }||| 33 cout << ans << ""\n"";||| 34 for (int i = 0; i < n; i++) {||| 35 if (arr[i] != -1) {||| 36 cout << i + 1 << "" "";||| 37 }||| 38 }||| 39 cout << ""\n"";||| 40 }||| 41 }||| "	4 for (int i = 2; i * i <= n; i++) {
36	71	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long prime(long long p) {||| 4 if (p <= 1) {||| 5 return 0;||| 6 }||| 7 for (long long i = 2; i <= sqrt(p); ++i) {||| 8 if (p % i == 0) {||| 9 return 0;||| 10 }||| 11 }||| 12 return 1;||| 13 }||| 14 void algo() {||| 15 long long n = 0;||| 16 cin >> n;||| 17 vector<long long> v(n, 0);||| 18 long long sum = 0;||| 19 long long odd = -1;||| 20 for (long long i = 0; i < n; ++i) {||| 21 cin >> v[i];||| 22 sum += v[i];||| 23 if (v[i] % 2 != 0) {||| 24 odd = i;||| 25 }||| 26 }||| 27 if (!prime(sum)) {||| 28 cout << n << endl;||| 29 for (long long j = 0; j < n; ++j) {||| 30 cout << j + 1 << "" "";||| 31 }||| 32 } else {||| 33 cout << n - 1 << endl;||| 34 for (long long j = 0; j < n; ++j) {||| 35 if (j != odd) {||| 36 cout << j + 1 << "" "";||| 37 }||| 38 }||| 39 }||| 40 cout << endl;||| 41 }||| 42 signed main() {||| 43 long long t = 0;||| 44 cin >> t;||| 45 while (t--) {||| 46 algo();||| 47 }||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long prime(long long p) {||| 4 if (p <= 1) {||| 5 return 0;||| 6 }||| 7 for (long long i = 2; i < sqrt(p); ++i) {||| 8 if (p % i == 0) {||| 9 return 0;||| 10 }||| 11 }||| 12 return 1;||| 13 }||| 14 void algo() {||| 15 long long n = 0;||| 16 cin >> n;||| 17 vector<long long> v(n, 0);||| 18 long long sum = 0;||| 19 long long odd = -1;||| 20 for (long long i = 0; i < n; ++i) {||| 21 cin >> v[i];||| 22 sum += v[i];||| 23 if (v[i] % 2 != 0) {||| 24 odd = i;||| 25 }||| 26 }||| 27 if (!prime(sum)) {||| 28 cout << n << endl;||| 29 for (long long j = 0; j < n; ++j) {||| 30 cout << j + 1 << "" "";||| 31 }||| 32 } else {||| 33 cout << n - 1 << endl;||| 34 for (long long j = 0; j < n; ++j) {||| 35 if (j != odd) {||| 36 cout << j + 1 << "" "";||| 37 }||| 38 }||| 39 }||| 40 cout << endl;||| 41 }||| 42 signed main() {||| 43 long long t = 0;||| 44 cin >> t;||| 45 while (t--) {||| 46 algo();||| 47 }||| 48 return 0;||| 49 }||| "	7 for (long long i = 2; i <= sqrt(p); ++i) {
36	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 205;||| 4 const int MAXP = 20005;||| 5 int t, n, cnt, sum;||| 6 bool f;||| 7 int a[MAXN];||| 8 int prime[MAXP];||| 9 int isPrime[MAXP];||| 10 inline int read() {||| 11 int x = 0;||| 12 char c = getchar();||| 13 while (c > '9' || c < '0') c = getchar();||| 14 while (c <= '9' && c >= '0') {||| 15 x = x * 10 + c - '0';||| 16 c = getchar();||| 17 }||| 18 return x;||| 19 }||| 20 void doGetPrime() {||| 21 prime[++cnt] = 2;||| 22 isPrime[2] = 1;||| 23 for (int i = 3; i <= MAXP; i++) {||| 24 f = true;||| 25 for (int j = 1; j <= cnt; j++) {||| 26 if (i % prime[j] == 0) {||| 27 f = false;||| 28 break;||| 29 }||| 30 }||| 31 if (f) {||| 32 prime[++cnt] = i;||| 33 isPrime[i] = 1;||| 34 }||| 35 }||| 36 }||| 37 int main(void) {||| 38 doGetPrime();||| 39 t = read();||| 40 for (int T = 1; T <= t; T++) {||| 41 n = read();||| 42 sum = 0;||| 43 for (int i = 1; i <= n; i++) {||| 44 a[i] = read();||| 45 sum += a[i];||| 46 }||| 47 if (!isPrime[sum]) {||| 48 cout << n << endl;||| 49 for (int i = 1; i <= n; i++) cout << i << "" "";||| 50 cout << endl;||| 51 } else {||| 52 for (int i = 1; i <= n; i++) {||| 53 if (!isPrime[sum - a[i]]) {||| 54 cout << n - 1 << endl;||| 55 for (int j = 1; j <= n; j++)||| 56 if (i - j) cout << j << "" "";||| 57 cout << endl;||| 58 break;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 return 0;||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 205;||| 4 const int MAXP = 20005;||| 5 int t, n, cnt, sum;||| 6 bool f;||| 7 int a[MAXN];||| 8 int prime[MAXP];||| 9 int isPrime[MAXP];||| 10 inline int read() {||| 11 int x = 0;||| 12 char c = getchar();||| 13 while (c > '9' || c < '0') c = getchar();||| 14 while (c <= '9' && c >= '0') {||| 15 x = x * 10 + c - '0';||| 16 c = getchar();||| 17 }||| 18 return x;||| 19 }||| 20 void doGetPrime() {||| 21 prime[++cnt] = 2;||| 22 isPrime[2] = 1;||| 23 for (int i = 3; i <= MAXP; i++) {||| 24 f = true;||| 25 for (int j = 1; j <= cnt; j++) {||| 26 if (i % prime[j] == 0) {||| 27 f = false;||| 28 break;||| 29 }||| 30 }||| 31 if (f) {||| 32 prime[++cnt] = i;||| 33 isPrime[i] = 1;||| 34 }||| 35 }||| 36 }||| 37 int main(void) {||| 38 doGetPrime();||| 39 t = read();||| 40 for (int T = 1; T <= t; T++) {||| 41 n = read();||| 42 sum = 0;||| 43 for (int i = 1; i <= n; i++) {||| 44 a[i] = read();||| 45 sum += a[i];||| 46 }||| 47 if (!isPrime[sum]) {||| 48 cout << n << endl;||| 49 for (int i = 1; i <= n; i++) cout << i << "" "";||| 50 cout << endl;||| 51 } else {||| 52 for (int i = 1; i <= n; i++) {||| 53 if (!isPrime[sum - a[i]]) {||| 54 cout << n - 1 << endl;||| 55 for (int j = 1; j <= n; j++)||| 56 if (1 - j) cout << j << "" "";||| 57 cout << endl;||| 58 break;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 return 0;||| 64 }||| "	"56 if (i - j) cout << j << "" "";"
36	177	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long inf = 1e18;||| 4 const long long mod = 1e9 + 7;||| 5 bool isComposite(int n) {||| 6 if (n <= 1) return false;||| 7 if (n <= 3) return false;||| 8 if (n % 2 == 0 || n % 3 == 0) return true;||| 9 for (int i = 5; i * i <= n; i = i + 6)||| 10 if (n % i == 0 || n % (i + 2) == 0) return true;||| 11 return false;||| 12 }||| 13 void solve() {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> v(n);||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> v[i];||| 19 }||| 20 int sum = accumulate(v.begin(), v.end(), 0);||| 21 int temp;||| 22 if (isComposite(sum)) {||| 23 cout << n;||| 24 cout << ""\n"";||| 25 for (int i = 0; i < n; i++) {||| 26 cout << i + 1 << "" "";||| 27 }||| 28 return;||| 29 } else {||| 30 cout << n - 1;||| 31 cout << ""\n"";||| 32 for (int i = 0; i < n; i++) {||| 33 if (isComposite(sum - v[i])) {||| 34 temp = v[i];||| 35 }||| 36 }||| 37 for (int i = 0; i < n; i++) {||| 38 if (v[i] == temp) {||| 39 continue;||| 40 }||| 41 cout << i + 1 << "" "";||| 42 }||| 43 }||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(NULL);||| 48 cout.tie(NULL);||| 49 int tt;||| 50 cin >> tt;||| 51 for (int i = 0; i < tt; i++) {||| 52 solve();||| 53 cout << endl;||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long inf = 1e18;||| 4 const long long mod = 1e9 + 7;||| 5 bool isComposite(int n) {||| 6 if (n <= 1) return false;||| 7 if (n <= 3) return false;||| 8 if (n % 2 == 0 || n % 3 == 0) return true;||| 9 for (int i = 5; i * i <= n; i = i + 6)||| 10 if (n % i == 0 || n % (i + 2) == 0) return true;||| 11 return false;||| 12 }||| 13 void solve() {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> v(n);||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> v[i];||| 19 }||| 20 int sum = accumulate(v.begin(), v.end(), 0);||| 21 int temp;||| 22 if (isComposite(sum)) {||| 23 cout << n;||| 24 cout << ""\n"";||| 25 for (int i = 0; i < n; i++) {||| 26 cout << i + 1 << "" "";||| 27 }||| 28 return;||| 29 } else {||| 30 cout << n - 1;||| 31 cout << ""\n"";||| 32 for (int i = 0; i < n; i++) {||| 33 if (!isComposite(sum - v[i])) {||| 34 temp = v[i];||| 35 }||| 36 }||| 37 for (int i = 0; i < n; i++) {||| 38 if (v[i] == temp) {||| 39 continue;||| 40 }||| 41 cout << i + 1 << "" "";||| 42 }||| 43 }||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(NULL);||| 48 cout.tie(NULL);||| 49 int tt;||| 50 cin >> tt;||| 51 for (int i = 0; i < tt; i++) {||| 52 solve();||| 53 cout << endl;||| 54 }||| 55 }||| "	33 if (isComposite(sum - v[i])) {
36	56	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 void SADIEM() {||| 5 std::ios_base::sync_with_stdio(NULL);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool iscomposite(int x) {||| 10 if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) ||||| 11 (x != 5 && !(x % 5)))||| 12 return true;||| 13 for (int i = 7; i <= x / i; i++)||| 14 if (!(x % i)) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n, sum = 0;||| 22 cin >> n;||| 23 vector<pair<int, int>> v(n);||| 24 for (int i = 0; i < n && cin >> v[i].first; i++)||| 25 v[i].second = i + 1, sum += v[i].first;||| 26 if (iscomposite(sum)) {||| 27 cout << n << ""\n"";||| 28 for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? "" "" : """");||| 29 } else {||| 30 sort(v.begin(), v.end());||| 31 int idx = -1;||| 32 for (int i = 0; i < n; i++) {||| 33 if (iscomposite(sum - v[i].first)) {||| 34 idx = i;||| 35 break;||| 36 }||| 37 }||| 38 cout << n - 1 << ""\n"";||| 39 for (int i = 0; i < n; i++)||| 40 if (idx != i) cout << v[i].second << "" "";||| 41 }||| 42 if (t) cout << ""\n"";||| 43 }||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 void SADIEM() {||| 5 std::ios_base::sync_with_stdio(NULL);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool iscomposite(int x) {||| 10 if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) ||||| 11 (x != 5 && !(x % 3)))||| 12 return true;||| 13 for (int i = 7; i <= x / i; i++)||| 14 if (!(x % i)) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n, sum = 0;||| 22 cin >> n;||| 23 vector<pair<int, int>> v(n);||| 24 for (int i = 0; i < n && cin >> v[i].first; i++)||| 25 v[i].second = i + 1, sum += v[i].first;||| 26 if (iscomposite(sum)) {||| 27 cout << n << ""\n"";||| 28 for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? "" "" : """");||| 29 } else {||| 30 sort(v.begin(), v.end());||| 31 int idx = -1;||| 32 for (int i = 0; i < n; i++) {||| 33 if (iscomposite(sum - v[i].first)) {||| 34 idx = i;||| 35 break;||| 36 }||| 37 }||| 38 cout << n - 1 << ""\n"";||| 39 for (int i = 0; i < n; i++)||| 40 if (idx != i) cout << v[i].second << "" "";||| 41 }||| 42 if (t) cout << ""\n"";||| 43 }||| 44 }||| "	11 (x != 5 && !(x % 5)))
36	110	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 void SADIEM() {||| 5 std::ios_base::sync_with_stdio(NULL);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool iscomposite(int x) {||| 10 if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) ||||| 11 (x != 5 && !(x % 5)))||| 12 return true;||| 13 for (int i = 7; i <= x / i; i++)||| 14 if (!(x % i)) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n, sum = 0;||| 22 cin >> n;||| 23 vector<pair<int, int>> v(n);||| 24 for (int i = 0; i < n && cin >> v[i].first; i++)||| 25 v[i].second = i + 1, sum += v[i].first;||| 26 if (iscomposite(sum)) {||| 27 cout << n << ""\n"";||| 28 for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? "" "" : """");||| 29 } else {||| 30 sort(v.begin(), v.end());||| 31 int idx = -1;||| 32 for (int i = 0; i < n; i++) {||| 33 if (iscomposite(sum - v[i].first)) {||| 34 idx = i;||| 35 break;||| 36 }||| 37 }||| 38 cout << n - 1 << ""\n"";||| 39 for (int i = 0; i < n; i++)||| 40 if (idx != i) cout << v[i].second << "" "";||| 41 }||| 42 if (t) cout << ""\n"";||| 43 }||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 void SADIEM() {||| 5 std::ios_base::sync_with_stdio(NULL);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool iscomposite(int x) {||| 10 if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) ||||| 11 (x != 5 && !(x % 3)))||| 12 return true;||| 13 for (int i = 7; i < x / i; i++)||| 14 if (!(x % i)) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 int n, sum = 0;||| 22 cin >> n;||| 23 vector<pair<int, int>> v(n);||| 24 for (int i = 0; i < n && cin >> v[i].first; i++)||| 25 v[i].second = i + 1, sum += v[i].first;||| 26 if (iscomposite(sum)) {||| 27 cout << n << ""\n"";||| 28 for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? "" "" : """");||| 29 } else {||| 30 sort(v.begin(), v.end());||| 31 int idx = -1;||| 32 for (int i = 0; i < n; i++) {||| 33 if (iscomposite(sum - v[i].first)) {||| 34 idx = i;||| 35 break;||| 36 }||| 37 }||| 38 cout << n - 1 << ""\n"";||| 39 for (int i = 0; i < n; i++)||| 40 if (idx != i) cout << v[i].second << "" "";||| 41 }||| 42 if (t) cout << ""\n"";||| 43 }||| 44 }||| "	11 (x != 5 && !(x % 5)))
37	254	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 inline int gc() {||| 5 static char buf[1048576], *p1 = buf, *p2 = buf;||| 6 return (p1 == p2) &&||| 7 (p2 = (p1 = buf) + fread(buf, 1, 1048576, stdin), p1 == p2)||| 8 ? EOF||| 9 : *p1++;||| 10 }||| 11 template <class T>||| 12 void read(T &x) {||| 13 char c = gc();||| 14 bool neg = false;||| 15 while (!isdigit(c)) neg = (c == '-'), c = gc();||| 16 x = 0;||| 17 while (isdigit(c)) x = x * 10 + c - '0', c = gc();||| 18 if (neg) x = -x;||| 19 }||| 20 void read(char &c) {||| 21 for (c = ' '; isspace(c); c = gc())||| 22 ;||| 23 }||| 24 void read(char *s) {||| 25 char c = gc();||| 26 while (isspace(c)) c = gc();||| 27 while (!isspace(c)) *s++ = c, c = gc();||| 28 *s = '\0';||| 29 }||| 30 template <typename Head, typename... Tail>||| 31 void read(Head &H, Tail &...T) {||| 32 read(H), read(T...);||| 33 }||| 34 template <class T>||| 35 void print(T x) {||| 36 static int buf[256], top;||| 37 if (x < 0) x = -x, putchar(45);||| 38 do buf[++top] = x % 10 + '0', x /= 10;||| 39 while (x);||| 40 while (top) putchar(buf[top--]);||| 41 }||| 42 void print(const char &c) { putchar(c); }||| 43 void print(const char *c) {||| 44 for (int p = 0; c[p] != '\0'; print(c[p++]))||| 45 ;||| 46 }||| 47 void print(const string &s) {||| 48 for (int i = 0; i < (int)s.size(); print(s[i++]))||| 49 ;||| 50 }||| 51 template <typename Head, typename... Tail>||| 52 void print(Head H, Tail... T) {||| 53 print(H), print(T...);||| 54 }||| 55 using ull = unsigned long long;||| 56 using ll = long long;||| 57 using vi = vector<int>;||| 58 template <class T>||| 59 using v = vector<T>;||| 60 int main() {||| 61 int tt;||| 62 read(tt);||| 63 while (tt--) {||| 64 int n, m;||| 65 read(n, m);||| 66 vi ok(n);||| 67 for (int i = 0; i < m; i++) {||| 68 int a, b, c;||| 69 read(a, b, c);||| 70 ok[--b] = 1;||| 71 }||| 72 for (int i = 0; i < n; i++)||| 73 if (!ok[i]) {||| 74 for (int j = 0; j < n; j++)||| 75 if (i ^ j) print(i + 1, ' ', j + 1, '\n');||| 76 break;||| 77 }||| 78 }||| 79 return 0;||| 80 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 inline int gc() {||| 5 static char buf[1048576], *p1 = buf, *p2 = buf;||| 6 return (p1 == p2) &&||| 7 (p2 = (p1 = buf) + fread(buf, 1, 1048576, stdin), p1 == p2)||| 8 ? EOF||| 9 : *p1++;||| 10 }||| 11 template <class T>||| 12 void read(T &x) {||| 13 char c = gc();||| 14 bool neg = false;||| 15 while (!isdigit(c)) neg = (c == '-'), c = gc();||| 16 x = 0;||| 17 while (isdigit(c)) x = x * 10 + c - '0', c = gc();||| 18 if (neg) x = -x;||| 19 }||| 20 void read(char &c) {||| 21 for (c = ' '; isspace(c); c = gc())||| 22 ;||| 23 }||| 24 void read(char *s) {||| 25 char c = gc();||| 26 while (isspace(c)) c = gc();||| 27 while (!isspace(c)) *s++ = c, c = gc();||| 28 *s = '\0';||| 29 }||| 30 template <typename Head, typename... Tail>||| 31 void read(Head &H, Tail &...T) {||| 32 read(H), read(T...);||| 33 }||| 34 template <class T>||| 35 void print(T x) {||| 36 static int buf[256], top;||| 37 if (x < 0) x = -x, putchar(45);||| 38 do buf[++top] = x % 10 + '0', x /= 10;||| 39 while (x);||| 40 while (top) putchar(buf[top--]);||| 41 }||| 42 void print(const char &c) { putchar(c); }||| 43 void print(const char *c) {||| 44 for (int p = 0; c[p] != '\0'; print(c[p++]))||| 45 ;||| 46 }||| 47 void print(const string &s) {||| 48 for (int i = 0; i < (int)s.size(); print(s[i++]))||| 49 ;||| 50 }||| 51 template <typename Head, typename... Tail>||| 52 void print(Head H, Tail... T) {||| 53 print(H), print(T...);||| 54 }||| 55 using ull = unsigned long long;||| 56 using ll = long long;||| 57 using vi = vector<int>;||| 58 template <class T>||| 59 using v = vector<T>;||| 60 int main() {||| 61 int tt;||| 62 read(tt);||| 63 while (tt--) {||| 64 int n, m;||| 65 read(n, m);||| 66 vi ok(n);||| 67 for (int i = 0; i < m; i++) {||| 68 int a, b, c;||| 69 read(a, b, c);||| 70 ok[--b] = 1;||| 71 }||| 72 for (int i = 0; i < n; i++)||| 73 if (ok[i]) {||| 74 for (int j = 0; j < n; j++)||| 75 if (i ^ j) print(i + 1, ' ', j + 1, '\n');||| 76 break;||| 77 }||| 78 }||| 79 return 0;||| 80 }||| 	73 if (!ok[i]) {
37	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 100010;||| 4 const long long INF = 2147483647;||| 5 long long t, n, m, x, y, z, cnt[maxn];||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> m;||| 11 for (int i = 1; i <= n; i++) cnt[i] = 0;||| 12 for (int i = 1; i <= m; i++) {||| 13 cin >> x >> y >> z;||| 14 cnt[y]++;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 if (cnt[i] == 0) {||| 18 for (int j = 1; j <= n; j++) {||| 19 if (j == i) continue;||| 20 cout << j << "" "" << i << endl;||| 21 }||| 22 break;||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 100010;||| 4 const long long INF = 2147483647;||| 5 long long t, n, m, x, y, z, cnt[maxn];||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> m;||| 11 for (int i = 1; i <= n; i++) cnt[i] = 0;||| 12 for (int i = 1; i <= m; i++) {||| 13 cin >> x >> y >> z;||| 14 cnt[z]++;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 if (cnt[i] == 0) {||| 18 for (int j = 1; j <= n; j++) {||| 19 if (j == i) continue;||| 20 cout << j << "" "" << i << endl;||| 21 }||| 22 break;||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	14 cnt[y]++;
37	251	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[100010];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) a[i] = 1;||| 11 while (m--) {||| 12 int v, s, temp;||| 13 cin >> v >> s >> temp;||| 14 a[s] = 0;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 if (a[i]) {||| 18 for (int j = 1; j <= n; j++) {||| 19 if (i != j) cout << i << "" "" << j << endl;||| 20 }||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[100010];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) a[i] = 1;||| 11 while (m--) {||| 12 int v, s, temp;||| 13 cin >> v >> s >> temp;||| 14 a[temp] = 0;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 if (a[i]) {||| 18 for (int j = 1; j <= n; j++) {||| 19 if (i != j) cout << i << "" "" << j << endl;||| 20 }||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 }||| "	14 a[s] = 0;
37	17	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, m;||| 8 cin >> n >> m;||| 9 long long find[n + 1];||| 10 memset(find, 0, sizeof(find));||| 11 for (long long i = 1; i <= m; i++) {||| 12 long long a, b, c;||| 13 cin >> a >> b >> c;||| 14 find[b]++;||| 15 }||| 16 long long i;||| 17 for (i = 1; i <= n; i++) {||| 18 if (!find[i]) {||| 19 break;||| 20 }||| 21 }||| 22 for (long long j = 1; j <= n; j++) {||| 23 if (j != i) {||| 24 cout << i << "" "" << j << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, m;||| 8 cin >> n >> m;||| 9 long long find[n + 1];||| 10 memset(find, 0, sizeof(find));||| 11 for (long long i = 1; i <= n; i++) {||| 12 long long a, b, c;||| 13 cin >> a >> b >> c;||| 14 find[b]++;||| 15 }||| 16 long long i;||| 17 for (i = 1; i <= n; i++) {||| 18 if (!find[i]) {||| 19 break;||| 20 }||| 21 }||| 22 for (long long j = 1; j <= n; j++) {||| 23 if (j != i) {||| 24 cout << i << "" "" << j << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	11 for (long long i = 1; i <= m; i++) {
37	117	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool notprime(int k) {||| 4 if (k == 0 || k == 1 || k == 2) {||| 5 return false;||| 6 }||| 7 int t = int(sqrt(k)) + 1;||| 8 for (int i = 2; i <= t; i++) {||| 9 if (k % i == 0 && i != k) {||| 10 return true;||| 11 }||| 12 }||| 13 return false;||| 14 }||| 15 pair<bool, vector<int>> isit(int k, int accum, vector<int> v) {||| 16 vector<int> blankvector(0);||| 17 if (k > v.size()) {||| 18 return {false, blankvector};||| 19 }||| 20 if (v.size() == k) {||| 21 vector<int> answer;||| 22 for (int i = 0; i < k; i++) {||| 23 answer.push_back(i);||| 24 }||| 25 if (notprime(accum + accumulate(v.begin(), v.end(), 0))) {||| 26 return {true, answer};||| 27 } else {||| 28 return {false, blankvector};||| 29 }||| 30 } else {||| 31 int number = v[v.size() - 1];||| 32 int position = int(v.size() - 1);||| 33 v.pop_back();||| 34 if (isit(k - 1, accum + number, v).first) {||| 35 vector<int> answer = isit(k - 1, accum + number, v).second;||| 36 answer.push_back(position);||| 37 return {true, answer};||| 38 }||| 39 if (isit(k, accum, v).first) {||| 40 return {true, isit(k, accum, v).second};||| 41 } else {||| 42 return {false, blankvector};||| 43 }||| 44 }||| 45 }||| 46 int main() {||| 47 int t;||| 48 cin >> t;||| 49 for (int i = 0; i < t; i++) {||| 50 int n, m;||| 51 cin >> n >> m;||| 52 vector<int> v(n);||| 53 for (int i = 0; i < m; i++) {||| 54 int a, b, c;||| 55 cin >> a >> b >> c;||| 56 v[b - 1]++;||| 57 }||| 58 for (int i = 0; i < n; i++) {||| 59 if (v[i] == 0) {||| 60 for (int j = 1; j <= n; j++) {||| 61 if (j != i + 1) {||| 62 cout << j << "" "" << i + 1 << endl;||| 63 }||| 64 }||| 65 break;||| 66 }||| 67 }||| 68 }||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool notprime(int k) {||| 4 if (k == 0 || k == 1 || k == 2) {||| 5 return false;||| 6 }||| 7 int t = int(sqrt(k)) + 1;||| 8 for (int i = 2; i <= t; i++) {||| 9 if (k % i == 0 && i != k) {||| 10 return true;||| 11 }||| 12 }||| 13 return false;||| 14 }||| 15 pair<bool, vector<int>> isit(int k, int accum, vector<int> v) {||| 16 vector<int> blankvector(0);||| 17 if (k > v.size()) {||| 18 return {false, blankvector};||| 19 }||| 20 if (v.size() == k) {||| 21 vector<int> answer;||| 22 for (int i = 0; i < k; i++) {||| 23 answer.push_back(i);||| 24 }||| 25 if (notprime(accum + accumulate(v.begin(), v.end(), 0))) {||| 26 return {true, answer};||| 27 } else {||| 28 return {false, blankvector};||| 29 }||| 30 } else {||| 31 int number = v[v.size() - 1];||| 32 int position = int(v.size() - 1);||| 33 v.pop_back();||| 34 if (isit(k - 1, accum + number, v).first) {||| 35 vector<int> answer = isit(k - 1, accum + number, v).second;||| 36 answer.push_back(position);||| 37 return {true, answer};||| 38 }||| 39 if (isit(k, accum, v).first) {||| 40 return {true, isit(k, accum, v).second};||| 41 } else {||| 42 return {false, blankvector};||| 43 }||| 44 }||| 45 }||| 46 int main() {||| 47 int t;||| 48 cin >> t;||| 49 for (int i = 0; i < t; i++) {||| 50 int n, m;||| 51 cin >> n >> m;||| 52 vector<int> v(n);||| 53 for (int i = 0; i < m; i++) {||| 54 int a, b, c;||| 55 cin >> a >> b >> c;||| 56 v[b]++;||| 57 }||| 58 for (int i = 0; i < n; i++) {||| 59 if (v[i] == 0) {||| 60 for (int j = 1; j <= n; j++) {||| 61 if (j != i + 1) {||| 62 cout << j << "" "" << i + 1 << endl;||| 63 }||| 64 }||| 65 break;||| 66 }||| 67 }||| 68 }||| 69 }||| "	56 v[b - 1]++;
37	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<int> v(n + 1, 0);||| 10 int i;||| 11 for (int i = 0; i < m; i++) {||| 12 int a, b, c;||| 13 cin >> a >> b >> c;||| 14 v[b] = 1;||| 15 }||| 16 for (i = 1; i <= n; i++)||| 17 if (!v[i]) break;||| 18 for (int j = 1; j <= n; j++)||| 19 if (i != j) cout << i << "" "" << j << endl;||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 vector<int> v(n + 1, 0);||| 10 int i;||| 11 for (int i = 0; i < m; i++) {||| 12 int a, b, c;||| 13 cin >> a >> b >> c;||| 14 v[b] = 1;||| 15 }||| 16 for (i = 1; i <= n; i++)||| 17 if (!v[i]) break;||| 18 for (int j = i; j <= n; j++)||| 19 if (i != j) cout << i << "" "" << j << endl;||| 20 }||| 21 return 0;||| 22 }||| "	18 for (int j = 1; j <= n; j++)
37	13	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool mark[100005];||| 4 int main() {||| 5 int t;||| 6 scanf(""%d"", &t);||| 7 while (t--) {||| 8 int n, m;||| 9 memset(mark, 0, sizeof(mark));||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 1; i <= m; i++) {||| 12 int a, b, c;||| 13 scanf(""%d%d%d"", &a, &b, &c);||| 14 mark[b] = 1;||| 15 }||| 16 int st = 1;||| 17 for (int i = 1; i <= n; i++) {||| 18 if (!mark[i]) {||| 19 st = i;||| 20 break;||| 21 }||| 22 }||| 23 for (int i = 1; i <= n; i++) {||| 24 if (i == st) continue;||| 25 printf(""%d %d\n"", st, i);||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool mark[100005];||| 4 int main() {||| 5 int t;||| 6 scanf(""%d"", &t);||| 7 while (t--) {||| 8 int n, m;||| 9 memset(mark, 0, sizeof(mark));||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 1; i <= m; i++) {||| 12 int a, b, c;||| 13 scanf(""%d%d%d"", &a, &b, &c);||| 14 mark[a] = 1;||| 15 }||| 16 int st = 1;||| 17 for (int i = 1; i <= n; i++) {||| 18 if (!mark[i]) {||| 19 st = i;||| 20 break;||| 21 }||| 22 }||| 23 for (int i = 1; i <= n; i++) {||| 24 if (i == st) continue;||| 25 printf(""%d %d\n"", st, i);||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	14 mark[b] = 1;
38	74	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 7;||| 4 const int LOG = 30;||| 5 vector<char> a[maxn];||| 6 vector<int> dp[maxn];||| 7 int st[maxn][LOG];||| 8 int bin[LOG];||| 9 int mlg[maxn];||| 10 int n, m, q;||| 11 void init(int);||| 12 int query(int, int);||| 13 void print() {||| 14 for (int i = 0; i < n; i++) {||| 15 for (int j = 0; j < m; j++) {||| 16 cout << dp[i][j] + 1 << "" "";||| 17 }||| 18 cout << '\n';||| 19 }||| 20 }||| 21 int main() {||| 22 cin >> n >> m;||| 23 for (int i = 0; i < n; i++) {||| 24 dp[i].resize(m);||| 25 string s;||| 26 cin >> s;||| 27 for (int j = 0; j < s.length(); j++) {||| 28 a[i].push_back(s[j]);||| 29 }||| 30 }||| 31 for (int i = 0; i < n; i++) {||| 32 dp[i][0] = 0;||| 33 }||| 34 for (int i = 0; i < m; i++) {||| 35 dp[0][i] = 0;||| 36 }||| 37 for (int i = 1; i < n; i++) {||| 38 for (int j = 1; j < m; j++) {||| 39 if (a[i - 1][j] == 'X' && a[i][j - 1] == 'X')||| 40 dp[i][j] = j;||| 41 else if (a[i - 1][j] == 'X')||| 42 dp[i][j] = dp[i][j - 1];||| 43 else if (a[i][j - 1] == 'X')||| 44 dp[i][j] = dp[i - 1][j];||| 45 else||| 46 dp[i][j] = min(dp[i][j - 1], dp[i - 1][j]);||| 47 }||| 48 }||| 49 for (int j = 0; j < m; j++) {||| 50 int tmp = -1;||| 51 for (int i = 0; i < n; i++) {||| 52 tmp = max(dp[i][j], tmp);||| 53 }||| 54 st[j][0] = tmp;||| 55 }||| 56 init(m);||| 57 cin >> q;||| 58 while (q--) {||| 59 int l, r;||| 60 cin >> l >> r;||| 61 if (l == r)||| 62 cout << ""YES\n"";||| 63 else {||| 64 int maxx = query(l - 1, r - 1);||| 65 if (maxx > l - 1)||| 66 cout << ""NO\n"";||| 67 else||| 68 cout << ""YES\n"";||| 69 }||| 70 }||| 71 }||| 72 void init(int n) {||| 73 mlg[0] = -1;||| 74 for (int i = 1; i <= n; i++) {||| 75 mlg[i] = mlg[i / 2] + 1;||| 76 }||| 77 bin[0] = 1;||| 78 for (int i = 1; i < LOG; i++) {||| 79 bin[i] = bin[i - 1] * 2;||| 80 }||| 81 for (int j = 1; j <= mlg[n]; j++) {||| 82 for (int i = 0; i + bin[j] - 1 < n; i++) {||| 83 st[i][j] = max(st[i][j - 1], st[i + bin[j - 1]][j - 1]);||| 84 }||| 85 }||| 86 }||| 87 int query(int x, int y) {||| 88 int t = mlg[y - x + 1];||| 89 return max(st[x][t], st[y - bin[t] + 1][t]);||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 7;||| 4 const int LOG = 30;||| 5 vector<char> a[maxn];||| 6 vector<int> dp[maxn];||| 7 int st[maxn][LOG];||| 8 int bin[LOG];||| 9 int mlg[maxn];||| 10 int n, m, q;||| 11 void init(int);||| 12 int query(int, int);||| 13 void print() {||| 14 for (int i = 0; i < n; i++) {||| 15 for (int j = 0; j < m; j++) {||| 16 cout << dp[i][j] + 1 << "" "";||| 17 }||| 18 cout << '\n';||| 19 }||| 20 }||| 21 int main() {||| 22 cin >> n >> m;||| 23 for (int i = 0; i < n; i++) {||| 24 dp[i].resize(m);||| 25 string s;||| 26 cin >> s;||| 27 for (int j = 0; j < s.length(); j++) {||| 28 a[i].push_back(s[j]);||| 29 }||| 30 }||| 31 for (int i = 0; i < n; i++) {||| 32 dp[i][0] = 0;||| 33 }||| 34 for (int i = 0; i < m; i++) {||| 35 dp[0][i] = 0;||| 36 }||| 37 for (int i = 1; i < n; i++) {||| 38 for (int j = 1; j < m; j++) {||| 39 if (a[i - 1][j] == 'X' && a[i][j - 1] == 'X')||| 40 dp[i][j] = j;||| 41 else if (a[i - 1][j] == 'X')||| 42 dp[i][j] = dp[i][j - 1];||| 43 else if (a[i][j - 1] == 'X')||| 44 dp[i][j] = dp[i - 1][j];||| 45 else||| 46 dp[i][j] = min(dp[i][j - 1], dp[i - 1][j]);||| 47 }||| 48 }||| 49 for (int j = 0; j < m; j++) {||| 50 int tmp = -1;||| 51 for (int i = 0; i < n; i++) {||| 52 tmp = max(dp[i][j], tmp);||| 53 }||| 54 st[j][0] = tmp;||| 55 }||| 56 init(m);||| 57 cin >> q;||| 58 while (q--) {||| 59 int l, r;||| 60 cin >> l >> r;||| 61 if (l == r)||| 62 cout << ""YES\n"";||| 63 else {||| 64 int maxx = query(l - 1, r - 1);||| 65 if (maxx > l - 1)||| 66 cout << ""NO\n"";||| 67 else||| 68 cout << ""YES\n"";||| 69 }||| 70 }||| 71 }||| 72 void init(int n) {||| 73 mlg[0] = -1;||| 74 for (int i = 1; i <= n; i++) {||| 75 mlg[i] = mlg[i / 2] + 1;||| 76 }||| 77 bin[0] = 1;||| 78 for (int i = 1; i < LOG; i++) {||| 79 bin[i] = bin[i - 1] * 2;||| 80 }||| 81 for (int j = 1; j < mlg[n]; j++) {||| 82 for (int i = 0; i + bin[j] - 1 < n; i++) {||| 83 st[i][j] = max(st[i][j - 1], st[i + bin[j - 1]][j - 1]);||| 84 }||| 85 }||| 86 }||| 87 int query(int x, int y) {||| 88 int t = mlg[y - x + 1];||| 89 return max(st[x][t], st[y - bin[t] + 1][t]);||| 90 }||| "	81 for (int j = 1; j <= mlg[n]; j++) {
38	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int n, m;||| 7 cin >> n >> m;||| 8 vector<string> mp(n);||| 9 for (int i = 0; i < n; i++) cin >> mp[i];||| 10 vector<int> bc;||| 11 for (int i = 0; i < m - 1; i++) {||| 12 for (int j = 1; j < n; j++) {||| 13 if (mp[j][i] == 'X' && mp[j - 1][i + 1] == 'X') {||| 14 bc.push_back(i);||| 15 break;||| 16 }||| 17 }||| 18 }||| 19 bc.push_back(m + 1);||| 20 int q;||| 21 cin >> q;||| 22 while (q--) {||| 23 int li, ri;||| 24 cin >> li >> ri;||| 25 li--;||| 26 ri--;||| 27 int l = 0, r = bc.size() - 1;||| 28 while (l != r) {||| 29 int m = (l + r) / 2;||| 30 if (li <= bc[m])||| 31 r = m;||| 32 else||| 33 l = m + 1;||| 34 }||| 35 if (bc[l] + 1 <= ri)||| 36 cout << ""NO\n"";||| 37 else||| 38 cout << ""YES\n"";||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int n, m;||| 7 cin >> n >> m;||| 8 vector<string> mp(n);||| 9 for (int i = 0; i < n; i++) cin >> mp[i];||| 10 vector<int> bc;||| 11 for (int i = 0; i < m - 1; i++) {||| 12 for (int j = 1; j < n; j++) {||| 13 if (mp[j][i] == 'X' && mp[j - 1][i + 1] == 'X') {||| 14 bc.push_back(i);||| 15 break;||| 16 }||| 17 }||| 18 }||| 19 bc.push_back(n + 1);||| 20 int q;||| 21 cin >> q;||| 22 while (q--) {||| 23 int li, ri;||| 24 cin >> li >> ri;||| 25 li--;||| 26 ri--;||| 27 int l = 0, r = bc.size() - 1;||| 28 while (l != r) {||| 29 int m = (l + r) / 2;||| 30 if (li <= bc[m])||| 31 r = m;||| 32 else||| 33 l = m + 1;||| 34 }||| 35 if (bc[l] + 1 <= ri)||| 36 cout << ""NO\n"";||| 37 else||| 38 cout << ""YES\n"";||| 39 }||| 40 return 0;||| 41 }||| "	19 bc.push_back(m + 1);
39	200	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool com(pair<int, int> x, pair<int, int> y) {||| 4 if (x.first == y.first) return x.second < y.second;||| 5 return x.first < y.first;||| 6 }||| 7 long long int power(long long int x, long long int y) {||| 8 long long int prod = 1;||| 9 while (y) {||| 10 if (y & 1) prod = (prod * x) % 1000000007;||| 11 x = (x * x) % 1000000007;||| 12 y /= 2;||| 13 }||| 14 return prod;||| 15 }||| 16 const int N = 2e5 + 7;||| 17 int tc = 1;||| 18 void solve() {||| 19 int n;||| 20 cin >> n;||| 21 vector<int> ans(n + 1);||| 22 ans[n] = n;||| 23 for (int i = n; i > 1; i--) {||| 24 cout << ""? "";||| 25 for (int j = 1; j < n; j++) {||| 26 cout << 1 << "" "";||| 27 }||| 28 cout << i << endl;||| 29 int x;||| 30 cin >> x;||| 31 if (x == 0) continue;||| 32 ans[n] = n + 1 - i;||| 33 break;||| 34 }||| 35 for (int i = n; i > 0; i--) {||| 36 if (ans[n] == i) continue;||| 37 cout << ""? "";||| 38 for (int j = 1; j < n; j++) {||| 39 cout << n + 1 - i << "" "";||| 40 }||| 41 cout << n + 1 - ans[n] << endl;||| 42 int x;||| 43 cin >> x;||| 44 ans[x] = i;||| 45 }||| 46 cout << ""! "";||| 47 for (int i = 1; i <= n; i++) cout << ans[i] << "" "";||| 48 cout << endl;||| 49 }||| 50 int main() {||| 51 ios_base::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t = 1;||| 55 while (t--) solve();||| 56 return 0;||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool com(pair<int, int> x, pair<int, int> y) {||| 4 if (x.first == y.first) return x.second < y.second;||| 5 return x.first < y.first;||| 6 }||| 7 long long int power(long long int x, long long int y) {||| 8 long long int prod = 1;||| 9 while (y) {||| 10 if (y & 1) prod = (prod * x) % 1000000007;||| 11 x = (x * x) % 1000000007;||| 12 y /= 2;||| 13 }||| 14 return prod;||| 15 }||| 16 const int N = 2e5 + 7;||| 17 int tc = 1;||| 18 void solve() {||| 19 int n;||| 20 cin >> n;||| 21 vector<int> ans(n + 1);||| 22 ans[n] = n;||| 23 for (int i = n; i > 1; i--) {||| 24 cout << ""? "";||| 25 for (int j = 1; j < n; j++) {||| 26 cout << 1 << "" "";||| 27 }||| 28 cout << i << endl;||| 29 int x;||| 30 cin >> x;||| 31 if (x == 0) continue;||| 32 ans[n] = n + 1 - i;||| 33 break;||| 34 }||| 35 for (int i = n - 1; i > 0; i--) {||| 36 if (ans[n] == i) continue;||| 37 cout << ""? "";||| 38 for (int j = 1; j < n; j++) {||| 39 cout << n + 1 - i << "" "";||| 40 }||| 41 cout << n + 1 - ans[n] << endl;||| 42 int x;||| 43 cin >> x;||| 44 ans[x] = i;||| 45 }||| 46 cout << ""! "";||| 47 for (int i = 1; i <= n; i++) cout << ans[i] << "" "";||| 48 cout << endl;||| 49 }||| 50 int main() {||| 51 ios_base::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t = 1;||| 55 while (t--) solve();||| 56 return 0;||| 57 }||| "	35 for (int i = n; i > 0; i--) {
39	163	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n, a[N], b[N], pos, lst[N], cnt, last, Last, ans[N];||| 5 bool vis[N];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin >> n;||| 9 for (int i = n; i >= 1; --i) {||| 10 if (vis[i]) continue;||| 11 cnt = 1;||| 12 pos = i;||| 13 while (pos) {||| 14 cnt++;||| 15 if (cnt == n + 1) {||| 16 cout << ""! "";||| 17 for (int i = 1; i <= n; ++i) cout << i << "" "";||| 18 cout << endl;||| 19 return 0;||| 20 }||| 21 Last = pos;||| 22 cout << ""? "";||| 23 for (int j = 1; j < i; ++j) cout << cnt << "" "";||| 24 cout << 1 << "" "";||| 25 for (int j = i + 1; j <= n; ++j) cout << cnt << "" "";||| 26 cout << endl;||| 27 cout.flush();||| 28 cin >> pos;||| 29 if (pos == i) {||| 30 lst[last] = Last;||| 31 break;||| 32 } else if (pos != 0)||| 33 lst[pos] = Last;||| 34 vis[pos] = 1;||| 35 }||| 36 last = i;||| 37 }||| 38 int tmp = 0;||| 39 memset(vis, 0, sizeof(vis));||| 40 for (int i = 1; i <= n; ++i) vis[lst[i]] = 1;||| 41 for (int i = 1; i <= n; ++i)||| 42 if (!vis[i]) {||| 43 tmp = i;||| 44 break;||| 45 }||| 46 for (int i = 1; i <= n; ++i) ans[tmp] = i, tmp = lst[tmp];||| 47 cout << ""! "";||| 48 for (int i = 1; i <= n; ++i) cout << ans[i] << "" "";||| 49 cout << endl;||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n, a[N], b[N], pos, lst[N], cnt, last, Last, ans[N];||| 5 bool vis[N];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin >> n;||| 9 for (int i = n; i >= 1; --i) {||| 10 if (vis[i]) continue;||| 11 cnt = 1;||| 12 pos = i;||| 13 while (pos) {||| 14 cnt++;||| 15 if (cnt == n + 1) {||| 16 cout << ""! "";||| 17 for (int i = 1; i <= n; ++i) cout << i << "" "";||| 18 cout << endl;||| 19 return 0;||| 20 }||| 21 Last = pos;||| 22 cout << ""? "";||| 23 for (int j = 1; j < i; ++j) cout << cnt << "" "";||| 24 cout << 1 << "" "";||| 25 for (int j = i + 1; j <= n; ++j) cout << cnt << "" "";||| 26 cout << endl;||| 27 cout.flush();||| 28 cin >> pos;||| 29 if (pos == i) {||| 30 lst[last] = pos;||| 31 break;||| 32 } else if (pos != 0)||| 33 lst[pos] = Last;||| 34 vis[pos] = 1;||| 35 }||| 36 last = i;||| 37 }||| 38 int tmp = 0;||| 39 memset(vis, 0, sizeof(vis));||| 40 for (int i = 1; i <= n; ++i) vis[lst[i]] = 1;||| 41 for (int i = 1; i <= n; ++i)||| 42 if (!vis[i]) {||| 43 tmp = i;||| 44 break;||| 45 }||| 46 for (int i = 1; i <= n; ++i) ans[tmp] = i, tmp = lst[tmp];||| 47 cout << ""! "";||| 48 for (int i = 1; i <= n; ++i) cout << ans[i] << "" "";||| 49 cout << endl;||| 50 return 0;||| 51 }||| "	30 lst[last] = Last;
39	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int query(vector<int>& v) {||| 4 cout << ""? "";||| 5 for (auto& x : v) {||| 6 cout << x << "" "";||| 7 }||| 8 cout << endl;||| 9 int a;||| 10 cin >> a;||| 11 return a;||| 12 }||| 13 void solve(int n) {||| 14 int x = 1;||| 15 vector<int> v(n, 1);||| 16 for (int i = n; i >= 2; i--) {||| 17 for (int j = 0; j < n - 1; j++) {||| 18 v[j] = i;||| 19 }||| 20 int a = query(v);||| 21 if (a == 0) continue;||| 22 x = i;||| 23 break;||| 24 }||| 25 vector<int> ans(n, -1);||| 26 ans[n - 1] = x;||| 27 for (int i = 0; i < n; i++) {||| 28 v[i] = x;||| 29 }||| 30 for (int i = 1; i <= n; i++) {||| 31 if (i == x) continue;||| 32 v[n - 1] = i;||| 33 int index = query(v);||| 34 ans[index - 1] = i;||| 35 }||| 36 cout << ""! "";||| 37 for (auto& y : ans) {||| 38 cout << y << "" "";||| 39 }||| 40 cout << endl;||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 long long t = 1;||| 46 while (t--) {||| 47 int n;||| 48 cin >> n;||| 49 solve(n);||| 50 }||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int query(vector<int>& v) {||| 4 cout << ""? "";||| 5 for (auto& x : v) {||| 6 cout << x << "" "";||| 7 }||| 8 cout << endl;||| 9 int a;||| 10 cin >> a;||| 11 return a;||| 12 }||| 13 void solve(int n) {||| 14 int x = 1;||| 15 vector<int> v(n, 1);||| 16 for (int i = n; i >= 2; i--) {||| 17 for (int j = 0; j < n - 1; j++) {||| 18 v[j] = i;||| 19 }||| 20 int a = query(v);||| 21 if (a == 0) continue;||| 22 x = a;||| 23 break;||| 24 }||| 25 vector<int> ans(n, -1);||| 26 ans[n - 1] = x;||| 27 for (int i = 0; i < n; i++) {||| 28 v[i] = x;||| 29 }||| 30 for (int i = 1; i <= n; i++) {||| 31 if (i == x) continue;||| 32 v[n - 1] = i;||| 33 int index = query(v);||| 34 ans[index - 1] = i;||| 35 }||| 36 cout << ""! "";||| 37 for (auto& y : ans) {||| 38 cout << y << "" "";||| 39 }||| 40 cout << endl;||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 long long t = 1;||| 46 while (t--) {||| 47 int n;||| 48 cin >> n;||| 49 solve(n);||| 50 }||| 51 }||| "	22 x = i;
39	131	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case(int test) {||| 4 int n;||| 5 cin >> n;||| 6 auto query = [&](vector<int> a) {||| 7 cout << ""? "";||| 8 for (int e : a) cout << e << ' ';||| 9 cout << endl;||| 10 int res;||| 11 cin >> res;||| 12 return res - 1;||| 13 };||| 14 vector<int> res(n);||| 15 for (int i = n; i >= 1; i--) {||| 16 vector<int> a(n);||| 17 a[n - 1] = i;||| 18 for (int j = 0; j + 1 < n; j++) a[j] = 1;||| 19 int foo = query(a);||| 20 if (foo == -1) continue;||| 21 res.back() = n + 1 - i;||| 22 break;||| 23 }||| 24 if (res.back() == 0) res.back() = n;||| 25 for (int i = 1; i <= n; i++) {||| 26 if (i == res.back()) continue;||| 27 int to_n = n + 1 - i;||| 28 vector<int> a(n, to_n);||| 29 a.back() = n + 1 - res.back();||| 30 int id = query(a);||| 31 assert(id != -1);||| 32 res[id] = i;||| 33 }||| 34 cout << ""! "";||| 35 for (int e : res) cout << e << ' ';||| 36 cout << endl;||| 37 }||| 38 int32_t main() {||| 39 ios::sync_with_stdio(false);||| 40 int tests = 1;||| 41 for (int test = 1; test <= tests; test++) run_case(test);||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case(int test) {||| 4 int n;||| 5 cin >> n;||| 6 auto query = [&](vector<int> a) {||| 7 cout << ""? "";||| 8 for (int e : a) cout << e << ' ';||| 9 cout << endl;||| 10 int res;||| 11 cin >> res;||| 12 return res - 1;||| 13 };||| 14 vector<int> res(n);||| 15 for (int i = n; i >= 1; i--) {||| 16 vector<int> a(n);||| 17 a[n - 1] = i;||| 18 for (int j = 0; j + 1 < n; j++) a[i] = 1;||| 19 int foo = query(a);||| 20 if (foo == -1) continue;||| 21 res.back() = n + 1 - i;||| 22 break;||| 23 }||| 24 if (res.back() == 0) res.back() = n;||| 25 for (int i = 1; i <= n; i++) {||| 26 if (i == res.back()) continue;||| 27 int to_n = n + 1 - i;||| 28 vector<int> a(n, to_n);||| 29 a.back() = n + 1 - res.back();||| 30 int id = query(a);||| 31 assert(id != -1);||| 32 res[id] = i;||| 33 }||| 34 cout << ""! "";||| 35 for (int e : res) cout << e << ' ';||| 36 cout << endl;||| 37 }||| 38 int32_t main() {||| 39 ios::sync_with_stdio(false);||| 40 int tests = 1;||| 41 for (int test = 1; test <= tests; test++) run_case(test);||| 42 return 0;||| 43 }||| "	18 for (int j = 0; j + 1 < n; j++) a[j] = 1;
39	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, tmp;||| 5 cin >> n;||| 6 vector<int> a(n);||| 7 bool ok = true;||| 8 int cur = 1;||| 9 for (int i = 0; i < 2 * n; ++i) {||| 10 if (!ok && cur >= n) {||| 11 break;||| 12 }||| 13 if (ok && cur >= n) {||| 14 a[n - 1] = 1;||| 15 cur = 1;||| 16 ok = false;||| 17 }||| 18 if (ok) {||| 19 cout << ""? "";||| 20 for (int i = 0; i < n - 1; ++i) {||| 21 cout << 1 << ' ';||| 22 }||| 23 cout << 1 + cur << endl;||| 24 cin >> tmp;||| 25 if (tmp == 0) {||| 26 a[n - 1] = n - i;||| 27 cur = 1;||| 28 ok = false;||| 29 continue;||| 30 } else {||| 31 a[tmp - 1] = cur;||| 32 }||| 33 } else {||| 34 cout << ""? "";||| 35 for (int i = 0; i < n - 1; ++i) {||| 36 cout << 1 + cur << ' ';||| 37 }||| 38 cout << 1 << endl;||| 39 cin >> tmp;||| 40 if (tmp != 0) {||| 41 a[tmp - 1] = -cur;||| 42 }||| 43 }||| 44 ++cur;||| 45 }||| 46 cout << ""! "";||| 47 for (int i = 0; i < n - 1; ++i) {||| 48 cout << a[n - 1] + a[i] << ' ';||| 49 }||| 50 cout << a[n - 1] << endl;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(0);||| 54 cin.tie(0);||| 55 cout.tie(0);||| 56 int tc = 1;||| 57 for (int t = 1; t <= tc; t++) {||| 58 solve();||| 59 }||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, tmp;||| 5 cin >> n;||| 6 vector<int> a(n);||| 7 bool ok = true;||| 8 int cur = 1;||| 9 for (int i = 0; i < 2 * n; ++i) {||| 10 if (!ok && cur >= n) {||| 11 break;||| 12 }||| 13 if (ok && cur >= n) {||| 14 a[n - 1] = 1;||| 15 cur = 1;||| 16 ok = false;||| 17 }||| 18 if (ok) {||| 19 cout << ""? "";||| 20 for (int i = 0; i < n - 1; ++i) {||| 21 cout << 1 << ' ';||| 22 }||| 23 cout << 1 + cur << endl;||| 24 cin >> tmp;||| 25 if (tmp == 0) {||| 26 a[n - 1] = n - i;||| 27 cur = 1;||| 28 ok = false;||| 29 continue;||| 30 } else {||| 31 a[tmp - 1] = cur;||| 32 }||| 33 } else {||| 34 cout << ""? "";||| 35 for (int i = 0; i < n - 1; ++i) {||| 36 cout << 1 + cur << ' ';||| 37 }||| 38 cout << 1 << endl;||| 39 cin >> tmp;||| 40 if (tmp != 0) {||| 41 a[tmp - 1] = -cur + 1;||| 42 }||| 43 }||| 44 ++cur;||| 45 }||| 46 cout << ""! "";||| 47 for (int i = 0; i < n - 1; ++i) {||| 48 cout << a[n - 1] + a[i] << ' ';||| 49 }||| 50 cout << a[n - 1] << endl;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(0);||| 54 cin.tie(0);||| 55 cout.tie(0);||| 56 int tc = 1;||| 57 for (int t = 1; t <= tc; t++) {||| 58 solve();||| 59 }||| 60 }||| "	41 a[tmp - 1] = -cur;
39	171	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long INF = 1e18;||| 5 long long ceel(long long a, long long b) { return ((a + b - 1ll) / b); }||| 6 void solve() {||| 7 long long n;||| 8 cin >> n;||| 9 string s;||| 10 long long ans[n + 1];||| 11 long long flag = 0;||| 12 long long x;||| 13 long long idx = 1;||| 14 while (idx < n) {||| 15 cout << ""? "";||| 16 for (long long i = 0; i < n - 1; i++) cout << idx << ' ';||| 17 cout << n << '\n';||| 18 cout.flush();||| 19 cin >> x;||| 20 if (x) {||| 21 break;||| 22 }||| 23 idx++;||| 24 }||| 25 ans[n] = idx;||| 26 for (long long i = 1; i < n + 1; i++) {||| 27 cout << ""? "";||| 28 for (long long i = 0; i < n - 1; i++) {||| 29 cout << idx << "" "";||| 30 }||| 31 cout << i << '\n';||| 32 cout.flush();||| 33 cin >> x;||| 34 ans[x] = i;||| 35 }||| 36 cout << ""! "";||| 37 for (long long i = 0; i < n; i++) {||| 38 cout << ans[i + 1] << "" "";||| 39 }||| 40 cout << '\n';||| 41 cout.flush();||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(nullptr);||| 46 cout.tie(nullptr);||| 47 long long t = 1;||| 48 for (long long tc = 0; tc < t; tc++) {||| 49 solve();||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long INF = 1e18;||| 5 long long ceel(long long a, long long b) { return ((a + b - 1ll) / b); }||| 6 void solve() {||| 7 long long n;||| 8 cin >> n;||| 9 string s;||| 10 long long ans[n + 1];||| 11 long long flag = 0;||| 12 long long x;||| 13 long long idx = 1;||| 14 while (idx < n) {||| 15 cout << ""? "";||| 16 for (long long i = 0; i < n - 1; i++) cout << idx << ' ';||| 17 cout << n << '\n';||| 18 cout.flush();||| 19 cin >> x;||| 20 if (x) {||| 21 break;||| 22 }||| 23 idx++;||| 24 }||| 25 ans[n] = idx;||| 26 for (long long i = 1; i < n + 1; i++) {||| 27 cout << '? ';||| 28 for (long long i = 0; i < n - 1; i++) {||| 29 cout << idx << "" "";||| 30 }||| 31 cout << i << '\n';||| 32 cout.flush();||| 33 cin >> x;||| 34 ans[x] = i;||| 35 }||| 36 cout << ""! "";||| 37 for (long long i = 0; i < n; i++) {||| 38 cout << ans[i + 1] << "" "";||| 39 }||| 40 cout << '\n';||| 41 cout.flush();||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(nullptr);||| 46 cout.tie(nullptr);||| 47 long long t = 1;||| 48 for (long long tc = 0; tc < t; tc++) {||| 49 solve();||| 50 }||| 51 return 0;||| 52 }||| "	"27 cout << ""? "";"
39	277	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1000004;||| 4 const long long mod = 1000 * 1000 * 1000 + 7;||| 5 const long long inf = 1000000000;||| 6 long long n, m, k, z, t, ans, x, y, pat, a[N], b[N];||| 7 int main() {||| 8 cin >> n;||| 9 a[n - 1] = 1;||| 10 for (int x = 2; x <= n; x++) {||| 11 cout << ""? "";||| 12 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 13 cout << x << endl;||| 14 cin >> k;||| 15 if (k == 0) {||| 16 a[n - 1] = n - x + 2;||| 17 break;||| 18 }||| 19 }||| 20 for (int i = 1; i <= n; ++i) {||| 21 if (i == a[n - 1]) continue;||| 22 cout << ""? "";||| 23 if (i < a[n - 1]) {||| 24 for (int j = 1; j < n; ++j) cout << a[n - 1] - i + 1 << "" "";||| 25 cout << 1 << endl;||| 26 } else {||| 27 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 28 cout << i - a[n - 1] + 1 << endl;||| 29 }||| 30 cin >> k;||| 31 a[k - 1] = i;||| 32 }||| 33 cout << ""! "";||| 34 for (int i = 0; i < n; ++i) cout << a[i] << "" "";||| 35 cout << endl;||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1000004;||| 4 const long long mod = 1000 * 1000 * 1000 + 7;||| 5 const long long inf = 1000000000;||| 6 long long n, m, k, z, t, ans, x, y, pat, a[N], b[N];||| 7 int main() {||| 8 cin >> n;||| 9 a[n - 1] = 1;||| 10 for (int x = 2; x <= n; x++) {||| 11 cout << ""? "";||| 12 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 13 cout << x << endl;||| 14 cin >> k;||| 15 if (k == 0) {||| 16 a[n - 1] = n - x + 2;||| 17 break;||| 18 }||| 19 }||| 20 for (int i = 1; i <= n; ++i) {||| 21 if (i == a[n - 1]) continue;||| 22 cout << ""? "";||| 23 if (i < a[n - 1]) {||| 24 for (int j = 1; j < n; ++j) cout << a[n - 1] - i << "" "";||| 25 cout << 1 << endl;||| 26 } else {||| 27 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 28 cout << i - a[n - 1] + 1 << endl;||| 29 }||| 30 cin >> k;||| 31 a[k - 1] = i;||| 32 }||| 33 cout << ""! "";||| 34 for (int i = 0; i < n; ++i) cout << a[i] << "" "";||| 35 cout << endl;||| 36 return 0;||| 37 }||| "	"24 for (int j = 1; j < n; ++j) cout << a[n - 1] - i + 1 << "" "";"
39	212	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 const int mod = 1e9 + 7;||| 5 int n;||| 6 int ans[N];||| 7 int print(int a, int b) {||| 8 printf(""? "");||| 9 for (int i = 1; i < n; i++) {||| 10 printf(""%d "", a);||| 11 }||| 12 printf(""%d\n"", b);||| 13 fflush(stdout);||| 14 int k;||| 15 scanf(""%d"", &k);||| 16 return k;||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 for (int i = 1; i < n; i++) {||| 21 int k = print(n, i);||| 22 if (k != 0) {||| 23 ans[n] = n - i + 1;||| 24 break;||| 25 }||| 26 }||| 27 if (ans[n] == 0) ans[n] = 1;||| 28 int x = n - ans[n] + 1;||| 29 for (int i = 1; i <= n; i++) {||| 30 if (i == ans[n]) continue;||| 31 int k = print(n - i + 1, x);||| 32 ans[k] = i;||| 33 }||| 34 printf(""! "");||| 35 for (int i = 1; i <= n; i++) {||| 36 printf(""%d "", ans[i]);||| 37 }||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 const int mod = 1e9 + 7;||| 5 int n;||| 6 int ans[N];||| 7 int print(int a, int b) {||| 8 printf(""? "");||| 9 for (int i = 1; i < n; i++) {||| 10 printf(""%d "", a);||| 11 }||| 12 printf(""%d\n"", b);||| 13 fflush(stdout);||| 14 int k;||| 15 scanf(""%d"", &k);||| 16 return k;||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 for (int i = 1; i < n; i++) {||| 21 int k = print(n, i);||| 22 if (k != 0) {||| 23 ans[n] = n - i + 1;||| 24 break;||| 25 }||| 26 }||| 27 if (ans[n] == 0) ans[n] = 1;||| 28 int x = n - ans[n] + 1;||| 29 for (int i = 1; i <= n; i++) {||| 30 if (i == ans[n]) continue;||| 31 int k = print(5 - i + 1, x);||| 32 ans[k] = i;||| 33 }||| 34 printf(""! "");||| 35 for (int i = 1; i <= n; i++) {||| 36 printf(""%d "", ans[i]);||| 37 }||| 38 }||| "	31 int k = print(n - i + 1, x);
39	136	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int ans[N], n, pos, last;||| 5 int main() {||| 6 ios::sync_with_stdio(0);||| 7 cin >> n;||| 8 last = n;||| 9 for (int i = 1; i < n; ++i) {||| 10 cout << ""? "";||| 11 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 12 cout << i + 1 << endl;||| 13 cout.flush();||| 14 cin >> pos;||| 15 if (pos == 0) break;||| 16 ans[pos] = i;||| 17 }||| 18 for (int i = n; i > 1; --i) {||| 19 cout << ""? "";||| 20 for (int j = 1; j < n; ++j) cout << n << "" "";||| 21 cout << i - 1 << endl;||| 22 cout.flush();||| 23 cin >> pos;||| 24 if (!pos) {||| 25 last = n - i + 1;||| 26 break;||| 27 }||| 28 ans[pos] = i - n - 1;||| 29 }||| 30 cout << ""! "";||| 31 for (int i = 1; i <= n; ++i) cout << ans[i] + last << "" "";||| 32 cout << endl;||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int ans[N], n, pos, last;||| 5 int main() {||| 6 ios::sync_with_stdio(0);||| 7 cin >> n;||| 8 last = n;||| 9 for (int i = 1; i <= n; ++i) {||| 10 cout << ""? "";||| 11 for (int j = 1; j < n; ++j) cout << 1 << "" "";||| 12 cout << i + 1 << endl;||| 13 cout.flush();||| 14 cin >> pos;||| 15 if (pos == 0) break;||| 16 ans[pos] = i;||| 17 }||| 18 for (int i = n; i > 1; --i) {||| 19 cout << ""? "";||| 20 for (int j = 1; j < n; ++j) cout << n << "" "";||| 21 cout << i - 1 << endl;||| 22 cout.flush();||| 23 cin >> pos;||| 24 if (!pos) {||| 25 last = n - i + 1;||| 26 break;||| 27 }||| 28 ans[pos] = i - n - 1;||| 29 }||| 30 cout << ""! "";||| 31 for (int i = 1; i <= n; ++i) cout << ans[i] + last << "" "";||| 32 cout << endl;||| 33 return 0;||| 34 }||| "	9 for (int i = 1; i < n; ++i) {
40	52	"1 #include <bits/stdc++.h>||| 2 namespace FastRead {||| 3 char __buff[5000];||| 4 int __lg = 0, __p = 0;||| 5 char nc() {||| 6 if (__lg == __p) {||| 7 __lg = fread(__buff, 1, 5000, stdin);||| 8 __p = 0;||| 9 if (!__lg) return EOF;||| 10 }||| 11 return __buff[__p++];||| 12 }||| 13 template <class T>||| 14 void read(T& __x) {||| 15 T __sgn = 1;||| 16 char __c;||| 17 while (!isdigit(__c = nc()))||| 18 if (__c == '-') __sgn = -1;||| 19 __x = __c - '0';||| 20 while (isdigit(__c = nc())) __x = __x * 10 + __c - '0';||| 21 __x *= __sgn;||| 22 }||| 23 }  // namespace FastRead||| 24 using namespace FastRead;||| 25 using namespace std;||| 26 const int N = 3e5 + 10;||| 27 const int M = 1e9 + 7;||| 28 const long double PI = acos(-1);||| 29 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 30 int n, q, m, x, y;||| 31 int root[N], h[N], fr[N];||| 32 vector<int> G[N], path[N];||| 33 int find(int r) { return (root[r] == r ? r : root[r] = find(root[r])); }||| 34 void unite(int x, int y) {||| 35 x = root[x];||| 36 y = root[y];||| 37 if (h[x] < h[y])||| 38 root[x] = y;||| 39 else if (h[x] > h[y])||| 40 root[y] = x;||| 41 else||| 42 root[x] = y, ++h[y];||| 43 }||| 44 bool dfs(int curr, int parent, int asked, int cnt) {||| 45 if (curr == asked) {||| 46 path[cnt].push_back(curr);||| 47 return 1;||| 48 }||| 49 for (auto i : G[curr])||| 50 if (i != parent) {||| 51 bool ok = dfs(i, curr, asked, cnt);||| 52 if (ok == 1) {||| 53 path[cnt].push_back(curr);||| 54 return 1;||| 55 }||| 56 }||| 57 return 0;||| 58 }||| 59 void Test() {||| 60 int i;||| 61 cin >> n >> m;||| 62 for (i = 1; i <= n; i++)||| 63 path[i].clear(), fr[i] = 0, G[i].clear(), root[i] = i, h[i] = 1;||| 64 for (i = 1; i <= m; i++) {||| 65 cin >> x >> y;||| 66 if (find(x) == find(y)) continue;||| 67 unite(x, y);||| 68 G[x].push_back(y);||| 69 G[y].push_back(x);||| 70 }||| 71 cin >> q;||| 72 int cnt = 0;||| 73 while (q--) {||| 74 cin >> x >> y;||| 75 ++fr[x], ++fr[y];||| 76 dfs(x, 0, y, ++cnt);||| 77 }||| 78 int add = 0;||| 79 for (i = 1; i <= n; i++) add += fr[i] & 1;||| 80 if (add) return cout << ""NO\n"" << add / 2 << '\n', void();||| 81 cout << ""YES\n"";||| 82 for (i = 1; i <= cnt; i++) {||| 83 cout << path[i].size() << '\n';||| 84 reverse(path[i].begin(), path[i].end());||| 85 for (auto j : path[i]) cout << j << ' ';||| 86 cout << '\n';||| 87 }||| 88 }||| 89 signed main() {||| 90 int q = 1;||| 91 while (q--) Test();||| 92 return 0;||| 93 }||| "	"1 #include <bits/stdc++.h>||| 2 namespace FastRead {||| 3 char __buff[5000];||| 4 int __lg = 0, __p = 0;||| 5 char nc() {||| 6 if (__lg == __p) {||| 7 __lg = fread(__buff, 1, 5000, stdin);||| 8 __p = 0;||| 9 if (!__lg) return EOF;||| 10 }||| 11 return __buff[__p++];||| 12 }||| 13 template <class T>||| 14 void read(T& __x) {||| 15 T __sgn = 1;||| 16 char __c;||| 17 while (!isdigit(__c = nc()))||| 18 if (__c == '-') __sgn = -1;||| 19 __x = __c - '0';||| 20 while (isdigit(__c = nc())) __x = __x * 10 + __c - '0';||| 21 __x *= __sgn;||| 22 }||| 23 }  // namespace FastRead||| 24 using namespace FastRead;||| 25 using namespace std;||| 26 const int N = 3e5 + 10;||| 27 const int M = 1e9 + 7;||| 28 const long double PI = acos(-1);||| 29 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 30 int n, q, m, x, y;||| 31 int root[N], h[N], fr[N];||| 32 vector<int> G[N], path[N];||| 33 int find(int r) { return (root[r] == r ? r : root[r] = find(root[r])); }||| 34 void unite(int x, int y) {||| 35 x = root[x];||| 36 y = root[y];||| 37 if (h[x] < h[y])||| 38 root[x] = y;||| 39 else if (h[x] > h[y])||| 40 root[y] = x;||| 41 else||| 42 root[x] = y, ++h[y];||| 43 }||| 44 bool dfs(int curr, int parent, int asked, int cnt) {||| 45 if (curr == asked) {||| 46 path[cnt].push_back(curr);||| 47 return 1;||| 48 }||| 49 for (auto i : G[curr])||| 50 if (i != parent) {||| 51 bool ok = dfs(i, curr, asked, cnt);||| 52 if (ok == 1) {||| 53 path[cnt].push_back(curr);||| 54 return 1;||| 55 }||| 56 }||| 57 return 0;||| 58 }||| 59 void Test() {||| 60 int i;||| 61 cin >> n >> m;||| 62 for (i = 1; i <= n; i++)||| 63 path[i].clear(), fr[i] = 0, G[i].clear(), root[i] = i, h[i] = 1;||| 64 for (i = 1; i <= m; i++) {||| 65 cin >> x >> y;||| 66 if (find(x) == find(y)) continue;||| 67 unite(x, y);||| 68 G[x].push_back(y);||| 69 G[y].push_back(x);||| 70 }||| 71 cin >> q;||| 72 int cnt = 0;||| 73 while (q--) {||| 74 cin >> x >> y;||| 75 ++fr[x], ++fr[y];||| 76 dfs(x, 0, y, ++cnt);||| 77 }||| 78 int add = 0;||| 79 for (i = 1; i <= n; i++) add += fr[i] & 1;||| 80 if (add) return cout << ""NO\n"" << add << '\n', void();||| 81 cout << ""YES\n"";||| 82 for (i = 1; i <= cnt; i++) {||| 83 cout << path[i].size() << '\n';||| 84 reverse(path[i].begin(), path[i].end());||| 85 for (auto j : path[i]) cout << j << ' ';||| 86 cout << '\n';||| 87 }||| 88 }||| 89 signed main() {||| 90 int q = 1;||| 91 while (q--) Test();||| 92 return 0;||| 93 }||| "	"80 if (add) return cout << ""NO\n"" << add / 2 << '\n', void();"
40	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(2)||| 4 #pragma GCC optimize(3, ""Ofast"", ""inline"")||| 5 template <typename T>||| 6 void inline read(T &x) {||| 7 int f = 1;||| 8 x = 0;||| 9 char s = getchar();||| 10 while (s < '0' || s > '9') {||| 11 if (s == '-') f = -1;||| 12 s = getchar();||| 13 }||| 14 while (s <= '9' && s >= '0') x = x * 10 + (s ^ 48), s = getchar();||| 15 x *= f;||| 16 }||| 17 template <typename T>||| 18 void inline put(T x) {||| 19 if (x < 0) putchar('-'), x = -x;||| 20 if (x > 9) put(x / 10);||| 21 putchar(x % 10 + '0');||| 22 return;||| 23 }||| 24 const int maxn = 1e6 + 5;||| 25 int n, m, q;||| 26 int vis[maxn], sum, qx[maxn], qy[maxn];||| 27 int e[maxn], nex[maxn], h[maxn], id;||| 28 int fa[maxn], d[maxn], st[maxn];||| 29 void add(int x, int y) {||| 30 e[++id] = y;||| 31 nex[id] = h[x];||| 32 h[x] = id;||| 33 }||| 34 void dfs(int x) {||| 35 st[x] = 1;||| 36 for (int i = h[x]; i; i = nex[i]) {||| 37 int j = e[i];||| 38 if (st[j]) continue;||| 39 d[j] = d[x] + 1;||| 40 fa[j] = x;||| 41 dfs(j);||| 42 }||| 43 }||| 44 int main() {||| 45 ios::sync_with_stdio(false);||| 46 cin.tie(0);||| 47 cout.tie(0);||| 48 cin >> n >> m;||| 49 for (int i = 1; i <= m; i++) {||| 50 int x, y;||| 51 cin >> x >> y;||| 52 add(x, y);||| 53 add(y, x);||| 54 }||| 55 dfs(1);||| 56 cin >> q;||| 57 for (int i = 1; i <= q; i++) {||| 58 int x, y;||| 59 cin >> x >> y;||| 60 qx[i] = x;||| 61 qy[i] = y;||| 62 vis[x]++;||| 63 vis[y]++;||| 64 if (vis[x] % 2)||| 65 sum++;||| 66 else||| 67 sum--;||| 68 if (vis[y] % 2)||| 69 sum++;||| 70 else||| 71 sum--;||| 72 }||| 73 if (sum) {||| 74 cout << ""NO"" << endl;||| 75 cout << sum / 2 << endl;||| 76 return 0;||| 77 }||| 78 cout << ""YES"" << endl;||| 79 for (int i = 1; i <= q; i++) {||| 80 int x = qx[i], y = qy[i];||| 81 vector<int> ans1, ans2;||| 82 while (x != y) {||| 83 if (d[x] > d[y])||| 84 ans1.push_back(x), x = fa[x];||| 85 else||| 86 ans2.push_back(y), y = fa[y];||| 87 }||| 88 ans1.push_back(x);||| 89 cout << ans1.size() + ans2.size() << endl;||| 90 for (int j = 0; j < ans1.size(); j++) cout << ans1[j] << "" "";||| 91 for (int j = ans2.size() - 1; j >= 0; j--) cout << ans2[j] << "" "";||| 92 cout << endl;||| 93 }||| 94 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(2)||| 4 #pragma GCC optimize(3, ""Ofast"", ""inline"")||| 5 template <typename T>||| 6 void inline read(T &x) {||| 7 int f = 1;||| 8 x = 0;||| 9 char s = getchar();||| 10 while (s < '0' || s > '9') {||| 11 if (s == '-') f = -1;||| 12 s = getchar();||| 13 }||| 14 while (s <= '9' && s >= '0') x = x * 10 + (s ^ 48), s = getchar();||| 15 x *= f;||| 16 }||| 17 template <typename T>||| 18 void inline put(T x) {||| 19 if (x < 0) putchar('-'), x = -x;||| 20 if (x > 9) put(x / 10);||| 21 putchar(x % 10 + '0');||| 22 return;||| 23 }||| 24 const int maxn = 1e5 + 5;||| 25 int n, m, q;||| 26 int vis[maxn], sum, qx[maxn], qy[maxn];||| 27 int e[maxn], nex[maxn], h[maxn], id;||| 28 int fa[maxn], d[maxn], st[maxn];||| 29 void add(int x, int y) {||| 30 e[++id] = y;||| 31 nex[id] = h[x];||| 32 h[x] = id;||| 33 }||| 34 void dfs(int x) {||| 35 st[x] = 1;||| 36 for (int i = h[x]; i; i = nex[i]) {||| 37 int j = e[i];||| 38 if (st[j]) continue;||| 39 d[j] = d[x] + 1;||| 40 fa[j] = x;||| 41 dfs(j);||| 42 }||| 43 }||| 44 int main() {||| 45 ios::sync_with_stdio(false);||| 46 cin.tie(0);||| 47 cout.tie(0);||| 48 cin >> n >> m;||| 49 for (int i = 1; i <= m; i++) {||| 50 int x, y;||| 51 cin >> x >> y;||| 52 add(x, y);||| 53 add(y, x);||| 54 }||| 55 dfs(1);||| 56 cin >> q;||| 57 for (int i = 1; i <= q; i++) {||| 58 int x, y;||| 59 cin >> x >> y;||| 60 qx[i] = x;||| 61 qy[i] = y;||| 62 vis[x]++;||| 63 vis[y]++;||| 64 if (vis[x] % 2)||| 65 sum++;||| 66 else||| 67 sum--;||| 68 if (vis[y] % 2)||| 69 sum++;||| 70 else||| 71 sum--;||| 72 }||| 73 if (sum) {||| 74 cout << ""NO"" << endl;||| 75 cout << sum << endl;||| 76 return 0;||| 77 }||| 78 cout << ""YES"" << endl;||| 79 for (int i = 1; i <= q; i++) {||| 80 int x = qx[i], y = qy[i];||| 81 vector<int> ans1, ans2;||| 82 while (x != y) {||| 83 if (d[x] > d[y])||| 84 ans1.push_back(x), x = fa[x];||| 85 else||| 86 ans2.push_back(y), y = fa[y];||| 87 }||| 88 ans1.push_back(x);||| 89 cout << ans1.size() + ans2.size() << endl;||| 90 for (int j = 0; j < ans1.size(); j++) cout << ans1[j] << "" "";||| 91 for (int j = ans2.size() - 1; j >= 0; j--) cout << ans2[j] << "" "";||| 92 cout << endl;||| 93 }||| 94 }||| "	24 const int maxn = 1e6 + 5;
40	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3e5 + 7;||| 4 int n, q, m, k, tot;||| 5 struct _ {||| 6 int u, v;||| 7 } e[maxn];||| 8 struct que {||| 9 int a, b;||| 10 } qq[maxn];||| 11 vector<int> adj[maxn];||| 12 int fa[maxn], deg[maxn], dep[maxn];||| 13 int get(int x) { return fa[x] == x ? x : fa[x] = get(fa[x]); }||| 14 bool merge(int x, int y) {||| 15 int fx = get(x), fy = get(y);||| 16 if (fx ^ fy) {||| 17 fa[fx] = fy;||| 18 adj[x].push_back(y);||| 19 adj[y].push_back(x);||| 20 return true;||| 21 }||| 22 return false;||| 23 }||| 24 void dfs(int u) {||| 25 for (int i = 0; i < adj[u].size(); i++) {||| 26 int v = adj[u][i];||| 27 if (!dep[v]) {||| 28 fa[v] = u;||| 29 dep[v] = dep[u] + 1;||| 30 dfs(v);||| 31 }||| 32 }||| 33 }||| 34 vector<int> ansl, ansr;||| 35 int main() {||| 36 scanf(""%d%d"", &n, &m);||| 37 for (int i = 1; i <= m; i++) {||| 38 scanf(""%d%d"", &e[i].u, &e[i].v);||| 39 }||| 40 scanf(""%d"", &q);||| 41 for (int i = 1; i <= q; i++) {||| 42 scanf(""%d%d"", &qq[i].a, &qq[i].b);||| 43 deg[qq[i].a]++;||| 44 deg[qq[i].b]++;||| 45 }||| 46 for (int i = 1; i <= n; i++) {||| 47 k += (deg[i] & 1);||| 48 }||| 49 if (k) {||| 50 printf(""NO\n%d\n"", k / 2);||| 51 return 0;||| 52 }||| 53 puts(""YES"");||| 54 for (int i = 1; i <= n; i++) fa[i] = i;||| 55 int rst = n;||| 56 for (int i = 1; i <= m; i++) {||| 57 rst -= merge(e[i].u, e[i].v);||| 58 if (rst == 1) break;||| 59 }||| 60 fa[1] = dep[1] = 1;||| 61 dfs(1);||| 62 for (int i = 1; i <= q; i++) {||| 63 int u = qq[i].a, v = qq[i].b;||| 64 ansl.clear();||| 65 ansr.clear();||| 66 while (u != v) {||| 67 if (dep[u] < dep[v]) {||| 68 ansr.push_back(v);||| 69 v = fa[v];||| 70 } else {||| 71 ansl.push_back(u);||| 72 u = fa[u];||| 73 }||| 74 }||| 75 printf(""%d\n"", ansl.size() + ansr.size() + 1);||| 76 for (int j = 0; j < ansl.size(); j++) {||| 77 printf(""%d "", ansl[j]);||| 78 }||| 79 printf(""%d "", u);||| 80 for (int j = ansr.size() - 1; j >= 0; j--) {||| 81 printf(""%d "", ansr[j]);||| 82 }||| 83 printf(""\n"");||| 84 }||| 85 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3e5 + 7;||| 4 int n, q, m, k, tot;||| 5 struct _ {||| 6 int u, v;||| 7 } e[maxn];||| 8 struct que {||| 9 int a, b;||| 10 } qq[maxn];||| 11 vector<int> adj[maxn];||| 12 int fa[maxn], deg[maxn], dep[maxn];||| 13 int get(int x) { return fa[x] == x ? x : fa[x] = get(fa[x]); }||| 14 bool merge(int x, int y) {||| 15 int fx = get(x), fy = get(y);||| 16 if (fx ^ fy) {||| 17 fa[fx] = fy;||| 18 adj[x].push_back(y);||| 19 adj[y].push_back(x);||| 20 return true;||| 21 }||| 22 return false;||| 23 }||| 24 void dfs(int u) {||| 25 for (int i = 0; i < adj[u].size(); i++) {||| 26 int v = adj[u][i];||| 27 if (!dep[v]) {||| 28 fa[v] = u;||| 29 dep[v] = dep[u] + 1;||| 30 dfs(v);||| 31 }||| 32 }||| 33 }||| 34 vector<int> ansl, ansr;||| 35 int main() {||| 36 scanf(""%d%d"", &n, &m);||| 37 for (int i = 1; i <= m; i++) {||| 38 scanf(""%d%d"", &e[i].u, &e[i].v);||| 39 }||| 40 scanf(""%d"", &q);||| 41 for (int i = 1; i <= q; i++) {||| 42 scanf(""%d%d"", &qq[i].a, &qq[i].b);||| 43 deg[qq[i].a]++;||| 44 deg[qq[i].b]++;||| 45 }||| 46 for (int i = 1; i <= n; i++) {||| 47 k += (deg[i] & 1);||| 48 }||| 49 if (k) {||| 50 printf(""NO\n%d\n"", k / 2);||| 51 return 0;||| 52 }||| 53 puts(""YES"");||| 54 for (int i = 1; i <= n; i++) fa[i] = i;||| 55 int rst = n;||| 56 for (int i = 1; i <= m; i++) {||| 57 rst -= merge(e[i].u, e[i].v);||| 58 if (rst == 1) break;||| 59 }||| 60 fa[1] = dep[1] = 1;||| 61 dfs(1);||| 62 for (int i = 1; i <= q; i++) {||| 63 int u = qq[i].a, v = qq[i].b;||| 64 ansl.clear();||| 65 ansr.clear();||| 66 while (u != v) {||| 67 if (dep[u] < dep[v]) {||| 68 ansr.push_back(v);||| 69 v = fa[v];||| 70 } else {||| 71 ansr.push_back(u);||| 72 u = fa[u];||| 73 }||| 74 }||| 75 printf(""%d\n"", ansl.size() + ansr.size() + 1);||| 76 for (int j = 0; j < ansl.size(); j++) {||| 77 printf(""%d "", ansl[j]);||| 78 }||| 79 printf(""%d "", u);||| 80 for (int j = ansr.size() - 1; j >= 0; j--) {||| 81 printf(""%d "", ansr[j]);||| 82 }||| 83 printf(""\n"");||| 84 }||| 85 }||| "	71 ansl.push_back(u);
40	77	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int inf = 1e9;||| 5 const double pi = acos(-1);||| 6 vector<int> eg[300005];||| 7 int idx[300005], vis[300005], a[300005], b[300005], c[300005];||| 8 vector<int> ans[300005];||| 9 vector<int> tmp;||| 10 int dfsid = 0;||| 11 struct edge {||| 12 int to, qid;||| 13 };||| 14 int fa[300005];||| 15 int ff(int x) { return fa[x] = (fa[x] == x ? x : ff(fa[x])); }||| 16 int merge(int u, int v) {||| 17 int fu = ff(u), fv = ff(v);||| 18 if (fu == fv)||| 19 return 0;||| 20 else {||| 21 fa[fu] = fa[fv];||| 22 return 1;||| 23 }||| 24 }||| 25 vector<edge> qeg[300005];||| 26 int dfs_rt(int x, int to, int id, int qr) {||| 27 vis[x] = id;||| 28 if (x == to) {||| 29 ans[qr].push_back(x);||| 30 return 1;||| 31 }||| 32 for (int i : eg[x]) {||| 33 if (vis[i] != id) {||| 34 if (dfs_rt(i, to, id, qr)) {||| 35 ans[qr].push_back(x);||| 36 return 1;||| 37 }||| 38 }||| 39 }||| 40 return 0;||| 41 }||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 cin.tie(0);||| 45 int n, m;||| 46 cin >> n >> m;||| 47 for (int i = 1; i <= n; i++) {||| 48 idx[i] = vis[i] = 0;||| 49 fa[i] = i;||| 50 }||| 51 for (int i = 1; i <= m; i++) {||| 52 int u, v;||| 53 cin >> u >> v;||| 54 if (merge(u, v)) {||| 55 eg[u].push_back(v);||| 56 eg[v].push_back(u);||| 57 }||| 58 }||| 59 int q;||| 60 cin >> q;||| 61 for (int o = 1; o <= q; o++) {||| 62 cin >> a[o] >> b[o];||| 63 c[a[o]]++;||| 64 c[b[o]]++;||| 65 qeg[a[o]].push_back({b[o], o});||| 66 qeg[b[o]].push_back({a[o], o});||| 67 }||| 68 int cnt_odd = 0;||| 69 for (int i = 1; i <= n; i++) {||| 70 if (c[i] % 2) cnt_odd++;||| 71 }||| 72 if (cnt_odd)||| 73 cout << ""NO\n"" << cnt_odd / 2 << '\n';||| 74 else {||| 75 for (int o = 1; o <= q; o++) {||| 76 dfs_rt(a[o], b[o], ++dfsid, o);||| 77 }||| 78 cout << ""YES\n"";||| 79 for (int i = 1; i <= q; i++) {||| 80 cout << ans[i].size() << '\n';||| 81 reverse(ans[i].begin(), ans[i].end());||| 82 for (int j : ans[i]) cout << j << ' ';||| 83 cout << '\n';||| 84 }||| 85 }||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int inf = 1e9;||| 5 const double pi = acos(-1);||| 6 vector<int> eg[300005];||| 7 int idx[300005], vis[300005], a[300005], b[300005], c[300005];||| 8 vector<int> ans[300005];||| 9 vector<int> tmp;||| 10 int dfsid = 0;||| 11 struct edge {||| 12 int to, qid;||| 13 };||| 14 int fa[300005];||| 15 int ff(int x) { return fa[x] = (fa[x] == x ? x : ff(fa[x])); }||| 16 int merge(int u, int v) {||| 17 int fu = ff(u), fv = ff(v);||| 18 if (fu == fv)||| 19 return 0;||| 20 else {||| 21 fa[fu] = fa[fv];||| 22 return 1;||| 23 }||| 24 }||| 25 vector<edge> qeg[300005];||| 26 int dfs_rt(int x, int to, int id, int qr) {||| 27 vis[x] = id;||| 28 if (x == to) {||| 29 ans[qr].push_back(x);||| 30 return 1;||| 31 }||| 32 for (int i : eg[x]) {||| 33 if (vis[i] != id) {||| 34 if (dfs_rt(i, to, id, qr)) {||| 35 ans[qr].push_back(x);||| 36 return 1;||| 37 }||| 38 }||| 39 }||| 40 return 0;||| 41 }||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 cin.tie(0);||| 45 int n, m;||| 46 cin >> n >> m;||| 47 for (int i = 1; i <= n; i++) {||| 48 idx[i] = vis[i] = 0;||| 49 fa[i] = i;||| 50 }||| 51 for (int i = 1; i <= m; i++) {||| 52 int u, v;||| 53 cin >> u >> v;||| 54 if (merge(u, v)) {||| 55 eg[u].push_back(v);||| 56 eg[v].push_back(u);||| 57 }||| 58 }||| 59 int q;||| 60 cin >> q;||| 61 for (int o = 1; o <= q; o++) {||| 62 cin >> a[o] >> b[o];||| 63 c[a[o]]++;||| 64 c[b[o]]++;||| 65 qeg[a[o]].push_back({b[o], o});||| 66 qeg[b[o]].push_back({a[o], o});||| 67 }||| 68 int cnt_odd = 0;||| 69 for (int i = 1; i <= n; i++) {||| 70 if (c[i] % 2) cnt_odd++;||| 71 }||| 72 if (cnt_odd)||| 73 cout << ""NO\n"" << cnt_odd / 2 << '\n';||| 74 else {||| 75 for (int o = 1; o <= n; o++) {||| 76 dfs_rt(a[o], b[o], ++dfsid, o);||| 77 }||| 78 cout << ""YES\n"";||| 79 for (int i = 1; i <= q; i++) {||| 80 cout << ans[i].size() << '\n';||| 81 reverse(ans[i].begin(), ans[i].end());||| 82 for (int j : ans[i]) cout << j << ' ';||| 83 cout << '\n';||| 84 }||| 85 }||| 86 }||| "	75 for (int o = 1; o <= q; o++) {
40	98	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 vector<int> graf[300005];||| 5 int cnt[300005];||| 6 pair<int, int> kveri[300005];||| 7 bool vis[300005];||| 8 int cale[300005];||| 9 int disc[300005];||| 10 int out[300005];||| 11 int t;||| 12 void dfs(int u) {||| 13 vis[u] = true;||| 14 disc[u] = t;||| 15 for (int c : graf[u]) {||| 16 if (vis[c]) continue;||| 17 t++;||| 18 cale[c] = u;||| 19 dfs(c);||| 20 }||| 21 out[u] = t;||| 22 }||| 23 bool anc(int x, int y) { return disc[x] <= disc[y] && out[y] <= out[x]; }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 cin >> n >> m;||| 28 for (int(i) = (1); (i) <= (m); ++(i)) {||| 29 int u, v;||| 30 cin >> u >> v;||| 31 graf[u].push_back(v);||| 32 graf[v].push_back(u);||| 33 }||| 34 dfs(1);||| 35 cin >> q;||| 36 for (int(i) = (1); (i) <= (q); ++(i)) {||| 37 cin >> kveri[i].first >> kveri[i].second;||| 38 cnt[kveri[i].first]++;||| 39 cnt[kveri[i].second]++;||| 40 }||| 41 int s = 0;||| 42 for (int(i) = (1); (i) <= (n); ++(i)) s += (cnt[i] & 1);||| 43 if (s) {||| 44 cout << ""NO\n"" << s / 2;||| 45 return 0;||| 46 }||| 47 cout << ""YES\n"";||| 48 for (int(i) = (1); (i) <= (q); ++(i)) {||| 49 int a = kveri[i].first;||| 50 int b = kveri[i].second;||| 51 vector<int> r;||| 52 while (!anc(a, b)) {||| 53 r.push_back(a);||| 54 a = cale[a];||| 55 }||| 56 r.push_back(a);||| 57 vector<int> l;||| 58 while (b != a) {||| 59 l.push_back(b);||| 60 b = cale[b];||| 61 }||| 62 reverse(l.begin(), l.end());||| 63 vector<int> ans;||| 64 for (int c : r) ans.push_back(c);||| 65 for (int c : l) ans.push_back(c);||| 66 cout << ans.size() << ""\n"";||| 67 for (int c : ans) cout << c << "" "";||| 68 cout << ""\n"";||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 vector<int> graf[300005];||| 5 int cnt[300005];||| 6 pair<int, int> kveri[300005];||| 7 bool vis[300005];||| 8 int cale[300005];||| 9 int disc[300005];||| 10 int out[300005];||| 11 int t;||| 12 void dfs(int u) {||| 13 vis[u] = true;||| 14 disc[u] = t;||| 15 for (int c : graf[u]) {||| 16 if (vis[c]) continue;||| 17 t++;||| 18 cale[c] = u;||| 19 dfs(c);||| 20 }||| 21 out[u] = t;||| 22 }||| 23 bool anc(int x, int y) { return disc[x] <= disc[y] && out[y] <= out[x]; }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 cin >> n >> m;||| 28 for (int(i) = (1); (i) <= (m); ++(i)) {||| 29 int u, v;||| 30 cin >> u >> v;||| 31 graf[u].push_back(v);||| 32 graf[v].push_back(u);||| 33 }||| 34 dfs(1);||| 35 cin >> q;||| 36 for (int(i) = (1); (i) <= (q); ++(i)) {||| 37 cin >> kveri[i].first >> kveri[i].second;||| 38 cnt[kveri[i].first]++;||| 39 cnt[kveri[i].second]++;||| 40 }||| 41 int s = 0;||| 42 for (int(i) = (1); (i) <= (n); ++(i)) s += (cnt[i] & 1);||| 43 if (s) {||| 44 cout << ""NO\n"" << s;||| 45 return 0;||| 46 }||| 47 cout << ""YES\n"";||| 48 for (int(i) = (1); (i) <= (q); ++(i)) {||| 49 int a = kveri[i].first;||| 50 int b = kveri[i].second;||| 51 vector<int> r;||| 52 while (!anc(a, b)) {||| 53 r.push_back(a);||| 54 a = cale[a];||| 55 }||| 56 r.push_back(a);||| 57 vector<int> l;||| 58 while (b != a) {||| 59 l.push_back(b);||| 60 b = cale[b];||| 61 }||| 62 reverse(l.begin(), l.end());||| 63 vector<int> ans;||| 64 for (int c : r) ans.push_back(c);||| 65 for (int c : l) ans.push_back(c);||| 66 cout << ans.size() << ""\n"";||| 67 for (int c : ans) cout << c << "" "";||| 68 cout << ""\n"";||| 69 }||| 70 return 0;||| 71 }||| "	"44 cout << ""NO\n"" << s / 2;"
40	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10;||| 4 int n, m, qq;||| 5 vector<int> to[N], res[N];||| 6 int sum[N], up[N], dep[N];||| 7 void dfs(int u, int fa) {||| 8 dep[u] = dep[fa] + 1;||| 9 up[u] = fa;||| 10 for (int v : to[u])||| 11 if (v != fa && !dep[v]) dfs(v, u);||| 12 }||| 13 int ss = 0;||| 14 void calc(int u, int fa) {||| 15 if (sum[u] & 1) ++ss;||| 16 for (int v : to[u])||| 17 if (v != fa && dep[v] == dep[u] + 1) calc(v, u);||| 18 }||| 19 void solve() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= m; ++i) {||| 22 int u, v;||| 23 cin >> u >> v;||| 24 to[u].push_back(v);||| 25 to[v].push_back(u);||| 26 }||| 27 dfs(1, 1);||| 28 cin >> qq;||| 29 for (int i = 1; i <= qq; ++i) {||| 30 int u, v;||| 31 cin >> u >> v;||| 32 vector<int> tmp;||| 33 while (dep[v] > dep[u]) {||| 34 tmp.push_back(v);||| 35 v = up[v];||| 36 }||| 37 while (dep[u] > dep[v]) {||| 38 res[i].push_back(u);||| 39 u = up[u];||| 40 }||| 41 while (u != v) {||| 42 res[i].push_back(u);||| 43 tmp.push_back(v);||| 44 u = up[u];||| 45 v = up[v];||| 46 }||| 47 res[i].push_back(u);||| 48 for (int j = tmp.size() - 1; j >= 0; --j) res[i].push_back(tmp[j]);||| 49 for (int j = 0; j < res[i].size(); ++j) {||| 50 if (j != 0 && j != res[i].size() - 1) ++sum[res[i][j]];||| 51 ++sum[res[i][j]];||| 52 }||| 53 }||| 54 calc(1, 1);||| 55 if (ss)||| 56 cout << ""NO\n"" << ss / 2 << '\n';||| 57 else {||| 58 cout << ""YES\n"";||| 59 for (int i = 1; i <= qq; ++i) {||| 60 cout << res[i].size() << '\n';||| 61 for (int j : res[i]) cout << j << ' ';||| 62 cout << '\n';||| 63 }||| 64 }||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(false);||| 68 cin.tie(0);||| 69 cout.tie(0);||| 70 solve();||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10;||| 4 int n, m, qq;||| 5 vector<int> to[N], res[N];||| 6 int sum[N], up[N], dep[N];||| 7 void dfs(int u, int fa) {||| 8 dep[u] = dep[fa] + 1;||| 9 up[u] = fa;||| 10 for (int v : to[u])||| 11 if (v != fa && !dep[v]) dfs(v, u);||| 12 }||| 13 int ss = 0;||| 14 void calc(int u, int fa) {||| 15 if (sum[u] & 1) ++ss;||| 16 for (int v : to[u])||| 17 if (v != fa && dep[v] == dep[u] + 1) calc(v, u);||| 18 }||| 19 void solve() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= n; ++i) {||| 22 int u, v;||| 23 cin >> u >> v;||| 24 to[u].push_back(v);||| 25 to[v].push_back(u);||| 26 }||| 27 dfs(1, 1);||| 28 cin >> qq;||| 29 for (int i = 1; i <= qq; ++i) {||| 30 int u, v;||| 31 cin >> u >> v;||| 32 vector<int> tmp;||| 33 while (dep[v] > dep[u]) {||| 34 tmp.push_back(v);||| 35 v = up[v];||| 36 }||| 37 while (dep[u] > dep[v]) {||| 38 res[i].push_back(u);||| 39 u = up[u];||| 40 }||| 41 while (u != v) {||| 42 res[i].push_back(u);||| 43 tmp.push_back(v);||| 44 u = up[u];||| 45 v = up[v];||| 46 }||| 47 res[i].push_back(u);||| 48 for (int j = tmp.size() - 1; j >= 0; --j) res[i].push_back(tmp[j]);||| 49 for (int j = 0; j < res[i].size(); ++j) {||| 50 if (j != 0 && j != res[i].size() - 1) ++sum[res[i][j]];||| 51 ++sum[res[i][j]];||| 52 }||| 53 }||| 54 calc(1, 1);||| 55 if (ss)||| 56 cout << ""NO\n"" << ss / 2 << '\n';||| 57 else {||| 58 cout << ""YES\n"";||| 59 for (int i = 1; i <= qq; ++i) {||| 60 cout << res[i].size() << '\n';||| 61 for (int j : res[i]) cout << j << ' ';||| 62 cout << '\n';||| 63 }||| 64 }||| 65 }||| 66 signed main() {||| 67 ios::sync_with_stdio(false);||| 68 cin.tie(0);||| 69 cout.tie(0);||| 70 solve();||| 71 return 0;||| 72 }||| "	21 for (int i = 1; i <= m; ++i) {
40	56	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 mt19937 eng(chrono::steady_clock::now().time_since_epoch().count());||| 8 const int N = 3e5 + 4;||| 9 int n, m, cnt[N];||| 10 vector<int> g[N], tree[N];||| 11 void read() {||| 12 cin >> n >> m;||| 13 for (int i = 0; i < m; ++i) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 g[u].push_back(v);||| 17 g[v].push_back(u);||| 18 }||| 19 }||| 20 bool used[N];||| 21 int p[N];||| 22 void precalc(int u = 1) {||| 23 used[u] = true;||| 24 for (int to : g[u])||| 25 if (!used[to]) {||| 26 tree[u].push_back(to);||| 27 tree[to].push_back(u);||| 28 p[to] = u;||| 29 precalc(to);||| 30 }||| 31 }||| 32 void calc(int u) {||| 33 while (u) {||| 34 cnt[u] ^= 1;||| 35 u = p[u];||| 36 }||| 37 }||| 38 vector<pii> que;||| 39 vector<int> way;||| 40 void dfs(int u, int v, int par = -1) {||| 41 way.push_back(u);||| 42 if (u == v) {||| 43 cout << (int)((way).size()) << ""\n"";||| 44 for (int x : way) cout << x << "" "";||| 45 cout << ""\n"";||| 46 way.pop_back();||| 47 return;||| 48 }||| 49 for (int to : tree[u])||| 50 if (to != par) {||| 51 dfs(to, v, u);||| 52 }||| 53 way.pop_back();||| 54 }||| 55 int endsCnt(int u) {||| 56 int cur = cnt[u];||| 57 for (int to : tree[u])||| 58 if (to != p[u]) {||| 59 cur += cnt[to];||| 60 }||| 61 return cur & 1;||| 62 }||| 63 void solve() {||| 64 read();||| 65 precalc();||| 66 int q;||| 67 cin >> q;||| 68 while (q--) {||| 69 int a, b;||| 70 cin >> a >> b;||| 71 que.emplace_back(a, b);||| 72 calc(a);||| 73 calc(b);||| 74 }||| 75 int ans = 0;||| 76 for (int i = 1; i <= n; ++i) ans += cnt[i];||| 77 if (ans != 0) {||| 78 ans = 0;||| 79 for (int u = 1; u <= n; ++u) {||| 80 ans += endsCnt(u);||| 81 }||| 82 cout << ""NO\n"" << ans / 2;||| 83 return;||| 84 }||| 85 cout << ""YES\n"";||| 86 for (pii qq : que) {||| 87 dfs(qq.first, qq.second);||| 88 }||| 89 }||| 90 int main() {||| 91 ios::sync_with_stdio(0);||| 92 cout.tie(0), cin.tie(0);||| 93 int z = 1;||| 94 while (z--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 mt19937 eng(chrono::steady_clock::now().time_since_epoch().count());||| 8 const int N = 3e5 + 4;||| 9 int n, m, cnt[N];||| 10 vector<int> g[N], tree[N];||| 11 void read() {||| 12 cin >> n >> m;||| 13 for (int i = 0; i < m; ++i) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 g[u].push_back(v);||| 17 g[v].push_back(u);||| 18 }||| 19 }||| 20 bool used[N];||| 21 int p[N];||| 22 void precalc(int u = 1) {||| 23 used[u] = true;||| 24 for (int to : g[u])||| 25 if (!used[to]) {||| 26 tree[u].push_back(to);||| 27 tree[to].push_back(u);||| 28 p[to] = u;||| 29 precalc(to);||| 30 }||| 31 }||| 32 void calc(int u) {||| 33 while (u) {||| 34 cnt[u] ^= 1;||| 35 u = p[u];||| 36 }||| 37 }||| 38 vector<pii> que;||| 39 vector<int> way;||| 40 void dfs(int u, int v, int par = -1) {||| 41 way.push_back(u);||| 42 if (u == v) {||| 43 cout << (int)((way).size()) << ""\n"";||| 44 for (int x : way) cout << x << "" "";||| 45 cout << ""\n"";||| 46 way.pop_back();||| 47 return;||| 48 }||| 49 for (int to : tree[u])||| 50 if (to != par) {||| 51 dfs(to, v, u);||| 52 }||| 53 way.pop_back();||| 54 }||| 55 int endsCnt(int u) {||| 56 int cur = cnt[u];||| 57 for (int to : tree[u])||| 58 if (to != p[u]) {||| 59 cur += cnt[to];||| 60 }||| 61 return cur == 1;||| 62 }||| 63 void solve() {||| 64 read();||| 65 precalc();||| 66 int q;||| 67 cin >> q;||| 68 while (q--) {||| 69 int a, b;||| 70 cin >> a >> b;||| 71 que.emplace_back(a, b);||| 72 calc(a);||| 73 calc(b);||| 74 }||| 75 int ans = 0;||| 76 for (int i = 1; i <= n; ++i) ans += cnt[i];||| 77 if (ans != 0) {||| 78 ans = 0;||| 79 for (int u = 1; u <= n; ++u) {||| 80 ans += endsCnt(u);||| 81 }||| 82 cout << ""NO\n"" << ans / 2;||| 83 return;||| 84 }||| 85 cout << ""YES\n"";||| 86 for (pii qq : que) {||| 87 dfs(qq.first, qq.second);||| 88 }||| 89 }||| 90 int main() {||| 91 ios::sync_with_stdio(0);||| 92 cout.tie(0), cin.tie(0);||| 93 int z = 1;||| 94 while (z--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	61 return cur & 1;
41	13	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg < n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg <= k) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	22 while (gg < n) gg = gg * k, ++ans;
41	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg < n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, tt[100005][14], i, ans, j, gg;||| 4 void cons(int l, int r, int x, int dep) {||| 5 if (l == r) {||| 6 return;||| 7 }||| 8 int tmp = (r - l + 1) / k, cc = 0;||| 9 for (int i = l; i <= r; i += tmp) {||| 10 ++cc;||| 11 if (x < i + tmp) {||| 12 tt[x][dep] = cc;||| 13 cons(i, i + tmp - 1, x, dep + 1);||| 14 return;||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin >> n >> k;||| 21 gg = 1;||| 22 while (gg <= n) gg = gg * k, ++ans;||| 23 for (i = 1; i <= n; ++i) {||| 24 cons(1, gg, i, 1);||| 25 }||| 26 cout << ans << ""\n"";||| 27 for (i = 1; i <= n; ++i) {||| 28 for (j = i + 1; j <= n; ++j) {||| 29 for (k = 1;; ++k) {||| 30 if (tt[i][k] != tt[j][k]) {||| 31 cout << k << "" "";||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 }||| "	22 while (gg < n) gg = gg * k, ++ans;
41	67	1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 bool umin(T &a, const T &b) {||| 4 return (a > b ? a = b, 1 : 0);||| 5 }||| 6 template <typename T>||| 7 bool umax(T &a, const T &b) {||| 8 return (a < b ? a = b, 1 : 0);||| 9 }||| 10 using namespace std;||| 11 const int N = 1001;||| 12 int n, k;||| 13 int colors[N][N];||| 14 int diff = 0;||| 15 void slv(vector<vector<int> > sts) {||| 16 if ((int)(sts).size() == 1) return;||| 17 int i = 0;||| 18 diff++;||| 19 vector<vector<int> > nw;||| 20 while (i < (int)(sts).size()) {||| 21 vector<int> current;||| 22 int l = i, r = min((int)(sts).size(), i + k) - 1;||| 23 for (int x = l; x <= r; ++x) {||| 24 for (int y = x + 1; y <= r; ++y) {||| 25 for (auto &a : sts[x]) {||| 26 for (auto &b : sts[y]) {||| 27 colors[a][b] = diff;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 for (int x = l; x <= r; ++x) {||| 33 for (auto u : sts[x]) current.push_back(u);||| 34 }||| 35 nw.push_back(current);||| 36 i = r + 1;||| 37 }||| 38 slv(nw);||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 42 cin >> n >> k;||| 43 vector<vector<int> > sts;||| 44 for (int i = 0; i < n; ++i) {||| 45 sts.push_back({i});||| 46 }||| 47 slv(sts);||| 48 cout << diff << endl;||| 49 for (int i = 0; i < n; ++i) {||| 50 for (int j = i + 1; j < n; ++j) {||| 51 cout << colors[i][j] << ' ';||| 52 }||| 53 }||| 54 return 0;||| 55 }||| 	1 #include <bits/stdc++.h>||| 2 template <typename T>||| 3 bool umin(T &a, const T &b) {||| 4 return (a > b ? a = b, 1 : 0);||| 5 }||| 6 template <typename T>||| 7 bool umax(T &a, const T &b) {||| 8 return (a < b ? a = b, 1 : 0);||| 9 }||| 10 using namespace std;||| 11 const int N = 1001;||| 12 int n, k;||| 13 int colors[N][N];||| 14 int diff = 0;||| 15 void slv(vector<vector<int> > sts) {||| 16 if ((int)(sts).size() == 1) return;||| 17 int i = 0;||| 18 diff++;||| 19 vector<vector<int> > nw;||| 20 while (i < (int)(sts).size()) {||| 21 vector<int> current;||| 22 int l = i, r = min((int)(sts).size(), i + k) - 1;||| 23 for (int x = l; x <= r; ++x) {||| 24 for (int y = l + 1; y <= r; ++y) {||| 25 for (auto &a : sts[x]) {||| 26 for (auto &b : sts[y]) {||| 27 colors[a][b] = diff;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 for (int x = l; x <= r; ++x) {||| 33 for (auto u : sts[x]) current.push_back(u);||| 34 }||| 35 nw.push_back(current);||| 36 i = r + 1;||| 37 }||| 38 slv(nw);||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 42 cin >> n >> k;||| 43 vector<vector<int> > sts;||| 44 for (int i = 0; i < n; ++i) {||| 45 sts.push_back({i});||| 46 }||| 47 slv(sts);||| 48 cout << diff << endl;||| 49 for (int i = 0; i < n; ++i) {||| 50 for (int j = i + 1; j < n; ++j) {||| 51 cout << colors[i][j] << ' ';||| 52 }||| 53 }||| 54 return 0;||| 55 }||| 	24 for (int y = x + 1; y <= r; ++y) {
41	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La;||| 4 int main() {||| 5 register int i, j;||| 6 scanf(""%d%d"", &n, &k);||| 7 now = 1;||| 8 while (now < n) {||| 9 La = now;||| 10 now *= k;||| 11 cnt++;||| 12 for (i = 1; i <= n; i++) {||| 13 for (j = (i - 1) / La * La + La + 1;||| 14 j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now)||| 15 : (n));||| 16 j++)||| 17 A[i][j] = cnt;||| 18 }||| 19 }||| 20 printf(""%d\n"", cnt);||| 21 for (i = 1; i <= n; i++)||| 22 for (j = i + 1; j <= n; j++) printf(""%d "", A[i][j]);||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La;||| 4 int main() {||| 5 register int i, j;||| 6 scanf(""%d%d"", &n, &k);||| 7 now = 1;||| 8 while (now <= n) {||| 9 La = now;||| 10 now *= k;||| 11 cnt++;||| 12 for (i = 1; i <= n; i++) {||| 13 for (j = (i - 1) / La * La + La + 1;||| 14 j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now)||| 15 : (n));||| 16 j++)||| 17 A[i][j] = cnt;||| 18 }||| 19 }||| 20 printf(""%d\n"", cnt);||| 21 for (i = 1; i <= n; i++)||| 22 for (j = i + 1; j <= n; j++) printf(""%d "", A[i][j]);||| 23 }||| "	8 while (now < n) {
41	79	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, ans[1005][1005], cnt;||| 4 int main() {||| 5 scanf(""%d%d"", &n, &m);||| 6 int s = 1;||| 7 while (s < n) {||| 8 cnt++;||| 9 s *= m;||| 10 int res = 0;||| 11 while (res < n) {||| 12 for (int i = 1; i <= s && res + i <= n; i++)||| 13 for (int j = i + 1; j <= s && res + j <= n; j++)||| 14 if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt;||| 15 res += s;||| 16 }||| 17 }||| 18 printf(""%d\n"", cnt);||| 19 for (int i = 1; i <= n; i++)||| 20 for (int j = i + 1; j <= n; j++) printf(""%d "", ans[i][j]);||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, ans[1005][1005], cnt;||| 4 int main() {||| 5 scanf(""%d%d"", &n, &m);||| 6 int s = 1;||| 7 while (s <= n) {||| 8 cnt++;||| 9 s *= m;||| 10 int res = 0;||| 11 while (res < n) {||| 12 for (int i = 1; i <= s && res + i <= n; i++)||| 13 for (int j = i + 1; j <= s && res + j <= n; j++)||| 14 if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt;||| 15 res += s;||| 16 }||| 17 }||| 18 printf(""%d\n"", cnt);||| 19 for (int i = 1; i <= n; i++)||| 20 for (int j = i + 1; j <= n; j++) printf(""%d "", ans[i][j]);||| 21 return 0;||| 22 }||| "	7 while (s < n) {
41	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using uint = unsigned int;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 using pair2 = pair<T, T>;||| 9 using pii = pair<int, int>;||| 10 using pli = pair<ll, int>;||| 11 using pll = pair<ll, ll>;||| 12 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 13 ll myRand(ll B) { return (ull)rng() % B; }||| 14 clock_t startTime;||| 15 double getCurrentTime() {||| 16 return (double)(clock() - startTime) / CLOCKS_PER_SEC;||| 17 }||| 18 int main() {||| 19 startTime = clock();||| 20 int n, k;||| 21 scanf(""%d%d"", &n, &k);||| 22 int pw = 1;||| 23 int ans = 0;||| 24 while (pw < n) {||| 25 pw *= k;||| 26 ans++;||| 27 }||| 28 printf(""%d\n"", ans);||| 29 for (int i = 0; i < n; i++)||| 30 for (int j = i + 1; j < n; j++) {||| 31 int x = i, y = j, z = 1;||| 32 while (x % k >= y % k) {||| 33 x /= k;||| 34 y /= k;||| 35 z++;||| 36 }||| 37 printf(""%d "", z);||| 38 }||| 39 printf(""\n"");||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using uint = unsigned int;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 using pair2 = pair<T, T>;||| 9 using pii = pair<int, int>;||| 10 using pli = pair<ll, int>;||| 11 using pll = pair<ll, ll>;||| 12 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 13 ll myRand(ll B) { return (ull)rng() % B; }||| 14 clock_t startTime;||| 15 double getCurrentTime() {||| 16 return (double)(clock() - startTime) / CLOCKS_PER_SEC;||| 17 }||| 18 int main() {||| 19 startTime = clock();||| 20 int n, k;||| 21 scanf(""%d%d"", &n, &k);||| 22 int pw = 1;||| 23 int ans = 0;||| 24 while (pw < n) {||| 25 pw *= k;||| 26 ans++;||| 27 }||| 28 printf(""%d\n"", ans);||| 29 for (int i = 0; i < n; i++)||| 30 for (int j = i + 1; j < n; j++) {||| 31 int x = i, y = j, z = 1;||| 32 while (x % k == y % k) {||| 33 x /= k;||| 34 y /= k;||| 35 z++;||| 36 }||| 37 printf(""%d "", z);||| 38 }||| 39 printf(""\n"");||| 40 return 0;||| 41 }||| "	32 while (x % k >= y % k) {
42	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e5 + 5, mod = 1e9 + 7;||| 4 int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans;||| 5 multiset<int> s;||| 6 void M(int x, int y) {||| 7 for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod;||| 8 }||| 9 int Q(int x) {||| 10 int ret = 0;||| 11 for (; x; x -= x & -x) (ret += t[x]) %= mod;||| 12 return ret;||| 13 }||| 14 int main() {||| 15 scanf(""%d"", &n);||| 16 for (int i = 1; i <= n; i++) scanf(""%d%d"", &a[i], &b[i]), f[i] = i;||| 17 sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; });||| 18 scanf(""%d"", &q);||| 19 for (int i = 1; i <= q; i++) scanf(""%d"", &x), d[x] = 1, s.insert(b[x]);||| 20 for (int i = 1; i <= n; i++) {||| 21 x = f[i];||| 22 g[x] = s.size() && b[x] <= *s.rbegin();||| 23 if (d[x]) s.erase(s.find(b[x]));||| 24 }||| 25 for (int i = 1; i <= n; i++)||| 26 x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod),||| 27 (ans += dp[x]) %= mod;||| 28 printf(""%d\n"", ans);||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5, mod = 1e9 + 7;||| 4 int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans;||| 5 multiset<int> s;||| 6 void M(int x, int y) {||| 7 for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod;||| 8 }||| 9 int Q(int x) {||| 10 int ret = 0;||| 11 for (; x; x -= x & -x) (ret += t[x]) %= mod;||| 12 return ret;||| 13 }||| 14 int main() {||| 15 scanf(""%d"", &n);||| 16 for (int i = 1; i <= n; i++) scanf(""%d%d"", &a[i], &b[i]), f[i] = i;||| 17 sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; });||| 18 scanf(""%d"", &q);||| 19 for (int i = 1; i <= q; i++) scanf(""%d"", &x), d[x] = 1, s.insert(b[x]);||| 20 for (int i = 1; i <= n; i++) {||| 21 x = f[i];||| 22 g[x] = !s.empty() && b[x] <= *s.rbegin();||| 23 if (d[x]) s.erase(s.find(b[x]));||| 24 }||| 25 for (int i = 1; i <= n; i++)||| 26 x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod),||| 27 (ans += dp[x]) %= mod;||| 28 printf(""%d\n"", ans);||| 29 return 0;||| 30 }||| "	3 const int N = 4e5 + 5, mod = 1e9 + 7;
42	16	"1 #include <bits/stdc++.h>||| 2 const int md = 1000000007;||| 3 inline int add(int a, int b) {||| 4 a += b;||| 5 if (a >= md) a -= md;||| 6 return a;||| 7 }||| 8 inline int sub(int a, int b) {||| 9 a -= b;||| 10 if (a < 0) a += md;||| 11 return a;||| 12 }||| 13 const int N = 200000;||| 14 int t, n, s[N], ord[N << 1], suf[N], b[N << 1];||| 15 std::pair<int, int> a[N];||| 16 bool s_cmp(int x, int y) { return a[x].first < a[y].first; }||| 17 void inc(int i, int d) {||| 18 while (i < 2 * n) {||| 19 b[i] = add(b[i], d);||| 20 i |= i + 1;||| 21 }||| 22 }||| 23 int get(int i) {||| 24 int s = 0;||| 25 while (i >= 0) {||| 26 s = add(s, b[i]);||| 27 i = (i & i + 1) - 1;||| 28 }||| 29 return s;||| 30 }||| 31 int main() {||| 32 scanf(""%d"", &n);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d%d"", &a[i].first, &a[i].second);||| 35 --a[i].first;||| 36 --a[i].second;||| 37 ord[a[i].first] = ord[a[i].second] = i;||| 38 }||| 39 scanf(""%d"", &t);||| 40 for (int i = 0; i < t; ++i) {||| 41 scanf(""%d"", s + i);||| 42 --s[i];||| 43 }||| 44 std::sort(s, s + t, s_cmp);||| 45 for (int i = t - 1; i >= 0; --i) {||| 46 if (i == t - 1 || a[s[i]].second > a[suf[i + 1]].second)||| 47 suf[i] = s[i];||| 48 else||| 49 suf[i] = suf[i + 1];||| 50 }||| 51 std::vector<std::pair<int, int> > qr;||| 52 int last = 0;||| 53 for (int i = 0; i < t;) {||| 54 qr.push_back(std::make_pair(a[suf[i]].second, last));||| 55 last = a[suf[i]].first + 1;||| 56 while (i < t && a[s[i]].first < last) ++i;||| 57 }||| 58 std::sort(qr.begin(), qr.end());||| 59 int ans = 0;||| 60 for (int i = 0, j = 0; i < n << 1; ++i) {||| 61 if (a[ord[i]].second == i) {||| 62 while (j < (int)qr.size() && qr[j].first == i) {||| 63 ans = add(ans, get(qr[j].second) + 1);||| 64 ++j;||| 65 }||| 66 int val = get(a[ord[i]].first) + 1;||| 67 inc(0, val);||| 68 inc(a[ord[i]].first + 1, sub(0, val));||| 69 }||| 70 }||| 71 printf(""%d\n"", ans);||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 const int md = 1000000007;||| 3 inline int add(int a, int b) {||| 4 a += b;||| 5 if (a >= md) a -= md;||| 6 return a;||| 7 }||| 8 inline int sub(int a, int b) {||| 9 a -= b;||| 10 if (a < 0) a += md;||| 11 return a;||| 12 }||| 13 const int N = 200000;||| 14 int t, n, s[N], ord[N << 1], suf[N], b[N << 1];||| 15 std::pair<int, int> a[N];||| 16 bool s_cmp(int x, int y) { return a[x].first < a[y].first; }||| 17 void inc(int i, int d) {||| 18 while (i < 2 * n) {||| 19 b[i] = add(b[i], d);||| 20 i |= i + 1;||| 21 }||| 22 }||| 23 int get(int i) {||| 24 int s = 0;||| 25 while (i >= 0) {||| 26 s = add(s, b[i]);||| 27 i = (i & i + 1) - 1;||| 28 }||| 29 return s;||| 30 }||| 31 int main() {||| 32 scanf(""%d"", &n);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d%d"", &a[i].first, &a[i].second);||| 35 --a[i].first;||| 36 --a[i].second;||| 37 ord[a[i].first] = ord[a[i].second] = i;||| 38 }||| 39 scanf(""%d"", &t);||| 40 for (int i = 0; i < t; ++i) {||| 41 scanf(""%d"", s + i);||| 42 --s[i];||| 43 }||| 44 std::sort(s, s + t, s_cmp);||| 45 for (int i = t - 1; i >= 0; --i) {||| 46 if (i == t - 1 || a[s[i]].second > a[suf[i + 1]].second)||| 47 suf[i] = s[i];||| 48 else||| 49 suf[i] = suf[i + 1];||| 50 }||| 51 std::vector<std::pair<int, int> > qr;||| 52 int last = 0;||| 53 for (int i = 0; i < t;) {||| 54 qr.push_back(std::make_pair(a[suf[i]].second, last));||| 55 last = a[suf[i]].first + 1;||| 56 while (i < t && a[s[i]].first < last) ++i;||| 57 }||| 58 std::sort(qr.begin(), qr.end());||| 59 int ans = 0;||| 60 for (int i = 0, j = 0; i < n << 1; ++i) {||| 61 if (a[ord[i]].second == i) {||| 62 while (j < (int)qr.size() && qr[j].first == i) {||| 63 ans = add(ans, get(qr[j].second) + 1);||| 64 ++j;||| 65 }||| 66 int val = get(a[ord[i]].first) + 1;||| 67 inc(0, val);||| 68 inc(a[ord[i]].first + 1, sub(0, -val));||| 69 }||| 70 }||| 71 printf(""%d\n"", ans);||| 72 return 0;||| 73 }||| "	68 inc(a[ord[i]].first + 1, sub(0, val));
42	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int abc;||| 4 mt19937 rnd((unsigned long long)(new char));||| 5 int rd(int l, int r) {||| 6 uniform_int_distribution<> ee(l, r);||| 7 return ee(rnd);||| 8 }||| 9 const int mxn = 4e5 + 3, mod = 1e9 + 7;||| 10 pair<int, int> ee[mxn];||| 11 int n, v1[mxn], v2[mxn], px[mxn], m, v0[mxn], xp[mxn];||| 12 bool vs[mxn];||| 13 bool cmp1(int x, int y) { return v1[x] < v1[y]; }||| 14 struct arrrr {||| 15 long long a[mxn];||| 16 void add(int x, int y) {||| 17 for (; x <= n; x += x & -x) a[x] += y;||| 18 }||| 19 long long ask(int x) {||| 20 long long r = 0;||| 21 for (; x; x &= x - 1) r += a[x], r %= mod;||| 22 return r;||| 23 }||| 24 } ar;||| 25 set<int> st;||| 26 int main() {||| 27 cin >> n;||| 28 for (int i = 1; i <= n; ++i)||| 29 abc = scanf(""%d%d"", v1 + i, v2 + i), ee[i].first = v2[i],||| 30 ee[i].second = v1[i];||| 31 sort(ee + 1, ee + n + 1);||| 32 cin >> m;||| 33 for (int i = 1; i <= m; ++i) abc = scanf(""%d"", v0 + i), v0[i] = v1[v0[i]];||| 34 for (int i = 1; i <= n; ++i)||| 35 v1[i] = ee[i].second, v2[i] = ee[i].first, px[i] = i;||| 36 sort(px + 1, px + n + 1, cmp1);||| 37 for (int i = 1; i <= n; ++i) xp[v1[i]] = i;||| 38 for (int i = 1; i <= m; ++i) st.insert(xp[v0[i]]);||| 39 for (int t = 1; t <= n && st.size(); ++t)||| 40 if (*--st.end() >= px[t]) st.erase(px[t]), vs[px[t]] = 1;||| 41 long long ans = 0;||| 42 for (int t = n; t; --t) {||| 43 int x = px[t];||| 44 long long v = ar.ask(x) + 1;||| 45 if (vs[x]) ans += v;||| 46 ar.add(x, v);||| 47 }||| 48 ans = (ans % mod + mod) % mod;||| 49 printf(""%lld\n"", ans);||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int abc;||| 4 mt19937 rnd((unsigned long long)(new char));||| 5 int rd(int l, int r) {||| 6 uniform_int_distribution<> ee(l, r);||| 7 return ee(rnd);||| 8 }||| 9 const int mxn = 4e5 + 3, mod = 1e9 + 7;||| 10 pair<int, int> ee[mxn];||| 11 int n, v1[mxn], v2[mxn], px[mxn], m, v0[mxn], xp[mxn];||| 12 bool vs[mxn];||| 13 bool cmp1(int x, int y) { return v1[x] < v1[y]; }||| 14 struct arrrr {||| 15 long long a[mxn];||| 16 void add(int x, int y) {||| 17 for (; x <= n; x += x & -x) a[x] += y;||| 18 }||| 19 long long ask(int x) {||| 20 long long r = 0;||| 21 for (; x; x &= x - 1) r += a[x], r %= mod;||| 22 return r;||| 23 }||| 24 } ar;||| 25 set<int> st;||| 26 int main() {||| 27 cin >> n;||| 28 for (int i = 1; i <= n; ++i)||| 29 abc = scanf(""%d%d"", v1 + i, v2 + i), ee[i].first = v2[i],||| 30 ee[i].second = v1[i];||| 31 sort(ee + 1, ee + n + 1);||| 32 cin >> m;||| 33 for (int i = 1; i <= m; ++i) abc = scanf(""%d"", v0 + i), v0[i] = v1[v0[i]];||| 34 for (int i = 1; i <= n; ++i)||| 35 v1[i] = ee[i].second, v2[i] = ee[i].first, px[i] = i;||| 36 sort(px + 1, px + n + 1, cmp1);||| 37 for (int i = 1; i <= n; ++i) xp[v1[i]] = i;||| 38 for (int i = 1; i <= m; ++i) st.insert(xp[v0[i]]);||| 39 for (int t = 1; t <= n && st.size(); ++t)||| 40 if (*--st.end() >= px[t]) st.erase(px[t]), vs[px[t]] = 1;||| 41 long long ans = 0;||| 42 for (int t = n; t; --t) {||| 43 int x = px[t];||| 44 long long v = ar.ask(x) + 1;||| 45 if (vs[t]) ans += v;||| 46 ar.add(x, v);||| 47 }||| 48 ans = (ans % mod + mod) % mod;||| 49 printf(""%lld\n"", ans);||| 50 return 0;||| 51 }||| "	45 if (vs[x]) ans += v;
44	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2100, rev[4] = {0, 2, 1, 3};||| 4 int n;||| 5 char a[N][N];||| 6 int tag[N];||| 7 int id[N][N];||| 8 void dye(int n) {||| 9 for (int i = 1, c = 1; i <= n; i += 2, c += 2) {||| 10 id[i][1] = id[1][i] = id[1][i + 1] = id[i + 1][1] = c;||| 11 for (int j = 2; j < i; j++) id[j][i + 1 - j] = c + (1 ^ j & 1);||| 12 for (int j = 2; j <= n - i + 1; j++)||| 13 id[i + j][j] = id[j][i + j] = c + (1 ^ j & 1);||| 14 }||| 15 for (int i = 1; i <= n; i++)||| 16 for (int j = 1; j <= n - i + 1; j++) id[n - i + 1][n - j + 1] = id[i][j];||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 if (n & 1) {||| 21 puts(""NONE"");||| 22 return 0;||| 23 }||| 24 dye(n);||| 25 for (int i = 1; i <= n; i++) {||| 26 scanf(""%s"", a[i] + 1);||| 27 for (int j = 1; j <= n; j++)||| 28 if (a[i][j] != '.') {||| 29 tag[id[i][j]] |= 1 << (a[i][j] == 'S');||| 30 }||| 31 }||| 32 for (int i = 1; i <= n; i += 2) {||| 33 int &x = tag[i], &y = tag[i + 1];||| 34 y = rev[x |= rev[y]];||| 35 }||| 36 int flag = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if (tag[i] == 3) {||| 39 puts(""NONE"");||| 40 return 0;||| 41 }||| 42 if (!tag[i]) flag = 1;||| 43 }||| 44 if (flag) {||| 45 puts(""MULTIPLE"");||| 46 return 0;||| 47 }||| 48 puts(""UNIQUE"");||| 49 for (int i = 1; i <= n; i++, puts(""""))||| 50 for (int j = 1; j <= n; j++) putchar(tag[id[i][j]] == 2 ? 'S' : 'G');||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2100, rev[4] = {0, 2, 1, 3};||| 4 int n;||| 5 char a[N][N];||| 6 int tag[N];||| 7 int id[N][N];||| 8 void dye(int n) {||| 9 for (int i = 1, c = 1; i <= 9; i += 2, c += 2) {||| 10 id[i][1] = id[1][i] = id[1][i + 1] = id[i + 1][1] = c;||| 11 for (int j = 2; j < i; j++) id[j][i + 1 - j] = c + (1 ^ j & 1);||| 12 for (int j = 2; j <= n - i + 1; j++)||| 13 id[i + j][j] = id[j][i + j] = c + (1 ^ j & 1);||| 14 }||| 15 for (int i = 1; i <= n; i++)||| 16 for (int j = 1; j <= n - i + 1; j++) id[n - i + 1][n - j + 1] = id[i][j];||| 17 }||| 18 int main() {||| 19 scanf(""%d"", &n);||| 20 if (n & 1) {||| 21 puts(""NONE"");||| 22 return 0;||| 23 }||| 24 dye(n);||| 25 for (int i = 1; i <= n; i++) {||| 26 scanf(""%s"", a[i] + 1);||| 27 for (int j = 1; j <= n; j++)||| 28 if (a[i][j] != '.') {||| 29 tag[id[i][j]] |= 1 << (a[i][j] == 'S');||| 30 }||| 31 }||| 32 for (int i = 1; i <= n; i += 2) {||| 33 int &x = tag[i], &y = tag[i + 1];||| 34 y = rev[x |= rev[y]];||| 35 }||| 36 int flag = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if (tag[i] == 3) {||| 39 puts(""NONE"");||| 40 return 0;||| 41 }||| 42 if (!tag[i]) flag = 1;||| 43 }||| 44 if (flag) {||| 45 puts(""MULTIPLE"");||| 46 return 0;||| 47 }||| 48 puts(""UNIQUE"");||| 49 for (int i = 1; i <= n; i++, puts(""""))||| 50 for (int j = 1; j <= n; j++) putchar(tag[id[i][j]] == 2 ? 'S' : 'G');||| 51 }||| "	9 for (int i = 1, c = 1; i <= n; i += 2, c += 2) {
44	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 bool chkmin(T &x, T y) {||| 5 return x > y ? x = y, 1 : 0;||| 6 }||| 7 template <typename T>||| 8 bool chkmax(T &x, T y) {||| 9 return x < y ? x = y, 1 : 0;||| 10 }||| 11 int readint() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (ch < '0' || ch > '9') {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (ch >= '0' && ch <= '9') {||| 19 x = x * 10 + ch - '0';||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 int n;||| 25 int a[2005][2005], res[1005];||| 26 char s[2005][2005];||| 27 int main() {||| 28 n = readint();||| 29 for (int i = 1; i <= n; i++) scanf(""%s"", s[i] + 1);||| 30 if (n & 1) {||| 31 printf(""NONE\n"");||| 32 return 0;||| 33 }||| 34 n >>= 1;||| 35 for (int i = 1; i <= n; i++) a[i][i] = i;||| 36 for (int i = n + 1; i <= n + n; i++) a[i][i] = n + n - i + 1;||| 37 for (int i = 2; i <= n + n; i++) {||| 38 if (i & 1) {||| 39 for (int j = i; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i + 2];||| 40 } else {||| 41 a[i][1] = a[i - 1][1];||| 42 for (int j = i + 1; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i];||| 43 }||| 44 }||| 45 for (int i = 1; i <= n + n; i++)||| 46 for (int j = i + 1; j <= n + n; j++) a[i][j] = a[j][i];||| 47 for (int i = 1; i <= n + n; i++) res[i] = -1;||| 48 for (int i = 1; i <= n + n; i++) {||| 49 for (int j = 1; j <= n + n; j++) {||| 50 if (s[i][j] != '.') {||| 51 int fl = s[i][j] == 'S';||| 52 if (a[i][j] < 0) fl ^= 1;||| 53 if (res[abs(a[i][j])] >= 0 && res[abs(a[i][j])] != fl)||| 54 return printf(""NONE\n""), 0;||| 55 res[abs(a[i][j])] = fl;||| 56 }||| 57 }||| 58 }||| 59 for (int i = 1; i <= n; i++)||| 60 if (res[i] < 0) return printf(""MULTIPLE\n""), 0;||| 61 printf(""UNIQUE\n"");||| 62 for (int i = 1; i <= n + n; i++) {||| 63 for (int j = 1; j <= n + n; j++) {||| 64 if (a[i][j] < 0)||| 65 putchar(res[-a[i][j]] ? 'G' : 'S');||| 66 else||| 67 putchar(res[a[i][j]] ? 'S' : 'G');||| 68 }||| 69 putchar('\n');||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 bool chkmin(T &x, T y) {||| 5 return x > y ? x = y, 1 : 0;||| 6 }||| 7 template <typename T>||| 8 bool chkmax(T &x, T y) {||| 9 return x < y ? x = y, 1 : 0;||| 10 }||| 11 int readint() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (ch < '0' || ch > '9') {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (ch >= '0' && ch <= '9') {||| 19 x = x * 10 + ch - '0';||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 int n;||| 25 int a[2005][2005], res[1005];||| 26 char s[2005][2005];||| 27 int main() {||| 28 n = readint();||| 29 for (int i = 1; i <= n; i++) scanf(""%s"", s[i] + 1);||| 30 if (n & 1) {||| 31 printf(""NONE\n"");||| 32 return 0;||| 33 }||| 34 n >>= 1;||| 35 for (int i = 1; i <= n; i++) a[i][i] = i;||| 36 for (int i = n + 1; i <= n + n; i++) a[i][i] = n + n - i + 1;||| 37 for (int i = 2; i <= n + n; i++) {||| 38 if (i & 1) {||| 39 for (int j = i; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i + 2];||| 40 } else {||| 41 a[i][1] = a[i - 1][1];||| 42 for (int j = i + 1; j <= n + n; j++) a[j][j - i + 1] = -a[j - 1][j - i];||| 43 }||| 44 }||| 45 for (int i = 1; i <= n + n; i++)||| 46 for (int j = i + 1; j <= n + n; j++) a[i][j] = a[j][i];||| 47 for (int i = 1; i <= n + n; i++) res[i] = -1;||| 48 for (int i = 1; i <= n + n; i++) {||| 49 for (int j = 1; j <= n + n; j++) {||| 50 if (s[i][j] != '.') {||| 51 int fl = s[i][j] == 'S';||| 52 if (a[i][j] < 0) fl ^= 1;||| 53 if (res[abs(a[i][j])] >= 0 && res[abs(a[i][j])] != fl)||| 54 return printf(""NONE\n""), 0;||| 55 res[abs(a[i][j])] = fl;||| 56 }||| 57 }||| 58 }||| 59 for (int i = 1; i <= n; i++)||| 60 if (res[i] < 0) return printf(""MUTIPLE\n""), 0;||| 61 printf(""UNIQUE\n"");||| 62 for (int i = 1; i <= n + n; i++) {||| 63 for (int j = 1; j <= n + n; j++) {||| 64 if (a[i][j] < 0)||| 65 putchar(res[-a[i][j]] ? 'G' : 'S');||| 66 else||| 67 putchar(res[a[i][j]] ? 'S' : 'G');||| 68 }||| 69 putchar('\n');||| 70 }||| 71 return 0;||| 72 }||| "	"60 if (res[i] < 0) return printf(""MULTIPLE\n""), 0;"
44	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2002;||| 4 int a[N][N];||| 5 char b[N][N], color[N / 2];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int n;||| 11 cin >> n;||| 12 if (n & 1) {||| 13 cout << ""NONE"" << endl;||| 14 return 0;||| 15 }||| 16 for (int j = 0; j < n; j++) {||| 17 a[0][j] = a[n - 1][n - j - 1] = a[j][0] = a[n - j - 1][n - 1] = j / 2;||| 18 b[0][j] = b[n - 1][n - j - 1] = b[j][0] = b[n - j - 1][n - 1] = 1;||| 19 if (j == 0 || j == n - 1) continue;||| 20 a[1][j] = j & 1 ? (j + 1) / 2 : (j - 1) / 2;||| 21 b[1][j] = 0;||| 22 }||| 23 for (int i = 2; i < n - 1; ++i) {||| 24 for (int j = 1; j < n - 1; ++j) {||| 25 if (a[i - 2][j] == a[i - 1][j - 1]) {||| 26 a[i][j] = a[i - 1][j + 1];||| 27 } else {||| 28 a[i][j] = a[i - 1][j - 1];||| 29 }||| 30 }||| 31 }||| 32 memset(color, -1, sizeof(color));||| 33 bool flag = true;||| 34 for (int i = 0; i < n; ++i) {||| 35 for (int j = 0; j < n; ++j) {||| 36 char c;||| 37 cin >> c;||| 38 int col = (c == 'S');||| 39 if (i > 0 && i < n - 1 && j > 0 && j < n - 1) {||| 40 if (a[i][j] == a[i - 1][j - 1] && a[i][j] == a[i + 1][j + 1]) {||| 41 b[i][j] = 1 ^ b[i - 1][j - 1];||| 42 } else {||| 43 b[i][j] = 1 ^ b[i - 1][j + 1];||| 44 }||| 45 }||| 46 if (c == '.') continue;||| 47 if (!b[i][j]) col ^= 1;||| 48 char &prv = color[a[i][j]];||| 49 if (prv == -1 || prv == col) {||| 50 prv = col;||| 51 } else {||| 52 flag = false;||| 53 goto out;||| 54 }||| 55 }||| 56 }||| 57 out:||| 58 if (flag) {||| 59 int c = 0;||| 60 for (int i = 0; i < n / 2; ++i) {||| 61 c += color[i] != -1;||| 62 }||| 63 if (c == n / 2) {||| 64 cout << ""UNIQUE"" << endl;||| 65 for (int i = 0; i < n; ++i) {||| 66 for (int j = 0; j < n; ++j) {||| 67 cout << ""GS""[color[a[i][j]] == b[i][j]];||| 68 }||| 69 cout << endl;||| 70 }||| 71 } else {||| 72 cout << ""MULTIPLE"" << endl;||| 73 }||| 74 } else {||| 75 cout << ""NONE"" << endl;||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2002;||| 4 int a[N][N];||| 5 char b[N][N], color[N / 2];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int n;||| 11 cin >> n;||| 12 if (n & 1) {||| 13 cout << ""NONE"" << endl;||| 14 return 0;||| 15 }||| 16 for (int j = 0; j < n; j++) {||| 17 a[0][j] = a[n - 1][n - j - 1] = a[j][0] = a[n - j - 1][n - 1] = j / 2;||| 18 b[0][j] = b[n - 1][n - j - 1] = b[j][0] = b[n - j - 1][n - 1] = 1;||| 19 if (j == 0 || j == n - 1) continue;||| 20 a[1][j] = j & 1 ? (j + 1) / 2 : (j - 1) / 2;||| 21 b[1][j] = 0;||| 22 }||| 23 for (int i = 2; i < n - 1; ++i) {||| 24 for (int j = 1; j < n - 1; ++j) {||| 25 if (a[i - 2][j] == a[i - 1][j - 1]) {||| 26 a[i][j] = a[i - 1][j + 1];||| 27 } else {||| 28 a[i][j] = a[i - 1][j - 1];||| 29 }||| 30 }||| 31 }||| 32 memset(color, -1, sizeof(color));||| 33 bool flag = true;||| 34 for (int i = 0; i < n; ++i) {||| 35 for (int j = 0; j < n; ++j) {||| 36 char c;||| 37 cin >> c;||| 38 int col = (c == 'S');||| 39 if (i > 0 && i < n - 1 && j > 0 && j < n - 1) {||| 40 if (a[i][j] == a[i - 1][j - 1] && a[i][j] == a[i + 1][j + 1]) {||| 41 b[i][j] = 1 ^ b[i - 1][j - 1];||| 42 } else {||| 43 b[i][j] = 1 ^ b[i - 1][j + 1];||| 44 }||| 45 }||| 46 if (c == '.') continue;||| 47 if (!b[i][j]) col ^= 1;||| 48 char &prv = color[a[i][j]];||| 49 if (prv == -1 || prv == col) {||| 50 prv = col;||| 51 } else {||| 52 flag = false;||| 53 goto out;||| 54 }||| 55 }||| 56 }||| 57 out:||| 58 if (flag) {||| 59 int c = 0;||| 60 for (int i = 0; i < n / 2; ++i) {||| 61 c += color[i] != -1;||| 62 }||| 63 if (c == n / 2) {||| 64 cout << ""UNIQUE"" << endl;||| 65 for (int i = 0; i < n; ++i) {||| 66 for (int j = 0; j < n; ++j) {||| 67 cout << ""GS""[color[a[i][j]] == b[i][j]] << endl;||| 68 }||| 69 cout << endl;||| 70 }||| 71 } else {||| 72 cout << ""MULTIPLE"" << endl;||| 73 }||| 74 } else {||| 75 cout << ""NONE"" << endl;||| 76 }||| 77 return 0;||| 78 }||| "	"67 cout << ""GS""[color[a[i][j]] == b[i][j]];"
44	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e3 + 5;||| 4 int n;||| 5 char s[MAXN][MAXN];||| 6 int f[MAXN];||| 7 inline pair<int, int> get(int x, int y, int k) {||| 8 if (x == 1) {||| 9 if (y % 2) ++y;||| 10 return make_pair(y, k);||| 11 }||| 12 if ((x + y) % 2) {||| 13 int t = min(x - 1, y - 1);||| 14 x -= t;||| 15 y -= t;||| 16 k ^= t & 1;||| 17 } else {||| 18 int t = min(x - 1, n - y);||| 19 x -= t;||| 20 y += t;||| 21 k ^= t & 1;||| 22 }||| 23 if (x != 1) x = n - x + 1, y = n - y + 1;||| 24 return get(x, y, k);||| 25 }||| 26 int main(void) {||| 27 scanf(""%d"", &n);||| 28 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 29 if (n % 2) return printf(""NONE""), 0;||| 30 memset(f, -1, sizeof(f));||| 31 for (int i = 1; i <= n; ++i)||| 32 for (int j = 1; j <= n; ++j)||| 33 if (s[i][j] != '.') {||| 34 pair<int, int> res = get(i, j, s[i][j] == 'G');||| 35 int y = res.first, k = res.second;||| 36 if (f[y] == -1)||| 37 f[y] = k;||| 38 else if (f[y] != k)||| 39 return printf(""NONE""), 0;||| 40 }||| 41 for (int i = 2; i <= n; i += 2)||| 42 if (f[i] == -1) return printf(""MULTIPLE""), 0;||| 43 printf(""UNIQUE\n"");||| 44 for (int i = 1; i <= n; ++i, putchar('\n'))||| 45 for (int j = 1; j <= n; ++j) {||| 46 pair<int, int> res = get(i, j, 0);||| 47 int k = f[res.first] ^ res.second;||| 48 putchar(""SG""[k]);||| 49 }||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e3 + 5;||| 4 int n;||| 5 char s[MAXN][MAXN];||| 6 int f[MAXN];||| 7 inline pair<int, int> get(int x, int y, int k) {||| 8 if (x == 1) {||| 9 if (y % 2) ++y;||| 10 return make_pair(y, k);||| 11 }||| 12 if ((x + y) % 2) {||| 13 int t = min(x - 1, y - 1);||| 14 x -= t;||| 15 y -= t;||| 16 k ^= t & 1;||| 17 } else {||| 18 int t = min(x - 1, n - y);||| 19 x -= t;||| 20 y += t;||| 21 k ^= t & 1;||| 22 }||| 23 if (x != 1) x = n - x + 1, y = n - y + 1;||| 24 return get(x, y, k);||| 25 }||| 26 int main(void) {||| 27 scanf(""%d"", &n);||| 28 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 29 if (n % 2) return printf(""NONE""), 0;||| 30 memset(f, -1, sizeof(f));||| 31 for (int i = 1; i <= n; ++i)||| 32 for (int j = 1; j <= n; ++j)||| 33 if (s[i][j] != '.') {||| 34 pair<int, int> res = get(i, j, s[i][j] == 'G');||| 35 int y = res.first, k = res.second;||| 36 if (f[y] == -1)||| 37 f[y] = k;||| 38 else if (f[y] != k)||| 39 return printf(""NONE""), 0;||| 40 }||| 41 for (int i = 2; i <= n; i += 2)||| 42 if (f[i] == -1) return printf(""MULTIPLE""), 0;||| 43 printf(""UNIQUE\n"");||| 44 for (int i = 1; i <= n; ++i, putchar('\n'))||| 45 for (int j = 1; j <= n; ++j) {||| 46 pair<int, int> res = get(i, j, 0);||| 47 int k = f[res.first] ^ res.second;||| 48 putchar(""GS""[k]);||| 49 }||| 50 return 0;||| 51 }||| "	"48 putchar(""SG""[k]);"
45	13	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, i = 0, c = 0;||| 5 cin >> t;||| 6 for (; i < t; i++) {||| 7 c = 1;||| 8 int n;||| 9 cin >> n;||| 10 int a[n];||| 11 for (int j = 0; j < n; j++) {||| 12 cin >> a[j];||| 13 }||| 14 if (a[0] == 1) c++;||| 15 for (int k = 1; k < n; k++) {||| 16 if (a[k] == 1 && a[k - 1] == 0)||| 17 c++;||| 18 else if (a[k] == 1 && a[k - 1] == 1)||| 19 c = c + 5;||| 20 else if (a[k] == 0 && a[k - 1] == 1)||| 21 ;||| 22 else if (a[k] == 0 && a[k - 1] == 0) {||| 23 c = -1;||| 24 break;||| 25 }||| 26 }||| 27 cout << c << endl;||| 28 }||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, i = 0, c = 0;||| 5 cin >> t;||| 6 for (; i < t; i++) {||| 7 c = 0;||| 8 int n;||| 9 cin >> n;||| 10 int a[n];||| 11 for (int j = 0; j < n; j++) {||| 12 cin >> a[j];||| 13 }||| 14 if (a[0] == 1) c++;||| 15 for (int k = 1; k < n; k++) {||| 16 if (a[k] == 1 && a[k - 1] == 0)||| 17 c++;||| 18 else if (a[k] == 1 && a[k - 1] == 1)||| 19 c = c + 5;||| 20 else if (a[k] == 0 && a[k - 1] == 1)||| 21 ;||| 22 else if (a[k] == 0 && a[k - 1] == 0) {||| 23 c = -1;||| 24 break;||| 25 }||| 26 }||| 27 cout << c << endl;||| 28 }||| 29 }||| 	7 c = 1;
45	128	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 int sum = 1;||| 11 for (int i = 0; i < n; i++) {||| 12 int a;||| 13 cin >> a;||| 14 v.push_back(a);||| 15 }||| 16 int count0 = 0, count1 = 0;||| 17 for (int i = 0; i < n; i++) {||| 18 if (v[i] == 1) {||| 19 count1++;||| 20 if (count1 >= 2) {||| 21 sum = sum + 4;||| 22 }||| 23 sum++;||| 24 count0 = 0;||| 25 } else if (v[i] == 0) {||| 26 count0++;||| 27 if (count0 == 2) {||| 28 sum = -1;||| 29 break;||| 30 }||| 31 count1 = 0;||| 32 }||| 33 }||| 34 cout << sum << endl;||| 35 }||| 36 return 0;||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 int sum = 1;||| 11 for (int i = 0; i < n; i++) {||| 12 int a;||| 13 cin >> a;||| 14 v.push_back(a);||| 15 }||| 16 int count0 = 0, count1 = 0;||| 17 for (int i = 0; i < n; i++) {||| 18 if (v[i] == 1) {||| 19 count1++;||| 20 if (count1 == 2) {||| 21 sum = sum + 4;||| 22 }||| 23 sum++;||| 24 count0 = 0;||| 25 } else if (v[i] == 0) {||| 26 count0++;||| 27 if (count0 == 2) {||| 28 sum = -1;||| 29 break;||| 30 }||| 31 count1 = 0;||| 32 }||| 33 }||| 34 cout << sum << endl;||| 35 }||| 36 return 0;||| 37 }||| 	20 if (count1 >= 2) {
45	105	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n;||| 5 int a[N];||| 6 void solve() {||| 7 scanf(""%d"", &n);||| 8 int now = 1;||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 if (n == 1) {||| 11 if (a[1] == 1)||| 12 printf(""2\n"");||| 13 else||| 14 printf(""1\n"");||| 15 return;||| 16 }||| 17 if (a[1] == 1) now++;||| 18 for (int i = 2; i <= n; i++) {||| 19 if (a[i] == 0 && a[i - 1] == 0) {||| 20 now = -1;||| 21 printf(""%d\n"", now);||| 22 return;||| 23 }||| 24 if (a[i] == 0) continue;||| 25 if (a[i] == 1 && a[i - 1] == 1)||| 26 now += 5;||| 27 else||| 28 now++;||| 29 }||| 30 printf(""%d\n"", now);||| 31 }||| 32 int main() {||| 33 int t;||| 34 scanf(""%d"", &t);||| 35 while (t--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 110;||| 4 int n;||| 5 int a[N];||| 6 void solve() {||| 7 scanf(""%d"", &n);||| 8 int now = 1;||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 if (n == 1) {||| 11 if (a[1] == 1)||| 12 printf(""2\n"");||| 13 else||| 14 printf(""1\n"");||| 15 return;||| 16 }||| 17 if (a[1] == 1) now++;||| 18 for (int i = 2; i <= n; i++) {||| 19 if (a[i] == 0 && a[i - 1] == 0) {||| 20 now == -1;||| 21 printf(""%d\n"", now);||| 22 return;||| 23 }||| 24 if (a[i] == 0) continue;||| 25 if (a[i] == 1 && a[i - 1] == 1)||| 26 now += 5;||| 27 else||| 28 now++;||| 29 }||| 30 printf(""%d\n"", now);||| 31 }||| 32 int main() {||| 33 int t;||| 34 scanf(""%d"", &t);||| 35 while (t--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	20 now = -1;
45	245	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t, v;||| 4 int arr[100];||| 5 void cf() {||| 6 cin >> n;||| 7 v = 0;||| 8 for (int i = 0; i < n; ++i) {||| 9 cin >> arr[i];||| 10 }||| 11 for (int i = 0; i < n - 1; ++i) {||| 12 if (arr[i] == 0 && arr[i + 1] == 0) {||| 13 cout << -1 << endl;||| 14 v = 1;||| 15 break;||| 16 }||| 17 }||| 18 int ans = 1;||| 19 if (v == 0) {||| 20 ans += arr[0];||| 21 for (int i = 1; i < n; ++i) {||| 22 if (arr[i] == 1) {||| 23 ans += arr[i] + 4 * arr[i - 1];||| 24 }||| 25 }||| 26 cout << ans << endl;||| 27 }||| 28 }||| 29 int main() {||| 30 cin >> t;||| 31 for (int z = 0; z < t; ++z) {||| 32 cf();||| 33 }||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t, v;||| 4 int arr[100];||| 5 void cf() {||| 6 cin >> n;||| 7 v = 0;||| 8 for (int i = 0; i < n; ++i) {||| 9 cin >> arr[i];||| 10 }||| 11 for (int i = 0; i < n - 1; ++i) {||| 12 if (arr[i] == 0 && arr[i + 1] == 0) {||| 13 cout << -1 << endl;||| 14 v = 1;||| 15 }||| 16 }||| 17 int ans = 1;||| 18 if (v == 0) {||| 19 ans += arr[0];||| 20 for (int i = 1; i < n; ++i) {||| 21 if (arr[i] == 1) {||| 22 ans += arr[i] + 4 * arr[i - 1];||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 }||| 28 int main() {||| 29 cin >> t;||| 30 for (int z = 0; z < t; ++z) {||| 31 cf();||| 32 }||| 33 }||| 	15 break;
46	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 long long int a[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 long long int count = 0, num = INT_MIN;||| 14 long long int maxn = *max_element(a, a + n);||| 15 if (a[n - 1] == maxn) {||| 16 cout << ""0\n"";||| 17 } else {||| 18 for (int i = n - 1; i >= 0; i--) {||| 19 if (a[i] == maxn) {||| 20 break;||| 21 } else if (a[i] > num) {||| 22 count++;||| 23 num = a[i];||| 24 }||| 25 }||| 26 cout << count << endl;||| 27 }||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 long long int a[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 long long int count = 0, num = INT_MIN;||| 14 long long int maxn = *max_element(a, a + n);||| 15 if (a[n - 1] == maxn) {||| 16 cout << ""0"";||| 17 } else {||| 18 for (int i = n - 1; i >= 0; i--) {||| 19 if (a[i] == maxn) {||| 20 break;||| 21 } else if (a[i] > num) {||| 22 count++;||| 23 num = a[i];||| 24 }||| 25 }||| 26 cout << count << endl;||| 27 }||| 28 }||| 29 }||| "	"16 cout << ""0\n"";"
46	110	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n;||| 10 cin >> n;||| 11 int a[n];||| 12 int itr, maxa = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 if (a[i] >= maxa) {||| 16 maxa = a[i];||| 17 itr = i;||| 18 }||| 19 }||| 20 int br = 0, maxbr = a[n - 1];||| 21 for (int i = n - 1; i >= itr; i--) {||| 22 if (maxbr < a[i]) br++;||| 23 maxbr = max(a[i], maxbr);||| 24 }||| 25 cout << br << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n;||| 10 cin >> n;||| 11 int a[n];||| 12 int itr, maxa = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 if (a[i] >= maxa) {||| 16 maxa = a[i];||| 17 itr = i;||| 18 }||| 19 }||| 20 int br = 0, maxbr = a[n - 1];||| 21 for (int i = n - 1; i > itr; i--) {||| 22 if (maxbr <= a[i]) br++;||| 23 maxbr = max(a[i], maxbr);||| 24 }||| 25 cout << br << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	21 for (int i = n - 1; i >= itr; i--) {
46	77	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 stable_sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200100];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	6 } x[200010];
46	100	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 stable_sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, ans, mpos;||| 4 struct node {||| 5 int a, id;||| 6 } x[200010];||| 7 bool cmp(node a, node b) { return a.a < b.a; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n;||| 12 ans = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> x[i].a;||| 15 x[i].id = i;||| 16 }||| 17 sort(x + 1, x + n + 1, cmp);||| 18 mpos = x[n].id;||| 19 for (int i = n - 1; i >= 1; i--) {||| 20 if (x[i].id > mpos) {||| 21 ans++;||| 22 mpos = x[i].id;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 return 0;||| 28 }||| 	17 stable_sort(x + 1, x + n + 1, cmp);
46	208	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const int64_t longinf = LLONG_MAX - 100000;||| 5 const long long inf = INT_MAX;||| 6 long long pw(long long x, long long y, long long p = longinf) {||| 7 long long res = 1;||| 8 x = x % p;||| 9 if (x == 0) return 0;||| 10 while (y > 0) {||| 11 if (y & 1) res = (res * x) % p;||| 12 y = y >> 1;||| 13 x = (x * x) % p;||| 14 }||| 15 return res;||| 16 }||| 17 long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); }||| 18 long long cl(long long a, long long x) {||| 19 return a % x == 0 ? a / x : a / x + 1;||| 20 }||| 21 void run_time_terror(long long case_no = 0) {||| 22 long long n;||| 23 cin >> n;||| 24 vector<long long> a(n);||| 25 for (long long i = 0; i < n; ++i) {||| 26 cin >> a[i];||| 27 }||| 28 long long mx = -1;||| 29 for (long long i = 0; i < n; ++i) {||| 30 mx = max(mx, a[i]);||| 31 }||| 32 vector<long long> b;||| 33 b.push_back(a[0]);||| 34 for (long long i = 1; i < n; ++i) {||| 35 while (b.size() and b.back() <= a[i]) {||| 36 b.pop_back();||| 37 }||| 38 b.push_back(a[i]);||| 39 }||| 40 cout << b.size() - 1 << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0), cout.setf(ios::fixed);||| 45 cout << setprecision(0);||| 46 long long tt = 1;||| 47 cin >> tt;||| 48 for (long long case_no = 1; case_no <= tt; case_no++) {||| 49 run_time_terror(case_no);||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const int64_t longinf = LLONG_MAX - 100000;||| 5 const long long inf = INT_MAX;||| 6 long long pw(long long x, long long y, long long p = longinf) {||| 7 long long res = 1;||| 8 x = x % p;||| 9 if (x == 0) return 0;||| 10 while (y > 0) {||| 11 if (y & 1) res = (res * x) % p;||| 12 y = y >> 1;||| 13 x = (x * x) % p;||| 14 }||| 15 return res;||| 16 }||| 17 long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); }||| 18 long long cl(long long a, long long x) {||| 19 return a % x == 0 ? a / x : a / x + 1;||| 20 }||| 21 void run_time_terror(long long case_no = 0) {||| 22 long long n;||| 23 cin >> n;||| 24 vector<long long> a(n);||| 25 for (long long i = 0; i < n; ++i) {||| 26 cin >> a[i];||| 27 }||| 28 long long mx = -1;||| 29 for (long long i = 0; i < n; ++i) {||| 30 mx = max(mx, a[i]);||| 31 }||| 32 vector<long long> b;||| 33 b.push_back(a[0]);||| 34 for (long long i = 1; i < n; ++i) {||| 35 while (b.size() and b.back() < a[i]) {||| 36 b.pop_back();||| 37 }||| 38 b.push_back(a[i]);||| 39 }||| 40 cout << b.size() - 1 << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0), cout.setf(ios::fixed);||| 45 cout << setprecision(0);||| 46 long long tt = 1;||| 47 cin >> tt;||| 48 for (long long case_no = 1; case_no <= tt; case_no++) {||| 49 run_time_terror(case_no);||| 50 }||| 51 return 0;||| 52 }||| "	35 while (b.size() and b.back() <= a[i]) {
46	98	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, cnt = 0;||| 5 cin >> n;||| 6 int arr[n];||| 7 for (int(i) = (0); (i) < (n); ++(i)) {||| 8 cin >> arr[i];||| 9 }||| 10 long long x = arr[n - 1];||| 11 for (int i = n - 1; i >= 0; i--) {||| 12 if (arr[i] > x) {||| 13 cnt++;||| 14 x = arr[i];||| 15 }||| 16 if (i == 0) {||| 17 cout << cnt;||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 long long t;||| 24 cin >> t;||| 25 while (t--) {||| 26 solve();||| 27 cout << endl;||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, cnt = 0;||| 5 cin >> n;||| 6 int arr[n];||| 7 for (int(i) = (0); (i) < (n); ++(i)) {||| 8 cin >> arr[i];||| 9 }||| 10 long long x = arr[n - 1];||| 11 for (int i = n - 2; i >= 0; i--) {||| 12 if (arr[i] > x) {||| 13 cnt++;||| 14 x = arr[i];||| 15 }||| 16 if (i == 0) {||| 17 cout << cnt;||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 long long t;||| 24 cin >> t;||| 25 while (t--) {||| 26 solve();||| 27 cout << endl;||| 28 }||| 29 return 0;||| 30 }||| 	11 for (int i = n - 1; i >= 0; i--) {
47	238	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 ;||| 10 long long int k;||| 11 cin >> k;||| 12 ;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 ;||| 16 vector<int> v, r;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] > 0)||| 19 v.push_back(a[i]);||| 20 else||| 21 r.push_back(abs(a[i]));||| 22 }||| 23 sort(v.begin(), v.end());||| 24 sort(r.begin(), r.end());||| 25 int w = v.size(), y = r.size();||| 26 long long int ans = 0;||| 27 int i = w - 1, i1 = y - 1;||| 28 while (1) {||| 29 if (i < 0) break;||| 30 if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1]))||| 31 ans += v[i];||| 32 else if (i == w - 1 && y == 0)||| 33 ans += v[i];||| 34 else||| 35 ans += 2 * v[i];||| 36 i = i - k;||| 37 if (i < 0) break;||| 38 }||| 39 while (1) {||| 40 if (i1 < 0) break;||| 41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1]))||| 42 ans += r[i1];||| 43 else if (i1 == y - 1 && w == 0)||| 44 ans += r[i1];||| 45 else||| 46 ans += 2 * r[i1];||| 47 i1 = i1 - k;||| 48 if (i1 < 0) break;||| 49 }||| 50 cout << ans << endl;||| 51 }||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 ;||| 10 long long int k;||| 11 cin >> k;||| 12 ;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 ;||| 16 vector<int> v, r;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] > 0)||| 19 v.push_back(a[i]);||| 20 else||| 21 r.push_back(abs(a[i]));||| 22 }||| 23 sort(v.begin(), v.end());||| 24 sort(r.begin(), r.end());||| 25 int w = v.size(), y = r.size();||| 26 long long int ans = 0;||| 27 int i = w - 1, i1 = y - 1;||| 28 while (1) {||| 29 if (i < 0) break;||| 30 if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1]))||| 31 ans += v[i];||| 32 else if (i == w - 1 && y == 0)||| 33 ans += v[i];||| 34 else||| 35 ans += 2 * v[i];||| 36 i = i - k;||| 37 if (i < 0) break;||| 38 }||| 39 while (1) {||| 40 if (i1 < 0) break;||| 41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] < r[y - 1]))||| 42 ans += r[i1];||| 43 else if (i1 == y - 1 && w == 0)||| 44 ans += r[i1];||| 45 else||| 46 ans += 2 * r[i1];||| 47 i1 = i1 - k;||| 48 if (i1 < 0) break;||| 49 }||| 50 cout << ans << endl;||| 51 }||| 52 }||| 	41 if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1]))
47	75	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 2 * 1e5 + 7;||| 4 const int INF = 1e10 + 7;||| 5 const int MOD = 1e9 + 7;||| 6 const int LOG = 22;||| 7 long long a[MAX_N];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 long long n, k;||| 16 cin >> n >> k;||| 17 for (int i = 0; i < n; i++) cin >> a[i];||| 18 sort(a, a + n);||| 19 vector<long long> v;||| 20 long long ans = 0, p = n;||| 21 for (int i = 0; i < n; i++) {||| 22 if (a[i] >= 0) {||| 23 p = i;||| 24 break;||| 25 }||| 26 }||| 27 long long MIN = INF, MAX = 0;||| 28 for (int i = 0; i < p; i += k) {||| 29 MIN = INF;||| 30 if (i + k - 1 >= p) {||| 31 for (int j = i; j < p; j++) MIN = min(MIN, a[j]);||| 32 } else {||| 33 for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]);||| 34 }||| 35 v.push_back(abs(MIN));||| 36 }||| 37 for (int i = n - 1; i >= p; i -= k) {||| 38 MAX = 0;||| 39 if (i - k + 1 < p) {||| 40 for (int j = i; j >= p; j--) MAX = max(MAX, a[j]);||| 41 } else {||| 42 for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]);||| 43 }||| 44 v.push_back(MAX);||| 45 }||| 46 sort(v.begin(), v.end());||| 47 for (int x : v) ans += (2 * x);||| 48 ans -= v[v.size() - 1];||| 49 cout << ans << '\n';||| 50 v.clear();||| 51 }||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 2 * 1e5 + 7;||| 4 const int INF = 1e10 + 7;||| 5 const int MOD = 1e9 + 7;||| 6 const int LOG = 22;||| 7 long long a[MAX_N];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 long long n, k;||| 16 cin >> n >> k;||| 17 for (int i = 0; i < n; i++) cin >> a[i];||| 18 sort(a, a + n);||| 19 vector<long long> v;||| 20 long long ans = 0, p = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (a[i] >= 0) {||| 23 p = i;||| 24 break;||| 25 }||| 26 }||| 27 long long MIN = INF, MAX = 0;||| 28 for (int i = 0; i < p; i += k) {||| 29 MIN = INF;||| 30 if (i + k - 1 >= p) {||| 31 for (int j = i; j < p; j++) MIN = min(MIN, a[j]);||| 32 } else {||| 33 for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]);||| 34 }||| 35 v.push_back(abs(MIN));||| 36 }||| 37 for (int i = n - 1; i >= p; i -= k) {||| 38 MAX = 0;||| 39 if (i - k + 1 < p) {||| 40 for (int j = i; j >= p; j--) MAX = max(MAX, a[j]);||| 41 } else {||| 42 for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]);||| 43 }||| 44 v.push_back(MAX);||| 45 }||| 46 sort(v.begin(), v.end());||| 47 for (int x : v) ans += (2 * x);||| 48 ans -= v[v.size() - 1];||| 49 cout << ans << '\n';||| 50 v.clear();||| 51 }||| 52 }||| 	20 long long ans = 0, p = n;
48	73	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 long long merge(long long arr[], long long l, long long mid, long long r) {||| 7 long long ans = 0;||| 8 long long n1 = mid - l + 1;||| 9 long long n2 = r - mid;||| 10 long long a[n1];||| 11 long long b[n2];||| 12 for (long long i = 0; i < n1; i++) {||| 13 a[i] = arr[l + i];||| 14 }||| 15 for (long long i = 0; i < n2; i++) {||| 16 b[i] = arr[mid + 1 + i];||| 17 }||| 18 long long i = 0;||| 19 long long j = 0;||| 20 long long k = l;||| 21 while (i < n1 && j < n2) {||| 22 if (a[i] <= b[j]) {||| 23 arr[k] = a[i];||| 24 k++;||| 25 i++;||| 26 } else {||| 27 ans += n1 - i;||| 28 arr[k] = b[j];||| 29 k++;||| 30 j++;||| 31 }||| 32 }||| 33 while (i < n1) {||| 34 arr[k] = a[i];||| 35 k++;||| 36 i++;||| 37 }||| 38 while (j < n2) {||| 39 arr[k] = b[j];||| 40 k++;||| 41 j++;||| 42 }||| 43 return ans;||| 44 }||| 45 long long inversion_count(long long arr[], long long l, long long r) {||| 46 long long ans = 0;||| 47 if (l < r) {||| 48 long long mid = (l + r) / 2;||| 49 ans += inversion_count(arr, l, mid);||| 50 ans += inversion_count(arr, mid + 1, r);||| 51 ans += merge(arr, l, mid, r);||| 52 }||| 53 return ans;||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 long long t;||| 60 cin >> t;||| 61 while (t--) {||| 62 long long n;||| 63 cin >> n;||| 64 long long v[n];||| 65 for (long long i = 0; i < n; i++) cin >> v[i];||| 66 bool ans = false;||| 67 long long inv = inversion_count(v, 0, n - 1);||| 68 if (inv % 2 == 0)||| 69 ans = true;||| 70 else {||| 71 sort(v, v + n);||| 72 for (long long i = 0; i < n - 1; i++)||| 73 if (v[i] == v[i + 1]) ans = true;||| 74 }||| 75 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 long long merge(long long arr[], long long l, long long mid, long long r) {||| 7 long long ans = 0;||| 8 long long n1 = mid - l + 1;||| 9 long long n2 = r - mid;||| 10 long long a[n1];||| 11 long long b[n2];||| 12 for (long long i = 0; i < n1; i++) {||| 13 a[i] = arr[l + i];||| 14 }||| 15 for (long long i = 0; i < n2; i++) {||| 16 b[i] = arr[mid + 1 + i];||| 17 }||| 18 long long i = 0;||| 19 long long j = 0;||| 20 long long k = l;||| 21 while (i < n1 && j < n2) {||| 22 if (a[i] <= b[j]) {||| 23 arr[k] = a[i];||| 24 k++;||| 25 i++;||| 26 } else {||| 27 ans += n1 - i;||| 28 arr[k] = b[j];||| 29 k++;||| 30 j++;||| 31 }||| 32 }||| 33 while (i < n1) {||| 34 arr[k] = a[i];||| 35 k++;||| 36 i++;||| 37 }||| 38 while (j < n2) {||| 39 arr[k] = b[j];||| 40 k++;||| 41 j++;||| 42 }||| 43 return ans;||| 44 }||| 45 long long inversion_count(long long arr[], long long l, long long r) {||| 46 long long ans = 0;||| 47 if (l < r) {||| 48 long long mid = (l + r) / 2;||| 49 ans += inversion_count(arr, l, mid);||| 50 ans += inversion_count(arr, mid + 1, r);||| 51 ans += merge(arr, l, mid, r);||| 52 }||| 53 return ans;||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 long long t;||| 60 cin >> t;||| 61 while (t--) {||| 62 long long n;||| 63 cin >> n;||| 64 long long v[n];||| 65 for (long long i = 0; i < n; i++) cin >> v[i];||| 66 bool ans = false;||| 67 long long inv = inversion_count(v, 0, n);||| 68 if (inv % 2 == 0)||| 69 ans = true;||| 70 else {||| 71 sort(v, v + n);||| 72 for (long long i = 0; i < n - 1; i++)||| 73 if (v[i] == v[i + 1]) ans = true;||| 74 }||| 75 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 76 }||| 77 return 0;||| 78 }||| "	67 long long inv = inversion_count(v, 0, n - 1);
48	139	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 500000 + 50;||| 4 int T, n, h[maxn], f[maxn], tot, ti[maxn];||| 5 int ans, sum;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 for (int oo = 1; oo <= T; ++oo) {||| 9 scanf(""%d"", &n);||| 10 tot = 0;||| 11 vector<bool> used(n);||| 12 vector<set<int>> gi(n), ed(n);||| 13 vector<int> seet;||| 14 ans = 0, sum = 0;||| 15 for (int i = 0; i < n; i++) f[i] = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 scanf(""%d"", &h[i]);||| 18 tot = max(tot, ++f[--h[i]]);||| 19 }||| 20 for (int i = 0; i < n; ++i) ti[i] = h[i];||| 21 sort(h, h + n);||| 22 for (int i = 0; i < n; i++)||| 23 if (h[i] != ti[i])||| 24 gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i);||| 25 function<void(int)> dfs = [&](int u) {||| 26 ed[h[u]].erase(u);||| 27 sum++;||| 28 gi[ti[u]].erase(u);||| 29 if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin());||| 30 };||| 31 for (int i : seet)||| 32 if (gi[ti[i]].count(i)) {||| 33 sum = 0;||| 34 dfs(i);||| 35 if (sum % 2 == 0) ++ans;||| 36 }||| 37 bool p = 1;||| 38 if (tot > 1 || ans % 2 == 0) p = 0;||| 39 if (!p)||| 40 printf(""YES\n"");||| 41 else||| 42 printf(""NO\n"");||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 500000 + 50;||| 4 int T, n, h[maxn], f[maxn], tot, ti[maxn];||| 5 int ans, sum;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 for (int oo = 1; oo <= T; ++oo) {||| 9 scanf(""%d"", &n);||| 10 tot = 0;||| 11 vector<bool> used(n);||| 12 vector<set<int>> gi(n), ed(n);||| 13 vector<int> seet;||| 14 ans = 0, sum = 0;||| 15 for (int i = 0; i < n; i++) f[i] = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 scanf(""%d"", &h[i]);||| 18 tot = max(tot, f[--h[i]]++);||| 19 }||| 20 for (int i = 0; i < n; ++i) ti[i] = h[i];||| 21 sort(h, h + n);||| 22 for (int i = 0; i < n; i++)||| 23 if (h[i] != ti[i])||| 24 gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i);||| 25 function<void(int)> dfs = [&](int u) {||| 26 ed[h[u]].erase(u);||| 27 sum++;||| 28 gi[ti[u]].erase(u);||| 29 if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin());||| 30 };||| 31 for (int i : seet)||| 32 if (gi[ti[i]].count(i)) {||| 33 sum = 0;||| 34 dfs(i);||| 35 if (sum % 2 == 0) ++ans;||| 36 }||| 37 bool p = 1;||| 38 if (tot > 1 || ans % 2 == 0) p = 0;||| 39 if (!p)||| 40 printf(""YES\n"");||| 41 else||| 42 printf(""NO\n"");||| 43 }||| 44 return 0;||| 45 }||| "	18 tot = max(tot, ++f[--h[i]]);
48	152	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 int d[maxn];||| 5 unordered_map<int, int> mp;||| 6 struct node {||| 7 int id;||| 8 int va;||| 9 };||| 10 vector<node> vec;||| 11 bool cmp(node a, node b) { return a.va < b.va; }||| 12 bool vis[maxn];||| 13 int main() {||| 14 ios::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 vec.clear();||| 20 mp.clear();||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 mp[x]++;||| 27 vis[i] = 0;||| 28 vec.push_back({i, x});||| 29 }||| 30 bool flag = false;||| 31 for (auto i : mp) {||| 32 if (i.second >= 2) {||| 33 cout << ""YES"" << '\n';||| 34 ;||| 35 flag = true;||| 36 break;||| 37 }||| 38 }||| 39 if (flag) continue;||| 40 sort(vec.begin(), vec.end(), cmp);||| 41 for (int i = 0; i < n; i++) {||| 42 d[vec[i].id] = i + 1;||| 43 }||| 44 int cnt = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 if (vis[i]) continue;||| 47 int to = i;||| 48 vis[to] = true;||| 49 to = d[to];||| 50 int ta = 1;||| 51 while (to != i) {||| 52 vis[to] = true;||| 53 ta++;||| 54 to = d[to];||| 55 }||| 56 if (ta & 1)||| 57 ;||| 58 else||| 59 cnt++;||| 60 }||| 61 cout << ((cnt & 1) ? ""NO"" : ""YES"") << '\n';||| 62 ;||| 63 }||| 64 return 0;||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 int d[maxn];||| 5 unordered_map<int, int> mp;||| 6 struct node {||| 7 int id;||| 8 int va;||| 9 };||| 10 vector<node> vec;||| 11 bool cmp(node a, node b) { return a.va < b.va; }||| 12 bool vis[maxn];||| 13 int main() {||| 14 ios::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 vec.clear();||| 20 mp.clear();||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 mp[x]++;||| 27 vis[i] = 0;||| 28 vec.push_back({i, x});||| 29 }||| 30 bool flag = false;||| 31 for (auto i : mp) {||| 32 if (i.second >= 2) {||| 33 cout << ""NO"" << '\n';||| 34 ;||| 35 flag = true;||| 36 break;||| 37 }||| 38 }||| 39 if (flag) continue;||| 40 sort(vec.begin(), vec.end(), cmp);||| 41 for (int i = 0; i < n; i++) {||| 42 d[vec[i].id] = i + 1;||| 43 }||| 44 int cnt = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 if (vis[i]) continue;||| 47 int to = i;||| 48 vis[to] = true;||| 49 to = d[to];||| 50 int ta = 1;||| 51 while (to != i) {||| 52 vis[to] = true;||| 53 ta++;||| 54 to = d[to];||| 55 }||| 56 if (ta & 1)||| 57 ;||| 58 else||| 59 cnt++;||| 60 }||| 61 cout << ((cnt & 1) ? ""NO"" : ""YES"") << '\n';||| 62 ;||| 63 }||| 64 return 0;||| 65 }||| "	"33 cout << ""YES"" << '\n';"
48	80	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007;||| 4 long long q, n, a[NMX], A[NMX], kq;||| 5 bool dd[NMX], YES;||| 6 void update(long long x) {||| 7 while (x > 0) {||| 8 A[x]++;||| 9 x -= ((x) & (-(x)));||| 10 }||| 11 }||| 12 long long get(long long x) {||| 13 long long res = 0;||| 14 while (x <= n) {||| 15 res += A[x];||| 16 x += ((x) & (-(x)));||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 cout.tie(NULL);||| 24 cin >> q;||| 25 while (q--) {||| 26 cin >> n;||| 27 for (int i = 1; i <= (int)(n); i++) {||| 28 cin >> a[i];||| 29 A[i] = 0;||| 30 dd[i] = false;||| 31 }||| 32 YES = false;||| 33 for (int i = 1; i <= (int)(n); i++) {||| 34 if (dd[a[i]]) {||| 35 cout << ""YES\n"";||| 36 YES = true;||| 37 break;||| 38 }||| 39 dd[a[i]] = true;||| 40 }||| 41 if (YES) continue;||| 42 kq = 0;||| 43 for (int i = 1; i <= (int)(n); i++) {||| 44 kq += get(a[i] + 1);||| 45 update(a[i]);||| 46 }||| 47 cout << (kq % 2 == 0 ? ""YES\n"" : ""NO\n"");||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007;||| 4 long long q, n, a[NMX], A[NMX], kq;||| 5 bool dd[NMX], YES;||| 6 void update(long long x) {||| 7 while (x > 0) {||| 8 A[x]++;||| 9 x -= ((x) & (-(x)));||| 10 }||| 11 }||| 12 long long get(long long x) {||| 13 long long res = 0;||| 14 while (x < NMX) {||| 15 res += A[x];||| 16 x += ((x) & (-(x)));||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 cout.tie(NULL);||| 24 cin >> q;||| 25 while (q--) {||| 26 cin >> n;||| 27 for (int i = 1; i <= (int)(n); i++) {||| 28 cin >> a[i];||| 29 A[i] = 0;||| 30 dd[i] = false;||| 31 }||| 32 YES = false;||| 33 for (int i = 1; i <= (int)(n); i++) {||| 34 if (dd[a[i]]) {||| 35 cout << ""YES\n"";||| 36 YES = true;||| 37 break;||| 38 }||| 39 dd[a[i]] = true;||| 40 }||| 41 if (YES) continue;||| 42 kq = 0;||| 43 for (int i = 1; i <= (int)(n); i++) {||| 44 kq += get(a[i] + 1);||| 45 update(a[i]);||| 46 }||| 47 cout << (kq % 2 == 0 ? ""YES\n"" : ""NO\n"");||| 48 }||| 49 return 0;||| 50 }||| "	14 while (x <= n) {
48	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 template <typename T>||| 22 void read(T &x) {||| 23 cin >> x;||| 24 }||| 25 template <typename T, typename U>||| 26 void read(T &x, U &y) {||| 27 cin >> x >> y;||| 28 }||| 29 template <typename T>||| 30 void read(vector<T> &a) {||| 31 for (T &x : a) read(x);||| 32 }||| 33 template <typename T>||| 34 T cd(T u, T v) {||| 35 return (u + v - 1) / v;||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 read(n);||| 40 vector<long long> a(n);||| 41 read(a);||| 42 auto v = a;||| 43 sort(v.begin(), v.end());||| 44 if (n <= 2) {||| 45 cout << (a == v ? ""YES\n"" : ""NO\n"");||| 46 return;||| 47 }||| 48 map<long long, set<long long>> mp;||| 49 for (long long i = 0; i < n; i++) mp[a[i]].insert(i);||| 50 for (long long i = 0; i < n - 2; i++) {||| 51 if (a[i] == v[i]) {||| 52 mp[a[i]].erase(i);||| 53 } else {||| 54 long long j = *mp[v[i]].begin();||| 55 long long k = (j == n - 1) ? n - 2 : n - 1;||| 56 mp[a[i]].erase(i);||| 57 mp[a[k]].erase(k);||| 58 mp[a[j]].erase(j);||| 59 long long temp = a[i];||| 60 a[i] = a[j];||| 61 a[j] = a[k];||| 62 a[k] = temp;||| 63 mp[a[k]].insert(k);||| 64 mp[a[j]].insert(j);||| 65 assert(set<long long>({i, j, k}).size() == 3);||| 66 }||| 67 debug() << "" [""||| 68 << ""mp""||| 69 "": ""||| 70 << (mp) << ""] "";||| 71 }||| 72 long long mx = 0;||| 73 for (long long i = 0; i < n - 2; i++) mx = max(mx, a[i]);||| 74 if (mx > min(a[n - 1], a[n - 2])) {||| 75 cout << ""NO\n"";||| 76 return;||| 77 }||| 78 for (long long i = n - 2; i < n; i++) {||| 79 if (a[i] != v[i]) {||| 80 map<long long, long long> mpp;||| 81 for (long long j = 0; j < n; j++) mpp[a[j]]++;||| 82 for (auto &p : mpp) {||| 83 if (p.second >= 2) {||| 84 cout << ""YES\n"";||| 85 return;||| 86 }||| 87 }||| 88 cout << ""NO\n"";||| 89 return;||| 90 }||| 91 }||| 92 assert(is_sorted(a.begin(), a.end()));||| 93 cout << ""YES\n"";||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(NULL);||| 98 long long t = 1;||| 99 read(t);||| 100 for (long long testcase = 1; testcase <= t; testcase++) {||| 101 solve();||| 102 }||| 103 return 0;||| 104 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class c>||| 4 struct rge {||| 5 c b, e;||| 6 };||| 7 template <class c>||| 8 rge<c> range(c i, c j) {||| 9 return rge<c>{i, j};||| 10 }||| 11 template <class c>||| 12 auto dud(c *x) -> decltype(cerr << *x, 0);||| 13 template <class c>||| 14 char dud(...);||| 15 struct debug {||| 16 template <class c>||| 17 debug &operator<<(const c &) {||| 18 return *this;||| 19 }||| 20 };||| 21 template <typename T>||| 22 void read(T &x) {||| 23 cin >> x;||| 24 }||| 25 template <typename T, typename U>||| 26 void read(T &x, U &y) {||| 27 cin >> x >> y;||| 28 }||| 29 template <typename T>||| 30 void read(vector<T> &a) {||| 31 for (T &x : a) read(x);||| 32 }||| 33 template <typename T>||| 34 T cd(T u, T v) {||| 35 return (u + v - 1) / v;||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 read(n);||| 40 vector<long long> a(n);||| 41 read(a);||| 42 auto v = a;||| 43 sort(v.begin(), v.end());||| 44 if (n <= 2) {||| 45 cout << (a == v ? ""YES\n"" : ""NO\n"");||| 46 return;||| 47 }||| 48 map<long long, set<long long>> mp;||| 49 for (long long i = 0; i < n; i++) mp[a[i]].insert(i);||| 50 for (long long i = 0; i < n - 2; i++) {||| 51 if (a[i] == v[i]) {||| 52 mp[a[i]].erase(i);||| 53 } else {||| 54 long long j = *mp[v[i]].begin();||| 55 long long k = (j == n - 1) ? n - 2 : n - 1;||| 56 mp[a[i]].erase(i);||| 57 mp[a[k]].erase(k);||| 58 mp[a[j]].erase(j);||| 59 long long temp = a[i];||| 60 a[i] = a[j];||| 61 a[j] = a[k];||| 62 a[k] = temp;||| 63 mp[a[k]].insert(k);||| 64 mp[a[j]].insert(j);||| 65 assert(set<long long>({i, j, k}).size() == 3);||| 66 }||| 67 debug() << "" [""||| 68 << ""mp""||| 69 "": ""||| 70 << (mp) << ""] "";||| 71 }||| 72 long long mx = 0;||| 73 for (long long i = 0; i < n - 2; i++) mx = max(mx, a[i]);||| 74 if (mx > min(a[n - 1], a[n - 2])) {||| 75 cout << ""NO\n"";||| 76 return;||| 77 }||| 78 for (long long i = n - 2; i < n; i++) {||| 79 if (a[i] != v[i]) {||| 80 map<long long, long long> mpp;||| 81 for (long long j = 0; j < n - 2; j++) mpp[a[j]]++;||| 82 for (auto &p : mpp) {||| 83 if (p.second >= 2) {||| 84 cout << ""YES\n"";||| 85 return;||| 86 }||| 87 }||| 88 cout << ""NO\n"";||| 89 return;||| 90 }||| 91 }||| 92 assert(is_sorted(a.begin(), a.end()));||| 93 cout << ""YES\n"";||| 94 }||| 95 int32_t main() {||| 96 ios_base::sync_with_stdio(false);||| 97 cin.tie(NULL);||| 98 long long t = 1;||| 99 read(t);||| 100 for (long long testcase = 1; testcase <= t; testcase++) {||| 101 solve();||| 102 }||| 103 return 0;||| 104 }||| "	81 for (long long j = 0; j < n; j++) mpp[a[j]]++;
48	125	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd;||| 4 struct node {||| 5 node *l = 0, *r = 0;||| 6 int x, y, siz;||| 7 node(int x) : x(x), y(rnd()), siz(1) {}||| 8 };||| 9 int size(node *t) {||| 10 if (!t) return 0;||| 11 return t->siz;||| 12 }||| 13 void update(node *t) { t->siz = size(t->l) + size(t->r) + 1; }||| 14 pair<node *, node *> split(node *t, int x) {||| 15 if (!t) return {0, 0};||| 16 if (t->x <= x) {||| 17 auto p = split(t->r, x);||| 18 t->r = p.first;||| 19 update(t);||| 20 return {t, p.second};||| 21 } else {||| 22 auto p = split(t->l, x);||| 23 t->l = p.second;||| 24 update(t);||| 25 return {p.first, t};||| 26 }||| 27 }||| 28 node *merge(node *a, node *b) {||| 29 if (!a) return b;||| 30 if (!b) return a;||| 31 if (a->y > b->y) {||| 32 a->r = merge(a->r, b);||| 33 update(a);||| 34 return a;||| 35 } else {||| 36 b->l = merge(a, b->l);||| 37 update(b);||| 38 return b;||| 39 }||| 40 }||| 41 node *insert(node *t, node *in) {||| 42 if (!t) return in;||| 43 if (in->y > t->y) {||| 44 auto p = split(t, in->x);||| 45 in->l = p.first;||| 46 in->r = p.second;||| 47 update(in);||| 48 return in;||| 49 }||| 50 if (in->x < t->x) {||| 51 t->l = insert(t->l, in);||| 52 } else {||| 53 t->r = insert(t->r, in);||| 54 }||| 55 update(t);||| 56 return t;||| 57 }||| 58 int main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int t;||| 63 cin >> t;||| 64 for (int useless = 0; useless < t; useless++) {||| 65 int n;||| 66 cin >> n;||| 67 vector<int> a(n);||| 68 for (int i = 0; i < n; i++) cin >> a[i];||| 69 node *t = 0;||| 70 vector<int> a_srt(n);||| 71 copy(a.begin(), a.end(), a_srt.begin());||| 72 sort(a_srt.begin(), a_srt.end());||| 73 bool good = false;||| 74 for (int i = 1; i < n; i++) {||| 75 if (a_srt[i] == a_srt[i - 1]) {||| 76 cout << ""YES\n"";||| 77 good = true;||| 78 break;||| 79 }||| 80 }||| 81 if (good) continue;||| 82 bool dp_all = true;||| 83 t = insert(t, new node(a[0]));||| 84 for (int i = 1; i < n; i++) {||| 85 auto p = split(t, a[i]);||| 86 if (size(p.second) % 2) {||| 87 dp_all = !dp_all;||| 88 }||| 89 t = merge(p.first, p.second);||| 90 t = insert(t, new node(a[i]));||| 91 }||| 92 if (dp_all)||| 93 cout << ""YES\n"";||| 94 else||| 95 cout << ""NO\n"";||| 96 }||| 97 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd;||| 4 struct node {||| 5 node *l = 0, *r = 0;||| 6 int x, y, siz;||| 7 node(int x) : x(x), y(rnd()), siz(1) {}||| 8 };||| 9 int size(node *t) {||| 10 if (!t) return 0;||| 11 return t->siz;||| 12 }||| 13 void update(node *t) { t->siz = size(t->l) + size(t->r) + 1; }||| 14 pair<node *, node *> split(node *t, int x) {||| 15 if (!t) return {0, 0};||| 16 if (t->x <= x) {||| 17 auto p = split(t->r, x);||| 18 t->r = p.first;||| 19 update(t);||| 20 return {t, p.second};||| 21 } else {||| 22 auto p = split(t->l, x);||| 23 t->l = p.second;||| 24 update(t);||| 25 return {p.first, t};||| 26 }||| 27 }||| 28 node *merge(node *a, node *b) {||| 29 if (!a) return b;||| 30 if (!b) return a;||| 31 if (a->y > b->y) {||| 32 a->r = merge(a->r, b);||| 33 update(a);||| 34 return a;||| 35 } else {||| 36 b->l = merge(a, b->l);||| 37 update(b);||| 38 return b;||| 39 }||| 40 }||| 41 node *insert(node *t, node *in) {||| 42 if (!t) return in;||| 43 if (in->y > t->y) {||| 44 auto p = split(t, in->x);||| 45 in->l = p.first;||| 46 in->r = p.second;||| 47 update(in);||| 48 return in;||| 49 }||| 50 if (in->x < t->x) {||| 51 t->l = insert(t->l, in);||| 52 } else {||| 53 t->r = insert(t->r, in);||| 54 }||| 55 update(t);||| 56 return t;||| 57 }||| 58 int main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int t;||| 63 cin >> t;||| 64 for (int useless = 0; useless < t; useless++) {||| 65 int n;||| 66 cin >> n;||| 67 vector<int> a(n);||| 68 for (int i = 0; i < n; i++) cin >> a[i];||| 69 node *t = 0;||| 70 vector<int> a_srt(n);||| 71 copy(a.begin(), a.end(), a_srt.begin());||| 72 sort(a_srt.begin(), a_srt.end());||| 73 bool good = false;||| 74 for (int i = 1; i < n; i++) {||| 75 if (a[i] == a[i - 1]) {||| 76 cout << ""YES\n"";||| 77 good = true;||| 78 break;||| 79 }||| 80 }||| 81 if (good) continue;||| 82 bool dp_all = true;||| 83 t = insert(t, new node(a[0]));||| 84 for (int i = 1; i < n; i++) {||| 85 auto p = split(t, a[i]);||| 86 if (size(p.second) % 2) {||| 87 dp_all = !dp_all;||| 88 }||| 89 t = merge(p.first, p.second);||| 90 t = insert(t, new node(a[i]));||| 91 }||| 92 if (dp_all)||| 93 cout << ""YES\n"";||| 94 else||| 95 cout << ""NO\n"";||| 96 }||| 97 }||| "	75 if (a_srt[i] == a_srt[i - 1]) {
61	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T read() {||| 5 T re = 0;||| 6 char c = getchar();||| 7 bool negt = false;||| 8 while (c < '0' || c > '9') negt |= (c == '-'), c = getchar();||| 9 while (c >= '0' && c <= '9')||| 10 re = (re << 1) + (re << 3) + c - '0', c = getchar();||| 11 return negt ? -re : re;||| 12 }||| 13 const int N = 2e5 + 10;||| 14 int a[N], b[N];||| 15 long long cnt1[N], cnt2[N];||| 16 map<pair<int, int>, int> cnt3;||| 17 long long n;||| 18 void solve() {||| 19 long long ans = 0;||| 20 n = read<int>();||| 21 for (int i = 1; i <= n; i++) a[i] = read<int>(), b[i] = read<int>();||| 22 for (int i = 1; i <= n; i++) cnt1[i] = cnt2[i] = 0;||| 23 for (int i = 1; i <= n; i++)||| 24 ++cnt1[a[i]], ++cnt2[b[i]], ++cnt3[make_pair(a[i], b[i])];||| 25 long long add = 0;||| 26 add += n * (n - 1) * (n - 2) / 6;||| 27 for (int i = 1; i <= n; i++)||| 28 if (cnt1[i] != 0) {||| 29 add -= (cnt1[i] - 1) * cnt1[i] * (n - cnt1[i]) / 2;||| 30 add -= (cnt1[i] - 2) * (cnt1[i] - 1) * cnt1[i] / 6;||| 31 }||| 32 add += n * (n - 1) * (n - 2) / 6;||| 33 for (int i = 1; i <= n; i++)||| 34 if (cnt2[i] != 0) {||| 35 add -= (cnt2[i] - 1) * cnt2[i] * (n - cnt2[i]) / 2;||| 36 add -= (cnt2[i] - 2) * (cnt2[i] - 1) * cnt2[i] / 6;||| 37 }||| 38 long long minus = n * (n - 1) * (n - 2) / 6;||| 39 for (int i = 1; i <= n; i++) minus -= (cnt1[a[i]] - 1) * (cnt2[b[i]] - 1);||| 40 minus -= add;||| 41 printf(""%lld\n"", add + minus);||| 42 }||| 43 int main() {||| 44 int T = read<int>();||| 45 while (T--) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T read() {||| 5 T re = 0;||| 6 char c = getchar();||| 7 bool negt = false;||| 8 while (c < '0' || c > '9') negt |= (c == '-'), c = getchar();||| 9 while (c >= '0' && c <= '9')||| 10 re = (re << 1) + (re << 3) + c - '0', c = getchar();||| 11 return negt ? -re : re;||| 12 }||| 13 const int N = 2e5 + 10;||| 14 int a[N], b[N];||| 15 long long cnt1[N], cnt2[N];||| 16 map<pair<int, int>, int> cnt3;||| 17 int n;||| 18 void solve() {||| 19 long long ans = 0;||| 20 n = read<int>();||| 21 for (int i = 1; i <= n; i++) a[i] = read<int>(), b[i] = read<int>();||| 22 for (int i = 1; i <= n; i++) cnt1[i] = cnt2[i] = 0;||| 23 for (int i = 1; i <= n; i++)||| 24 ++cnt1[a[i]], ++cnt2[b[i]], ++cnt3[make_pair(a[i], b[i])];||| 25 long long add = 0;||| 26 add += n * (n - 1) * (n - 2) / 6;||| 27 for (int i = 1; i <= n; i++)||| 28 if (cnt1[i] != 0) {||| 29 add -= (cnt1[i] - 1) * cnt1[i] * (n - cnt1[i]) / 2;||| 30 add -= (cnt1[i] - 2) * (cnt1[i] - 1) * cnt1[i] / 6;||| 31 }||| 32 add += n * (n - 1) * (n - 2) / 6;||| 33 for (int i = 1; i <= n; i++)||| 34 if (cnt2[i] != 0) {||| 35 add -= (cnt2[i] - 1) * cnt2[i] * (n - cnt2[i]) / 2;||| 36 add -= (cnt2[i] - 2) * (cnt2[i] - 1) * cnt2[i] / 6;||| 37 }||| 38 long long minus = n * (n - 1) * (n - 2) / 6;||| 39 for (int i = 1; i <= n; i++) minus -= (cnt1[a[i]] - 1) * (cnt2[b[i]] - 1);||| 40 minus -= add;||| 41 printf(""%lld\n"", add + minus);||| 42 }||| 43 int main() {||| 44 int T = read<int>();||| 45 while (T--) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	17 long long n;
61	84	1 #include <bits/stdc++.h>||| 2 constexpr int maxn = 2e5 + 5;||| 3 constexpr int inf = 1e9;||| 4 constexpr int mod = 1e9 + 7;||| 5 using namespace std;||| 6 using lint = long long;||| 7 using pii = pair<int, int>;||| 8 int t, n, a[maxn], b[maxn];||| 9 lint ans;||| 10 map<int, int> ma, mb;||| 11 signed main() {||| 12 ios_base::sync_with_stdio(false);||| 13 cin.tie(nullptr);||| 14 cin >> t;||| 15 while (t--) {||| 16 cin >> n;||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> a[i] >> b[i];||| 19 ma[a[i]]++;||| 20 mb[b[i]]++;||| 21 }||| 22 ans = 1ll * n * (n - 1) * (n - 2) / 6;||| 23 for (int i = 0; i < n; i++) ans -= 1ll * (ma[a[i]] - 1) * (mb[b[i]] - 1);||| 24 cout << ans << '\n';||| 25 ma.clear();||| 26 mb.clear();||| 27 }||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 constexpr int maxn = 2e5 + 5;||| 3 constexpr int inf = 1e9;||| 4 constexpr int mod = 1e9 + 7;||| 5 using namespace std;||| 6 using lint = long long;||| 7 using pii = pair<int, int>;||| 8 int t, n, a[maxn], b[maxn];||| 9 lint ans;||| 10 map<int, int> ma, mb;||| 11 signed main() {||| 12 ios_base::sync_with_stdio(false);||| 13 cin.tie(nullptr);||| 14 cin >> t;||| 15 while (t--) {||| 16 cin >> n;||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> a[i] >> b[i];||| 19 ma[a[i]]++;||| 20 mb[b[i]]++;||| 21 }||| 22 ans = 1ll * n * (n - 1) * (n - 2) / 6;||| 23 for (int i = 0; i < n; i++) ans -= (ma[a[i]] - 1) * (mb[b[i]] - 1);||| 24 cout << ans << '\n';||| 25 ma.clear();||| 26 mb.clear();||| 27 }||| 28 }||| 	23 for (int i = 0; i < n; i++) ans -= 1ll * (ma[a[i]] - 1) * (mb[b[i]] - 1);
61	120	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<i64> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<int> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	10 vector<i64> A(n + 1, 0), B(n + 1, 0);
61	258	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<i64> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<int> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	7 i64 n;
61	181	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 ll n;||| 9 cin >> n;||| 10 ll ans = n * (n - 1) * (n - 2);||| 11 ans /= 6;||| 12 map<ll, ll> m_a;||| 13 map<ll, ll> m_b;||| 14 vector<pair<ll, ll>> v(n);||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> v[i].first >> v[i].second;||| 17 m_a[v[i].first]++;||| 18 m_b[v[i].second]++;||| 19 }||| 20 ll elem = 0;||| 21 for (int i = 0; i < n; ++i) {||| 22 elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1);||| 23 }||| 24 ans -= elem;||| 25 cout << ans << '\n';||| 26 }||| 27 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 ll ans = n * (n - 1) * (n - 2);||| 11 ans /= 6;||| 12 map<ll, ll> m_a;||| 13 map<ll, ll> m_b;||| 14 vector<pair<ll, ll>> v(n);||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> v[i].first >> v[i].second;||| 17 m_a[v[i].first]++;||| 18 m_b[v[i].second]++;||| 19 }||| 20 ll elem = 0;||| 21 for (int i = 0; i < n; ++i) {||| 22 elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1);||| 23 }||| 24 ans -= elem;||| 25 cout << ans << '\n';||| 26 }||| 27 }||| 	8 ll n;
61	224	"1 #include <bits/stdc++.h>||| 2 const int INF = 1e8;||| 3 const long long MOD = 1e9 + 7;||| 4 using namespace std;||| 5 bool cases = 1;||| 6 long long x[200005];||| 7 long long y[200005];||| 8 void solve(int nc) {||| 9 long long n, a, b;||| 10 cin >> n;||| 11 vector<pair<int, int> > v;||| 12 long long xd = 0, yd = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a >> b;||| 15 v.push_back(pair<int, int>(a, b));||| 16 if (x[a] == 0) xd++;||| 17 if (y[b] == 0) yd++;||| 18 x[a]++;||| 19 y[b]++;||| 20 }||| 21 long long ans = n * (n - 1) * (n - 2) / 6;||| 22 for (int i = 0; i < n; i++) {||| 23 a = v[i].first, b = v[i].second;||| 24 ans -= (x[a] - 1) * (y[b] - 1);||| 25 }||| 26 for (int i = 0; i < n; i++) {||| 27 a = v[i].first, b = v[i].second;||| 28 x[a] = y[b] = 0;||| 29 }||| 30 cout << ans;||| 31 cout << ""\n"";||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 int t = 1;||| 37 if (cases) cin >> t;||| 38 for (int nc = 1; nc < t + 1; nc++) solve(nc);||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 const int INF = 1e8;||| 3 const long long MOD = 1e9 + 7;||| 4 using namespace std;||| 5 bool cases = 1;||| 6 long long x[200005];||| 7 long long y[200005];||| 8 void solve(int nc) {||| 9 int n, a, b;||| 10 cin >> n;||| 11 vector<pair<int, int> > v;||| 12 long long xd = 0, yd = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a >> b;||| 15 v.push_back(pair<int, int>(a, b));||| 16 if (x[a] == 0) xd++;||| 17 if (y[b] == 0) yd++;||| 18 x[a]++;||| 19 y[b]++;||| 20 }||| 21 long long ans = n * (n - 1) * (n - 2) / 6;||| 22 for (int i = 0; i < n; i++) {||| 23 a = v[i].first, b = v[i].second;||| 24 ans -= (x[a] - 1) * (y[b] - 1);||| 25 }||| 26 for (int i = 0; i < n; i++) {||| 27 a = v[i].first, b = v[i].second;||| 28 x[a] = y[b] = 0;||| 29 }||| 30 cout << ans;||| 31 cout << ""\n"";||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 int t = 1;||| 37 if (cases) cin >> t;||| 38 for (int nc = 1; nc < t + 1; nc++) solve(nc);||| 39 return 0;||| 40 }||| "	9 long long n, a, b;
62	80	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t time_p = clock();||| 4 void time_taken() {||| 5 time_p = clock() - time_p;||| 6 cerr << ""Time Taken : "" << (float)(time_p) / CLOCKS_PER_SEC << ""\n"";||| 7 }||| 8 const long long mod = 1e9 + 7;||| 9 const long long INF = 1e18;||| 10 const int N = 1004;||| 11 int dp[N][N][2];||| 12 int main() {||| 13 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 14 int n, m, q;||| 15 cin >> n >> m >> q;||| 16 vector<vector<int> > a(n, vector<int>(m));||| 17 memset(dp, 0, sizeof(dp));||| 18 dp[n - 1][m - 1][1] = 1;||| 19 dp[n - 1][m - 1][0] = 1;||| 20 int ans = 0;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 for (int j = m - 1; j >= 0; j--) {||| 23 dp[i][j][0] = 1;||| 24 if (j + 1 < m) dp[i][j][0] += dp[i][j + 1][1];||| 25 dp[i][j][1] = 1;||| 26 if (i + 1 < n) dp[i][j][1] += dp[i + 1][j][0];||| 27 ans += (dp[i][j][0] + dp[i][j][1] - 1);||| 28 }||| 29 };||| 30 auto upd = [&](int r, int c, int delta) {||| 31 if (delta == 0) return;||| 32 ans += delta;||| 33 dp[r][c][0] += delta;||| 34 r--;||| 35 while (r >= 0 and c >= 0) {||| 36 if (a[r][c] == 1) return;||| 37 dp[r][c][1] += delta;||| 38 ans += delta;||| 39 if (c) {||| 40 if (a[r][c - 1] == 1) return;||| 41 dp[r][c - 1][0] += delta;||| 42 ans += delta;||| 43 }||| 44 c--;||| 45 r--;||| 46 }||| 47 };||| 48 while (q--) {||| 49 int r, c;||| 50 cin >> r >> c, --r, --c;||| 51 a[r][c] ^= 1;||| 52 int delta = 0;||| 53 if (a[r][c] == 1) {||| 54 delta -= 1;||| 55 if (c + 1 < m) delta -= dp[r][c + 1][1];||| 56 } else {||| 57 delta += 1;||| 58 if (c + 1 < m) delta += dp[r][c + 1][1];||| 59 }||| 60 upd(r, c, delta);||| 61 delta = 0;||| 62 if (a[r][c] == 1) {||| 63 delta -= 1;||| 64 if (r + 1 < n) delta -= dp[r + 1][c][0];||| 65 } else {||| 66 delta += 1;||| 67 if (r + 1 < n) delta += dp[r + 1][c][0];||| 68 }||| 69 dp[r][c][1] += delta;||| 70 ans += delta;||| 71 if (c > 0 and a[r][c - 1] == 0) {||| 72 upd(r, c - 1, delta);||| 73 }||| 74 if (a[r][c] == 1) {||| 75 ans++;||| 76 } else||| 77 ans--;||| 78 cout << ans << '\n';||| 79 }||| 80 time_taken();||| 81 return 0;||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t time_p = clock();||| 4 void time_taken() {||| 5 time_p = clock() - time_p;||| 6 cerr << ""Time Taken : "" << (float)(time_p) / CLOCKS_PER_SEC << ""\n"";||| 7 }||| 8 const long long mod = 1e9 + 7;||| 9 const long long INF = 1e18;||| 10 const int N = 1004;||| 11 int dp[N][N][2];||| 12 int main() {||| 13 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 14 int n, m, q;||| 15 cin >> n >> m >> q;||| 16 vector<vector<int> > a(n, vector<int>(m));||| 17 memset(dp, 0, sizeof(dp));||| 18 dp[n - 1][m - 1][1] = 1;||| 19 dp[n - 1][m - 1][0] = 1;||| 20 int ans = 0;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 for (int j = m - 1; j >= 0; j--) {||| 23 dp[i][j][0] = 1;||| 24 if (j + 1 < m) dp[i][j][0] += dp[i][j + 1][1];||| 25 dp[i][j][1] = 1;||| 26 if (i + 1 < n) dp[i][j][1] += dp[i + 1][j][0];||| 27 ans += (dp[i][j][0] + dp[i][j][1] - 1);||| 28 }||| 29 };||| 30 auto upd = [&](int r, int c, int delta) {||| 31 if (delta == 0) return;||| 32 ans += delta;||| 33 dp[r][c][0] += delta;||| 34 r--;||| 35 while (r >= 0 and c >= 0) {||| 36 if (a[r][c] == 1) return;||| 37 dp[r][c][1] += delta;||| 38 ans += delta;||| 39 if (c) {||| 40 if (a[r][c - 1] == 1) return;||| 41 dp[r][c - 1][0] += delta;||| 42 ans += delta;||| 43 }||| 44 c--;||| 45 r--;||| 46 }||| 47 };||| 48 while (q--) {||| 49 int r, c;||| 50 cin >> r >> c, --r, --c;||| 51 a[r][c] ^= 1;||| 52 int delta = 0;||| 53 if (a[r][c] == 1) {||| 54 delta -= 1;||| 55 if (c + 1 < m) delta -= dp[r][c + 1][1];||| 56 } else {||| 57 delta += 1;||| 58 if (c + 1 < m) delta += dp[r][c + 1][1];||| 59 }||| 60 upd(r, c, delta);||| 61 delta = 0;||| 62 if (a[r][c] == 1) {||| 63 delta -= 1;||| 64 if (r + 1 < m) delta -= dp[r + 1][c][0];||| 65 } else {||| 66 delta += 1;||| 67 if (r + 1 < m) delta += dp[r + 1][c][0];||| 68 }||| 69 dp[r][c][1] += delta;||| 70 ans += delta;||| 71 if (c > 0 and a[r][c - 1] == 0) {||| 72 upd(r, c - 1, delta);||| 73 }||| 74 if (a[r][c] == 1) {||| 75 ans++;||| 76 } else||| 77 ans--;||| 78 cout << ans << '\n';||| 79 }||| 80 time_taken();||| 81 return 0;||| 82 }||| "	64 if (r + 1 < n) delta -= dp[r + 1][c][0];
62	27	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 int mmp[1010][1010];||| 5 long long ans = 0;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> n >> m >> q;||| 9 long long A = min(m, n), D = (m - n > 0) ? (m - n) : (n - m);||| 10 ans = 2ll * (A - 1ll) * (A) * (2ll * A - 1ll) / 3ll + A * (A - 1ll) +||| 11 D * A * (2ll * A - 1ll) + 1ll * n * m;||| 12 int x, y;||| 13 for (int i = 1; i <= q; i++) {||| 14 cin >> x >> y;||| 15 int xt = x, yt = y;||| 16 long long up = 0, down = 0;||| 17 for (int j = 1; j > -1; j++) {||| 18 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 19 xt--;||| 20 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 21 yt--;||| 22 else||| 23 break;||| 24 up++;||| 25 }||| 26 xt = x, yt = y;||| 27 for (int j = 0; j >= -1; j++) {||| 28 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 29 xt++;||| 30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)||| 31 yt++;||| 32 else||| 33 break;||| 34 down++;||| 35 }||| 36 if (mmp[x][y])||| 37 ans += (1ll * up * down + up + down + 1);||| 38 else||| 39 ans -= (1ll * up * down + up + down + 1);||| 40 xt = x, yt = y;||| 41 up = 0, down = 0;||| 42 for (int j = 0; j > -1; j++) {||| 43 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 44 xt--;||| 45 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 46 yt--;||| 47 else||| 48 break;||| 49 up++;||| 50 }||| 51 xt = x, yt = y;||| 52 for (int j = 1; j > -1; j++) {||| 53 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 54 xt++;||| 55 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)||| 56 yt++;||| 57 else||| 58 break;||| 59 down++;||| 60 }||| 61 if (mmp[x][y])||| 62 ans += (1ll * up * down + up + down + 1);||| 63 else||| 64 ans -= (1ll * up * down + up + down + 1);||| 65 if (mmp[x][y] == 0)||| 66 ans++;||| 67 else||| 68 ans--;||| 69 mmp[x][y] ^= 1;||| 70 cout << ans << endl;||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 int mmp[1010][1010];||| 5 long long ans = 0;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> n >> m >> q;||| 9 long long A = min(m, n), D = (m - n > 0) ? (m - n) : (n - m);||| 10 ans = 2ll * (A - 1ll) * (A) * (2ll * A - 1ll) / 3ll + A * (A - 1ll) +||| 11 D * A * (2ll * A - 1ll) + 1ll * n * m;||| 12 int x, y;||| 13 for (int i = 1; i <= q; i++) {||| 14 cin >> x >> y;||| 15 int xt = x, yt = y;||| 16 long long up = 0, down = 0;||| 17 for (int j = 1; j > -1; j++) {||| 18 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 19 xt--;||| 20 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 21 yt--;||| 22 else||| 23 break;||| 24 up++;||| 25 }||| 26 xt = x, yt = y;||| 27 for (int j = 0; j >= -1; j++) {||| 28 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 29 xt++;||| 30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= n)||| 31 yt++;||| 32 else||| 33 break;||| 34 down++;||| 35 }||| 36 if (mmp[x][y])||| 37 ans += (1ll * up * down + up + down + 1);||| 38 else||| 39 ans -= (1ll * up * down + up + down + 1);||| 40 xt = x, yt = y;||| 41 up = 0, down = 0;||| 42 for (int j = 0; j > -1; j++) {||| 43 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 44 xt--;||| 45 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 46 yt--;||| 47 else||| 48 break;||| 49 up++;||| 50 }||| 51 xt = x, yt = y;||| 52 for (int j = 1; j > -1; j++) {||| 53 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 54 xt++;||| 55 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= n)||| 56 yt++;||| 57 else||| 58 break;||| 59 down++;||| 60 }||| 61 if (mmp[x][y])||| 62 ans += (1ll * up * down + up + down + 1);||| 63 else||| 64 ans -= (1ll * up * down + up + down + 1);||| 65 if (mmp[x][y] == 0)||| 66 ans++;||| 67 else||| 68 ans--;||| 69 mmp[x][y] ^= 1;||| 70 cout << ans << endl;||| 71 }||| 72 return 0;||| 73 }||| 	30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)
62	21	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1005;||| 4 long long n, m, q, ans;||| 5 bool vizitat[N][N];||| 6 long long dp[N][N][2];||| 7 bool verifica(long long i, long long j) {||| 8 if (i < 1 || j < 1 || i > n || j > m) return false;||| 9 return true;||| 10 }||| 11 long long cnt(long long i, long long j) {||| 12 long long answer = 0;||| 13 for (long long it = 0; it <= 1; it++) {||| 14 long long up = 0;||| 15 long long lin = i;||| 16 long long col = j;||| 17 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 18 if (up % 2 == it) {||| 19 lin--;||| 20 } else {||| 21 col--;||| 22 }||| 23 up++;||| 24 }||| 25 long long down = 0;||| 26 lin = i;||| 27 col = j;||| 28 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 29 if (down % 2 == it) {||| 30 col++;||| 31 } else {||| 32 lin++;||| 33 }||| 34 down++;||| 35 }||| 36 answer += up * down;||| 37 }||| 38 answer--;||| 39 return answer;||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 cin >> n >> m >> q;||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 1; j <= m; j++) {||| 48 dp[i][j][1] = dp[i][j - 1][0] + 1;||| 49 dp[i][j][0] = dp[i - 1][j][1] + 1;||| 50 ans += dp[i][j][1];||| 51 ans += dp[i][j][0];||| 52 }||| 53 }||| 54 ans -= n * m;||| 55 while (q--) {||| 56 long long lin, col;||| 57 cin >> lin >> col;||| 58 if (vizitat[lin][col] == true) {||| 59 vizitat[lin][col] = false;||| 60 ans += cnt(lin, col);||| 61 } else {||| 62 ans -= cnt(lin, col);||| 63 vizitat[lin][col] = true;||| 64 }||| 65 cout << ans << '\n';||| 66 }||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1005;||| 4 long long n, m, q, ans;||| 5 bool vizitat[N][N];||| 6 long long dp[N][N][2];||| 7 bool verifica(long long i, long long j) {||| 8 if (i < 1 || j < 1 || i > n || j > m) return false;||| 9 return true;||| 10 }||| 11 long long cnt(long long i, long long j) {||| 12 long long answer = 0;||| 13 for (long long it = 0; it <= 1; it++) {||| 14 long long up = 0;||| 15 long long lin = i;||| 16 long long col = j;||| 17 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 18 if (up % 2 == it) {||| 19 lin--;||| 20 } else {||| 21 col--;||| 22 }||| 23 up++;||| 24 }||| 25 long long down = 0;||| 26 lin = i;||| 27 col = j;||| 28 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 29 if (down % 2 == it) {||| 30 lin++;||| 31 } else {||| 32 col++;||| 33 }||| 34 down++;||| 35 }||| 36 answer += up * down;||| 37 }||| 38 answer--;||| 39 return answer;||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 cin >> n >> m >> q;||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 1; j <= m; j++) {||| 48 dp[i][j][1] = dp[i][j - 1][0] + 1;||| 49 dp[i][j][0] = dp[i - 1][j][1] + 1;||| 50 ans += dp[i][j][1];||| 51 ans += dp[i][j][0];||| 52 }||| 53 }||| 54 ans -= n * m;||| 55 while (q--) {||| 56 long long lin, col;||| 57 cin >> lin >> col;||| 58 if (vizitat[lin][col] == true) {||| 59 vizitat[lin][col] = false;||| 60 ans += cnt(lin, col);||| 61 } else {||| 62 ans -= cnt(lin, col);||| 63 vizitat[lin][col] = true;||| 64 }||| 65 cout << ans << '\n';||| 66 }||| 67 return 0;||| 68 }||| 	30 col++;
62	18	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, y = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, n)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	6 if (t == 0) dx = -dx, dy = -dy;
62	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, n)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {
62	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 double startTime;||| 4 double gct() { return ((double)clock() - startTime) / CLOCKS_PER_SEC; }||| 5 void suraj();||| 6 int main() {||| 7 startTime = (double)clock();||| 8 { suraj(); }||| 9 return 0;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const int INF = int(1e9);||| 13 const int NEG_INF = int(-1e9);||| 14 void suraj() {||| 15 long long n, m, q;||| 16 cin >> n >> m >> q;||| 17 vector<vector<long long>> free(n + 1, vector<long long>(m + 1, true));||| 18 long long stairs = 0;||| 19 for (long long i = 1; i <= n; i++) {||| 20 for (long long j = 1; j <= m; j++) {||| 21 if (i == 1) {||| 22 for (long long k = 1;; k++) {||| 23 long long nx = i + k / 2;||| 24 long long ny = j + (k + 1) / 2;||| 25 if (nx > n || ny > m) {||| 26 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (j == 1) {||| 32 for (long long k = 1;; k++) {||| 33 long long nx = i + (k + 1) / 2;||| 34 long long ny = j + k / 2;||| 35 if (nx > n || ny > m) {||| 36 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 }||| 42 }||| 43 stairs += n * m;||| 44 long long currStairs = stairs;||| 45 for (long long i = 0; i < q; i++) {||| 46 long long x, y;||| 47 cin >> x >> y;||| 48 free[x][y] = !free[x][y];||| 49 long long rd = 0;||| 50 for (rd = 1;; rd++) {||| 51 long long nx = x + (rd) / 2;||| 52 long long ny = y + (rd + 1) / 2;||| 53 if (nx > n || ny > m || !free[nx][ny]) break;||| 54 }||| 55 long long tl = 0;||| 56 for (tl = 1;; tl++) {||| 57 long long nx = x - (tl + 1) / 2;||| 58 long long ny = y - tl / 2;||| 59 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 60 }||| 61 long long dr = 0;||| 62 for (dr = 1;; dr++) {||| 63 long long nx = x + (dr + 1) / 2;||| 64 long long ny = y + dr / 2;||| 65 if (nx > n || ny > m || !free[nx][ny]) break;||| 66 }||| 67 long long lt = 0;||| 68 for (lt = 1;; lt++) {||| 69 long long nx = x - (lt) / 2;||| 70 long long ny = y - (lt + 1) / 2;||| 71 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 72 }||| 73 rd--;||| 74 tl--;||| 75 dr--;||| 76 lt--;||| 77 if (!free[x][y]) {||| 78 currStairs -= ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 79 } else {||| 80 currStairs += ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 81 }||| 82 cout << currStairs << ""\n"";||| 83 }||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 double startTime;||| 4 double gct() { return ((double)clock() - startTime) / CLOCKS_PER_SEC; }||| 5 void suraj();||| 6 int main() {||| 7 startTime = (double)clock();||| 8 { suraj(); }||| 9 return 0;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const int INF = int(1e9);||| 13 const int NEG_INF = int(-1e9);||| 14 void suraj() {||| 15 long long n, m, q;||| 16 cin >> n >> m >> q;||| 17 vector<vector<long long>> free(n + 1, vector<long long>(m + 1, true));||| 18 long long stairs = 0;||| 19 for (long long i = 1; i < n; i++) {||| 20 for (long long j = 1; j < m; j++) {||| 21 if (i == 1) {||| 22 for (long long k = 1;; k++) {||| 23 long long nx = i + k / 2;||| 24 long long ny = j + (k + 1) / 2;||| 25 if (nx > n || ny > m) {||| 26 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (j == 1) {||| 32 for (long long k = 1;; k++) {||| 33 long long nx = i + (k + 1) / 2;||| 34 long long ny = j + k / 2;||| 35 if (nx > n || ny > m) {||| 36 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 }||| 42 }||| 43 stairs += n * m;||| 44 long long currStairs = stairs;||| 45 for (long long i = 0; i < q; i++) {||| 46 long long x, y;||| 47 cin >> x >> y;||| 48 free[x][y] = !free[x][y];||| 49 long long rd = 0;||| 50 for (rd = 1;; rd++) {||| 51 long long nx = x + (rd) / 2;||| 52 long long ny = y + (rd + 1) / 2;||| 53 if (nx > n || ny > m || !free[nx][ny]) break;||| 54 }||| 55 long long tl = 0;||| 56 for (tl = 1;; tl++) {||| 57 long long nx = x - (tl + 1) / 2;||| 58 long long ny = y - tl / 2;||| 59 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 60 }||| 61 long long dr = 0;||| 62 for (dr = 1;; dr++) {||| 63 long long nx = x + (dr + 1) / 2;||| 64 long long ny = y + dr / 2;||| 65 if (nx > n || ny > m || !free[nx][ny]) break;||| 66 }||| 67 long long lt = 0;||| 68 for (lt = 1;; lt++) {||| 69 long long nx = x - (lt) / 2;||| 70 long long ny = y - (lt + 1) / 2;||| 71 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 72 }||| 73 rd--;||| 74 tl--;||| 75 dr--;||| 76 lt--;||| 77 if (!free[x][y]) {||| 78 currStairs -= ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 79 } else {||| 80 currStairs += ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 81 }||| 82 cout << currStairs << ""\n"";||| 83 }||| 84 }||| "	19 for (long long i = 1; i <= n; i++) {
62	4	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 5;||| 4 int n, m, q, ans, f[N][N][2], g[N][N];||| 5 bool st[N][N];||| 6 int main() {||| 7 scanf(""%d %d %d"", &n, &m, &q);||| 8 for (int i = 1; i <= n; ++i) {||| 9 for (int j = 1; j <= m; ++j) {||| 10 f[i][j][0] = (j == 1) ? 0 : (f[i][j - 1][1] + 1);||| 11 f[i][j][1] = (i == 1) ? 0 : (f[i - 1][j][0] + 1);||| 12 g[i][j] = f[i][j][0] + f[i][j][1] + 1;||| 13 }||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 for (int j = 1; j <= m; ++j) {||| 17 ans += g[i][j];||| 18 }||| 19 }||| 20 for (int i = 0; i <= n; ++i) {||| 21 st[i][0] = st[i][m + 1] = 1;||| 22 }||| 23 for (int i = 0; i <= m; ++i) {||| 24 st[0][i] = st[n + 1][i] = 1;||| 25 }||| 26 while (q--) {||| 27 int x, y, sign;||| 28 scanf(""%d %d"", &x, &y);||| 29 sign = st[x][y] ? 1 : -1;||| 30 int A = min(x - 1, y - 1);||| 31 int B = min(n - x, m - y);||| 32 int p = 0, q = 0, s = 0, t = 0;||| 33 for (int i = 1; i <= A + 1; ++i) {||| 34 if (st[x - i][y - i + 1]) break;||| 35 ++p;||| 36 if (st[x - i][y - i]) break;||| 37 ++p;||| 38 }||| 39 for (int i = 1; i <= A + 1; ++i) {||| 40 if (st[x - i + 1][y - i]) break;||| 41 ++q;||| 42 if (st[x - i][y - i]) break;||| 43 ++q;||| 44 }||| 45 for (int i = 1; i <= B + 1; ++i) {||| 46 if (st[x + i - 1][y + i]) break;||| 47 ++s;||| 48 if (st[x + i][y + i]) break;||| 49 ++s;||| 50 }||| 51 for (int i = 1; i <= B + 1; ++i) {||| 52 if (st[x + i][y + i - 1]) break;||| 53 ++t;||| 54 if (st[x + i][y + i]) break;||| 55 ++t;||| 56 }||| 57 ans += (p * s + q * t + s + p + q + t + 1) * sign;||| 58 st[x][y] ^= 1;||| 59 printf(""%d\n"", ans);||| 60 }||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 5;||| 4 int n, m, q, ans, f[N][N][2], g[N][N];||| 5 bool st[N][N];||| 6 int main() {||| 7 scanf(""%d %d %d"", &n, &m, &q);||| 8 for (int i = 1; i <= n; ++i) {||| 9 for (int j = 1; j <= m; ++j) {||| 10 f[i][j][0] = (j == 1) ? 0 : (f[i][j - 1][1] + 1);||| 11 f[i][j][1] = (i == 1) ? 0 : (f[i - 1][j][0] + 1);||| 12 g[i][j] = f[i][j][0] + f[i][j][1] + 1;||| 13 }||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 for (int j = 1; j <= m; ++j) {||| 17 ans += g[i][j];||| 18 }||| 19 }||| 20 for (int i = 0; i <= n; ++i) {||| 21 st[i][0] = st[i][m + 1] = 1;||| 22 }||| 23 for (int i = 0; i <= m; ++i) {||| 24 st[0][i] = st[n + 1][i] = 1;||| 25 }||| 26 while (q--) {||| 27 int x, y, sign;||| 28 scanf(""%d %d"", &x, &y);||| 29 sign = st[x][y] ? 1 : -1;||| 30 int A = min(x - 1, y - 1);||| 31 int B = min(n - x, m - x);||| 32 int p = 0, q = 0, s = 0, t = 0;||| 33 for (int i = 1; i <= A + 1; ++i) {||| 34 if (st[x - i][y - i + 1]) break;||| 35 ++p;||| 36 if (st[x - i][y - i]) break;||| 37 ++p;||| 38 }||| 39 for (int i = 1; i <= A + 1; ++i) {||| 40 if (st[x - i + 1][y - i]) break;||| 41 ++q;||| 42 if (st[x - i][y - i]) break;||| 43 ++q;||| 44 }||| 45 for (int i = 1; i <= B + 1; ++i) {||| 46 if (st[x + i - 1][y + i]) break;||| 47 ++s;||| 48 if (st[x + i][y + i]) break;||| 49 ++s;||| 50 }||| 51 for (int i = 1; i <= B + 1; ++i) {||| 52 if (st[x + i][y + i - 1]) break;||| 53 ++t;||| 54 if (st[x + i][y + i]) break;||| 55 ++t;||| 56 }||| 57 ans += (p * s + q * t + s + p + q + t + 1) * sign;||| 58 st[x][y] ^= 1;||| 59 printf(""%d\n"", ans);||| 60 }||| 61 return 0;||| 62 }||| "	31 int B = min(n - x, m - y);
62	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rnd(time(NULL));||| 4 const long long mod = 1000000007;||| 5 const int N = 1010;||| 6 int a[N][N];||| 7 int cnt[N][N][2];||| 8 int ans = 0;||| 9 int n, m, q;||| 10 void calc(int i, int j) {||| 11 if (i <= 0 || j <= 0 || i > n || j > m) return;||| 12 ans -= cnt[i][j][0] + cnt[i][j][1];||| 13 if (a[i][j])||| 14 cnt[i][j][0] = cnt[i][j][1] = 0;||| 15 else {||| 16 cnt[i][j][0] = cnt[i - 1][j][1] + 1;||| 17 cnt[i][j][1] = cnt[i][j - 1][0] + 1;||| 18 }||| 19 ans += cnt[i][j][0] + cnt[i][j][1];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m >> q;||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int j = 1; j <= m; j++) {||| 25 calc(i, j);||| 26 ans--;||| 27 }||| 28 }||| 29 for (int it = 1; it <= q; it++) {||| 30 int x, y;||| 31 cin >> x >> y;||| 32 ans += 1 - a[x][y];||| 33 a[x][y] ^= 1;||| 34 ans -= 1 - a[x][y];||| 35 for (int i = 0; i <= min(n - x, m - y); i++) {||| 36 calc(x + i, y + i);||| 37 calc(x + i + 1, y + i);||| 38 calc(x + i, y + i + 1);||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 int tt = 1;||| 47 while (tt--) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rnd(time(NULL));||| 4 const long long mod = 1000000007;||| 5 const int N = 1010;||| 6 int a[N][N];||| 7 int cnt[N][N][2];||| 8 int ans = 0;||| 9 int n, m, q;||| 10 inline void calc(int i, int j) {||| 11 if (i <= 0 || j <= 0 || i > n || j > m) return;||| 12 ans -= cnt[i][j][0] + cnt[i][j][1];||| 13 if (a[i][j])||| 14 cnt[i][j][0] = cnt[i][j][1] = 0;||| 15 else {||| 16 cnt[i][j][0] = cnt[i - 1][j][1] + 1;||| 17 cnt[i][j][1] = cnt[i][j - 1][0] + 1;||| 18 }||| 19 ans += cnt[i][j][0] + cnt[i][j][1];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m >> q;||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int j = 1; j <= m; j++) {||| 25 calc(i, j);||| 26 ans--;||| 27 }||| 28 }||| 29 for (int it = 1; it <= q; it++) {||| 30 int x, y;||| 31 cin >> x >> y;||| 32 ans += 1 - a[x][y];||| 33 a[x][y] ^= 1;||| 34 ans -= 1 - a[x][y];||| 35 for (int i = 0; i <= min(n - x, n - y); i++) {||| 36 calc(x + i, y + i);||| 37 calc(x + i + 1, y + i);||| 38 calc(x + i, y + i + 1);||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 int tt = 1;||| 47 while (tt--) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 	10 void calc(int i, int j) {
63	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 inline long long llread() {||| 11 long long x = 0, f = 0;||| 12 char ch = getchar();||| 13 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 14 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 15 return f ? -x : x;||| 16 }||| 17 int n;||| 18 char s[25][400010];||| 19 int l[25], rest[25];||| 20 vector<int> v[25][400010];||| 21 int dp[(1 << 20) + 10][2], g[(1 << 20) + 10];||| 22 signed main() {||| 23 n = read();||| 24 for (int i = (1); i <= (n); i++) scanf(""%s"", s[i] + 1);||| 25 for (int i = (1); i <= (n); i++) l[i] = strlen(s[i] + 1);||| 26 for (int i = (1); i <= (n); i++) {||| 27 int top = 0;||| 28 for (int j = (1); j <= (l[i]); j++) {||| 29 if (s[i][j] == '(')||| 30 top++;||| 31 else||| 32 top--;||| 33 if (top <= 0) v[i][-top].push_back(j);||| 34 }||| 35 rest[i] = top;||| 36 }||| 37 for (int i = (1); i <= ((1 << n) - 1); i++) dp[i][0] = dp[i][1] = -0x3f3f3f3f;||| 38 dp[0][0] = dp[0][1] = g[0] = 0;||| 39 for (int mask = (1); mask <= ((1 << n) - 1); mask++) {||| 40 for (int i = (1); i <= (n); i++) {||| 41 if (mask & (1 << (i - 1))) {||| 42 int S = mask ^ (1 << (i - 1));||| 43 if (dp[mask][0] < dp[S][0]) {||| 44 dp[mask][0] = dp[S][0];||| 45 };||| 46 if (g[S] >= 0) {||| 47 int x;||| 48 if (v[i][g[S] + 1].size() == 0)||| 49 x = l[i] + 1;||| 50 else||| 51 x = v[i][g[S] + 1][0];||| 52 int y = lower_bound(v[i][g[S]].begin(), v[i][g[S]].end(), x) -||| 53 v[i][g[S]].begin();||| 54 if (x == l[i] + 1) {||| 55 if (dp[mask][1] < dp[S][1] + y) {||| 56 dp[mask][1] = dp[S][1] + y;||| 57 };||| 58 }||| 59 if (dp[mask][0] < dp[S][1] + y) {||| 60 dp[mask][0] = dp[S][1] + y;||| 61 };||| 62 }||| 63 g[mask] = g[S] + rest[i];||| 64 }||| 65 }||| 66 }||| 67 printf(""%d\n"", max(dp[(1 << n) - 1][0], dp[(1 << n) - 1][1]));||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 inline long long llread() {||| 11 long long x = 0, f = 0;||| 12 char ch = getchar();||| 13 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 14 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 15 return f ? -x : x;||| 16 }||| 17 int n;||| 18 char s[25][400010], l[25], rest[25];||| 19 vector<int> v[25][400010];||| 20 int dp[(1 << 20) + 10][2], g[(1 << 20) + 10];||| 21 signed main() {||| 22 n = read();||| 23 for (int i = (1); i <= (n); i++) scanf(""%s"", s[i] + 1);||| 24 for (int i = (1); i <= (n); i++) l[i] = strlen(s[i] + 1);||| 25 for (int i = (1); i <= (n); i++) {||| 26 int top = 0;||| 27 for (int j = (1); j <= (l[i]); j++) {||| 28 if (s[i][j] == '(')||| 29 top++;||| 30 else||| 31 top--;||| 32 if (top <= 0) v[i][-top].push_back(j);||| 33 }||| 34 rest[i] = top;||| 35 }||| 36 for (int i = (1); i <= ((1 << n) - 1); i++) dp[i][0] = dp[i][1] = -0x3f3f3f3f;||| 37 dp[0][0] = dp[0][1] = g[0] = 0;||| 38 for (int mask = (1); mask <= ((1 << n) - 1); mask++) {||| 39 for (int i = (1); i <= (n); i++) {||| 40 if (mask & (1 << (i - 1))) {||| 41 int S = mask ^ (1 << (i - 1));||| 42 if (dp[mask][0] < dp[S][0]) {||| 43 dp[mask][0] = dp[S][0];||| 44 };||| 45 if (g[S] >= 0) {||| 46 int x;||| 47 if (v[i][g[S] + 1].size() == 0)||| 48 x = l[i] + 1;||| 49 else||| 50 x = v[i][g[S] + 1][0];||| 51 int y = lower_bound(v[i][g[S]].begin(), v[i][g[S]].end(), x) -||| 52 v[i][g[S]].begin();||| 53 if (x == l[i] + 1) {||| 54 if (dp[mask][1] < dp[S][1] + y) {||| 55 dp[mask][1] = dp[S][1] + y;||| 56 };||| 57 }||| 58 if (dp[mask][0] < dp[S][1] + y) {||| 59 dp[mask][0] = dp[S][1] + y;||| 60 };||| 61 }||| 62 g[mask] = g[S] + rest[i];||| 63 }||| 64 }||| 65 }||| 66 printf(""%d\n"", max(dp[(1 << n) - 1][0], dp[(1 << n) - 1][1]));||| 67 return 0;||| 68 }||| "	18 char s[25][400010];
63	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mx = 4e5 + 10;||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 vector<string> a(n);||| 8 for (string& x : a) cin >> x;||| 9 vector<int> bal(n), mn(n);||| 10 vector<vector<int>> occ(n), nocc(n);||| 11 for (int i = 0; i < n; i++) {||| 12 int b = 0, mn0 = 1e9;||| 13 occ[i].resize(mx * 2);||| 14 nocc[i].resize(mx * 2);||| 15 int mini = 1e9;||| 16 for (char x : a[i]) {||| 17 if (x == ')')||| 18 b--;||| 19 else||| 20 b++;||| 21 mini = min(b, mini);||| 22 mn0 = min(mn0, b);||| 23 occ[i][b + mx]++;||| 24 if (b == mini) nocc[i][b + mx]++;||| 25 }||| 26 bal[i] = b, mn[i] = mn0;||| 27 }||| 28 vector<vector<int>> answer((1 << n), vector<int>(2, -1e9));||| 29 answer[0] = {0, 0};||| 30 vector<int> sum(1 << n);||| 31 for (int mask = 0; mask < (1 << n); mask++) {||| 32 for (int i = 0; i < n; i++) {||| 33 if ((1 << i) & mask) {||| 34 sum[mask] = sum[mask ^ (1 << i)] + bal[i];||| 35 break;||| 36 }||| 37 }||| 38 for (int i = 0; i < n; i++) {||| 39 if ((1 << i) & mask) {||| 40 int nmask = (1 << i) ^ mask;||| 41 if (sum[nmask] + mn[i] < 0) {||| 42 answer[mask][1] =||| 43 max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]);||| 44 } else {||| 45 answer[mask][0] =||| 46 max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]);||| 47 }||| 48 }||| 49 }||| 50 }||| 51 int ans = 0;||| 52 for (auto x : answer) ans = max({x[0], x[1], ans});||| 53 cout << ans;||| 54 return 0;||| 55 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mx = 4e5 + 10;||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 vector<string> a(n);||| 8 for (string& x : a) cin >> x;||| 9 vector<int> bal(n), mn(n);||| 10 vector<vector<int>> occ(n), nocc(n);||| 11 for (int i = 0; i < n; i++) {||| 12 int b = 0, mn0 = 1e9;||| 13 occ[i].resize(mx * 2);||| 14 nocc[i].resize(mx * 2);||| 15 int mini = 1e9;||| 16 for (char x : a[i]) {||| 17 if (x == ')')||| 18 b--;||| 19 else||| 20 b++;||| 21 mini = min(b, mini);||| 22 mn0 = min(mn0, b);||| 23 occ[i][b + mx]++;||| 24 if (b == mini) nocc[i][b + mx]++;||| 25 }||| 26 bal[i] = b, mn[i] = mn0;||| 27 }||| 28 vector<vector<int>> answer((1 << n), vector<int>(2, -1e9));||| 29 answer[0] = {0, 0};||| 30 vector<int> sum(1 << n);||| 31 for (int mask = 0; mask < (1 << n); mask++) {||| 32 for (int i = 0; i < n; i++) {||| 33 if ((1 << i) & mask) {||| 34 sum[mask] = sum[mask ^ (1 << i)] + bal[i];||| 35 break;||| 36 }||| 37 }||| 38 for (int i = 0; i < n; i++) {||| 39 if ((1 << i) & mask) {||| 40 int nmask = (1 << i) ^ mask;||| 41 if (sum[nmask] + mn[i] < 0) {||| 42 answer[nmask][1] =||| 43 max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]);||| 44 } else {||| 45 answer[mask][0] =||| 46 max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]);||| 47 }||| 48 }||| 49 }||| 50 }||| 51 int ans = 0;||| 52 for (auto x : answer) ans = max({x[0], x[1], ans});||| 53 cout << ans;||| 54 return 0;||| 55 }||| 	42 answer[mask][1] =
63	7	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 22;||| 4 const long long oo = 1e18 + 7, mod = 1e9 + 7;||| 5 string s[N];||| 6 long long n, k;||| 7 long long num[N][400005];||| 8 long long ans[(1LL << N)][2];||| 9 long long pref[(1LL << N)], mn[N];||| 10 set<pair<long long, long long> > second;||| 11 set<long long> nums[400005];||| 12 void process() {||| 13 cin >> n;||| 14 for (long long i = 1; i <= n; i++) {||| 15 cin >> s[i];||| 16 s[i] = '*' + s[i];||| 17 second.clear();||| 18 for (long long j = 0; j <= 400000; j++) nums[j].clear();||| 19 long long prefix = 0;||| 20 mn[i] = 0;||| 21 for (long long j = 1; j < s[i].length(); j++) {||| 22 prefix += (s[i][j] == '(' ? 1 : -1);||| 23 mn[i] = min(mn[i], prefix);||| 24 if (prefix <= 0) {||| 25 second.insert({j, -prefix});||| 26 nums[-prefix].insert(j);||| 27 }||| 28 }||| 29 pref[(1LL << (i - 1))] = prefix;||| 30 for (long long j = 400000; j >= 0; j--) {||| 31 if (!nums[j].size()) continue;||| 32 num[i][j] = nums[j].size();||| 33 long long temp = (*nums[j].begin());||| 34 set<pair<long long, long long> >::iterator it = second.find({temp, j}),||| 35 it2 = it;||| 36 for (; it2 != second.end(); it2++)||| 37 nums[(*it2).second].erase((*it2).first);||| 38 second.erase(it, second.end());||| 39 }||| 40 }||| 41 ans[0][1] = 0, ans[0][0] = -oo;||| 42 for (long long i = 1; i < (1LL << n); i++) {||| 43 ans[i][0] = ans[i][1] = -oo;||| 44 if (__builtin_popcountll(i) >= 2) {||| 45 for (long long j = 0; j < n; j++) {||| 46 if (i & (1LL << j)) {||| 47 pref[i] = (pref[i - (1LL << j)] + pref[(1LL << j)]);||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 }||| 53 for (long long i = 1; i < (1LL << n); i++) {||| 54 ans[i][0] = ans[i][1] = -oo;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (!(i & (1LL << j))) continue;||| 57 if (pref[i - (1LL << j)] + mn[j + 1] >= 0) {||| 58 ans[i][1] = max(ans[i][1], ans[i - (1LL << j)][1] +||| 59 num[j + 1][pref[i - (1LL << j)]]);||| 60 } else||| 61 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][1] +||| 62 num[j + 1][pref[i - (1LL << j)]]);||| 63 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][0]);||| 64 }||| 65 }||| 66 cout << max(ans[(1LL << n) - 1][0], ans[(1LL << n) - 1][1]);||| 67 }||| 68 signed main() {||| 69 ios_base::sync_with_stdio(0);||| 70 process();||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 22;||| 4 const long long oo = 1e18 + 7, mod = 1e9 + 7;||| 5 string s[N];||| 6 long long n, k;||| 7 long long num[N][400005];||| 8 long long ans[(1LL << N)][2];||| 9 long long pref[(1LL << N)], mn[N];||| 10 set<pair<long long, long long> > second;||| 11 set<long long> nums[400005];||| 12 void process() {||| 13 cin >> n;||| 14 for (long long i = 1; i <= n; i++) {||| 15 cin >> s[i];||| 16 s[i] = '*' + s[i];||| 17 second.clear();||| 18 for (long long j = 0; j <= 400000; j++) nums[j].clear();||| 19 long long prefix = 0;||| 20 mn[i] = 0;||| 21 for (long long j = 1; j < s[i].length(); j++) {||| 22 prefix += (s[i][j] == '(' ? 1 : -1);||| 23 mn[i] = min(mn[i], prefix);||| 24 if (prefix <= 0) {||| 25 second.insert({j, -prefix});||| 26 nums[-prefix].insert(j);||| 27 }||| 28 }||| 29 pref[(1LL << (i - 1))] = prefix;||| 30 for (long long j = 400000; j >= 0; j--) {||| 31 if (!nums[j].size()) continue;||| 32 num[i][j] = nums[j].size();||| 33 long long temp = (*nums[j].begin());||| 34 set<pair<long long, long long> >::iterator it = second.find({j, temp}),||| 35 it2 = it;||| 36 for (; it2 != second.end(); it2++)||| 37 nums[(*it2).second].erase((*it2).first);||| 38 second.erase(it, second.end());||| 39 }||| 40 }||| 41 ans[0][1] = 0, ans[0][0] = -oo;||| 42 for (long long i = 1; i < (1LL << n); i++) {||| 43 ans[i][0] = ans[i][1] = -oo;||| 44 if (__builtin_popcountll(i) >= 2) {||| 45 for (long long j = 0; j < n; j++) {||| 46 if (i & (1LL << j)) {||| 47 pref[i] = (pref[i - (1LL << j)] + pref[(1LL << j)]);||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 }||| 53 for (long long i = 1; i < (1LL << n); i++) {||| 54 ans[i][0] = ans[i][1] = -oo;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (!(i & (1LL << j))) continue;||| 57 if (pref[i - (1LL << j)] + mn[j + 1] >= 0) {||| 58 ans[i][1] = max(ans[i][1], ans[i - (1LL << j)][1] +||| 59 num[j + 1][pref[i - (1LL << j)]]);||| 60 } else||| 61 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][1] +||| 62 num[j + 1][pref[i - (1LL << j)]]);||| 63 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][0]);||| 64 }||| 65 }||| 66 cout << max(ans[(1LL << n) - 1][0], ans[(1LL << n) - 1][1]);||| 67 }||| 68 signed main() {||| 69 ios_base::sync_with_stdio(0);||| 70 process();||| 71 }||| 	34 set<pair<long long, long long> >::iterator it = second.find({temp, j}),
65	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 int n, a[maxn], b[maxn];||| 5 char s[maxn];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 }||| 11 scanf(""%s"", s + 1);||| 12 sort(a + 1, a + n + 1);||| 13 int l = 1, r = n;||| 14 for (int i = n; i; i--) {||| 15 if (s[i] == s[i - 1])||| 16 b[i] = l++;||| 17 else||| 18 b[i] = r--;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 printf(""%d %c\n"", a[b[i]],||| 22 (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 int n, a[maxn], b[maxn];||| 5 char s[maxn];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 }||| 11 scanf(""%s"", s + 1);||| 12 sort(a + 1, a + n + 1);||| 13 int l = 1, r = n;||| 14 for (int i = n; i; i--) {||| 15 if (s[i] == s[i - 1])||| 16 b[i] = l++;||| 17 else||| 18 b[i] = r--;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 printf(""%d %c\n"", a[b[i]],||| 22 (b[i] ^ 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');||| 23 }||| 24 return 0;||| 25 }||| "	22 (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');
65	28	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 for (long long i = 0; i < n; i++) cin >> a[i];||| 8 sort(a, a + n);||| 9 string s;||| 10 cin >> s;||| 11 long long cnt = 0;||| 12 for (long long i = 0; i < n - 1; i++) {||| 13 if (s[i] != s[i + 1]) cnt++;||| 14 }||| 15 char dir[n];||| 16 dir[n - 1 - cnt] = s[0];||| 17 for (long long i = n - 2 - cnt; i >= 0; i--) {||| 18 if (dir[i + 1] == 'L')||| 19 dir[i] = 'R';||| 20 else||| 21 dir[i] = 'L';||| 22 }||| 23 for (long long i = n - cnt; i < n; i++) {||| 24 if (dir[i - 1] == 'L')||| 25 dir[i] = 'R';||| 26 else||| 27 dir[i] = 'L';||| 28 }||| 29 long long l = n - 1 - cnt, r = n - 1 - cnt;||| 30 cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n';||| 31 for (long long i = 1; i < n; i++) {||| 32 if (s[i] == s[i - 1]) {||| 33 l--;||| 34 cout << a[l] << ' ' << dir[l] << '\n';||| 35 } else {||| 36 r++;||| 37 cout << a[r] << ' ' << dir[r] << '\n';||| 38 }||| 39 }||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 for (long long i = 0; i < n; i++) cin >> a[i];||| 8 sort(a, a + n + 1);||| 9 string s;||| 10 cin >> s;||| 11 long long cnt = 0;||| 12 for (long long i = 0; i < n - 1; i++) {||| 13 if (s[i] != s[i + 1]) cnt++;||| 14 }||| 15 char dir[n];||| 16 dir[n - 1 - cnt] = s[0];||| 17 for (long long i = n - 2 - cnt; i >= 0; i--) {||| 18 if (dir[i + 1] == 'L')||| 19 dir[i] = 'R';||| 20 else||| 21 dir[i] = 'L';||| 22 }||| 23 for (long long i = n - cnt; i < n; i++) {||| 24 if (dir[i - 1] == 'L')||| 25 dir[i] = 'R';||| 26 else||| 27 dir[i] = 'L';||| 28 }||| 29 long long l = n - 1 - cnt, r = n - 1 - cnt;||| 30 cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n';||| 31 for (long long i = 1; i < n; i++) {||| 32 if (s[i] == s[i - 1]) {||| 33 l--;||| 34 cout << a[l] << ' ' << dir[l] << '\n';||| 35 } else {||| 36 r++;||| 37 cout << a[r] << ' ' << dir[r] << '\n';||| 38 }||| 39 }||| 40 }||| 	8 sort(a, a + n);
65	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int n, a[N], b[N];||| 5 char s[N];||| 6 void sol(int l, int r, int d) {||| 7 if (d == 1) {||| 8 b[d] = a[l];||| 9 return;||| 10 }||| 11 if (s[d - 1] == s[d]) {||| 12 b[d] = a[l];||| 13 sol(l + 1, r, d - 1);||| 14 } else {||| 15 b[d] = a[r];||| 16 sol(l, r - 1, d - 1);||| 17 }||| 18 }||| 19 int main() {||| 20 scanf(""%d"", &n);||| 21 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 22 scanf(""%s"", s + 1);||| 23 sort(a + 1, a + n + 1);||| 24 if (s[n] == 'L')||| 25 for (int i = n; i >= 1; i -= 2) a[i] = -a[i];||| 26 else||| 27 for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i];||| 28 sol(1, n, n);||| 29 for (int i = 1; i <= n; i++) {||| 30 if (b[i] > 0)||| 31 printf(""%d R\n"", b[i]);||| 32 else||| 33 printf(""%d L\n"", -b[i]);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int n, a[N], b[N];||| 5 char s[N];||| 6 void sol(int l, int r, int d) {||| 7 if (d == 1) {||| 8 b[d] = a[l];||| 9 return;||| 10 }||| 11 if (s[d - 1] == s[n]) {||| 12 b[d] = a[l];||| 13 sol(l + 1, r, d - 1);||| 14 } else {||| 15 b[d] = a[r];||| 16 sol(l, r - 1, d - 1);||| 17 }||| 18 }||| 19 int main() {||| 20 scanf(""%d"", &n);||| 21 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 22 scanf(""%s"", s + 1);||| 23 sort(a + 1, a + n + 1);||| 24 if (s[n] == 'L')||| 25 for (int i = n; i >= 1; i -= 2) a[i] = -a[i];||| 26 else||| 27 for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i];||| 28 sol(1, n, n);||| 29 for (int i = 1; i <= n; i++) {||| 30 if (b[i] > 0)||| 31 printf(""%d R\n"", b[i]);||| 32 else||| 33 printf(""%d L\n"", -b[i]);||| 34 }||| 35 return 0;||| 36 }||| "	11 if (s[d - 1] == s[d]) {
65	91	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[200005];||| 4 string str;||| 5 pair<int, int> ans[200005];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 9 sort(a, a + n);||| 10 cin >> str;||| 11 int now = n - 1, l = 0, r = n - 1;||| 12 while (now >= 0) {||| 13 if (now == 0) {||| 14 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 15 break;||| 16 }||| 17 if (str[now] != str[now - 1]) {||| 18 ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 19 now--;||| 20 r--;||| 21 } else {||| 22 if (now == 1 || str[now] == str[now - 2]) {||| 23 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 24 ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0);||| 25 now -= 2;||| 26 r -= 2;||| 27 } else if ((r - l + 1) & 1) {||| 28 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 29 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 30 now -= 2;||| 31 r--;||| 32 l++;||| 33 } else {||| 34 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 35 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0);||| 36 now -= 2;||| 37 r--;||| 38 l++;||| 39 }||| 40 }||| 41 }||| 42 for (int i = 0; i < n; i++)||| 43 printf(""%d %c\n"", ans[i].first, ans[i].second ? 'R' : 'L');||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[200005];||| 4 string str;||| 5 pair<int, int> ans[200005];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 9 sort(a, a + n);||| 10 cin >> str;||| 11 int now = n - 1, l = 0, r = n - 1;||| 12 while (now >= 0) {||| 13 if (now == 0) {||| 14 ans[now] = pair<int, int>(a[now], str[l] == 'L' ? 0 : 1);||| 15 break;||| 16 }||| 17 if (str[now] != str[now - 1]) {||| 18 ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 19 now--;||| 20 r--;||| 21 } else {||| 22 if (now == 1 || str[now] == str[now - 2]) {||| 23 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 24 ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0);||| 25 now -= 2;||| 26 r -= 2;||| 27 } else if ((r - l + 1) & 1) {||| 28 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 29 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 30 now -= 2;||| 31 r--;||| 32 l++;||| 33 } else {||| 34 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 35 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0);||| 36 now -= 2;||| 37 r--;||| 38 l++;||| 39 }||| 40 }||| 41 }||| 42 for (int i = 0; i < n; i++)||| 43 printf(""%d %c\n"", ans[i].first, ans[i].second ? 'R' : 'L');||| 44 return 0;||| 45 }||| "	14 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);
49	71	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<int>> g;||| 4 vector<int> ans;||| 5 vector<int> a;||| 6 vector<int> mp(1000000, 0);||| 7 vector<int> lb;||| 8 vector<int> p, pi;||| 9 struct query {||| 10 int id, l, k;||| 11 };||| 12 vector<vector<query>> vq;||| 13 void dfs(int v, int pa = -1) {||| 14 mp[a[v]]++;||| 15 int c = pi[a[v]];||| 16 int b = lb[mp[a[v]]] - 1;||| 17 swap(p[c], p[b]);||| 18 swap(pi[p[c]], pi[p[b]]);||| 19 lb[mp[a[v]]]--;||| 20 for (query q : vq[v]) {||| 21 int d = lb[q.l];||| 22 if (d + q.k - 1 >= p.size()) {||| 23 ans[q.id] = -1;||| 24 } else {||| 25 ans[q.id] = p[d + q.k - 1];||| 26 }||| 27 }||| 28 for (int u : g[v])||| 29 if (u != pa) {||| 30 dfs(u, v);||| 31 }||| 32 c = lb[mp[a[v]]];||| 33 b = pi[a[v]];||| 34 swap(p[c], p[b]);||| 35 swap(pi[p[c]], pi[p[b]]);||| 36 lb[mp[a[v]]]++;||| 37 mp[a[v]]--;||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(0);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 int n, q;||| 46 cin >> n >> q;||| 47 a.resize(n);||| 48 for (int i = 0; i < n; ++i) cin >> a[i];||| 49 g.clear();||| 50 g.resize(n);||| 51 for (int i = 1; i < n; ++i) {||| 52 int x;||| 53 cin >> x;||| 54 --x;||| 55 g[x].push_back(i);||| 56 g[i].push_back(x);||| 57 }||| 58 vq.clear();||| 59 vq.resize(n);||| 60 for (int i = 0; i < q; ++i) {||| 61 int v, l, k;||| 62 cin >> v >> l >> k;||| 63 --v;||| 64 vq[v].push_back({i, l, k});||| 65 }||| 66 ans.resize(q);||| 67 p.resize(n);||| 68 for (int i = 1; i <= n; ++i) {||| 69 p[i - 1] = i;||| 70 }||| 71 pi.resize(n + 1);||| 72 for (int i = 1; i <= n; ++i) {||| 73 pi[i] = i - 1;||| 74 }||| 75 lb.resize(n + 2);||| 76 lb[0] = 0;||| 77 for (int i = 1; i <= n + 1; ++i) {||| 78 lb[i] = n;||| 79 }||| 80 dfs(0);||| 81 for (int i : ans) cout << i << ' ';||| 82 cout << '\n';||| 83 }||| 84 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<int>> g;||| 4 vector<int> ans;||| 5 vector<int> a;||| 6 vector<int> mp(1000000, 0);||| 7 vector<int> lb;||| 8 vector<int> p, pi;||| 9 struct query {||| 10 int id, l, k;||| 11 };||| 12 vector<vector<query>> vq;||| 13 void dfs(int v, int pa = -1) {||| 14 mp[a[v]]++;||| 15 int c = pi[a[v]];||| 16 int b = lb[mp[a[v]] + 1] - 1;||| 17 swap(p[c], p[b]);||| 18 swap(pi[p[c]], pi[p[b]]);||| 19 lb[mp[a[v]]]--;||| 20 for (query q : vq[v]) {||| 21 int d = lb[q.l];||| 22 if (d + q.k - 1 >= p.size()) {||| 23 ans[q.id] = -1;||| 24 } else {||| 25 ans[q.id] = p[d + q.k - 1];||| 26 }||| 27 }||| 28 for (int u : g[v])||| 29 if (u != pa) {||| 30 dfs(u, v);||| 31 }||| 32 c = lb[mp[a[v]]];||| 33 b = pi[a[v]];||| 34 swap(p[c], p[b]);||| 35 swap(pi[p[c]], pi[p[b]]);||| 36 lb[mp[a[v]]]++;||| 37 mp[a[v]]--;||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(0);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 int n, q;||| 46 cin >> n >> q;||| 47 a.resize(n);||| 48 for (int i = 0; i < n; ++i) cin >> a[i];||| 49 g.clear();||| 50 g.resize(n);||| 51 for (int i = 1; i < n; ++i) {||| 52 int x;||| 53 cin >> x;||| 54 --x;||| 55 g[x].push_back(i);||| 56 g[i].push_back(x);||| 57 }||| 58 vq.clear();||| 59 vq.resize(n);||| 60 for (int i = 0; i < q; ++i) {||| 61 int v, l, k;||| 62 cin >> v >> l >> k;||| 63 --v;||| 64 vq[v].push_back({i, l, k});||| 65 }||| 66 ans.resize(q);||| 67 p.resize(n);||| 68 for (int i = 1; i <= n; ++i) {||| 69 p[i - 1] = i;||| 70 }||| 71 pi.resize(n + 1);||| 72 for (int i = 1; i <= n; ++i) {||| 73 pi[i] = i - 1;||| 74 }||| 75 lb.resize(n + 2);||| 76 lb[0] = 0;||| 77 for (int i = 1; i <= n + 1; ++i) {||| 78 lb[i] = n;||| 79 }||| 80 dfs(0);||| 81 for (int i : ans) cout << i << ' ';||| 82 cout << '\n';||| 83 }||| 84 }||| 	16 int b = lb[mp[a[v]]] - 1;
49	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> ch[1000009];||| 4 int n, ans[1000009], st[1000009], en[1000009], fr[1000009], a[1000009],||| 5 ord[1000009], pos[1000009];||| 6 vector<int> qr[1000009];||| 7 int s[1000009], k[1000009];||| 8 void add(int x) {||| 9 int z = en[fr[x]];||| 10 int u = ord[z];||| 11 swap(ord[pos[x]], ord[z]);||| 12 swap(pos[x], pos[u]);||| 13 st[fr[x] + 1] = en[fr[x]];||| 14 en[fr[x]]--;||| 15 if (en[fr[x]] < st[fr[x]]) st[fr[x]] = en[fr[x]] = -1;||| 16 fr[x]++;||| 17 if (en[fr[x]] == -1) en[fr[x]] = st[fr[x]];||| 18 }||| 19 void rem(int x) {||| 20 int z = st[fr[x]];||| 21 int u = ord[z];||| 22 swap(ord[pos[x]], ord[z]);||| 23 swap(pos[x], pos[u]);||| 24 en[fr[x] - 1] = st[fr[x]];||| 25 st[fr[x]]++;||| 26 if (en[fr[x]] < st[fr[x]]) st[fr[x]] = en[fr[x]] = -1;||| 27 fr[x]--;||| 28 if (st[fr[x]] == -1) st[fr[x]] = en[fr[x]];||| 29 }||| 30 void sol(int x) {||| 31 if (fr[ord[n - 1]] < s[x]) {||| 32 ans[x] = -1;||| 33 return;||| 34 }||| 35 int l = 0, r = n - 1;||| 36 while (r > l) {||| 37 int mid = (l + r) / 2;||| 38 if (fr[ord[mid]] >= s[x])||| 39 r = mid;||| 40 else||| 41 l = mid + 1;||| 42 }||| 43 l += k[x] - 1;||| 44 if (l > n - 1)||| 45 ans[x] = -1;||| 46 else||| 47 ans[x] = ord[l];||| 48 }||| 49 void go(int x) {||| 50 add(a[x]);||| 51 for (int i = 0; i < qr[x].size(); i++) sol(qr[x][i]);||| 52 for (int i = 0; i < ch[x].size(); i++) go(ch[x][i]);||| 53 rem(a[x]);||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 int t;||| 59 cin >> t;||| 60 while (t--) {||| 61 int q;||| 62 cin >> n >> q;||| 63 for (int i = 0; i <= n; i++) {||| 64 ch[i].clear();||| 65 qr[i].clear();||| 66 st[i] = en[i] = -1;||| 67 ord[i] = i + 1;||| 68 pos[i + 1] = i;||| 69 fr[i] = 0;||| 70 }||| 71 st[0] = 0;||| 72 en[0] = n - 1;||| 73 for (int i = 1; i <= n; i++) cin >> a[i];||| 74 for (int i = 2; i <= n; i++) {||| 75 int x;||| 76 cin >> x;||| 77 ch[x].push_back(i);||| 78 }||| 79 for (int i = 0; i < q; i++) {||| 80 int x;||| 81 cin >> x >> s[i] >> k[i];||| 82 qr[x].push_back(i);||| 83 }||| 84 go(1);||| 85 for (int i = 0; i < q; i++) cout << ans[i] << "" "";||| 86 cout << endl;||| 87 }||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> ch[1000009];||| 4 int n, ans[1000009], st[1000009], en[1000009], fr[1000009], a[1000009],||| 5 ord[1000009], pos[1000009];||| 6 vector<int> qr[1000009];||| 7 int s[1000009], k[1000009];||| 8 void add(int x) {||| 9 int z = en[fr[x]];||| 10 int u = ord[z];||| 11 swap(ord[pos[x]], ord[z]);||| 12 swap(pos[x], pos[u]);||| 13 st[fr[x] + 1] = en[fr[x]];||| 14 en[fr[x]]--;||| 15 if (en[fr[x]] < st[fr[x]]) st[fr[x]] = en[fr[x]] = -1;||| 16 fr[x]++;||| 17 if (en[fr[x]] == -1) en[fr[x]] = st[fr[x]];||| 18 }||| 19 void rem(int x) {||| 20 int z = st[fr[x]];||| 21 int u = ord[z];||| 22 swap(ord[pos[x]], ord[z]);||| 23 swap(pos[x], pos[u]);||| 24 en[fr[x] - 1] = st[fr[x]];||| 25 st[fr[x]]++;||| 26 if (en[fr[x]] < st[fr[x]]) st[fr[x]] = en[fr[x]] = -1;||| 27 fr[x]--;||| 28 if (st[fr[x]] == -1) st[fr[x]] = en[fr[x]];||| 29 }||| 30 void sol(int x) {||| 31 if (fr[ord[n - 1]] < s[x]) {||| 32 ans[x] = -1;||| 33 return;||| 34 }||| 35 int l = 0, r = n - 1;||| 36 while (r > l) {||| 37 int mid = (l + r) / 2;||| 38 if (fr[ord[mid]] >= s[x])||| 39 r = mid;||| 40 else||| 41 l = mid + 1;||| 42 }||| 43 l += k[x] - 1;||| 44 if (l > n - 1)||| 45 ans[x] = -1;||| 46 else||| 47 ans[x] = ord[l];||| 48 }||| 49 void go(int x) {||| 50 add(a[x]);||| 51 for (int i = 0; i < qr[x].size(); i++) sol(qr[x][i]);||| 52 for (int i = 0; i < ch[x].size(); i++) go(ch[x][i]);||| 53 rem(a[x]);||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 int t;||| 59 cin >> t;||| 60 while (t--) {||| 61 int q;||| 62 cin >> n >> q;||| 63 for (int i = 0; i <= n; i++) {||| 64 ch[i].clear();||| 65 qr[i].clear();||| 66 st[i] = en[i] = -1;||| 67 ord[i] = i + 1;||| 68 pos[i + 1] = i;||| 69 fr[i] = 0;||| 70 }||| 71 st[0] = 0;||| 72 en[0] = n - 1;||| 73 for (int i = 1; i <= n; i++) cin >> a[i];||| 74 for (int i = 2; i <= n; i++) {||| 75 int x;||| 76 cin >> x;||| 77 ch[x].push_back(i);||| 78 }||| 79 for (int i = 0; i < q; i++) {||| 80 int x;||| 81 cin >> x >> s[i] >> k[i];||| 82 qr[x].push_back(i);||| 83 }||| 84 go(1);||| 85 for (int i = 0; i < n; i++) cout << ans[i] << "" "";||| 86 cout << endl;||| 87 }||| 88 return 0;||| 89 }||| "	"85 for (int i = 0; i < q; i++) cout << ans[i] << "" "";"
49	62	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1000005;||| 4 int a[maxn], p[maxn], ans[maxn];||| 5 int dfs[2 * maxn][2], freq[maxn], psum[maxn];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int n, q;||| 13 cin >> n >> q;||| 14 for (int i = 0; i < n; ++i) {||| 15 cin >> a[i];||| 16 --a[i];||| 17 }||| 18 for (int i = 0; i < n - 1; ++i) {||| 19 cin >> p[i];||| 20 --p[i];||| 21 }||| 22 vector<vector<int>> g(n);||| 23 vector<vector<vector<int>>> qs(n);||| 24 for (int i = 0; i < n - 1; ++i) g[p[i]].push_back(i + 1);||| 25 for (int i = 0; i < q; ++i) {||| 26 int v, l, k;||| 27 cin >> v >> l >> k;||| 28 --v;||| 29 vector<int> q;||| 30 q.push_back(i);||| 31 q.push_back(l);||| 32 q.push_back(k);||| 33 qs[v].push_back(q);||| 34 }||| 35 int pt = 0;||| 36 vector<unordered_set<int>> sets(n + 2);||| 37 for (int i = 0; i < n; ++i) sets[0].insert(i);||| 38 sets[n + 1].insert(-2);||| 39 for (int i = 1; i <= n + 1; ++i) psum[i] = n;||| 40 dfs[pt][0] = 0;||| 41 dfs[pt++][1] = 0;||| 42 while (pt) {||| 43 int i = dfs[--pt][0], stage = dfs[pt][1];||| 44 sets[freq[a[i]]].erase(a[i]);||| 45 if (stage == 0) {||| 46 sets[++freq[a[i]]].insert(a[i]);||| 47 --psum[freq[a[i]]];||| 48 for (vector<int> qry : qs[i]) {||| 49 int id = qry[0], l = qry[1], k = qry[2] + psum[l];||| 50 int bucket = n + 1;||| 51 for (int l = 1, r = n + 1; l <= r;) {||| 52 int m = l + (r - l) / 2;||| 53 if (psum[m] >= k) {||| 54 bucket = r = m - 1;||| 55 } else {||| 56 l = m + 1;||| 57 }||| 58 }||| 59 for (int num : sets[bucket]) {||| 60 ans[id] = num + 1;||| 61 break;||| 62 }||| 63 }||| 64 dfs[pt][0] = i;||| 65 dfs[pt++][1] = 1;||| 66 for (int j : g[i]) {||| 67 dfs[pt][0] = j;||| 68 dfs[pt++][1] = 0;||| 69 }||| 70 } else {||| 71 ++psum[freq[a[i]]];||| 72 sets[--freq[a[i]]].insert(a[i]);||| 73 }||| 74 }||| 75 for (int i = 0; i < q; ++i) {||| 76 printf(""%d "", ans[i]);||| 77 }||| 78 printf(""\n"");||| 79 }||| 80 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1000005;||| 4 int a[maxn], p[maxn], ans[maxn];||| 5 int dfs[2 * maxn][2], freq[maxn], psum[maxn];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int n, q;||| 13 cin >> n >> q;||| 14 for (int i = 0; i < n; ++i) {||| 15 cin >> a[i];||| 16 --a[i];||| 17 }||| 18 for (int i = 0; i < n - 1; ++i) {||| 19 cin >> p[i];||| 20 --p[i];||| 21 }||| 22 vector<vector<int>> g(n);||| 23 vector<vector<vector<int>>> qs(n);||| 24 for (int i = 0; i < n - 1; ++i) g[p[i]].push_back(i + 1);||| 25 for (int i = 0; i < q; ++i) {||| 26 int v, l, k;||| 27 cin >> v >> l >> k;||| 28 --v;||| 29 vector<int> q;||| 30 q.push_back(i);||| 31 q.push_back(l);||| 32 q.push_back(k);||| 33 qs[v].push_back(q);||| 34 }||| 35 int pt = 0;||| 36 vector<unordered_set<int>> sets(n + 2);||| 37 for (int i = 0; i < n; ++i) sets[0].insert(i);||| 38 sets[n + 1].insert(-2);||| 39 for (int i = 1; i <= n + 1; ++i) psum[i] = n;||| 40 dfs[pt][0] = 0;||| 41 dfs[pt++][1] = 0;||| 42 while (pt) {||| 43 int i = dfs[--pt][0], stage = dfs[pt][1];||| 44 sets[freq[a[i]]].erase(a[i]);||| 45 if (stage == 0) {||| 46 sets[++freq[a[i]]].insert(a[i]);||| 47 --psum[freq[a[i]]];||| 48 for (vector<int> qry : qs[i]) {||| 49 int id = qry[0], l = qry[1], k = qry[2] + psum[l];||| 50 int bucket = n + 1;||| 51 for (int l = 1, r = n + 1; l <= r;) {||| 52 int m = l + (r - l) / 2;||| 53 if (psum[m] >= k) {||| 54 bucket = r = m - 1;||| 55 } else {||| 56 l = m + 1;||| 57 }||| 58 }||| 59 for (int num : sets[bucket]) {||| 60 ans[id] = num;||| 61 break;||| 62 }||| 63 }||| 64 dfs[pt][0] = i;||| 65 dfs[pt++][1] = 1;||| 66 for (int j : g[i]) {||| 67 dfs[pt][0] = j;||| 68 dfs[pt++][1] = 0;||| 69 }||| 70 } else {||| 71 ++psum[freq[a[i]]];||| 72 sets[--freq[a[i]]].insert(a[i]);||| 73 }||| 74 }||| 75 for (int i = 0; i < q; ++i) {||| 76 printf(""%d "", ans[i]);||| 77 }||| 78 printf(""\n"");||| 79 }||| 80 }||| "	60 ans[id] = num + 1;
49	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _io() {||| 4 std::ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 void _init();||| 9 const int MAXN = 1000005;||| 10 const long long mod = 998244353;||| 11 int n, q, a[MAXN], p[MAXN], ans[MAXN];||| 12 int occur[MAXN];||| 13 vector<int> num[MAXN];||| 14 vector<int> g[MAXN];||| 15 struct NODE {||| 16 int l, k, id;||| 17 NODE(int a, int b, int c) : l(a), k(b), id(c) {}||| 18 };||| 19 vector<NODE> Q[MAXN];||| 20 int ta[MAXN];||| 21 void add(int k, int p) {||| 22 if (k <= 0) return;||| 23 for (int i = k; i <= n; i += i & (-i)) ta[i] += p;||| 24 }||| 25 int get(int k) {||| 26 int res = 0;||| 27 for (int i = k; i > 0; i -= i & (-i)) res += ta[i];||| 28 return res;||| 29 }||| 30 void add(int v) {||| 31 add(occur[v], -1);||| 32 occur[v]++;||| 33 add(occur[v], 1);||| 34 num[occur[v]].emplace_back(v);||| 35 }||| 36 void del(int v) {||| 37 add(occur[v], -1);||| 38 occur[v]--;||| 39 add(occur[v], 1);||| 40 num[occur[v]].emplace_back(v);||| 41 }||| 42 int deal(int l, int k) {||| 43 int low = l, high = n;||| 44 while (low < high) {||| 45 int mid = (low + high) >> 1;||| 46 if (get(mid) - get(l - 1) >= k)||| 47 high = mid;||| 48 else||| 49 low = mid + 1;||| 50 }||| 51 if (get(low) - get(l - 1) < k) return -1;||| 52 while (occur[num[low].back()] != low) num[low].pop_back();||| 53 return num[low].back();||| 54 }||| 55 void dfs(int u) {||| 56 add(a[u]);||| 57 for (auto x : Q[u]) {||| 58 ans[x.id] = deal(x.l, x.k);||| 59 }||| 60 for (auto v : g[u]) {||| 61 dfs(v);||| 62 }||| 63 del(a[u]);||| 64 }||| 65 void _work() {||| 66 cin >> n >> q;||| 67 for (int i = 1; i <= n; i++) Q[i].clear(), g[i].clear(), cin >> a[i];||| 68 for (int i = 2; i <= n; i++) {||| 69 cin >> p[i];||| 70 g[p[i]].emplace_back(i);||| 71 }||| 72 for (int v, l, k, i = 1; i <= q; i++) {||| 73 cin >> v >> l >> k;||| 74 Q[v].emplace_back(l, k, i);||| 75 }||| 76 dfs(1);||| 77 for (int i = 1; i <= q; i++) cout << ans[i] << ' ';||| 78 cout << '\n';||| 79 }||| 80 int main() {||| 81 _io();||| 82 _init();||| 83 int T = 1;||| 84 cin >> T;||| 85 while (T--) {||| 86 _work();||| 87 }||| 88 return 0;||| 89 }||| 90 void _init() {}||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _io() {||| 4 std::ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 void _init();||| 9 const int MAXN = 1000005;||| 10 const long long mod = 998244353;||| 11 int n, q, a[MAXN], p[MAXN], ans[MAXN];||| 12 int occur[MAXN];||| 13 vector<int> num[MAXN];||| 14 vector<int> g[MAXN];||| 15 struct NODE {||| 16 int l, k, id;||| 17 NODE(int a, int b, int c) : l(a), k(b), id(c) {}||| 18 };||| 19 vector<NODE> Q[MAXN];||| 20 int ta[MAXN];||| 21 void add(int k, int p) {||| 22 if (k <= 0) return;||| 23 for (int i = k; i <= n; i += i & (-i)) ta[i] += p;||| 24 }||| 25 int get(int k) {||| 26 int res = 0;||| 27 for (int i = k; i > 0; i -= i & (-i)) res += ta[i];||| 28 return res;||| 29 }||| 30 void add(int v) {||| 31 add(occur[v], -1);||| 32 occur[v]++;||| 33 add(occur[v], 1);||| 34 num[occur[v]].emplace_back(v);||| 35 }||| 36 void del(int v) {||| 37 add(occur[v], -1);||| 38 occur[v]--;||| 39 add(occur[v], 1);||| 40 num[occur[v]].emplace_back(v);||| 41 }||| 42 int deal(int l, int k) {||| 43 int low = l, high = n;||| 44 while (low < high) {||| 45 int mid = (low + high) >> 1;||| 46 if (get(mid) - get(l - 1) >= k)||| 47 high = mid;||| 48 else||| 49 low = mid + 1;||| 50 }||| 51 if (get(low) - get(l - 1) < k) return -1;||| 52 while (occur[num[low].back()] < l) num[low].pop_back();||| 53 return num[low].back();||| 54 }||| 55 void dfs(int u) {||| 56 add(a[u]);||| 57 for (auto x : Q[u]) {||| 58 ans[x.id] = deal(x.l, x.k);||| 59 }||| 60 for (auto v : g[u]) {||| 61 dfs(v);||| 62 }||| 63 del(a[u]);||| 64 }||| 65 void _work() {||| 66 cin >> n >> q;||| 67 for (int i = 1; i <= n; i++) Q[i].clear(), g[i].clear(), cin >> a[i];||| 68 for (int i = 2; i <= n; i++) {||| 69 cin >> p[i];||| 70 g[p[i]].emplace_back(i);||| 71 }||| 72 for (int v, l, k, i = 1; i <= q; i++) {||| 73 cin >> v >> l >> k;||| 74 Q[v].emplace_back(l, k, i);||| 75 }||| 76 dfs(1);||| 77 for (int i = 1; i <= q; i++) cout << ans[i] << ' ';||| 78 cout << '\n';||| 79 }||| 80 int main() {||| 81 _io();||| 82 _init();||| 83 int T = 1;||| 84 cin >> T;||| 85 while (T--) {||| 86 _work();||| 87 }||| 88 return 0;||| 89 }||| 90 void _init() {}||| 	52 while (occur[num[low].back()] != low) num[low].pop_back();
49	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct binary_indexed_tree {||| 5 int N;||| 6 vector<T> BIT;||| 7 binary_indexed_tree(int N) : N(N), BIT(N + 1, 0) {}||| 8 void add(int i, T x) {||| 9 i++;||| 10 while (i <= N) {||| 11 BIT[i] += x;||| 12 i += i & -i;||| 13 }||| 14 }||| 15 T sum(int i) {||| 16 T ans = 0;||| 17 while (i > 0) {||| 18 ans += BIT[i];||| 19 i -= i & -i;||| 20 }||| 21 return ans;||| 22 }||| 23 T sum(int L, int R) { return sum(R) - sum(L); }||| 24 };||| 25 void dfs(int n, vector<vector<int>> &c, vector<int> &a, vector<int> &ans,||| 26 vector<vector<tuple<int, int, int>>> &query, vector<int> &freq,||| 27 binary_indexed_tree<int> &freq_cnt, vector<set<int>> &st, int v = 0) {||| 28 freq_cnt.add(freq[a[v]], -1);||| 29 st[freq[a[v]]].erase(a[v]);||| 30 freq[a[v]]++;||| 31 freq_cnt.add(freq[a[v]], 1);||| 32 st[freq[a[v]]].insert(a[v]);||| 33 for (auto &q : query[v]) {||| 34 int l = get<0>(q);||| 35 int k = get<1>(q);||| 36 int id = get<2>(q);||| 37 if (freq_cnt.sum(l, n + 1) < k) {||| 38 ans[id] = -2;||| 39 } else {||| 40 int tv = n + 1, fv = l;||| 41 while (tv - fv > 1) {||| 42 int mid = (tv + fv) / 2;||| 43 if (freq_cnt.sum(l, mid) >= k) {||| 44 tv = mid;||| 45 } else {||| 46 fv = mid;||| 47 }||| 48 }||| 49 ans[id] = *st[fv].begin();||| 50 }||| 51 }||| 52 for (int w : c[v]) {||| 53 dfs(n, c, a, ans, query, freq, freq_cnt, st, w);||| 54 }||| 55 freq_cnt.add(freq[a[v]], -1);||| 56 st[freq[a[v]]].erase(a[v]);||| 57 freq[a[v]]--;||| 58 freq_cnt.add(freq[a[v]], 1);||| 59 st[freq[a[v]]].insert(a[v]);||| 60 }||| 61 int main() {||| 62 ios::sync_with_stdio(false);||| 63 cin.tie(nullptr);||| 64 int t;||| 65 cin >> t;||| 66 for (int i = 0; i < t; i++) {||| 67 int n, q;||| 68 cin >> n >> q;||| 69 vector<int> a(n);||| 70 for (int j = 0; j < n; j++) {||| 71 cin >> a[j];||| 72 a[j]--;||| 73 }||| 74 vector<int> p(n, -1);||| 75 for (int j = 1; j < n; j++) {||| 76 cin >> p[j];||| 77 p[j]--;||| 78 }||| 79 vector<vector<tuple<int, int, int>>> query(n);||| 80 for (int j = 0; j < q; j++) {||| 81 int v, l, k;||| 82 cin >> v >> l >> k;||| 83 v--;||| 84 query[v].push_back(make_tuple(l, k, j));||| 85 }||| 86 vector<vector<int>> c(n);||| 87 for (int j = 1; j < n; j++) {||| 88 c[p[j]].push_back(j);||| 89 }||| 90 vector<int> freq(n, 0);||| 91 binary_indexed_tree<int> freq_cnt(n + 1);||| 92 freq_cnt.add(0, n);||| 93 vector<set<int>> st(n + 1);||| 94 for (int i = 0; i < n; i++) {||| 95 st[0].insert(i);||| 96 }||| 97 vector<int> ans(q);||| 98 dfs(n, c, a, ans, query, freq, freq_cnt, st);||| 99 for (int j = 0; j < q; j++) {||| 100 cout << ans[j] + 1;||| 101 if (j < q - 1) {||| 102 cout << ' ';||| 103 }||| 104 }||| 105 cout << ""\n"";||| 106 }||| 107 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct binary_indexed_tree {||| 5 int N;||| 6 vector<T> BIT;||| 7 binary_indexed_tree(int N) : N(N), BIT(N + 1, 0) {}||| 8 void add(int i, T x) {||| 9 i++;||| 10 while (i <= N) {||| 11 BIT[i] += x;||| 12 i += i & -i;||| 13 }||| 14 }||| 15 T sum(int i) {||| 16 T ans = 0;||| 17 while (i > 0) {||| 18 ans += BIT[i];||| 19 i -= i & -i;||| 20 }||| 21 return ans;||| 22 }||| 23 T sum(int L, int R) { return sum(R) - sum(L); }||| 24 };||| 25 void dfs(int n, vector<vector<int>> &c, vector<int> &a, vector<int> &ans,||| 26 vector<vector<tuple<int, int, int>>> &query, vector<int> &freq,||| 27 binary_indexed_tree<int> &freq_cnt, vector<set<int>> &st, int v = 0) {||| 28 freq_cnt.add(freq[a[v]], -1);||| 29 st[freq[a[v]]].erase(a[v]);||| 30 freq[a[v]]++;||| 31 freq_cnt.add(freq[a[v]], 1);||| 32 st[freq[a[v]]].insert(a[v]);||| 33 for (auto &q : query[v]) {||| 34 int l = get<0>(q);||| 35 int k = get<1>(q);||| 36 int id = get<2>(q);||| 37 if (freq_cnt.sum(l, n + 1) < k) {||| 38 ans[id] = -2;||| 39 } else {||| 40 int tv = n + 1, fv = l;||| 41 while (fv - tv > 1) {||| 42 int mid = (tv + fv) / 2;||| 43 if (freq_cnt.sum(l, mid) >= k) {||| 44 tv = mid;||| 45 } else {||| 46 fv = mid;||| 47 }||| 48 }||| 49 ans[id] = *st[fv].begin();||| 50 }||| 51 }||| 52 for (int w : c[v]) {||| 53 dfs(n, c, a, ans, query, freq, freq_cnt, st, w);||| 54 }||| 55 freq_cnt.add(freq[a[v]], -1);||| 56 st[freq[a[v]]].erase(a[v]);||| 57 freq[a[v]]--;||| 58 freq_cnt.add(freq[a[v]], 1);||| 59 st[freq[a[v]]].insert(a[v]);||| 60 }||| 61 int main() {||| 62 ios::sync_with_stdio(false);||| 63 cin.tie(nullptr);||| 64 int t;||| 65 cin >> t;||| 66 for (int i = 0; i < t; i++) {||| 67 int n, q;||| 68 cin >> n >> q;||| 69 vector<int> a(n);||| 70 for (int j = 0; j < n; j++) {||| 71 cin >> a[j];||| 72 a[j]--;||| 73 }||| 74 vector<int> p(n, -1);||| 75 for (int j = 1; j < n; j++) {||| 76 cin >> p[j];||| 77 p[j]--;||| 78 }||| 79 vector<vector<tuple<int, int, int>>> query(n);||| 80 for (int j = 0; j < q; j++) {||| 81 int v, l, k;||| 82 cin >> v >> l >> k;||| 83 v--;||| 84 query[v].push_back(make_tuple(l, k, j));||| 85 }||| 86 vector<vector<int>> c(n);||| 87 for (int j = 1; j < n; j++) {||| 88 c[p[j]].push_back(j);||| 89 }||| 90 vector<int> freq(n, 0);||| 91 binary_indexed_tree<int> freq_cnt(n + 1);||| 92 freq_cnt.add(0, n);||| 93 vector<set<int>> st(n + 1);||| 94 for (int i = 0; i < n; i++) {||| 95 st[0].insert(i);||| 96 }||| 97 vector<int> ans(q);||| 98 dfs(n, c, a, ans, query, freq, freq_cnt, st);||| 99 for (int j = 0; j < q; j++) {||| 100 cout << ans[j] + 1;||| 101 if (j < q - 1) {||| 102 cout << ' ';||| 103 }||| 104 }||| 105 cout << ""\n"";||| 106 }||| 107 }||| "	41 while (tv - fv > 1) {
50	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 const int N = 500007;||| 5 stack<long long> s;||| 6 long long a[N];||| 7 long long f[N];||| 8 long long sum[N];||| 9 int main() {||| 10 int n;||| 11 scanf(""%d"", &n);||| 12 for (int i = 1; i <= n; i++) {||| 13 scanf(""%lld"", &a[i]);||| 14 }||| 15 s.push(0);||| 16 f[0] = 1;||| 17 sum[0] = 1;||| 18 long long ans = 0;||| 19 for (int i = 1; i <= n; i++) {||| 20 while (!s.empty() && a[s.top()] >= a[i]) {||| 21 long long pos = s.top();||| 22 s.pop();||| 23 if (s.empty()) {||| 24 ans = (ans - a[pos] * sum[pos - 1] % mod + mod) % mod;||| 25 } else {||| 26 ans = (ans - a[pos] * (sum[pos - 1] - sum[s.top() - 1] + mod) % mod +||| 27 mod) %||| 28 mod;||| 29 }||| 30 }||| 31 if (s.empty()) {||| 32 ans = (ans + a[i] * sum[i - 1] % mod) % mod;||| 33 } else {||| 34 ans = (ans + a[i] * ((sum[i - 1] - sum[s.top() - 1] + mod) % mod) % mod) %||| 35 mod;||| 36 }||| 37 s.push(i);||| 38 if (i % 2 == 1) {||| 39 f[i] = ans;||| 40 } else {||| 41 f[i] = (mod - ans) % mod;||| 42 }||| 43 if (i % 2 == 1) {||| 44 f[i] = (mod - f[i]) % mod;||| 45 }||| 46 sum[i] = (f[i] + sum[i - 1]) % mod;||| 47 }||| 48 if (n % 2 == 1) {||| 49 printf(""%lld\n"", (mod - f[n]) % mod);||| 50 } else {||| 51 printf(""%lld\n"", f[n]);||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 const int N = 500007;||| 5 stack<long long> s;||| 6 long long a[N];||| 7 long long f[N];||| 8 long long sum[N];||| 9 int main() {||| 10 int n;||| 11 scanf(""%d"", &n);||| 12 for (int i = 1; i <= n; i++) {||| 13 scanf(""%lld"", &a[i]);||| 14 }||| 15 s.push(0);||| 16 f[0] = 1;||| 17 sum[0] = 1;||| 18 long long ans;||| 19 for (int i = 1; i <= n; i++) {||| 20 while (!s.empty() && a[s.top()] >= a[i]) {||| 21 long long pos = s.top();||| 22 s.pop();||| 23 if (s.empty()) {||| 24 ans = (ans - a[pos] * sum[pos - 1] % mod + mod) % mod;||| 25 } else {||| 26 ans = (ans - a[pos] * (sum[pos - 1] - sum[s.top() - 1] + mod) % mod +||| 27 mod) %||| 28 mod;||| 29 }||| 30 }||| 31 if (s.empty()) {||| 32 ans = (ans + a[i] * sum[i - 1] % mod) % mod;||| 33 } else {||| 34 ans = (ans + a[i] * ((sum[i - 1] - sum[s.top() - 1] + mod) % mod) % mod) %||| 35 mod;||| 36 }||| 37 s.push(i);||| 38 if (i % 2 == 1) {||| 39 f[i] = ans;||| 40 } else {||| 41 f[i] = (mod - ans) % mod;||| 42 }||| 43 if (i % 2 == 1) {||| 44 f[i] = (mod - f[i]) % mod;||| 45 }||| 46 sum[i] = (f[i] + sum[i - 1]) % mod;||| 47 }||| 48 if (n % 2 == 1) {||| 49 printf(""%lld\n"", (mod - f[n]) % mod);||| 50 } else {||| 51 printf(""%lld\n"", f[n]);||| 52 }||| 53 return 0;||| 54 }||| "	18 long long ans = 0;
50	96	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') f = ch == '-' ? -1 : 1, ch = getchar();||| 7 while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();||| 8 return x * f;||| 9 }||| 10 const long long N(2e5 + 10);||| 11 const long long mod(998244353);||| 12 long long n;||| 13 long long a[N];||| 14 long long g[N];||| 15 long long s[N];||| 16 long long pre[N];||| 17 long long nxt[N];||| 18 long long stk[N];||| 19 signed main() {||| 20 n = read();||| 21 a[1] = a[n + 2] = -1e9;||| 22 long long top = 1;||| 23 stk[1] = 1;||| 24 for (long long i = (2); i <= (n + 1); i++) a[i] = read();||| 25 for (long long i = (2); i <= (n + 2); i++) {||| 26 for (; top && a[stk[top]] >= a[i]; top--) nxt[stk[top]] = i;||| 27 pre[i] = stk[top], stk[++top] = i;||| 28 }||| 29 s[1] = 1;||| 30 for (long long i = (2); i <= (n + 1); i++) {||| 31 long long x = s[i - 1] - s[pre[i] - 1] + mod;||| 32 x = (x % mod * a[i]) % mod, (g[i] += g[i - 1] + x) %= mod;||| 33 (g[nxt[i]] += mod - x) %= mod, s[i] = (s[i - 1] + mod - g[i]) % mod;||| 34 }||| 35 if ((n + 1) & 1) g[n + 1] = mod - g[n + 1];||| 36 cout << g[n + 1] % mod;||| 37 return 0;||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = getchar();||| 6 while (ch < '0' || ch > '9') f = ch == '-' ? -1 : 1, ch = getchar();||| 7 while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();||| 8 return x * f;||| 9 }||| 10 const long long N(2e5 + 10);||| 11 const long long mod(998244353);||| 12 long long n;||| 13 long long a[N];||| 14 long long g[N];||| 15 long long s[N];||| 16 long long pre[N];||| 17 long long nxt[N];||| 18 long long stk[N];||| 19 signed main() {||| 20 n = read();||| 21 a[1] = a[n + 2] = -1e9;||| 22 long long top = 1;||| 23 stk[1] = 1;||| 24 for (long long i = (2); i <= (n + 1); i++) a[i] = read();||| 25 for (long long i = (2); i <= (n + 2); i++) {||| 26 for (; top && a[stk[top]] >= a[i]; top--) nxt[stk[top]] = i;||| 27 pre[i] = stk[top], stk[++top] = i;||| 28 }||| 29 s[1] = 1;||| 30 for (long long i = (2); i <= (n + 1); i++) {||| 31 long long x = s[i - 1] - s[pre[i] - 1] + mod;||| 32 x = (x % mod * a[i]) % mod, (g[i] += g[i - 1] + x) %= mod;||| 33 (g[nxt[i]] += mod - x) %= mod, s[i] = (s[i - 1] + mod - g[i]) % mod;||| 34 }||| 35 if ((n + 1) & 1) g[n + 1] = mod - g[n + 1];||| 36 cout << g[n + 1];||| 37 return 0;||| 38 }||| 	36 cout << g[n + 1] % mod;
50	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int INF = (numeric_limits<int>::max()) / 2;||| 4 constexpr long long INFLL = (numeric_limits<long long>::max()) / 2;||| 5 template <class T>||| 6 istream &operator>>(istream &is, vector<T> &a) {||| 7 for (auto &i : a) {||| 8 is >> i;||| 9 }||| 10 return is;||| 11 }||| 12 constexpr int mod = 998244353;||| 13 struct segtree {||| 14 struct line {||| 15 int k = -INF, b = -INF;||| 16 line() = default;||| 17 line(int k, int b) : k(k), b(b){};||| 18 bool operator==(line p) const { return k == p.k && b == p.b; }||| 19 };||| 20 struct Node {||| 21 int sum = 0;||| 22 line push;||| 23 Node *l = nullptr, *r = nullptr;||| 24 Node() = default;||| 25 };||| 26 Node *root = nullptr;||| 27 int n = 1e9 + 1;||| 28 void creatend(Node *&v) {||| 29 if (v == nullptr) {||| 30 v = new Node();||| 31 }||| 32 }||| 33 void push(Node *v, int l, int r) {||| 34 if (v->push == line()) {||| 35 return;||| 36 }||| 37 if (l + 1 < r) {||| 38 creatend(v->l);||| 39 if (v->l->push == line()) {||| 40 v->l->push = v->push;||| 41 } else {||| 42 v->l->push = {||| 43 (int)((v->push.k * 1ll * v->l->push.k) % mod),||| 44 (int)((v->push.k * 1ll * v->l->push.b + v->push.b) % mod)};||| 45 }||| 46 creatend(v->r);||| 47 if (v->r->push == line()) {||| 48 v->r->push = v->push;||| 49 } else {||| 50 v->r->push = {||| 51 (int)((v->push.k * 1ll * v->r->push.k) % mod),||| 52 (int)((v->push.k * 1ll * v->r->push.b + v->push.b) % mod)};||| 53 }||| 54 }||| 55 v->sum = (v->sum * 1ll * v->push.k) % mod;||| 56 v->sum = (v->sum + (r - l) * 1ll * v->push.b) % mod;||| 57 v->sum = (v->sum + mod) % mod;||| 58 v->push = line();||| 59 }||| 60 void update(Node *&v, int l, int r, int li, int ri, line f) {||| 61 creatend(v);||| 62 push(v, l, r);||| 63 if (li >= r || l >= ri) {||| 64 return;||| 65 }||| 66 if (li <= l && r <= ri) {||| 67 v->push = f;||| 68 push(v, l, r);||| 69 return;||| 70 }||| 71 int m = (l + r) / 2;||| 72 update(v->l, l, m, li, ri, f);||| 73 update(v->r, m, r, li, ri, f);||| 74 v->sum = (v->l->sum + v->r->sum) % mod;||| 75 }||| 76 void update(int li, int ri, line f) { update(root, 1, n, li, ri, f); }||| 77 int get() {||| 78 creatend(root);||| 79 push(root, 1, n);||| 80 return root->sum;||| 81 }||| 82 };||| 83 signed main() {||| 84 cin.tie(0)->sync_with_stdio(0);||| 85 int n;||| 86 cin >> n;||| 87 vector<int> a(n);||| 88 cin >> a;||| 89 segtree t;||| 90 t.update(1, a[0] + 1, {0, 1});||| 91 for (int i = 1; i < n; ++i) {||| 92 int sum = t.get();||| 93 t.update(1, a[i] + 1, {-1, sum});||| 94 t.update(a[i] + 1, t.n, {0, 0});||| 95 }||| 96 cout << t.get();||| 97 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int INF = (numeric_limits<int>::max()) / 2;||| 4 constexpr long long INFLL = (numeric_limits<long long>::max()) / 2;||| 5 template <class T>||| 6 istream &operator>>(istream &is, vector<T> &a) {||| 7 for (auto &i : a) {||| 8 is >> i;||| 9 }||| 10 return is;||| 11 }||| 12 constexpr int mod = 998244353;||| 13 struct segtree {||| 14 struct line {||| 15 int k = -INFLL, b = -INFLL;||| 16 line() = default;||| 17 line(int k, int b) : k(k), b(b){};||| 18 bool operator==(line p) const { return k == p.k && b == p.b; }||| 19 };||| 20 struct Node {||| 21 int sum = 0;||| 22 line push;||| 23 Node *l = nullptr, *r = nullptr;||| 24 Node() = default;||| 25 };||| 26 Node *root = nullptr;||| 27 int n = 1e9 + 1;||| 28 void creatend(Node *&v) {||| 29 if (v == nullptr) {||| 30 v = new Node();||| 31 }||| 32 }||| 33 void push(Node *v, int l, int r) {||| 34 if (v->push == line()) {||| 35 return;||| 36 }||| 37 if (l + 1 < r) {||| 38 creatend(v->l);||| 39 if (v->l->push == line()) {||| 40 v->l->push = v->push;||| 41 } else {||| 42 v->l->push = {||| 43 (int)((v->push.k * 1ll * v->l->push.k) % mod),||| 44 (int)((v->push.k * 1ll * v->l->push.b + v->push.b) % mod)};||| 45 }||| 46 creatend(v->r);||| 47 if (v->r->push == line()) {||| 48 v->r->push = v->push;||| 49 } else {||| 50 v->r->push = {||| 51 (int)((v->push.k * 1ll * v->r->push.k) % mod),||| 52 (int)((v->push.k * 1ll * v->r->push.b + v->push.b) % mod)};||| 53 }||| 54 }||| 55 v->sum = (v->sum * 1ll * v->push.k) % mod;||| 56 v->sum = (v->sum + (r - l) * 1ll * v->push.b) % mod;||| 57 v->sum = (v->sum + mod) % mod;||| 58 v->push = line();||| 59 }||| 60 void update(Node *&v, int l, int r, int li, int ri, line f) {||| 61 creatend(v);||| 62 push(v, l, r);||| 63 if (li >= r || l >= ri) {||| 64 return;||| 65 }||| 66 if (li <= l && r <= ri) {||| 67 v->push = f;||| 68 push(v, l, r);||| 69 return;||| 70 }||| 71 int m = (l + r) / 2;||| 72 update(v->l, l, m, li, ri, f);||| 73 update(v->r, m, r, li, ri, f);||| 74 v->sum = (v->l->sum + v->r->sum) % mod;||| 75 }||| 76 void update(int li, int ri, line f) { update(root, 1, n, li, ri, f); }||| 77 int get() {||| 78 creatend(root);||| 79 push(root, 1, n);||| 80 return root->sum;||| 81 }||| 82 };||| 83 signed main() {||| 84 cin.tie(0)->sync_with_stdio(0);||| 85 int n;||| 86 cin >> n;||| 87 vector<int> a(n);||| 88 cin >> a;||| 89 segtree t;||| 90 t.update(1, a[0] + 1, {0, 1});||| 91 for (int i = 1; i < n; ++i) {||| 92 int sum = t.get();||| 93 t.update(1, a[i] + 1, {-1, sum});||| 94 t.update(a[i] + 1, t.n, {0, 0});||| 95 }||| 96 cout << t.get();||| 97 }||| 	15 int k = -INF, b = -INF;
51	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 while (n--) {||| 7 long long int num, a = 0, l = 0;||| 8 cin >> num;||| 9 cout << 0 - num + 1 << "" "" << num << ""\n"";||| 10 }||| 11 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 while (n--) {||| 7 long long int num, a = 0, l = 0;||| 8 cin >> num;||| 9 cout << 0 - n + 1 << "" "" << n << ""\n"";||| 10 }||| 11 }||| "	"9 cout << 0 - num + 1 << "" "" << num << ""\n"";"
51	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 long long n;||| 8 cin >> n;||| 9 if (n == 1) {||| 10 printf(""0 1\n"");||| 11 continue;||| 12 }||| 13 printf(""-%lld %lld\n"", n - 1, n);||| 14 }||| 15 return 0;||| 16 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 long long n;||| 8 cin >> n;||| 9 if (n == 0) {||| 10 printf(""0 1\n"");||| 11 continue;||| 12 }||| 13 printf(""-%lld %lld\n"", n - 1, n);||| 14 }||| 15 return 0;||| 16 }||| "	9 if (n == 1) {
52	135	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 void solvet() {||| 5 int t;||| 6 cin >> t;||| 7 for (long long __ = (0); __ < (t); __++) solve();||| 8 }||| 9 int main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 cout.precision(9);||| 14 ;||| 15 cout << setprecision(20);||| 16 solvet();||| 17 return 0;||| 18 }||| 19 void solve() {||| 20 long long mod = 1e9 + 7;||| 21 long long n, k;||| 22 cin >> n >> k;||| 23 long long ans = 0;||| 24 long long len = log2(k);||| 25 for (long long i = (0); i < (len + 1); i++) {||| 26 if (k & (1 << i)) {||| 27 long long p = 1;||| 28 for (long long j = (0); j < (i); j++) {||| 29 p *= n;||| 30 p %= mod;||| 31 }||| 32 ans += p;||| 33 ans %= mod;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 void solvet() {||| 5 int t;||| 6 cin >> t;||| 7 for (long long __ = (0); __ < (t); __++) solve();||| 8 }||| 9 int main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 cout.precision(9);||| 14 ;||| 15 cout << setprecision(20);||| 16 solvet();||| 17 return 0;||| 18 }||| 19 void solve() {||| 20 long long mod = 1e9 + 7;||| 21 long long n, k;||| 22 cin >> n >> k;||| 23 long long ans = 0;||| 24 long long len = log2(k);||| 25 for (long long i = (0); i < (len + 10); i++) {||| 26 if (k & (1 << i)) {||| 27 long long p = 1;||| 28 for (long long j = (0); j < (i); j++) {||| 29 p *= n;||| 30 p %= mod;||| 31 }||| 32 ans += p;||| 33 ans %= mod;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 	25 for (long long i = (0); i < (len + 1); i++) {
52	128	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 long long ksm(long long x, int k) {||| 5 long long sum = 1;||| 6 while (k) {||| 7 if (k & 1) sum = sum * x % mod;||| 8 x = x * x % mod;||| 9 k >>= 1;||| 10 }||| 11 return sum;||| 12 }||| 13 void solve() {||| 14 int n, k;||| 15 long long ans = 0;||| 16 scanf(""%d%d"", &n, &k);||| 17 for (int i = 33; i >= 0; i--) {||| 18 if ((1ll << i) <= k) {||| 19 k -= (1 << i);||| 20 ans = (ans + ksm(n, i)) % mod;||| 21 }||| 22 }||| 23 printf(""%lld\n"", ans);||| 24 }||| 25 int main() {||| 26 int t;||| 27 scanf(""%d"", &t);||| 28 while (t--) solve();||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 long long ksm(long long x, int k) {||| 5 long long sum = 1;||| 6 while (k) {||| 7 if (k & 1) sum = sum * x % mod;||| 8 x = x * x % mod;||| 9 k >>= 1;||| 10 }||| 11 return sum;||| 12 }||| 13 void solve() {||| 14 int n, k;||| 15 long long ans = 0;||| 16 scanf(""%d%d"", &n, &k);||| 17 for (int i = 19; i >= 0; i--) {||| 18 if ((1 << i) <= k) {||| 19 k -= (1 << i);||| 20 ans = (ans + ksm(n, i)) % mod;||| 21 }||| 22 }||| 23 printf(""%lld\n"", ans);||| 24 }||| 25 int main() {||| 26 int t;||| 27 scanf(""%d"", &t);||| 28 while (t--) solve();||| 29 return 0;||| 30 }||| "	17 for (int i = 33; i >= 0; i--) {
53	430	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << "" "" << H;||| 20 dbg_out(T...);||| 21 }||| 22 void solve() {||| 23 int n;||| 24 char c;||| 25 string s;||| 26 cin >> n >> c >> s;||| 27 vector<int> ans;||| 28 bool need = false;||| 29 for (int i = 0; i < n; i++) {||| 30 if (s[i] != c) {||| 31 need = true;||| 32 }||| 33 }||| 34 for (int i = n / 2; i < n; i++) {||| 35 if (s[i] == c) {||| 36 ans.push_back(i + 1);||| 37 break;||| 38 }||| 39 }||| 40 if (need == false) {||| 41 cout << ""0\n"";||| 42 return;||| 43 }||| 44 if ((int)ans.size() == 0) {||| 45 ans.push_back(n);||| 46 ans.push_back(n - 1);||| 47 }||| 48 cout << ans.size() << '\n';||| 49 for (int i : ans) {||| 50 cout << i << ' ';||| 51 }||| 52 cout << '\n';||| 53 }||| 54 int main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int tests = 1;||| 58 cin >> tests;||| 59 while (tests--) {||| 60 solve();||| 61 }||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << "" "" << H;||| 20 dbg_out(T...);||| 21 }||| 22 void solve() {||| 23 int n;||| 24 char c;||| 25 string s;||| 26 cin >> n >> c >> s;||| 27 vector<int> ans;||| 28 bool need = false;||| 29 for (int i = 0; i < n; i++) {||| 30 if (s[i] != c) {||| 31 need = true;||| 32 }||| 33 }||| 34 for (int i = n / 2; i < n - 1; i++) {||| 35 if (s[i] == c) {||| 36 ans.push_back(i + 1);||| 37 break;||| 38 }||| 39 }||| 40 if (need == false) {||| 41 cout << ""0\n"";||| 42 return;||| 43 }||| 44 if ((int)ans.size() == 0) {||| 45 ans.push_back(n);||| 46 ans.push_back(n - 1);||| 47 }||| 48 cout << ans.size() << '\n';||| 49 for (int i : ans) {||| 50 cout << i << ' ';||| 51 }||| 52 cout << '\n';||| 53 }||| 54 int main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int tests = 1;||| 58 cin >> tests;||| 59 while (tests--) {||| 60 solve();||| 61 }||| 62 }||| "	34 for (int i = n / 2; i < n; i++) {
53	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long T;||| 7 cin >> T;||| 8 while (T--) {||| 9 long long n;||| 10 cin >> n;||| 11 char a;||| 12 cin >> a;||| 13 string s;||| 14 cin >> s;||| 15 long long ss = s.size();||| 16 bool flag = true;||| 17 long long k, c = 0;||| 18 int x;||| 19 bool ff = true;||| 20 for (int i = 0; i < ss; i++) {||| 21 if (s[i] != a) {||| 22 ff = false;||| 23 }||| 24 }||| 25 if (ff) {||| 26 cout << 0 << endl;||| 27 continue;||| 28 }||| 29 if (ss % 2 == 0) {||| 30 x = (ss / 2) + 1;||| 31 } else {||| 32 x = (ss / 2) + 1;||| 33 }||| 34 bool fl = false;||| 35 for (long long i = x; i <= ss; i++) {||| 36 if (s[i - 1] == a) {||| 37 fl = true;||| 38 c = i;||| 39 break;||| 40 }||| 41 }||| 42 if (fl) {||| 43 cout << 1 << endl;||| 44 cout << c << endl;||| 45 } else {||| 46 cout << 2 << endl;||| 47 cout << ss << "" "" << ss - 1 << endl;||| 48 }||| 49 }||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long T;||| 7 cin >> T;||| 8 while (T--) {||| 9 long long n;||| 10 cin >> n;||| 11 char a;||| 12 cin >> a;||| 13 string s;||| 14 cin >> s;||| 15 long long ss = s.size();||| 16 bool flag = true;||| 17 long long k, c = 0;||| 18 int x;||| 19 bool ff = true;||| 20 for (int i = 0; i < ss; i++) {||| 21 if (s[i] != a) {||| 22 ff = false;||| 23 }||| 24 }||| 25 if (ff) {||| 26 cout << 0 << endl;||| 27 continue;||| 28 }||| 29 if (ss % 2 == 0) {||| 30 x = (ss / 2) + 1;||| 31 } else {||| 32 x = (ss / 2) + 1;||| 33 }||| 34 bool fl = false;||| 35 for (long long i = x; i < ss; i++) {||| 36 if (s[i - 1] == a) {||| 37 fl = true;||| 38 c = i;||| 39 break;||| 40 }||| 41 }||| 42 if (fl) {||| 43 cout << 1 << endl;||| 44 cout << c << endl;||| 45 } else {||| 46 cout << 2 << endl;||| 47 cout << ss << "" "" << ss - 1 << endl;||| 48 }||| 49 }||| 50 }||| "	35 for (long long i = x; i <= ss; i++) {
53	144	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 vector<int> ans;||| 8 int p = 0, flag = 0, n;||| 9 string s;||| 10 char ch;||| 11 cin >> n >> ch;||| 12 cin >> s;||| 13 s = "" "" + s;||| 14 for (int i = 1; i <= n; i++)||| 15 if (s[i] != ch) flag = 1;||| 16 if (!flag)||| 17 cout << ""0"" << endl;||| 18 else if (s[n] != ch) {||| 19 int f = 0;||| 20 for (int i = 1; i <= n; i++) {||| 21 f = 0;||| 22 for (int j = i; j <= n; j += i)||| 23 if (s[j] != ch) f = 1;||| 24 if (!f) {||| 25 cout << ""1"" << endl << i << endl;||| 26 break;||| 27 }||| 28 }||| 29 if (f) cout << ""2"" << endl << n - 1 << "" "" << n << endl;||| 30 } else||| 31 cout << ""1"" << endl << n << endl;||| 32 }||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 vector<int> ans;||| 8 int p = 0, flag = 0, n;||| 9 string s;||| 10 char ch;||| 11 cin >> n >> ch;||| 12 cin >> s;||| 13 s = "" "" + s;||| 14 for (int i = 1; i < n; i++)||| 15 if (s[i] != ch) flag = 1;||| 16 if (!flag)||| 17 cout << ""0"" << endl;||| 18 else if (s[n] != ch) {||| 19 int f = 0;||| 20 for (int i = 1; i <= n; i++) {||| 21 f = 0;||| 22 for (int j = i; j <= n; j += i)||| 23 if (s[j] != ch) f = 1;||| 24 if (!f) {||| 25 cout << ""1"" << endl << i << endl;||| 26 break;||| 27 }||| 28 }||| 29 if (f) cout << ""2"" << endl << n - 1 << "" "" << n << endl;||| 30 } else||| 31 cout << ""1"" << endl << n << endl;||| 32 }||| 33 return 0;||| 34 }||| "	14 for (int i = 1; i <= n; i++)
53	352	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 10, mod = 1e9 + 7;||| 4 template <typename T>||| 5 void Debug(T x, string s) {||| 6 cout << s << "": "" << x << endl;||| 7 }||| 8 const int maxn = 1e6 + 10;||| 9 int prime[maxn];||| 10 int visit[maxn];||| 11 void Prime() {||| 12 visit[1] = 1;||| 13 for (int i = 2; i < maxn; i++) {||| 14 if (!visit[i]) {||| 15 prime[++prime[0]] = i;||| 16 }||| 17 for (int j = 1; j <= prime[0] && i * prime[j] < maxn; j++) {||| 18 visit[i * prime[j]] = 1;||| 19 if (i % prime[j] == 0) {||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 }||| 25 void solve() {||| 26 int n;||| 27 char c;||| 28 cin >> n >> c;||| 29 string s;||| 30 cin >> s;||| 31 vector<int> vec;||| 32 for (int i = 0; i < n; i++) {||| 33 if (s[i] != c) vec.push_back(i + 1);||| 34 }||| 35 if (!vec.size()) {||| 36 cout << 0 << endl;||| 37 return;||| 38 }||| 39 if (s[n - 1] == c) {||| 40 cout << 1 << endl;||| 41 cout << n << endl;||| 42 return;||| 43 }||| 44 for (int i = n / 2 + 1; i <= n; i++) {||| 45 if (s[i - 1] == c) {||| 46 cout << 1 << endl;||| 47 cout << i << endl;||| 48 return;||| 49 }||| 50 }||| 51 cout << 2 << endl;||| 52 cout << n - 1 << "" "" << n << endl;||| 53 }||| 54 int main() {||| 55 ios::sync_with_stdio(false);||| 56 cin.tie(0);||| 57 cout.tie(0);||| 58 Prime();||| 59 int t;||| 60 cin >> t;||| 61 while (t--) solve();||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 10, mod = 1e9 + 7;||| 4 template <typename T>||| 5 void Debug(T x, string s) {||| 6 cout << s << "": "" << x << endl;||| 7 }||| 8 const int maxn = 1e6 + 10;||| 9 int prime[maxn];||| 10 int visit[maxn];||| 11 void Prime() {||| 12 visit[1] = 1;||| 13 for (int i = 2; i < maxn; i++) {||| 14 if (!visit[i]) {||| 15 prime[++prime[0]] = i;||| 16 }||| 17 for (int j = 1; j <= prime[0] && i * prime[j] < maxn; j++) {||| 18 visit[i * prime[j]] = 1;||| 19 if (i % prime[j] == 0) {||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 }||| 25 void solve() {||| 26 int n;||| 27 char c;||| 28 cin >> n >> c;||| 29 string s;||| 30 cin >> s;||| 31 vector<int> vec;||| 32 for (int i = 0; i < n; i++) {||| 33 if (s[i] != c) vec.push_back(i + 1);||| 34 }||| 35 if (!vec.size()) {||| 36 cout << 0 << endl;||| 37 return;||| 38 }||| 39 if (s[n - 1] == c) {||| 40 cout << 1 << endl;||| 41 cout << n << endl;||| 42 return;||| 43 }||| 44 for (int i = n / 2; i <= n; i++) {||| 45 if (s[i - 1] == c) {||| 46 cout << 1 << endl;||| 47 cout << i << endl;||| 48 return;||| 49 }||| 50 }||| 51 cout << 2 << endl;||| 52 cout << n - 1 << "" "" << n << endl;||| 53 }||| 54 int main() {||| 55 ios::sync_with_stdio(false);||| 56 cin.tie(0);||| 57 cout.tie(0);||| 58 Prime();||| 59 int t;||| 60 cin >> t;||| 61 while (t--) solve();||| 62 }||| "	44 for (int i = n / 2 + 1; i <= n; i++) {
53	469	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 3, Mod = 1e9 + 7;||| 4 const int maxN = 1e5 + 3;||| 5 long long gcd(long long a, long long b) {||| 6 if (a > b) swap(a, b);||| 7 if (a == 0) return b;||| 8 return gcd(b, a % b);||| 9 }||| 10 void solve() {||| 11 long long n;||| 12 char c;||| 13 string s;||| 14 cin >> n >> c;||| 15 cin >> s;||| 16 bool issame = 1;||| 17 bool divby[n + 1];||| 18 for (int i = 1; i <= n; i++) divby[i] = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 if (s[i] != c) {||| 21 issame = 0;||| 22 for (int j = 1; j * j <= i + 1; j++) {||| 23 if ((i + 1) % j == 0) {||| 24 divby[j] = 1;||| 25 divby[(i + 1) / j] = 1;||| 26 }||| 27 }||| 28 }||| 29 }||| 30 if (issame) {||| 31 cout << 0 << endl;||| 32 return;||| 33 }||| 34 for (int i = 1; i <= n; i++) {||| 35 if (divby[i] == 0) {||| 36 cout << 1 << endl;||| 37 cout << i << endl;||| 38 return;||| 39 }||| 40 }||| 41 cout << 2 << endl;||| 42 for (int i = 2; i < n; i++) {||| 43 if (n % i != 0) {||| 44 cout << n << "" "" << i << endl;||| 45 return;||| 46 }||| 47 }||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(false);||| 51 cin.tie(nullptr);||| 52 cout.tie(nullptr);||| 53 int t = 1;||| 54 cin >> t;||| 55 for (int i = 0; i < t; i++) {||| 56 solve();||| 57 }||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 3, Mod = 1e9 + 7;||| 4 const int maxN = 1e5 + 3;||| 5 long long gcd(long long a, long long b) {||| 6 if (a > b) swap(a, b);||| 7 if (a == 0) return b;||| 8 return gcd(b, a % b);||| 9 }||| 10 void solve() {||| 11 long long n;||| 12 char c;||| 13 string s;||| 14 cin >> n >> c;||| 15 cin >> s;||| 16 bool issame = 1;||| 17 bool divby[n + 1];||| 18 for (int i = 1; i <= n; i++) divby[i] = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 if (s[i] != c) {||| 21 issame = 0;||| 22 for (int j = 1; j * j <= i + 1; j++) {||| 23 if ((i + 1) % j == 0) {||| 24 divby[j] = 1;||| 25 divby[(i + 1) / j] = 1;||| 26 }||| 27 }||| 28 }||| 29 }||| 30 if (issame) {||| 31 cout << 0 << endl;||| 32 return;||| 33 }||| 34 for (int i = 1; i <= n; i++) {||| 35 if (divby[i] == 0) {||| 36 cout << 1 << endl;||| 37 cout << i << endl;||| 38 return;||| 39 }||| 40 }||| 41 cout << 2 << endl;||| 42 for (int i = 2; i < n; i++) {||| 43 if (n % i != 0) {||| 44 cout << n << "" "" << i << endl;||| 45 }||| 46 }||| 47 }||| 48 int main() {||| 49 ios_base::sync_with_stdio(false);||| 50 cin.tie(nullptr);||| 51 cout.tie(nullptr);||| 52 int t = 1;||| 53 cin >> t;||| 54 for (int i = 0; i < t; i++) {||| 55 solve();||| 56 }||| 57 }||| "	45 return;
53	150	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 char c;||| 6 cin >> n >> c;||| 7 string s;||| 8 cin >> s;||| 9 long long int o = 0, e = 0;||| 10 long long int vo, ve;||| 11 for (long long int i = 1; i <= n; i++) {||| 12 if (s[i - 1] != c) {||| 13 if (i % 2) {||| 14 o++;||| 15 vo = i;||| 16 } else {||| 17 e++;||| 18 ve = i;||| 19 }||| 20 }||| 21 }||| 22 if (o == 0 and e == 0) {||| 23 cout << 0 << endl;||| 24 } else if (o == 0) {||| 25 cout << 1 << endl;||| 26 if (ve - 1 != 1)||| 27 cout << ve - 1 << endl;||| 28 else {||| 29 cout << ve + 1 << endl;||| 30 }||| 31 } else if (e == 0) {||| 32 cout << 1 << endl << 2 << endl;||| 33 } else {||| 34 vector<long long int> idx, b;||| 35 for (long long int i = 1; i <= n; i++) {||| 36 if (s[i - 1] == c) {||| 37 idx.push_back(i);||| 38 } else {||| 39 b.push_back(i);||| 40 }||| 41 }||| 42 for (auto i : idx) {||| 43 long long int j = i;||| 44 long long int cnt = 1;||| 45 long long int flag = 1;||| 46 while (j * cnt <= n) {||| 47 if (binary_search(b.begin(), b.end(), j * cnt)) {||| 48 flag = 0;||| 49 break;||| 50 }||| 51 cnt++;||| 52 }||| 53 if (flag) {||| 54 cout << 1 << endl << i << endl;||| 55 return;||| 56 }||| 57 }||| 58 cout << 2 << endl;||| 59 if (ve - 1 != 1)||| 60 cout << ""2 "" << ve - 1 << endl;||| 61 else {||| 62 cout << ""2 "" << ve + 1 << endl;||| 63 }||| 64 }||| 65 }||| 66 int32_t main() {||| 67 ios_base::sync_with_stdio(false);||| 68 cin.tie(NULL);||| 69 long long int t;||| 70 cin >> t;||| 71 while (t--) solve();||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 char c;||| 6 cin >> n >> c;||| 7 string s;||| 8 cin >> s;||| 9 long long int o = 0, e = 0;||| 10 long long int vo, ve;||| 11 for (long long int i = 1; i <= n; i++) {||| 12 if (s[i - 1] != c) {||| 13 if (i % 2) {||| 14 o++;||| 15 vo = i;||| 16 } else {||| 17 e++;||| 18 ve = i;||| 19 }||| 20 }||| 21 }||| 22 if (o == 0 and e == 0) {||| 23 cout << 0 << endl;||| 24 } else if (o == 0) {||| 25 cout << 1 << endl;||| 26 if (ve - 1 != 1)||| 27 cout << ve - 1 << endl;||| 28 else {||| 29 cout << ve + 1 << endl;||| 30 }||| 31 } else if (e == 0) {||| 32 cout << 1 << endl << 2 << endl;||| 33 } else {||| 34 vector<long long int> idx, b;||| 35 for (long long int i = 1; i <= n; i++) {||| 36 if (s[i - 1] == c) {||| 37 idx.push_back(i);||| 38 } else {||| 39 b.push_back(i);||| 40 }||| 41 }||| 42 for (auto i : idx) {||| 43 long long int j = i;||| 44 long long int cnt = 1;||| 45 long long int flag = 1;||| 46 while (j * cnt < n) {||| 47 if (binary_search(b.begin(), b.end(), j * cnt)) {||| 48 flag = 0;||| 49 break;||| 50 }||| 51 cnt++;||| 52 }||| 53 if (flag) {||| 54 cout << 1 << endl << i << endl;||| 55 return;||| 56 }||| 57 }||| 58 cout << 2 << endl;||| 59 if (ve - 1 != 1)||| 60 cout << ""2 "" << ve - 1 << endl;||| 61 else {||| 62 cout << ""2 "" << ve + 1 << endl;||| 63 }||| 64 }||| 65 }||| 66 int32_t main() {||| 67 ios_base::sync_with_stdio(false);||| 68 cin.tie(NULL);||| 69 long long int t;||| 70 cin >> t;||| 71 while (t--) solve();||| 72 return 0;||| 73 }||| "	46 while (j * cnt <= n) {
54	127	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 100;||| 4 int fa[maxn], col[maxn][2], dis[maxn];||| 5 int find(int x) {||| 6 if (x != fa[x]) {||| 7 int root = find(fa[x]);||| 8 dis[x] ^= dis[fa[x]];||| 9 fa[x] = root;||| 10 }||| 11 return fa[x];||| 12 }||| 13 int main() {||| 14 int t;||| 15 cin >> t;||| 16 while (t--) {||| 17 bool f = false;||| 18 int n, m;||| 19 cin >> n >> m;||| 20 for (int i = 1; i <= n; i++) {||| 21 fa[i] = i;||| 22 dis[i] = 0;||| 23 col[i][0] = 1;||| 24 col[i][1] = 0;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 int x, y;||| 28 string s;||| 29 cin >> x >> y >> s;||| 30 int val = s[0] == 'i' ? 1 : 0;||| 31 int px = find(x), py = find(y);||| 32 if (px == py) {||| 33 if ((dis[x] ^ dis[y]) != val) {||| 34 f = true;||| 35 }||| 36 } else {||| 37 fa[py] = px;||| 38 dis[py] = dis[x] ^ dis[y] ^ val;||| 39 col[px][1] += col[py][dis[py] ^ 1];||| 40 col[px][0] += col[py][dis[py]];||| 41 }||| 42 }||| 43 if (f) {||| 44 puts(""-1"");||| 45 continue;||| 46 }||| 47 int ans = 0;||| 48 for (int i = 1; i <= n; i++) {||| 49 if (fa[i] == i) {||| 50 ans += max(col[i][0], col[i][1]);||| 51 }||| 52 }||| 53 cout << ans << endl;||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 100;||| 4 int fa[maxn], col[maxn][2], dis[maxn];||| 5 int find(int x) {||| 6 if (x != fa[x]) {||| 7 int root = find(fa[x]);||| 8 dis[x] ^= dis[fa[x]];||| 9 fa[x] = root;||| 10 }||| 11 return fa[x];||| 12 }||| 13 int main() {||| 14 int t;||| 15 cin >> t;||| 16 while (t--) {||| 17 bool f = false;||| 18 int n, m;||| 19 cin >> n >> m;||| 20 for (int i = 1; i <= n; i++) {||| 21 fa[i] = i;||| 22 dis[i] = 0;||| 23 col[i][0] = 1;||| 24 col[i][1] = 0;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 int x, y;||| 28 string s;||| 29 cin >> x >> y >> s;||| 30 int val = s[0] == 'i' ? 1 : 0;||| 31 int px = find(x), py = find(y);||| 32 if (px == py) {||| 33 if ((dis[x] ^ dis[y]) != val) {||| 34 f = true;||| 35 break;||| 36 }||| 37 } else {||| 38 fa[py] = px;||| 39 dis[py] = dis[x] ^ dis[y] ^ val;||| 40 col[px][1] += col[py][dis[py] ^ 1];||| 41 col[px][0] += col[py][dis[py]];||| 42 }||| 43 }||| 44 if (f) {||| 45 puts(""-1"");||| 46 continue;||| 47 }||| 48 int ans = 0;||| 49 for (int i = 1; i <= n; i++) {||| 50 if (fa[i] == i) {||| 51 ans += max(col[i][0], col[i][1]);||| 52 }||| 53 }||| 54 cout << ans << endl;||| 55 }||| 56 return 0;||| 57 }||| "	35 
54	131	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long MOD = 1e9 + 7;||| 4 void cincout() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 cout << fixed << setprecision(15);||| 9 }||| 10 pair<long long, long long> binarySearch(long long l, long long r, long long pr,||| 11 long long x) {||| 12 if (r >= l) {||| 13 long long mid = l + (r - l) / 2;||| 14 long long ans = (r) * (r + 1) / 2;||| 15 cout << ans << ""  r ="" << r << endl;||| 16 if (ans == x) return {l, r};||| 17 if (ans > x) return binarySearch(l, mid - 1, r, x);||| 18 return binarySearch(l, r + mid, r, x);||| 19 }||| 20 return {-1, -1};||| 21 }||| 22 set<int> parent;||| 23 vector<vector<pair<int, int> > > v(200005);||| 24 vector<int> d;||| 25 int N = 2000005;||| 26 int M = 2000005;||| 27 vector<int> mem(2000005);||| 28 vector<bool> visited(2000005);||| 29 vector<bool> imposter(2000005);||| 30 vector<bool> recStack(2000005);||| 31 set<int> second;||| 32 queue<int> q;||| 33 void dfsParent(int node) {||| 34 visited[node] = 1;||| 35 for (auto i : v[node]) {||| 36 parent.erase(i.first);||| 37 if (!visited[i.first]) {||| 38 dfsParent(i.first);||| 39 }||| 40 }||| 41 }||| 42 void getparents() {||| 43 for (int i = 1; i <= N; i++) parent.insert(i);||| 44 for (int i = 1; i <= N; i++) {||| 45 dfsParent(i);||| 46 }||| 47 if (parent.size() == 0) parent.insert(1);||| 48 }||| 49 bool ans = true;||| 50 int coun[2];||| 51 void dfs(int node) {||| 52 coun[imposter[node]]++;||| 53 visited[node] = 1;||| 54 for (auto i : v[node]) {||| 55 auto first = imposter[node] ^ i.second;||| 56 if (!visited[i.first]) {||| 57 imposter[i.first] = first;||| 58 dfs(i.first);||| 59 } else if (first != imposter[i.first]) {||| 60 ans = false;||| 61 return;||| 62 }||| 63 }||| 64 }||| 65 void solve() {||| 66 getparents();||| 67 for (int i = 1; i <= N; i++) {||| 68 visited[i] = 0;||| 69 }||| 70 int maxx = 0;||| 71 for (int i = 1; i <= N; i++) {||| 72 if (!visited[i]) {||| 73 dfs(i);||| 74 maxx += max(coun[0], coun[1]);||| 75 coun[0] = coun[1] = 0;||| 76 }||| 77 }||| 78 if (!ans) {||| 79 cout << -1 << endl;||| 80 } else {||| 81 if (M == 0)||| 82 cout << N << endl;||| 83 else||| 84 cout << maxx << endl;||| 85 }||| 86 }||| 87 int main() {||| 88 cincout();||| 89 long long t = 1;||| 90 cin >> t;||| 91 int i = 1;||| 92 while (t--) {||| 93 int n, m;||| 94 cin >> n >> m;||| 95 N = n;||| 96 M = m;||| 97 string ss;||| 98 for (int i = 0; i < m; i++) {||| 99 int a, b;||| 100 cin >> a >> b;||| 101 string second;||| 102 cin >> second;||| 103 bool first = second[0] == 'c' ? 0 : 1;||| 104 v[a].push_back({b, first});||| 105 v[b].push_back({a, first});||| 106 }||| 107 solve();||| 108 parent.clear();||| 109 ans = true;||| 110 coun[0] = coun[1] = 0;||| 111 for (int i = 1; i <= n; i++) {||| 112 visited[i] = 0;||| 113 imposter[i] = 0;||| 114 v[i].clear();||| 115 }||| 116 }||| 117 return 0;||| 118 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long MOD = 1e9 + 7;||| 4 void cincout() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 cout << fixed << setprecision(15);||| 9 }||| 10 pair<long long, long long> binarySearch(long long l, long long r, long long pr,||| 11 long long x) {||| 12 if (r >= l) {||| 13 long long mid = l + (r - l) / 2;||| 14 long long ans = (r) * (r + 1) / 2;||| 15 cout << ans << ""  r ="" << r << endl;||| 16 if (ans == x) return {l, r};||| 17 if (ans > x) return binarySearch(l, mid - 1, r, x);||| 18 return binarySearch(l, r + mid, r, x);||| 19 }||| 20 return {-1, -1};||| 21 }||| 22 set<int> parent;||| 23 vector<vector<pair<int, int> > > v(200005);||| 24 vector<int> d;||| 25 int N = 2000005;||| 26 int M = 2000005;||| 27 vector<int> mem(2000005);||| 28 vector<bool> visited(2000005);||| 29 vector<bool> imposter(2000005);||| 30 vector<bool> recStack(2000005);||| 31 set<int> second;||| 32 queue<int> q;||| 33 void dfsParent(int node) {||| 34 visited[node] = 1;||| 35 for (auto i : v[node]) {||| 36 parent.erase(i.first);||| 37 if (!visited[i.first]) {||| 38 dfsParent(i.first);||| 39 }||| 40 }||| 41 }||| 42 void getparents() {||| 43 for (int i = 1; i <= N; i++) parent.insert(i);||| 44 for (int i = 1; i <= N; i++) {||| 45 dfsParent(i);||| 46 }||| 47 if (parent.size() == 0) parent.insert(1);||| 48 }||| 49 bool ans = true;||| 50 int coun[2];||| 51 void dfs(int node) {||| 52 coun[imposter[node]]++;||| 53 visited[node] = 1;||| 54 for (auto i : v[node]) {||| 55 auto first = imposter[node] ^ i.second;||| 56 if (!visited[i.first]) {||| 57 imposter[i.first] = first;||| 58 dfs(i.first);||| 59 } else if (first != imposter[i.first]) {||| 60 ans = false;||| 61 return;||| 62 }||| 63 }||| 64 }||| 65 void solve() {||| 66 getparents();||| 67 for (int i = 1; i <= N; i++) {||| 68 visited[i] = 0;||| 69 }||| 70 int maxx = 0;||| 71 for (int i = 1; i <= N; i++) {||| 72 if (!visited[i]) {||| 73 dfs(i);||| 74 maxx = max(coun[0], coun[1]);||| 75 coun[0] = coun[1] = 0;||| 76 }||| 77 }||| 78 if (!ans) {||| 79 cout << -1 << endl;||| 80 } else {||| 81 if (M == 0)||| 82 cout << N << endl;||| 83 else||| 84 cout << maxx << endl;||| 85 }||| 86 }||| 87 int main() {||| 88 cincout();||| 89 long long t = 1;||| 90 cin >> t;||| 91 int i = 1;||| 92 while (t--) {||| 93 int n, m;||| 94 cin >> n >> m;||| 95 N = n;||| 96 M = m;||| 97 string ss;||| 98 for (int i = 0; i < m; i++) {||| 99 int a, b;||| 100 cin >> a >> b;||| 101 string second;||| 102 cin >> second;||| 103 bool first = second[0] == 'c' ? 0 : 1;||| 104 v[a].push_back({b, first});||| 105 v[b].push_back({a, first});||| 106 }||| 107 solve();||| 108 parent.clear();||| 109 ans = true;||| 110 coun[0] = coun[1] = 0;||| 111 for (int i = 1; i <= n; i++) {||| 112 visited[i] = 0;||| 113 imposter[i] = 0;||| 114 v[i].clear();||| 115 }||| 116 }||| 117 return 0;||| 118 }||| "	74 maxx += max(coun[0], coun[1]);
54	92	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""-Ofast,unroll-loops"")||| 3 #pragma GCC target(""avx2"")||| 4 std::mt19937 rnd(237);||| 5 using namespace std;||| 6 const int N = 2e5, mod = 1e9 + 7;||| 7 int n, m, type[N], cmp[N], cmp_p = 0;||| 8 vector<array<int, 2>> g1[N], g2[N];||| 9 long long dfs(int v) {||| 10 cmp[cmp_p++] = v;||| 11 long long ans = (type[v] ? 0 : 1);||| 12 for (auto &[u, c] : g1[v]) {||| 13 if (~type[u]) {||| 14 if (type[v] && type[u] != c) return -2e9;||| 15 if (!type[v] && type[u] == c) return -2e9;||| 16 } else {||| 17 type[u] = (type[v] ? c : 1 - c);||| 18 ans += dfs(u);||| 19 }||| 20 }||| 21 for (auto &[u, c] : g2[v]) {||| 22 if (~type[u]) {||| 23 if (type[u] == 1 && type[v] != c) return -2e9;||| 24 if (type[u] == 0 && type[v] == c) return -2e9;||| 25 } else {||| 26 type[u] = (type[v] == c ? 1 : 0);||| 27 ans += dfs(u);||| 28 }||| 29 }||| 30 return ans;||| 31 }||| 32 void solve() {||| 33 cin >> n >> m;||| 34 fill(type, type + n, -1);||| 35 cmp_p = 0;||| 36 for (int i = 0; i < n; ++i) {||| 37 g1[i].clear();||| 38 g2[i].clear();||| 39 }||| 40 for (int i = 0; i < m; ++i) {||| 41 int u, v;||| 42 string s;||| 43 cin >> u >> v >> s;||| 44 --u, --v;||| 45 if (s == ""crewmate"") {||| 46 g1[u].push_back({v, 1});||| 47 g2[v].push_back({u, 1});||| 48 } else {||| 49 g1[u].push_back({v, 0});||| 50 g2[v].push_back({u, 0});||| 51 }||| 52 }||| 53 long long ans = 0;||| 54 for (int i = 0; i < n; ++i) {||| 55 if (type[i] == -1) {||| 56 long long mx = -2e9;||| 57 type[i] = 1;||| 58 cmp_p = 0;||| 59 mx = max(mx, dfs(i));||| 60 for (int j = 0; j < cmp_p; ++j) {||| 61 type[cmp[j]] = -1;||| 62 }||| 63 type[i] = 0;||| 64 cmp_p = 0;||| 65 mx = max(mx, dfs(i));||| 66 ans += mx;||| 67 }||| 68 }||| 69 cout << (ans < 0 ? -1 : ans);||| 70 }||| 71 signed main() {||| 72 ios_base::sync_with_stdio(0);||| 73 cin.tie(0);||| 74 cout.tie(0);||| 75 int tt = 1;||| 76 cin >> tt;||| 77 while (tt--) {||| 78 solve();||| 79 cout << ""\n"";||| 80 }||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""-Ofast,unroll-loops"")||| 3 #pragma GCC target(""avx2"")||| 4 std::mt19937 rnd(237);||| 5 using namespace std;||| 6 const int N = 2e5, mod = 1e9 + 7;||| 7 int n, m, type[N], cmp[N], cmp_p = 0;||| 8 vector<array<int, 2>> g1[N], g2[N];||| 9 long long dfs(int v) {||| 10 cmp[cmp_p++] = v;||| 11 long long ans = (type[v] ? 0 : 1);||| 12 for (auto &[u, c] : g1[v]) {||| 13 if (~type[u]) {||| 14 if (type[v] && type[u] != c) return -2e9;||| 15 if (!type[v] && type[u] == c) return -2e9;||| 16 } else {||| 17 type[u] = (type[v] ? c : 1 - c);||| 18 ans += dfs(u);||| 19 }||| 20 }||| 21 for (auto &[u, c] : g2[v]) {||| 22 if (~type[u]) {||| 23 if (type[u] == 1 && type[v] != c) return -2e9;||| 24 if (type[u] == 0 && type[v] == c) return -2e9;||| 25 } else {||| 26 type[u] = (type[v] == c ? 1 : 0);||| 27 ans += dfs(u);||| 28 }||| 29 }||| 30 return ans;||| 31 }||| 32 void solve() {||| 33 cin >> n >> m;||| 34 fill(type, type + n, -1);||| 35 cmp_p = 0;||| 36 for (int i = 0; i < n; ++i) {||| 37 g1[i].clear();||| 38 g2[i].clear();||| 39 }||| 40 for (int i = 0; i < m; ++i) {||| 41 int u, v;||| 42 string s;||| 43 cin >> u >> v >> s;||| 44 --u, --v;||| 45 if (s == ""crewmate"") {||| 46 g1[u].push_back({v, 1});||| 47 g2[v].push_back({u, 1});||| 48 } else {||| 49 g1[u].push_back({v, 0});||| 50 g2[v].push_back({u, 0});||| 51 }||| 52 }||| 53 long long ans = 0;||| 54 for (int i = 0; i < n; ++i) {||| 55 if (type[i] == -1) {||| 56 long long mx = -1;||| 57 type[i] = 1;||| 58 cmp_p = 0;||| 59 mx = max(mx, dfs(i));||| 60 for (int j = 0; j < cmp_p; ++j) {||| 61 type[cmp[j]] = -1;||| 62 }||| 63 type[i] = 0;||| 64 cmp_p = 0;||| 65 mx = max(mx, dfs(i));||| 66 ans += mx;||| 67 }||| 68 }||| 69 cout << (ans < 0 ? -1 : ans);||| 70 }||| 71 signed main() {||| 72 ios_base::sync_with_stdio(0);||| 73 cin.tie(0);||| 74 cout.tie(0);||| 75 int tt = 1;||| 76 cin >> tt;||| 77 while (tt--) {||| 78 solve();||| 79 cout << ""\n"";||| 80 }||| 81 }||| "	56 long long mx = -2e9;
55	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long extgcd(long long a, long long b, long long& x, long long& y) {||| 8 if (b == 0) {||| 9 x = 1;||| 10 y = 0;||| 11 return a;||| 12 }||| 13 long long x1, y1;||| 14 long long d = extgcd(b, a % b, x1, y1);||| 15 x = y1;||| 16 y = x1 - y1 * (a / b);||| 17 return d;||| 18 }||| 19 long long revrsno(long long n) {||| 20 long long k = 0;||| 21 vector<long long> z;||| 22 while (n > 0) {||| 23 z.push_back(n % 10);||| 24 n /= 10;||| 25 }||| 26 for (long long i = 0; i < z.size(); i++) k = k * 10 + z[i];||| 27 return k;||| 28 }||| 29 bool isPrime(long long n) {||| 30 if (n <= 1) return false;||| 31 if (n <= 3) return true;||| 32 if (n % 2 == 0 || n % 3 == 0) return false;||| 33 for (long long i = 5; i * i <= n; i = i + 6)||| 34 if (n % i == 0 || n % (i + 2) == 0) return false;||| 35 return true;||| 36 }||| 37 bool isPowerOfTwo(long long n) {||| 38 if (n == 0) return false;||| 39 return (ceil(log2(n)) == floor(log2(n)));||| 40 }||| 41 long long powm(long long a, long long b) {||| 42 long long res = 1;||| 43 while (b) {||| 44 if (b & 1) res = (res * a) % 1000000007;||| 45 a = (a * a) % 1000000007;||| 46 b >>= 1;||| 47 }||| 48 return res;||| 49 }||| 50 long long divide(long long a, long long b) {||| 51 return (a % 1000000007) * powm(b, 1000000007 - 2) % 1000000007;||| 52 }||| 53 long long mul(long long a, long long b) {||| 54 return ((a % 1000000007) * (b % 1000000007)) % 1000000007;||| 55 }||| 56 long long add(long long a, long long b) {||| 57 return (a % 1000000007 + b % 1000000007) % 1000000007;||| 58 }||| 59 long long Totfun(long long n) {||| 60 long long z = n;||| 61 if (n % 2 == 0) {||| 62 while (n % 2 == 0) {||| 63 n /= 2;||| 64 }||| 65 z /= 2;||| 66 }||| 67 for (long long i = 3; i <= sqrt(n); i += 2) {||| 68 if (isPrime(i) && n % i == 0) {||| 69 while (n % i == 0) {||| 70 n /= i;||| 71 }||| 72 z -= z / i;||| 73 }||| 74 }||| 75 if (n > 1) {||| 76 z -= z / n;||| 77 }||| 78 return z;||| 79 }||| 80 long long maxPrimeFactor(long long n) {||| 81 long long maxPrime = -1;||| 82 while (n % 2 == 0) {||| 83 maxPrime = 2;||| 84 n >>= 1;||| 85 }||| 86 for (long long i = 3; i <= sqrt(n); i += 2) {||| 87 while (n % i == 0) {||| 88 maxPrime = i;||| 89 n = n / i;||| 90 }||| 91 }||| 92 if (n > 2) maxPrime = n;||| 93 return maxPrime;||| 94 }||| 95 long long fact[100001];||| 96 long long nCr(long long n, long long r) {||| 97 if (r > n || r < 0) return 0;||| 98 long long z = fact[n];||| 99 z = mul(z, powm(fact[n - r], 1000000007 - 2));||| 100 z = mul(z, powm(fact[r], 1000000007 - 2));||| 101 return z;||| 102 }||| 103 void solve() {||| 104 long long n;||| 105 cin >> n;||| 106 long long ans = powm(4, pow(2, n) - 2);||| 107 ans %= 1000000007;||| 108 ans *= 6;||| 109 ans %= 1000000007;||| 110 cout << ans << endl;||| 111 return;||| 112 }||| 113 int main() {||| 114 ios_base::sync_with_stdio(false);||| 115 cin.tie(NULL);||| 116 cout.tie(NULL);||| 117 long long t;||| 118 t = 1;||| 119 while (t--) {||| 120 solve();||| 121 }||| 122 return 0;||| 123 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long extgcd(long long a, long long b, long long& x, long long& y) {||| 8 if (b == 0) {||| 9 x = 1;||| 10 y = 0;||| 11 return a;||| 12 }||| 13 long long x1, y1;||| 14 long long d = extgcd(b, a % b, x1, y1);||| 15 x = y1;||| 16 y = x1 - y1 * (a / b);||| 17 return d;||| 18 }||| 19 long long revrsno(long long n) {||| 20 long long k = 0;||| 21 vector<long long> z;||| 22 while (n > 0) {||| 23 z.push_back(n % 10);||| 24 n /= 10;||| 25 }||| 26 for (long long i = 0; i < z.size(); i++) k = k * 10 + z[i];||| 27 return k;||| 28 }||| 29 bool isPrime(long long n) {||| 30 if (n <= 1) return false;||| 31 if (n <= 3) return true;||| 32 if (n % 2 == 0 || n % 3 == 0) return false;||| 33 for (long long i = 5; i * i <= n; i = i + 6)||| 34 if (n % i == 0 || n % (i + 2) == 0) return false;||| 35 return true;||| 36 }||| 37 bool isPowerOfTwo(long long n) {||| 38 if (n == 0) return false;||| 39 return (ceil(log2(n)) == floor(log2(n)));||| 40 }||| 41 long long powm(long long a, long long b) {||| 42 long long res = 1;||| 43 while (b) {||| 44 if (b & 1) res = (res * a) % 1000000007;||| 45 a = (a * a) % 1000000007;||| 46 b >>= 1;||| 47 }||| 48 return res;||| 49 }||| 50 long long divide(long long a, long long b) {||| 51 return (a % 1000000007) * powm(b, 1000000007 - 2) % 1000000007;||| 52 }||| 53 long long mul(long long a, long long b) {||| 54 return ((a % 1000000007) * (b % 1000000007)) % 1000000007;||| 55 }||| 56 long long add(long long a, long long b) {||| 57 return (a % 1000000007 + b % 1000000007) % 1000000007;||| 58 }||| 59 long long Totfun(long long n) {||| 60 long long z = n;||| 61 if (n % 2 == 0) {||| 62 while (n % 2 == 0) {||| 63 n /= 2;||| 64 }||| 65 z /= 2;||| 66 }||| 67 for (long long i = 3; i <= sqrt(n); i += 2) {||| 68 if (isPrime(i) && n % i == 0) {||| 69 while (n % i == 0) {||| 70 n /= i;||| 71 }||| 72 z -= z / i;||| 73 }||| 74 }||| 75 if (n > 1) {||| 76 z -= z / n;||| 77 }||| 78 return z;||| 79 }||| 80 long long maxPrimeFactor(long long n) {||| 81 long long maxPrime = -1;||| 82 while (n % 2 == 0) {||| 83 maxPrime = 2;||| 84 n >>= 1;||| 85 }||| 86 for (long long i = 3; i <= sqrt(n); i += 2) {||| 87 while (n % i == 0) {||| 88 maxPrime = i;||| 89 n = n / i;||| 90 }||| 91 }||| 92 if (n > 2) maxPrime = n;||| 93 return maxPrime;||| 94 }||| 95 long long fact[100001];||| 96 long long nCr(long long n, long long r) {||| 97 if (r > n || r < 0) return 0;||| 98 long long z = fact[n];||| 99 z = mul(z, powm(fact[n - r], 1000000007 - 2));||| 100 z = mul(z, powm(fact[r], 1000000007 - 2));||| 101 return z;||| 102 }||| 103 void solve() {||| 104 long long n;||| 105 cin >> n;||| 106 long long ans = powm(4, powm(2, n) - 2);||| 107 ans %= 1000000007;||| 108 ans *= 6;||| 109 ans %= 1000000007;||| 110 cout << ans << endl;||| 111 return;||| 112 }||| 113 int main() {||| 114 ios_base::sync_with_stdio(false);||| 115 cin.tie(NULL);||| 116 cout.tie(NULL);||| 117 long long t;||| 118 t = 1;||| 119 while (t--) {||| 120 solve();||| 121 }||| 122 return 0;||| 123 }||| 	106 long long ans = powm(4, pow(2, n) - 2);
55	149	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 constexpr ll MOD = (ll)1e9 + 7;||| 6 ll exp(ll b) {||| 7 if (b == 1) {||| 8 return 2LL;||| 9 }||| 10 ll res = exp(b / 2);||| 11 res %= MOD;||| 12 res *= res;||| 13 res %= MOD;||| 14 if (b % 2 == 1) {||| 15 res *= 2;||| 16 }||| 17 res %= MOD;||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(nullptr);||| 23 ll k;||| 24 cin >> k;||| 25 if (k == 1) {||| 26 cout << 6 << '\n';||| 27 return 0;||| 28 }||| 29 ll node_count = (1LL << k) - 1;||| 30 ll p = node_count - 1;||| 31 ll ans = 6LL * exp(2LL * p);||| 32 ans %= MOD;||| 33 cout << ans << '\n';||| 34 return 0;||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 constexpr ll MOD = (ll)1e9 + 7;||| 6 ll exp(ll b) {||| 7 if (b == 1) {||| 8 return 2LL;||| 9 }||| 10 ll res = exp(b / 2);||| 11 res %= MOD;||| 12 res *= res;||| 13 res %= MOD;||| 14 if (b % 2 == 1) {||| 15 res *= 2;||| 16 }||| 17 res %= MOD;||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(nullptr);||| 23 ll k;||| 24 cin >> k;||| 25 if (k == 1) {||| 26 cout << 6 << '\n';||| 27 return 0;||| 28 }||| 29 ll node_count = (1 << k) - 1;||| 30 ll p = node_count - 1;||| 31 ll ans = 6LL * exp(2LL * p);||| 32 ans %= MOD;||| 33 cout << ans << '\n';||| 34 return 0;||| 35 }||| 	29 ll node_count = (1LL << k) - 1;
55	87	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline char gc() {||| 4 static char buf[1000000], *p1 = buf, *p2 = buf;||| 5 return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2)||| 6 ? EOF||| 7 : *p1++;||| 8 }||| 9 long long read() {||| 10 long long pos = 1, num = 0;||| 11 char ch = getchar();||| 12 while (!isdigit(ch)) {||| 13 if (ch == '-') pos = -1;||| 14 ch = getchar();||| 15 }||| 16 while (isdigit(ch)) {||| 17 num = num * 10 + (long long)(ch - '0');||| 18 ch = getchar();||| 19 }||| 20 return pos * num;||| 21 }||| 22 void write(long long x) {||| 23 if (x < 0) {||| 24 putchar('-');||| 25 write(-x);||| 26 return;||| 27 }||| 28 if (x >= 10) write(x / 10);||| 29 putchar(x % 10 + '0');||| 30 }||| 31 void writesp(long long x) {||| 32 write(x);||| 33 putchar(' ');||| 34 }||| 35 void writeln(long long x) {||| 36 write(x);||| 37 putchar('\n');||| 38 }||| 39 const long long mod = 1e9 + 7;||| 40 inline long long quickpower(long long a, long long b) {||| 41 long long res = 1;||| 42 a %= mod;||| 43 while (b) {||| 44 if (b & 1) (res *= a) %= mod;||| 45 b >>= 1;||| 46 (a *= a) %= mod;||| 47 }||| 48 return res;||| 49 }||| 50 signed main() {||| 51 long long k = read();||| 52 writeln(6 * quickpower(4, (1ll << k) - 2) % mod);||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline char gc() {||| 4 static char buf[1000000], *p1 = buf, *p2 = buf;||| 5 return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2)||| 6 ? EOF||| 7 : *p1++;||| 8 }||| 9 long long read() {||| 10 long long pos = 1, num = 0;||| 11 char ch = getchar();||| 12 while (!isdigit(ch)) {||| 13 if (ch == '-') pos = -1;||| 14 ch = getchar();||| 15 }||| 16 while (isdigit(ch)) {||| 17 num = num * 10 + (long long)(ch - '0');||| 18 ch = getchar();||| 19 }||| 20 return pos * num;||| 21 }||| 22 void write(long long x) {||| 23 if (x < 0) {||| 24 putchar('-');||| 25 write(-x);||| 26 return;||| 27 }||| 28 if (x >= 10) write(x / 10);||| 29 putchar(x % 10 + '0');||| 30 }||| 31 void writesp(long long x) {||| 32 write(x);||| 33 putchar(' ');||| 34 }||| 35 void writeln(long long x) {||| 36 write(x);||| 37 putchar('\n');||| 38 }||| 39 const long long mod = 1e9 + 7;||| 40 inline long long quickpower(long long a, long long b) {||| 41 long long res = 1;||| 42 a %= mod;||| 43 while (b) {||| 44 if (b & 1) (res *= a) %= mod;||| 45 b >>= 1;||| 46 (a *= a) %= mod;||| 47 }||| 48 return res;||| 49 }||| 50 signed main() {||| 51 long long k = read();||| 52 writeln(6 * quickpower(4, (1 << k) - 2) % mod);||| 53 }||| 	52 writeln(6 * quickpower(4, (1ll << k) - 2) % mod);
55	281	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 int pwr(int a, long long b) {||| 5 int res = 1;||| 6 for (; b; b >>= 1) {||| 7 if (b & 1) res = 1LL * res * a % MOD;||| 8 a = 1LL * a * a % MOD;||| 9 }||| 10 return res;||| 11 }||| 12 int T, n;||| 13 int main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 T = 1;||| 18 while (T--) {||| 19 cin >> n;||| 20 if (n == 1) return cout << 6 << '\n', 0;||| 21 long long x = (1LL << n);||| 22 x -= 2;||| 23 cout << 1LL * 6 * pwr(4, x) % MOD << '\n';||| 24 }||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 int pwr(int a, long long b) {||| 5 int res = 1;||| 6 for (; b; b >>= 1) {||| 7 if (b & 1) res = 1LL * res * a % MOD;||| 8 a = 1LL * a * a % MOD;||| 9 }||| 10 return res;||| 11 }||| 12 int T, n;||| 13 int main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 T = 1;||| 18 while (T--) {||| 19 cin >> n;||| 20 if (n == 1) return cout << 6 << '\n', 0;||| 21 long long x = (1 << n);||| 22 x -= 2;||| 23 cout << 1LL * 6 * pwr(4, x) % MOD << '\n';||| 24 }||| 25 }||| 	21 long long x = (1LL << n);
55	137	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int pwr(long long int a, long long int b) {||| 4 long long int res = 1;||| 5 while (b > 0) {||| 6 if (b & 1) {||| 7 res = (res % 1000000007 * a % 1000000007) % 1000000007;||| 8 }||| 9 a = (a % 1000000007 * a % 1000000007) % 1000000007;||| 10 b >>= 1;||| 11 }||| 12 return res;||| 13 }||| 14 int main() {||| 15 long long int k, ans = 1, nodes = 0;||| 16 cin >> k;||| 17 nodes = pow(2, k);||| 18 nodes = nodes - 2;||| 19 ans = pwr(4, nodes);||| 20 ans %= 1000000007;||| 21 ans *= 6;||| 22 cout << (ans % 1000000007);||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int pwr(long long int a, long long int b) {||| 4 long long int res = 1;||| 5 while (b > 0) {||| 6 if (b & 1) {||| 7 res = (res % 1000000007 * a % 1000000007) % 1000000007;||| 8 }||| 9 a = (a % 1000000007 * a % 1000000007) % 1000000007;||| 10 b >>= 1;||| 11 }||| 12 return res;||| 13 }||| 14 int main() {||| 15 long long int k, ans = 1, nodes = 0;||| 16 cin >> k;||| 17 nodes = pwr(2, k);||| 18 nodes = nodes - 2;||| 19 ans = pwr(4, nodes);||| 20 ans %= 1000000007;||| 21 ans *= 6;||| 22 cout << (ans % 1000000007);||| 23 return 0;||| 24 }||| 	17 nodes = pow(2, k);
56	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 long long power(long long a, long long b) {||| 5 if (b == 0) return 1;||| 6 if (b % 2 == 0) {||| 7 long long x = power(a, b / 2);||| 8 return (x * x) % M;||| 9 } else||| 10 return (a * power(a, b - 1)) % M;||| 11 }||| 12 void fun() {||| 13 long long k;||| 14 cin >> k;||| 15 long long n;||| 16 cin >> n;||| 17 map<string, int> m;||| 18 m[""white""] = 0;||| 19 m[""yellow""] = 1;||| 20 m[""green""] = 2;||| 21 m[""blue""] = 3;||| 22 m[""red""] = 4;||| 23 m[""orange""] = 5;||| 24 map<long long, int> vis;||| 25 map<long long, vector<long long>> v;||| 26 set<long long> des;||| 27 map<long long, int> f;||| 28 for (int i = 0; i < n; i++) {||| 29 long long x;||| 30 cin >> x;||| 31 string s;||| 32 cin >> s;||| 33 int y = m[s];||| 34 vector<long long> cv(6, 0);||| 35 cv[y]++;||| 36 v[x] = cv;||| 37 des.insert(-x);||| 38 f[x]++;||| 39 }||| 40 while (!des.empty()) {||| 41 long long x = -(*des.begin());||| 42 des.erase(des.begin());||| 43 vis[x]++;||| 44 long long lvl = log2(2LL * x) + 1;||| 45 long long nl = lvl;||| 46 if (lvl <= k) {||| 47 vector<long long> cx(6, 0);||| 48 lvl = k - lvl + 1;||| 49 long long curr = pow(2LL, lvl);||| 50 curr -= 2LL;||| 51 if (curr < 0) curr += M;||| 52 curr = power(4, curr);||| 53 cx.assign(6, curr);||| 54 if (vis[2LL * x] == 0) {||| 55 v[2LL * x] = cx;||| 56 }||| 57 if (vis[2LL * x + 1] == 0) v[2LL * x + 1] = cx;||| 58 }||| 59 if (!f[x]) {||| 60 vector<long long> cv(6, 0);||| 61 for (int i = 0; i < 6; i++) {||| 62 int c = i;||| 63 int oc = c;||| 64 if (c % 2 == 0)||| 65 oc++;||| 66 else||| 67 oc--;||| 68 for (int j = 0; j < 6; j++) {||| 69 for (int l = 0; l < 6; l++) {||| 70 if (j != c && j != oc && l != c && l != oc) {||| 71 cv[i] += (v[2LL * x][j] * v[2LL * x + 1][l]) % M;||| 72 cv[i] %= M;||| 73 }||| 74 }||| 75 }||| 76 }||| 77 v[x] = cv;||| 78 } else {||| 79 vector<long long> cv(6, 0);||| 80 for (int i = 0; i < 6; i++) {||| 81 if (v[x][i] == 0 || nl > k) continue;||| 82 int c = i;||| 83 int oc = c;||| 84 if (c % 2 == 0)||| 85 oc++;||| 86 else||| 87 oc--;||| 88 for (int j = 0; j < 6; j++) {||| 89 for (int l = 0; l < 6; l++) {||| 90 if (j != c && j != oc && l != c && l != oc) {||| 91 cv[i] += (v[2LL * x][j] * v[2LL * x + 1][l]) % M;||| 92 cv[i] %= M;||| 93 }||| 94 }||| 95 }||| 96 }||| 97 if (nl <= k) v[x] = cv;||| 98 }||| 99 x /= 2LL;||| 100 if (x != 0) des.insert(-x);||| 101 }||| 102 long long ans = 0;||| 103 for (int i = 0; i < 6; i++) {||| 104 ans += v[1][i];||| 105 ans %= M;||| 106 }||| 107 cout << ans;||| 108 }||| 109 int main() {||| 110 ios_base::sync_with_stdio(false);||| 111 cin.tie(NULL);||| 112 int t = 1;||| 113 while (t--) {||| 114 fun();||| 115 cout << '\n';||| 116 }||| 117 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 long long power(long long a, long long b) {||| 5 if (b == 0) return 1;||| 6 if (b % 2 == 0) {||| 7 long long x = power(a, b / 2);||| 8 return (x * x) % M;||| 9 } else||| 10 return (a * power(a, b - 1)) % M;||| 11 }||| 12 void fun() {||| 13 long long k;||| 14 cin >> k;||| 15 long long n;||| 16 cin >> n;||| 17 map<string, int> m;||| 18 m[""white""] = 0;||| 19 m[""yellow""] = 1;||| 20 m[""green""] = 2;||| 21 m[""blue""] = 3;||| 22 m[""red""] = 4;||| 23 m[""orange""] = 5;||| 24 map<long long, int> vis;||| 25 map<long long, vector<long long>> v;||| 26 set<long long> des;||| 27 map<long long, int> f;||| 28 for (int i = 0; i < n; i++) {||| 29 long long x;||| 30 cin >> x;||| 31 string s;||| 32 cin >> s;||| 33 int y = m[s];||| 34 vector<long long> cv(6, 0);||| 35 cv[y]++;||| 36 v[x] = cv;||| 37 des.insert(-x);||| 38 f[x]++;||| 39 }||| 40 while (!des.empty()) {||| 41 long long x = -(*des.begin());||| 42 des.erase(des.begin());||| 43 vis[x]++;||| 44 long long lvl = log2(2LL * x) + 1;||| 45 long long nl = lvl;||| 46 if (lvl <= k) {||| 47 vector<long long> cx(6, 0);||| 48 lvl = k - lvl + 1;||| 49 long long curr = power(2LL, lvl);||| 50 curr -= 2LL;||| 51 if (curr < 0) curr += M;||| 52 curr = power(4, curr);||| 53 cx.assign(6, curr);||| 54 if (vis[2LL * x] == 0) {||| 55 v[2LL * x] = cx;||| 56 }||| 57 if (vis[2LL * x + 1] == 0) v[2LL * x + 1] = cx;||| 58 }||| 59 if (!f[x]) {||| 60 vector<long long> cv(6, 0);||| 61 for (int i = 0; i < 6; i++) {||| 62 int c = i;||| 63 int oc = c;||| 64 if (c % 2 == 0)||| 65 oc++;||| 66 else||| 67 oc--;||| 68 for (int j = 0; j < 6; j++) {||| 69 for (int l = 0; l < 6; l++) {||| 70 if (j != c && j != oc && l != c && l != oc) {||| 71 cv[i] += (v[2LL * x][j] * v[2LL * x + 1][l]) % M;||| 72 cv[i] %= M;||| 73 }||| 74 }||| 75 }||| 76 }||| 77 v[x] = cv;||| 78 } else {||| 79 vector<long long> cv(6, 0);||| 80 for (int i = 0; i < 6; i++) {||| 81 if (v[x][i] == 0 || nl > k) continue;||| 82 int c = i;||| 83 int oc = c;||| 84 if (c % 2 == 0)||| 85 oc++;||| 86 else||| 87 oc--;||| 88 for (int j = 0; j < 6; j++) {||| 89 for (int l = 0; l < 6; l++) {||| 90 if (j != c && j != oc && l != c && l != oc) {||| 91 cv[i] += (v[2LL * x][j] * v[2LL * x + 1][l]) % M;||| 92 cv[i] %= M;||| 93 }||| 94 }||| 95 }||| 96 }||| 97 if (nl <= k) v[x] = cv;||| 98 }||| 99 x /= 2LL;||| 100 if (x != 0) des.insert(-x);||| 101 }||| 102 long long ans = 0;||| 103 for (int i = 0; i < 6; i++) {||| 104 ans += v[1][i];||| 105 ans %= M;||| 106 }||| 107 cout << ans;||| 108 }||| 109 int main() {||| 110 ios_base::sync_with_stdio(false);||| 111 cin.tie(NULL);||| 112 int t = 1;||| 113 while (t--) {||| 114 fun();||| 115 cout << '\n';||| 116 }||| 117 }||| "	49 long long curr = pow(2LL, lvl);
56	21	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 bool could[6][6];||| 5 bool could1[6][6][6];||| 6 map<long long, int> mp;||| 7 vector<long long> fuck[300];||| 8 int k, n;||| 9 void init() {||| 10 memset(could, 0, sizeof(could));||| 11 for (int i = 0; i < 6; i++) {||| 12 for (int j = 0; j < 6; j++) {||| 13 if (i != j) {||| 14 could[i][j] = 1;||| 15 }||| 16 }||| 17 }||| 18 could[0][1] = could[1][0] = 0;||| 19 could[2][3] = could[3][2] = 0;||| 20 could[4][5] = could[5][4] = 0;||| 21 memset(could1, 0, sizeof(could1));||| 22 for (int i = 0; i < 6; i++) {||| 23 for (int j = 0; j < 6; j++) {||| 24 for (int k = 0; k < 6; k++) {||| 25 could1[i][j][k] = could[i][j] & could[i][k];||| 26 }||| 27 }||| 28 }||| 29 }||| 30 char shit[100];||| 31 vector<long long> dfs(long long id, int ceng) {||| 32 if (mp.count(id) == 0) {||| 33 return fuck[ceng];||| 34 }||| 35 if (ceng == k) {||| 36 vector<long long> now(6, 1);||| 37 if (mp[id] != -1) {||| 38 int c = mp[id];||| 39 for (int i = 0; i < 6; i++) {||| 40 if (i != c) {||| 41 now[i] = 0;||| 42 }||| 43 }||| 44 }||| 45 return now;||| 46 }||| 47 vector<long long> L = dfs(id << 1, ceng + 1);||| 48 vector<long long> R = dfs(id << 1 | 1, ceng + 1);||| 49 vector<long long> now(6, 0);||| 50 for (int c = 0; c < 6; c++) {||| 51 for (int l = 0; l < 6; l++) {||| 52 for (int r = 0; r < 6; r++) {||| 53 now[c] = (now[c] + could1[c][l][r] * L[l] * R[r]) % mod;||| 54 }||| 55 }||| 56 }||| 57 if (mp[id] != -1) {||| 58 int c = mp[id];||| 59 for (int i = 0; i < 6; i++) {||| 60 if (i != c) {||| 61 now[i] = 0;||| 62 }||| 63 }||| 64 }||| 65 return now;||| 66 }||| 67 int main() {||| 68 init();||| 69 mp.clear();||| 70 scanf(""%d%d"", &k, &n);||| 71 for (int i = 1; i <= n; i++) {||| 72 long long x;||| 73 int c;||| 74 scanf(""%lld%s"", &x, shit);||| 75 if (shit[0] == 'w') {||| 76 c = 0;||| 77 } else if (shit[0] == 'y') {||| 78 c = 1;||| 79 } else if (shit[0] == 'g') {||| 80 c = 2;||| 81 } else if (shit[0] == 'b') {||| 82 c = 3;||| 83 } else if (shit[0] == 'r') {||| 84 c = 4;||| 85 } else if (shit[0] == 'o') {||| 86 c = 5;||| 87 } else {||| 88 raise(1);||| 89 }||| 90 mp[x] = c;||| 91 x = x >> 1;||| 92 while (x) {||| 93 if (mp.count(x)) break;||| 94 mp[x] = -1;||| 95 x = x >> 1;||| 96 }||| 97 }||| 98 for (int i = 1; i <= k; i++) {||| 99 fuck[i] = vector<long long>(6);||| 100 }||| 101 for (int i = 0; i < 6; i++) fuck[k][i] = 1;||| 102 for (int i = k - 1; i; i--) {||| 103 for (int c = 0; c < 6; c++) {||| 104 for (int l = 0; l < 6; l++) {||| 105 for (int r = 0; r < 6; r++) {||| 106 fuck[i][c] =||| 107 (fuck[i][c] + could1[c][l][r] * fuck[i + 1][l] * fuck[i + 1][r]) %||| 108 mod;||| 109 }||| 110 }||| 111 }||| 112 }||| 113 long long ans = 0;||| 114 auto now = dfs(1, 1);||| 115 for (int i = 0; i < 6; i++) {||| 116 ans += now[i];||| 117 }||| 118 printf(""%lld\n"", ans % mod);||| 119 return 0;||| 120 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 bool could[6][6];||| 5 bool could1[6][6][6];||| 6 map<long long, int> mp;||| 7 vector<long long> fuck[300];||| 8 int k, n;||| 9 void init() {||| 10 memset(could, 0, sizeof(could));||| 11 for (int i = 0; i < 6; i++) {||| 12 for (int j = 0; j < 6; j++) {||| 13 if (i != j) {||| 14 could[i][j] = 1;||| 15 }||| 16 }||| 17 }||| 18 could[0][1] = could[1][0] = 0;||| 19 could[2][3] = could[3][2] = 0;||| 20 could[4][5] = could[5][4] = 0;||| 21 memset(could1, 0, sizeof(could1));||| 22 for (int i = 0; i < 6; i++) {||| 23 for (int j = 0; j < 6; j++) {||| 24 for (int k = 0; k < 6; k++) {||| 25 could1[i][j][k] = could[i][j] & could[i][k];||| 26 }||| 27 }||| 28 }||| 29 }||| 30 char shit[100];||| 31 vector<long long> dfs(int id, int ceng) {||| 32 if (mp.count(id) == 0) {||| 33 return fuck[ceng];||| 34 }||| 35 if (ceng == k) {||| 36 vector<long long> now(6, 1);||| 37 if (mp[id] != -1) {||| 38 int c = mp[id];||| 39 for (int i = 0; i < 6; i++) {||| 40 if (i != c) {||| 41 now[i] = 0;||| 42 }||| 43 }||| 44 }||| 45 return now;||| 46 }||| 47 vector<long long> L = dfs(id << 1, ceng + 1);||| 48 vector<long long> R = dfs(id << 1 | 1, ceng + 1);||| 49 vector<long long> now(6, 0);||| 50 for (int c = 0; c < 6; c++) {||| 51 for (int l = 0; l < 6; l++) {||| 52 for (int r = 0; r < 6; r++) {||| 53 now[c] = (now[c] + could1[c][l][r] * L[l] * R[r]) % mod;||| 54 }||| 55 }||| 56 }||| 57 if (mp[id] != -1) {||| 58 int c = mp[id];||| 59 for (int i = 0; i < 6; i++) {||| 60 if (i != c) {||| 61 now[i] = 0;||| 62 }||| 63 }||| 64 }||| 65 return now;||| 66 }||| 67 int main() {||| 68 init();||| 69 mp.clear();||| 70 scanf(""%d%d"", &k, &n);||| 71 for (int i = 1; i <= n; i++) {||| 72 long long x;||| 73 int c;||| 74 scanf(""%lld%s"", &x, shit);||| 75 if (shit[0] == 'w') {||| 76 c = 0;||| 77 } else if (shit[0] == 'y') {||| 78 c = 1;||| 79 } else if (shit[0] == 'g') {||| 80 c = 2;||| 81 } else if (shit[0] == 'b') {||| 82 c = 3;||| 83 } else if (shit[0] == 'r') {||| 84 c = 4;||| 85 } else if (shit[0] == 'o') {||| 86 c = 5;||| 87 } else {||| 88 raise(1);||| 89 }||| 90 mp[x] = c;||| 91 x = x >> 1;||| 92 while (x) {||| 93 if (mp.count(x)) break;||| 94 mp[x] = -1;||| 95 x = x >> 1;||| 96 }||| 97 }||| 98 for (int i = 1; i <= k; i++) {||| 99 fuck[i] = vector<long long>(6);||| 100 }||| 101 for (int i = 0; i < 6; i++) fuck[k][i] = 1;||| 102 for (int i = k - 1; i; i--) {||| 103 for (int c = 0; c < 6; c++) {||| 104 for (int l = 0; l < 6; l++) {||| 105 for (int r = 0; r < 6; r++) {||| 106 fuck[i][c] =||| 107 (fuck[i][c] + could1[c][l][r] * fuck[i + 1][l] * fuck[i + 1][r]) %||| 108 mod;||| 109 }||| 110 }||| 111 }||| 112 }||| 113 long long ans = 0;||| 114 auto now = dfs(1, 1);||| 115 for (int i = 0; i < 6; i++) {||| 116 ans += now[i];||| 117 }||| 118 printf(""%lld\n"", ans % mod);||| 119 return 0;||| 120 }||| "	31 vector<long long> dfs(long long id, int ceng) {
56	98	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx"")||| 4 using namespace std;||| 5 const int64_t inf = 1000000005;||| 6 const int64_t P = 1e9 + 7;||| 7 const int N = 2e5 + 7;||| 8 int64_t pw(int64_t a, int64_t n) {||| 9 int64_t r = 1;||| 10 a %= P;||| 11 while (n > 0) {||| 12 if (n % 2) r = (r * a) % P;||| 13 a = (a * a) % P;||| 14 n /= 2;||| 15 }||| 16 return r;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(nullptr);||| 21 map<int64_t, int64_t> a1, a2, a3;||| 22 int k;||| 23 cin >> k;||| 24 int n;||| 25 cin >> n;||| 26 int64_t v;||| 27 string ss;||| 28 std::vector<int64_t> S, RR;||| 29 int64_t V;||| 30 for (int i = 0; i < n; ++i) {||| 31 cin >> v >> ss;||| 32 V = v;||| 33 while (V > 0) {||| 34 S.push_back(V);||| 35 V /= 2;||| 36 }||| 37 RR.push_back(v);||| 38 if (ss == ""white"" || ss == ""yellow"") {||| 39 a2[v] = 0;||| 40 a3[v] = 0;||| 41 }||| 42 if (ss == ""green"" || ss == ""blue"") {||| 43 a1[v] = 0;||| 44 a3[v] = 0;||| 45 }||| 46 if (ss == ""red"" || ss == ""orange"") {||| 47 a2[v] = 0;||| 48 a1[v] = 0;||| 49 }||| 50 }||| 51 int64_t b1, b2, b3, c1, c2, c3;||| 52 int64_t f = 0;||| 53 int64_t u = (1LL << (k - 1));||| 54 int64_t U = (1LL << (k - 1));||| 55 sort(S.begin(), S.end());||| 56 ;||| 57 sort(RR.begin(), RR.end());||| 58 ;||| 59 int64_t z;||| 60 S.erase(unique(S.begin(), S.end()), S.end());||| 61 reverse(S.begin(), S.end());||| 62 for (auto t : S) {||| 63 if (t == 0) break;||| 64 if (t >= U) {||| 65 if (a1.count(t) == 0) a1[t] = 1;||| 66 if (a2.count(t) == 0) a2[t] = 1;||| 67 if (a3.count(t) == 0) a3[t] = 1;||| 68 continue;||| 69 }||| 70 while (t < u) {||| 71 u /= 2;||| 72 f++;||| 73 }||| 74 z = (1LL << f) - 2;||| 75 b1 = (2 * pw(4, z)) % P;||| 76 b2 = b1;||| 77 b3 = b1;||| 78 c1 = b1;||| 79 c2 = b1;||| 80 c3 = b1;||| 81 if (a1.count(t * 2 + 1) == 1) {||| 82 b1 = a1[t * 2 + 1];||| 83 b2 = a2[t * 2 + 1];||| 84 b3 = a3[t * 2 + 1];||| 85 }||| 86 if (a1.count(t * 2) == 1) {||| 87 c1 = a1[t * 2];||| 88 c2 = a2[t * 2];||| 89 c3 = a3[t * 2];||| 90 }||| 91 if (a1.count(t) == 0) a1[t] = ((b2 + b3) * (c2 + c3)) % P;||| 92 if (a2.count(t) == 0) a2[t] = ((b1 + b3) * (c1 + c3)) % P;||| 93 if (a3.count(t) == 0) a3[t] = ((b2 + b1) * (c2 + c1)) % P;||| 94 if (binary_search(RR.begin(), RR.end(), t) == false) {||| 95 a2[t] = (a2[t] * 2) % P;||| 96 a1[t] = (a1[t] * 2) % P;||| 97 a3[t] = (a3[t] * 2) % P;||| 98 }||| 99 }||| 100 cout << (a1[1] + a2[1] + a3[1]) % P;||| 101 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx"")||| 4 using namespace std;||| 5 const int64_t inf = 1000000005;||| 6 const int64_t P = 1e9 + 7;||| 7 const int N = 2e5 + 7;||| 8 int64_t pw(int64_t a, int64_t n) {||| 9 int64_t r = 1;||| 10 a %= P;||| 11 while (n > 0) {||| 12 if (n % 2) r = (r * a) % P;||| 13 a = (a * a) % P;||| 14 n /= 2;||| 15 }||| 16 return r;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(nullptr);||| 21 unordered_map<int64_t, int64_t> a1, a2, a3;||| 22 int k;||| 23 cin >> k;||| 24 int n;||| 25 cin >> n;||| 26 int64_t v;||| 27 string ss;||| 28 std::vector<int64_t> S, RR;||| 29 int V;||| 30 for (int i = 0; i < n; ++i) {||| 31 cin >> v >> ss;||| 32 V = v;||| 33 while (V > 0) {||| 34 S.push_back(V);||| 35 V /= 2;||| 36 }||| 37 RR.push_back(v);||| 38 if (ss == ""white"" || ss == ""yellow"") {||| 39 a2[v] = 0;||| 40 a3[v] = 0;||| 41 }||| 42 if (ss == ""green"" || ss == ""blue"") {||| 43 a1[v] = 0;||| 44 a3[v] = 0;||| 45 }||| 46 if (ss == ""red"" || ss == ""orange"") {||| 47 a2[v] = 0;||| 48 a1[v] = 0;||| 49 }||| 50 }||| 51 int64_t b1, b2, b3, c1, c2, c3;||| 52 int64_t f = 0;||| 53 int64_t u = (1LL << (k - 1));||| 54 int64_t U = (1LL << (k - 1));||| 55 sort(S.begin(), S.end());||| 56 ;||| 57 sort(RR.begin(), RR.end());||| 58 ;||| 59 int64_t z;||| 60 S.erase(unique(S.begin(), S.end()), S.end());||| 61 reverse(S.begin(), S.end());||| 62 for (auto t : S) {||| 63 if (t == 0) break;||| 64 if (t >= U) {||| 65 if (a1.count(t) == 0) a1[t] = 1;||| 66 if (a2.count(t) == 0) a2[t] = 1;||| 67 if (a3.count(t) == 0) a3[t] = 1;||| 68 continue;||| 69 }||| 70 while (t < u) {||| 71 u /= 2;||| 72 f++;||| 73 }||| 74 z = (1LL << f) - 2;||| 75 b1 = (2 * pw(4, z)) % P;||| 76 b2 = b1;||| 77 b3 = b1;||| 78 c1 = b1;||| 79 c2 = b1;||| 80 c3 = b1;||| 81 if (a1.count(t * 2 + 1) == 1) {||| 82 b1 = a1[t * 2 + 1];||| 83 b2 = a2[t * 2 + 1];||| 84 b3 = a3[t * 2 + 1];||| 85 }||| 86 if (a1.count(t * 2) == 1) {||| 87 c1 = a1[t * 2];||| 88 c2 = a2[t * 2];||| 89 c3 = a3[t * 2];||| 90 }||| 91 if (a1.count(t) == 0) a1[t] = ((b2 + b3) * (c2 + c3)) % P;||| 92 if (a2.count(t) == 0) a2[t] = ((b1 + b3) * (c1 + c3)) % P;||| 93 if (a3.count(t) == 0) a3[t] = ((b2 + b1) * (c2 + c1)) % P;||| 94 if (binary_search(RR.begin(), RR.end(), t) == false) {||| 95 a2[t] = (a2[t] * 2) % P;||| 96 a1[t] = (a1[t] * 2) % P;||| 97 a3[t] = (a3[t] * 2) % P;||| 98 }||| 99 }||| 100 cout << (a1[1] + a2[1] + a3[1]) % P;||| 101 }||| "	21 map<int64_t, int64_t> a1, a2, a3;
56	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int k, n;||| 5 int qpow(int a, long long b) {||| 6 int ans = 1;||| 7 while (b) {||| 8 if (b & 1) ans = 1LL * ans * a % mod;||| 9 a = 1LL * a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 map<long long, int> mp;||| 15 map<string, int> qwq;||| 16 map<long long, int> dp[3];||| 17 map<long long, set<long long> > G;||| 18 void dfs(long long u) {||| 19 for (auto v : G[u]) dfs(v);||| 20 for (int c = 0; c < 3; ++c) {||| 21 if (~mp[u] && c ^ mp[u]) continue;||| 22 dp[c][u] = ~mp[u] ? 1 : 2;||| 23 for (auto v : G[u]) {||| 24 dp[c][u] =||| 25 1LL * dp[c][u] * (dp[(c + 1) % 3][v] + dp[(c + 2) % 3][v]) % mod;||| 26 }||| 27 }||| 28 }||| 29 int main() {||| 30 ios::sync_with_stdio(false);||| 31 cin.tie(0);||| 32 cin >> k >> n;||| 33 qwq[""white""] = 0;||| 34 qwq[""yellow""] = 0;||| 35 qwq[""green""] = 1;||| 36 qwq[""blue""] = 1;||| 37 qwq[""red""] = 2;||| 38 qwq[""orange""] = 2;||| 39 for (int i = 1; i <= n; ++i) {||| 40 long long u;||| 41 string s;||| 42 cin >> u >> s;||| 43 mp[u] = qwq[s];||| 44 }||| 45 if (!mp.count(1)) mp[1] = -1;||| 46 auto tmp = mp;||| 47 for (auto [_t, c] : tmp) {||| 48 long long t = _t;||| 49 while (t ^ 1) {||| 50 G[t >> 1].insert(t);||| 51 if (!mp.count(t)) mp[t] = -1;||| 52 t >>= 1;||| 53 }||| 54 }||| 55 dfs(1);||| 56 int ans = 1LL * ((dp[0][1] + dp[1][1]) % mod + dp[2][1]) % mod *||| 57 qpow(4, (1LL << k) - 1 - mp.size()) % mod;||| 58 cout << ans << '\n';||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int k, n;||| 5 int qpow(int a, long long b) {||| 6 int ans = 1;||| 7 while (b) {||| 8 if (b & 1) ans = 1LL * ans * a % mod;||| 9 a = 1LL * a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 map<long long, int> mp;||| 15 map<string, int> qwq;||| 16 map<long long, int> dp[3];||| 17 map<long long, set<long long> > G;||| 18 void dfs(long long u) {||| 19 for (auto v : G[u]) dfs(v);||| 20 for (int c = 0; c < 3; ++c) {||| 21 if (~mp[u] && c ^ mp[u]) continue;||| 22 dp[c][u] = ~mp[u] ? 1 : 2;||| 23 for (auto v : G[u]) {||| 24 dp[c][u] =||| 25 1LL * dp[c][u] * (dp[(c + 1) % 3][v] + dp[(c + 2) % 3][v]) % mod;||| 26 }||| 27 }||| 28 }||| 29 int main() {||| 30 ios::sync_with_stdio(false);||| 31 cin.tie(0);||| 32 cin >> k >> n;||| 33 qwq[""white""] = 0;||| 34 qwq[""yellow""] = 0;||| 35 qwq[""green""] = 1;||| 36 qwq[""blue""] = 1;||| 37 qwq[""red""] = 2;||| 38 qwq[""orange""] = 2;||| 39 for (int i = 1; i <= n; ++i) {||| 40 long long u;||| 41 string s;||| 42 cin >> u >> s;||| 43 mp[u] = qwq[s];||| 44 }||| 45 if (!mp.count(1)) mp[1] = -1;||| 46 auto tmp = mp;||| 47 for (auto [_t, c] : tmp) {||| 48 long long t = _t;||| 49 while (t ^ 1) {||| 50 G[t >> 1].insert(t);||| 51 if (!mp.count(t)) mp[t] = -1;||| 52 t >>= 1;||| 53 }||| 54 }||| 55 dfs(1);||| 56 int ans = 1LL * ((dp[0][1] + dp[1][1]) + dp[2][1]) % mod *||| 57 qpow(4, (1LL << k) - 1 - mp.size()) % mod;||| 58 cout << ans << '\n';||| 59 return 0;||| 60 }||| "	56 int ans = 1LL * ((dp[0][1] + dp[1][1]) % mod + dp[2][1]) % mod *
56	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long p = 1e9 + 7;||| 4 map<long long, map<int, long long>> a;||| 5 long long dp[100];||| 6 int x[10] = {0, 2, 1, 4, 3, 6, 5};||| 7 map<long long, int> color;||| 8 int main() {||| 9 int kk;||| 10 cin >> kk;||| 11 dp[1] = 1;||| 12 for (int i = 2; i <= kk; i++) {||| 13 dp[i] = dp[i - 1] * dp[i - 1] % p * 16 % p;||| 14 }||| 15 int n;||| 16 cin >> n;||| 17 priority_queue<long long, vector<long long>, less<long long>> q;||| 18 for (int i = 1; i <= n; i++) {||| 19 long long id;||| 20 string s;||| 21 cin >> id >> s;||| 22 if (s == ""white"") color[id] = 1;||| 23 if (s == ""yellow"") color[id] = 2;||| 24 if (s == ""green"") color[id] = 3;||| 25 if (s == ""blue"") color[id] = 4;||| 26 if (s == ""red"") color[id] = 5;||| 27 if (s == ""orange"") color[id] = 6;||| 28 q.push(id);||| 29 int pos = 0;||| 30 for (long long j = id; j; j >>= 1) pos++;||| 31 a[id][color[id]] = dp[kk - pos + 1];||| 32 }||| 33 while (!q.empty()) {||| 34 long long id = q.top();||| 35 q.pop();||| 36 if (id == 1) {||| 37 long long ans = 0;||| 38 for (int i = 1; i <= 6; i++) ans += a[1][i];||| 39 ans %= p;||| 40 cout << ans << endl;||| 41 return 0;||| 42 }||| 43 if (color[id / 2]) {||| 44 for (int i = 1; i <= 6; i++) {||| 45 a[id / 2][i] = 0;||| 46 }||| 47 }||| 48 if (!q.empty() && q.top() == id / 2 * 2) {||| 49 long long x1 = id, x2 = id - 1;||| 50 q.pop();||| 51 for (int i = 1; i <= 6; i++) {||| 52 if (color[id / 2] && i != color[id / 2]) continue;||| 53 for (int j = 1; j <= 6; j++) {||| 54 if (i == j || x[i] == j) continue;||| 55 for (int k = 1; k <= 6; k++) {||| 56 if (i == k || x[i] == k) continue;||| 57 a[id / 2][i] = (a[id / 2][i] + a[x1][j] * a[x2][k] % p) % p;||| 58 }||| 59 }||| 60 }||| 61 } else {||| 62 int pos = 0;||| 63 for (long long i = id; i; i >>= 1) pos++;||| 64 for (int i = 1; i <= 6; i++) {||| 65 if (color[id / 2] && i != color[id / 2]) continue;||| 66 for (int j = 1; j <= 6; j++) {||| 67 if (i == j || x[i] == j) continue;||| 68 for (int k = 1; k <= 6; k++) {||| 69 if (i == k || x[i] == k) continue;||| 70 a[id / 2][i] = (a[id / 2][i] + a[id][j] * dp[kk - pos + 1] % p) % p;||| 71 }||| 72 }||| 73 }||| 74 }||| 75 if (!color[id / 2]) q.push(id / 2);||| 76 }||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long p = 1e9 + 7;||| 4 map<long long, map<int, long long>> a;||| 5 long long dp[100];||| 6 int x[10] = {0, 2, 1, 4, 3, 6, 5};||| 7 map<long long, int> color;||| 8 int main() {||| 9 int kk;||| 10 cin >> kk;||| 11 dp[1] = 1;||| 12 for (int i = 2; i <= kk; i++) {||| 13 dp[i] = dp[i - 1] * dp[i - 1] % p * 16 % p;||| 14 }||| 15 int n;||| 16 cin >> n;||| 17 priority_queue<long long, vector<long long>, less<long long>> q;||| 18 for (int i = 1; i <= n; i++) {||| 19 int id;||| 20 string s;||| 21 cin >> id >> s;||| 22 if (s == ""white"") color[id] = 1;||| 23 if (s == ""yellow"") color[id] = 2;||| 24 if (s == ""green"") color[id] = 3;||| 25 if (s == ""blue"") color[id] = 4;||| 26 if (s == ""red"") color[id] = 5;||| 27 if (s == ""orange"") color[id] = 6;||| 28 q.push(id);||| 29 int pos = 0;||| 30 for (long long j = id; j; j >>= 1) pos++;||| 31 a[id][color[id]] = dp[kk - pos + 1];||| 32 }||| 33 while (!q.empty()) {||| 34 long long id = q.top();||| 35 q.pop();||| 36 if (id == 1) {||| 37 long long ans = 0;||| 38 for (int i = 1; i <= 6; i++) ans += a[1][i];||| 39 ans %= p;||| 40 cout << ans << endl;||| 41 return 0;||| 42 }||| 43 if (color[id / 2]) {||| 44 for (int i = 1; i <= 6; i++) {||| 45 a[id / 2][i] = 0;||| 46 }||| 47 }||| 48 if (!q.empty() && q.top() == id / 2 * 2) {||| 49 long long x1 = id, x2 = id - 1;||| 50 q.pop();||| 51 for (int i = 1; i <= 6; i++) {||| 52 if (color[id / 2] && i != color[id / 2]) continue;||| 53 for (int j = 1; j <= 6; j++) {||| 54 if (i == j || x[i] == j) continue;||| 55 for (int k = 1; k <= 6; k++) {||| 56 if (i == k || x[i] == k) continue;||| 57 a[id / 2][i] = (a[id / 2][i] + a[x1][j] * a[x2][k] % p) % p;||| 58 }||| 59 }||| 60 }||| 61 } else {||| 62 int pos = 0;||| 63 for (long long i = id; i; i >>= 1) pos++;||| 64 for (int i = 1; i <= 6; i++) {||| 65 if (color[id / 2] && i != color[id / 2]) continue;||| 66 for (int j = 1; j <= 6; j++) {||| 67 if (i == j || x[i] == j) continue;||| 68 for (int k = 1; k <= 6; k++) {||| 69 if (i == k || x[i] == k) continue;||| 70 a[id / 2][i] = (a[id / 2][i] + a[id][j] * dp[kk - pos + 1] % p) % p;||| 71 }||| 72 }||| 73 }||| 74 }||| 75 if (!color[id / 2]) q.push(id / 2);||| 76 }||| 77 }||| "	19 long long id;
56	12	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = (int)1e9 + 7;||| 4 int trans(string s) {||| 5 if (s == ""white"") return 0;||| 6 if (s == ""yellow"") return 1;||| 7 if (s == ""green"") return 2;||| 8 if (s == ""blue"") return 3;||| 9 if (s == ""red"") return 4;||| 10 if (s == ""orange"") return 5;||| 11 }||| 12 int K, N;||| 13 set<long long> marked;||| 14 map<long long, int> color;||| 15 map<long long, vector<long long> > dp;||| 16 long long pw(long long x, long long y) {||| 17 long long ret = 1;||| 18 for (; y; y >>= 1, x = x * x % MOD)||| 19 if (y & 1) ret = ret * x % MOD;||| 20 return ret;||| 21 }||| 22 void inc(long long& x, long long y) {||| 23 x += y;||| 24 if (x >= MOD) x -= MOD;||| 25 }||| 26 void dfs(long long v, long long tot) {||| 27 dp[v].resize(6, 0);||| 28 if (marked.count(v) == 0) {||| 29 for (int i = 0; i < (int)(6); ++i) dp[v][i] = pw(4, tot - 1);||| 30 return;||| 31 }||| 32 if (tot == 1) {||| 33 int c = color[v];||| 34 dp[v][c] = 1;||| 35 return;||| 36 }||| 37 dfs(v << 1, (tot - 1) / 2);||| 38 dfs(v << 1 | 1, (tot - 1) / 2);||| 39 vector<long long>&dpl = dp[v << 1], &dpr = dp[v << 1 | 1];||| 40 vector<long long>& dpm = dp[v];||| 41 if (color.count(v)) {||| 42 int c = color[v];||| 43 long long L = 0, R = 0;||| 44 for (int i = 0; i < (int)(6); ++i) {||| 45 if (i == c || i == (c ^ 1)) continue;||| 46 inc(L, dpl[i]), inc(R, dpr[i]);||| 47 }||| 48 dpm[c] = L * R % MOD;||| 49 } else {||| 50 for (int i = 0; i < (int)(6); ++i) {||| 51 long long L = 0, R = 0;||| 52 for (int j = 0; j < (int)(6); ++j) {||| 53 if (j == i || j == (i ^ 1)) continue;||| 54 inc(L, dpl[j]), inc(R, dpr[j]);||| 55 }||| 56 dpm[i] = L * R % MOD;||| 57 }||| 58 }||| 59 }||| 60 int main() {||| 61 scanf(""%d%d"", &K, &N);||| 62 for (int i = 0; i < (int)(N); ++i) {||| 63 long long v;||| 64 string s;||| 65 scanf(""%lld"", &v);||| 66 cin >> s;||| 67 color[v] = trans(s);||| 68 while (v) {||| 69 marked.insert(v);||| 70 v >>= 1;||| 71 }||| 72 }||| 73 dfs(1, (1ll << K) - 1);||| 74 long long sum = 0;||| 75 for (int i = 0; i < (int)(6); ++i) inc(sum, dp[1][i]);||| 76 printf(""%lld\n"", sum);||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = (int)1e9 + 7;||| 4 int trans(string s) {||| 5 if (s == ""white"") return 0;||| 6 if (s == ""yellow"") return 1;||| 7 if (s == ""green"") return 2;||| 8 if (s == ""blue"") return 3;||| 9 if (s == ""red"") return 4;||| 10 if (s == ""orange"") return 5;||| 11 }||| 12 int K, N;||| 13 set<long long> marked;||| 14 map<long long, int> color;||| 15 map<long long, vector<long long> > dp;||| 16 long long pw(long long x, long long y) {||| 17 long long ret = 1;||| 18 for (; y; y >>= 1, x = x * x % MOD)||| 19 if (y & 1) ret = ret * x % MOD;||| 20 return ret;||| 21 }||| 22 void inc(long long& x, long long y) {||| 23 x += y;||| 24 if (x >= MOD) x -= MOD;||| 25 }||| 26 void dfs(int v, long long tot) {||| 27 dp[v].resize(6, 0);||| 28 if (marked.count(v) == 0) {||| 29 for (int i = 0; i < (int)(6); ++i) dp[v][i] = pw(4, tot - 1);||| 30 return;||| 31 }||| 32 if (tot == 1) {||| 33 int c = color[v];||| 34 dp[v][c] = 1;||| 35 return;||| 36 }||| 37 dfs(v << 1, (tot - 1) / 2);||| 38 dfs(v << 1 | 1, (tot - 1) / 2);||| 39 vector<long long>&dpl = dp[v << 1], &dpr = dp[v << 1 | 1];||| 40 vector<long long>& dpm = dp[v];||| 41 if (color.count(v)) {||| 42 int c = color[v];||| 43 long long L = 0, R = 0;||| 44 for (int i = 0; i < (int)(6); ++i) {||| 45 if (i == c || i == (c ^ 1)) continue;||| 46 inc(L, dpl[i]), inc(R, dpr[i]);||| 47 }||| 48 dpm[c] = L * R % MOD;||| 49 } else {||| 50 for (int i = 0; i < (int)(6); ++i) {||| 51 long long L = 0, R = 0;||| 52 for (int j = 0; j < (int)(6); ++j) {||| 53 if (j == i || j == (i ^ 1)) continue;||| 54 inc(L, dpl[j]), inc(R, dpr[j]);||| 55 }||| 56 dpm[i] = L * R % MOD;||| 57 }||| 58 }||| 59 }||| 60 int main() {||| 61 scanf(""%d%d"", &K, &N);||| 62 for (int i = 0; i < (int)(N); ++i) {||| 63 long long v;||| 64 string s;||| 65 scanf(""%lld"", &v);||| 66 cin >> s;||| 67 color[v] = trans(s);||| 68 while (v) {||| 69 marked.insert(v);||| 70 v >>= 1;||| 71 }||| 72 }||| 73 dfs(1, (1ll << K) - 1);||| 74 long long sum = 0;||| 75 for (int i = 0; i < (int)(6); ++i) inc(sum, dp[1][i]);||| 76 printf(""%lld\n"", sum);||| 77 return 0;||| 78 }||| "	26 void dfs(long long v, long long tot) {
56	2	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e9 + 7;||| 4 long long k, q;||| 5 set<long long> marked;||| 6 map<pair<long long, int>, int> dp;||| 7 map<long long, int> color;||| 8 set<pair<int, int> > bad_edge = {{1, 1}, {2, 2}, {3, 3}, {4, 4},||| 9 {5, 5}, {6, 6}, {1, 2}, {2, 1},||| 10 {3, 4}, {4, 3}, {5, 6}, {6, 5}};||| 11 int add(int a, int b) { return (a + b) % M; }||| 12 int mul(int a, int b) { return (a * 1LL * b) % M; }||| 13 int fp(int b, long long p) {||| 14 if (!p) return 1;||| 15 int ret = fp(b, p / 2);||| 16 ret = mul(ret, ret);||| 17 if (p & 1) ret = mul(ret, b);||| 18 return ret;||| 19 }||| 20 int get_color(string s) {||| 21 if (s[0] == 'w') return 1;||| 22 if (s[0] == 'y') return 2;||| 23 if (s[0] == 'g') return 3;||| 24 if (s[0] == 'b') return 4;||| 25 if (s[0] == 'r') return 5;||| 26 return 6;||| 27 }||| 28 int solve(long long node, int last) {||| 29 if (!marked.count(node)) return 1;||| 30 if (color.find(node) != color.end() && bad_edge.count({last, color[node]}))||| 31 return 0;||| 32 if (dp.find({node, last}) != dp.end()) return dp[{node, last}];||| 33 int ret = 0;||| 34 if (color.find(node) != color.end())||| 35 ret = mul(solve(node * 2, color[node]), solve(node * 2 + 1, color[node]));||| 36 else {||| 37 for (int i = 1; i <= 6; ++i)||| 38 if (!bad_edge.count({i, last}))||| 39 ret = add(ret, mul(solve(node * 2, i), solve(node * 2 + 1, i)));||| 40 }||| 41 return dp[{node, last}] = ret;||| 42 }||| 43 void mark_path(long long x) {||| 44 while (x) {||| 45 marked.insert(x);||| 46 x /= 2;||| 47 }||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(false);||| 51 cin.tie(0);||| 52 cout.tie(0);||| 53 cin >> k >> q;||| 54 while (q--) {||| 55 long long x;||| 56 string s;||| 57 cin >> x >> s;||| 58 color[x] = get_color(s);||| 59 mark_path(x);||| 60 }||| 61 long long nodes_num = (1LL << k) - 1;||| 62 cout << mul(solve(1, 0), fp(4, nodes_num - (long long)marked.size()));||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e9 + 7;||| 4 long long k, q;||| 5 set<long long> marked;||| 6 map<pair<int, int>, int> dp;||| 7 map<long long, int> color;||| 8 set<pair<int, int> > bad_edge = {{1, 1}, {2, 2}, {3, 3}, {4, 4},||| 9 {5, 5}, {6, 6}, {1, 2}, {2, 1},||| 10 {3, 4}, {4, 3}, {5, 6}, {6, 5}};||| 11 int add(int a, int b) { return (a + b) % M; }||| 12 int mul(int a, int b) { return (a * 1LL * b) % M; }||| 13 int fp(int b, long long p) {||| 14 if (!p) return 1;||| 15 int ret = fp(b, p / 2);||| 16 ret = mul(ret, ret);||| 17 if (p & 1) ret = mul(ret, b);||| 18 return ret;||| 19 }||| 20 int get_color(string s) {||| 21 if (s[0] == 'w') return 1;||| 22 if (s[0] == 'y') return 2;||| 23 if (s[0] == 'g') return 3;||| 24 if (s[0] == 'b') return 4;||| 25 if (s[0] == 'r') return 5;||| 26 return 6;||| 27 }||| 28 int solve(long long node, int last) {||| 29 if (!marked.count(node)) return 1;||| 30 if (color.find(node) != color.end() && bad_edge.count({last, color[node]}))||| 31 return 0;||| 32 if (dp.find({node, last}) != dp.end()) return dp[{node, last}];||| 33 int ret = 0;||| 34 if (color.find(node) != color.end())||| 35 ret = mul(solve(node * 2, color[node]), solve(node * 2 + 1, color[node]));||| 36 else {||| 37 for (int i = 1; i <= 6; ++i)||| 38 if (!bad_edge.count({i, last}))||| 39 ret = add(ret, mul(solve(node * 2, i), solve(node * 2 + 1, i)));||| 40 }||| 41 return dp[{node, last}] = ret;||| 42 }||| 43 void mark_path(long long x) {||| 44 while (x) {||| 45 marked.insert(x);||| 46 x /= 2;||| 47 }||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(false);||| 51 cin.tie(0);||| 52 cout.tie(0);||| 53 cin >> k >> q;||| 54 while (q--) {||| 55 long long x;||| 56 string s;||| 57 cin >> x >> s;||| 58 color[x] = get_color(s);||| 59 mark_path(x);||| 60 }||| 61 long long nodes_num = (1LL << k) - 1;||| 62 cout << mul(solve(1, 0), fp(4, nodes_num - (long long)marked.size()));||| 63 return 0;||| 64 }||| 	6 map<pair<long long, int>, int> dp;
57	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long s, n, k;||| 5 cin >> s >> n >> k;||| 6 if (s == k) {||| 7 cout << ""YES\n"";||| 8 return;||| 9 }||| 10 long long num = s / (k * 2) * k, ost = s % (k * 2);||| 11 long long mn = min(ost + 1, k);||| 12 if (n + 1 > mn + num)||| 13 cout << ""YES\n"";||| 14 else||| 15 cout << ""NO\n"";||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(0);||| 19 cin.tie(0);||| 20 int test;||| 21 cin >> test;||| 22 while (test--) {||| 23 solve();||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long s, n, k;||| 5 cin >> s >> n >> k;||| 6 if (s == k) {||| 7 cout << ""YES\n"";||| 8 return;||| 9 }||| 10 long long num = s / (k * 2) * k, ost = k % (k * 2);||| 11 long long mn = min(ost + 1, k);||| 12 if (n + 1 > mn + num)||| 13 cout << ""YES\n"";||| 14 else||| 15 cout << ""NO\n"";||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(0);||| 19 cin.tie(0);||| 20 int test;||| 21 cin >> test;||| 22 while (test--) {||| 23 solve();||| 24 }||| 25 return 0;||| 26 }||| "	10 long long num = s / (k * 2) * k, ost = s % (k * 2);
57	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 using pll = pair<ll, ll>;||| 6 const int maxn = 2e5 + 10;||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 ll s, n, k;||| 14 cin >> s >> n >> k;||| 15 if (s == k) {||| 16 cout << ""YES\n"";||| 17 continue;||| 18 }||| 19 if (s < k) {||| 20 cout << ""NO\n"";||| 21 continue;||| 22 }||| 23 ll u = s - n;||| 24 ll v = (n / k) * k;||| 25 if (u < v)||| 26 cout << ""YES\n"";||| 27 else||| 28 cout << ""NO\n"";||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 using pll = pair<ll, ll>;||| 6 const int maxn = 2e5 + 10;||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 ll s, n, k;||| 14 cin >> s >> n >> k;||| 15 if (s == k) {||| 16 cout << ""YES\n"";||| 17 continue;||| 18 }||| 19 if (s < k) {||| 20 cout << ""NO\n"";||| 21 continue;||| 22 }||| 23 int u = s - n;||| 24 int v = (n / k) * k;||| 25 if (u < v)||| 26 cout << ""YES\n"";||| 27 else||| 28 cout << ""NO\n"";||| 29 }||| 30 return 0;||| 31 }||| "	23 ll u = s - n;
57	160	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1000 + 100;||| 4 const int INF = 0x7fffffff;||| 5 const long long mod = 1e9 + 7;||| 6 const long long mod1 = 998244353;||| 7 const long long base = 137;||| 8 const double Pi = acos(-1.0);||| 9 const int G = 3;||| 10 int main() {||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long s, n, k;||| 15 scanf(""%lld%lld%lld"", &s, &n, &k);||| 16 if (s < k) {||| 17 puts(""NO"");||| 18 continue;||| 19 }||| 20 if (s == k) {||| 21 puts(""YES"");||| 22 continue;||| 23 }||| 24 long long p = 0;||| 25 p += (s % k) * (((s / k + 1) + 1) / 2);||| 26 p += (k - s % k - 1) * ((s / k + 1) / 2);||| 27 long long q = s / k;||| 28 q--;||| 29 p += (q + 1) / 2;||| 30 if (p >= n) {||| 31 puts(""NO"");||| 32 } else||| 33 puts(""YES"");||| 34 }||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1000 + 100;||| 4 const int INF = 0x7fffffff;||| 5 const long long mod = 1e9 + 7;||| 6 const long long mod1 = 998244353;||| 7 const long long base = 137;||| 8 const double Pi = acos(-1.0);||| 9 const int G = 3;||| 10 int main() {||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long s, n, k;||| 15 scanf(""%lld%lld%lld"", &s, &n, &k);||| 16 if (s < k) {||| 17 puts(""NO"");||| 18 continue;||| 19 }||| 20 if (s == k) {||| 21 puts(""YES"");||| 22 continue;||| 23 }||| 24 long long p = 0;||| 25 p += (s % k) * (((s / k + 1) + 1) / 2);||| 26 p += (k - s % k - 1) * ((s / k + 1) / 2);||| 27 int q = s / k;||| 28 q--;||| 29 p += (q + 1) / 2;||| 30 if (p >= n) {||| 31 puts(""NO"");||| 32 } else||| 33 puts(""YES"");||| 34 }||| 35 }||| "	27 long long q = s / k;
57	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = '.';||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return f * x;||| 15 }||| 16 inline void chmax(long long &x, long long y) { x = max(x, y); }||| 17 inline void chmin(long long &x, long long y) { x = min(x, y); }||| 18 const long long MOD = 998244353;||| 19 inline long long add(long long x, long long y) {||| 20 return (x + y >= MOD) ? (x + y - MOD)||| 21 : ((x + y < 0) ? (x + y + MOD) : (x + y));||| 22 }||| 23 long long s, n, k;||| 24 signed main() {||| 25 long long test_case = read();||| 26 while (test_case--) {||| 27 s = read(), n = read(), k = read();||| 28 if (s < k)||| 29 puts(""NO"");||| 30 else if (s == k)||| 31 puts(""YES"");||| 32 else {||| 33 long long t = s / (2 * k) * k, c = t + min(s % (2 * k), k - 1);||| 34 if (c >= n)||| 35 puts(""NO"");||| 36 else||| 37 puts(""YES"");||| 38 }||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 long long x = 0, f = 1;||| 5 char ch = '.';||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return f * x;||| 15 }||| 16 inline void chmax(long long &x, long long y) { x = max(x, y); }||| 17 inline void chmin(long long &x, long long y) { x = min(x, y); }||| 18 const long long MOD = 998244353;||| 19 inline long long add(long long x, long long y) {||| 20 return (x + y >= MOD) ? (x + y - MOD)||| 21 : ((x + y < 0) ? (x + y + MOD) : (x + y));||| 22 }||| 23 long long s, n, k;||| 24 signed main() {||| 25 long long test_case = read();||| 26 while (test_case--) {||| 27 s = read(), n = read(), k = read();||| 28 if (s < k)||| 29 puts(""NO"");||| 30 else if (s == k)||| 31 puts(""YES"");||| 32 else {||| 33 long long t = s / (2 * k) * k, c = t + min(s % (2 * k), k - 1);||| 34 if (c > n)||| 35 puts(""NO"");||| 36 else||| 37 puts(""YES"");||| 38 }||| 39 }||| 40 return 0;||| 41 }||| "	34 if (c >= n)
57	72	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const int INF = 0x3f3f3f3f, MOD = 1e9 + 7;||| 6 const int N = 1e3 + 5;||| 7 int t;||| 8 ll s, n, k;||| 9 int main() {||| 10 ios_base::sync_with_stdio(0), cin.tie(0);||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> s >> n >> k;||| 14 ll mx = max(k, (n / k) * k + n - 1);||| 15 ll mn = k;||| 16 if (s >= mn and s <= mx)||| 17 cout << ""YES\n"";||| 18 else||| 19 cout << ""NO\n"";||| 20 }||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const int INF = 0x3f3f3f3f, MOD = 1e9 + 7;||| 6 const int N = 1e3 + 5;||| 7 int t;||| 8 ll s, n, k;||| 9 int main() {||| 10 ios_base::sync_with_stdio(0), cin.tie(0);||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> s >> n >> k;||| 14 ll mx = max(n, (n / k) * k + n - 1);||| 15 ll mn = k;||| 16 if (s >= mn and s <= mx)||| 17 cout << ""YES\n"";||| 18 else||| 19 cout << ""NO\n"";||| 20 }||| 21 }||| "	14 ll mx = max(k, (n / k) * k + n - 1);
57	17	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, s, k;||| 5 cin >> s >> n >> k;||| 6 if (s == k)||| 7 cout << ""YES"" << endl;||| 8 else if (s < k) {||| 9 cout << ""NO"" << endl;||| 10 } else {||| 11 s++;||| 12 auto d = s / (2 * k);||| 13 auto y = s % (2 * k);||| 14 auto p = k * d + min(y, k) - 2;||| 15 if (n - 1 > p) {||| 16 cout << ""YES"" << endl;||| 17 } else {||| 18 cout << ""NO"" << endl;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 ios::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int T = 1;||| 26 cin >> T;||| 27 while (T--) {||| 28 solve();||| 29 }||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, s, k;||| 5 cin >> s >> n >> k;||| 6 if (s == k)||| 7 cout << ""YES"" << endl;||| 8 else if (s < k) {||| 9 cout << ""NO"" << endl;||| 10 } else {||| 11 s++;||| 12 auto d = s / (2 * k);||| 13 auto y = s % (2 * k);||| 14 auto p = k * d + min(y, k) - 2;||| 15 if (n - 1 >= p) {||| 16 cout << ""YES"" << endl;||| 17 } else {||| 18 cout << ""NO"" << endl;||| 19 }||| 20 }||| 21 }||| 22 int main() {||| 23 ios::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int T = 1;||| 26 cin >> T;||| 27 while (T--) {||| 28 solve();||| 29 }||| 30 }||| "	15 if (n - 1 > p) {
57	170	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k;||| 4 long long read() {||| 5 long long s = 0, f = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') f = -1;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') {||| 12 s = s * 10 + ch - '0';||| 13 ch = getchar();||| 14 }||| 15 return s * f;||| 16 }||| 17 long long g(long long x) { return (x + 1) / 2; }||| 18 signed main() {||| 19 long long T = read();||| 20 while (T--) {||| 21 long long s;||| 22 s = read(), n = read(), k = read();||| 23 if (s == k) {||| 24 puts(""YES"");||| 25 continue;||| 26 }||| 27 swap(n, s);||| 28 long long p = n / k, q = n % k;||| 29 long long w = q * g(p + 1) + (k - q) * g(p);||| 30 if (p != 0) w -= g(p);||| 31 w += g(p - 1);||| 32 if (w >= s)||| 33 puts(""NO"");||| 34 else||| 35 puts(""YES"");||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, k;||| 4 long long read() {||| 5 long long s = 0, f = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') f = -1;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') {||| 12 s = s * 10 + ch - '0';||| 13 ch = getchar();||| 14 }||| 15 return s * f;||| 16 }||| 17 long long g(long long x) { return (x + 1) / 2; }||| 18 signed main() {||| 19 long long T = read();||| 20 while (T--) {||| 21 long long s;||| 22 s = read(), n = read(), k = read();||| 23 if (s == k) {||| 24 puts(""NO"");||| 25 continue;||| 26 }||| 27 swap(n, s);||| 28 long long p = n / k, q = n % k;||| 29 long long w = q * g(p + 1) + (k - q) * g(p);||| 30 if (p != 0) w -= g(p);||| 31 w += g(p - 1);||| 32 if (w >= s)||| 33 puts(""NO"");||| 34 else||| 35 puts(""YES"");||| 36 }||| 37 }||| "	"24 puts(""YES"");"
58	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int i, j, t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 string str1, str2;||| 10 cin >> str1 >> str2;||| 11 int flag = 1;||| 12 for (i = 1; i <= str1.length() - 2; i++) {||| 13 if (str1[i] == '1' && str2[i] == '1') {||| 14 flag = 0;||| 15 break;||| 16 }||| 17 }||| 18 if (flag)||| 19 printf(""YES\n"");||| 20 else||| 21 printf(""NO\n"");||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int i, j, t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 string str1, str2;||| 10 cin >> str1 >> str2;||| 11 int flag = 1;||| 12 for (i = 2; i <= str1.length() - 2; i++) {||| 13 if (str1[i] == '1' && str2[i] == '1') {||| 14 flag = 0;||| 15 break;||| 16 }||| 17 }||| 18 if (flag)||| 19 printf(""YES\n"");||| 20 else||| 21 printf(""NO\n"");||| 22 }||| 23 return 0;||| 24 }||| "	12 for (i = 1; i <= str1.length() - 2; i++) {
58	26	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int dp[1000001];||| 4 long long int dp1[1000001];||| 5 long long int inv[1000001];||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 string a, b;||| 10 cin >> a >> b;||| 11 for (int i = 0; i < n; i++) {||| 12 if (a[i] == '1' && b[i] == '1') {||| 13 cout << ""NO"";||| 14 return;||| 15 }||| 16 }||| 17 cout << ""YES"";||| 18 }||| 19 void read_input() {}||| 20 void case_number() {||| 21 int t;||| 22 cin >> t;||| 23 for (int i = 1; i <= t; i++) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 ;||| 33 case_number();||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int dp[1000001];||| 4 long long int dp1[1000001];||| 5 long long int inv[1000001];||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 string a, b;||| 10 cin >> a >> b;||| 11 for (int i = 0; i < n; i++) {||| 12 if (a[i] == '1' || b[i] == '1') {||| 13 cout << ""NO"";||| 14 return;||| 15 }||| 16 }||| 17 cout << ""YES"";||| 18 }||| 19 void read_input() {}||| 20 void case_number() {||| 21 int t;||| 22 cin >> t;||| 23 for (int i = 1; i <= t; i++) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 ;||| 33 case_number();||| 34 return 0;||| 35 }||| "	12 if (a[i] == '1' && b[i] == '1') {
58	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 int n;||| 5 cin >> n;||| 6 vector<string> v(2);||| 7 for (int i = 0; i < 2; i++) {||| 8 cin >> v[i];||| 9 }||| 10 for (int i = 0; i < n; i++) {||| 11 if (v[0][i] == '1' && v[1][i] == '1') {||| 12 cout << ""NO"" << endl;||| 13 return;||| 14 }||| 15 }||| 16 cout << ""YES"" << endl;||| 17 }||| 18 int main() {||| 19 int tc = 1;||| 20 cin >> tc;||| 21 while (tc--) {||| 22 run_case();||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 int n;||| 5 cin >> n;||| 6 vector<string> v(2);||| 7 for (int i = 0; i < 2; i++) {||| 8 cin >> v[i];||| 9 }||| 10 for (int i = 0; i < n; i++) {||| 11 if (v[0][i] == '1' && v[1][i] == '1') {||| 12 cout << ""N0"" << endl;||| 13 return;||| 14 }||| 15 }||| 16 cout << ""YES"" << endl;||| 17 }||| 18 int main() {||| 19 int tc = 1;||| 20 cin >> tc;||| 21 while (tc--) {||| 22 run_case();||| 23 }||| 24 return 0;||| 25 }||| "	"12 cout << ""NO"" << endl;"
58	229	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 int n;||| 5 cin >> n;||| 6 vector<string> v(2);||| 7 for (int i = 0; i < 2; i++) {||| 8 cin >> v[i];||| 9 }||| 10 for (int i = 0; i < n; i++) {||| 11 if (v[0][i] == '1' && v[1][i] == '1') {||| 12 cout << ""NO"" << endl;||| 13 return;||| 14 }||| 15 }||| 16 cout << ""YES"" << endl;||| 17 }||| 18 int main() {||| 19 int tc = 1;||| 20 cin >> tc;||| 21 while (tc--) {||| 22 run_case();||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 int n;||| 5 cin >> n;||| 6 vector<string> v(2);||| 7 for (int i = 0; i < 2; i++) {||| 8 cin >> v[i];||| 9 }||| 10 for (int i = 0; i < n; i++) {||| 11 if (v[0][i] == '1' && v[1][i] == '1') {||| 12 cout << ""N0"" << endl;||| 13 return;||| 14 }||| 15 }||| 16 cout << ""Yes"" << endl;||| 17 }||| 18 int main() {||| 19 int tc = 1;||| 20 cin >> tc;||| 21 while (tc--) {||| 22 run_case();||| 23 }||| 24 return 0;||| 25 }||| "	"12 cout << ""NO"" << endl;"
58	122	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int k;||| 5 cin >> k;||| 6 while (k--) {||| 7 int n, f = 1;||| 8 string sa, sb;||| 9 cin >> n >> sa >> sb;||| 10 for (int i = 0; i < n; i++)||| 11 if ((sa[i] == '1') && (sb[i] == '1')) {||| 12 f = 0;||| 13 break;||| 14 }||| 15 if (f)||| 16 cout << ""YES"" << endl;||| 17 else||| 18 cout << ""NO"" << endl;||| 19 }||| 20 return 0;||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int k;||| 5 cin >> k;||| 6 while (k--) {||| 7 int n, f = 1;||| 8 string sa, sb;||| 9 cin >> n >> sa >> sb;||| 10 for (int i = 0; i < n; i++)||| 11 if ((sa[i] == '1') && (sb[i] = '1')) {||| 12 f = 0;||| 13 break;||| 14 }||| 15 if (f)||| 16 cout << ""YES"" << endl;||| 17 else||| 18 cout << ""NO"" << endl;||| 19 }||| 20 return 0;||| 21 }||| "	11 if ((sa[i] == '1') && (sb[i] == '1')) {
58	148	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long> factors;||| 4 void FAST() {||| 5 ios::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 long long binpow(long long a, long long b) {||| 10 if (b == 0) return 1;||| 11 long long res = binpow(a, b / 2);||| 12 res *= res;||| 13 if (b % 2 == 0)||| 14 return res;||| 15 else||| 16 return (res * a);||| 17 }||| 18 long long binpow_Mod(long long a, long long b) {||| 19 if (b == 0) return 1;||| 20 long long res = (binpow_Mod(a, b / 2)) % 1000000007;||| 21 res *= res;||| 22 res %= 1000000007;||| 23 if (b % 2 == 0)||| 24 return res;||| 25 else||| 26 return ((res * a) % 1000000007);||| 27 }||| 28 long long HCF(long long a, long long b) {||| 29 if (a == 0)||| 30 return b;||| 31 else||| 32 return HCF(b % a, a);||| 33 }||| 34 long long LCM(long long a, long long b) { return ((a * b) / HCF(a, b)); }||| 35 bool sortbysec(const pair<long long, long long>& a,||| 36 const pair<long long, long long>& b) {||| 37 return (a.second < b.second);||| 38 }||| 39 void factorise(long long a) {||| 40 factors.clear();||| 41 for (long long i = 1; i * i <= a; i++) {||| 42 if (i * i == a)||| 43 factors.push_back(i);||| 44 else if (a % i == 0) {||| 45 factors.push_back(i);||| 46 factors.push_back(a / i);||| 47 }||| 48 sort(factors.begin(), factors.end());||| 49 }||| 50 }||| 51 int main() {||| 52 FAST();||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 int n;||| 57 cin >> n;||| 58 string a, b;||| 59 cin >> a >> b;||| 60 bool ans = true;||| 61 for (long long i = 0; i < n; i++) {||| 62 if (a[i] == '1' && b[i] == '1') {||| 63 ans = false;||| 64 break;||| 65 }||| 66 }||| 67 if (ans)||| 68 cout << ""YES\n"";||| 69 else||| 70 cout << ""NO\n"";||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long> factors;||| 4 void FAST() {||| 5 ios::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 long long binpow(long long a, long long b) {||| 10 if (b == 0) return 1;||| 11 long long res = binpow(a, b / 2);||| 12 res *= res;||| 13 if (b % 2 == 0)||| 14 return res;||| 15 else||| 16 return (res * a);||| 17 }||| 18 long long binpow_Mod(long long a, long long b) {||| 19 if (b == 0) return 1;||| 20 long long res = (binpow_Mod(a, b / 2)) % 1000000007;||| 21 res *= res;||| 22 res %= 1000000007;||| 23 if (b % 2 == 0)||| 24 return res;||| 25 else||| 26 return ((res * a) % 1000000007);||| 27 }||| 28 long long HCF(long long a, long long b) {||| 29 if (a == 0)||| 30 return b;||| 31 else||| 32 return HCF(b % a, a);||| 33 }||| 34 long long LCM(long long a, long long b) { return ((a * b) / HCF(a, b)); }||| 35 bool sortbysec(const pair<long long, long long>& a,||| 36 const pair<long long, long long>& b) {||| 37 return (a.second < b.second);||| 38 }||| 39 void factorise(long long a) {||| 40 factors.clear();||| 41 for (long long i = 1; i * i <= a; i++) {||| 42 if (i * i == a)||| 43 factors.push_back(i);||| 44 else if (a % i == 0) {||| 45 factors.push_back(i);||| 46 factors.push_back(a / i);||| 47 }||| 48 sort(factors.begin(), factors.end());||| 49 }||| 50 }||| 51 int main() {||| 52 FAST();||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 int n;||| 57 cin >> n;||| 58 string a, b;||| 59 cin >> a >> b;||| 60 bool ans = true;||| 61 for (long long i = 0; i < n; i++) {||| 62 if (a[i] == '1' && b[1] == '1') {||| 63 ans = false;||| 64 break;||| 65 }||| 66 }||| 67 if (ans)||| 68 cout << ""YES\n"";||| 69 else||| 70 cout << ""NO\n"";||| 71 }||| 72 return 0;||| 73 }||| "	62 if (a[i] == '1' && b[i] == '1') {
59	78	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void google(int t) { cout << ""Case #"" << t << "": ""; }||| 7 bool per_square(long double a) {||| 8 if (a < 0) return false;||| 9 long long sr = sqrt(a);||| 10 return (sr * sr == a);||| 11 }||| 12 bool is_prime(long long x) {||| 13 for (long long i = 2; i < sqrt(x) + 1; i++)||| 14 if (x % i == 0) return false;||| 15 return true;||| 16 }||| 17 long long m = 1e9 + 7;||| 18 long long power(long long a, long long b, long long mod) {||| 19 if (b == 0) {||| 20 return 1;||| 21 }||| 22 long long ans = power(a, b / 2, mod);||| 23 ans *= ans;||| 24 ans %= mod;||| 25 if (b % 2) {||| 26 ans *= a;||| 27 }||| 28 return ans % mod;||| 29 }||| 30 int gcd(int a, int b) {||| 31 if (a == 0) return b;||| 32 if (b == 0) return a;||| 33 if (a == b) return a;||| 34 if (a > b) return gcd(a - b, b);||| 35 return gcd(a, b - a);||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 cin >> n;||| 40 int dp[n][5];||| 41 for (long long i = 0; i < n; i++) {||| 42 for (long long j = 0; j < 5; j++) {||| 43 cin >> dp[i][j];||| 44 }||| 45 }||| 46 vector<set<int>> v(5);||| 47 for (long long i = 0; i < 5; i++) {||| 48 for (long long j = 0; j < n; j++) {||| 49 if (dp[j][i] == 1) {||| 50 v[i].insert(j + 1);||| 51 }||| 52 }||| 53 }||| 54 for (long long i = 0; i < 5; i++) {||| 55 if (v[i].size() >= n / 2) {||| 56 for (long long j = i + 1; j < 5; j++) {||| 57 if (v[j].size() >= n / 2) {||| 58 set<int> t;||| 59 for (auto it : v[i]) {||| 60 t.insert(it);||| 61 }||| 62 for (auto it : v[j]) {||| 63 t.insert(it);||| 64 }||| 65 if (t.size() == n) {||| 66 cout << ""YES"" << '\n';||| 67 return;||| 68 }||| 69 }||| 70 }||| 71 }||| 72 }||| 73 cout << ""NO"" << '\n';||| 74 }||| 75 int main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 ;||| 80 int tt;||| 81 cin >> tt;||| 82 while (tt--) {||| 83 solve();||| 84 }||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void google(int t) { cout << ""Case #"" << t << "": ""; }||| 7 bool per_square(long double a) {||| 8 if (a < 0) return false;||| 9 long long sr = sqrt(a);||| 10 return (sr * sr == a);||| 11 }||| 12 bool is_prime(long long x) {||| 13 for (long long i = 2; i < sqrt(x) + 1; i++)||| 14 if (x % i == 0) return false;||| 15 return true;||| 16 }||| 17 long long m = 1e9 + 7;||| 18 long long power(long long a, long long b, long long mod) {||| 19 if (b == 0) {||| 20 return 1;||| 21 }||| 22 long long ans = power(a, b / 2, mod);||| 23 ans *= ans;||| 24 ans %= mod;||| 25 if (b % 2) {||| 26 ans *= a;||| 27 }||| 28 return ans % mod;||| 29 }||| 30 int gcd(int a, int b) {||| 31 if (a == 0) return b;||| 32 if (b == 0) return a;||| 33 if (a == b) return a;||| 34 if (a > b) return gcd(a - b, b);||| 35 return gcd(a, b - a);||| 36 }||| 37 void solve() {||| 38 long long n;||| 39 cin >> n;||| 40 int dp[n][5];||| 41 for (long long i = 0; i < n; i++) {||| 42 for (long long j = 0; j < 5; j++) {||| 43 cin >> dp[i][j];||| 44 }||| 45 }||| 46 vector<set<int>> v(5);||| 47 for (long long i = 0; i < 5; i++) {||| 48 for (long long j = 0; j < n; j++) {||| 49 if (dp[j][i] == 1) {||| 50 v[i].insert(j + 1);||| 51 }||| 52 }||| 53 }||| 54 for (long long i = 0; i < 5; i++) {||| 55 if (v[i].size() >= n / 2) {||| 56 for (long long j = i + 1; j < n; j++) {||| 57 if (v[j].size() >= n / 2) {||| 58 set<int> t;||| 59 for (auto it : v[i]) {||| 60 t.insert(it);||| 61 }||| 62 for (auto it : v[j]) {||| 63 t.insert(it);||| 64 }||| 65 if (t.size() == n) {||| 66 cout << ""YES"" << '\n';||| 67 return;||| 68 }||| 69 }||| 70 }||| 71 }||| 72 }||| 73 cout << ""NO"" << '\n';||| 74 }||| 75 int main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 ;||| 80 int tt;||| 81 cin >> tt;||| 82 while (tt--) {||| 83 solve();||| 84 }||| 85 return 0;||| 86 }||| "	56 for (long long j = i + 1; j < 5; j++) {
59	170	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 void coutar(int a[], int n);||| 5 void cinar(int* a, int n);||| 6 void fun() {||| 7 int n;||| 8 cin >> n;||| 9 int a[n][5];||| 10 long long int sum = 0;||| 11 for (int i = 0; i < n; i++) {||| 12 for (int j = 0; j < 5; j++) {||| 13 cin >> a[i][j];||| 14 }||| 15 }||| 16 int u1 = 0, u2 = 0, c = 0;||| 17 for (int e = 0; e < 4; e++) {||| 18 for (int f = e + 1; f < 5; f++) {||| 19 c = 0;||| 20 u1 = 0;||| 21 u2 = 0;||| 22 for (int i = 0; i < n; i++) {||| 23 if (a[i][e] == 1 && a[i][f] == 1) {||| 24 c++;||| 25 }||| 26 if (a[i][e] == 1 && a[i][f] == 0) {||| 27 u1++;||| 28 }||| 29 if (a[i][e] == 0 && a[i][f] == 1) {||| 30 u2++;||| 31 }||| 32 if (a[i][e] == 0 && a[i][f] == 0) {||| 33 continue;||| 34 }||| 35 }||| 36 if (c + u1 + u2 >= n) {||| 37 if (u1 + c >= n / 2) {||| 38 if (u2 + c >= n / 2) {||| 39 cout << ""YES\n"";||| 40 return;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 }||| 46 cout << ""NO\n"";||| 47 }||| 48 int main() {||| 49 ios_base::sync_with_stdio(0);||| 50 cin.tie(0);||| 51 int t;||| 52 cin >> t;||| 53 while (t--) {||| 54 fun();||| 55 }||| 56 }||| 57 void coutar(int a[], int n) {||| 58 for (int i = 0; i < n; i++) {||| 59 cout << a[i] << "" "";||| 60 }||| 61 cout << ""\n"";||| 62 }||| 63 void cinar(int* a, int n) {||| 64 for (int i = 0; i < n; i++) {||| 65 cin >> a[i];||| 66 }||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 void coutar(int a[], int n);||| 5 void cinar(int* a, int n);||| 6 void fun() {||| 7 int n;||| 8 cin >> n;||| 9 int a[n][5];||| 10 long long int sum = 0;||| 11 for (int i = 0; i < n; i++) {||| 12 for (int j = 0; j < 5; j++) {||| 13 cin >> a[i][j];||| 14 }||| 15 }||| 16 int u1 = 0, u2 = 0, c = 0;||| 17 for (int e = 0; e < 4; e++) {||| 18 for (int f = e + 1; f < 5; f++) {||| 19 c = 0;||| 20 u1 = 0;||| 21 u2 = 0;||| 22 for (int i = 0; i < n; i++) {||| 23 if (a[i][e] == 1 && a[i][f] == 1) {||| 24 c++;||| 25 }||| 26 if (a[i][e] == 0 && a[i][f] == 0) {||| 27 u1++;||| 28 }||| 29 if (a[i][e] == 0 && a[i][f] == 1) {||| 30 u2++;||| 31 }||| 32 if (a[i][e] == 0 && a[i][f] == 0) {||| 33 continue;||| 34 }||| 35 }||| 36 if (c + u1 + u2 >= n) {||| 37 if (u1 + c >= n / 2) {||| 38 if (u2 + c >= n / 2) {||| 39 cout << ""YES\n"";||| 40 return;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 }||| 46 cout << ""NO\n"";||| 47 }||| 48 int main() {||| 49 ios_base::sync_with_stdio(0);||| 50 cin.tie(0);||| 51 int t;||| 52 cin >> t;||| 53 while (t--) {||| 54 fun();||| 55 }||| 56 }||| 57 void coutar(int a[], int n) {||| 58 for (int i = 0; i < n; i++) {||| 59 cout << a[i] << "" "";||| 60 }||| 61 cout << ""\n"";||| 62 }||| 63 void cinar(int* a, int n) {||| 64 for (int i = 0; i < n; i++) {||| 65 cin >> a[i];||| 66 }||| 67 }||| "	26 if (a[i][e] == 1 && a[i][f] == 0) {
59	19	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void sol() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n][5];||| 7 for (int i = 0; i < n; i++) {||| 8 for (int j = 0; j < 5; j++) {||| 9 cin >> a[i][j];||| 10 }||| 11 }||| 12 for (int i = 0; i < 5; i++) {||| 13 for (int j = i + 1; j < 5; j++) {||| 14 long long int cnt1 = 0, cnt2 = 0, cnt = 0;||| 15 for (int l = 0; l < n; l++) {||| 16 if (a[l][i] == 1) cnt++;||| 17 if (a[l][j] == 1) cnt1++;||| 18 if (a[l][i] == 1 && a[l][j] == 1) {||| 19 cnt2++;||| 20 cnt1--;||| 21 cnt--;||| 22 }||| 23 }||| 24 if (cnt <= n / 2 && cnt1 <= n / 2) {||| 25 if (cnt + cnt1 + cnt2 == n) {||| 26 cout << ""YES""||| 27 << ""\n"";||| 28 return;||| 29 }||| 30 }||| 31 }||| 32 }||| 33 cout << ""NO""||| 34 << ""\n"";||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(0);||| 38 cin.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) sol();||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void sol() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n][5];||| 7 for (int i = 0; i < n; i++) {||| 8 for (int j = 0; j < 5; j++) {||| 9 cin >> a[i][j];||| 10 }||| 11 }||| 12 for (int i = 0; i < n; i++) {||| 13 for (int j = i + 1; j < 5; j++) {||| 14 long long int cnt1 = 0, cnt2 = 0, cnt = 0;||| 15 for (int l = 0; l < n; l++) {||| 16 if (a[l][i] == 1) cnt++;||| 17 if (a[l][j] == 1) cnt1++;||| 18 if (a[l][i] == 1 && a[l][j] == 1) {||| 19 cnt2++;||| 20 cnt1--;||| 21 cnt--;||| 22 }||| 23 }||| 24 if (cnt <= n / 2 && cnt1 <= n / 2) {||| 25 if (cnt + cnt1 + cnt2 == n) {||| 26 cout << ""YES""||| 27 << ""\n"";||| 28 return;||| 29 }||| 30 }||| 31 }||| 32 }||| 33 cout << ""NO""||| 34 << ""\n"";||| 35 }||| 36 int main() {||| 37 ios::sync_with_stdio(0);||| 38 cin.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) sol();||| 42 return 0;||| 43 }||| "	12 for (int i = 0; i < 5; i++) {
59	191	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0)||| 5 return a;||| 6 else||| 7 return gcd(b, a % b);||| 8 }||| 9 long long mod(long long a, long long b) {||| 10 if (a > b)||| 11 return (a - b);||| 12 else||| 13 return (b - a);||| 14 }||| 15 double distance(long long x1, long long y1, long long x2, long long y2) {||| 16 return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2) * 1.0);||| 17 }||| 18 bool isPerfectSquare(long double x) {||| 19 long double sr = sqrt(x);||| 20 return ((sr - floor(sr)) == 0);||| 21 }||| 22 bool palindrome(string s, long long i, long long j) {||| 23 if (i > j) return true;||| 24 if (s[i] != s[j])||| 25 return false;||| 26 else||| 27 return palindrome(s, i + 1, j - 1);||| 28 }||| 29 bool isPrime(long long n) {||| 30 if (n <= 1) return false;||| 31 if (n <= 3) return true;||| 32 if (n % 2 == 0 || n % 3 == 0) return false;||| 33 for (long long i = 5; i * i <= n; i = i + 6)||| 34 if (n % i == 0 || n % (i + 2) == 0) return false;||| 35 return true;||| 36 }||| 37 const long long MD = 1e9 + 7;||| 38 long long binpow(long long a, long long b, long long m) {||| 39 a %= m;||| 40 long long res = 1;||| 41 while (b > 0) {||| 42 if (b & 1) res = res * a % m;||| 43 a = a * a % m;||| 44 b >>= 1;||| 45 }||| 46 return res;||| 47 }||| 48 const long long N = 2e5 + 5;||| 49 long long fact[N];||| 50 void precompute() {||| 51 fact[0] = fact[1] = 1;||| 52 for (long long i = 2; i < N; i++) {||| 53 fact[i] = fact[i - 1] * i;||| 54 fact[i] %= MD;||| 55 }||| 56 }||| 57 long long nPr(long long n, long long c) {||| 58 long long num = fact[n];||| 59 num %= MD;||| 60 num /= fact[n - c];||| 61 num %= MD;||| 62 return num;||| 63 }||| 64 vector<vector<long long>> vec;||| 65 struct tri {||| 66 long long a, b, c;||| 67 };||| 68 void solve(long long tt) {||| 69 long long n;||| 70 cin >> n;||| 71 vector<unordered_set<long long>> v(5);||| 72 for (long long i = 1; i <= n; i++) {||| 73 for (long long j = 0; j < 5; j++) {||| 74 long long x;||| 75 cin >> x;||| 76 if (x) {||| 77 v[j].insert(i);||| 78 }||| 79 }||| 80 }||| 81 bool flag = false;||| 82 for (long long i = 1; i < 5; i++) {||| 83 for (long long j = 0; j < i; j++) {||| 84 if ((v[i].size() >= (n / 2) && v[j].size() >= (n / 2))) {||| 85 long long x = v[i].size();||| 86 long long y = v[j].size();||| 87 for (auto u : v[i]) {||| 88 if (v[j].count(u)) {||| 89 if (x > y) {||| 90 x--;||| 91 } else if (y >= x) {||| 92 y--;||| 93 }||| 94 }||| 95 }||| 96 if ((x >= (n / 2)) && (y >= (n / 2))) {||| 97 flag = true;||| 98 break;||| 99 }||| 100 }||| 101 }||| 102 if (flag) {||| 103 break;||| 104 }||| 105 }||| 106 if (flag) {||| 107 cout << ""YES""||| 108 << ""\n"";||| 109 } else {||| 110 cout << ""NO""||| 111 << ""\n"";||| 112 }||| 113 }||| 114 signed main() {||| 115 long long t = 1;||| 116 cin >> t;||| 117 for (long long tt = 1; tt <= t; tt++) {||| 118 solve(tt);||| 119 }||| 120 return 0;||| 121 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0)||| 5 return a;||| 6 else||| 7 return gcd(b, a % b);||| 8 }||| 9 long long mod(long long a, long long b) {||| 10 if (a > b)||| 11 return (a - b);||| 12 else||| 13 return (b - a);||| 14 }||| 15 double distance(long long x1, long long y1, long long x2, long long y2) {||| 16 return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2) * 1.0);||| 17 }||| 18 bool isPerfectSquare(long double x) {||| 19 long double sr = sqrt(x);||| 20 return ((sr - floor(sr)) == 0);||| 21 }||| 22 bool palindrome(string s, long long i, long long j) {||| 23 if (i > j) return true;||| 24 if (s[i] != s[j])||| 25 return false;||| 26 else||| 27 return palindrome(s, i + 1, j - 1);||| 28 }||| 29 bool isPrime(long long n) {||| 30 if (n <= 1) return false;||| 31 if (n <= 3) return true;||| 32 if (n % 2 == 0 || n % 3 == 0) return false;||| 33 for (long long i = 5; i * i <= n; i = i + 6)||| 34 if (n % i == 0 || n % (i + 2) == 0) return false;||| 35 return true;||| 36 }||| 37 const long long MD = 1e9 + 7;||| 38 long long binpow(long long a, long long b, long long m) {||| 39 a %= m;||| 40 long long res = 1;||| 41 while (b > 0) {||| 42 if (b & 1) res = res * a % m;||| 43 a = a * a % m;||| 44 b >>= 1;||| 45 }||| 46 return res;||| 47 }||| 48 const long long N = 2e5 + 5;||| 49 long long fact[N];||| 50 void precompute() {||| 51 fact[0] = fact[1] = 1;||| 52 for (long long i = 2; i < N; i++) {||| 53 fact[i] = fact[i - 1] * i;||| 54 fact[i] %= MD;||| 55 }||| 56 }||| 57 long long nPr(long long n, long long c) {||| 58 long long num = fact[n];||| 59 num %= MD;||| 60 num /= fact[n - c];||| 61 num %= MD;||| 62 return num;||| 63 }||| 64 vector<vector<long long>> vec;||| 65 struct tri {||| 66 long long a, b, c;||| 67 };||| 68 void solve(long long tt) {||| 69 long long n;||| 70 cin >> n;||| 71 vector<unordered_set<long long>> v(5);||| 72 for (long long i = 1; i <= n; i++) {||| 73 for (long long j = 0; j < 5; j++) {||| 74 long long x;||| 75 cin >> x;||| 76 if (x) {||| 77 v[j].insert(i);||| 78 }||| 79 }||| 80 }||| 81 bool flag = false;||| 82 for (long long i = 1; i < 5; i++) {||| 83 for (long long j = 0; j < i; j++) {||| 84 if ((v[i].size() >= (n / 2) && v[j].size() >= (n / 2))) {||| 85 long long x = v[i].size();||| 86 long long y = v[j].size();||| 87 for (auto u : v[i]) {||| 88 if (v[j].count(u)) {||| 89 if (x > y) {||| 90 x--;||| 91 } else if (y > x) {||| 92 y--;||| 93 }||| 94 }||| 95 }||| 96 if ((x >= (n / 2)) && (y >= (n / 2))) {||| 97 flag = true;||| 98 break;||| 99 }||| 100 }||| 101 }||| 102 if (flag) {||| 103 break;||| 104 }||| 105 }||| 106 if (flag) {||| 107 cout << ""YES""||| 108 << ""\n"";||| 109 } else {||| 110 cout << ""NO""||| 111 << ""\n"";||| 112 }||| 113 }||| 114 signed main() {||| 115 long long t = 1;||| 116 cin >> t;||| 117 for (long long tt = 1; tt <= t; tt++) {||| 118 solve(tt);||| 119 }||| 120 return 0;||| 121 }||| "	91 } else if (y >= x) {
60	372	"1 #include <bits/stdc++.h>||| 2 #pragma gcc optimize(""Ofast,no-stack-protector,tune=native"")||| 3 #pragma gcc optimize(""sse,sse2,sse3,sse4,ssse3"")||| 4 #pragma gcc optimize(""O3"")||| 5 #pragma gcc optimize(""abm,mmx,avx,avx2,unroll-loops,fast-math,section-anchors"")||| 6 #pragma GCC target(""avx,avx2"")||| 7 const long long inf = 1e18, mod = 1e9 + 9, N = 400000;||| 8 const int k = 320, mil = 102300;||| 9 const long double pi = acos(-1);||| 10 using namespace std;||| 11 void solve() {||| 12 int n;||| 13 cin >> n;||| 14 vector<long long> a(n);||| 15 long long s = 0, ret = 0;||| 16 map<long long, long long> m;||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> a[i];||| 19 if (m.end() == m.find(a[i])) m[a[i]] = 0;||| 20 m[a[i]]++;||| 21 s += a[i];||| 22 }||| 23 s *= 2;||| 24 if (s % n != 0) {||| 25 cout << ""0\n"";||| 26 return;||| 27 }||| 28 s /= n;||| 29 for (auto [x, y] : m) {||| 30 if (x != s - x)||| 31 ret += y * m[s - x];||| 32 else||| 33 ret += y * (y - 1);||| 34 }||| 35 cout << ret / 2 << ""\n"";||| 36 return;||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.precision(20);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma gcc optimize(""Ofast,no-stack-protector,tune=native"")||| 3 #pragma gcc optimize(""sse,sse2,sse3,sse4,ssse3"")||| 4 #pragma gcc optimize(""O3"")||| 5 #pragma gcc optimize(""abm,mmx,avx,avx2,unroll-loops,fast-math,section-anchors"")||| 6 #pragma GCC target(""avx,avx2"")||| 7 const long long inf = 1e18, mod = 1e9 + 9, N = 400000;||| 8 const int k = 320, mil = 102300;||| 9 const long double pi = acos(-1);||| 10 using namespace std;||| 11 void solve() {||| 12 int n;||| 13 cin >> n;||| 14 vector<long long> a(n);||| 15 long long s = 0, ret = 0;||| 16 map<long long, int> m;||| 17 for (int i = 0; i < n; i++) {||| 18 cin >> a[i];||| 19 if (m.end() == m.find(a[i])) m[a[i]] = 0;||| 20 m[a[i]]++;||| 21 s += a[i];||| 22 }||| 23 s *= 2;||| 24 if (s % n != 0) {||| 25 cout << ""0\n"";||| 26 return;||| 27 }||| 28 s /= n;||| 29 for (auto [x, y] : m) {||| 30 if (x != s - x)||| 31 ret += y * m[s - x];||| 32 else||| 33 ret += y * (y - 1);||| 34 }||| 35 cout << ret / 2 << ""\n"";||| 36 return;||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.precision(20);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 solve();||| 46 }||| 47 }||| "	16 map<long long, long long> m;
60	298	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int T = 1;||| 7 cin >> T;||| 8 while (T > 0) {||| 9 long long n, sum = 0, sum2 = 0;||| 10 cin >> n;||| 11 map<long long, long long> m;||| 12 long long temp;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> temp;||| 15 sum = sum + temp;||| 16 m[temp] = m[temp] + 1;||| 17 }||| 18 if ((2 * sum) % n != 0) {||| 19 cout << 0 << '\n';||| 20 } else {||| 21 if (m.size() == 1) {||| 22 long long count = 0;||| 23 cout << ((n) * (n - 1)) / 2 << '\n';||| 24 } else {||| 25 long long selfcount = 0;||| 26 long long count = 0, test = ((2 * sum) / n);||| 27 auto tempit = m.begin();||| 28 for (auto it = m.begin(); it != m.end(); it++) {||| 29 tempit = m.find(test - (it->first));||| 30 if (tempit != m.end()) {||| 31 if (it->first == tempit->first) {||| 32 count = count + ((it->second) * ((it->second) - 1));||| 33 continue;||| 34 }||| 35 count = count + (tempit->second) * (it->second);||| 36 }||| 37 }||| 38 cout << (count / 2) << '\n';||| 39 }||| 40 }||| 41 T--;||| 42 }||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int T = 1;||| 7 cin >> T;||| 8 while (T > 0) {||| 9 long long n, sum = 0, sum2 = 0;||| 10 cin >> n;||| 11 unordered_map<long int, long int> m;||| 12 long long temp;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> temp;||| 15 sum = sum + temp;||| 16 m[temp] = m[temp] + 1;||| 17 }||| 18 if ((2 * sum) % n != 0) {||| 19 cout << 0 << '\n';||| 20 } else {||| 21 if (m.size() == 1) {||| 22 long long count = 0;||| 23 cout << ((n) * (n - 1)) / 2 << '\n';||| 24 } else {||| 25 long long selfcount = 0;||| 26 long long count = 0, test = ((2 * sum) / n);||| 27 auto tempit = m.begin();||| 28 for (auto it = m.begin(); it != m.end(); it++) {||| 29 tempit = m.find(test - (it->first));||| 30 if (tempit != m.end()) {||| 31 if (it->first == tempit->first) {||| 32 count = count + ((it->second) * ((it->second) - 1));||| 33 continue;||| 34 }||| 35 count = count + (tempit->second) * (it->second);||| 36 }||| 37 }||| 38 cout << (count / 2) << '\n';||| 39 }||| 40 }||| 41 T--;||| 42 }||| 43 }||| 	11 map<long long, long long> m;
60	164	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 200000;||| 4 int a[1 + NMAX];||| 5 map<int, int> mp;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 int t;||| 10 cin >> t;||| 11 a[0] = INT_MIN;||| 12 while (t--) {||| 13 int n;||| 14 cin >> n;||| 15 mp.clear();||| 16 long long suma = 0ll;||| 17 for (int i = 1; i <= n; i++) {||| 18 cin >> a[i];||| 19 suma += a[i];||| 20 mp[a[i]]++;||| 21 }||| 22 if ((2 * suma) % n) {||| 23 cout << 0 << '\n';||| 24 continue;||| 25 }||| 26 long long medie = 2 * suma / n;||| 27 long long sol = 0;||| 28 for (int i = 1; i <= n; i++) {||| 29 if (a[i] == medie - a[i])||| 30 sol += mp[medie - a[i]] - 1;||| 31 else||| 32 sol += mp[medie - a[i]];||| 33 }||| 34 cout << sol / 2 << '\n';||| 35 }||| 36 return 0;||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NMAX = 200000;||| 4 int a[1 + NMAX];||| 5 map<int, int> mp;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 int t;||| 10 cin >> t;||| 11 a[0] = INT_MIN;||| 12 while (t--) {||| 13 int n;||| 14 cin >> n;||| 15 mp.clear();||| 16 long long suma = 0ll;||| 17 for (int i = 1; i <= n; i++) {||| 18 cin >> a[i];||| 19 suma += a[i];||| 20 mp[a[i]]++;||| 21 }||| 22 if ((2 * suma) % n) {||| 23 cout << 0 << '\n';||| 24 continue;||| 25 }||| 26 long long medie = 2 * suma / n;||| 27 int sol = 0;||| 28 for (int i = 1; i <= n; i++) {||| 29 if (a[i] == medie - a[i])||| 30 sol += mp[medie - a[i]] - 1;||| 31 else||| 32 sol += mp[medie - a[i]];||| 33 }||| 34 cout << sol / 2 << '\n';||| 35 }||| 36 return 0;||| 37 }||| 	27 long long sol = 0;
60	371	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int a[200005];||| 5 int idx[200005];||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int tc;||| 11 cin >> tc;||| 12 while (tc--) {||| 13 int n;||| 14 cin >> n;||| 15 ll s = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 cin >> a[i];||| 18 s += a[i];||| 19 }||| 20 if ((s * 2) % n != 0) {||| 21 cout << 0 << '\n';||| 22 continue;||| 23 }||| 24 sort(a, a + n);||| 25 idx[0] = 0;||| 26 int pos = 1;||| 27 for (int i = 1; i < n; i++) {||| 28 if (a[i] != a[i - 1]) {||| 29 idx[pos] = i;||| 30 pos++;||| 31 }||| 32 }||| 33 idx[pos] = n;||| 34 int left = 0;||| 35 int right = pos - 1;||| 36 ll cnt = 0;||| 37 ll ps = (s * 2) / n;||| 38 while (left < right) {||| 39 ll cs = a[idx[left]] + a[idx[right]];||| 40 if (cs == ps) {||| 41 cnt += ll(idx[left + 1] - idx[left]) * ll(idx[right + 1] - idx[right]);||| 42 left += 1;||| 43 right -= 1;||| 44 } else if (cs > ps) {||| 45 right -= 1;||| 46 } else {||| 47 left += 1;||| 48 }||| 49 }||| 50 if (left == right && a[idx[left]] * 2 == ps) {||| 51 ll diff = idx[left + 1] - idx[left];||| 52 cnt += diff * (diff - 1) / 2;||| 53 }||| 54 cout << cnt << '\n';||| 55 }||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int a[200005];||| 5 int idx[200005];||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int tc;||| 11 cin >> tc;||| 12 while (tc--) {||| 13 int n;||| 14 cin >> n;||| 15 ll s = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 cin >> a[i];||| 18 s += a[i];||| 19 }||| 20 if ((s * 2) % n != 0) {||| 21 cout << 0 << '\n';||| 22 continue;||| 23 }||| 24 sort(a, a + n);||| 25 idx[0] = 0;||| 26 int pos = 1;||| 27 for (int i = 1; i < n; i++) {||| 28 if (a[i] != a[i - 1]) {||| 29 idx[pos] = i;||| 30 pos++;||| 31 }||| 32 }||| 33 idx[pos] = n;||| 34 int left = 0;||| 35 int right = pos - 1;||| 36 ll cnt = 0;||| 37 ll ps = (s * 2) / n;||| 38 while (left < right) {||| 39 ll cs = a[idx[left]] + a[idx[right]];||| 40 if (cs == ps) {||| 41 cnt += (idx[left + 1] - idx[left]) * (idx[right + 1] - idx[right]);||| 42 left += 1;||| 43 right -= 1;||| 44 } else if (cs > ps) {||| 45 right -= 1;||| 46 } else {||| 47 left += 1;||| 48 }||| 49 }||| 50 if (left == right && a[idx[left]] * 2 == ps) {||| 51 ll diff = idx[left + 1] - idx[left];||| 52 cnt += diff * (diff - 1) / 2;||| 53 }||| 54 cout << cnt << '\n';||| 55 }||| 56 }||| 	41 cnt += ll(idx[left + 1] - idx[left]) * ll(idx[right + 1] - idx[right]);
60	392	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void chkmax(T &x, T y) {||| 5 x = max(x, y);||| 6 }||| 7 template <typename T>||| 8 void chkmin(T &x, T y) {||| 9 x = min(x, y);||| 10 }||| 11 template <typename T>||| 12 void read(T &x) {||| 13 x = 0;||| 14 int f = 1;||| 15 char c = getchar();||| 16 for (; !isdigit(c); c = getchar())||| 17 if (c == '-') f = -f;||| 18 for (; isdigit(c); c = getchar()) x = x * 10 + c - '0';||| 19 x *= f;||| 20 }||| 21 const int N = 2e5 + 10;||| 22 int a[N];||| 23 map<int, long long> mp;||| 24 signed main() {||| 25 int _;||| 26 read(_);||| 27 while (_--) {||| 28 mp.clear();||| 29 int n;||| 30 read(n);||| 31 long long s = 0, ans = 0;||| 32 for (int i = (1); i <= (n); i++) read(a[i]), s += a[i], mp[a[i]]++;||| 33 if (s * 2 % n != 0) {||| 34 puts(""0"");||| 35 continue;||| 36 }||| 37 long long mid = s * 2 / n;||| 38 for (int i = (1); i <= (n); i++)||| 39 if (a[i] < mid - a[i]) ans += mp[mid - a[i]];||| 40 if (mid % 2 == 0) ans += mp[mid / 2] * (mp[mid / 2] - 1) / 2;||| 41 cout << ans << endl;||| 42 }||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void chkmax(T &x, T y) {||| 5 x = max(x, y);||| 6 }||| 7 template <typename T>||| 8 void chkmin(T &x, T y) {||| 9 x = min(x, y);||| 10 }||| 11 template <typename T>||| 12 void read(T &x) {||| 13 x = 0;||| 14 int f = 1;||| 15 char c = getchar();||| 16 for (; !isdigit(c); c = getchar())||| 17 if (c == '-') f = -f;||| 18 for (; isdigit(c); c = getchar()) x = x * 10 + c - '0';||| 19 x *= f;||| 20 }||| 21 const int N = 2e5 + 10;||| 22 int a[N];||| 23 map<int, int> mp;||| 24 signed main() {||| 25 int _;||| 26 read(_);||| 27 while (_--) {||| 28 mp.clear();||| 29 int n;||| 30 read(n);||| 31 long long s = 0, ans = 0;||| 32 for (int i = (1); i <= (n); i++) read(a[i]), s += a[i], mp[a[i]]++;||| 33 if (s * 2 % n != 0) {||| 34 puts(""0"");||| 35 continue;||| 36 }||| 37 long long mid = s * 2 / n;||| 38 for (int i = (1); i <= (n); i++)||| 39 if (a[i] < mid - a[i]) ans += mp[mid - a[i]];||| 40 if (mid % 2 == 0) ans += mp[mid / 2] * (mp[mid / 2] - 1) / 2;||| 41 cout << ans << endl;||| 42 }||| 43 return 0;||| 44 }||| "	23 map<int, long long> mp;
60	375	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long modpow(long long x, long long y) {||| 4 if (x == 0) return 0;||| 5 long long res = 1;||| 6 x = x % 1000000007;||| 7 while (y > 0) {||| 8 if (y & 1) res = (res * x) % 1000000007;||| 9 y = y >> 1;||| 10 x = (x * x) % 1000000007;||| 11 }||| 12 return res;||| 13 }||| 14 long long modinv(long long a) { return modpow(a, 1000000007 - 2); }||| 15 vector<long long> mf = {1};||| 16 vector<long long> mfi = {1};||| 17 long long modfact(int n) {||| 18 if (mf.size() > n) {||| 19 return mf[n];||| 20 } else {||| 21 for (int i = mf.size(); i <= n; i++) {||| 22 long long next = mf.back() * i % 1000000007;||| 23 mf.push_back(next);||| 24 mfi.push_back(modinv(next));||| 25 }||| 26 return mf[n];||| 27 }||| 28 }||| 29 long long modfactinv(int n) {||| 30 if (mfi.size() > n) {||| 31 return mfi[n];||| 32 } else {||| 33 return modinv(modfact(n));||| 34 }||| 35 }||| 36 long long nCr(int n, int k) {||| 37 if (n < 0 || k < 0 || k > n) {||| 38 return 0;||| 39 } else {||| 40 return modfact(n) * modfactinv(k) % 1000000007 * modfactinv(n - k) %||| 41 1000000007;||| 42 }||| 43 }||| 44 void solve() {||| 45 int n;||| 46 cin >> n;||| 47 long long a[n];||| 48 for (int i = 0; i < n; i++) cin >> a[i];||| 49 ;||| 50 map<double, int> m;||| 51 double sum = 0;||| 52 for (int i = 0; i < n; i++) {||| 53 sum += a[i];||| 54 }||| 55 double avg = sum / n;||| 56 double now = avg * (n - 2);||| 57 double req = sum - now;||| 58 long long ans = 0;||| 59 for (int i = 0; i < n; i++) {||| 60 ans += m[req - a[i]];||| 61 m[a[i]]++;||| 62 }||| 63 cout << ans << ""\n"";||| 64 }||| 65 int main() {||| 66 int t = 1;||| 67 cin >> t;||| 68 while (t--) solve();||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long modpow(long long x, long long y) {||| 4 if (x == 0) return 0;||| 5 long long res = 1;||| 6 x = x % 1000000007;||| 7 while (y > 0) {||| 8 if (y & 1) res = (res * x) % 1000000007;||| 9 y = y >> 1;||| 10 x = (x * x) % 1000000007;||| 11 }||| 12 return res;||| 13 }||| 14 long long modinv(long long a) { return modpow(a, 1000000007 - 2); }||| 15 vector<long long> mf = {1};||| 16 vector<long long> mfi = {1};||| 17 long long modfact(int n) {||| 18 if (mf.size() > n) {||| 19 return mf[n];||| 20 } else {||| 21 for (int i = mf.size(); i <= n; i++) {||| 22 long long next = mf.back() * i % 1000000007;||| 23 mf.push_back(next);||| 24 mfi.push_back(modinv(next));||| 25 }||| 26 return mf[n];||| 27 }||| 28 }||| 29 long long modfactinv(int n) {||| 30 if (mfi.size() > n) {||| 31 return mfi[n];||| 32 } else {||| 33 return modinv(modfact(n));||| 34 }||| 35 }||| 36 long long nCr(int n, int k) {||| 37 if (n < 0 || k < 0 || k > n) {||| 38 return 0;||| 39 } else {||| 40 return modfact(n) * modfactinv(k) % 1000000007 * modfactinv(n - k) %||| 41 1000000007;||| 42 }||| 43 }||| 44 void solve() {||| 45 int n;||| 46 cin >> n;||| 47 long long a[n];||| 48 for (int i = 0; i < n; i++) cin >> a[i];||| 49 ;||| 50 map<double, int> m;||| 51 double sum = 0;||| 52 for (int i = 0; i < n; i++) {||| 53 sum += a[i];||| 54 }||| 55 double avg = sum / n;||| 56 double now = avg * (n - 2);||| 57 long long req = sum - now;||| 58 long long ans = 0;||| 59 for (int i = 0; i < n; i++) {||| 60 ans += m[req - a[i]];||| 61 m[a[i]]++;||| 62 }||| 63 cout << ans << ""\n"";||| 64 }||| 65 int main() {||| 66 int t = 1;||| 67 cin >> t;||| 68 while (t--) solve();||| 69 }||| "	57 double req = sum - now;
61	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T read() {||| 5 T re = 0;||| 6 char c = getchar();||| 7 bool negt = false;||| 8 while (c < '0' || c > '9') negt |= (c == '-'), c = getchar();||| 9 while (c >= '0' && c <= '9')||| 10 re = (re << 1) + (re << 3) + c - '0', c = getchar();||| 11 return negt ? -re : re;||| 12 }||| 13 const int N = 2e5 + 10;||| 14 int a[N], b[N];||| 15 long long cnt1[N], cnt2[N];||| 16 map<pair<int, int>, int> cnt3;||| 17 long long n;||| 18 void solve() {||| 19 long long ans = 0;||| 20 n = read<int>();||| 21 for (int i = 1; i <= n; i++) a[i] = read<int>(), b[i] = read<int>();||| 22 for (int i = 1; i <= n; i++) cnt1[i] = cnt2[i] = 0;||| 23 for (int i = 1; i <= n; i++)||| 24 ++cnt1[a[i]], ++cnt2[b[i]], ++cnt3[make_pair(a[i], b[i])];||| 25 long long add = 0;||| 26 add += n * (n - 1) * (n - 2) / 6;||| 27 for (int i = 1; i <= n; i++)||| 28 if (cnt1[i] != 0) {||| 29 add -= (cnt1[i] - 1) * cnt1[i] * (n - cnt1[i]) / 2;||| 30 add -= (cnt1[i] - 2) * (cnt1[i] - 1) * cnt1[i] / 6;||| 31 }||| 32 add += n * (n - 1) * (n - 2) / 6;||| 33 for (int i = 1; i <= n; i++)||| 34 if (cnt2[i] != 0) {||| 35 add -= (cnt2[i] - 1) * cnt2[i] * (n - cnt2[i]) / 2;||| 36 add -= (cnt2[i] - 2) * (cnt2[i] - 1) * cnt2[i] / 6;||| 37 }||| 38 long long minus = n * (n - 1) * (n - 2) / 6;||| 39 for (int i = 1; i <= n; i++) minus -= (cnt1[a[i]] - 1) * (cnt2[b[i]] - 1);||| 40 minus -= add;||| 41 printf(""%lld\n"", add + minus);||| 42 }||| 43 int main() {||| 44 int T = read<int>();||| 45 while (T--) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T read() {||| 5 T re = 0;||| 6 char c = getchar();||| 7 bool negt = false;||| 8 while (c < '0' || c > '9') negt |= (c == '-'), c = getchar();||| 9 while (c >= '0' && c <= '9')||| 10 re = (re << 1) + (re << 3) + c - '0', c = getchar();||| 11 return negt ? -re : re;||| 12 }||| 13 const int N = 2e5 + 10;||| 14 int a[N], b[N];||| 15 long long cnt1[N], cnt2[N];||| 16 map<pair<int, int>, int> cnt3;||| 17 int n;||| 18 void solve() {||| 19 long long ans = 0;||| 20 n = read<int>();||| 21 for (int i = 1; i <= n; i++) a[i] = read<int>(), b[i] = read<int>();||| 22 for (int i = 1; i <= n; i++) cnt1[i] = cnt2[i] = 0;||| 23 for (int i = 1; i <= n; i++)||| 24 ++cnt1[a[i]], ++cnt2[b[i]], ++cnt3[make_pair(a[i], b[i])];||| 25 long long add = 0;||| 26 add += n * (n - 1) * (n - 2) / 6;||| 27 for (int i = 1; i <= n; i++)||| 28 if (cnt1[i] != 0) {||| 29 add -= (cnt1[i] - 1) * cnt1[i] * (n - cnt1[i]) / 2;||| 30 add -= (cnt1[i] - 2) * (cnt1[i] - 1) * cnt1[i] / 6;||| 31 }||| 32 add += n * (n - 1) * (n - 2) / 6;||| 33 for (int i = 1; i <= n; i++)||| 34 if (cnt2[i] != 0) {||| 35 add -= (cnt2[i] - 1) * cnt2[i] * (n - cnt2[i]) / 2;||| 36 add -= (cnt2[i] - 2) * (cnt2[i] - 1) * cnt2[i] / 6;||| 37 }||| 38 long long minus = n * (n - 1) * (n - 2) / 6;||| 39 for (int i = 1; i <= n; i++) minus -= (cnt1[a[i]] - 1) * (cnt2[b[i]] - 1);||| 40 minus -= add;||| 41 printf(""%lld\n"", add + minus);||| 42 }||| 43 int main() {||| 44 int T = read<int>();||| 45 while (T--) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	17 long long n;
61	120	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<i64> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<int> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	10 vector<i64> A(n + 1, 0), B(n + 1, 0);
61	258	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 i64 n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<i64> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 using u64 = unsigned long long;||| 5 using u32 = unsigned int;||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 map<int, set<int>> m;||| 10 vector<int> A(n + 1, 0), B(n + 1, 0);||| 11 for (int i = 0; i < n; ++i) {||| 12 int a, b;||| 13 cin >> a >> b;||| 14 m[a].insert(b);||| 15 A[a]++;||| 16 B[b]++;||| 17 }||| 18 i64 count = n * (n - 1) * (n - 2) / 6;||| 19 vector<int> sum(n + 1, 0);||| 20 for (auto& [a, s] : m) {||| 21 for (int b : s) {||| 22 count -= (s.size() - 1) * (B[b] - 1);||| 23 }||| 24 }||| 25 cout << count << '\n';||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(nullptr);||| 30 int T = 1;||| 31 cin >> T;||| 32 for (int i = 1; i <= T; ++i) solve();||| 33 return 0;||| 34 }||| 	7 i64 n;
61	181	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 ll n;||| 9 cin >> n;||| 10 ll ans = n * (n - 1) * (n - 2);||| 11 ans /= 6;||| 12 map<ll, ll> m_a;||| 13 map<ll, ll> m_b;||| 14 vector<pair<ll, ll>> v(n);||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> v[i].first >> v[i].second;||| 17 m_a[v[i].first]++;||| 18 m_b[v[i].second]++;||| 19 }||| 20 ll elem = 0;||| 21 for (int i = 0; i < n; ++i) {||| 22 elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1);||| 23 }||| 24 ans -= elem;||| 25 cout << ans << '\n';||| 26 }||| 27 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 ll ans = n * (n - 1) * (n - 2);||| 11 ans /= 6;||| 12 map<ll, ll> m_a;||| 13 map<ll, ll> m_b;||| 14 vector<pair<ll, ll>> v(n);||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> v[i].first >> v[i].second;||| 17 m_a[v[i].first]++;||| 18 m_b[v[i].second]++;||| 19 }||| 20 ll elem = 0;||| 21 for (int i = 0; i < n; ++i) {||| 22 elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1);||| 23 }||| 24 ans -= elem;||| 25 cout << ans << '\n';||| 26 }||| 27 }||| 	8 ll n;
61	224	"1 #include <bits/stdc++.h>||| 2 const int INF = 1e8;||| 3 const long long MOD = 1e9 + 7;||| 4 using namespace std;||| 5 bool cases = 1;||| 6 long long x[200005];||| 7 long long y[200005];||| 8 void solve(int nc) {||| 9 long long n, a, b;||| 10 cin >> n;||| 11 vector<pair<int, int> > v;||| 12 long long xd = 0, yd = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a >> b;||| 15 v.push_back(pair<int, int>(a, b));||| 16 if (x[a] == 0) xd++;||| 17 if (y[b] == 0) yd++;||| 18 x[a]++;||| 19 y[b]++;||| 20 }||| 21 long long ans = n * (n - 1) * (n - 2) / 6;||| 22 for (int i = 0; i < n; i++) {||| 23 a = v[i].first, b = v[i].second;||| 24 ans -= (x[a] - 1) * (y[b] - 1);||| 25 }||| 26 for (int i = 0; i < n; i++) {||| 27 a = v[i].first, b = v[i].second;||| 28 x[a] = y[b] = 0;||| 29 }||| 30 cout << ans;||| 31 cout << ""\n"";||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 int t = 1;||| 37 if (cases) cin >> t;||| 38 for (int nc = 1; nc < t + 1; nc++) solve(nc);||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 const int INF = 1e8;||| 3 const long long MOD = 1e9 + 7;||| 4 using namespace std;||| 5 bool cases = 1;||| 6 long long x[200005];||| 7 long long y[200005];||| 8 void solve(int nc) {||| 9 int n, a, b;||| 10 cin >> n;||| 11 vector<pair<int, int> > v;||| 12 long long xd = 0, yd = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> a >> b;||| 15 v.push_back(pair<int, int>(a, b));||| 16 if (x[a] == 0) xd++;||| 17 if (y[b] == 0) yd++;||| 18 x[a]++;||| 19 y[b]++;||| 20 }||| 21 long long ans = n * (n - 1) * (n - 2) / 6;||| 22 for (int i = 0; i < n; i++) {||| 23 a = v[i].first, b = v[i].second;||| 24 ans -= (x[a] - 1) * (y[b] - 1);||| 25 }||| 26 for (int i = 0; i < n; i++) {||| 27 a = v[i].first, b = v[i].second;||| 28 x[a] = y[b] = 0;||| 29 }||| 30 cout << ans;||| 31 cout << ""\n"";||| 32 }||| 33 int main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 int t = 1;||| 37 if (cases) cin >> t;||| 38 for (int nc = 1; nc < t + 1; nc++) solve(nc);||| 39 return 0;||| 40 }||| "	9 long long n, a, b;
62	80	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t time_p = clock();||| 4 void time_taken() {||| 5 time_p = clock() - time_p;||| 6 cerr << ""Time Taken : "" << (float)(time_p) / CLOCKS_PER_SEC << ""\n"";||| 7 }||| 8 const long long mod = 1e9 + 7;||| 9 const long long INF = 1e18;||| 10 const int N = 1004;||| 11 int dp[N][N][2];||| 12 int main() {||| 13 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 14 int n, m, q;||| 15 cin >> n >> m >> q;||| 16 vector<vector<int> > a(n, vector<int>(m));||| 17 memset(dp, 0, sizeof(dp));||| 18 dp[n - 1][m - 1][1] = 1;||| 19 dp[n - 1][m - 1][0] = 1;||| 20 int ans = 0;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 for (int j = m - 1; j >= 0; j--) {||| 23 dp[i][j][0] = 1;||| 24 if (j + 1 < m) dp[i][j][0] += dp[i][j + 1][1];||| 25 dp[i][j][1] = 1;||| 26 if (i + 1 < n) dp[i][j][1] += dp[i + 1][j][0];||| 27 ans += (dp[i][j][0] + dp[i][j][1] - 1);||| 28 }||| 29 };||| 30 auto upd = [&](int r, int c, int delta) {||| 31 if (delta == 0) return;||| 32 ans += delta;||| 33 dp[r][c][0] += delta;||| 34 r--;||| 35 while (r >= 0 and c >= 0) {||| 36 if (a[r][c] == 1) return;||| 37 dp[r][c][1] += delta;||| 38 ans += delta;||| 39 if (c) {||| 40 if (a[r][c - 1] == 1) return;||| 41 dp[r][c - 1][0] += delta;||| 42 ans += delta;||| 43 }||| 44 c--;||| 45 r--;||| 46 }||| 47 };||| 48 while (q--) {||| 49 int r, c;||| 50 cin >> r >> c, --r, --c;||| 51 a[r][c] ^= 1;||| 52 int delta = 0;||| 53 if (a[r][c] == 1) {||| 54 delta -= 1;||| 55 if (c + 1 < m) delta -= dp[r][c + 1][1];||| 56 } else {||| 57 delta += 1;||| 58 if (c + 1 < m) delta += dp[r][c + 1][1];||| 59 }||| 60 upd(r, c, delta);||| 61 delta = 0;||| 62 if (a[r][c] == 1) {||| 63 delta -= 1;||| 64 if (r + 1 < n) delta -= dp[r + 1][c][0];||| 65 } else {||| 66 delta += 1;||| 67 if (r + 1 < n) delta += dp[r + 1][c][0];||| 68 }||| 69 dp[r][c][1] += delta;||| 70 ans += delta;||| 71 if (c > 0 and a[r][c - 1] == 0) {||| 72 upd(r, c - 1, delta);||| 73 }||| 74 if (a[r][c] == 1) {||| 75 ans++;||| 76 } else||| 77 ans--;||| 78 cout << ans << '\n';||| 79 }||| 80 time_taken();||| 81 return 0;||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t time_p = clock();||| 4 void time_taken() {||| 5 time_p = clock() - time_p;||| 6 cerr << ""Time Taken : "" << (float)(time_p) / CLOCKS_PER_SEC << ""\n"";||| 7 }||| 8 const long long mod = 1e9 + 7;||| 9 const long long INF = 1e18;||| 10 const int N = 1004;||| 11 int dp[N][N][2];||| 12 int main() {||| 13 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 14 int n, m, q;||| 15 cin >> n >> m >> q;||| 16 vector<vector<int> > a(n, vector<int>(m));||| 17 memset(dp, 0, sizeof(dp));||| 18 dp[n - 1][m - 1][1] = 1;||| 19 dp[n - 1][m - 1][0] = 1;||| 20 int ans = 0;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 for (int j = m - 1; j >= 0; j--) {||| 23 dp[i][j][0] = 1;||| 24 if (j + 1 < m) dp[i][j][0] += dp[i][j + 1][1];||| 25 dp[i][j][1] = 1;||| 26 if (i + 1 < n) dp[i][j][1] += dp[i + 1][j][0];||| 27 ans += (dp[i][j][0] + dp[i][j][1] - 1);||| 28 }||| 29 };||| 30 auto upd = [&](int r, int c, int delta) {||| 31 if (delta == 0) return;||| 32 ans += delta;||| 33 dp[r][c][0] += delta;||| 34 r--;||| 35 while (r >= 0 and c >= 0) {||| 36 if (a[r][c] == 1) return;||| 37 dp[r][c][1] += delta;||| 38 ans += delta;||| 39 if (c) {||| 40 if (a[r][c - 1] == 1) return;||| 41 dp[r][c - 1][0] += delta;||| 42 ans += delta;||| 43 }||| 44 c--;||| 45 r--;||| 46 }||| 47 };||| 48 while (q--) {||| 49 int r, c;||| 50 cin >> r >> c, --r, --c;||| 51 a[r][c] ^= 1;||| 52 int delta = 0;||| 53 if (a[r][c] == 1) {||| 54 delta -= 1;||| 55 if (c + 1 < m) delta -= dp[r][c + 1][1];||| 56 } else {||| 57 delta += 1;||| 58 if (c + 1 < m) delta += dp[r][c + 1][1];||| 59 }||| 60 upd(r, c, delta);||| 61 delta = 0;||| 62 if (a[r][c] == 1) {||| 63 delta -= 1;||| 64 if (r + 1 < m) delta -= dp[r + 1][c][0];||| 65 } else {||| 66 delta += 1;||| 67 if (r + 1 < m) delta += dp[r + 1][c][0];||| 68 }||| 69 dp[r][c][1] += delta;||| 70 ans += delta;||| 71 if (c > 0 and a[r][c - 1] == 0) {||| 72 upd(r, c - 1, delta);||| 73 }||| 74 if (a[r][c] == 1) {||| 75 ans++;||| 76 } else||| 77 ans--;||| 78 cout << ans << '\n';||| 79 }||| 80 time_taken();||| 81 return 0;||| 82 }||| "	64 if (r + 1 < n) delta -= dp[r + 1][c][0];
62	27	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 int mmp[1010][1010];||| 5 long long ans = 0;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> n >> m >> q;||| 9 long long A = min(m, n), D = (m - n > 0) ? (m - n) : (n - m);||| 10 ans = 2ll * (A - 1ll) * (A) * (2ll * A - 1ll) / 3ll + A * (A - 1ll) +||| 11 D * A * (2ll * A - 1ll) + 1ll * n * m;||| 12 int x, y;||| 13 for (int i = 1; i <= q; i++) {||| 14 cin >> x >> y;||| 15 int xt = x, yt = y;||| 16 long long up = 0, down = 0;||| 17 for (int j = 1; j > -1; j++) {||| 18 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 19 xt--;||| 20 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 21 yt--;||| 22 else||| 23 break;||| 24 up++;||| 25 }||| 26 xt = x, yt = y;||| 27 for (int j = 0; j >= -1; j++) {||| 28 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 29 xt++;||| 30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)||| 31 yt++;||| 32 else||| 33 break;||| 34 down++;||| 35 }||| 36 if (mmp[x][y])||| 37 ans += (1ll * up * down + up + down + 1);||| 38 else||| 39 ans -= (1ll * up * down + up + down + 1);||| 40 xt = x, yt = y;||| 41 up = 0, down = 0;||| 42 for (int j = 0; j > -1; j++) {||| 43 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 44 xt--;||| 45 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 46 yt--;||| 47 else||| 48 break;||| 49 up++;||| 50 }||| 51 xt = x, yt = y;||| 52 for (int j = 1; j > -1; j++) {||| 53 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 54 xt++;||| 55 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)||| 56 yt++;||| 57 else||| 58 break;||| 59 down++;||| 60 }||| 61 if (mmp[x][y])||| 62 ans += (1ll * up * down + up + down + 1);||| 63 else||| 64 ans -= (1ll * up * down + up + down + 1);||| 65 if (mmp[x][y] == 0)||| 66 ans++;||| 67 else||| 68 ans--;||| 69 mmp[x][y] ^= 1;||| 70 cout << ans << endl;||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, q;||| 4 int mmp[1010][1010];||| 5 long long ans = 0;||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin >> n >> m >> q;||| 9 long long A = min(m, n), D = (m - n > 0) ? (m - n) : (n - m);||| 10 ans = 2ll * (A - 1ll) * (A) * (2ll * A - 1ll) / 3ll + A * (A - 1ll) +||| 11 D * A * (2ll * A - 1ll) + 1ll * n * m;||| 12 int x, y;||| 13 for (int i = 1; i <= q; i++) {||| 14 cin >> x >> y;||| 15 int xt = x, yt = y;||| 16 long long up = 0, down = 0;||| 17 for (int j = 1; j > -1; j++) {||| 18 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 19 xt--;||| 20 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 21 yt--;||| 22 else||| 23 break;||| 24 up++;||| 25 }||| 26 xt = x, yt = y;||| 27 for (int j = 0; j >= -1; j++) {||| 28 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 29 xt++;||| 30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= n)||| 31 yt++;||| 32 else||| 33 break;||| 34 down++;||| 35 }||| 36 if (mmp[x][y])||| 37 ans += (1ll * up * down + up + down + 1);||| 38 else||| 39 ans -= (1ll * up * down + up + down + 1);||| 40 xt = x, yt = y;||| 41 up = 0, down = 0;||| 42 for (int j = 0; j > -1; j++) {||| 43 if (((j & 1) != 0) && mmp[xt - 1][yt] == 0 && xt - 1 >= 1)||| 44 xt--;||| 45 else if (((j & 1) == 0) && mmp[xt][yt - 1] == 0 && yt - 1 >= 1)||| 46 yt--;||| 47 else||| 48 break;||| 49 up++;||| 50 }||| 51 xt = x, yt = y;||| 52 for (int j = 1; j > -1; j++) {||| 53 if (((j & 1) != 0) && mmp[xt + 1][yt] == 0 && xt + 1 <= n)||| 54 xt++;||| 55 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= n)||| 56 yt++;||| 57 else||| 58 break;||| 59 down++;||| 60 }||| 61 if (mmp[x][y])||| 62 ans += (1ll * up * down + up + down + 1);||| 63 else||| 64 ans -= (1ll * up * down + up + down + 1);||| 65 if (mmp[x][y] == 0)||| 66 ans++;||| 67 else||| 68 ans--;||| 69 mmp[x][y] ^= 1;||| 70 cout << ans << endl;||| 71 }||| 72 return 0;||| 73 }||| 	30 else if (((j & 1) == 0) && mmp[xt][yt + 1] == 0 && yt + 1 <= m)
62	21	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1005;||| 4 long long n, m, q, ans;||| 5 bool vizitat[N][N];||| 6 long long dp[N][N][2];||| 7 bool verifica(long long i, long long j) {||| 8 if (i < 1 || j < 1 || i > n || j > m) return false;||| 9 return true;||| 10 }||| 11 long long cnt(long long i, long long j) {||| 12 long long answer = 0;||| 13 for (long long it = 0; it <= 1; it++) {||| 14 long long up = 0;||| 15 long long lin = i;||| 16 long long col = j;||| 17 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 18 if (up % 2 == it) {||| 19 lin--;||| 20 } else {||| 21 col--;||| 22 }||| 23 up++;||| 24 }||| 25 long long down = 0;||| 26 lin = i;||| 27 col = j;||| 28 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 29 if (down % 2 == it) {||| 30 col++;||| 31 } else {||| 32 lin++;||| 33 }||| 34 down++;||| 35 }||| 36 answer += up * down;||| 37 }||| 38 answer--;||| 39 return answer;||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 cin >> n >> m >> q;||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 1; j <= m; j++) {||| 48 dp[i][j][1] = dp[i][j - 1][0] + 1;||| 49 dp[i][j][0] = dp[i - 1][j][1] + 1;||| 50 ans += dp[i][j][1];||| 51 ans += dp[i][j][0];||| 52 }||| 53 }||| 54 ans -= n * m;||| 55 while (q--) {||| 56 long long lin, col;||| 57 cin >> lin >> col;||| 58 if (vizitat[lin][col] == true) {||| 59 vizitat[lin][col] = false;||| 60 ans += cnt(lin, col);||| 61 } else {||| 62 ans -= cnt(lin, col);||| 63 vizitat[lin][col] = true;||| 64 }||| 65 cout << ans << '\n';||| 66 }||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1005;||| 4 long long n, m, q, ans;||| 5 bool vizitat[N][N];||| 6 long long dp[N][N][2];||| 7 bool verifica(long long i, long long j) {||| 8 if (i < 1 || j < 1 || i > n || j > m) return false;||| 9 return true;||| 10 }||| 11 long long cnt(long long i, long long j) {||| 12 long long answer = 0;||| 13 for (long long it = 0; it <= 1; it++) {||| 14 long long up = 0;||| 15 long long lin = i;||| 16 long long col = j;||| 17 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 18 if (up % 2 == it) {||| 19 lin--;||| 20 } else {||| 21 col--;||| 22 }||| 23 up++;||| 24 }||| 25 long long down = 0;||| 26 lin = i;||| 27 col = j;||| 28 while (verifica(lin, col) && vizitat[lin][col] == false) {||| 29 if (down % 2 == it) {||| 30 lin++;||| 31 } else {||| 32 col++;||| 33 }||| 34 down++;||| 35 }||| 36 answer += up * down;||| 37 }||| 38 answer--;||| 39 return answer;||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 cin >> n >> m >> q;||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 1; j <= m; j++) {||| 48 dp[i][j][1] = dp[i][j - 1][0] + 1;||| 49 dp[i][j][0] = dp[i - 1][j][1] + 1;||| 50 ans += dp[i][j][1];||| 51 ans += dp[i][j][0];||| 52 }||| 53 }||| 54 ans -= n * m;||| 55 while (q--) {||| 56 long long lin, col;||| 57 cin >> lin >> col;||| 58 if (vizitat[lin][col] == true) {||| 59 vizitat[lin][col] = false;||| 60 ans += cnt(lin, col);||| 61 } else {||| 62 ans -= cnt(lin, col);||| 63 vizitat[lin][col] = true;||| 64 }||| 65 cout << ans << '\n';||| 66 }||| 67 return 0;||| 68 }||| 	30 col++;
62	18	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, y = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, n)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	6 if (t == 0) dx = -dx, dy = -dy;
62	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1005][1005], f[1005][1005], ans;||| 4 inline bool in(int x, int l, int r) { return l <= x && x <= r; }||| 5 int calc(int x, int y, int dx, int dy, int t) {||| 6 if (t == 0) dx = -dx, dy = -dy;||| 7 int cnt = 0;||| 8 while (in(x + dx, 1, n) && in(y + dy, 1, n)) {||| 9 x += dx, y += dy;||| 10 if (!a[x][y]) break;||| 11 ++cnt;||| 12 if (dx != 0)||| 13 dy = dx, dx = 0;||| 14 else||| 15 dx = dy, dy = 0;||| 16 }||| 17 return cnt;||| 18 }||| 19 signed main() {||| 20 int q;||| 21 cin >> n >> m >> q;||| 22 for (int i = 1; i <= n; ++i)||| 23 for (int j = 1; j <= m; ++j) a[i][j] = 1;||| 24 for (int i = 1; i <= n; ++i)||| 25 for (int j = 1; j <= m; ++j)||| 26 ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1);||| 27 while (q--) {||| 28 int i, j;||| 29 cin >> i >> j;||| 30 int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) +||| 31 (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1;||| 32 if (a[i][j])||| 33 ans -= sum;||| 34 else||| 35 ans += sum;||| 36 a[i][j] ^= 1;||| 37 cout << ans << ""\n"";||| 38 }||| 39 }||| "	8 while (in(x + dx, 1, n) && in(y + dy, 1, m)) {
62	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 double startTime;||| 4 double gct() { return ((double)clock() - startTime) / CLOCKS_PER_SEC; }||| 5 void suraj();||| 6 int main() {||| 7 startTime = (double)clock();||| 8 { suraj(); }||| 9 return 0;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const int INF = int(1e9);||| 13 const int NEG_INF = int(-1e9);||| 14 void suraj() {||| 15 long long n, m, q;||| 16 cin >> n >> m >> q;||| 17 vector<vector<long long>> free(n + 1, vector<long long>(m + 1, true));||| 18 long long stairs = 0;||| 19 for (long long i = 1; i <= n; i++) {||| 20 for (long long j = 1; j <= m; j++) {||| 21 if (i == 1) {||| 22 for (long long k = 1;; k++) {||| 23 long long nx = i + k / 2;||| 24 long long ny = j + (k + 1) / 2;||| 25 if (nx > n || ny > m) {||| 26 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (j == 1) {||| 32 for (long long k = 1;; k++) {||| 33 long long nx = i + (k + 1) / 2;||| 34 long long ny = j + k / 2;||| 35 if (nx > n || ny > m) {||| 36 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 }||| 42 }||| 43 stairs += n * m;||| 44 long long currStairs = stairs;||| 45 for (long long i = 0; i < q; i++) {||| 46 long long x, y;||| 47 cin >> x >> y;||| 48 free[x][y] = !free[x][y];||| 49 long long rd = 0;||| 50 for (rd = 1;; rd++) {||| 51 long long nx = x + (rd) / 2;||| 52 long long ny = y + (rd + 1) / 2;||| 53 if (nx > n || ny > m || !free[nx][ny]) break;||| 54 }||| 55 long long tl = 0;||| 56 for (tl = 1;; tl++) {||| 57 long long nx = x - (tl + 1) / 2;||| 58 long long ny = y - tl / 2;||| 59 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 60 }||| 61 long long dr = 0;||| 62 for (dr = 1;; dr++) {||| 63 long long nx = x + (dr + 1) / 2;||| 64 long long ny = y + dr / 2;||| 65 if (nx > n || ny > m || !free[nx][ny]) break;||| 66 }||| 67 long long lt = 0;||| 68 for (lt = 1;; lt++) {||| 69 long long nx = x - (lt) / 2;||| 70 long long ny = y - (lt + 1) / 2;||| 71 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 72 }||| 73 rd--;||| 74 tl--;||| 75 dr--;||| 76 lt--;||| 77 if (!free[x][y]) {||| 78 currStairs -= ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 79 } else {||| 80 currStairs += ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 81 }||| 82 cout << currStairs << ""\n"";||| 83 }||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 double startTime;||| 4 double gct() { return ((double)clock() - startTime) / CLOCKS_PER_SEC; }||| 5 void suraj();||| 6 int main() {||| 7 startTime = (double)clock();||| 8 { suraj(); }||| 9 return 0;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const int INF = int(1e9);||| 13 const int NEG_INF = int(-1e9);||| 14 void suraj() {||| 15 long long n, m, q;||| 16 cin >> n >> m >> q;||| 17 vector<vector<long long>> free(n + 1, vector<long long>(m + 1, true));||| 18 long long stairs = 0;||| 19 for (long long i = 1; i < n; i++) {||| 20 for (long long j = 1; j < m; j++) {||| 21 if (i == 1) {||| 22 for (long long k = 1;; k++) {||| 23 long long nx = i + k / 2;||| 24 long long ny = j + (k + 1) / 2;||| 25 if (nx > n || ny > m) {||| 26 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (j == 1) {||| 32 for (long long k = 1;; k++) {||| 33 long long nx = i + (k + 1) / 2;||| 34 long long ny = j + k / 2;||| 35 if (nx > n || ny > m) {||| 36 stairs += ((k - 1) * ((k - 1) + 1)) / 2;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 }||| 42 }||| 43 stairs += n * m;||| 44 long long currStairs = stairs;||| 45 for (long long i = 0; i < q; i++) {||| 46 long long x, y;||| 47 cin >> x >> y;||| 48 free[x][y] = !free[x][y];||| 49 long long rd = 0;||| 50 for (rd = 1;; rd++) {||| 51 long long nx = x + (rd) / 2;||| 52 long long ny = y + (rd + 1) / 2;||| 53 if (nx > n || ny > m || !free[nx][ny]) break;||| 54 }||| 55 long long tl = 0;||| 56 for (tl = 1;; tl++) {||| 57 long long nx = x - (tl + 1) / 2;||| 58 long long ny = y - tl / 2;||| 59 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 60 }||| 61 long long dr = 0;||| 62 for (dr = 1;; dr++) {||| 63 long long nx = x + (dr + 1) / 2;||| 64 long long ny = y + dr / 2;||| 65 if (nx > n || ny > m || !free[nx][ny]) break;||| 66 }||| 67 long long lt = 0;||| 68 for (lt = 1;; lt++) {||| 69 long long nx = x - (lt) / 2;||| 70 long long ny = y - (lt + 1) / 2;||| 71 if (nx < 1 || ny < 1 || !free[nx][ny]) break;||| 72 }||| 73 rd--;||| 74 tl--;||| 75 dr--;||| 76 lt--;||| 77 if (!free[x][y]) {||| 78 currStairs -= ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 79 } else {||| 80 currStairs += ((rd + tl + rd * tl) + (dr + lt + dr * lt) + 1);||| 81 }||| 82 cout << currStairs << ""\n"";||| 83 }||| 84 }||| "	19 for (long long i = 1; i <= n; i++) {
62	4	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 5;||| 4 int n, m, q, ans, f[N][N][2], g[N][N];||| 5 bool st[N][N];||| 6 int main() {||| 7 scanf(""%d %d %d"", &n, &m, &q);||| 8 for (int i = 1; i <= n; ++i) {||| 9 for (int j = 1; j <= m; ++j) {||| 10 f[i][j][0] = (j == 1) ? 0 : (f[i][j - 1][1] + 1);||| 11 f[i][j][1] = (i == 1) ? 0 : (f[i - 1][j][0] + 1);||| 12 g[i][j] = f[i][j][0] + f[i][j][1] + 1;||| 13 }||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 for (int j = 1; j <= m; ++j) {||| 17 ans += g[i][j];||| 18 }||| 19 }||| 20 for (int i = 0; i <= n; ++i) {||| 21 st[i][0] = st[i][m + 1] = 1;||| 22 }||| 23 for (int i = 0; i <= m; ++i) {||| 24 st[0][i] = st[n + 1][i] = 1;||| 25 }||| 26 while (q--) {||| 27 int x, y, sign;||| 28 scanf(""%d %d"", &x, &y);||| 29 sign = st[x][y] ? 1 : -1;||| 30 int A = min(x - 1, y - 1);||| 31 int B = min(n - x, m - y);||| 32 int p = 0, q = 0, s = 0, t = 0;||| 33 for (int i = 1; i <= A + 1; ++i) {||| 34 if (st[x - i][y - i + 1]) break;||| 35 ++p;||| 36 if (st[x - i][y - i]) break;||| 37 ++p;||| 38 }||| 39 for (int i = 1; i <= A + 1; ++i) {||| 40 if (st[x - i + 1][y - i]) break;||| 41 ++q;||| 42 if (st[x - i][y - i]) break;||| 43 ++q;||| 44 }||| 45 for (int i = 1; i <= B + 1; ++i) {||| 46 if (st[x + i - 1][y + i]) break;||| 47 ++s;||| 48 if (st[x + i][y + i]) break;||| 49 ++s;||| 50 }||| 51 for (int i = 1; i <= B + 1; ++i) {||| 52 if (st[x + i][y + i - 1]) break;||| 53 ++t;||| 54 if (st[x + i][y + i]) break;||| 55 ++t;||| 56 }||| 57 ans += (p * s + q * t + s + p + q + t + 1) * sign;||| 58 st[x][y] ^= 1;||| 59 printf(""%d\n"", ans);||| 60 }||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 5;||| 4 int n, m, q, ans, f[N][N][2], g[N][N];||| 5 bool st[N][N];||| 6 int main() {||| 7 scanf(""%d %d %d"", &n, &m, &q);||| 8 for (int i = 1; i <= n; ++i) {||| 9 for (int j = 1; j <= m; ++j) {||| 10 f[i][j][0] = (j == 1) ? 0 : (f[i][j - 1][1] + 1);||| 11 f[i][j][1] = (i == 1) ? 0 : (f[i - 1][j][0] + 1);||| 12 g[i][j] = f[i][j][0] + f[i][j][1] + 1;||| 13 }||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 for (int j = 1; j <= m; ++j) {||| 17 ans += g[i][j];||| 18 }||| 19 }||| 20 for (int i = 0; i <= n; ++i) {||| 21 st[i][0] = st[i][m + 1] = 1;||| 22 }||| 23 for (int i = 0; i <= m; ++i) {||| 24 st[0][i] = st[n + 1][i] = 1;||| 25 }||| 26 while (q--) {||| 27 int x, y, sign;||| 28 scanf(""%d %d"", &x, &y);||| 29 sign = st[x][y] ? 1 : -1;||| 30 int A = min(x - 1, y - 1);||| 31 int B = min(n - x, m - x);||| 32 int p = 0, q = 0, s = 0, t = 0;||| 33 for (int i = 1; i <= A + 1; ++i) {||| 34 if (st[x - i][y - i + 1]) break;||| 35 ++p;||| 36 if (st[x - i][y - i]) break;||| 37 ++p;||| 38 }||| 39 for (int i = 1; i <= A + 1; ++i) {||| 40 if (st[x - i + 1][y - i]) break;||| 41 ++q;||| 42 if (st[x - i][y - i]) break;||| 43 ++q;||| 44 }||| 45 for (int i = 1; i <= B + 1; ++i) {||| 46 if (st[x + i - 1][y + i]) break;||| 47 ++s;||| 48 if (st[x + i][y + i]) break;||| 49 ++s;||| 50 }||| 51 for (int i = 1; i <= B + 1; ++i) {||| 52 if (st[x + i][y + i - 1]) break;||| 53 ++t;||| 54 if (st[x + i][y + i]) break;||| 55 ++t;||| 56 }||| 57 ans += (p * s + q * t + s + p + q + t + 1) * sign;||| 58 st[x][y] ^= 1;||| 59 printf(""%d\n"", ans);||| 60 }||| 61 return 0;||| 62 }||| "	31 int B = min(n - x, m - y);
62	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rnd(time(NULL));||| 4 const long long mod = 1000000007;||| 5 const int N = 1010;||| 6 int a[N][N];||| 7 int cnt[N][N][2];||| 8 int ans = 0;||| 9 int n, m, q;||| 10 void calc(int i, int j) {||| 11 if (i <= 0 || j <= 0 || i > n || j > m) return;||| 12 ans -= cnt[i][j][0] + cnt[i][j][1];||| 13 if (a[i][j])||| 14 cnt[i][j][0] = cnt[i][j][1] = 0;||| 15 else {||| 16 cnt[i][j][0] = cnt[i - 1][j][1] + 1;||| 17 cnt[i][j][1] = cnt[i][j - 1][0] + 1;||| 18 }||| 19 ans += cnt[i][j][0] + cnt[i][j][1];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m >> q;||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int j = 1; j <= m; j++) {||| 25 calc(i, j);||| 26 ans--;||| 27 }||| 28 }||| 29 for (int it = 1; it <= q; it++) {||| 30 int x, y;||| 31 cin >> x >> y;||| 32 ans += 1 - a[x][y];||| 33 a[x][y] ^= 1;||| 34 ans -= 1 - a[x][y];||| 35 for (int i = 0; i <= min(n - x, m - y); i++) {||| 36 calc(x + i, y + i);||| 37 calc(x + i + 1, y + i);||| 38 calc(x + i, y + i + 1);||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 int tt = 1;||| 47 while (tt--) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rnd(time(NULL));||| 4 const long long mod = 1000000007;||| 5 const int N = 1010;||| 6 int a[N][N];||| 7 int cnt[N][N][2];||| 8 int ans = 0;||| 9 int n, m, q;||| 10 inline void calc(int i, int j) {||| 11 if (i <= 0 || j <= 0 || i > n || j > m) return;||| 12 ans -= cnt[i][j][0] + cnt[i][j][1];||| 13 if (a[i][j])||| 14 cnt[i][j][0] = cnt[i][j][1] = 0;||| 15 else {||| 16 cnt[i][j][0] = cnt[i - 1][j][1] + 1;||| 17 cnt[i][j][1] = cnt[i][j - 1][0] + 1;||| 18 }||| 19 ans += cnt[i][j][0] + cnt[i][j][1];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m >> q;||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int j = 1; j <= m; j++) {||| 25 calc(i, j);||| 26 ans--;||| 27 }||| 28 }||| 29 for (int it = 1; it <= q; it++) {||| 30 int x, y;||| 31 cin >> x >> y;||| 32 ans += 1 - a[x][y];||| 33 a[x][y] ^= 1;||| 34 ans -= 1 - a[x][y];||| 35 for (int i = 0; i <= min(n - x, n - y); i++) {||| 36 calc(x + i, y + i);||| 37 calc(x + i + 1, y + i);||| 38 calc(x + i, y + i + 1);||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(0);||| 46 int tt = 1;||| 47 while (tt--) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 	10 void calc(int i, int j) {
63	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 inline long long llread() {||| 11 long long x = 0, f = 0;||| 12 char ch = getchar();||| 13 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 14 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 15 return f ? -x : x;||| 16 }||| 17 int n;||| 18 char s[25][400010];||| 19 int l[25], rest[25];||| 20 vector<int> v[25][400010];||| 21 int dp[(1 << 20) + 10][2], g[(1 << 20) + 10];||| 22 signed main() {||| 23 n = read();||| 24 for (int i = (1); i <= (n); i++) scanf(""%s"", s[i] + 1);||| 25 for (int i = (1); i <= (n); i++) l[i] = strlen(s[i] + 1);||| 26 for (int i = (1); i <= (n); i++) {||| 27 int top = 0;||| 28 for (int j = (1); j <= (l[i]); j++) {||| 29 if (s[i][j] == '(')||| 30 top++;||| 31 else||| 32 top--;||| 33 if (top <= 0) v[i][-top].push_back(j);||| 34 }||| 35 rest[i] = top;||| 36 }||| 37 for (int i = (1); i <= ((1 << n) - 1); i++) dp[i][0] = dp[i][1] = -0x3f3f3f3f;||| 38 dp[0][0] = dp[0][1] = g[0] = 0;||| 39 for (int mask = (1); mask <= ((1 << n) - 1); mask++) {||| 40 for (int i = (1); i <= (n); i++) {||| 41 if (mask & (1 << (i - 1))) {||| 42 int S = mask ^ (1 << (i - 1));||| 43 if (dp[mask][0] < dp[S][0]) {||| 44 dp[mask][0] = dp[S][0];||| 45 };||| 46 if (g[S] >= 0) {||| 47 int x;||| 48 if (v[i][g[S] + 1].size() == 0)||| 49 x = l[i] + 1;||| 50 else||| 51 x = v[i][g[S] + 1][0];||| 52 int y = lower_bound(v[i][g[S]].begin(), v[i][g[S]].end(), x) -||| 53 v[i][g[S]].begin();||| 54 if (x == l[i] + 1) {||| 55 if (dp[mask][1] < dp[S][1] + y) {||| 56 dp[mask][1] = dp[S][1] + y;||| 57 };||| 58 }||| 59 if (dp[mask][0] < dp[S][1] + y) {||| 60 dp[mask][0] = dp[S][1] + y;||| 61 };||| 62 }||| 63 g[mask] = g[S] + rest[i];||| 64 }||| 65 }||| 66 }||| 67 printf(""%d\n"", max(dp[(1 << n) - 1][0], dp[(1 << n) - 1][1]));||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 inline long long llread() {||| 11 long long x = 0, f = 0;||| 12 char ch = getchar();||| 13 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 14 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 15 return f ? -x : x;||| 16 }||| 17 int n;||| 18 char s[25][400010], l[25], rest[25];||| 19 vector<int> v[25][400010];||| 20 int dp[(1 << 20) + 10][2], g[(1 << 20) + 10];||| 21 signed main() {||| 22 n = read();||| 23 for (int i = (1); i <= (n); i++) scanf(""%s"", s[i] + 1);||| 24 for (int i = (1); i <= (n); i++) l[i] = strlen(s[i] + 1);||| 25 for (int i = (1); i <= (n); i++) {||| 26 int top = 0;||| 27 for (int j = (1); j <= (l[i]); j++) {||| 28 if (s[i][j] == '(')||| 29 top++;||| 30 else||| 31 top--;||| 32 if (top <= 0) v[i][-top].push_back(j);||| 33 }||| 34 rest[i] = top;||| 35 }||| 36 for (int i = (1); i <= ((1 << n) - 1); i++) dp[i][0] = dp[i][1] = -0x3f3f3f3f;||| 37 dp[0][0] = dp[0][1] = g[0] = 0;||| 38 for (int mask = (1); mask <= ((1 << n) - 1); mask++) {||| 39 for (int i = (1); i <= (n); i++) {||| 40 if (mask & (1 << (i - 1))) {||| 41 int S = mask ^ (1 << (i - 1));||| 42 if (dp[mask][0] < dp[S][0]) {||| 43 dp[mask][0] = dp[S][0];||| 44 };||| 45 if (g[S] >= 0) {||| 46 int x;||| 47 if (v[i][g[S] + 1].size() == 0)||| 48 x = l[i] + 1;||| 49 else||| 50 x = v[i][g[S] + 1][0];||| 51 int y = lower_bound(v[i][g[S]].begin(), v[i][g[S]].end(), x) -||| 52 v[i][g[S]].begin();||| 53 if (x == l[i] + 1) {||| 54 if (dp[mask][1] < dp[S][1] + y) {||| 55 dp[mask][1] = dp[S][1] + y;||| 56 };||| 57 }||| 58 if (dp[mask][0] < dp[S][1] + y) {||| 59 dp[mask][0] = dp[S][1] + y;||| 60 };||| 61 }||| 62 g[mask] = g[S] + rest[i];||| 63 }||| 64 }||| 65 }||| 66 printf(""%d\n"", max(dp[(1 << n) - 1][0], dp[(1 << n) - 1][1]));||| 67 return 0;||| 68 }||| "	18 char s[25][400010];
63	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mx = 4e5 + 10;||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 vector<string> a(n);||| 8 for (string& x : a) cin >> x;||| 9 vector<int> bal(n), mn(n);||| 10 vector<vector<int>> occ(n), nocc(n);||| 11 for (int i = 0; i < n; i++) {||| 12 int b = 0, mn0 = 1e9;||| 13 occ[i].resize(mx * 2);||| 14 nocc[i].resize(mx * 2);||| 15 int mini = 1e9;||| 16 for (char x : a[i]) {||| 17 if (x == ')')||| 18 b--;||| 19 else||| 20 b++;||| 21 mini = min(b, mini);||| 22 mn0 = min(mn0, b);||| 23 occ[i][b + mx]++;||| 24 if (b == mini) nocc[i][b + mx]++;||| 25 }||| 26 bal[i] = b, mn[i] = mn0;||| 27 }||| 28 vector<vector<int>> answer((1 << n), vector<int>(2, -1e9));||| 29 answer[0] = {0, 0};||| 30 vector<int> sum(1 << n);||| 31 for (int mask = 0; mask < (1 << n); mask++) {||| 32 for (int i = 0; i < n; i++) {||| 33 if ((1 << i) & mask) {||| 34 sum[mask] = sum[mask ^ (1 << i)] + bal[i];||| 35 break;||| 36 }||| 37 }||| 38 for (int i = 0; i < n; i++) {||| 39 if ((1 << i) & mask) {||| 40 int nmask = (1 << i) ^ mask;||| 41 if (sum[nmask] + mn[i] < 0) {||| 42 answer[mask][1] =||| 43 max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]);||| 44 } else {||| 45 answer[mask][0] =||| 46 max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]);||| 47 }||| 48 }||| 49 }||| 50 }||| 51 int ans = 0;||| 52 for (auto x : answer) ans = max({x[0], x[1], ans});||| 53 cout << ans;||| 54 return 0;||| 55 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mx = 4e5 + 10;||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 vector<string> a(n);||| 8 for (string& x : a) cin >> x;||| 9 vector<int> bal(n), mn(n);||| 10 vector<vector<int>> occ(n), nocc(n);||| 11 for (int i = 0; i < n; i++) {||| 12 int b = 0, mn0 = 1e9;||| 13 occ[i].resize(mx * 2);||| 14 nocc[i].resize(mx * 2);||| 15 int mini = 1e9;||| 16 for (char x : a[i]) {||| 17 if (x == ')')||| 18 b--;||| 19 else||| 20 b++;||| 21 mini = min(b, mini);||| 22 mn0 = min(mn0, b);||| 23 occ[i][b + mx]++;||| 24 if (b == mini) nocc[i][b + mx]++;||| 25 }||| 26 bal[i] = b, mn[i] = mn0;||| 27 }||| 28 vector<vector<int>> answer((1 << n), vector<int>(2, -1e9));||| 29 answer[0] = {0, 0};||| 30 vector<int> sum(1 << n);||| 31 for (int mask = 0; mask < (1 << n); mask++) {||| 32 for (int i = 0; i < n; i++) {||| 33 if ((1 << i) & mask) {||| 34 sum[mask] = sum[mask ^ (1 << i)] + bal[i];||| 35 break;||| 36 }||| 37 }||| 38 for (int i = 0; i < n; i++) {||| 39 if ((1 << i) & mask) {||| 40 int nmask = (1 << i) ^ mask;||| 41 if (sum[nmask] + mn[i] < 0) {||| 42 answer[nmask][1] =||| 43 max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]);||| 44 } else {||| 45 answer[mask][0] =||| 46 max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]);||| 47 }||| 48 }||| 49 }||| 50 }||| 51 int ans = 0;||| 52 for (auto x : answer) ans = max({x[0], x[1], ans});||| 53 cout << ans;||| 54 return 0;||| 55 }||| 	42 answer[mask][1] =
63	7	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 22;||| 4 const long long oo = 1e18 + 7, mod = 1e9 + 7;||| 5 string s[N];||| 6 long long n, k;||| 7 long long num[N][400005];||| 8 long long ans[(1LL << N)][2];||| 9 long long pref[(1LL << N)], mn[N];||| 10 set<pair<long long, long long> > second;||| 11 set<long long> nums[400005];||| 12 void process() {||| 13 cin >> n;||| 14 for (long long i = 1; i <= n; i++) {||| 15 cin >> s[i];||| 16 s[i] = '*' + s[i];||| 17 second.clear();||| 18 for (long long j = 0; j <= 400000; j++) nums[j].clear();||| 19 long long prefix = 0;||| 20 mn[i] = 0;||| 21 for (long long j = 1; j < s[i].length(); j++) {||| 22 prefix += (s[i][j] == '(' ? 1 : -1);||| 23 mn[i] = min(mn[i], prefix);||| 24 if (prefix <= 0) {||| 25 second.insert({j, -prefix});||| 26 nums[-prefix].insert(j);||| 27 }||| 28 }||| 29 pref[(1LL << (i - 1))] = prefix;||| 30 for (long long j = 400000; j >= 0; j--) {||| 31 if (!nums[j].size()) continue;||| 32 num[i][j] = nums[j].size();||| 33 long long temp = (*nums[j].begin());||| 34 set<pair<long long, long long> >::iterator it = second.find({temp, j}),||| 35 it2 = it;||| 36 for (; it2 != second.end(); it2++)||| 37 nums[(*it2).second].erase((*it2).first);||| 38 second.erase(it, second.end());||| 39 }||| 40 }||| 41 ans[0][1] = 0, ans[0][0] = -oo;||| 42 for (long long i = 1; i < (1LL << n); i++) {||| 43 ans[i][0] = ans[i][1] = -oo;||| 44 if (__builtin_popcountll(i) >= 2) {||| 45 for (long long j = 0; j < n; j++) {||| 46 if (i & (1LL << j)) {||| 47 pref[i] = (pref[i - (1LL << j)] + pref[(1LL << j)]);||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 }||| 53 for (long long i = 1; i < (1LL << n); i++) {||| 54 ans[i][0] = ans[i][1] = -oo;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (!(i & (1LL << j))) continue;||| 57 if (pref[i - (1LL << j)] + mn[j + 1] >= 0) {||| 58 ans[i][1] = max(ans[i][1], ans[i - (1LL << j)][1] +||| 59 num[j + 1][pref[i - (1LL << j)]]);||| 60 } else||| 61 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][1] +||| 62 num[j + 1][pref[i - (1LL << j)]]);||| 63 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][0]);||| 64 }||| 65 }||| 66 cout << max(ans[(1LL << n) - 1][0], ans[(1LL << n) - 1][1]);||| 67 }||| 68 signed main() {||| 69 ios_base::sync_with_stdio(0);||| 70 process();||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 22;||| 4 const long long oo = 1e18 + 7, mod = 1e9 + 7;||| 5 string s[N];||| 6 long long n, k;||| 7 long long num[N][400005];||| 8 long long ans[(1LL << N)][2];||| 9 long long pref[(1LL << N)], mn[N];||| 10 set<pair<long long, long long> > second;||| 11 set<long long> nums[400005];||| 12 void process() {||| 13 cin >> n;||| 14 for (long long i = 1; i <= n; i++) {||| 15 cin >> s[i];||| 16 s[i] = '*' + s[i];||| 17 second.clear();||| 18 for (long long j = 0; j <= 400000; j++) nums[j].clear();||| 19 long long prefix = 0;||| 20 mn[i] = 0;||| 21 for (long long j = 1; j < s[i].length(); j++) {||| 22 prefix += (s[i][j] == '(' ? 1 : -1);||| 23 mn[i] = min(mn[i], prefix);||| 24 if (prefix <= 0) {||| 25 second.insert({j, -prefix});||| 26 nums[-prefix].insert(j);||| 27 }||| 28 }||| 29 pref[(1LL << (i - 1))] = prefix;||| 30 for (long long j = 400000; j >= 0; j--) {||| 31 if (!nums[j].size()) continue;||| 32 num[i][j] = nums[j].size();||| 33 long long temp = (*nums[j].begin());||| 34 set<pair<long long, long long> >::iterator it = second.find({j, temp}),||| 35 it2 = it;||| 36 for (; it2 != second.end(); it2++)||| 37 nums[(*it2).second].erase((*it2).first);||| 38 second.erase(it, second.end());||| 39 }||| 40 }||| 41 ans[0][1] = 0, ans[0][0] = -oo;||| 42 for (long long i = 1; i < (1LL << n); i++) {||| 43 ans[i][0] = ans[i][1] = -oo;||| 44 if (__builtin_popcountll(i) >= 2) {||| 45 for (long long j = 0; j < n; j++) {||| 46 if (i & (1LL << j)) {||| 47 pref[i] = (pref[i - (1LL << j)] + pref[(1LL << j)]);||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 }||| 53 for (long long i = 1; i < (1LL << n); i++) {||| 54 ans[i][0] = ans[i][1] = -oo;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (!(i & (1LL << j))) continue;||| 57 if (pref[i - (1LL << j)] + mn[j + 1] >= 0) {||| 58 ans[i][1] = max(ans[i][1], ans[i - (1LL << j)][1] +||| 59 num[j + 1][pref[i - (1LL << j)]]);||| 60 } else||| 61 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][1] +||| 62 num[j + 1][pref[i - (1LL << j)]]);||| 63 ans[i][0] = max(ans[i][0], ans[i - (1LL << j)][0]);||| 64 }||| 65 }||| 66 cout << max(ans[(1LL << n) - 1][0], ans[(1LL << n) - 1][1]);||| 67 }||| 68 signed main() {||| 69 ios_base::sync_with_stdio(0);||| 70 process();||| 71 }||| 	34 set<pair<long long, long long> >::iterator it = second.find({temp, j}),
65	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 int n, a[maxn], b[maxn];||| 5 char s[maxn];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 }||| 11 scanf(""%s"", s + 1);||| 12 sort(a + 1, a + n + 1);||| 13 int l = 1, r = n;||| 14 for (int i = n; i; i--) {||| 15 if (s[i] == s[i - 1])||| 16 b[i] = l++;||| 17 else||| 18 b[i] = r--;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 printf(""%d %c\n"", a[b[i]],||| 22 (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 int n, a[maxn], b[maxn];||| 5 char s[maxn];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 }||| 11 scanf(""%s"", s + 1);||| 12 sort(a + 1, a + n + 1);||| 13 int l = 1, r = n;||| 14 for (int i = n; i; i--) {||| 15 if (s[i] == s[i - 1])||| 16 b[i] = l++;||| 17 else||| 18 b[i] = r--;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 printf(""%d %c\n"", a[b[i]],||| 22 (b[i] ^ 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');||| 23 }||| 24 return 0;||| 25 }||| "	22 (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L');
65	28	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 for (long long i = 0; i < n; i++) cin >> a[i];||| 8 sort(a, a + n);||| 9 string s;||| 10 cin >> s;||| 11 long long cnt = 0;||| 12 for (long long i = 0; i < n - 1; i++) {||| 13 if (s[i] != s[i + 1]) cnt++;||| 14 }||| 15 char dir[n];||| 16 dir[n - 1 - cnt] = s[0];||| 17 for (long long i = n - 2 - cnt; i >= 0; i--) {||| 18 if (dir[i + 1] == 'L')||| 19 dir[i] = 'R';||| 20 else||| 21 dir[i] = 'L';||| 22 }||| 23 for (long long i = n - cnt; i < n; i++) {||| 24 if (dir[i - 1] == 'L')||| 25 dir[i] = 'R';||| 26 else||| 27 dir[i] = 'L';||| 28 }||| 29 long long l = n - 1 - cnt, r = n - 1 - cnt;||| 30 cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n';||| 31 for (long long i = 1; i < n; i++) {||| 32 if (s[i] == s[i - 1]) {||| 33 l--;||| 34 cout << a[l] << ' ' << dir[l] << '\n';||| 35 } else {||| 36 r++;||| 37 cout << a[r] << ' ' << dir[r] << '\n';||| 38 }||| 39 }||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 for (long long i = 0; i < n; i++) cin >> a[i];||| 8 sort(a, a + n + 1);||| 9 string s;||| 10 cin >> s;||| 11 long long cnt = 0;||| 12 for (long long i = 0; i < n - 1; i++) {||| 13 if (s[i] != s[i + 1]) cnt++;||| 14 }||| 15 char dir[n];||| 16 dir[n - 1 - cnt] = s[0];||| 17 for (long long i = n - 2 - cnt; i >= 0; i--) {||| 18 if (dir[i + 1] == 'L')||| 19 dir[i] = 'R';||| 20 else||| 21 dir[i] = 'L';||| 22 }||| 23 for (long long i = n - cnt; i < n; i++) {||| 24 if (dir[i - 1] == 'L')||| 25 dir[i] = 'R';||| 26 else||| 27 dir[i] = 'L';||| 28 }||| 29 long long l = n - 1 - cnt, r = n - 1 - cnt;||| 30 cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n';||| 31 for (long long i = 1; i < n; i++) {||| 32 if (s[i] == s[i - 1]) {||| 33 l--;||| 34 cout << a[l] << ' ' << dir[l] << '\n';||| 35 } else {||| 36 r++;||| 37 cout << a[r] << ' ' << dir[r] << '\n';||| 38 }||| 39 }||| 40 }||| 	8 sort(a, a + n);
65	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int n, a[N], b[N];||| 5 char s[N];||| 6 void sol(int l, int r, int d) {||| 7 if (d == 1) {||| 8 b[d] = a[l];||| 9 return;||| 10 }||| 11 if (s[d - 1] == s[d]) {||| 12 b[d] = a[l];||| 13 sol(l + 1, r, d - 1);||| 14 } else {||| 15 b[d] = a[r];||| 16 sol(l, r - 1, d - 1);||| 17 }||| 18 }||| 19 int main() {||| 20 scanf(""%d"", &n);||| 21 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 22 scanf(""%s"", s + 1);||| 23 sort(a + 1, a + n + 1);||| 24 if (s[n] == 'L')||| 25 for (int i = n; i >= 1; i -= 2) a[i] = -a[i];||| 26 else||| 27 for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i];||| 28 sol(1, n, n);||| 29 for (int i = 1; i <= n; i++) {||| 30 if (b[i] > 0)||| 31 printf(""%d R\n"", b[i]);||| 32 else||| 33 printf(""%d L\n"", -b[i]);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int n, a[N], b[N];||| 5 char s[N];||| 6 void sol(int l, int r, int d) {||| 7 if (d == 1) {||| 8 b[d] = a[l];||| 9 return;||| 10 }||| 11 if (s[d - 1] == s[n]) {||| 12 b[d] = a[l];||| 13 sol(l + 1, r, d - 1);||| 14 } else {||| 15 b[d] = a[r];||| 16 sol(l, r - 1, d - 1);||| 17 }||| 18 }||| 19 int main() {||| 20 scanf(""%d"", &n);||| 21 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 22 scanf(""%s"", s + 1);||| 23 sort(a + 1, a + n + 1);||| 24 if (s[n] == 'L')||| 25 for (int i = n; i >= 1; i -= 2) a[i] = -a[i];||| 26 else||| 27 for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i];||| 28 sol(1, n, n);||| 29 for (int i = 1; i <= n; i++) {||| 30 if (b[i] > 0)||| 31 printf(""%d R\n"", b[i]);||| 32 else||| 33 printf(""%d L\n"", -b[i]);||| 34 }||| 35 return 0;||| 36 }||| "	11 if (s[d - 1] == s[d]) {
65	91	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[200005];||| 4 string str;||| 5 pair<int, int> ans[200005];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 9 sort(a, a + n);||| 10 cin >> str;||| 11 int now = n - 1, l = 0, r = n - 1;||| 12 while (now >= 0) {||| 13 if (now == 0) {||| 14 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 15 break;||| 16 }||| 17 if (str[now] != str[now - 1]) {||| 18 ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 19 now--;||| 20 r--;||| 21 } else {||| 22 if (now == 1 || str[now] == str[now - 2]) {||| 23 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 24 ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0);||| 25 now -= 2;||| 26 r -= 2;||| 27 } else if ((r - l + 1) & 1) {||| 28 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 29 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 30 now -= 2;||| 31 r--;||| 32 l++;||| 33 } else {||| 34 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 35 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0);||| 36 now -= 2;||| 37 r--;||| 38 l++;||| 39 }||| 40 }||| 41 }||| 42 for (int i = 0; i < n; i++)||| 43 printf(""%d %c\n"", ans[i].first, ans[i].second ? 'R' : 'L');||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[200005];||| 4 string str;||| 5 pair<int, int> ans[200005];||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 9 sort(a, a + n);||| 10 cin >> str;||| 11 int now = n - 1, l = 0, r = n - 1;||| 12 while (now >= 0) {||| 13 if (now == 0) {||| 14 ans[now] = pair<int, int>(a[now], str[l] == 'L' ? 0 : 1);||| 15 break;||| 16 }||| 17 if (str[now] != str[now - 1]) {||| 18 ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 19 now--;||| 20 r--;||| 21 } else {||| 22 if (now == 1 || str[now] == str[now - 2]) {||| 23 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 24 ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0);||| 25 now -= 2;||| 26 r -= 2;||| 27 } else if ((r - l + 1) & 1) {||| 28 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 29 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);||| 30 now -= 2;||| 31 r--;||| 32 l++;||| 33 } else {||| 34 ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1);||| 35 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0);||| 36 now -= 2;||| 37 r--;||| 38 l++;||| 39 }||| 40 }||| 41 }||| 42 for (int i = 0; i < n; i++)||| 43 printf(""%d %c\n"", ans[i].first, ans[i].second ? 'R' : 'L');||| 44 return 0;||| 45 }||| "	14 ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1);
79	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 vector<pair<int, int> > g[maxn << 2];||| 5 int id[maxn << 2];||| 6 int le[maxn << 2];||| 7 int be[maxn * 4];||| 8 void build(int rt, int l, int r) {||| 9 if (l == r) {||| 10 id[l] = rt;||| 11 le[rt] = 1;||| 12 be[rt] = l;||| 13 return;||| 14 }||| 15 build(rt << 1, l, ((l + r) >> 1));||| 16 build(rt << 1 | 1, ((l + r) >> 1) + 1, r);||| 17 g[rt].push_back(pair<int, int>(rt << 1, 0));||| 18 g[rt].push_back(pair<int, int>(rt << 1 | 1, 0));||| 19 return;||| 20 }||| 21 void add(int rt, int l, int r, int L, int R, int u) {||| 22 if (L <= l && r <= R) {||| 23 g[u].push_back(pair<int, int>(rt, 1));||| 24 return;||| 25 }||| 26 if (L <= ((l + r) >> 1)) add(rt << 1, l, ((l + r) >> 1), L, R, u);||| 27 if (R > ((l + r) >> 1)) add(rt << 1 | 1, ((l + r) >> 1) + 1, r, L, R, u);||| 28 return;||| 29 }||| 30 int n;||| 31 int a[maxn], b[maxn];||| 32 int dis[maxn << 4], pre[maxn << 4];||| 33 int q[maxn * 40], head = 0, tail = 0;||| 34 int vis[maxn << 4];||| 35 const int inf = 0x3f3f3f3f;||| 36 int main() {||| 37 scanf(""%d"", &n);||| 38 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &a[i]);||| 39 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &b[i]);||| 40 build(1, 0, n);||| 41 int tot = 0;||| 42 for (int i = 0; i <= n; ++i) tot = max(tot, id[i]);||| 43 for (int i = 1; i <= n; ++i) {||| 44 int l = i - a[i], r = i - 1;||| 45 if (l <= r) add(1, 0, n, l, r, tot + i);||| 46 g[id[i]].push_back(pair<int, int>(tot + i + b[i], 0));||| 47 be[tot + i] = i;||| 48 }||| 49 memset(dis, 0x3f, sizeof dis);||| 50 head = tail = maxn * 20;||| 51 q[tail++] = id[n];||| 52 dis[id[n]] = 0;||| 53 while (head < tail) {||| 54 int u = q[head++];||| 55 if (vis[u]) continue;||| 56 vis[u] = 1;||| 57 for (pair<int, int> p : g[u]) {||| 58 int v, w;||| 59 tie(v, w) = p;||| 60 if (dis[v] > dis[u] + w) {||| 61 dis[v] = dis[u] + w;||| 62 if (w)||| 63 q[tail++] = v;||| 64 else||| 65 q[--head] = v;||| 66 pre[v] = u;||| 67 }||| 68 }||| 69 }||| 70 if (dis[id[0]] == inf) {||| 71 puts(""-1"");||| 72 } else {||| 73 vector<int> ans;||| 74 int cur = id[0];||| 75 ans.push_back(0);||| 76 while (cur != id[n]) {||| 77 int nxt = pre[cur];||| 78 if (le[nxt]) {||| 79 ans.push_back(be[nxt]);||| 80 }||| 81 cur = nxt;||| 82 }||| 83 ans.pop_back();||| 84 reverse(ans.begin(), ans.end());||| 85 cout << ans.size() << endl;||| 86 for (int x : ans) printf(""%d "", x);||| 87 }||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 5;||| 4 vector<pair<int, int> > g[maxn << 2];||| 5 int id[maxn << 2];||| 6 int le[maxn << 2];||| 7 int be[maxn * 4];||| 8 void build(int rt, int l, int r) {||| 9 if (l == r) {||| 10 id[l] = rt;||| 11 le[rt] = 1;||| 12 be[rt] = l;||| 13 return;||| 14 }||| 15 build(rt << 1, l, ((l + r) >> 1));||| 16 build(rt << 1 | 1, ((l + r) >> 1) + 1, r);||| 17 g[rt].push_back(pair<int, int>(rt << 1, 0));||| 18 g[rt].push_back(pair<int, int>(rt << 1 | 1, 0));||| 19 return;||| 20 }||| 21 void add(int rt, int l, int r, int L, int R, int u) {||| 22 if (L <= l && r <= R) {||| 23 g[u].push_back(pair<int, int>(rt, 1));||| 24 return;||| 25 }||| 26 if (L <= ((l + r) >> 1)) add(rt << 1, l, ((l + r) >> 1), L, R, u);||| 27 if (R > ((l + r) >> 1)) add(rt << 1 | 1, ((l + r) >> 1) + 1, r, L, R, u);||| 28 return;||| 29 }||| 30 int n;||| 31 int a[maxn], b[maxn];||| 32 int dis[maxn << 4], pre[maxn << 4];||| 33 int q[maxn * 20], head = 0, tail = 0;||| 34 int vis[maxn << 4];||| 35 const int inf = 0x3f3f3f3f;||| 36 int main() {||| 37 scanf(""%d"", &n);||| 38 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &a[i]);||| 39 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &b[i]);||| 40 build(1, 0, n);||| 41 int tot = 0;||| 42 for (int i = 0; i <= n; ++i) tot = max(tot, id[i]);||| 43 for (int i = 1; i <= n; ++i) {||| 44 int l = i - a[i], r = i - 1;||| 45 if (l <= r) add(1, 0, n, l, r, tot + i);||| 46 g[id[i]].push_back(pair<int, int>(tot + i + b[i], 0));||| 47 be[tot + i] = i;||| 48 }||| 49 memset(dis, 0x3f, sizeof dis);||| 50 head = tail = maxn * 20;||| 51 q[tail++] = id[n];||| 52 dis[id[n]] = 0;||| 53 while (head < tail) {||| 54 int u = q[head++];||| 55 if (vis[u]) continue;||| 56 vis[u] = 1;||| 57 for (pair<int, int> p : g[u]) {||| 58 int v, w;||| 59 tie(v, w) = p;||| 60 if (dis[v] > dis[u] + w) {||| 61 dis[v] = dis[u] + w;||| 62 if (w)||| 63 q[tail++] = v;||| 64 else||| 65 q[--head] = v;||| 66 pre[v] = u;||| 67 }||| 68 }||| 69 }||| 70 if (dis[id[0]] == inf) {||| 71 puts(""-1"");||| 72 } else {||| 73 vector<int> ans;||| 74 int cur = id[0];||| 75 ans.push_back(0);||| 76 while (cur != id[n]) {||| 77 int nxt = pre[cur];||| 78 if (le[nxt]) {||| 79 ans.push_back(be[nxt]);||| 80 }||| 81 cur = nxt;||| 82 }||| 83 ans.pop_back();||| 84 reverse(ans.begin(), ans.end());||| 85 cout << ans.size() << endl;||| 86 for (int x : ans) printf(""%d "", x);||| 87 }||| 88 return 0;||| 89 }||| "	3 const int maxn = 5e5 + 5;
79	55	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 const int N = 3e5 + 5;||| 5 int n, a[N], b[N], c[N], t[N];||| 6 pair<int, int> par[N];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) cin >> a[i];||| 10 for (int i = 1; i <= n; i++) cin >> b[i];||| 11 queue<int> Q;||| 12 set<int> S;||| 13 for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9;||| 14 Q.push(n);||| 15 t[n] = 1;||| 16 int inx = -1;||| 17 while (!Q.empty()) {||| 18 int x = Q.front();||| 19 Q.pop();||| 20 int y = x - a[x];||| 21 if (a[x] >= x) {||| 22 inx = x;||| 23 break;||| 24 }||| 25 while (!S.empty()) {||| 26 auto it = S.lower_bound(y);||| 27 if (it == S.end() || *it > x) break;||| 28 if (t[*it + b[*it]] >= t[x] + 1) {||| 29 t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1);||| 30 par[*it + b[*it]] = make_pair(*it, x);||| 31 Q.push(*it + b[*it]);||| 32 }||| 33 S.erase(it);||| 34 }||| 35 }||| 36 cout << (t[inx] ? t[inx] : -1) << '\n';||| 37 if (inx != -1) {||| 38 vector<int> v;||| 39 v.push_back(0);||| 40 while (par[inx].first) {||| 41 v.push_back(par[inx].first);||| 42 inx = par[inx].second;||| 43 }||| 44 reverse(v.begin(), v.end());||| 45 for (auto it : v) cout << it << ' ';||| 46 }||| 47 }||| 48 int main() {||| 49 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 50 int test_cases = 1;||| 51 while (test_cases--) solve();||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 const int N = 3e5 + 5;||| 5 int n, a[N], b[N], c[N], t[N];||| 6 pair<int, int> par[N];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) cin >> a[i];||| 10 for (int i = 1; i <= n; i++) cin >> b[i];||| 11 queue<int> Q;||| 12 set<int> S;||| 13 for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9;||| 14 Q.push(n);||| 15 t[n] = 1;||| 16 int inx = -1;||| 17 while (!Q.empty()) {||| 18 int x = Q.front();||| 19 Q.pop();||| 20 int y = x - a[x];||| 21 if (a[x] >= x) {||| 22 inx = x;||| 23 }||| 24 while (!S.empty()) {||| 25 auto it = S.lower_bound(y);||| 26 if (it == S.end() || *it > x) break;||| 27 if (t[*it + b[*it]] >= t[x] + 1) {||| 28 t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1);||| 29 par[*it + b[*it]] = make_pair(*it, x);||| 30 Q.push(*it + b[*it]);||| 31 }||| 32 S.erase(it);||| 33 }||| 34 }||| 35 cout << (t[inx] ? t[inx] : -1) << '\n';||| 36 if (inx != -1) {||| 37 vector<int> v;||| 38 v.push_back(0);||| 39 while (par[inx].first) {||| 40 v.push_back(par[inx].first);||| 41 inx = par[inx].second;||| 42 }||| 43 reverse(v.begin(), v.end());||| 44 for (auto it : v) cout << it << ' ';||| 45 }||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 49 int test_cases = 1;||| 50 while (test_cases--) solve();||| 51 return 0;||| 52 }||| 	23 break;
80	40	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 int n, m;||| 8 int A[1000005];||| 9 int B[1000005];||| 10 int T[1000005];||| 11 int S[1000005];||| 12 ll inverse(int s, int e) {||| 13 if (s == e) {||| 14 T[s] = A[s];||| 15 return 0;||| 16 }||| 17 int m = (s + e) / 2;||| 18 ll ans = inverse(s, m) + inverse(m + 1, e);||| 19 for (int i = s; i <= e; i++) {||| 20 S[i] = T[i];||| 21 }||| 22 int i = s, j = m + 1, k = s;||| 23 while (k <= e) {||| 24 if (j > e || (i <= m && S[i] <= S[j]))||| 25 T[k++] = S[i++];||| 26 else||| 27 T[k++] = S[j++], ans += m - i + 1;||| 28 }||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 for (int t = 1; t <= T; t++) {||| 38 cin >> n >> m;||| 39 for (int i = 1; i <= n; i++) cin >> A[i];||| 40 for (int i = 1; i <= m; i++) cin >> B[i];||| 41 sort(B + 1, B + m + 1);||| 42 priority_queue<int> pq;||| 43 ll mx = inverse(1, n);||| 44 for (int i = 1; i <= n; i++) {||| 45 int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 46 int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 47 pq.push(x);||| 48 pq.push(y);||| 49 pq.pop();||| 50 mx += x;||| 51 }||| 52 while (!pq.empty()) {||| 53 mx -= pq.top();||| 54 pq.pop();||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 int n, m;||| 8 int A[1000005];||| 9 int B[1000005];||| 10 int T[1000005];||| 11 int S[1000005];||| 12 int inverse(int s, int e) {||| 13 if (s == e) {||| 14 T[s] = A[s];||| 15 return 0;||| 16 }||| 17 int m = (s + e) / 2;||| 18 ll ans = inverse(s, m) + inverse(m + 1, e);||| 19 for (int i = s; i <= e; i++) {||| 20 S[i] = T[i];||| 21 }||| 22 int i = s, j = m + 1, k = s;||| 23 while (k <= e) {||| 24 if (j > e || (i <= m && S[i] <= S[j]))||| 25 T[k++] = S[i++];||| 26 else||| 27 T[k++] = S[j++], ans += m - i + 1;||| 28 }||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 for (int t = 1; t <= T; t++) {||| 38 cin >> n >> m;||| 39 for (int i = 1; i <= n; i++) cin >> A[i];||| 40 for (int i = 1; i <= m; i++) cin >> B[i];||| 41 sort(B + 1, B + m + 1);||| 42 priority_queue<int> pq;||| 43 ll mx = inverse(1, n);||| 44 for (int i = 1; i <= n; i++) {||| 45 int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 46 int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 47 pq.push(x);||| 48 pq.push(y);||| 49 pq.pop();||| 50 mx += x;||| 51 }||| 52 while (!pq.empty()) {||| 53 mx -= pq.top();||| 54 pq.pop();||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	12 ll inverse(int s, int e) {
81	20	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 int x, y;||| 5 bool operator<(const node &a) const {||| 6 if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y);||| 7 return min(x, y) < min(a.x, a.y);||| 8 }||| 9 };||| 10 node st[500000 + 1];||| 11 int n, d, cnt;||| 12 int main() {||| 13 cin >> n >> d;||| 14 for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y;||| 15 sort(st + 1, st + n + 1);||| 16 for (int i = 1; i <= n; ++i)||| 17 if (st[i].x >= d) cnt++, d = max(d, st[i].y);||| 18 cout << cnt << endl;||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 int x, y;||| 5 bool operator<(const node &a) const {||| 6 if (min(x, y) != min(a.x, a.y)) return min(x, y) < min(a.x, a.y);||| 7 return max(x, y) < max(a.x, a.y);||| 8 }||| 9 };||| 10 node st[500000 + 1];||| 11 int n, d, cnt;||| 12 int main() {||| 13 cin >> n >> d;||| 14 for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y;||| 15 sort(st + 1, st + n + 1);||| 16 for (int i = 1; i <= n; ++i)||| 17 if (st[i].x >= d) cnt++, d = max(d, st[i].y);||| 18 cout << cnt << endl;||| 19 return 0;||| 20 }||| 	6 if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y);
67	57	"1 #include <bits/stdc++.h>||| 2 int a[200005], b[200005];||| 3 using namespace std;||| 4 inline double cal_possible(int n, int learned_num) {||| 5 double c2 = 1.5 * static_cast<double>(n - learned_num) / n *||| 6 (n - learned_num - 1) / (n - 1) * (learned_num) / (n - 2);||| 7 double c3 = static_cast<double>(n - learned_num) / n * (n - learned_num - 1) /||| 8 (n - 1) * (n - learned_num - 2) / (n - 2);||| 9 return 1 - c2 - c3;||| 10 }||| 11 int main() {||| 12 ios::sync_with_stdio(false);||| 13 if (0) freopen(""data.in"", ""r"", stdin);||| 14 int n;||| 15 double p;||| 16 cin >> n >> p;||| 17 int l = -1, r = n - 1;||| 18 while (l < r - 1) {||| 19 int mid = (l + r) / 2;||| 20 double ans = cal_possible(n, mid);||| 21 if (0) cout << ""when "" << mid << "" "" << ans << endl;||| 22 if (cal_possible(n, mid) >= p) {||| 23 r = mid;||| 24 } else {||| 25 l = mid;||| 26 }||| 27 }||| 28 cout << r << endl;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 int a[200005], b[200005];||| 3 using namespace std;||| 4 inline double cal_possible(int n, int learned_num) {||| 5 double c2 = 1.5 * static_cast<double>(n - learned_num) / n *||| 6 (n - learned_num - 1) / (n - 1) * (learned_num) / (n - 2);||| 7 double c3 = static_cast<double>(n - learned_num) / n * (n - learned_num - 1) /||| 8 (n - 1) * (n - learned_num - 2) / (n - 2);||| 9 return 1 - c2 - c3;||| 10 }||| 11 int main() {||| 12 ios::sync_with_stdio(false);||| 13 if (0) freopen(""data.in"", ""r"", stdin);||| 14 int n;||| 15 double p;||| 16 cin >> n >> p;||| 17 int l = 0, r = n - 1;||| 18 while (l < r - 1) {||| 19 int mid = (l + r) / 2;||| 20 double ans = cal_possible(n, mid);||| 21 if (0) cout << ""when "" << mid << "" "" << ans << endl;||| 22 if (cal_possible(n, mid) >= p) {||| 23 r = mid;||| 24 } else {||| 25 l = mid;||| 26 }||| 27 }||| 28 cout << r << endl;||| 29 }||| "	17 int l = -1, r = n - 1;
67	42	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-7;||| 4 void solve() {||| 5 int64_t n;||| 6 long double p;||| 7 cin >> n >> p;||| 8 for (long double i = 0; i < n; i += 1) {||| 9 long double nn = n;||| 10 long double cube = (nn * (nn - 1) * (nn - 2));||| 11 long double chance_to_0 =||| 12 max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube);||| 13 long double chance_to_1 =||| 14 max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube);||| 15 long double chance_to_2 =||| 16 max((long double)0, i * (i - 1) * (nn - i) * 3 / cube);||| 17 long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0;||| 18 if (chance_to_3 + chance_to_2 + chance_to_1 / 2 + eps > p) {||| 19 cout << i << endl;||| 20 return;||| 21 }||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 int t = 1;||| 28 while (t > 0) {||| 29 t--;||| 30 solve();||| 31 }||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-7;||| 4 void solve() {||| 5 int64_t n;||| 6 long double p;||| 7 cin >> n >> p;||| 8 for (long double i = 0; i < n; i += 1) {||| 9 long double nn = n;||| 10 long double cube = (nn * (nn - 1) * (nn - 2));||| 11 long double chance_to_0 =||| 12 max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube);||| 13 long double chance_to_1 =||| 14 max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube);||| 15 long double chance_to_2 =||| 16 max((long double)0, i * (i - 1) * (nn - i) * 3 / cube);||| 17 long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0;||| 18 if (chance_to_3 + chance_to_2 + chance_to_1 / 3 + eps > p) {||| 19 cout << i << endl;||| 20 return;||| 21 }||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 int t = 1;||| 28 while (t > 0) {||| 29 t--;||| 30 solve();||| 31 }||| 32 }||| 	18 if (chance_to_3 + chance_to_2 + chance_to_1 / 2 + eps > p) {
67	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-7;||| 4 void solve() {||| 5 int64_t n;||| 6 long double p;||| 7 cin >> n >> p;||| 8 for (long double i = 0; i < n; i += 1) {||| 9 long double nn = n;||| 10 long double cube = (nn * (nn - 1) * (nn - 2));||| 11 long double chance_to_0 =||| 12 max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube);||| 13 long double chance_to_1 =||| 14 max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube);||| 15 long double chance_to_2 =||| 16 max((long double)0, i * (i - 1) * (nn - i) * 3 / cube);||| 17 long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0;||| 18 if (chance_to_3 + chance_to_2 + chance_to_1 / 2 + eps > p) {||| 19 cout << i << endl;||| 20 return;||| 21 }||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 int t = 1;||| 28 while (t > 0) {||| 29 t--;||| 30 solve();||| 31 }||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-7;||| 4 void solve() {||| 5 int64_t n;||| 6 long double p;||| 7 cin >> n >> p;||| 8 for (long double i = 0; i < n; i += 1) {||| 9 long double nn = n;||| 10 long double cube = (nn * (nn - 1) * (nn - 2));||| 11 long double chance_to_0 =||| 12 max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube);||| 13 long double chance_to_1 =||| 14 max((long double)0, i * (nn - i) * (nn - i - 1) * 6 / cube);||| 15 long double chance_to_2 =||| 16 max((long double)0, i * (i - 1) * (nn - i) * 6 / cube);||| 17 long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0;||| 18 if (chance_to_3 + chance_to_2 + chance_to_1 / 3 + eps > p) {||| 19 cout << i << endl;||| 20 return;||| 21 }||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(0);||| 27 int t = 1;||| 28 while (t > 0) {||| 29 t--;||| 30 solve();||| 31 }||| 32 }||| 	14 max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube);
67	73	1 #include <bits/stdc++.h>||| 2 const int P = 998244353;||| 3 using namespace std;||| 4 template <class T>||| 5 using vector2D = vector<vector<T>>;||| 6 template <class T>||| 7 using vector3D = vector<vector2D<T>>;||| 8 template <class T>||| 9 using pque = priority_queue<T>;||| 10 template <class T>||| 11 using heap = priority_queue<T, vector<T>, greater<T>>;||| 12 template <class T>||| 13 T max(T a, T b, T c) {||| 14 return max(max(a, b), c);||| 15 }||| 16 template <class T>||| 17 T min(T a, T b, T c) {||| 18 return min(min(a, b), c);||| 19 }||| 20 template <class T>||| 21 bool umax(T &x, T y) {||| 22 return (x < y) ? x = y, true : false;||| 23 }||| 24 template <class T>||| 25 bool umin(T &x, T y) {||| 26 return (x > y) ? x = y, true : false;||| 27 }||| 28 void prepare() {||| 29 ios::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 }||| 33 long long n;||| 34 double p, i3 = 1.0 / 3;||| 35 const double eps = 1e-10;||| 36 double calc(long long m) {||| 37 long long k = n - m;||| 38 long long tot = n * (n - 1) * (n - 2) / 6;||| 39 long long cas0 = k * (k - 1) * (k - 2) / 6;||| 40 long long cas1 = k * (k - 1) / 2 * m;||| 41 long long cas2 = m * (m - 1) / 2 * k;||| 42 long long cas3 = m * (m - 1) * (m - 2) / 6;||| 43 return (double)(cas3 + cas2) / tot + 0.5 * cas1 / tot;||| 44 }||| 45 int main() {||| 46 prepare();||| 47 cin >> n >> p;||| 48 int l = 0, r = n, ans = -1;||| 49 while (l <= r) {||| 50 if (calc((l + (r - l) / 2)) < p - eps)||| 51 l = (l + (r - l) / 2) + 1;||| 52 else||| 53 ans = (l + (r - l) / 2), r = (l + (r - l) / 2) - 1;||| 54 }||| 55 cout << ans << endl;||| 56 return 0;||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 const int P = 998244353;||| 3 using namespace std;||| 4 template <class T>||| 5 using vector2D = vector<vector<T>>;||| 6 template <class T>||| 7 using vector3D = vector<vector2D<T>>;||| 8 template <class T>||| 9 using pque = priority_queue<T>;||| 10 template <class T>||| 11 using heap = priority_queue<T, vector<T>, greater<T>>;||| 12 template <class T>||| 13 T max(T a, T b, T c) {||| 14 return max(max(a, b), c);||| 15 }||| 16 template <class T>||| 17 T min(T a, T b, T c) {||| 18 return min(min(a, b), c);||| 19 }||| 20 template <class T>||| 21 bool umax(T &x, T y) {||| 22 return (x < y) ? x = y, true : false;||| 23 }||| 24 template <class T>||| 25 bool umin(T &x, T y) {||| 26 return (x > y) ? x = y, true : false;||| 27 }||| 28 void prepare() {||| 29 ios::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 }||| 33 long long n;||| 34 double p, i3 = 1.0 / 3;||| 35 const double eps = 1e-10;||| 36 double calc(long long m) {||| 37 long long k = n - m;||| 38 long long tot = n * (n - 1) * (n - 2) / 6;||| 39 long long cas0 = k * (k - 1) * (k - 2) / 6;||| 40 long long cas1 = k * (k - 1) / 2 * m;||| 41 long long cas2 = m * (m - 1) / 2 * k;||| 42 long long cas3 = m * (m - 1) * (m - 2) / 6;||| 43 return (double)(cas3 + cas2) / tot + i3 * cas1 / tot;||| 44 }||| 45 int main() {||| 46 prepare();||| 47 cin >> n >> p;||| 48 int l = 0, r = n, ans = -1;||| 49 while (l <= r) {||| 50 if (calc((l + (r - l) / 2)) < p - eps)||| 51 l = (l + (r - l) / 2) + 1;||| 52 else||| 53 ans = (l + (r - l) / 2), r = (l + (r - l) / 2) - 1;||| 54 }||| 55 cout << ans << endl;||| 56 return 0;||| 57 }||| 	43 return (double)(cas3 + cas2) / tot + 0.5 * cas1 / tot;
67	45	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-12, X = 1.0;||| 4 long long nCr(long long n, long long r) {||| 5 if (r > n) return 0;||| 6 if (r == 1) return n;||| 7 if (r == 2) return n * (n - 1) / 2;||| 8 if (r == 3) return n * (n - 1) * (n - 2) / 6;||| 9 return 0;||| 10 }||| 11 long double fun(int m, int n) {||| 12 int r = n - m;||| 13 long double a = 0, b = 0;||| 14 if (r >= 3) a = nCr(r, 3) * X / nCr(n, 3);||| 15 if (r >= 2 and m >= 1) {||| 16 long double p = (nCr(r, 2) * X * m / nCr(n, 3));||| 17 p *= (X / 2);||| 18 b = p;||| 19 }||| 20 return X - (a + b);||| 21 }||| 22 int main() {||| 23 int n;||| 24 long double p;||| 25 cin >> n >> p;||| 26 for (int i = 0; i <= n; i++) {||| 27 if (abs(fun(i, n)) + eps >= p) {||| 28 cout << i;||| 29 return 0;||| 30 }||| 31 }||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double eps = 1e-12, X = 1.0;||| 4 long long nCr(long long n, long long r) {||| 5 if (r > n) return 0;||| 6 if (r == 1) return n;||| 7 if (r == 2) return n * (n - 1) / 2;||| 8 if (r == 3) return n * (n - 1) * (n - 2) / 6;||| 9 return 0;||| 10 }||| 11 long double fun(int m, int n) {||| 12 int r = n - m;||| 13 long double a = 0, b = 0;||| 14 if (r >= 3) a = nCr(r, 3) * X / nCr(n, 3);||| 15 if (r >= 2 and m >= 1) {||| 16 long double p = (nCr(r, 2) * X * m / nCr(n, 3));||| 17 p *= (X / 2);||| 18 b = p;||| 19 }||| 20 return X - (a + b);||| 21 }||| 22 int main() {||| 23 int n;||| 24 long double p;||| 25 cin >> n >> p;||| 26 for (int i = 1; i <= n; i++) {||| 27 if (abs(fun(i, n)) + eps >= p) {||| 28 cout << i;||| 29 return 0;||| 30 }||| 31 }||| 32 }||| 	26 for (int i = 0; i <= n; i++) {
67	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double eps = 1e-14;||| 4 long double getpwin(long double total, long double good) {||| 5 long double bad = total - good;||| 6 long double sol = 0;||| 7 if (good >= 3) {||| 8 long double prob = 1;||| 9 prob *= good / total;||| 10 prob *= (good - 1) / (total - 1);||| 11 prob *= (good - 2) / (total - 2);||| 12 sol += prob;||| 13 }||| 14 if (good >= 2 && bad >= 1) {||| 15 long double prob = 1;||| 16 prob *= good / total;||| 17 prob *= (good - 1) / (total - 1);||| 18 prob *= bad / (total - 2);||| 19 sol += prob * 3;||| 20 }||| 21 if (good >= 1 && bad >= 2) {||| 22 long double prob = 1;||| 23 prob *= good / total;||| 24 prob *= bad / (total - 1);||| 25 prob *= (bad - 1) / (total - 2);||| 26 prob *= ((long double)1 / (long double)3 + (long double)1 / (long double)6);||| 27 sol += prob * 3;||| 28 }||| 29 return sol;||| 30 }||| 31 long long n;||| 32 long double p;||| 33 signed main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 cin >> n >> p;||| 37 for (long long i = 0; i <= n; i++) {||| 38 if (getpwin(n, i) - p >= -eps) {||| 39 cout << i << ""\n"";||| 40 return 0;||| 41 }||| 42 }||| 43 assert(0);||| 44 exit(0);||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double eps = 1e-14;||| 4 long double getpwin(long double total, long double good) {||| 5 long double bad = total - good;||| 6 long double sol = 0;||| 7 if (good >= 3) {||| 8 long double prob = 1;||| 9 prob *= good / total;||| 10 prob *= (good - 1) / (total - 1);||| 11 prob *= (good - 2) / (total - 2);||| 12 sol += prob;||| 13 }||| 14 if (good >= 2 && bad >= 1) {||| 15 long double prob = 1;||| 16 prob *= good / total;||| 17 prob *= (good - 1) / (total - 1);||| 18 prob *= bad / (total - 2);||| 19 sol += prob * 3;||| 20 }||| 21 if (good >= 1 && bad >= 2) {||| 22 long double prob = 1;||| 23 prob *= good / total;||| 24 prob *= bad / (total - 1);||| 25 prob *= (bad - 1) / (total - 2);||| 26 prob *=||| 27 ((long double)1 / (long double)3 + (long double)1 / (long double)6) *||| 28 prob;||| 29 sol += prob * 3;||| 30 }||| 31 return sol;||| 32 }||| 33 long long n;||| 34 long double p;||| 35 signed main() {||| 36 ios::sync_with_stdio(0);||| 37 cin.tie(0);||| 38 cin >> n >> p;||| 39 for (long long i = 0; i <= n; i++) {||| 40 if (getpwin(n, i) - p >= -eps) {||| 41 cout << i << ""\n"";||| 42 return 0;||| 43 }||| 44 }||| 45 assert(0);||| 46 exit(0);||| 47 return 0;||| 48 }||| "	26 prob *= ((long double)1 / (long double)3 + (long double)1 / (long double)6);
67	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int MAX = 2e5 + 2;||| 4 const long long int mod = 1e9 + 7;||| 5 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 6 template <class T>||| 7 T rand(T a, T b) {||| 8 return uniform_int_distribution<T>(a, b)(rng);||| 9 }||| 10 template <class T>||| 11 T rand() {||| 12 return uniform_int_distribution<T>()(rng);||| 13 }||| 14 void _print(long long int t) { cerr << t; }||| 15 void _print(int t) { cerr << t; }||| 16 void _print(string t) { cerr << t; }||| 17 void _print(char t) { cerr << t; }||| 18 void _print(long double t) { cerr << t; }||| 19 void _print(double t) { cerr << t; }||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p);||| 22 template <class T>||| 23 void _print(vector<T> v);||| 24 template <class T>||| 25 void _print(set<T> v);||| 26 template <class T, class V>||| 27 void _print(map<T, V> v);||| 28 template <class T>||| 29 void _print(multiset<T> v);||| 30 template <class T, class V>||| 31 void _print(pair<T, V> p) {||| 32 cerr << ""{"";||| 33 _print(p.first);||| 34 cerr << "","";||| 35 _print(p.second);||| 36 cerr << ""}"";||| 37 }||| 38 template <class T>||| 39 void _print(vector<T> v) {||| 40 cerr << ""[ "";||| 41 for (T i : v) {||| 42 _print(i);||| 43 cerr << "" "";||| 44 }||| 45 cerr << ""]"";||| 46 }||| 47 template <class T>||| 48 void _print(set<T> v) {||| 49 cerr << ""[ "";||| 50 for (T i : v) {||| 51 _print(i);||| 52 cerr << "" "";||| 53 }||| 54 cerr << ""]"";||| 55 }||| 56 template <class T>||| 57 void _print(multiset<T> v) {||| 58 cerr << ""[ "";||| 59 for (T i : v) {||| 60 _print(i);||| 61 cerr << "" "";||| 62 }||| 63 cerr << ""]"";||| 64 }||| 65 template <class T, class V>||| 66 void _print(map<T, V> v) {||| 67 cerr << ""[ "";||| 68 for (auto i : v) {||| 69 _print(i);||| 70 cerr << "" "";||| 71 }||| 72 cerr << ""]"";||| 73 }||| 74 double ncr(long long int n, long long int r) {||| 75 if (r > n || r < 0) return 0;||| 76 if (r == 3) return (n * (n - 1) * (n - 2)) / 6;||| 77 if (r == 2) return (n * (n - 1)) / 2;||| 78 if (r == 1) return n;||| 79 return 1;||| 80 }||| 81 double cal(long long int l, long long int r, long long int i, long long int n) {||| 82 double ans = ncr(i, l) * (ncr(n - i, r)) / ncr(n, l + r);||| 83 return ans;||| 84 }||| 85 double frac(double l, double r) { return l / r; }||| 86 void solve() {||| 87 long long int n;||| 88 cin >> n;||| 89 double k;||| 90 cin >> k;||| 91 double e = 1e-5;||| 92 for (long long int i = 0; i < n + 1; i++) {||| 93 double ans = 0, tmp, p;||| 94 p = cal(3, 0, i, n);||| 95 tmp = 1;||| 96 ans += (p * tmp);||| 97 p = cal(2, 1, i, n);||| 98 tmp = 1;||| 99 ans += (p * tmp);||| 100 p = cal(1, 2, i, n);||| 101 tmp = 0.5;||| 102 ans += (p * tmp);||| 103 p = cal(0, 3, i, n);||| 104 tmp = 0;||| 105 ans += (p * tmp);||| 106 ;||| 107 ;||| 108 if (ans >= k) {||| 109 cout << i << ""\n"";||| 110 return;||| 111 }||| 112 }||| 113 }||| 114 int main() {||| 115 ios_base::sync_with_stdio(false);||| 116 cin.tie(NULL);||| 117 long long int t = 1;||| 118 for (long long int i = 0; i < t; i++) {||| 119 solve();||| 120 }||| 121 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int MAX = 2e5 + 2;||| 4 const long long int mod = 1e9 + 7;||| 5 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 6 template <class T>||| 7 T rand(T a, T b) {||| 8 return uniform_int_distribution<T>(a, b)(rng);||| 9 }||| 10 template <class T>||| 11 T rand() {||| 12 return uniform_int_distribution<T>()(rng);||| 13 }||| 14 void _print(long long int t) { cerr << t; }||| 15 void _print(int t) { cerr << t; }||| 16 void _print(string t) { cerr << t; }||| 17 void _print(char t) { cerr << t; }||| 18 void _print(long double t) { cerr << t; }||| 19 void _print(double t) { cerr << t; }||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p);||| 22 template <class T>||| 23 void _print(vector<T> v);||| 24 template <class T>||| 25 void _print(set<T> v);||| 26 template <class T, class V>||| 27 void _print(map<T, V> v);||| 28 template <class T>||| 29 void _print(multiset<T> v);||| 30 template <class T, class V>||| 31 void _print(pair<T, V> p) {||| 32 cerr << ""{"";||| 33 _print(p.first);||| 34 cerr << "","";||| 35 _print(p.second);||| 36 cerr << ""}"";||| 37 }||| 38 template <class T>||| 39 void _print(vector<T> v) {||| 40 cerr << ""[ "";||| 41 for (T i : v) {||| 42 _print(i);||| 43 cerr << "" "";||| 44 }||| 45 cerr << ""]"";||| 46 }||| 47 template <class T>||| 48 void _print(set<T> v) {||| 49 cerr << ""[ "";||| 50 for (T i : v) {||| 51 _print(i);||| 52 cerr << "" "";||| 53 }||| 54 cerr << ""]"";||| 55 }||| 56 template <class T>||| 57 void _print(multiset<T> v) {||| 58 cerr << ""[ "";||| 59 for (T i : v) {||| 60 _print(i);||| 61 cerr << "" "";||| 62 }||| 63 cerr << ""]"";||| 64 }||| 65 template <class T, class V>||| 66 void _print(map<T, V> v) {||| 67 cerr << ""[ "";||| 68 for (auto i : v) {||| 69 _print(i);||| 70 cerr << "" "";||| 71 }||| 72 cerr << ""]"";||| 73 }||| 74 double ncr(long long int n, long long int r) {||| 75 if (r > n || r < 0) return 0;||| 76 if (r == 3) return (n * (n - 1) * (n - 2)) / 6;||| 77 if (r == 2) return (n * (n - 1)) / 2;||| 78 if (r == 1) return n;||| 79 return 1;||| 80 }||| 81 double cal(long long int l, long long int r, long long int i, long long int n) {||| 82 double ans = ncr(i, l) * (ncr(n - i, r)) / ncr(n, l + r);||| 83 return ans;||| 84 }||| 85 double frac(double l, double r) { return l / r; }||| 86 void solve() {||| 87 long long int n;||| 88 cin >> n;||| 89 double k;||| 90 cin >> k;||| 91 double e = 1e-5;||| 92 for (long long int i = 0; i < n + 1; i++) {||| 93 double ans = 0, tmp, p;||| 94 p = cal(3, 0, i, n);||| 95 tmp = 1;||| 96 ans += (p * tmp);||| 97 p = cal(2, 1, i, n);||| 98 tmp = 1;||| 99 ans += (p * tmp);||| 100 p = cal(1, 2, i, n);||| 101 tmp = 0.5;||| 102 ans += (p * tmp);||| 103 p = cal(0, 3, i, n);||| 104 tmp = 0;||| 105 ans += (p * tmp);||| 106 ;||| 107 ;||| 108 if (ans >= k - e) {||| 109 cout << i << ""\n"";||| 110 return;||| 111 }||| 112 }||| 113 }||| 114 int main() {||| 115 ios_base::sync_with_stdio(false);||| 116 cin.tie(NULL);||| 117 long long int t = 1;||| 118 for (long long int i = 0; i < t; i++) {||| 119 solve();||| 120 }||| 121 }||| "	108 if (ans >= k) {
67	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mxN = 1e3 + 5;||| 4 const double EPS = 1e-9;||| 5 vector<vector<long long>> C(mxN, vector<long long>(4, -1));||| 6 long long ini(int n, int k) {||| 7 if (n == k || k == 0) return C[n][k] = 1;||| 8 if (C[n][k] != -1) return C[n][k];||| 9 return C[n][k] = ini(n - 1, k - 1) + ini(n - 1, k);||| 10 }||| 11 int main() {||| 12 int n;||| 13 cin >> n;||| 14 double p;||| 15 cin >> p;||| 16 if (p == 0) {||| 17 cout << ""0\n"";||| 18 return 0;||| 19 }||| 20 ini(mxN - 1, 3);||| 21 for (int i = 1; i < n; ++i) {||| 22 double tot = C[n][3];||| 23 double ans = (double)(n - i >= 2 ? i * C[n - i][2] : 0) * 0.5 +||| 24 (n - i >= 3 ? C[n - i][3] : 0);||| 25 if (p <= (tot - ans) / tot + EPS) {||| 26 cout << i << '\n';||| 27 return 0;||| 28 }||| 29 }||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mxN = 1e3 + 5;||| 4 const double EPS = 1e-9;||| 5 vector<vector<long long>> C(mxN, vector<long long>(4, -1));||| 6 long long ini(int n, int k) {||| 7 if (n == k || k == 0) return C[n][k] = 1;||| 8 if (C[n][k] != -1) return C[n][k];||| 9 return C[n][k] = ini(n - 1, k - 1) + ini(n - 1, k);||| 10 }||| 11 int main() {||| 12 int n;||| 13 cin >> n;||| 14 double p;||| 15 cin >> p;||| 16 if (p == 0) {||| 17 cout << ""0\n"";||| 18 return 0;||| 19 }||| 20 ini(mxN - 1, 3);||| 21 for (int i = 2; i < n; ++i) {||| 22 double tot = C[n][3];||| 23 double ans = (double)(n - i >= 2 ? i * C[n - i][2] : 0) * 0.5 +||| 24 (n - i >= 3 ? C[n - i][3] : 0);||| 25 if (p <= (tot - ans) / tot + EPS) {||| 26 cout << i << '\n';||| 27 return 0;||| 28 }||| 29 }||| 30 }||| "	21 for (int i = 1; i < n; ++i) {
67	114	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n;||| 4 double p;||| 5 double myfunc(long long n, long long m) {||| 6 if (n < m) return 0;||| 7 double ret = 1;||| 8 for (int i = 0; i < m; ++i) {||| 9 ret *= n - i;||| 10 ret /= i + 1;||| 11 }||| 12 return ret;||| 13 }||| 14 inline double mypr(long long n, long long m, int i) {||| 15 return myfunc(m, i) * myfunc(n - m, 3 - i) / myfunc(n, 3);||| 16 }||| 17 double shit(long long n, long long m, int i) {||| 18 double pp = mypr(n, m, i);||| 19 if (i == 0) {||| 20 return pp * 0;||| 21 } else if (i == 1) {||| 22 return pp * 0.5;||| 23 } else if (i == 2) {||| 24 return pp * 1;||| 25 } else {||| 26 return pp * 1;||| 27 }||| 28 }||| 29 int fuck() {||| 30 if (p < 1e-6) return 0;||| 31 for (long long m = 1; m <= n; ++m) {||| 32 double temp = 0;||| 33 for (int i = 0; i <= 3 && i <= m; ++i) {||| 34 temp += shit(n, m, i);||| 35 }||| 36 if (temp >= p) return m;||| 37 }||| 38 }||| 39 int main() {||| 40 cin >> n >> p;||| 41 cout << fuck() << endl;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n;||| 4 double p;||| 5 double myfunc(long long n, long long m) {||| 6 if (n < m) return 0;||| 7 double ret = 1;||| 8 for (int i = 0; i < m; ++i) {||| 9 ret *= n - i;||| 10 ret /= i + 1;||| 11 }||| 12 return ret;||| 13 }||| 14 double mypr(long long n, long long m, int i) {||| 15 return myfunc(m, i) * myfunc(n - m, 3 - i) / myfunc(n, 3);||| 16 }||| 17 double shit(long long n, long long m, int i) {||| 18 double pp = mypr(n, m, i);||| 19 if (i == 0) {||| 20 return pp * 0;||| 21 } else if (i == 1) {||| 22 return pp * 0.5;||| 23 } else if (i == 2) {||| 24 return pp * 1;||| 25 } else {||| 26 return pp * 1;||| 27 }||| 28 }||| 29 int fuck() {||| 30 if (p < 1e-6) return 0;||| 31 for (long long m = 1; m <= n; ++m) {||| 32 double temp = 0;||| 33 for (int i = 0; i <= 3 && i <= m; ++i) {||| 34 temp += shit(n, m, i);||| 35 }||| 36 if (temp >= p) return m;||| 37 }||| 38 }||| 39 int main() {||| 40 cin >> n >> p;||| 41 cout << fuck() << endl;||| 42 }||| 	14 inline double mypr(long long n, long long m, int i) {
67	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double pi = acos(-1.0);||| 4 const double eps = 1e-11;||| 5 template <class T>||| 6 inline void ckmin(T &a, T b) {||| 7 a = min(a, b);||| 8 }||| 9 template <class T>||| 10 inline void ckmax(T &a, T b) {||| 11 a = max(a, b);||| 12 }||| 13 template <class T>||| 14 inline T sqr(T x) {||| 15 return x * x;||| 16 }||| 17 using uint = unsigned int;||| 18 using int64 = long long;||| 19 using uint64 = unsigned long long;||| 20 using ipair = pair<int, int>;||| 21 using VI = vector<int>;||| 22 using VD = vector<double>;||| 23 using VS = vector<string>;||| 24 using VVI = vector<VI>;||| 25 double choose[1024][1024];||| 26 double calc(int n, int m) {||| 27 double r = 0;||| 28 for (int c1 = 0; c1 < (4); ++c1) {||| 29 int c2 = 3 - c1;||| 30 if (c1 <= m && c2 <= n - m) {||| 31 double prob1 = choose[m][c1] * choose[n - m][c2];||| 32 double prob2 = 0;||| 33 if (c1 == 0)||| 34 prob2 = 0;||| 35 else if (c1 == 1)||| 36 prob2 = 2.0 / 3.0 * 0.75;||| 37 else||| 38 prob2 = 1;||| 39 r += prob1 * prob2;||| 40 }||| 41 }||| 42 r /= choose[n][3];||| 43 return r;||| 44 }||| 45 int main() {||| 46 std::ios::sync_with_stdio(false);||| 47 memset(choose, 0, sizeof(choose));||| 48 for (int i = 0; i < (1024); ++i)||| 49 for (int j = 0; j < (i + 1); ++j)||| 50 choose[i][j] = (j == 0 ? 1 : choose[i - 1][j - 1] + choose[i - 1][j]);||| 51 int n;||| 52 double p;||| 53 cin >> n >> p;||| 54 for (int m = 0; m <= n; m++)||| 55 if (calc(n, m) >= p - eps) {||| 56 printf(""%d\n"", m);||| 57 return 0;||| 58 }||| 59 printf(""%d\n"", n);||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double pi = acos(-1.0);||| 4 const double eps = 1e-11;||| 5 template <class T>||| 6 inline void ckmin(T &a, T b) {||| 7 a = min(a, b);||| 8 }||| 9 template <class T>||| 10 inline void ckmax(T &a, T b) {||| 11 a = max(a, b);||| 12 }||| 13 template <class T>||| 14 inline T sqr(T x) {||| 15 return x * x;||| 16 }||| 17 using uint = unsigned int;||| 18 using int64 = long long;||| 19 using uint64 = unsigned long long;||| 20 using ipair = pair<int, int>;||| 21 using VI = vector<int>;||| 22 using VD = vector<double>;||| 23 using VS = vector<string>;||| 24 using VVI = vector<VI>;||| 25 double choose[1024][1024];||| 26 double calc(int n, int m) {||| 27 double r = 0;||| 28 for (int c1 = 0; c1 < (4); ++c1) {||| 29 int c2 = 3 - c1;||| 30 if (c1 <= m && c2 <= n - m) {||| 31 double prob1 = choose[m][c1] * choose[n - m][c2];||| 32 double prob2 = 0;||| 33 if (c1 == 0)||| 34 prob2 = 0;||| 35 else if (c1 == 1)||| 36 prob2 = 2.0 / 3.0;||| 37 else||| 38 prob2 = 1;||| 39 r += prob1 * prob2;||| 40 }||| 41 }||| 42 r /= choose[n][3];||| 43 return r;||| 44 }||| 45 int main() {||| 46 std::ios::sync_with_stdio(false);||| 47 memset(choose, 0, sizeof(choose));||| 48 for (int i = 0; i < (1024); ++i)||| 49 for (int j = 0; j < (i + 1); ++j)||| 50 choose[i][j] = (j == 0 ? 1 : choose[i - 1][j - 1] + choose[i - 1][j]);||| 51 int n;||| 52 double p;||| 53 cin >> n >> p;||| 54 for (int m = 0; m <= n; m++)||| 55 if (calc(n, m) >= p - eps) {||| 56 printf(""%d\n"", m);||| 57 return 0;||| 58 }||| 59 printf(""%d\n"", n);||| 60 return 0;||| 61 }||| "	36 prob2 = 2.0 / 3.0 * 0.75;
67	46	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 bool ok = 0;||| 5 int res = 0;||| 6 char c;||| 7 while (((c = getchar()) < '0' || c > '9') && c != '-')||| 8 ;||| 9 if (c == '-')||| 10 ok = 1;||| 11 else||| 12 res = c - 48;||| 13 while ((c = getchar()) >= '0' && c <= '9')||| 14 res = (res << 3) + (res << 1) + (c - 48);||| 15 return ok ? ~res + 1 : res;||| 16 }||| 17 int cn3(int n) {||| 18 if (n < 3) return 0;||| 19 return n * (n - 1) * (n - 2) / 6;||| 20 }||| 21 int cn2(int n) {||| 22 if (n < 2) return 0;||| 23 return n * (n - 1) / 2;||| 24 }||| 25 int main() {||| 26 int n;||| 27 double p;||| 28 cin >> n >> p;||| 29 for (int a = 0; a <= n; ++a) {||| 30 double ans = 0;||| 31 if (a >= 3) ans += 1.0 * cn3(a) / cn3(n);||| 32 if (n - a >= 1) ans += 1.0 * cn2(a) * (n - a) / cn3(n);||| 33 if (n - a >= 2) ans += 1.0 * a * cn2(n - a) / cn3(n) * 0.5;||| 34 if (ans > p || (abs(ans - p) < 1e-6)) {||| 35 cout << a << endl;||| 36 break;||| 37 }||| 38 }||| 39 return 0;||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 bool ok = 0;||| 5 int res = 0;||| 6 char c;||| 7 while (((c = getchar()) < '0' || c > '9') && c != '-')||| 8 ;||| 9 if (c == '-')||| 10 ok = 1;||| 11 else||| 12 res = c - 48;||| 13 while ((c = getchar()) >= '0' && c <= '9')||| 14 res = (res << 3) + (res << 1) + (c - 48);||| 15 return ok ? ~res + 1 : res;||| 16 }||| 17 int cn3(int n) {||| 18 if (n < 3) return 0;||| 19 return n * (n - 1) * (n - 2) / 6;||| 20 }||| 21 int cn2(int n) {||| 22 if (n < 2) return 0;||| 23 return n * (n - 1) / 2;||| 24 }||| 25 int main() {||| 26 int n;||| 27 double p;||| 28 cin >> n >> p;||| 29 for (int a = 1; a <= n; ++a) {||| 30 double ans = 0;||| 31 if (a >= 3) ans += 1.0 * cn3(a) / cn3(n);||| 32 if (n - a >= 1) ans += 1.0 * cn2(a) * (n - a) / cn3(n);||| 33 if (n - a >= 2) ans += 1.0 * a * cn2(n - a) / cn3(n) * 0.5;||| 34 if (ans > p || (abs(ans - p) < 1e-6)) {||| 35 cout << a << endl;||| 36 break;||| 37 }||| 38 }||| 39 return 0;||| 40 }||| 	29 for (int a = 0; a <= n; ++a) {
70	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010, mo = 1e9 + 7;||| 4 int n, q;||| 5 long long a[N], s1[N], s2[N], c[N];||| 6 long long qmi(long long a, long long k) {||| 7 long long res = 1;||| 8 while (k) {||| 9 if (k & 1) res = res * a % mo;||| 10 a = a * a % mo;||| 11 k >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long mod(long long x) { return (x % mo + mo) % mo; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 cin >> n >> q;||| 21 for (long long i = 1; i <= n; i++) {||| 22 cin >> a[i];||| 23 s1[i] = (s1[i - 1] + a[i]) % mo;||| 24 s2[i] = (s2[i - 1] + a[i] * a[i] % mo) % mo;||| 25 c[i] = (c[i - 1] + i * i % mo) % mo;||| 26 }||| 27 long long l, r, d, len;||| 28 while (q--) {||| 29 cin >> l >> r >> d;||| 30 len = r - l + 1;||| 31 long long f1 = (s1[r] - s1[l - 1]), f2 = (s2[r] - s2[l - 1]);||| 32 f1 = mod(f1), f2 = mod(f2);||| 33 long long f = (f1 * 2 * qmi(len, mo - 2) % mo - (len - 1) * d % mo) % mo *||| 34 qmi(2, mo - 2) % mo;||| 35 f = mod(f);||| 36 long long ans = f * f % mo * len % mo +||| 37 f * (len - 1) % mo * len % mo * d % mo +||| 38 c[len - 1] * d % mo * d % mo;||| 39 ans = mod(ans);||| 40 if (ans == f2)||| 41 puts(""Yes"");||| 42 else||| 43 puts(""No"");||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010, mo = 1e9 + 7;||| 4 int n, q;||| 5 long long a[N], s1[N], s2[N], c[N];||| 6 long long qmi(long long a, long long k) {||| 7 long long res = 1;||| 8 while (k) {||| 9 if (k & 1) res = res * a % mo;||| 10 a = a * a % mo;||| 11 k >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long mod(long long x) { return (x % mo + mo) % mo; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 cin >> n >> q;||| 21 for (int i = 1; i <= n; i++) {||| 22 cin >> a[i];||| 23 s1[i] = (s1[i - 1] + a[i]) % mo;||| 24 s2[i] = (s2[i - 1] + a[i] * a[i] % mo) % mo;||| 25 c[i] = (c[i - 1] + i * i % mo) % mo;||| 26 }||| 27 long long l, r, d, len;||| 28 while (q--) {||| 29 cin >> l >> r >> d;||| 30 len = r - l + 1;||| 31 long long f1 = (s1[r] - s1[l - 1]), f2 = (s2[r] - s2[l - 1]);||| 32 f1 = mod(f1), f2 = mod(f2);||| 33 long long f = (f1 * 2 * qmi(len, mo - 2) % mo - (len - 1) * d % mo) % mo *||| 34 qmi(2, mo - 2) % mo;||| 35 f = mod(f);||| 36 long long ans = f * f % mo * len % mo +||| 37 f * (len - 1) % mo * len % mo * d % mo +||| 38 c[len - 1] * d % mo * d % mo;||| 39 ans = mod(ans);||| 40 if (ans == f2)||| 41 puts(""Yes"");||| 42 else||| 43 puts(""No"");||| 44 }||| 45 return 0;||| 46 }||| "	21 for (long long i = 1; i <= n; i++) {
70	86	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long binpow(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b) {||| 7 if (b & 1) {||| 8 ans = ans * a % MOD;||| 9 }||| 10 b /= 2;||| 11 a = a * a % MOD;||| 12 }||| 13 return ans;||| 14 }||| 15 long long inv(long long a) { return binpow(a, MOD - 2); }||| 16 long long get_sum(long long n) { return (n * (n + 1) / 2) % MOD; }||| 17 long long get_sum2(long long n) {||| 18 return n * (n + 1) % MOD * (2 * n + 1) % MOD * inv(6) % MOD;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 mt19937 rnd(239);||| 24 int n, q;||| 25 cin >> n >> q;||| 26 vector<long long> a(2 * n);||| 27 vector<long long> sum(2 * n, 0), sum2(2 * n, 0);||| 28 long long val = rnd() % MOD;||| 29 for (int i = 0; i < 2 * n; i++) {||| 30 if (i < n) {||| 31 long long first;||| 32 cin >> first;||| 33 first = (first + val) % MOD;||| 34 a[i] = first;||| 35 } else {||| 36 a[i] = a[i - n];||| 37 }||| 38 if (i) {||| 39 sum[i] = sum[i - 1];||| 40 sum2[i] = sum2[i - 1];||| 41 }||| 42 sum[i] = (sum[i] + a[i]) % MOD;||| 43 sum2[i] = (sum2[i] + a[i] * a[i]) % MOD;||| 44 }||| 45 while (q--) {||| 46 int l, r;||| 47 long long d;||| 48 cin >> l >> r >> d;||| 49 if (r < l) {||| 50 r += n;||| 51 }||| 52 l--;||| 53 r--;||| 54 long long sm = sum[r];||| 55 if (l) {||| 56 sm = (sm - sum[l - 1] + MOD) % MOD;||| 57 }||| 58 long long sm2 = sum2[r];||| 59 if (l) {||| 60 sm2 = (sm2 - sum2[l - 1] + MOD) % MOD;||| 61 }||| 62 long long len = r - l + 1;||| 63 long long a =||| 64 (sm + MOD - len * (len - 1) / 2 % MOD * d % MOD) * inv(len) % MOD;||| 65 long long sm22 = len * a % MOD * a % MOD +||| 66 d * d % MOD * get_sum2(len - 1) % MOD +||| 67 2LL * a % MOD * d % MOD * get_sum(len - 1) % MOD;||| 68 sm22 %= MOD;||| 69 cout << (sm22 == sm2 ? ""Yes\n"" : ""No\n"");||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long binpow(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b) {||| 7 if (b & 1) {||| 8 ans = ans * a % MOD;||| 9 }||| 10 b /= 2;||| 11 a = a * a % MOD;||| 12 }||| 13 return ans;||| 14 }||| 15 long long inv(long long a) { return binpow(a, MOD - 2); }||| 16 long long get_sum(long long n) { return (n * (n + 1) / 2) % MOD; }||| 17 long long get_sum2(long long n) {||| 18 return n * (n + 1) % MOD * (2 * n + 1) % MOD * inv(6) % MOD;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 mt19937 rnd(239);||| 24 int n, q;||| 25 cin >> n >> q;||| 26 vector<long long> a(2 * n);||| 27 vector<long long> sum(2 * n, 0), sum2(2 * n, 0);||| 28 long long val = rnd() % MOD;||| 29 for (int i = 0; i < 2 * n; i++) {||| 30 if (i < n) {||| 31 long long first;||| 32 cin >> first;||| 33 first = (first + val) % MOD;||| 34 a[i] = first;||| 35 } else {||| 36 a[i] = a[i - n];||| 37 }||| 38 if (i) {||| 39 sum[i] = sum[i - 1];||| 40 sum2[i] = sum2[i - 1];||| 41 }||| 42 sum[i] = (sum[i] + a[i]) % MOD;||| 43 sum2[i] = (sum2[i] + a[i] * a[i]) % MOD;||| 44 }||| 45 while (q--) {||| 46 int l, r;||| 47 long long d;||| 48 cin >> l >> r >> d;||| 49 if (r < l) {||| 50 r += n;||| 51 }||| 52 l--;||| 53 r--;||| 54 long long sm = sum[r];||| 55 if (l) {||| 56 sm = (sm - sum[l - 1] + MOD) % MOD;||| 57 }||| 58 long long sm2 = sum2[r];||| 59 if (l) {||| 60 sm2 = (sm2 - sum2[l - 1] + MOD) % MOD;||| 61 }||| 62 long long len = r - l + 1;||| 63 long long a =||| 64 (sm + MOD - len * (len - 1) / 2 % MOD * d % MOD) * inv(len) % MOD;||| 65 long long sm22 = len * a % MOD * a % MOD +||| 66 d * d % MOD * get_sum2(len - 1) % MOD +||| 67 2LL * a % MOD * d % MOD * get_sum(len - 1) % MOD;||| 68 sm22 %= MOD;||| 69 cout << (sm22 == sm2 ? ""YES\n"" : ""NO\n"");||| 70 }||| 71 return 0;||| 72 }||| "	"69 cout << (sm22 == sm2 ? ""Yes\n"" : ""No\n"");"
71	189	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010;||| 4 const double eps = 1e-10;||| 5 struct Point {||| 6 int x, y, id, rnk;||| 7 } p1[N];||| 8 int n, m, s, p;||| 9 bool ok[N];||| 10 double ans, tot;||| 11 bool cmp(Point i, Point j) {||| 12 if (i.x != j.x) return i.x < j.x;||| 13 return i.y < j.y;||| 14 }||| 15 bool cmp1(Point i, Point j) { return i.rnk < j.rnk; }||| 16 inline bool check(Point i, Point j, Point k) {||| 17 return 1ll * (j.x - i.x) * (k.y - j.y) == 1ll * (k.x - j.x) * (j.y - i.y);||| 18 }||| 19 inline double dis(int i, int j) {||| 20 return sqrt(1.0 * (p1[i].x - p1[j].x) * (p1[i].x - p1[j].x) +||| 21 1.0 * (p1[i].y - p1[j].y) * (p1[i].y - p1[j].y));||| 22 }||| 23 int main() {||| 24 scanf(""%d%d"", &n, &m);||| 25 for (int i = 1; i <= n; ++i) scanf(""%d%d"", &p1[i].x, &p1[i].y), p1[i].id = i;||| 26 if (n == 3) {||| 27 double tmp[3];||| 28 ans = dis(1, 2) + dis(2, 3) + dis(3, 1);||| 29 for (int i = 1, j = 0; i <= 3; ++i) {||| 30 if (i != m) tmp[++j] = dis(i, m);||| 31 }||| 32 ans -= max(tmp[1], tmp[2]);||| 33 printf(""%lf\n"", ans);||| 34 return 0;||| 35 }||| 36 sort(p1 + 1, p1 + n + 1, cmp);||| 37 for (int i = 1; i <= n; ++i) p1[i].rnk = i;||| 38 p = 0;||| 39 for (int i = 2; i < n; ++i) ok[i] = check(p1[i - 1], p1[i], p1[i + 1]);||| 40 for (int i = 2; i < n; ++i)||| 41 if (!ok[i - 1] && !ok[i] && !ok[i + 1]) p = i;||| 42 if (!p && !ok[2])||| 43 p = 1;||| 44 else if (!p)||| 45 p = n;||| 46 p1[p].rnk = n + 1;||| 47 sort(p1 + 1, p1 + n + 1, cmp1);||| 48 for (int i = 1; i <= n; ++i)||| 49 if (p1[i].id == m) s = i;||| 50 if (s != n) {||| 51 ans = min(dis(s, n - 1) + dis(n - 1, 1) + dis(1, n),||| 52 dis(s, 1) + dis(1, n - 1) + dis(n - 1, n));||| 53 for (int i = s; i < n - 1; ++i) {||| 54 tot = min(||| 55 dis(s, i) + dis(i, 1) + dis(1, n) + dis(n, i + 1) + dis(i + 1, n - 1),||| 56 dis(s, 1) + dis(1, i) + dis(i, n) + dis(n, i + 1) +||| 57 dis(i + 1, n - 1));||| 58 ans = min(ans, tot);||| 59 }||| 60 for (int i = 2; i <= s; ++i) {||| 61 tot = min(dis(s, i) + dis(n - 1, i) + dis(n - 1, n) + dis(n, i - 1) +||| 62 dis(i - 1, 1),||| 63 dis(s, n - 1) + dis(n - 1, i) + dis(i, n) + dis(n, i - 1) +||| 64 dis(i - 1, 1));||| 65 ans = min(ans, tot);||| 66 }||| 67 } else||| 68 ans = dis(1, n - 1) + min(dis(1, n), dis(n - 1, n));||| 69 printf(""%lf\n"", ans);||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010;||| 4 const double eps = 1e-10;||| 5 struct Point {||| 6 int x, y, id, rnk;||| 7 } p1[N];||| 8 int n, m, s, p;||| 9 bool ok[N];||| 10 double ans, tot;||| 11 bool cmp(Point i, Point j) {||| 12 if (i.x != j.x) return i.x < j.x;||| 13 return i.y < j.y;||| 14 }||| 15 bool cmp1(Point i, Point j) { return i.rnk < j.rnk; }||| 16 inline bool check(Point i, Point j, Point k) {||| 17 return 1ll * (j.x - i.x) * (k.y - j.y) == 1ll * (k.x - j.x) * (j.y - i.y);||| 18 }||| 19 inline double dis(int i, int j) {||| 20 return sqrt(1.0 * (p1[i].x - p1[j].x) * (p1[i].x - p1[j].x) +||| 21 1.0 * (p1[i].y - p1[j].y) * (p1[i].y - p1[j].y));||| 22 }||| 23 int main() {||| 24 scanf(""%d%d"", &n, &m);||| 25 for (int i = 1; i <= n; ++i) scanf(""%d%d"", &p1[i].x, &p1[i].y), p1[i].id = i;||| 26 if (n == 3) {||| 27 double tmp[3];||| 28 ans = dis(1, 2) + dis(2, 3) + dis(3, 1);||| 29 for (int i = 1, j = 0; i <= 3; ++i) {||| 30 if (i != m) tmp[++j] = dis(i, m);||| 31 }||| 32 ans -= max(tmp[1], tmp[2]);||| 33 printf(""%lf\n"", ans);||| 34 return 0;||| 35 }||| 36 sort(p1 + 1, p1 + n + 1, cmp);||| 37 for (int i = 1; i <= n; ++i) p1[i].rnk = i;||| 38 p = 0;||| 39 for (int i = 2; i < n; ++i) ok[i] = check(p1[i - 1], p1[i], p1[i + 1]);||| 40 for (int i = 2; i < n; ++i)||| 41 if (!ok[i - 1] && !ok[i] && !ok[i + 1]) p = i;||| 42 if (!p && !ok[2])||| 43 p = 1;||| 44 else if (!p)||| 45 p = n;||| 46 p1[p].rnk = n + 1;||| 47 sort(p1 + 1, p1 + n + 1, cmp1);||| 48 for (int i = 1; i <= n; ++i)||| 49 if (p1[i].id == m) s = i;||| 50 if (p != s) {||| 51 ans = min(dis(s, n - 1) + dis(n - 1, 1) + dis(1, n),||| 52 dis(s, 1) + dis(1, n - 1) + dis(n - 1, n));||| 53 for (int i = s; i < n - 1; ++i) {||| 54 tot = min(||| 55 dis(s, i) + dis(i, 1) + dis(1, n) + dis(n, i + 1) + dis(i + 1, n - 1),||| 56 dis(s, 1) + dis(1, i) + dis(i, n) + dis(n, i + 1) +||| 57 dis(i + 1, n - 1));||| 58 ans = min(ans, tot);||| 59 }||| 60 for (int i = 2; i <= s; ++i) {||| 61 tot = min(dis(s, i) + dis(n - 1, i) + dis(n - 1, n) + dis(n, i - 1) +||| 62 dis(i - 1, 1),||| 63 dis(s, n - 1) + dis(n - 1, i) + dis(i, n) + dis(n, i - 1) +||| 64 dis(i - 1, 1));||| 65 ans = min(ans, tot);||| 66 }||| 67 } else||| 68 ans = dis(1, n - 1) + min(dis(1, n), dis(n - 1, n));||| 69 printf(""%lf\n"", ans);||| 70 return 0;||| 71 }||| "	50 if (s != n) {
72	74	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Tp>||| 4 void read(Tp &num) {||| 5 num = 0;||| 6 auto f = 1;||| 7 char c = getchar();||| 8 while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar();||| 9 while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar();||| 10 num *= f;||| 11 }||| 12 template <typename Tp, typename... etc>||| 13 void read(Tp &num, etc &...more) {||| 14 read(num);||| 15 read(more...);||| 16 }||| 17 const int MAX = 1E9;||| 18 int d1, d2, d3, d4, mid;||| 19 int main() {||| 20 printf(""? %d %d\n"", 1, MAX);||| 21 fflush(stdout);||| 22 scanf(""%d"", &d1);||| 23 printf(""? %d %d\n"", 1, 1);||| 24 fflush(stdout);||| 25 scanf(""%d"", &d2);||| 26 mid = (MAX - d1 + d2 + 1) / 2;||| 27 printf(""? %d %d\n"", MAX, mid);||| 28 fflush(stdout);||| 29 scanf(""%d"", &d3);||| 30 printf(""? %d %d\n"", 1, mid);||| 31 fflush(stdout);||| 32 scanf(""%d"", &d4);||| 33 printf(""! %d %d %d %d\n"", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4));||| 34 fflush(stdout);||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Tp>||| 4 void read(Tp &num) {||| 5 num = 0;||| 6 auto f = 1;||| 7 char c = getchar();||| 8 while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar();||| 9 while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar();||| 10 num *= f;||| 11 }||| 12 template <typename Tp, typename... etc>||| 13 void read(Tp &num, etc &...more) {||| 14 read(num);||| 15 read(more...);||| 16 }||| 17 const int MAX = 10;||| 18 int d1, d2, d3, d4, mid;||| 19 int main() {||| 20 printf(""? %d %d\n"", 1, MAX);||| 21 fflush(stdout);||| 22 scanf(""%d"", &d1);||| 23 printf(""? %d %d\n"", 1, 1);||| 24 fflush(stdout);||| 25 scanf(""%d"", &d2);||| 26 mid = (MAX - d1 + d2 + 1) / 2;||| 27 printf(""? %d %d\n"", MAX, mid);||| 28 fflush(stdout);||| 29 scanf(""%d"", &d3);||| 30 printf(""? %d %d\n"", 1, mid);||| 31 fflush(stdout);||| 32 scanf(""%d"", &d4);||| 33 printf(""! %d %d %d %d\n"", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4));||| 34 fflush(stdout);||| 35 }||| "	17 const int MAX = 1E9;
72	140	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Tp>||| 4 void read(Tp &num) {||| 5 num = 0;||| 6 auto f = 1;||| 7 char c = getchar();||| 8 while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar();||| 9 while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar();||| 10 num *= f;||| 11 }||| 12 template <typename Tp, typename... etc>||| 13 void read(Tp &num, etc &...more) {||| 14 read(num);||| 15 read(more...);||| 16 }||| 17 const int MAX = 1E9;||| 18 int d1, d2, d3, d4, mid;||| 19 int main() {||| 20 printf(""? %d %d\n"", 1, MAX);||| 21 fflush(stdout);||| 22 scanf(""%d"", &d1);||| 23 printf(""? %d %d\n"", 1, 1);||| 24 fflush(stdout);||| 25 scanf(""%d"", &d2);||| 26 mid = (MAX - d1 + d2 + 1) / 2;||| 27 printf(""? %d %d\n"", MAX, mid);||| 28 fflush(stdout);||| 29 scanf(""%d"", &d3);||| 30 printf(""? %d %d\n"", 1, mid);||| 31 fflush(stdout);||| 32 scanf(""%d"", &d4);||| 33 printf(""! %d %d %d %d\n"", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4));||| 34 fflush(stdout);||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Tp>||| 4 void read(Tp &num) {||| 5 num = 0;||| 6 auto f = 1;||| 7 char c = getchar();||| 8 while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar();||| 9 while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar();||| 10 num *= f;||| 11 }||| 12 template <typename Tp, typename... etc>||| 13 void read(Tp &num, etc &...more) {||| 14 read(num);||| 15 read(more...);||| 16 }||| 17 const int MAX = 1E9;||| 18 int d1, d2, d3, d4, mid;||| 19 int main() {||| 20 printf(""? %d %d\n"", 1, MAX);||| 21 fflush(stdout);||| 22 scanf(""%d"", &d1);||| 23 printf(""? %d %d\n"", 1, 1);||| 24 fflush(stdout);||| 25 scanf(""%d"", &d2);||| 26 mid = (MAX - d1 + d2 + 1) / 2;||| 27 printf(""? %d %d\n"", MAX, mid);||| 28 fflush(stdout);||| 29 scanf(""%d"", &d3);||| 30 printf(""? %d %d\n"", 1, mid);||| 31 fflush(stdout);||| 32 scanf(""%d"", &d4);||| 33 printf(""! %d %d %d %d\n"", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - 1));||| 34 fflush(stdout);||| 35 }||| "	"33 printf(""! %d %d %d %d\n"", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4));"
72	146	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int query(int x, int y) {||| 4 printf(""? %d %d\n"", x, y);||| 5 fflush(stdout);||| 6 int ans;||| 7 scanf(""%d"", &ans);||| 8 return ans;||| 9 }||| 10 int dis11;||| 11 inline int calcly() {||| 12 int L = 1, R = 1e9, ans = 1;||| 13 while (L <= R) {||| 14 int mid = L + R >> 1;||| 15 if (query(1, mid) != dis11 - (mid - 1))||| 16 ans = mid, R = mid - 1;||| 17 else||| 18 L = mid + 1;||| 19 }||| 20 return ans - 1;||| 21 }||| 22 int main() {||| 23 dis11 = query(1, 1);||| 24 int ly = calcly();||| 25 int lx = dis11 + 2 - ly;||| 26 int rx = query(1e9, 1) - ly + 1;||| 27 int ry = query(1, 1e9) - lx + 1;||| 28 rx = 1e9 - rx;||| 29 ry = 1e9 - ry;||| 30 printf(""! %d %d %d %d\n"", lx, ly, rx, ry);||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int query(int x, int y) {||| 4 printf(""? %d %d\n"", x, y);||| 5 fflush(stdout);||| 6 int ans;||| 7 scanf(""%d"", &ans);||| 8 return ans;||| 9 }||| 10 int dis11;||| 11 inline int calcly() {||| 12 int L = 1, R = 1e9, ans = 1;||| 13 while (L <= R) {||| 14 int mid = L + R >> 1;||| 15 if (query(1, mid) != dis11 - (mid - 1))||| 16 ans = mid, R = mid - 1;||| 17 else||| 18 L = mid + 1;||| 19 }||| 20 return ans - 1;||| 21 }||| 22 int main() {||| 23 dis11 = query(1, 1);||| 24 int ly = calcly();||| 25 int lx = dis11 + 2 - ly;||| 26 int rx = query(1e9, 1) - ly + 1;||| 27 int ry = query(1, 1e9) - lx + 1;||| 28 rx = 1e9 - rx;||| 29 ry = 1e9 - ry;||| 30 printf(""! %d %d %d %d\n"", lx, rx, ly, ry);||| 31 }||| "	"30 printf(""! %d %d %d %d\n"", lx, ly, rx, ry);"
72	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long INF = 1e9;||| 5 const long long N = 1e9;||| 6 long long query(long long x, long long y) {||| 7 cout << ""? "" << x << "" "" << y << endl;||| 8 long long o;||| 9 cin >> o;||| 10 return o;||| 11 }||| 12 int main() {||| 13 ios_base::sync_with_stdio(false);||| 14 cin.tie(0);||| 15 cout.tie(0);||| 16 ;||| 17 long long p = query(1, 1);||| 18 long long l = 2, r = N;||| 19 long long ans = 0;||| 20 while (l <= r) {||| 21 long long m = (l + r) / 2;||| 22 if (query(m, 1) == p - m + 1) {||| 23 ans = m;||| 24 l = m + 1;||| 25 } else {||| 26 r = m - 1;||| 27 }||| 28 }||| 29 long long fx = ans, fy = p - ans + 2;||| 30 long long q = query(N, 1);||| 31 long long sx = N - (q - fy + 1), ss = fy;||| 32 long long lp = query(N, N);||| 33 long long tx = sx, ty = 2 * N - (lp + tx);||| 34 cout << ""! "" << fx << "" "" << fy << "" "" << tx << "" "" << ty << endl;||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long INF = 1e9;||| 5 const long long N = 1e9;||| 6 long long query(long long x, long long y) {||| 7 cout << ""? "" << x << "" "" << y << endl;||| 8 long long o;||| 9 cin >> o;||| 10 return o;||| 11 }||| 12 int main() {||| 13 ios_base::sync_with_stdio(false);||| 14 cin.tie(0);||| 15 cout.tie(0);||| 16 ;||| 17 long long p = query(1, 1);||| 18 long long l = 2, r = N;||| 19 long long ans = 0;||| 20 while (l <= r) {||| 21 long long m = (l + r) / 2;||| 22 if (query(m, 1) == p - m + 1) {||| 23 ans = m;||| 24 l = m + 1;||| 25 } else {||| 26 r = m - 1;||| 27 }||| 28 }||| 29 long long fx = ans, fy = p - ans + 2;||| 30 long long q = query(1, N);||| 31 long long sx = N - (q - fy + 1), ss = fy;||| 32 long long lp = query(N, N);||| 33 long long tx = sx, ty = 2 * N - (lp + tx);||| 34 cout << ""! "" << fx << "" "" << fy << "" "" << tx << "" "" << ty << endl;||| 35 return 0;||| 36 }||| "	30 long long q = query(N, 1);
72	18	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static const int edge = 1000 * 1000 * 1000;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cout << ""? 1 1"" << endl;||| 7 int a;||| 8 cin >> a;||| 9 cout << ""? 1000000000 1"" << endl;||| 10 int b;||| 11 cin >> b;||| 12 cout << ""? 1 1000000000"" << endl;||| 13 int c;||| 14 cin >> c;||| 15 cout << ""? 1000000000 1000000000"" << endl;||| 16 int d;||| 17 cin >> d;||| 18 int mid = (1 + a + edge - b) / 2;||| 19 auto ask = [&](int x) {||| 20 if (x < 0 || x > edge) return 2 * edge + 5;||| 21 cout << ""? "" << x << "" 1"" << endl;||| 22 int y;||| 23 cin >> y;||| 24 return y;||| 25 };||| 26 int y1 = min({ask(mid - 1), ask(mid), ask(mid + 1)}) + 1;||| 27 int x1 = (a + 2) - y1;||| 28 int x2 = edge - b + (y1 - 1);||| 29 int y2 = edge - c + (x1 - 1);||| 30 cout << ""! "" << x1 << "" "" << y1 << "" "" << x2 << "" "" << y2 << endl;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static const int edge = 1000 * 1000 * 1000;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cout << ""? 1 1"" << endl;||| 7 int a;||| 8 cin >> a;||| 9 cout << ""? 1000000000 1"" << endl;||| 10 int b;||| 11 cin >> b;||| 12 cout << ""? 1 1000000000"" << endl;||| 13 int c;||| 14 cin >> c;||| 15 cout << ""? 1000000000 1000000000"" << endl;||| 16 int d;||| 17 cin >> d;||| 18 int mid = (1 + a + edge - b) / 2;||| 19 auto ask = [&](int x) {||| 20 if (x < 0 || x > edge) return 2 * edge + 5;||| 21 cout << ""? "" << x << "" 1"" << endl;||| 22 int y;||| 23 cin >> y;||| 24 return y;||| 25 };||| 26 int y1 = min({ask(mid - 1), ask(mid), ask(mid + 1)}) + 1;||| 27 int x1 = (a + 2) - y1;||| 28 int x2 = edge - b + (y1 - 1);||| 29 int y2 = edge - c + (x1 - 1);||| 30 cout << ""| "" << x1 << "" "" << y1 << "" "" << x2 << "" "" << y2 << endl;||| 31 }||| "	"30 cout << ""! "" << x1 << "" "" << y1 << "" "" << x2 << "" "" << y2 << endl;"
72	81	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long query(int x, int y) {||| 4 cout << ""? "" << x << "" "" << y << endl;||| 5 long long ans;||| 6 cin >> ans;||| 7 if (ans == -1) exit(0);||| 8 return ans;||| 9 }||| 10 int main() {||| 11 ios::sync_with_stdio(false);||| 12 if (0) freopen(""data.in"", ""r"", stdin);||| 13 long long base = query(1, 1);||| 14 long long min_dis;||| 15 const long long bound = 1e9;||| 16 long long l = 1, r = bound;||| 17 while (l < r - 1) {||| 18 int mid = (l + r) / 2;||| 19 long long ans = query(mid, 1);||| 20 if ((base - ans) == (mid - 1)) {||| 21 l = mid;||| 22 min_dis = ans;||| 23 } else {||| 24 r = mid;||| 25 }||| 26 }||| 27 long long right_down = query(bound, 1);||| 28 long long right_up = query(bound, bound);||| 29 long long x1, y1, x2, y2;||| 30 y1 = min_dis + 1;||| 31 x1 = base - min_dis + 1;||| 32 x2 = bound - (right_down - min_dis);||| 33 y2 = bound - (right_up - (bound - x2));||| 34 cout << ""! "" << x1 << "" "" << y1 << "" "" << x2 << "" "" << y2 << endl;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long query(int x, int y) {||| 4 cout << ""? "" << x << "" "" << y << endl;||| 5 long long ans;||| 6 cin >> ans;||| 7 if (ans == -1) exit(0);||| 8 return ans;||| 9 }||| 10 int main() {||| 11 ios::sync_with_stdio(false);||| 12 if (1) freopen(""data.in"", ""r"", stdin);||| 13 long long base = query(1, 1);||| 14 long long min_dis;||| 15 const long long bound = 1e9;||| 16 long long l = 1, r = bound;||| 17 while (l < r - 1) {||| 18 int mid = (l + r) / 2;||| 19 long long ans = query(mid, 1);||| 20 if ((base - ans) == (mid - 1)) {||| 21 l = mid;||| 22 min_dis = ans;||| 23 } else {||| 24 r = mid;||| 25 }||| 26 }||| 27 long long right_down = query(bound, 1);||| 28 long long right_up = query(bound, bound);||| 29 long long x1, y1, x2, y2;||| 30 y1 = min_dis + 1;||| 31 x1 = base - min_dis + 1;||| 32 x2 = bound - (right_down - min_dis);||| 33 y2 = bound - (right_up - (bound - x2));||| 34 cout << ""! "" << x1 << "" "" << y1 << "" "" << x2 << "" "" << y2 << endl;||| 35 }||| "	"12 if (0) freopen(""data.in"", ""r"", stdin);"
72	128	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e9;||| 4 int ask(int x, int y) {||| 5 cout << ""? "" << x << "" "" << y << endl;||| 6 cout.flush();||| 7 cin >> x;||| 8 return x;||| 9 }||| 10 void answerit(int x1, int y1, int x2, int y2) {||| 11 cout << ""! "" << min(x1, x2) << "" "" << min(y1, y2) << "" "" << max(x1, x2) << "" ""||| 12 << max(y1, y2) << endl;||| 13 }||| 14 int main() {||| 15 int L = ask(1, 1), R = ask(N, 1), q = 1, ql, qr;||| 16 if (L > R)||| 17 ql = L - R + 1, qr = N;||| 18 else||| 19 ql = 1, qr = N - (R - L);||| 20 int mid = (ql + qr) / 2;||| 21 int upL = ask(mid, 1);||| 22 int x1 = L - upL + 1, y1 = upL + 1, x2 = N - (R - upL), y2 = N - ask(mid, N);||| 23 answerit(x1, y1, x2, y2);||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e9;||| 4 int ask(int x, int y) {||| 5 cout << ""? "" << x << "" "" << y << endl;||| 6 cout.flush();||| 7 cin >> x;||| 8 return x;||| 9 }||| 10 void answerit(int x1, int y1, int x2, int y2) {||| 11 cout << ""! "" << min(x1, x2) << "" "" << min(y1, y2) << "" "" << max(x1, x2) << "" ""||| 12 << max(y1, y2) << endl;||| 13 }||| 14 int main() {||| 15 int L = ask(1, 1), R = ask(N, 1), q = 1, ql, qr;||| 16 if (L > R)||| 17 ql = R - L + 1, qr = N;||| 18 else||| 19 ql = 1, qr = N - (R - L);||| 20 int mid = (ql + qr) / 2;||| 21 int upL = ask(mid, 1);||| 22 int x1 = L - upL + 1, y1 = upL + 1, x2 = N - (R - upL), y2 = N - ask(mid, N);||| 23 answerit(x1, y1, x2, y2);||| 24 return 0;||| 25 }||| "	17 ql = L - R + 1, qr = N;
74	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int ans[1003];||| 5 int arr[1003];||| 6 int sum_mask[1000003 * 14];||| 7 vector<int> v[2];||| 8 vector<int> loop;||| 9 void print(bool is_ok) {||| 10 cout << (is_ok ? ""YES"" : ""NO"") << '\n';||| 11 if (!is_ok) exit(0);||| 12 cout << ans[0];||| 13 for (int i = 1; i < n; ++i) cout << "" "" << ans[i];||| 14 cout << '\n';||| 15 exit(0);||| 16 }||| 17 void input() {||| 18 cin >> n;||| 19 for (int i = 0; i < n; ++i) {||| 20 cin >> arr[i];||| 21 int is_odd = arr[i] & 1;||| 22 v[is_odd].push_back(arr[i]);||| 23 }||| 24 }||| 25 void solve() {||| 26 sort(arr, arr + n);||| 27 for (int i = 0; i < n - 1; ++i) {||| 28 if (arr[i] == arr[i + 1]) {||| 29 for (int j = 0; j < n; ++j) ans[j] = arr[j];||| 30 ans[i] = 0;||| 31 print(true);||| 32 }||| 33 }||| 34 if (!v[0].empty()) {||| 35 if (v[0].size() >= 3)||| 36 loop = {v[0][0], v[0][1], v[0][2]};||| 37 else if (v[1].size() >= 2)||| 38 loop = {v[0][0], v[1][0], v[1][1]};||| 39 else||| 40 print(false);||| 41 ans[0] = (loop[0] + loop[1] - loop[2]) / 2;||| 42 ans[1] = (loop[1] + loop[2] - loop[0]) / 2;||| 43 ans[2] = (loop[2] + loop[0] - loop[1]) / 2;||| 44 int idx = 3;||| 45 for (int i = 0; i < n; ++i) {||| 46 bool skip = 0;||| 47 for (int j = 0; j < 3; ++j)||| 48 if (arr[i] == loop[j]) {||| 49 skip = 1;||| 50 break;||| 51 }||| 52 if (!skip) ans[idx++] = arr[i] - ans[0];||| 53 }||| 54 print(true);||| 55 }||| 56 int m = min(n, 26);||| 57 int set1 = -1, set2 = -1;||| 58 for (int mask = 0; mask < (1 << m); ++mask)||| 59 if (__builtin_popcount(mask) == m / 2) {||| 60 int tmp_sum = 0;||| 61 for (int j = 0; j < m; ++j)||| 62 if ((mask >> j) & 1) tmp_sum += v[1][j];||| 63 if (sum_mask[tmp_sum]) {||| 64 set1 = sum_mask[tmp_sum];||| 65 set2 = mask;||| 66 break;||| 67 }||| 68 sum_mask[tmp_sum] = mask;||| 69 }||| 70 if (set1 == -1) print(false);||| 71 int common = set1 & set2;||| 72 set1 ^= common;||| 73 set2 ^= common;||| 74 vector<int> sums1, sums2;||| 75 for (int i = 0; i < m; ++i) {||| 76 if ((set1 >> i) & 1) sums1.push_back(v[1][i]);||| 77 if ((set2 >> i) & 1) sums2.push_back(v[1][i]);||| 78 }||| 79 for (int i = 0; i < sums1.size(); ++i) {||| 80 loop.push_back(sums1[i]);||| 81 loop.push_back(sums2[i]);||| 82 }||| 83 ans[0] = 0;||| 84 for (int i = 1; i < loop.size(); ++i) ans[i] = loop[i - 1] - ans[i - 1];||| 85 int idx = loop.size();||| 86 for (int i = 0; i < n; ++i) {||| 87 if (i >= m || !(((set1 | set2) >> i) & 1)) ans[idx++] = v[1][i] - ans[0];||| 88 }||| 89 print(true);||| 90 }||| 91 int main() {||| 92 ios_base::sync_with_stdio(false);||| 93 cin.tie(NULL);||| 94 cout.tie(NULL);||| 95 input();||| 96 solve();||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int ans[1003];||| 5 int arr[1003];||| 6 int sum_mask[1000003 * 14];||| 7 vector<int> v[2];||| 8 vector<int> loop;||| 9 void print(bool is_ok) {||| 10 cout << (is_ok ? ""YES"" : ""NO"") << '\n';||| 11 if (!is_ok) exit(0);||| 12 cout << ans[0];||| 13 for (int i = 1; i < n; ++i) cout << "" "" << ans[i];||| 14 cout << '\n';||| 15 exit(0);||| 16 }||| 17 void input() {||| 18 cin >> n;||| 19 for (int i = 0; i < n; ++i) {||| 20 cin >> arr[i];||| 21 int is_odd = arr[i] & 1;||| 22 v[is_odd].push_back(arr[i]);||| 23 }||| 24 }||| 25 void solve() {||| 26 sort(arr, arr + n);||| 27 for (int i = 0; i < n - 1; ++i) {||| 28 if (arr[i] == arr[i + 1]) {||| 29 for (int j = 0; j < n; ++j) ans[j] = arr[j];||| 30 ans[i] = 0;||| 31 print(true);||| 32 }||| 33 }||| 34 if (!v[0].empty()) {||| 35 if (v[0].size() >= 3)||| 36 loop = {v[0][0], v[0][1], v[0][2]};||| 37 else if (v[1].size() >= 2)||| 38 loop = {v[0][0], v[1][0], v[1][1]};||| 39 else||| 40 print(false);||| 41 ans[0] = (loop[0] + loop[1] - loop[2]) / 2;||| 42 ans[1] = (loop[1] + loop[2] - loop[0]) / 2;||| 43 ans[2] = (loop[2] + loop[0] - loop[1]) / 2;||| 44 int idx = 3;||| 45 for (int i = 0; i < n; ++i) {||| 46 bool skip = 0;||| 47 for (int j = 0; j < 3; ++j)||| 48 if (arr[i] == loop[j]) {||| 49 skip = 1;||| 50 break;||| 51 }||| 52 if (!skip) ans[i] = arr[i] - ans[0];||| 53 }||| 54 print(true);||| 55 }||| 56 int m = min(n, 26);||| 57 int set1 = -1, set2 = -1;||| 58 for (int mask = 0; mask < (1 << m); ++mask)||| 59 if (__builtin_popcount(mask) == m / 2) {||| 60 int tmp_sum = 0;||| 61 for (int j = 0; j < m; ++j)||| 62 if ((mask >> j) & 1) tmp_sum += v[1][j];||| 63 if (sum_mask[tmp_sum]) {||| 64 set1 = sum_mask[tmp_sum];||| 65 set2 = mask;||| 66 break;||| 67 }||| 68 sum_mask[tmp_sum] = mask;||| 69 }||| 70 if (set1 == -1) print(false);||| 71 int common = set1 & set2;||| 72 set1 ^= common;||| 73 set2 ^= common;||| 74 vector<int> sums1, sums2;||| 75 for (int i = 0; i < m; ++i) {||| 76 if ((set1 >> i) & 1) sums1.push_back(v[1][i]);||| 77 if ((set2 >> i) & 1) sums2.push_back(v[1][i]);||| 78 }||| 79 for (int i = 0; i < sums1.size(); ++i) {||| 80 loop.push_back(sums1[i]);||| 81 loop.push_back(sums2[i]);||| 82 }||| 83 ans[0] = 0;||| 84 for (int i = 1; i < loop.size(); ++i) ans[i] = loop[i - 1] - ans[i - 1];||| 85 int idx = loop.size();||| 86 for (int i = 0; i < n; ++i) {||| 87 if (i >= m || !(((set1 | set2) >> i) & 1)) ans[idx++] = v[1][i] - ans[0];||| 88 }||| 89 print(true);||| 90 }||| 91 int main() {||| 92 ios_base::sync_with_stdio(false);||| 93 cin.tie(NULL);||| 94 cout.tie(NULL);||| 95 input();||| 96 solve();||| 97 return 0;||| 98 }||| "	52 if (!skip) ans[idx++] = arr[i] - ans[0];
74	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t[1005];||| 4 bool ps;||| 5 map<int, int> m;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> t[i];||| 11 if (t[i] % 2 == 0) {||| 12 ps = 1;||| 13 }||| 14 }||| 15 sort(t + 1, t + n + 1);||| 16 if (n == 2 && t[1] != t[2] ||||| 17 n == 3 && (t[1] + t[2] + t[3]) % 2 && t[1] != t[2] && t[2] != t[3]) {||| 18 cout << ""NO\n"";||| 19 return 0;||| 20 }||| 21 for (int i = 1; i < n; i++) {||| 22 if (t[i] == t[i + 1]) {||| 23 cout << ""YES\n"";||| 24 cout << 0 << "" "";||| 25 for (int j = 1; j <= n; j++) {||| 26 if (i != j) {||| 27 cout << t[j] << "" "";||| 28 }||| 29 }||| 30 return 0;||| 31 }||| 32 }||| 33 if (ps) {||| 34 for (int i = 2; i <= n; i++) {||| 35 if (t[i] % 2 == 0) {||| 36 swap(t[i], t[1]);||| 37 }||| 38 }||| 39 if (t[2] % 2 != t[3] % 2) {||| 40 if (t[2] % 2 == t[4] % 2) {||| 41 swap(t[3], t[4]);||| 42 } else {||| 43 swap(t[2], t[4]);||| 44 }||| 45 }||| 46 int sum = (t[1] + t[2] + t[3]) / 2, ert = sum - t[1];||| 47 cout << ""YES\n"";||| 48 cout << sum - t[1] << "" "" << sum - t[2] << "" "" << sum - t[3] << "" "";||| 49 for (int i = 4; i <= n; i++) {||| 50 cout << t[i] - ert << "" "";||| 51 }||| 52 cout << ""\n"";||| 53 return 0;||| 54 }||| 55 int n2 = min(n, 26), db = n2 / 2;||| 56 for (int i = 0; i < (1 << n2); i++) {||| 57 if (__builtin_popcount(i) == db) {||| 58 int sum = 0;||| 59 for (int j = 0; j < n2; j++) {||| 60 if (i & (1 << j)) {||| 61 sum += t[j + 1];||| 62 }||| 63 }||| 64 if (m.find(sum) != m.end()) {||| 65 int x = m[sum], y = i, koz = x & y;||| 66 x -= koz, y -= koz;||| 67 vector<int> xx, yy, xy;||| 68 for (int i = 0; i < n2; i++) {||| 69 if (x & (1 << i)) {||| 70 xx.push_back(t[i + 1]);||| 71 }||| 72 if (y & (1 << i)) {||| 73 yy.push_back(t[i + 1]);||| 74 }||| 75 }||| 76 for (int i = 0; i < xx.size(); i++) {||| 77 xy.push_back(xx[i]), xy.push_back(yy[i]);||| 78 }||| 79 int el = 0;||| 80 cout << ""YES\n"";||| 81 cout << el << "" "";||| 82 for (int i = 1; i < xy.size(); i++) {||| 83 cout << xy[i] - el << "" "";||| 84 el = xy[i] - el;||| 85 }||| 86 for (int i = 0; i < n; i++) {||| 87 if (i >= n2 || ((x & (1 << i)) == 0 && (y & (1 << i)) == 0)) {||| 88 cout << t[i + 1] << "" "";||| 89 }||| 90 }||| 91 cout << ""\n"";||| 92 return 0;||| 93 }||| 94 m[sum] = i;||| 95 }||| 96 }||| 97 cout << ""NO\n"";||| 98 return 0;||| 99 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, t[1005];||| 4 bool ps;||| 5 map<int, int> m;||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> t[i];||| 11 if (t[i] % 2 == 0) {||| 12 ps = 1;||| 13 }||| 14 }||| 15 sort(t + 1, t + n + 1);||| 16 if (n == 2 && t[1] != t[2] ||||| 17 n == 3 && (t[1] + t[2] + t[3]) % 2 && t[1] != t[2] && t[2] != t[3]) {||| 18 cout << ""NO\n"";||| 19 return 0;||| 20 }||| 21 for (int i = 1; i < n; i++) {||| 22 if (t[i] == t[i + 1]) {||| 23 cout << ""YES\n"";||| 24 cout << 0 << "" "";||| 25 for (int j = 1; j <= n; j++) {||| 26 if (i != j) {||| 27 cout << t[j] << "" "";||| 28 }||| 29 }||| 30 return 0;||| 31 }||| 32 }||| 33 if (ps) {||| 34 for (int i = 2; i <= n; i++) {||| 35 if (t[i] % 2 == 0) {||| 36 swap(t[i], t[1]);||| 37 }||| 38 }||| 39 if (t[2] % 2 != t[3] % 2) {||| 40 if (t[2] % 2 == t[4] % 2) {||| 41 swap(t[3], t[4]);||| 42 } else {||| 43 swap(t[2], t[4]);||| 44 }||| 45 }||| 46 int sum = (t[1] + t[2] + t[3]) / 2, ert = sum - t[1];||| 47 cout << ""YES\n"";||| 48 cout << sum - t[1] << "" "" << sum - t[2] << "" "" << sum - t[3] << "" "";||| 49 for (int i = 4; i <= n; i++) {||| 50 cout << t[i] - ert << "" "";||| 51 }||| 52 cout << ""\n"";||| 53 return 0;||| 54 }||| 55 int n2 = min(n, 26), db = n2 / 2;||| 56 for (int i = 0; i < (1 << n2); i++) {||| 57 if (__builtin_popcount(i) == db) {||| 58 int sum = 0;||| 59 for (int j = 0; j < n2; j++) {||| 60 if (i & (1 << j)) {||| 61 sum += t[j + 1];||| 62 }||| 63 }||| 64 if (m.find(sum) != m.end()) {||| 65 int x = m[sum], y = i, koz = x & y;||| 66 x -= koz, y -= koz;||| 67 vector<int> xx, yy, xy;||| 68 for (int i = 0; i < n2; i++) {||| 69 if (x & (1 << i)) {||| 70 xx.push_back(t[i + 1]);||| 71 }||| 72 if (y & (1 << i)) {||| 73 yy.push_back(t[i + 1]);||| 74 }||| 75 }||| 76 for (int i = 0; i < xx.size(); i++) {||| 77 xy.push_back(xx[i]), xy.push_back(yy[i]);||| 78 }||| 79 int el = 0;||| 80 cout << ""YES\n"";||| 81 cout << el << "" "";||| 82 for (int i = 1; i < xy.size(); i++) {||| 83 cout << xy[i] - el << "" "";||| 84 el = xy[i] - el;||| 85 }||| 86 for (int i = 0; i < n; i++) {||| 87 if (i >= n2 || ((x & (1 << i)) == 0 && (y & (1 << i)) == 0)) {||| 88 cout << t[i] << "" "";||| 89 }||| 90 }||| 91 cout << ""\n"";||| 92 return 0;||| 93 }||| 94 m[sum] = i;||| 95 }||| 96 }||| 97 cout << ""NO\n"";||| 98 return 0;||| 99 }||| "	"88 cout << t[i + 1] << "" "";"
74	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const unsigned gen_seed =||| 5 std::chrono::system_clock::now().time_since_epoch().count();||| 6 std::mt19937_64 gen(gen_seed);||| 7 int n;||| 8 std::vector<int> b;||| 9 std::vector<int> a;||| 10 void yes() {||| 11 printf(""YES\n"");||| 12 for (auto x : a) printf(""%d "", x);||| 13 exit(0);||| 14 }||| 15 void no() {||| 16 printf(""NO\n"");||| 17 exit(0);||| 18 }||| 19 void fill(int f) {||| 20 for (int i = f; i < n; i++) {||| 21 a.push_back(b[i] - a[0]);||| 22 }||| 23 }||| 24 int w[15 * 1000000];||| 25 void get(int mask1, int mask2) {||| 26 int sm = mask1 & mask2;||| 27 mask1 ^= sm;||| 28 mask2 ^= sm;||| 29 int l = __builtin_popcount(mask1);||| 30 std::vector<int> a1, a2;||| 31 std::vector<int> fr;||| 32 for (int i = 0; i < min(30, n); i++) {||| 33 if ((1 << i) & mask1)||| 34 a1.push_back(b[i]);||| 35 else if ((1 << i) & mask2)||| 36 a2.push_back(b[i]);||| 37 else||| 38 fr.push_back(b[i]);||| 39 }||| 40 for (int i = 2 * l; i < min(30, n); i++) b[i] = fr[i - 2 * l];||| 41 std::vector<int> zp;||| 42 for (int i = 0; i < l; i++) {||| 43 zp.push_back(a1[i]);||| 44 zp.push_back(a2[i]);||| 45 }||| 46 int last = 0;||| 47 for (int i = 0; i < 2 * l; i++) {||| 48 a.push_back(zp[i] - last);||| 49 last = a.back();||| 50 }||| 51 fill(2 * l);||| 52 yes();||| 53 }||| 54 int main() {||| 55 scanf(""%d"", &n);||| 56 b.resize(n);||| 57 for (int i = 0; i < n; i++) scanf(""%d"", &b[i]);||| 58 for (int i = 0; i < n; i++)||| 59 if (b[i] % 2 == 0) swap(b[0], b[i]);||| 60 if (n == 2) {||| 61 if (b[0] != b[1])||| 62 no();||| 63 else {||| 64 a.push_back(0);||| 65 a.push_back(b[0]);||| 66 yes();||| 67 }||| 68 }||| 69 if (b[0] % 2 == 0) {||| 70 if (n >= 4) {||| 71 if (b[1] % 2 == b[3] % 2) swap(b[2], b[3]);||| 72 if (b[2] % 2 == b[3] % 2) swap(b[1], b[3]);||| 73 }||| 74 if (b[1] % 2 == b[2] % 2) {||| 75 int sum = b[0] + b[1] + b[2];||| 76 for (int i = 0; i < 3; i++) a.push_back((sum - 2 * b[i]) / 2);||| 77 fill(3);||| 78 yes();||| 79 }||| 80 if (b[2] == b[1]) swap(b[2], b[0]);||| 81 if (b[2] == b[0]) swap(b[1], b[2]);||| 82 if (b[0] == b[1]) {||| 83 a.push_back(0);||| 84 a.push_back(b[0]);||| 85 fill(2);||| 86 yes();||| 87 }||| 88 }||| 89 int tbit = min(n / 2, 14);||| 90 const int A = 1000000;||| 91 for (int i = 0; i < tbit * A + 1; i++) w[i] = -1;||| 92 for (int mask = 0; mask < 1 << (min(n, 28)); mask++) {||| 93 if (__builtin_popcount(mask) == tbit) {||| 94 int cur = 0;||| 95 for (int bit = 0; bit < min(n, 28); bit++)||| 96 if (mask & (1 << bit)) cur += b[bit];||| 97 if (w[cur] != -1)||| 98 get(w[cur], mask);||| 99 else||| 100 w[cur] = mask;||| 101 }||| 102 }||| 103 no();||| 104 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 const unsigned gen_seed =||| 5 std::chrono::system_clock::now().time_since_epoch().count();||| 6 std::mt19937_64 gen(gen_seed);||| 7 int n;||| 8 std::vector<int> b;||| 9 std::vector<int> a;||| 10 void yes() {||| 11 printf(""YES\n"");||| 12 for (auto x : a) printf(""%d "", x);||| 13 exit(0);||| 14 }||| 15 void no() {||| 16 printf(""NO\n"");||| 17 exit(0);||| 18 }||| 19 void fill(int f) {||| 20 for (int i = f; i < n; i++) {||| 21 a.push_back(b[i] - a[0]);||| 22 }||| 23 }||| 24 int w[15 * 1000000];||| 25 void get(int mask1, int mask2) {||| 26 int sm = mask1 & mask2;||| 27 mask1 ^= sm;||| 28 mask2 ^= sm;||| 29 int l = __builtin_popcount(mask1);||| 30 std::vector<int> a1, a2;||| 31 std::vector<int> fr;||| 32 for (int i = 0; i < min(30, n); i++) {||| 33 if ((1 << i) & mask1)||| 34 a1.push_back(b[i]);||| 35 else if ((1 << i) & mask2)||| 36 a2.push_back(b[i]);||| 37 else||| 38 fr.push_back(b[i]);||| 39 }||| 40 for (int i = 2 * l; i < min(30, n); i++) b[i] = fr[i - 2 * l];||| 41 std::vector<int> zp;||| 42 for (int i = 0; i < l; i++) {||| 43 zp.push_back(a1[i]);||| 44 zp.push_back(a2[i]);||| 45 }||| 46 int last = 0;||| 47 for (int i = 0; i < 2 * l; i++) {||| 48 a.push_back(zp[i] - last);||| 49 last = a.back();||| 50 }||| 51 fill(2 * l);||| 52 yes();||| 53 }||| 54 int main() {||| 55 scanf(""%d"", &n);||| 56 b.resize(n);||| 57 for (int i = 0; i < n; i++) scanf(""%d"", &b[i]);||| 58 for (int i = 0; i < n; i++)||| 59 if (b[i] % 2 == 0) swap(b[0], b[i]);||| 60 if (n == 2) {||| 61 if (b[0] != b[1])||| 62 no();||| 63 else {||| 64 a.push_back(0);||| 65 a.push_back(b[0]);||| 66 yes();||| 67 }||| 68 }||| 69 if (b[0] % 2 == 0) {||| 70 if (n >= 4) {||| 71 if (b[1] % 2 == b[3] % 2) swap(b[2], b[3]);||| 72 if (b[2] % 2 == b[3] % 2) swap(b[1], b[3]);||| 73 }||| 74 if (b[1] % 2 == b[2] % 2) {||| 75 int sum = b[0] + b[1] + b[2];||| 76 for (int i = 0; i < 3; i++) a.push_back((sum - 2 * b[i]) / 2);||| 77 fill(4);||| 78 yes();||| 79 }||| 80 if (b[2] == b[1]) swap(b[2], b[0]);||| 81 if (b[2] == b[0]) swap(b[1], b[2]);||| 82 if (b[0] == b[1]) {||| 83 a.push_back(0);||| 84 a.push_back(b[0]);||| 85 fill(2);||| 86 yes();||| 87 }||| 88 }||| 89 int tbit = min(n / 2, 14);||| 90 const int A = 1000000;||| 91 for (int i = 0; i < tbit * A + 1; i++) w[i] = -1;||| 92 for (int mask = 0; mask < 1 << (min(n, 28)); mask++) {||| 93 if (__builtin_popcount(mask) == tbit) {||| 94 int cur = 0;||| 95 for (int bit = 0; bit < min(n, 28); bit++)||| 96 if (mask & (1 << bit)) cur += b[bit];||| 97 if (w[cur] != -1)||| 98 get(w[cur], mask);||| 99 else||| 100 w[cur] = mask;||| 101 }||| 102 }||| 103 no();||| 104 }||| "	77 fill(3);
74	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int ans[1003];||| 5 int arr[1003];||| 6 int sum_mask[1000003 * 14];||| 7 vector<int> v[2];||| 8 vector<int> loop;||| 9 void print(bool is_ok) {||| 10 cout << (is_ok ? ""YES"" : ""NO"") << '\n';||| 11 if (!is_ok) exit(0);||| 12 cout << ans[0];||| 13 for (int i = 1; i < n; ++i) cout << "" "" << ans[i];||| 14 cout << '\n';||| 15 exit(0);||| 16 }||| 17 void input() {||| 18 cin >> n;||| 19 for (int i = 0; i < n; ++i) {||| 20 cin >> arr[i];||| 21 int is_odd = arr[i] & 1;||| 22 v[is_odd].push_back(arr[i]);||| 23 }||| 24 }||| 25 void solve() {||| 26 sort(arr, arr + n);||| 27 for (int i = 0; i < n - 1; ++i) {||| 28 if (arr[i] == arr[i + 1]) {||| 29 for (int j = 0; j < n; ++j) ans[j] = arr[j];||| 30 ans[i] = 0;||| 31 print(true);||| 32 }||| 33 }||| 34 if (!v[0].empty()) {||| 35 if (v[0].size() >= 3)||| 36 loop = {v[0][0], v[0][1], v[0][2]};||| 37 else if (v[1].size() >= 2)||| 38 loop = {v[0][0], v[1][0], v[1][1]};||| 39 else||| 40 print(false);||| 41 ans[0] = (loop[0] + loop[1] - loop[2]) / 2;||| 42 ans[1] = (loop[1] + loop[2] - loop[0]) / 2;||| 43 ans[2] = (loop[2] + loop[0] - loop[1]) / 2;||| 44 int idx = 3;||| 45 for (int i = 0; i < n; ++i) {||| 46 bool skip = 0;||| 47 for (int j = 0; j < 3; ++j)||| 48 if (arr[i] == loop[j]) {||| 49 skip = 1;||| 50 break;||| 51 }||| 52 if (!skip) ans[idx++] = arr[i] - ans[0];||| 53 }||| 54 print(true);||| 55 }||| 56 int m = min(n, 26);||| 57 int set1 = -1, set2 = -1;||| 58 for (int mask = 0; mask < (1 << m); ++mask)||| 59 if (__builtin_popcount(mask) == m / 2) {||| 60 int tmp_sum = 0;||| 61 for (int j = 0; j < m; ++j)||| 62 if ((mask >> j) & 1) tmp_sum += arr[j];||| 63 if (sum_mask[tmp_sum]) {||| 64 set1 = sum_mask[tmp_sum];||| 65 set2 = mask;||| 66 break;||| 67 }||| 68 sum_mask[tmp_sum] = mask;||| 69 }||| 70 if (set1 == -1) print(false);||| 71 int common = set1 & set2;||| 72 set1 ^= common;||| 73 set2 ^= common;||| 74 vector<int> sums1, sums2;||| 75 for (int i = 0; i < m; ++i) {||| 76 if ((set1 >> i) & 1) sums1.push_back(arr[i]);||| 77 if ((set2 >> i) & 1) sums2.push_back(arr[i]);||| 78 }||| 79 for (int i = 0; i < sums1.size(); ++i) {||| 80 loop.push_back(sums1[i]);||| 81 loop.push_back(sums2[i]);||| 82 }||| 83 ans[0] = 0;||| 84 for (int i = 1; i < loop.size(); ++i) ans[i] = loop[i - 1] - ans[i - 1];||| 85 int idx = loop.size();||| 86 for (int i = 0; i < n; ++i) {||| 87 if (i >= m || !(((set1 | set2) >> i) & 1)) ans[idx++] = arr[i] - ans[0];||| 88 }||| 89 print(true);||| 90 }||| 91 int main() {||| 92 ios_base::sync_with_stdio(false);||| 93 cin.tie(NULL);||| 94 cout.tie(NULL);||| 95 input();||| 96 solve();||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int ans[1003];||| 5 int arr[1003];||| 6 int sum_mask[1000003 * 14];||| 7 vector<int> v[2];||| 8 vector<int> loop;||| 9 void print(bool is_ok) {||| 10 cout << (is_ok ? ""YES"" : ""NO"") << '\n';||| 11 if (!is_ok) exit(0);||| 12 cout << ans[0];||| 13 for (int i = 1; i < n; ++i) cout << "" "" << ans[i];||| 14 cout << '\n';||| 15 exit(0);||| 16 }||| 17 void input() {||| 18 cin >> n;||| 19 for (int i = 0; i < n; ++i) {||| 20 cin >> arr[i];||| 21 int is_odd = arr[i] & 1;||| 22 v[is_odd].push_back(arr[i]);||| 23 }||| 24 }||| 25 void solve() {||| 26 sort(arr, arr + n);||| 27 for (int i = 0; i < n - 1; ++i) {||| 28 if (arr[i] == arr[i + 1]) {||| 29 for (int j = 0; j < n; ++j) ans[j] = arr[j];||| 30 ans[i] = 0;||| 31 print(true);||| 32 }||| 33 }||| 34 if (!v[0].empty()) {||| 35 if (v[0].size() >= 3)||| 36 loop = {v[0][0], v[0][1], v[0][2]};||| 37 else if (v[1].size() >= 2)||| 38 loop = {v[0][0], v[1][0], v[1][1]};||| 39 else||| 40 print(false);||| 41 ans[0] = (loop[0] + loop[1] - loop[2]) / 2;||| 42 ans[1] = (loop[1] + loop[2] - loop[0]) / 2;||| 43 ans[2] = (loop[2] + loop[0] - loop[1]) / 2;||| 44 int idx = 3;||| 45 for (int i = 0; i < n; ++i) {||| 46 bool skip = 0;||| 47 for (int j = 0; j < 3; ++j)||| 48 if (arr[i] == loop[j]) {||| 49 skip = 1;||| 50 break;||| 51 }||| 52 if (!skip) ans[i] = arr[i] - ans[0];||| 53 }||| 54 print(true);||| 55 }||| 56 int m = min(n, 26);||| 57 int set1 = -1, set2 = -1;||| 58 for (int mask = 0; mask < (1 << m); ++mask)||| 59 if (__builtin_popcount(mask) == m / 2) {||| 60 int tmp_sum = 0;||| 61 for (int j = 0; j < m; ++j)||| 62 if ((mask >> j) & 1) tmp_sum += arr[j];||| 63 if (sum_mask[tmp_sum]) {||| 64 set1 = sum_mask[tmp_sum];||| 65 set2 = mask;||| 66 break;||| 67 }||| 68 sum_mask[tmp_sum] = mask;||| 69 }||| 70 if (set1 == -1) print(false);||| 71 int common = set1 & set2;||| 72 set1 ^= common;||| 73 set2 ^= common;||| 74 vector<int> sums1, sums2;||| 75 for (int i = 0; i < m; ++i) {||| 76 if ((set1 >> i) & 1) sums1.push_back(arr[i]);||| 77 if ((set2 >> i) & 1) sums2.push_back(arr[i]);||| 78 }||| 79 for (int i = 0; i < sums1.size(); ++i) {||| 80 loop.push_back(sums1[i]);||| 81 loop.push_back(sums2[i]);||| 82 }||| 83 ans[0] = 0;||| 84 for (int i = 1; i < loop.size(); ++i) ans[i] = loop[i - 1] - ans[i - 1];||| 85 int idx = loop.size();||| 86 for (int i = 0; i < n; ++i) {||| 87 if (i >= m || !(((set1 | set2) >> i) & 1)) ans[idx++] = arr[i] - ans[0];||| 88 }||| 89 print(true);||| 90 }||| 91 int main() {||| 92 ios_base::sync_with_stdio(false);||| 93 cin.tie(NULL);||| 94 cout.tie(NULL);||| 95 input();||| 96 solve();||| 97 return 0;||| 98 }||| "	52 if (!skip) ans[idx++] = arr[i] - ans[0];
75	107	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""unroll-loops"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC target(""avx2"")||| 5 using namespace std;||| 6 void solve() {||| 7 long long n;||| 8 cin >> n;||| 9 vector<long long> arr(n);||| 10 for (long long i = 0; i < n; i++) cin >> arr[i];||| 11 long long l = 0, r = 0;||| 12 for (l = 0; l < n - 1; l++)||| 13 if (arr[l] >= arr[l + 1]) break;||| 14 for (r = 0; r < n - 1; r++)||| 15 if (arr[n - 1 - r] >= arr[n - 2 - r]) break;||| 16 if (l % 2 == 0 || r % 2 == 0)||| 17 cout << ""Alice\n"";||| 18 else||| 19 cout << ""Bob\n"";||| 20 return;||| 21 }||| 22 int32_t main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 long long tc = 1;||| 27 for (long long i = 0; i < tc; i++) solve();||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""unroll-loops"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC target(""avx2"")||| 5 using namespace std;||| 6 void solve() {||| 7 long long n;||| 8 cin >> n;||| 9 vector<long long> arr(n);||| 10 for (long long i = 0; i < n; i++) cin >> arr[i];||| 11 long long l = 0, r = 0;||| 12 for (l = 0; l < n - 1; l++)||| 13 if (arr[l] > arr[l + 1]) break;||| 14 for (r = 0; r < n - 1; r++)||| 15 if (arr[n - 1 - r] > arr[n - 2 - r]) break;||| 16 if (l % 2 == 0 || r % 2 == 0)||| 17 cout << ""Alice\n"";||| 18 else||| 19 cout << ""Bob\n"";||| 20 return;||| 21 }||| 22 int32_t main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 long long tc = 1;||| 27 for (long long i = 0; i < tc; i++) solve();||| 28 }||| "	13 if (arr[l] >= arr[l + 1]) break;
75	195	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> v(n);||| 7 for (int i = 0; i < n; i++) {||| 8 cin >> v[i];||| 9 }||| 10 vector<int> v1 = {v[0]};||| 11 for (int i = 1; i < v.size(); i++) {||| 12 if (v[i] <= v1.back()) {||| 13 break;||| 14 }||| 15 v1.push_back(v[i]);||| 16 }||| 17 vector<int> v2 = {v.back()};||| 18 for (int i = n - 2; i >= 0; i--) {||| 19 if (v[i] <= v2.back()) {||| 20 break;||| 21 }||| 22 v2.push_back(v[i]);||| 23 }||| 24 if (v1.size() % 2 == 1 || v2.size() % 2 == 1) {||| 25 cout << ""Alice\n"";||| 26 return 0;||| 27 }||| 28 cout << ""Bob"";||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> v(n);||| 7 for (int i = 0; i < n; i++) {||| 8 cin >> v[i];||| 9 }||| 10 vector<int> v1 = {v[0]};||| 11 for (int i = 1; i < v.size(); i++) {||| 12 if (v[i] <= v1.back()) {||| 13 break;||| 14 }||| 15 v1.push_back(v[i]);||| 16 }||| 17 vector<int> v2 = {v.back()};||| 18 for (int i = n - 2; i >= 0; i--) {||| 19 if (v[i] <= v1.back()) {||| 20 break;||| 21 }||| 22 v2.push_back(v[i]);||| 23 }||| 24 if (v1.size() % 2 == 1 || v2.size() % 2 == 1) {||| 25 cout << ""Alice\n"";||| 26 return 0;||| 27 }||| 28 cout << ""Bob"";||| 29 return 0;||| 30 }||| "	19 if (v[i] <= v2.back()) {
75	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int n;||| 5 vector<int> v, ans_front, ans_back;||| 6 bool dfs(int left = 0, int right = 0, int last = -1) {||| 7 if (left > n - 1 - right) return 0;||| 8 if (v[left] > last && v[n - 1 - right] <= last) {||| 9 int now = ans_front[left];||| 10 now = min(now, n - right - left);||| 11 if (now % 2) return 1;||| 12 return 0;||| 13 }||| 14 if (v[left] <= last && v[n - 1 - right] > last) {||| 15 int now = ans_back[n - 1 - right];||| 16 now = min(now, n - right - left);||| 17 if (now % 2) return 1;||| 18 return 0;||| 19 }||| 20 if (v[left] > last && v[n - 1 - right] > last) {||| 21 if (v[left] >= v[n - 1 - right]) {||| 22 int now = ans_front[left];||| 23 now = min(now, n - left - right);||| 24 if (now % 2) return 1;||| 25 return !dfs(left, right + 1, v[n - 1 - right]);||| 26 }||| 27 int now = ans_back[n - 1 - right];||| 28 now = min(now, n - right - left);||| 29 if (now % 2) return 1;||| 30 return !dfs(left + 1, right, v[left]);||| 31 }||| 32 return 0;||| 33 }||| 34 int main() {||| 35 cin >> n;||| 36 v.resize(n);||| 37 ans_front.resize(n);||| 38 ans_back.resize(n);||| 39 for (int i = 0; i < n; ++i) {||| 40 cin >> v[i];||| 41 }||| 42 int pos = n - 1;||| 43 ans_front[n - 1] = 1;||| 44 for (int i = n - 2; i >= 0; --i) {||| 45 if (v[i] >= v[i + 1]) pos = i;||| 46 ans_front[i] = pos - i + 1;||| 47 }||| 48 pos = 0;||| 49 ans_back[0] = 1;||| 50 for (int i = 1; i < n; ++i) {||| 51 if (v[i] >= v[i - 1]) pos = i;||| 52 ans_back[i] = i - pos + 1;||| 53 }||| 54 if (dfs())||| 55 cout << ""Alice\n"";||| 56 else||| 57 cout << ""Bob\n"";||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int n;||| 5 vector<int> v, ans_front, ans_back;||| 6 bool dfs(int left = 0, int right = 0, int last = -1) {||| 7 if (left > n - 1 - right) return 0;||| 8 if (v[left] > last && v[n - 1 - right] <= last) {||| 9 int now = ans_front[left];||| 10 now = min(now, n - right - left);||| 11 if (now % 2) return 1;||| 12 return 0;||| 13 }||| 14 if (v[left] <= last && v[n - 1 - right] > last) {||| 15 int now = ans_back[n - 1 - right];||| 16 now = min(now, n - right - left);||| 17 if (now % 2) return 1;||| 18 return 0;||| 19 }||| 20 if (v[left] > last && v[n - 1 - right] > last) {||| 21 if (v[left] >= v[n - 1 - right]) {||| 22 int now = ans_front[left];||| 23 now = min(now, n - left - right);||| 24 if (now % 2) return 1;||| 25 return dfs(left, right + 1, v[n - 1 - right]);||| 26 }||| 27 int now = ans_back[n - 1 - right];||| 28 now = min(now, n - right - left);||| 29 if (now % 2) return 1;||| 30 return dfs(left + 1, right, v[left]);||| 31 }||| 32 return 0;||| 33 }||| 34 int main() {||| 35 cin >> n;||| 36 v.resize(n);||| 37 ans_front.resize(n);||| 38 ans_back.resize(n);||| 39 for (int i = 0; i < n; ++i) {||| 40 cin >> v[i];||| 41 }||| 42 int pos = n - 1;||| 43 ans_front[n - 1] = 1;||| 44 for (int i = n - 2; i >= 0; --i) {||| 45 if (v[i] >= v[i + 1]) pos = i;||| 46 ans_front[i] = pos - i + 1;||| 47 }||| 48 pos = 0;||| 49 ans_back[0] = 1;||| 50 for (int i = 1; i < n; ++i) {||| 51 if (v[i] >= v[i - 1]) pos = i;||| 52 ans_back[i] = i - pos + 1;||| 53 }||| 54 if (dfs())||| 55 cout << ""Alice\n"";||| 56 else||| 57 cout << ""Bob\n"";||| 58 }||| "	25 return !dfs(left, right + 1, v[n - 1 - right]);
75	209	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 vector<long long> back;||| 9 vector<long long> front;||| 10 int prev = -1;||| 11 map<long long, long long> posf, posb;||| 12 for (int i = 0; i < n; i++) {||| 13 if (prev < a[i]) {||| 14 front.push_back(a[i]);||| 15 prev = a[i];||| 16 posf[a[i]] = i;||| 17 } else {||| 18 break;||| 19 }||| 20 }||| 21 prev = -1;||| 22 for (int i = n - 1; i >= 0; i--) {||| 23 if (prev < a[i]) {||| 24 back.push_back(a[i]);||| 25 prev = a[i];||| 26 posb[a[i]] = n - 1 - i;||| 27 } else {||| 28 break;||| 29 }||| 30 }||| 31 if (front.size() == n || back.size() == n) {||| 32 cout << ""Alice"";||| 33 return 0;||| 34 }||| 35 deque<long long> deq;||| 36 for (auto &i : a) deq.push_back(i);||| 37 int parity = 0;||| 38 prev = -1;||| 39 while (true) {||| 40 if (deq.size() == 1) {||| 41 if (parity)||| 42 cout << ""Bob"";||| 43 else||| 44 cout << ""Alice"";||| 45 return 0;||| 46 }||| 47 long long ff = deq.front();||| 48 long long bb = deq.back();||| 49 if (ff <= prev && bb <= prev) {||| 50 if (parity)||| 51 cout << ""Alice"";||| 52 else||| 53 cout << ""Bob"";||| 54 return 0;||| 55 }||| 56 if (ff > bb) {||| 57 int ch = front.size() - posf[ff];||| 58 if (ch % 2) {||| 59 if (parity)||| 60 cout << ""Bob"";||| 61 else||| 62 cout << ""Alice"";||| 63 return 0;||| 64 } else if (bb > prev) {||| 65 prev = bb;||| 66 deq.pop_back();||| 67 } else {||| 68 if (parity)||| 69 cout << ""Alice"";||| 70 else||| 71 cout << ""Bob"";||| 72 return 0;||| 73 }||| 74 } else {||| 75 int ch = back.size() - posb[bb];||| 76 if (ch % 2) {||| 77 if (parity)||| 78 cout << ""Bob"";||| 79 else||| 80 cout << ""Alice"";||| 81 return 0;||| 82 } else if (ff > prev) {||| 83 prev = ff;||| 84 deq.pop_front();||| 85 } else {||| 86 if (parity)||| 87 cout << ""Alice"";||| 88 else||| 89 cout << ""Bob"";||| 90 return 0;||| 91 }||| 92 }||| 93 parity = 1 - parity;||| 94 }||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 vector<long long> back;||| 9 vector<long long> front;||| 10 int prev = -1;||| 11 map<long long, long long> posf, posb;||| 12 for (int i = 0; i < n; i++) {||| 13 if (prev < a[i]) {||| 14 front.push_back(a[i]);||| 15 prev = a[i];||| 16 posf[a[i]] = i;||| 17 } else {||| 18 break;||| 19 }||| 20 }||| 21 prev = -1;||| 22 for (int i = n - 1; i >= 0; i--) {||| 23 if (prev < a[i]) {||| 24 back.push_back(a[i]);||| 25 prev = a[i];||| 26 posb[a[i]] = n - 1 - i;||| 27 } else {||| 28 break;||| 29 }||| 30 }||| 31 if (front.size() == n || back.size() == n) {||| 32 cout << ""Alice"";||| 33 return 0;||| 34 }||| 35 deque<long long> deq;||| 36 for (auto &i : a) deq.push_back(i);||| 37 int parity = 0;||| 38 prev = -1;||| 39 while (true) {||| 40 if (deq.size() == 1) {||| 41 if (parity)||| 42 cout << ""Bob"";||| 43 else||| 44 cout << ""Alice"";||| 45 return 0;||| 46 }||| 47 long long ff = deq.front();||| 48 long long bb = deq.back();||| 49 if (ff <= prev && bb <= prev) {||| 50 if (parity)||| 51 cout << ""Alice"";||| 52 else||| 53 cout << ""Bob"";||| 54 return 0;||| 55 }||| 56 if (ff > bb) {||| 57 int ch = front.size() - posf[ff];||| 58 if (ch % 2) {||| 59 if (parity)||| 60 cout << ""Bob"";||| 61 else||| 62 cout << ""Alice"";||| 63 return 0;||| 64 } else if (bb > prev) {||| 65 prev = bb;||| 66 deq.pop_back();||| 67 } else {||| 68 if (parity)||| 69 cout << ""Bob"";||| 70 else||| 71 cout << ""Alice"";||| 72 return 0;||| 73 }||| 74 } else {||| 75 int ch = back.size() - posb[bb];||| 76 if (ch % 2) {||| 77 if (parity)||| 78 cout << ""Bob"";||| 79 else||| 80 cout << ""Alice"";||| 81 return 0;||| 82 } else if (ff > prev) {||| 83 prev = ff;||| 84 deq.pop_front();||| 85 } else {||| 86 if (parity)||| 87 cout << ""Alice"";||| 88 else||| 89 cout << ""Bob"";||| 90 return 0;||| 91 }||| 92 }||| 93 parity = 1 - parity;||| 94 }||| 95 }||| "	"69 cout << ""Alice"";"
75	21	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 using namespace std;||| 5 using ll = long long;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 void print(vector<T> v) {||| 9 for (T i : v) cout << i << "" "";||| 10 cout << '\n';||| 11 }||| 12 template <typename T>||| 13 void print(vector<vector<T>>& v) {||| 14 for (vector<T>& vv : v) {||| 15 for (T& i : vv) cout << i << "" "";||| 16 cout << '\n';||| 17 }||| 18 }||| 19 template <typename T>||| 20 void print(T&& t) {||| 21 cout << t << '\n';||| 22 }||| 23 template <typename T, typename... Args>||| 24 void print(T&& t, Args&&... args) {||| 25 cout << t << "" "";||| 26 print(forward<Args>(args)...);||| 27 }||| 28 template <typename T>||| 29 istream& operator>>(istream& is, vector<T>& v) {||| 30 for (auto& i : v) is >> i;||| 31 return is;||| 32 }||| 33 template <typename T>||| 34 ostream& operator<<(ostream& os, vector<T>& v) {||| 35 for (auto& i : v) os << i << ' ';||| 36 return os;||| 37 }||| 38 void __print(int x) { cerr << x; }||| 39 void __print(long x) { cerr << x; }||| 40 void __print(long long x) { cerr << x; }||| 41 void __print(unsigned x) { cerr << x; }||| 42 void __print(unsigned long x) { cerr << x; }||| 43 void __print(unsigned long long x) { cerr << x; }||| 44 void __print(float x) { cerr << x; }||| 45 void __print(double x) { cerr << x; }||| 46 void __print(long double x) { cerr << x; }||| 47 void __print(char x) { cerr << '\'' << x << '\''; }||| 48 void __print(const char* x) { cerr << '\""' << x << '\""'; }||| 49 void __print(const string& x) { cerr << '\""' << x << '\""'; }||| 50 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 51 template <typename T, typename V>||| 52 void __print(const pair<T, V>& x) {||| 53 cerr << '{';||| 54 __print(x.first);||| 55 cerr << ',';||| 56 __print(x.second);||| 57 cerr << '}';||| 58 }||| 59 template <typename T>||| 60 void __print(const T& x) {||| 61 int f = 0;||| 62 cerr << '{';||| 63 for (auto& i : x) cerr << (f++ ? "","" : """"), __print(i);||| 64 cerr << ""}"";||| 65 }||| 66 void _print() { cerr << ""]\n""; }||| 67 template <typename T, typename... V>||| 68 void _print(T t, V... v) {||| 69 __print(t);||| 70 if (sizeof...(v)) cerr << "", "";||| 71 _print(v...);||| 72 }||| 73 void loop() {||| 74 ll n;||| 75 cin >> n;||| 76 vector<ll> a(n);||| 77 cin >> a;||| 78 if (n == 1) {||| 79 print(""Alice"");||| 80 return;||| 81 }||| 82 vector<ll> inc, dec;||| 83 inc.push_back(a[0]);||| 84 for (ll i = 0; i < n - 1; i++) {||| 85 if (a[i] < a[i + 1]) {||| 86 inc.push_back(a[i + 1]);||| 87 } else||| 88 break;||| 89 }||| 90 dec.push_back(a[n - 1]);||| 91 for (ll i = n - 1; i > 0; i--) {||| 92 if (a[i] < a[i - 1]) {||| 93 dec.push_back(a[i - 1]);||| 94 } else||| 95 break;||| 96 }||| 97 if (dec.size() % 2) {||| 98 print(""Alice"");||| 99 return;||| 100 } else if ((inc.size() - 1 + dec.size()) % 2 == 0) {||| 101 print(""Alice"");||| 102 return;||| 103 }||| 104 print(""Bob"");||| 105 }||| 106 int32_t main() {||| 107 ios_base::sync_with_stdio(false);||| 108 cin.tie(NULL);||| 109 cout.tie(NULL);||| 110 ll t;||| 111 t = 1;||| 112 while (t--) {||| 113 loop();||| 114 }||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma"")||| 4 using namespace std;||| 5 using ll = long long;||| 6 using ull = unsigned long long;||| 7 template <typename T>||| 8 void print(vector<T> v) {||| 9 for (T i : v) cout << i << "" "";||| 10 cout << '\n';||| 11 }||| 12 template <typename T>||| 13 void print(vector<vector<T>>& v) {||| 14 for (vector<T>& vv : v) {||| 15 for (T& i : vv) cout << i << "" "";||| 16 cout << '\n';||| 17 }||| 18 }||| 19 template <typename T>||| 20 void print(T&& t) {||| 21 cout << t << '\n';||| 22 }||| 23 template <typename T, typename... Args>||| 24 void print(T&& t, Args&&... args) {||| 25 cout << t << "" "";||| 26 print(forward<Args>(args)...);||| 27 }||| 28 template <typename T>||| 29 istream& operator>>(istream& is, vector<T>& v) {||| 30 for (auto& i : v) is >> i;||| 31 return is;||| 32 }||| 33 template <typename T>||| 34 ostream& operator<<(ostream& os, vector<T>& v) {||| 35 for (auto& i : v) os << i << ' ';||| 36 return os;||| 37 }||| 38 void __print(int x) { cerr << x; }||| 39 void __print(long x) { cerr << x; }||| 40 void __print(long long x) { cerr << x; }||| 41 void __print(unsigned x) { cerr << x; }||| 42 void __print(unsigned long x) { cerr << x; }||| 43 void __print(unsigned long long x) { cerr << x; }||| 44 void __print(float x) { cerr << x; }||| 45 void __print(double x) { cerr << x; }||| 46 void __print(long double x) { cerr << x; }||| 47 void __print(char x) { cerr << '\'' << x << '\''; }||| 48 void __print(const char* x) { cerr << '\""' << x << '\""'; }||| 49 void __print(const string& x) { cerr << '\""' << x << '\""'; }||| 50 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 51 template <typename T, typename V>||| 52 void __print(const pair<T, V>& x) {||| 53 cerr << '{';||| 54 __print(x.first);||| 55 cerr << ',';||| 56 __print(x.second);||| 57 cerr << '}';||| 58 }||| 59 template <typename T>||| 60 void __print(const T& x) {||| 61 int f = 0;||| 62 cerr << '{';||| 63 for (auto& i : x) cerr << (f++ ? "","" : """"), __print(i);||| 64 cerr << ""}"";||| 65 }||| 66 void _print() { cerr << ""]\n""; }||| 67 template <typename T, typename... V>||| 68 void _print(T t, V... v) {||| 69 __print(t);||| 70 if (sizeof...(v)) cerr << "", "";||| 71 _print(v...);||| 72 }||| 73 void loop() {||| 74 ll n;||| 75 cin >> n;||| 76 vector<ll> a(n);||| 77 cin >> a;||| 78 if (n == 1) {||| 79 print(""Alice"");||| 80 return;||| 81 }||| 82 vector<ll> inc, dec;||| 83 inc.push_back(a[0]);||| 84 for (ll i = 0; i < n - 1; i++) {||| 85 if (a[i] < a[i + 1]) {||| 86 inc.push_back(a[i + 1]);||| 87 } else||| 88 break;||| 89 }||| 90 dec.push_back(a[n - 1]);||| 91 for (ll i = n - 1; i > 0; i--) {||| 92 if (a[i] < a[i - 1]) {||| 93 dec.push_back(a[i - 1]);||| 94 } else||| 95 break;||| 96 }||| 97 if (dec.size() % 2) {||| 98 print(""Alice"");||| 99 return;||| 100 } else if ((inc.size() - 1 + dec.size()) % 2) {||| 101 print(""Alice"");||| 102 return;||| 103 }||| 104 print(""Bob"");||| 105 }||| 106 int32_t main() {||| 107 ios_base::sync_with_stdio(false);||| 108 cin.tie(NULL);||| 109 cout.tie(NULL);||| 110 ll t;||| 111 t = 1;||| 112 while (t--) {||| 113 loop();||| 114 }||| 115 }||| "	100 } else if ((inc.size() - 1 + dec.size()) % 2 == 0) {
75	112	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using P = pair<ll, ll>;||| 5 using PP = pair<ll, P>;||| 6 const ll n_ = 2e5 + 100, inf = 1e18 + 1, mod = 1e9 + 7, sqrtN = 320;||| 7 ll dy[4] = {-1, 0, 1, 0}, dx[4] = {0, 1, 0, -1};||| 8 ll n, m, k, tc = 1, a, b, c, sum, x, y, z, w, base, ans;||| 9 ll gcd(ll x, ll y) {||| 10 if (!y) return x;||| 11 return gcd(y, x % y);||| 12 }||| 13 void solve() {||| 14 cin >> n;||| 15 vector<ll> v(n);||| 16 vector<ll> A(n), B(n);||| 17 for (int i = 0; i < n; i++) cin >> v[i];||| 18 A[n - 1] = 1;||| 19 for (int i = n - 2; i >= 0; i--) {||| 20 if (v[i] < v[i + 1])||| 21 A[i] = A[i + 1] + 1;||| 22 else||| 23 A[i] = 1;||| 24 }||| 25 B[0] = 1;||| 26 for (int i = 1; i < n; i++) {||| 27 if (v[i] < v[i - 1])||| 28 B[i] = B[i - 1] + 1;||| 29 else||| 30 B[i] = 1;||| 31 }||| 32 x = 0, a = 0, b = n - 1;||| 33 ans = -1;||| 34 while (1) {||| 35 if (v[a] > v[b]) {||| 36 if (A[a] & 1)||| 37 break;||| 38 else if (v[b] > ans) {||| 39 ans = v[b];||| 40 b--;||| 41 } else {||| 42 x++;||| 43 break;||| 44 }||| 45 } else if (v[b] > v[a]) {||| 46 if (B[b] & 1)||| 47 break;||| 48 else if (v[a] > ans) {||| 49 ans = v[a];||| 50 a++;||| 51 } else {||| 52 x++;||| 53 break;||| 54 }||| 55 } else {||| 56 if ((A[a] & 1) == 0 && (B[b] & 1) == 0) x++;||| 57 break;||| 58 }||| 59 x++;||| 60 }||| 61 if (x & 1)||| 62 cout << ""Bob"";||| 63 else||| 64 cout << ""Alice"";||| 65 }||| 66 int main() {||| 67 ios_base::sync_with_stdio(0);||| 68 cin.tie(0), cout.tie(0);||| 69 while (tc--) solve();||| 70 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using P = pair<ll, ll>;||| 5 using PP = pair<ll, P>;||| 6 const ll n_ = 2e5 + 100, inf = 1e18 + 1, mod = 1e9 + 7, sqrtN = 320;||| 7 ll dy[4] = {-1, 0, 1, 0}, dx[4] = {0, 1, 0, -1};||| 8 ll n, m, k, tc = 1, a, b, c, sum, x, y, z, w, base, ans;||| 9 ll gcd(ll x, ll y) {||| 10 if (!y) return x;||| 11 return gcd(y, x % y);||| 12 }||| 13 void solve() {||| 14 cin >> n;||| 15 vector<ll> v(n);||| 16 vector<ll> A(n), B(n);||| 17 for (int i = 0; i < n; i++) cin >> v[i];||| 18 A[n - 1] = 1;||| 19 for (int i = n - 2; i >= 0; i--) {||| 20 if (v[i] < v[i + 1])||| 21 A[i] = A[i + 1] + 1;||| 22 else||| 23 A[i] = 1;||| 24 }||| 25 B[0] = 1;||| 26 for (int i = 1; i < n; i++) {||| 27 if (v[i] < v[i - 1])||| 28 B[i] = B[i - 1] + 1;||| 29 else||| 30 B[i] = 1;||| 31 }||| 32 x = 0, a = 0, b = n - 1;||| 33 ans = -1;||| 34 while (1) {||| 35 if (v[a] > v[b]) {||| 36 if (A[a] & 1)||| 37 break;||| 38 else if (B[b] > ans) {||| 39 ans = B[b];||| 40 b--;||| 41 } else {||| 42 x++;||| 43 break;||| 44 }||| 45 } else if (v[b] > v[a]) {||| 46 if (B[b] & 1)||| 47 break;||| 48 else if (v[a] > ans) {||| 49 ans = v[a];||| 50 a++;||| 51 } else {||| 52 x++;||| 53 break;||| 54 }||| 55 } else {||| 56 if ((A[a] & 1) == 0 && (B[b] & 1) == 0) x++;||| 57 break;||| 58 }||| 59 x++;||| 60 }||| 61 if (x & 1)||| 62 cout << ""Bob"";||| 63 else||| 64 cout << ""Alice"";||| 65 }||| 66 int main() {||| 67 ios_base::sync_with_stdio(0);||| 68 cin.tie(0), cout.tie(0);||| 69 while (tc--) solve();||| 70 }||| "	38 else if (v[b] > ans) {
75	120	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long M = 1e9 + 7;||| 4 long long power(long long a, long long b) {||| 5 long long r = 1;||| 6 long long o = a;||| 7 if (b <= 0) return 1;||| 8 while (b != 0) {||| 9 if (b % 2)||| 10 r = (r * o) % M, b--;||| 11 else {||| 12 b /= 2;||| 13 o = (o * o) % M;||| 14 }||| 15 }||| 16 return r;||| 17 }||| 18 void solve();||| 19 int main() {||| 20 ios_base::sync_with_stdio(false);||| 21 cin.tie(NULL);||| 22 cout.tie(NULL);||| 23 long long t = 1;||| 24 while (t--) {||| 25 solve();||| 26 cout << ""\n"";||| 27 }||| 28 return 0;||| 29 }||| 30 void solve() {||| 31 long long n;||| 32 cin >> n;||| 33 vector<long long> a(n);||| 34 for (int i = 0; i < n; i++) cin >> a[i];||| 35 long long p = n;||| 36 for (long long i = (1); i < (n); i++) {||| 37 if (a[i] <= a[i - 1]) {||| 38 p = i;||| 39 break;||| 40 }||| 41 }||| 42 long long d = n;||| 43 for (long long i = (n - 2); i >= (0); i--) {||| 44 if (a[i] <= a[i + 1]) {||| 45 d = n - i + 1;||| 46 break;||| 47 }||| 48 }||| 49 if (d % 2 || p % 2)||| 50 cout << ""Alice"";||| 51 else||| 52 cout << ""Bob"";||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long M = 1e9 + 7;||| 4 long long power(long long a, long long b) {||| 5 long long r = 1;||| 6 long long o = a;||| 7 if (b <= 0) return 1;||| 8 while (b != 0) {||| 9 if (b % 2)||| 10 r = (r * o) % M, b--;||| 11 else {||| 12 b /= 2;||| 13 o = (o * o) % M;||| 14 }||| 15 }||| 16 return r;||| 17 }||| 18 void solve();||| 19 int main() {||| 20 ios_base::sync_with_stdio(false);||| 21 cin.tie(NULL);||| 22 cout.tie(NULL);||| 23 long long t = 1;||| 24 while (t--) {||| 25 solve();||| 26 cout << ""\n"";||| 27 }||| 28 return 0;||| 29 }||| 30 void solve() {||| 31 long long n;||| 32 cin >> n;||| 33 vector<long long> a(n);||| 34 for (int i = 0; i < n; i++) cin >> a[i];||| 35 long long p = n;||| 36 for (long long i = (1); i < (n); i++) {||| 37 if (a[i] <= a[i - 1]) {||| 38 p = i;||| 39 break;||| 40 }||| 41 }||| 42 long long d = n;||| 43 for (long long i = (n - 2); i >= (0); i--) {||| 44 if (a[i] <= a[i + 1]) {||| 45 p = n - i + 1;||| 46 break;||| 47 }||| 48 }||| 49 if (d % 2 || p % 2)||| 50 cout << ""Alice"";||| 51 else||| 52 cout << ""Bob"";||| 53 }||| "	45 d = n - i + 1;
75	50	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 100;||| 4 int a[maxn];||| 5 int l, r;||| 6 int n;||| 7 inline void prework() {||| 8 int i = 1;||| 9 while (a[i + 1] > a[i]) i++;||| 10 l = i;||| 11 i = n;||| 12 while (a[i - 1] > a[i]) i--;||| 13 r = i;||| 14 }||| 15 bool solve(int i, int j, int player) {||| 16 if (a[i] == a[j]) {||| 17 if ((l - i + 1) & 1)||| 18 return player;||| 19 else if ((j - r + 1) & 1)||| 20 return player;||| 21 else||| 22 return player ^ 1;||| 23 } else if (a[i] > a[j]) {||| 24 if ((l - i + 1) & 1)||| 25 return player;||| 26 else||| 27 return solve(i, j - 1, player ^ 1);||| 28 } else if (a[i] < a[j]) {||| 29 if ((j - r + 1) & 1)||| 30 return player;||| 31 else||| 32 return solve(i + 1, j, player ^ 1);||| 33 }||| 34 }||| 35 int main() {||| 36 cin >> n;||| 37 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 38 prework();||| 39 if (solve(1, n, 1))||| 40 printf(""Alice\n"");||| 41 else||| 42 printf(""Bob\n"");||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 100;||| 4 int a[maxn];||| 5 int l, r;||| 6 int n;||| 7 inline void prework() {||| 8 int i = 1;||| 9 while (a[i + 1] > a[i]) i++;||| 10 l = i;||| 11 i = n;||| 12 while (a[i - 1] > a[i]) i--;||| 13 r = i;||| 14 }||| 15 bool solve(int i, int j, int player) {||| 16 if (a[i] == a[j]) {||| 17 if ((l - i + 1) & 1)||| 18 return player;||| 19 else if ((j - r + 1) & 1)||| 20 return player;||| 21 else||| 22 return player ^ 1;||| 23 } else if (a[i] > a[j]) {||| 24 if ((l - i + 1) & 1)||| 25 return player;||| 26 else||| 27 return solve(i, j - 1, player ^ 1);||| 28 } else if (a[i] < a[j]) {||| 29 if ((j - r + 1) & 1)||| 30 return player;||| 31 else||| 32 return solve(i + 1, j, player ^ 1);||| 33 }||| 34 }||| 35 int main() {||| 36 cin >> n;||| 37 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 38 prework();||| 39 if (solve(1, n, 1))||| 40 printf(""Alice\n"");||| 41 else||| 42 printf(""BOb\n"");||| 43 return 0;||| 44 }||| "	"42 printf(""Bob\n"");"
75	128	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 scanf(""%d"", &n);||| 6 vector<int> A(n);||| 7 for (int i = 0; i < n; ++i) {||| 8 cin >> A[i];||| 9 }||| 10 int leftLen = 1, rightLen = 1;||| 11 for (int i = 1; i < n; ++i) {||| 12 if (A[i] > A[i - 1])||| 13 ++leftLen;||| 14 else||| 15 break;||| 16 }||| 17 for (int i = n - 2; i >= 0; --i) {||| 18 if (A[i] > A[i + 1])||| 19 ++rightLen;||| 20 else||| 21 break;||| 22 }||| 23 (leftLen % 2 || rightLen % 2) ? printf(""Alice"") : printf(""Bob"");||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 scanf(""%d"", &n);||| 6 vector<int> A(n);||| 7 for (int i = 0; i < n; ++i) {||| 8 cin >> A[i];||| 9 }||| 10 int leftLen = 1, rightLen = 1;||| 11 for (int i = 1; i < n; ++i) {||| 12 if (A[i] > A[i - 1])||| 13 ++leftLen;||| 14 else||| 15 break;||| 16 }||| 17 for (int i = n - 2; i >= 0; --i) {||| 18 if (A[i] > A[i + 1])||| 19 ++rightLen;||| 20 else||| 21 break;||| 22 }||| 23 (leftLen % 1 || rightLen % 1) ? printf(""Alice"") : printf(""Bob"");||| 24 return 0;||| 25 }||| "	"23 (leftLen % 2 || rightLen % 2) ? printf(""Alice"") : printf(""Bob"");"
76	72	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 char ch;||| 5 int f = 1, x;||| 6 while (ch = getchar(), !isdigit(ch))||| 7 if (ch == '-') f = -1;||| 8 x = (ch ^ 48);||| 9 while (ch = getchar(), isdigit(ch)) x = (x << 3) + (x << 1) + (ch ^ 48);||| 10 return x * f;||| 11 }||| 12 inline void write(int x) {||| 13 if (x < 0) {||| 14 putchar('-');||| 15 write(-x);||| 16 return;||| 17 }||| 18 if (x > 9) write(x / 10);||| 19 putchar(x % 10 ^ 48);||| 20 }||| 21 inline void writ(int x, char p = '\n') {||| 22 write(x);||| 23 putchar(p);||| 24 }||| 25 int n, m, g[110][110];||| 26 int main() {||| 27 n = min(read(), 50), m = read();||| 28 for (int i = (1); i <= (m); ++i) {||| 29 int u = read(), v = read();||| 30 if (u <= n && v <= n) g[u][v] = g[v][u] = 1;||| 31 }||| 32 int ans[5];||| 33 for (ans[0] = 1; ans[0] <= n; ++ans[0])||| 34 for (ans[1] = ans[0] + 1; ans[1] <= n; ++ans[1])||| 35 for (ans[2] = ans[1] + 1; ans[2] <= n; ++ans[2])||| 36 for (ans[3] = ans[2] + 1; ans[3] <= n; ++ans[3])||| 37 for (ans[4] = ans[3] + 1; ans[4] <= n; ++ans[4]) {||| 38 int cnt = 0;||| 39 for (int i = (0); i <= (4); ++i)||| 40 for (int j = (i + 1); j <= (4); ++j) cnt += g[ans[i]][ans[j]];||| 41 if (cnt == 0 || cnt == 10) {||| 42 for (int i = (0); i <= (3); ++i) writ(ans[i], ' ');||| 43 writ(ans[4]);||| 44 return 0;||| 45 }||| 46 }||| 47 puts(""-1"");||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 char ch;||| 5 int f = 1, x;||| 6 while (ch = getchar(), !isdigit(ch))||| 7 if (ch == '-') f = -1;||| 8 x = (ch ^ 48);||| 9 while (ch = getchar(), isdigit(ch)) x = (x << 3) + (x << 1) + (ch ^ 48);||| 10 return x * f;||| 11 }||| 12 inline void write(int x) {||| 13 if (x < 0) {||| 14 putchar('-');||| 15 write(-x);||| 16 return;||| 17 }||| 18 if (x > 9) write(x / 10);||| 19 putchar(x % 10 ^ 48);||| 20 }||| 21 inline void writ(int x, char p = '\n') {||| 22 write(x);||| 23 putchar(p);||| 24 }||| 25 int n, m, g[110][110];||| 26 int main() {||| 27 n = min(read(), 50), m = read();||| 28 for (int i = (1); i <= (m); ++i) {||| 29 int u = read(), v = read();||| 30 if (u < n && v < n) g[u][v] = g[v][u] = 1;||| 31 }||| 32 int ans[5];||| 33 for (ans[0] = 1; ans[0] <= n; ++ans[0])||| 34 for (ans[1] = ans[0] + 1; ans[1] <= n; ++ans[1])||| 35 for (ans[2] = ans[1] + 1; ans[2] <= n; ++ans[2])||| 36 for (ans[3] = ans[2] + 1; ans[3] <= n; ++ans[3])||| 37 for (ans[4] = ans[3] + 1; ans[4] <= n; ++ans[4]) {||| 38 int cnt = 0;||| 39 for (int i = (0); i <= (4); ++i)||| 40 for (int j = (i + 1); j <= (4); ++j) cnt += g[ans[i]][ans[j]];||| 41 if (cnt == 0 || cnt == 10) {||| 42 for (int i = (0); i <= (3); ++i) writ(ans[i], ' ');||| 43 writ(ans[4]);||| 44 return 0;||| 45 }||| 46 }||| 47 puts(""-1"");||| 48 return 0;||| 49 }||| "	30 if (u <= n && v <= n) g[u][v] = g[v][u] = 1;
76	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 n = min(n, 50);||| 49 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {||| 50 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % n + 1;||| 51 if (check()) {||| 52 fl = 1;||| 53 break;||| 54 }||| 55 }||| 56 if (!fl)||| 57 puts(""-1"");||| 58 else||| 59 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 n = min(n, 50);||| 49 for (int tot = (1), __tot = (114514); tot <= __tot; ++tot) {||| 50 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % n + 1;||| 51 if (check()) {||| 52 fl = 1;||| 53 break;||| 54 }||| 55 }||| 56 if (!fl)||| 57 puts(""-1"");||| 58 else||| 59 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 60 }||| "	49 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {
76	37	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline bool Read(int &a) { return scanf(""%d"", &a) != EOF; }||| 4 inline bool Read(int &a, int &b) { return scanf(""%d%d"", &a, &b) != EOF; }||| 5 inline bool Read(int &a, int &b, int &c) {||| 6 return scanf(""%d%d%d"", &a, &b, &c) != EOF;||| 7 }||| 8 inline bool Read(int &a, int &b, int &c, int &d) {||| 9 return scanf(""%d%d%d%d"", &a, &b, &c, &d) != EOF;||| 10 }||| 11 const int INF = 0x3f3f3f3f;||| 12 const int maxn = 1e5 + 10;||| 13 long long g[50];||| 14 long long revg[50];||| 15 int N, M;||| 16 int d = 0;||| 17 bool dfs(bool connect, int u, int cnt, long long edges, long long tmp,||| 18 long long &ans) {||| 19 if (cnt == 5) {||| 20 ans = tmp;||| 21 return true;||| 22 }||| 23 long long e = edges;||| 24 while (e > 0) {||| 25 int v = __builtin_ctzll(e);||| 26 e ^= 1LL << v;||| 27 if (v == 0 || u == v) continue;||| 28 long long gv = connect ? g[v] : revg[v];||| 29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1LL << v), ans)) {||| 30 return true;||| 31 }||| 32 }||| 33 return false;||| 34 }||| 35 int Process() {||| 36 while (Read(N, M)) {||| 37 N = min(48, N);||| 38 memset(g, 0, sizeof(g));||| 39 for (int i = 1; i <= N; i++) {||| 40 revg[i] = ((1LL << (N + 1)) - 1) ^ (1LL << i);||| 41 }||| 42 for (int _i = 0; _i < M; _i++) {||| 43 int u, v;||| 44 Read(u, v);||| 45 if (u <= 48 && v <= 48 && u != v) {||| 46 g[u] |= 1LL << v;||| 47 g[v] |= 1LL << u;||| 48 revg[u] ^= 1LL << v;||| 49 revg[v] ^= 1LL << u;||| 50 }||| 51 }||| 52 long long ans;||| 53 bool bFound = false;||| 54 for (int i = 1; i <= N; i++) {||| 55 long long tmp = 1LL << i;||| 56 if (dfs(true, i, 1, g[i], tmp, ans)) {||| 57 bFound = true;||| 58 break;||| 59 }||| 60 if (dfs(false, i, 1, revg[i], tmp, ans)) {||| 61 bFound = true;||| 62 break;||| 63 }||| 64 }||| 65 if (bFound) {||| 66 for (int i = 1; i <= 48; i++) {||| 67 if (ans & (1LL << i)) {||| 68 printf(""%d "", i);||| 69 }||| 70 }||| 71 printf(""\n"");||| 72 } else {||| 73 printf(""-1\n"");||| 74 }||| 75 }||| 76 return 0;||| 77 }||| 78 int main() {||| 79 std::ios::sync_with_stdio(false);||| 80 return Process();||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline bool Read(int &a) { return scanf(""%d"", &a) != EOF; }||| 4 inline bool Read(int &a, int &b) { return scanf(""%d%d"", &a, &b) != EOF; }||| 5 inline bool Read(int &a, int &b, int &c) {||| 6 return scanf(""%d%d%d"", &a, &b, &c) != EOF;||| 7 }||| 8 inline bool Read(int &a, int &b, int &c, int &d) {||| 9 return scanf(""%d%d%d%d"", &a, &b, &c, &d) != EOF;||| 10 }||| 11 const int INF = 0x3f3f3f3f;||| 12 const int maxn = 1e5 + 10;||| 13 long long g[50];||| 14 long long revg[50];||| 15 int N, M;||| 16 int d = 0;||| 17 bool dfs(bool connect, int u, int cnt, long long edges, long long tmp,||| 18 long long &ans) {||| 19 if (cnt == 5) {||| 20 ans = tmp;||| 21 return true;||| 22 }||| 23 long long e = edges;||| 24 while (e > 0) {||| 25 int v = __builtin_ctzll(e);||| 26 e ^= 1LL << v;||| 27 if (v == 0 || u == v) continue;||| 28 long long gv = connect ? g[v] : revg[v];||| 29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1 << v), ans)) {||| 30 return true;||| 31 }||| 32 }||| 33 return false;||| 34 }||| 35 int Process() {||| 36 while (Read(N, M)) {||| 37 N = min(48, N);||| 38 memset(g, 0, sizeof(g));||| 39 for (int i = 1; i <= N; i++) {||| 40 revg[i] = ((1LL << (N + 1)) - 1) ^ (1 << i);||| 41 }||| 42 for (int _i = 0; _i < M; _i++) {||| 43 int u, v;||| 44 Read(u, v);||| 45 if (u <= 48 && v <= 48 && u != v) {||| 46 g[u] |= 1LL << v;||| 47 g[v] |= 1LL << u;||| 48 revg[u] ^= 1LL << v;||| 49 revg[v] ^= 1LL << u;||| 50 }||| 51 }||| 52 long long ans;||| 53 bool bFound = false;||| 54 for (int i = 1; i <= N; i++) {||| 55 long long tmp = 1LL << i;||| 56 if (dfs(true, i, 1, g[i], tmp, ans)) {||| 57 bFound = true;||| 58 break;||| 59 }||| 60 if (dfs(false, i, 1, revg[i], tmp, ans)) {||| 61 bFound = true;||| 62 break;||| 63 }||| 64 }||| 65 if (bFound) {||| 66 for (int i = 1; i <= 48; i++) {||| 67 if (ans & (1LL << i)) {||| 68 printf(""%d "", i);||| 69 }||| 70 }||| 71 printf(""\n"");||| 72 } else {||| 73 printf(""-1\n"");||| 74 }||| 75 }||| 76 return 0;||| 77 }||| 78 int main() {||| 79 std::ios::sync_with_stdio(false);||| 80 return Process();||| 81 }||| "	29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1LL << v), ans)) {
76	43	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline bool Read(int &a) { return scanf(""%d"", &a) != EOF; }||| 4 inline bool Read(int &a, int &b) { return scanf(""%d%d"", &a, &b) != EOF; }||| 5 inline bool Read(int &a, int &b, int &c) {||| 6 return scanf(""%d%d%d"", &a, &b, &c) != EOF;||| 7 }||| 8 inline bool Read(int &a, int &b, int &c, int &d) {||| 9 return scanf(""%d%d%d%d"", &a, &b, &c, &d) != EOF;||| 10 }||| 11 const int INF = 0x3f3f3f3f;||| 12 const int maxn = 1e5 + 10;||| 13 long long g[50];||| 14 long long revg[50];||| 15 int N, M;||| 16 int d = 0;||| 17 bool dfs(bool connect, int u, int cnt, long long edges, long long tmp,||| 18 long long &ans) {||| 19 if (cnt == 5) {||| 20 ans = tmp;||| 21 return true;||| 22 }||| 23 long long e = edges;||| 24 while (e > 0) {||| 25 int v = __builtin_ctzll(e);||| 26 e ^= 1LL << v;||| 27 if (v == 0 || u == v) continue;||| 28 long long gv = connect ? g[v] : revg[v];||| 29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1LL << v), ans)) {||| 30 return true;||| 31 }||| 32 }||| 33 return false;||| 34 }||| 35 int Process() {||| 36 while (Read(N, M)) {||| 37 N = min(48, N);||| 38 memset(g, 0, sizeof(g));||| 39 for (int i = 1; i <= N; i++) {||| 40 revg[i] = ((1LL << (N + 1)) - 1) ^ (1LL << i);||| 41 }||| 42 for (int _i = 0; _i < M; _i++) {||| 43 int u, v;||| 44 Read(u, v);||| 45 if (u <= 48 && v <= 48 && u != v) {||| 46 g[u] |= 1LL << v;||| 47 g[v] |= 1LL << u;||| 48 revg[u] ^= 1LL << v;||| 49 revg[v] ^= 1LL << u;||| 50 }||| 51 }||| 52 long long ans;||| 53 bool bFound = false;||| 54 for (int i = 1; i <= N; i++) {||| 55 long long tmp = 1LL << i;||| 56 if (dfs(true, i, 1, g[i], tmp, ans)) {||| 57 bFound = true;||| 58 break;||| 59 }||| 60 if (dfs(false, i, 1, revg[i], tmp, ans)) {||| 61 bFound = true;||| 62 break;||| 63 }||| 64 }||| 65 if (bFound) {||| 66 for (int i = 1; i <= 48; i++) {||| 67 if (ans & (1LL << i)) {||| 68 printf(""%d "", i);||| 69 }||| 70 }||| 71 printf(""\n"");||| 72 } else {||| 73 printf(""-1\n"");||| 74 }||| 75 }||| 76 return 0;||| 77 }||| 78 int main() {||| 79 std::ios::sync_with_stdio(false);||| 80 return Process();||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline bool Read(int &a) { return scanf(""%d"", &a) != EOF; }||| 4 inline bool Read(int &a, int &b) { return scanf(""%d%d"", &a, &b) != EOF; }||| 5 inline bool Read(int &a, int &b, int &c) {||| 6 return scanf(""%d%d%d"", &a, &b, &c) != EOF;||| 7 }||| 8 inline bool Read(int &a, int &b, int &c, int &d) {||| 9 return scanf(""%d%d%d%d"", &a, &b, &c, &d) != EOF;||| 10 }||| 11 const int INF = 0x3f3f3f3f;||| 12 const int maxn = 1e5 + 10;||| 13 long long g[50];||| 14 long long revg[50];||| 15 int N, M;||| 16 int d = 0;||| 17 bool dfs(bool connect, int u, int cnt, long long edges, long long tmp,||| 18 long long &ans) {||| 19 if (cnt == 5) {||| 20 ans = tmp;||| 21 return true;||| 22 }||| 23 long long e = edges;||| 24 while (e > 0) {||| 25 int v = __builtin_ctzll(e);||| 26 e ^= 1LL << v;||| 27 if (v == 0 || u == v) continue;||| 28 long long gv = connect ? g[v] : revg[v];||| 29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1 << v), ans)) {||| 30 return true;||| 31 }||| 32 }||| 33 return false;||| 34 }||| 35 int Process() {||| 36 while (Read(N, M)) {||| 37 N = min(48, N);||| 38 memset(g, 0, sizeof(g));||| 39 for (int i = 1; i <= N; i++) {||| 40 revg[i] = ((1LL << (N + 1)) - 1) ^ (1LL << i);||| 41 }||| 42 for (int _i = 0; _i < M; _i++) {||| 43 int u, v;||| 44 Read(u, v);||| 45 if (u <= 48 && v <= 48 && u != v) {||| 46 g[u] |= 1LL << v;||| 47 g[v] |= 1LL << u;||| 48 revg[u] ^= 1LL << v;||| 49 revg[v] ^= 1LL << u;||| 50 }||| 51 }||| 52 long long ans;||| 53 bool bFound = false;||| 54 for (int i = 1; i <= N; i++) {||| 55 long long tmp = 1LL << i;||| 56 if (dfs(true, i, 1, g[i], tmp, ans)) {||| 57 bFound = true;||| 58 break;||| 59 }||| 60 if (dfs(false, i, 1, revg[i], tmp, ans)) {||| 61 bFound = true;||| 62 break;||| 63 }||| 64 }||| 65 if (bFound) {||| 66 for (int i = 1; i <= 48; i++) {||| 67 if (ans & (1LL << i)) {||| 68 printf(""%d "", i);||| 69 }||| 70 }||| 71 printf(""\n"");||| 72 } else {||| 73 printf(""-1\n"");||| 74 }||| 75 }||| 76 return 0;||| 77 }||| 78 int main() {||| 79 std::ios::sync_with_stdio(false);||| 80 return Process();||| 81 }||| "	29 if (dfs(connect, v, cnt + 1, edges & gv, tmp | (1LL << v), ans)) {
76	38	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {||| 49 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % n + 1;||| 50 if (check()) {||| 51 fl = 1;||| 52 break;||| 53 }||| 54 }||| 55 if (!fl)||| 56 puts(""-1"");||| 57 else||| 58 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 for (int tot = (1), __tot = (114514); tot <= __tot; ++tot) {||| 49 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % 50 + 1;||| 50 if (check()) {||| 51 fl = 1;||| 52 break;||| 53 }||| 54 }||| 55 if (!fl)||| 56 puts(""-1"");||| 57 else||| 58 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 59 }||| "	48 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {
76	96	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {||| 49 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % n + 1;||| 50 if (check()) {||| 51 fl = 1;||| 52 break;||| 53 }||| 54 }||| 55 if (!fl)||| 56 puts(""-1"");||| 57 else||| 58 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void rd(char *x) { scanf(""%s"", x); }||| 4 inline void rd(double &x) { scanf(""%lf"", &x); }||| 5 template <typename T>||| 6 inline void rd(T &x) {||| 7 x = 0;||| 8 bool is = 0;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) is |= (ch == '-'), ch = getchar();||| 11 while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();||| 12 is && (x = -x);||| 13 }||| 14 template <typename T, typename... U>||| 15 inline void rd(T &x, U &...y) {||| 16 rd(x), rd(y...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x >= 10) write(x / 10);||| 21 putchar('0' + x % 10);||| 22 }||| 23 const int maxn = 114514;||| 24 set<pair<int, int>> st;||| 25 inline pair<int, int> mp(int u, int v) {||| 26 return u < v ? pair<int, int>(u, v) : pair<int, int>(v, u);||| 27 }||| 28 int ans[6], n, m;||| 29 int check() {||| 30 int ret = 0;||| 31 for (int i = (1), __i = (5); i <= __i; ++i)||| 32 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 33 if (ans[i] == ans[j]) return 0;||| 34 for (int i = (1), __i = (5); i <= __i; ++i)||| 35 for (int j = (1), __j = (i - 1); j <= __j; ++j)||| 36 if (st.count(mp(ans[i], ans[j]))) ++ret;||| 37 return (ret == 10 || ret == 0);||| 38 }||| 39 int main() {||| 40 srand(time(0));||| 41 rd(n, m);||| 42 for (int i = (1), __i = (m); i <= __i; ++i) {||| 43 int u, v;||| 44 rd(u, v);||| 45 st.insert(mp(u, v));||| 46 }||| 47 int fl = 0;||| 48 for (int tot = (1), __tot = (114514); tot <= __tot; ++tot) {||| 49 for (int i = (1), __i = (5); i <= __i; ++i) ans[i] = rand() % n + 1;||| 50 if (check()) {||| 51 fl = 1;||| 52 break;||| 53 }||| 54 }||| 55 if (!fl)||| 56 puts(""-1"");||| 57 else||| 58 for (int i = (1), __i = (5); i <= __i; ++i) printf(""%d "", ans[i]);||| 59 }||| "	48 for (int tot = (1), __tot = (514514); tot <= __tot; ++tot) {
77	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, t, ans, i, j, m, k, a, b, z, voly, c, s[1000 * 1000 + 1],||| 4 parent[1000 * 1000 + 1], used[1000 * 1000 + 1];||| 5 vector<long long> v;||| 6 void make_set(int v) {||| 7 parent[v] = v;||| 8 s[v] = 1;||| 9 }||| 10 int find_set(int v) {||| 11 if (v == parent[v]) return v;||| 12 return parent[v] = find_set(parent[v]);||| 13 }||| 14 void union_sets(int a, int b) {||| 15 a = find_set(a);||| 16 b = find_set(b);||| 17 if (a != b) {||| 18 if (s[a] < s[b]) swap(a, b);||| 19 parent[b] = a;||| 20 s[a] += s[b];||| 21 }||| 22 }||| 23 signed main() {||| 24 cin >> n >> m;||| 25 for (j = 1; j <= n * m; j++) {||| 26 make_set(j);||| 27 used[j] = 0;||| 28 }||| 29 for (i = 1; i <= n; i++) {||| 30 for (j = 1; j <= m; j++) {||| 31 cin >> c;||| 32 if (c % 2 == 0) {||| 33 union_sets((i - 1) * m + j, (i - 1) * m + j - 1);||| 34 }||| 35 c = c / 2;||| 36 if (c % 2 == 0) {||| 37 union_sets((i - 1) * m + j, (i)*m + j);||| 38 }||| 39 }||| 40 }||| 41 for (j = 1; j <= n * m; j++) {||| 42 c = find_set(j);||| 43 if (used[c] == 0) {||| 44 v.push_back(s[c]);||| 45 used[c] = 1;||| 46 }||| 47 }||| 48 sort(v.begin(), v.end());||| 49 for (j = 1; j <= v.size(); j++) {||| 50 cout << v[v.size() - j] << "" "";||| 51 }||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, t, ans, i, j, m, k, a, b, z, voly, c, s[1000 * 1000 + 1],||| 4 parent[1000 * 1000 + 1], used[1000 * 1000 + 1];||| 5 vector<long long> v;||| 6 void make_set(int v) {||| 7 parent[v] = v;||| 8 s[v] = 1;||| 9 }||| 10 int find_set(int v) {||| 11 if (v == parent[v]) return v;||| 12 return parent[v] = find_set(parent[v]);||| 13 }||| 14 void union_sets(int a, int b) {||| 15 a = find_set(a);||| 16 b = find_set(b);||| 17 if (a != b) {||| 18 if (s[a] < s[b]) swap(a, b);||| 19 parent[b] = a;||| 20 s[a] += s[b];||| 21 }||| 22 }||| 23 signed main() {||| 24 cin >> n >> m;||| 25 for (j = 1; j <= n * m; j++) {||| 26 make_set(j);||| 27 used[j] = 0;||| 28 }||| 29 for (i = 1; i <= n; i++) {||| 30 for (j = 1; j <= m; j++) {||| 31 cin >> c;||| 32 if (c % 2 == 0) {||| 33 union_sets((i - 1) * m + j, (i - 1) * m + j - 1);||| 34 }||| 35 c = c / 2;||| 36 if (c % 2 == 0) {||| 37 union_sets((i - 1) * m + j, (i)*m + j);||| 38 }||| 39 }||| 40 }||| 41 for (j = 1; j <= n * m; j++) {||| 42 c = find_set(j);||| 43 if (used[c] == 0) {||| 44 v.push_back(s[c]);||| 45 used[c] = 1;||| 46 }||| 47 }||| 48 sort(v.begin(), v.end());||| 49 for (j = 1; j <= v.size(); j++) {||| 50 cout << v[v.size() - j] << ""\n"";||| 51 }||| 52 }||| "	"50 cout << v[v.size() - j] << "" "";"
77	88	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int n, m, res[N * N], idx = -1, step;||| 5 int dx[4] = {0, 1, 0, -1}, dy[4] = {-1, 0, 1, 0};||| 6 bool book[N][N];||| 7 int a[N][N];||| 8 void dfs(int x, int y) {||| 9 bool flag = 0;||| 10 int xx = a[x][y];||| 11 for (int i = 0; i < 4; i++) {||| 12 if ((xx >> i) & 1 == 1) continue;||| 13 int tx = x + dx[i];||| 14 int ty = y + dy[i];||| 15 if (tx < 0 || tx >= n || ty < 0 || ty >= m) {||| 16 continue;||| 17 }||| 18 if (!book[tx][ty]) {||| 19 flag = 1;||| 20 book[tx][ty] = 1;||| 21 step++;||| 22 dfs(tx, ty);||| 23 }||| 24 }||| 25 if (!flag) return;||| 26 }||| 27 int main() {||| 28 idx = -1;||| 29 cin >> n >> m;||| 30 for (int i = 0; i < n; i++)||| 31 for (int j = 0; j < m; j++) cin >> a[i][j];||| 32 for (int i = 0; i < n; i++)||| 33 for (int j = 0; j < m; j++)||| 34 if (!book[i][j]) {||| 35 step = 1;||| 36 book[i][j] = 1;||| 37 dfs(i, j);||| 38 res[++idx] = step;||| 39 }||| 40 sort(res, res + idx + 1);||| 41 for (int i = idx; i >= 0; i--) cout << res[i] << ' ';||| 42 puts("""");||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int n, m, res[N], idx = -1, step;||| 5 int dx[4] = {0, 1, 0, -1}, dy[4] = {-1, 0, 1, 0};||| 6 bool book[N][N];||| 7 int a[N][N];||| 8 void dfs(int x, int y) {||| 9 bool flag = 0;||| 10 int xx = a[x][y];||| 11 for (int i = 0; i < 4; i++) {||| 12 if ((xx >> i) & 1 == 1) continue;||| 13 int tx = x + dx[i];||| 14 int ty = y + dy[i];||| 15 if (tx < 0 || tx >= n || ty < 0 || ty >= m) {||| 16 continue;||| 17 }||| 18 if (!book[tx][ty]) {||| 19 flag = 1;||| 20 book[tx][ty] = 1;||| 21 step++;||| 22 dfs(tx, ty);||| 23 }||| 24 }||| 25 if (!flag) return;||| 26 }||| 27 int main() {||| 28 idx = -1;||| 29 cin >> n >> m;||| 30 for (int i = 0; i < n; i++)||| 31 for (int j = 0; j < m; j++) cin >> a[i][j];||| 32 for (int i = 0; i < n; i++)||| 33 for (int j = 0; j < m; j++)||| 34 if (!book[i][j]) {||| 35 step = 1;||| 36 book[i][j] = 1;||| 37 dfs(i, j);||| 38 res[++idx] = step;||| 39 }||| 40 sort(res, res + idx + 1);||| 41 for (int i = idx; i >= 0; i--) cout << res[i] << ' ';||| 42 puts("""");||| 43 return 0;||| 44 }||| "	4 int n, m, res[N * N], idx = -1, step;
77	94	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mxN = 1e3;||| 4 int n, m, mp[mxN][mxN] = {0};||| 5 bool vis[mxN][mxN] = {0};||| 6 bool e(int i, int j) { return i >= 0 && i < n && j >= 0 && j < m && vis[i][j]; }||| 7 int search(int i, int j) {||| 8 bool toS[4] = {0, 0, 0, 0};||| 9 int ans = 0;||| 10 if (!(mp[i][j] & 8) && e(i - 1, j)) {||| 11 vis[i - 1][j] = false;||| 12 toS[0] = 1;||| 13 ans++;||| 14 }||| 15 if (!(mp[i][j] & 4) && e(i, j + 1)) {||| 16 vis[i][j + 1] = false;||| 17 toS[1] = 1;||| 18 ans++;||| 19 }||| 20 if (!(mp[i][j] & 2) && e(i + 1, j)) {||| 21 vis[i + 1][j] = false;||| 22 toS[2] = 1;||| 23 ans++;||| 24 }||| 25 if (!(mp[i][j] & 1) && e(i, j - 1)) {||| 26 vis[i][j - 1] = false;||| 27 toS[3] = 1;||| 28 ans++;||| 29 }||| 30 if (toS[0]) ans += search(i - 1, j);||| 31 if (toS[1]) ans += search(i, j + 1);||| 32 if (toS[2]) ans += search(i + 1, j);||| 33 if (toS[3]) ans += search(i, j - 1);||| 34 return ans;||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin >> n >> m;||| 39 vector<int> res;||| 40 for (int i = 0; i < n; i++) {||| 41 for (int j = 0; j < m; j++) {||| 42 cin >> mp[i][j];||| 43 vis[i][j] = 1;||| 44 }||| 45 }||| 46 for (int i = 0; i < n; i++) {||| 47 for (int j = 0; j < m; j++) {||| 48 if (e(i, j)) {||| 49 vis[i][j] = 0;||| 50 int temp = search(i, j);||| 51 res.push_back(1 + temp);||| 52 }||| 53 }||| 54 }||| 55 sort(res.begin(), res.end());||| 56 for (int j = res.size() - 1; j >= 0; j--) {||| 57 cout << res[j] << "" "";||| 58 }||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mxN = 1e3;||| 4 int n, m, mp[mxN][mxN] = {0};||| 5 bool vis[mxN][mxN] = {0};||| 6 bool e(int i, int j) { return i >= 0 && i < n && j >= 0 && j < m && vis[i][j]; }||| 7 int search(int i, int j) {||| 8 bool toS[4] = {0, 0, 0, 0};||| 9 int ans = 0;||| 10 if (!(mp[i][j] & 8) && e(i - 1, j)) {||| 11 vis[i - 1][j] = false;||| 12 toS[0] = 1;||| 13 ans++;||| 14 }||| 15 if (!(mp[i][j] & 4) && e(i, j + 1)) {||| 16 vis[i][j + 1] = false;||| 17 toS[1] = 1;||| 18 ans++;||| 19 }||| 20 if (!(mp[i][j] & 2) && e(i + 1, j)) {||| 21 vis[i + 1][j] = false;||| 22 toS[2] = 1;||| 23 ans++;||| 24 }||| 25 if (!(mp[i][j] & 1) && e(i, j - 1)) {||| 26 vis[i][j - 1] = false;||| 27 toS[3] = 1;||| 28 ans++;||| 29 }||| 30 if (toS[0]) ans += search(i - 1, j);||| 31 if (toS[1]) ans += search(i, j + 1);||| 32 if (toS[2]) ans += search(i + 1, j);||| 33 if (toS[3]) ans += search(i, j - 1);||| 34 return ans;||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin >> n >> m;||| 39 vector<int> res;||| 40 for (int i = 0; i < n; i++) {||| 41 for (int j = 0; j < m; j++) {||| 42 cin >> mp[i][j];||| 43 vis[i][j] = 1;||| 44 }||| 45 }||| 46 for (int i = 0; i < n; i++) {||| 47 for (int j = 0; j < m; j++) {||| 48 if (e(i, j)) {||| 49 vis[i][j] = 0;||| 50 int temp = search(i, j);||| 51 res.push_back(1 + temp);||| 52 }||| 53 }||| 54 }||| 55 sort(res.begin(), res.end());||| 56 for (int j = res.size(); j >= 0; j--) {||| 57 cout << res[j] << "" "";||| 58 }||| 59 return 0;||| 60 }||| "	56 for (int j = res.size() - 1; j >= 0; j--) {
77	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace std {}||| 4 long long t, n, m;||| 5 bitset<4> s[1005][1005];||| 6 bool vis[1005][1005];||| 7 queue<long long> Q;||| 8 long long A[(long long)1e6 + 10], N;||| 9 void bfs(long long x, long long y) {||| 10 queue<pair<long long, long long>> q;||| 11 long long cnt = 1;||| 12 q.push({x, y});||| 13 vis[x][y] = 1;||| 14 while (q.size()) {||| 15 long long a = q.front().first, b = q.front().second;||| 16 q.pop();||| 17 if (a - 1 >= 0 && !vis[a - 1][b] && !s[a - 1][b][1]) {||| 18 cnt++;||| 19 vis[a - 1][b] = 1;||| 20 q.push({a - 1, b});||| 21 }||| 22 if (a + 1 < n && !vis[a + 1][b] && !s[a + 1][b][3]) {||| 23 cnt++;||| 24 vis[a + 1][b] = 1;||| 25 q.push({a + 1, b});||| 26 }||| 27 if (b - 1 >= 0 && !vis[a][b - 1] && !s[a][b - 1][2]) {||| 28 cnt++;||| 29 vis[a][b - 1] = 1;||| 30 q.push({a, b - 1});||| 31 }||| 32 if (b + 1 < m && !vis[a][b + 1] && !s[a][b + 1][0]) {||| 33 cnt++;||| 34 vis[a][b + 1] = 1;||| 35 q.push({a, b + 1});||| 36 }||| 37 }||| 38 A[N] = cnt;||| 39 N++;||| 40 }||| 41 signed main() {||| 42 ios::sync_with_stdio(0), cin.tie(0);||| 43 cin >> n >> m;||| 44 for (long long i = 0; i < n; ++i)||| 45 for (long long j = 0; j < m; ++j) {||| 46 long long p;||| 47 cin >> p;||| 48 s[i][j] = p;||| 49 }||| 50 for (long long i = 0; i < n; ++i) {||| 51 for (long long j = 0; j < m; ++j) {||| 52 if (!vis[i][j]) {||| 53 bfs(i, j);||| 54 }||| 55 }||| 56 }||| 57 sort(A, A + N, greater<long long>());||| 58 for (long long i = 0; i < N; ++i) cout << A[i] << "" "";||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace std {}||| 4 long long t, n, m;||| 5 bitset<4> s[1005][1005];||| 6 bool vis[1005][1005];||| 7 queue<long long> Q;||| 8 long long A[(long long)1e6 + 10], N;||| 9 void bfs(long long x, long long y) {||| 10 queue<pair<long long, long long>> q;||| 11 long long cnt = 1;||| 12 q.push({x, y});||| 13 vis[x][y] = 1;||| 14 while (q.size()) {||| 15 long long a = q.front().first, b = q.front().second;||| 16 q.pop();||| 17 if (a - 1 >= 0 && !vis[a - 1][b] && !s[a - 1][b][1]) {||| 18 cnt++;||| 19 vis[a - 1][b] = 1;||| 20 q.push({a - 1, b});||| 21 }||| 22 if (a + 1 < n && !vis[a + 1][b] && !s[a + 1][b][3]) {||| 23 cnt++;||| 24 vis[a - 1][b] = 1;||| 25 q.push({a + 1, b});||| 26 }||| 27 if (b - 1 >= 0 && !vis[a][b - 1] && !s[a][b - 1][2]) {||| 28 cnt++;||| 29 vis[a][b - 1] = 1;||| 30 q.push({a, b - 1});||| 31 }||| 32 if (b + 1 < m && !vis[a][b + 1] && !s[a][b + 1][0]) {||| 33 cnt++;||| 34 vis[a][b + 1] = 1;||| 35 q.push({a, b + 1});||| 36 }||| 37 }||| 38 A[N] = cnt;||| 39 N++;||| 40 }||| 41 signed main() {||| 42 ios::sync_with_stdio(0), cin.tie(0);||| 43 cin >> n >> m;||| 44 for (long long i = 0; i < n; ++i)||| 45 for (long long j = 0; j < m; ++j) {||| 46 long long p;||| 47 cin >> p;||| 48 s[i][j] = p;||| 49 }||| 50 for (long long i = 0; i < n; ++i) {||| 51 for (long long j = 0; j < m; ++j) {||| 52 if (!vis[i][j]) {||| 53 bfs(i, j);||| 54 }||| 55 }||| 56 }||| 57 sort(A, A + N, greater<long long>());||| 58 for (long long i = 0; i < N; ++i) cout << A[i] << "" "";||| 59 }||| "	24 vis[a + 1][b] = 1;
77	103	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long maxn = 1e6 + 10;||| 5 long long lowbit(long long x) { return x & -x; }||| 6 bool ispow(long long n) { return (n & (n - 1)) == 0; }||| 7 long long fast(long long a, long long n) {||| 8 long long base = a, res = 1;||| 9 while (n) {||| 10 if (n & 1) res = ((res % mod) * (base % mod)) % mod;||| 11 base = ((base % mod) * (base % mod)) % mod;||| 12 n >>= 1;||| 13 }||| 14 return res % mod;||| 15 }||| 16 long long las[maxn];||| 17 string txt = ""wygbro"";||| 18 long long dp[maxn];||| 19 bool s[1030][1030][4];||| 20 bool vis[1030][1030];||| 21 long long ans[maxn], cnt;||| 22 long long dx[] = {-1, 0, 1, 0};||| 23 long long dy[] = {0, 1, 0, -1};||| 24 long long dfs(long long x, long long y) {||| 25 long long Size = 1;||| 26 vis[x][y] = true;||| 27 long long res = Size;||| 28 for (long long i = 0; i < 4; i++) {||| 29 long long vx = x + dx[i], vy = y + dy[i];||| 30 if (s[x][y][i] && vis[vx][vy] == 0) {||| 31 res += dfs(vx, vy);||| 32 }||| 33 }||| 34 return res;||| 35 }||| 36 long long cmp(long long a, long long b) { return a > b; }||| 37 signed main() {||| 38 long long n, m;||| 39 cin >> n >> m;||| 40 for (long long i = (1); i <= (n); ++i) {||| 41 for (long long j = (1); j <= (m); ++j) {||| 42 long long a;||| 43 scanf(""%lld"", &a);||| 44 long long wall = 3;||| 45 while (wall != -1) {||| 46 if (a == 0 || a % 2 == 0)||| 47 s[i][j][wall] = true;||| 48 else if (a % 2 == 1)||| 49 s[i][j][wall] = false;||| 50 wall--;||| 51 a /= 2;||| 52 }||| 53 }||| 54 }||| 55 for (long long i = (1); i <= (n); ++i) {||| 56 for (long long j = (1); j <= (m); ++j) {||| 57 if (vis[i][j] == 0) {||| 58 ans[cnt++] = dfs(i, j);||| 59 }||| 60 }||| 61 }||| 62 sort(ans, ans + cnt, cmp);||| 63 for (long long i = 0; i < cnt; i++) cout << ans[i] << ' ';||| 64 return 0;||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long maxn = 1e6 + 10;||| 5 long long lowbit(long long x) { return x & -x; }||| 6 bool ispow(long long n) { return (n & (n - 1)) == 0; }||| 7 long long fast(long long a, long long n) {||| 8 long long base = a, res = 1;||| 9 while (n) {||| 10 if (n & 1) res = ((res % mod) * (base % mod)) % mod;||| 11 base = ((base % mod) * (base % mod)) % mod;||| 12 n >>= 1;||| 13 }||| 14 return res % mod;||| 15 }||| 16 long long las[maxn];||| 17 string txt = ""wygbro"";||| 18 long long dp[maxn];||| 19 bool s[1030][1030][4];||| 20 bool vis[1030][1030];||| 21 long long ans[maxn], cnt;||| 22 long long dx[] = {-1, 0, 1, 0};||| 23 long long dy[] = {0, 1, 0, -1};||| 24 long long dfs(long long x, long long y) {||| 25 long long Size = 1;||| 26 vis[x][y] = true;||| 27 long long res = Size;||| 28 for (long long i = 0; i < 4; i++) {||| 29 long long vx = x + dx[i], vy = y + dy[i];||| 30 if (s[x][y][i] && vis[vx][vy] == 0) {||| 31 res += dfs(vx, vy);||| 32 }||| 33 }||| 34 return res;||| 35 }||| 36 long long cmp(long long a, long long b) { return a > b; }||| 37 signed main() {||| 38 long long n, m;||| 39 cin >> n >> m;||| 40 for (long long i = (1); i <= (n); ++i) {||| 41 for (long long j = (1); j <= (m); ++j) {||| 42 long long a;||| 43 scanf(""%lld"", &a);||| 44 long long wall = 3;||| 45 while (wall != -1) {||| 46 if (a == 0 || a % 2 == 0)||| 47 s[i][j][wall] = true;||| 48 else if (a % 2 == 1)||| 49 s[i][j][wall] = false;||| 50 wall--;||| 51 a /= 2;||| 52 }||| 53 }||| 54 }||| 55 for (long long i = (1); i <= (n); ++i) {||| 56 for (long long j = (1); j <= (m); ++j) {||| 57 if (vis[i][j] == 0) {||| 58 ans[cnt++] = dfs(i, j);||| 59 }||| 60 }||| 61 }||| 62 sort(ans, ans + cnt, cmp);||| 63 for (long long i = 0; i < cnt; i++) cout << ans[i] << endl;||| 64 return 0;||| 65 }||| "	63 for (long long i = 0; i < cnt; i++) cout << ans[i] << ' ';
77	66	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<vector<int>> a;||| 5 bool vis[1001][1001];||| 6 bool isNext(int i, int j, int u, int v, int dir) {||| 7 int val1 = a[i][j], val2 = a[u][v];||| 8 bitset<4> dir1(val1);||| 9 bitset<4> dir2(val2);||| 10 if (dir == 1) {||| 11 return !dir1[1] && !dir2[3];||| 12 } else if (dir == 2)||| 13 return !dir1[2] && !dir2[0];||| 14 else if (dir == 3)||| 15 return !dir1[0] && !dir2[2];||| 16 else||| 17 return !dir1[3] && !dir2[1];||| 18 }||| 19 void dfs(int i, int j, int &sz) {||| 20 if (i + 1 < n && !vis[i + 1][j] && isNext(i, j, i + 1, j, 1)) {||| 21 vis[i + 1][j] = 1;||| 22 sz++;||| 23 dfs(i + 1, j, sz);||| 24 }||| 25 if (j + 1 < m && !vis[i][j + 1] && isNext(i, j, i, j + 1, 2)) {||| 26 vis[i][j + 1] = 1;||| 27 sz++;||| 28 dfs(i, j + 1, sz);||| 29 }||| 30 if (i - 1 >= 0 && !vis[i - 1][j] && isNext(i, j, i - 1, j, 4)) {||| 31 vis[i - 1][j] = 1;||| 32 sz++;||| 33 dfs(i - 1, j, sz);||| 34 }||| 35 if (j - 1 >= 0 && !vis[i][j - 1] && isNext(i, j, i, j - 1, 3)) {||| 36 vis[i][j - 1] = 1;||| 37 sz++;||| 38 dfs(i, j - 1, sz);||| 39 }||| 40 }||| 41 int main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cin >> n >> m;||| 45 a.resize(n);||| 46 for (auto &i : a) i.resize(m);||| 47 for (int i = 0; i < n; i++) {||| 48 for (int j = 0; j < m; j++) {||| 49 cin >> a[i][j];||| 50 }||| 51 }||| 52 vector<int> ans;||| 53 for (int i = 0; i < n; i++) {||| 54 for (int j = 0; j < m; j++) {||| 55 int sz = 1;||| 56 if (!vis[i][j]) {||| 57 vis[i][j] = 1;||| 58 dfs(i, j, sz);||| 59 ans.push_back(sz);||| 60 }||| 61 }||| 62 }||| 63 sort(ans.begin(), ans.end());||| 64 reverse(ans.begin(), ans.end());||| 65 for (auto i : ans) cout << i << "" "";||| 66 }||| "	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<vector<int>> a;||| 5 bool vis[1001][1001];||| 6 bool isNext(int i, int j, int u, int v, int dir) {||| 7 int val1 = a[i][j], val2 = a[u][v];||| 8 bitset<4> dir1(val1);||| 9 bitset<4> dir2(val2);||| 10 if (dir == 1) {||| 11 return !dir1[1] && !dir2[3];||| 12 } else if (dir == 2)||| 13 return !dir1[2] && !dir2[0];||| 14 else if (dir == 3)||| 15 return !dir1[0] && !dir2[2];||| 16 else||| 17 return !dir1[3] && !dir2[1];||| 18 }||| 19 void dfs(int i, int j, int &sz) {||| 20 if (i + 1 < n && !vis[i + 1][j] && isNext(i, j, i + 1, j, 1)) {||| 21 vis[i + 1][j] = 1;||| 22 sz++;||| 23 dfs(i + 1, j, sz);||| 24 }||| 25 if (j + 1 < m && !vis[i][j + 1] && isNext(i, j, i, j + 1, 2)) {||| 26 vis[i][j + 1] = 1;||| 27 sz++;||| 28 dfs(i, j + 1, sz);||| 29 }||| 30 if (i - 1 >= 0 && !vis[i - 1][j] && isNext(i, j, i - 1, j, 4)) {||| 31 vis[i - 1][j] = 1;||| 32 sz++;||| 33 dfs(i - 1, j, sz);||| 34 }||| 35 if (j - 1 >= 0 && !vis[i][j - 1] && isNext(i, j, i, j - 1, 3)) {||| 36 vis[i][j - 1] = 1;||| 37 sz++;||| 38 dfs(i, j - 1, sz);||| 39 }||| 40 }||| 41 int main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cin >> n >> m;||| 45 a.resize(n);||| 46 for (auto &i : a) i.resize(m);||| 47 for (int i = 0; i < n; i++) {||| 48 for (int j = 0; j < m; j++) {||| 49 cin >> a[i][j];||| 50 }||| 51 }||| 52 vector<int> ans;||| 53 for (int i = 0; i < n; i++) {||| 54 for (int j = 0; j < m; j++) {||| 55 int sz = 1;||| 56 if (!vis[i][j]) {||| 57 vis[i][j] = 1;||| 58 dfs(i, j, sz);||| 59 ans.push_back(sz);||| 60 }||| 61 }||| 62 }||| 63 sort(ans.begin(), ans.end());||| 64 reverse(ans.begin(), ans.end());||| 65 for (auto i : ans) cout << i << endl;||| 66 }||| 	"65 for (auto i : ans) cout << i << "" "";"
78	75	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, a[200005], bit[32], num;||| 4 int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }||| 5 int main() {||| 6 cin >> t;||| 7 while (t--) {||| 8 cin >> n;||| 9 memset(bit, 0, sizeof(bit));||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> num;||| 12 int j = 1;||| 13 while (num) {||| 14 bit[j++] += num & 1;||| 15 num >>= 1;||| 16 }||| 17 }||| 18 int k = 0;||| 19 for (int i = 1; i <= 31; i++) k = gcd(k, bit[i]);||| 20 if (k == 0) {||| 21 for (int i = 1; i <= n; i++) cout << i << "" "";||| 22 } else||| 23 for (int i = 1; i <= k; i++) {||| 24 if (k % i == 0) cout << i << "" "";||| 25 }||| 26 cout << endl;||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, a[200005], bit[32], num;||| 4 int gcd(int a, int b) { b == 0 ? a : gcd(b, a % b); }||| 5 int main() {||| 6 cin >> t;||| 7 while (t--) {||| 8 cin >> n;||| 9 memset(bit, 0, sizeof(bit));||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> num;||| 12 int j = 1;||| 13 while (num) {||| 14 bit[j++] += num & 1;||| 15 num >>= 1;||| 16 }||| 17 }||| 18 int k = 0;||| 19 for (int i = 1; i <= 31; i++) k = gcd(k, bit[i]);||| 20 if (k == 0) {||| 21 for (int i = 1; i <= n; i++) cout << i << "" "";||| 22 } else||| 23 for (int i = 1; i <= k; i++) {||| 24 if (k % i == 0) cout << i << "" "";||| 25 }||| 26 cout << endl;||| 27 }||| 28 return 0;||| 29 }||| "	4 int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }
78	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int bits[31];||| 4 const int P = 210000;||| 5 map<int, int> pf[31];||| 6 vector<int> primes;||| 7 bool prime[P];||| 8 void backdiv(map<int, int>::iterator i, map<int, int> &m, int val,||| 9 vector<int> &v) {||| 10 if (i == m.end()) {||| 11 v.push_back(val);||| 12 return;||| 13 }||| 14 for (int x = 0, val1 = val; x <= i->second; x++, val1 *= i->first) {||| 15 auto j = i;||| 16 j++;||| 17 backdiv(j, m, val1, v);||| 18 }||| 19 }||| 20 int main() {||| 21 fill(prime + 1, prime + P, true);||| 22 for (int x = 2; x * x <= P; x++) {||| 23 if (prime[x]) {||| 24 for (int y = 2 * x; y < P; y += x) {||| 25 prime[y] = false;||| 26 }||| 27 }||| 28 }||| 29 for (int x = 2; x < P; x++) {||| 30 if (prime[x]) primes.push_back(x);||| 31 }||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 fill(bits, bits + 31, 0);||| 39 int n;||| 40 cin >> n;||| 41 bool notallzero = false;||| 42 for (int x = 0, y; x < n; x++) {||| 43 cin >> y;||| 44 notallzero |= (y != 0);||| 45 int bit = 0;||| 46 while (y) {||| 47 bits[bit] += (y & 1);||| 48 y >>= 1;||| 49 bit++;||| 50 }||| 51 }||| 52 if (!notallzero) {||| 53 for (int z = 1; z <= n; z++) {||| 54 cout << z << ' ';||| 55 continue;||| 56 }||| 57 continue;||| 58 }||| 59 for (int x = 0; x < 31; x++) {||| 60 if (bits[x] == 0) continue;||| 61 pf[x].clear();||| 62 int tmp = bits[x];||| 63 for (size_t y = 0;||| 64 y < primes.size() && (primes[y] * primes[y] <= bits[x]); y++) {||| 65 while ((tmp % primes[y]) == 0) {||| 66 pf[x][primes[y]]++;||| 67 tmp /= primes[y];||| 68 }||| 69 }||| 70 if (tmp != 1) pf[x][tmp]++;||| 71 }||| 72 map<int, int> intersect;||| 73 int first = 0;||| 74 while (first < 31 && (bits[first] == 0)) first++;||| 75 for (auto i : pf[first]) {||| 76 int val = i.second;||| 77 for (int y = first + 1; y < 31; y++) {||| 78 if (bits[y] == 0) continue;||| 79 val = min(val, pf[y][i.first]);||| 80 }||| 81 intersect[i.first] = val;||| 82 }||| 83 vector<int> combinations;||| 84 backdiv(intersect.begin(), intersect, 1, combinations);||| 85 sort(combinations.begin(), combinations.end());||| 86 for (int i : combinations) cout << i << ' ';||| 87 cout << '\n';||| 88 }||| 89 return 0;||| 90 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int bits[31];||| 4 const int P = 210000;||| 5 map<int, int> pf[31];||| 6 vector<int> primes;||| 7 bool prime[P];||| 8 void backdiv(map<int, int>::iterator i, map<int, int> &m, int val,||| 9 vector<int> &v) {||| 10 if (i == m.end()) {||| 11 v.push_back(val);||| 12 return;||| 13 }||| 14 for (int x = 0, val1 = val; x <= i->second; x++, val1 *= i->first) {||| 15 auto j = i;||| 16 j++;||| 17 backdiv(j, m, val1, v);||| 18 }||| 19 }||| 20 int main() {||| 21 fill(prime + 1, prime + P, true);||| 22 for (int x = 2; x * x <= P; x++) {||| 23 if (prime[x]) {||| 24 for (int y = 2 * x; y < P; y += x) {||| 25 prime[y] = false;||| 26 }||| 27 }||| 28 }||| 29 for (int x = 2; x < P; x++) {||| 30 if (prime[x]) primes.push_back(x);||| 31 }||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 fill(bits, bits + 31, 0);||| 39 int n;||| 40 cin >> n;||| 41 bool notallzero = false;||| 42 for (int x = 0, y; x < n; x++) {||| 43 cin >> y;||| 44 notallzero |= (y != 0);||| 45 int bit = 0;||| 46 while (y) {||| 47 bits[bit] += (y & 1);||| 48 y >>= 1;||| 49 bit++;||| 50 }||| 51 }||| 52 if (!notallzero) {||| 53 for (int z = 1; z <= n; z++) {||| 54 cout << z << ' ';||| 55 continue;||| 56 }||| 57 continue;||| 58 }||| 59 for (int x = 0; x < 31; x++) {||| 60 if (bits[x] == 0) continue;||| 61 pf[x].clear();||| 62 int tmp = bits[x];||| 63 for (size_t y = 0;||| 64 y < primes.size() && (primes[y] * primes[y] <= bits[x]); y++) {||| 65 if ((tmp % primes[y]) == 0) {||| 66 pf[x][primes[y]]++;||| 67 tmp /= primes[y];||| 68 }||| 69 }||| 70 if (tmp != 1) pf[x][tmp]++;||| 71 }||| 72 map<int, int> intersect;||| 73 int first = 0;||| 74 while (first < 31 && (bits[first] == 0)) first++;||| 75 for (auto i : pf[first]) {||| 76 int val = i.second;||| 77 for (int y = first + 1; y < 31; y++) {||| 78 if (bits[y] == 0) continue;||| 79 val = min(val, pf[y][i.first]);||| 80 }||| 81 intersect[i.first] = val;||| 82 }||| 83 vector<int> combinations;||| 84 backdiv(intersect.begin(), intersect, 1, combinations);||| 85 sort(combinations.begin(), combinations.end());||| 86 for (int i : combinations) cout << i << ' ';||| 87 cout << '\n';||| 88 }||| 89 return 0;||| 90 }||| 	65 while ((tmp % primes[y]) == 0) {
78	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void read(int &x) {||| 4 x = 0;||| 5 int p = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') p = -p;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9')||| 12 x = (x << 1) + (x << 3) + (ch - '0'), ch = getchar();||| 13 x = x * p;||| 14 }||| 15 int h[35], ans[114514], tot;||| 16 int gcd(int x, int y) {||| 17 if (x % y == 0) return y;||| 18 return gcd(y, x % y);||| 19 }||| 20 int main() {||| 21 int t;||| 22 read(t);||| 23 while (t--) {||| 24 memset(h, 0, sizeof(h));||| 25 int n;||| 26 read(n);||| 27 int tot = 0;||| 28 for (int i = 1; i <= n; ++i) {||| 29 int now = 0;||| 30 int x;||| 31 read(x);||| 32 while (x) {||| 33 if (x & 1) h[now]++;||| 34 x >>= 1;||| 35 now++;||| 36 }||| 37 }||| 38 int res = 0;||| 39 for (int i = 0; i <= 30; ++i) {||| 40 if (h[i]) res = h[i];||| 41 }||| 42 for (int i = 0; i <= 30; ++i) {||| 43 if (h[i]) res = gcd(h[i], res);||| 44 }||| 45 tot = 0;||| 46 if (!res)||| 47 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 48 else {||| 49 int q = sqrt(res);||| 50 for (int i = 1; i <= q; ++i) {||| 51 if (res % i == 0) {||| 52 ans[++tot] = i;||| 53 if (i * i != res) {||| 54 ans[++tot] = res / i;||| 55 }||| 56 }||| 57 }||| 58 sort(ans + 1, ans + tot + 1);||| 59 for (int i = 1; i <= tot; ++i) printf(""%d "", ans[i]);||| 60 }||| 61 puts("""");||| 62 }||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void read(int &x) {||| 4 x = 0;||| 5 int p = 1;||| 6 char ch = getchar();||| 7 while (ch < '0' || ch > '9') {||| 8 if (ch == '-') p = -p;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9')||| 12 x = (x << 1) + (x << 3) + (ch - '0'), ch = getchar();||| 13 x = x * p;||| 14 }||| 15 int h[35], ans[114514], tot;||| 16 int gcd(int x, int y) {||| 17 if (x % y == 0) return y;||| 18 return gcd(y, x % y);||| 19 }||| 20 int main() {||| 21 int t;||| 22 read(t);||| 23 while (t--) {||| 24 memset(h, 0, sizeof(h));||| 25 int n;||| 26 read(n);||| 27 int tot = 0;||| 28 for (int i = 1; i <= n; ++i) {||| 29 int now = 0;||| 30 int x;||| 31 read(x);||| 32 while (x) {||| 33 if (x & 1) h[now]++;||| 34 x >>= 1;||| 35 now++;||| 36 }||| 37 }||| 38 int res = 0;||| 39 for (int i = 0; i <= 30; ++i) {||| 40 if (h[i]) res = h[i];||| 41 }||| 42 for (int i = 0; i <= 30; ++i) {||| 43 if (h[i]) res = gcd(h[i], res);||| 44 }||| 45 tot = 0;||| 46 if (!res)||| 47 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 48 else {||| 49 int q = sqrt(res);||| 50 for (int i = 1; i <= q; ++i) {||| 51 if (res % i == 0) {||| 52 ans[++tot] = i;||| 53 if (i * i != n) {||| 54 ans[++tot] = res / i;||| 55 }||| 56 }||| 57 }||| 58 sort(ans + 1, ans + tot + 1);||| 59 for (int i = 1; i <= tot; ++i) printf(""%d "", ans[i]);||| 60 }||| 61 puts("""");||| 62 }||| 63 }||| "	53 if (i * i != res) {
78	58	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010;||| 4 int Q, n, a[N], cnt[40];||| 5 void solve() {||| 6 scanf(""%d"", &n);||| 7 memset(cnt, 0, sizeof(cnt));||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 for (int j = 0; j <= 30; j++) cnt[j] += ((a[i] >> j) & 1);||| 11 }||| 12 for (int j = 1; j <= n; j++) {||| 13 bool flag = 1;||| 14 for (int i = 0; i <= 30; i++)||| 15 if (cnt[i] % j) flag = 0;||| 16 if (flag) cout << j << "" "";||| 17 }||| 18 cout << ""\n"";||| 19 }||| 20 int main() {||| 21 scanf(""%d"", &Q);||| 22 while (Q--) solve();||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200010;||| 4 int Q, n, a[N], cnt[40];||| 5 void solve() {||| 6 scanf(""%d"", &n);||| 7 memset(cnt, 0, sizeof(cnt));||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 for (int j = 0; j <= 30; j++) cnt[j] += ((a[i] >> j) & 1);||| 11 }||| 12 for (int j = 1; j <= n; j++) {||| 13 bool flag = 1;||| 14 for (int i = 1; i <= 30; i++)||| 15 if (cnt[i] % j) flag = 0;||| 16 if (flag) cout << j << "" "";||| 17 }||| 18 cout << ""\n"";||| 19 }||| 20 int main() {||| 21 scanf(""%d"", &Q);||| 22 while (Q--) solve();||| 23 return 0;||| 24 }||| "	14 for (int i = 0; i <= 30; i++)
78	101	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void setIO(const string &name = """") {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 if (name.length()) {||| 8 freopen((name + "".in"").c_str(), ""r"", stdin);||| 9 freopen((name + "".out"").c_str(), ""w"", stdout);||| 10 }||| 11 }||| 12 template <typename T>||| 13 void read(vector<T> &a) {||| 14 for (auto &x : a) cin >> x;||| 15 }||| 16 template <typename T>||| 17 void read(vector<T> &a, long long n) {||| 18 a.resize(n);||| 19 for (auto &x : a) cin >> x;||| 20 }||| 21 template <class T, class U>||| 22 ostream &operator<<(ostream &out, const pair<T, U> &v) {||| 23 out << ""("";||| 24 out << v.first << "","" << v.second;||| 25 return out << "")"";||| 26 }||| 27 template <class T>||| 28 ostream &operator<<(ostream &out, const vector<T> &v) {||| 29 out << ""["";||| 30 for (auto(i) = 0; (i) < ((long long)(v).size()); (i)++) {||| 31 if (i) out << "", "";||| 32 out << v[i];||| 33 }||| 34 return out << ""]"";||| 35 }||| 36 template <typename T>||| 37 void print(vector<T> &a) {||| 38 for (const auto &x : a) cout << x << ' ';||| 39 cout << '\n';||| 40 }||| 41 void MOD(long long &x, long long m = 1000000007) {||| 42 x %= m;||| 43 if (x < 0) x += m;||| 44 }||| 45 template <typename T>||| 46 void dbg(const char *name, T &&arg1) {||| 47 cout << name << "" : "" << arg1 << '\n';||| 48 }||| 49 template <typename T, typename... U>||| 50 void dbg(const char *names, T &&arg1, U &&...args) {||| 51 const char *comma = strchr(names + 1, ',');||| 52 cout.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 53 dbg(comma + 1, args...);||| 54 }||| 55 template <class T>||| 56 void read(T &x) {||| 57 cin >> x;||| 58 }||| 59 template <class T, class... U>||| 60 void read(T &t, U &...u) {||| 61 read(t);||| 62 read(u...);||| 63 }||| 64 long long gcd(long long a, long long b) { return !a ? b : gcd(b % a, a); }||| 65 long long n;||| 66 vector<long long> a;||| 67 vector<long long> cnt;||| 68 void solve() {||| 69 read(n);||| 70 read(a, n);||| 71 cnt.assign(32, 0);||| 72 for (auto(i) = 0; (i) < (32); (i)++) {||| 73 for (auto(j) = 0; (j) < (n); (j)++) {||| 74 if ((1LL << i) & a[j]) {||| 75 cnt[i]++;||| 76 }||| 77 }||| 78 }||| 79 long long g = 0;||| 80 for (auto(i) = 0; (i) < (32); (i)++) {||| 81 g = gcd(cnt[i], g);||| 82 }||| 83 if (g == 0) {||| 84 for (auto(i) = 1; (i) < (n + 1); (i)++) {||| 85 cout << i << ' ';||| 86 }||| 87 cout << '\n';||| 88 return;||| 89 }||| 90 set<long long> s;||| 91 for (long long i = 1; i * i <= g; i++) {||| 92 if (g % i == 0) {||| 93 s.insert(i);||| 94 s.insert(g / i);||| 95 }||| 96 }||| 97 for (auto &(c) : (s)) {||| 98 cout << c << ' ';||| 99 }||| 100 cout << '\n';||| 101 }||| 102 int32_t main() {||| 103 setIO();||| 104 long long t;||| 105 cin >> t;||| 106 while (t--) {||| 107 solve();||| 108 }||| 109 return 0;||| 110 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void setIO(const string &name = """") {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 if (name.length()) {||| 8 freopen((name + "".in"").c_str(), ""r"", stdin);||| 9 freopen((name + "".out"").c_str(), ""w"", stdout);||| 10 }||| 11 }||| 12 template <typename T>||| 13 void read(vector<T> &a) {||| 14 for (auto &x : a) cin >> x;||| 15 }||| 16 template <typename T>||| 17 void read(vector<T> &a, long long n) {||| 18 a.resize(n);||| 19 for (auto &x : a) cin >> x;||| 20 }||| 21 template <class T, class U>||| 22 ostream &operator<<(ostream &out, const pair<T, U> &v) {||| 23 out << ""("";||| 24 out << v.first << "","" << v.second;||| 25 return out << "")"";||| 26 }||| 27 template <class T>||| 28 ostream &operator<<(ostream &out, const vector<T> &v) {||| 29 out << ""["";||| 30 for (auto(i) = 0; (i) < ((long long)(v).size()); (i)++) {||| 31 if (i) out << "", "";||| 32 out << v[i];||| 33 }||| 34 return out << ""]"";||| 35 }||| 36 template <typename T>||| 37 void print(vector<T> &a) {||| 38 for (const auto &x : a) cout << x << ' ';||| 39 cout << '\n';||| 40 }||| 41 void MOD(long long &x, long long m = 1000000007) {||| 42 x %= m;||| 43 if (x < 0) x += m;||| 44 }||| 45 template <typename T>||| 46 void dbg(const char *name, T &&arg1) {||| 47 cout << name << "" : "" << arg1 << '\n';||| 48 }||| 49 template <typename T, typename... U>||| 50 void dbg(const char *names, T &&arg1, U &&...args) {||| 51 const char *comma = strchr(names + 1, ',');||| 52 cout.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 53 dbg(comma + 1, args...);||| 54 }||| 55 template <class T>||| 56 void read(T &x) {||| 57 cin >> x;||| 58 }||| 59 template <class T, class... U>||| 60 void read(T &t, U &...u) {||| 61 read(t);||| 62 read(u...);||| 63 }||| 64 long long gcd(long long a, long long b) { return !a ? b : gcd(b % a, a); }||| 65 long long n;||| 66 vector<long long> a;||| 67 vector<long long> cnt;||| 68 void solve() {||| 69 read(n);||| 70 read(a, n);||| 71 cnt.assign(32, 0);||| 72 for (auto(i) = 0; (i) < (32); (i)++) {||| 73 for (auto(j) = 0; (j) < (n); (j)++) {||| 74 if ((1LL << i) & a[j]) {||| 75 cnt[i]++;||| 76 }||| 77 }||| 78 }||| 79 long long g = 0;||| 80 for (auto(i) = 0; (i) < (n); (i)++) {||| 81 g = gcd(cnt[i], g);||| 82 }||| 83 if (g == 0) {||| 84 for (auto(i) = 1; (i) < (n + 1); (i)++) {||| 85 cout << i << ' ';||| 86 }||| 87 cout << '\n';||| 88 return;||| 89 }||| 90 set<long long> s;||| 91 for (long long i = 1; i * i <= g; i++) {||| 92 if (g % i == 0) {||| 93 s.insert(i);||| 94 s.insert(g / i);||| 95 }||| 96 }||| 97 for (auto &(c) : (s)) {||| 98 cout << c << ' ';||| 99 }||| 100 cout << '\n';||| 101 }||| 102 int32_t main() {||| 103 setIO();||| 104 long long t;||| 105 cin >> t;||| 106 while (t--) {||| 107 solve();||| 108 }||| 109 return 0;||| 110 }||| "	80 for (auto(i) = 0; (i) < (32); (i)++) {
78	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NR = 2e5 + 5;||| 4 int a[NR];||| 5 int gcd(int x, int y) { return y == 0 ? x : gcd(y, x % y); }||| 6 int cnt[40];||| 7 int main() {||| 8 int t;||| 9 scanf(""%d"", &t);||| 10 while (t--) {||| 11 int n;||| 12 scanf(""%d"", &n);||| 13 for (int i = 1; i <= n; ++i) scanf(""%d"", a + i);||| 14 memset(cnt, 0, sizeof(cnt));||| 15 for (int i = 0; i <= 31; ++i) {||| 16 for (int j = 1; j <= n; ++j) {||| 17 if ((1 << i) & a[j]) ++cnt[i];||| 18 }||| 19 }||| 20 int nw = cnt[0];||| 21 for (int i = 1; i <= 31; ++i) nw = gcd(nw, cnt[i]);||| 22 for (int i = 1; i <= n; ++i) {||| 23 if (nw % i == 0) printf(""%d "", i);||| 24 }||| 25 puts("""");||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int NR = 2e5 + 5;||| 4 int a[NR];||| 5 int gcd(int x, int y) { return y == 0 ? x : gcd(y, x % y); }||| 6 int cnt[40];||| 7 int main() {||| 8 int t;||| 9 scanf(""%d"", &t);||| 10 while (t--) {||| 11 int n;||| 12 scanf(""%d"", &n);||| 13 for (int i = 1; i <= n; ++i) scanf(""%d"", a + i);||| 14 memset(cnt, 0, sizeof(cnt));||| 15 for (int i = 0; i <= 31; ++i) {||| 16 for (int j = 1; j <= n; ++j) {||| 17 if ((1 << i) & a[j]) ++cnt[i];||| 18 }||| 19 }||| 20 int nw = a[0];||| 21 for (int i = 1; i <= 31; ++i) nw = gcd(nw, cnt[i]);||| 22 for (int i = 1; i <= n; ++i) {||| 23 if (nw % i == 0) printf(""%d "", i);||| 24 }||| 25 puts("""");||| 26 }||| 27 return 0;||| 28 }||| "	20 int nw = cnt[0];
78	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }||| 4 int cnt[30];||| 5 int main() {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 memset(cnt, 0, sizeof(cnt));||| 10 int n;||| 11 cin >> n;||| 12 for (int i = 1, x; i <= n; i++) {||| 13 cin >> x;||| 14 for (int j = 0; j < 30; j++) {||| 15 cnt[j] += bool(x & (1 << j));||| 16 }||| 17 }||| 18 int g = 0;||| 19 for (int i = 0; i < 30; i++) {||| 20 if (cnt[i]) {||| 21 g = gcd(g, cnt[i]);||| 22 }||| 23 }||| 24 for (int k = 1; k <= n; k++) {||| 25 if (g % k == 0) {||| 26 cout << k << "" "";||| 27 }||| 28 }||| 29 cout << endl;||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }||| 4 int cnt[30];||| 5 int main() {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 memset(cnt, 0, sizeof(cnt));||| 10 int n;||| 11 cin >> n;||| 12 for (int i = 1, x; i <= n; i++) {||| 13 cin >> x;||| 14 for (int j = 0; j < 30; j++) {||| 15 cnt[j] += (x & (1 << j));||| 16 }||| 17 }||| 18 int g = 0;||| 19 for (int i = 0; i < 30; i++) {||| 20 if (cnt[i]) {||| 21 g = gcd(g, cnt[i]);||| 22 }||| 23 }||| 24 for (int k = 1; k <= n; k++) {||| 25 if (g % k == 0) {||| 26 cout << k << "" "";||| 27 }||| 28 }||| 29 cout << endl;||| 30 }||| 31 return 0;||| 32 }||| "	15 cnt[j] += bool(x & (1 << j));
78	54	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 char ch = getchar();||| 5 long long f = 1, x = 0;||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return f * x;||| 15 }||| 16 const long long MAXN = 2e5 + 10;||| 17 long long n;||| 18 long long a[MAXN];||| 19 long long gcd(long long x, long long y) { return y ? gcd(y, x % y) : x; }||| 20 signed main() {||| 21 long long t = read();||| 22 while (t--) {||| 23 n = read();||| 24 for (long long i = 1; i <= n; i++) {||| 25 a[i] = read();||| 26 }||| 27 long long g = 0;||| 28 for (long long i = 30; i >= 0; i--) {||| 29 long long cnt = 0;||| 30 for (long long j = 1; j <= n; j++) {||| 31 if ((1 << i) & a[j]) {||| 32 cnt++;||| 33 }||| 34 }||| 35 if (cnt) {||| 36 if (!g) {||| 37 g = cnt;||| 38 } else {||| 39 g = gcd(g, cnt);||| 40 }||| 41 }||| 42 }||| 43 if (!g) {||| 44 for (long long i = 1; i <= n; i++) {||| 45 printf(""%d "", i);||| 46 }||| 47 puts("""");||| 48 } else {||| 49 for (long long i = 1; i * i < g; i++) {||| 50 if (g % i == 0) {||| 51 printf(""%d "", i);||| 52 }||| 53 }||| 54 for (long long i = sqrt(g); i; i--) {||| 55 if (g % i == 0) {||| 56 printf(""%d "", g / i);||| 57 }||| 58 }||| 59 puts("""");||| 60 }||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 char ch = getchar();||| 5 long long f = 1, x = 0;||| 6 while (ch < '0' || ch > '9') {||| 7 if (ch == '-') f = -1;||| 8 ch = getchar();||| 9 }||| 10 while (ch >= '0' && ch <= '9') {||| 11 x = x * 10 + ch - '0';||| 12 ch = getchar();||| 13 }||| 14 return f * x;||| 15 }||| 16 const long long MAXN = 2e5 + 10;||| 17 long long n;||| 18 long long a[MAXN];||| 19 long long gcd(long long x, long long y) { return y ? gcd(y, x % y) : x; }||| 20 signed main() {||| 21 long long t = read();||| 22 while (t--) {||| 23 n = read();||| 24 for (long long i = 1; i <= n; i++) {||| 25 a[i] = read();||| 26 }||| 27 long long g = 0;||| 28 for (long long i = 30; i; i--) {||| 29 long long cnt = 0;||| 30 for (long long j = 1; j <= n; j++) {||| 31 if ((1 << i) & a[j]) {||| 32 cnt++;||| 33 }||| 34 }||| 35 if (cnt) {||| 36 if (!g) {||| 37 g = cnt;||| 38 } else {||| 39 g = gcd(g, cnt);||| 40 }||| 41 }||| 42 }||| 43 if (!g) {||| 44 for (long long i = 1; i <= n; i++) {||| 45 printf(""%d "", i);||| 46 }||| 47 puts("""");||| 48 } else {||| 49 for (long long i = 1; i * i < g; i++) {||| 50 if (g % i == 0) {||| 51 printf(""%d "", i);||| 52 }||| 53 }||| 54 for (long long i = sqrt(g); i; i--) {||| 55 if (g % i == 0) {||| 56 printf(""%d "", g / i);||| 57 }||| 58 }||| 59 puts("""");||| 60 }||| 61 }||| 62 return 0;||| 63 }||| "	28 for (long long i = 30; i >= 0; i--) {
78	102	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[32], bt[32];||| 4 int gcd(int x, int y) { return (!y) ? x : gcd(y, x % y); }||| 5 int main() {||| 6 bt[0] = 1;||| 7 for (int i = 1; i < 30; i++) bt[i] = bt[i - 1] << 1;||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n;||| 12 memset(a, 0, sizeof a);||| 13 scanf(""%d"", &n);||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 scanf(""%d"", &x);||| 17 for (int j = 0; j < 30; j++)||| 18 if (bt[j] & x) a[j]++;||| 19 }||| 20 int ans = a[0];||| 21 for (int i = 0; i < 30; i++)||| 22 if (a[i]) ans = a[i];||| 23 for (int i = 0; i < 30; i++) ans = gcd(ans, a[i]);||| 24 for (int i = 1; i <= ans; i++)||| 25 if (ans % i == 0) printf(""%d "", i);||| 26 if (ans == 0)||| 27 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 28 puts("""");||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[32], bt[32];||| 4 int gcd(int x, int y) { return (!y) ? x : gcd(y, x % y); }||| 5 int main() {||| 6 bt[0] = 1;||| 7 for (int i = 1; i < 30; i++) bt[i] = bt[i - 1] << 1;||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n;||| 12 memset(a, 0, sizeof a);||| 13 scanf(""%d"", &n);||| 14 for (int i = 1; i <= n; i++) {||| 15 int x;||| 16 scanf(""%d"", &x);||| 17 for (int j = 0; j < 30; j++)||| 18 if (bt[j] & x) a[j]++;||| 19 }||| 20 int ans = a[0];||| 21 for (int i = 0; i < 30; i++)||| 22 if (a[i]) ans = a[i];||| 23 for (int i = 1; i < 30; i++) ans = gcd(ans, a[i]);||| 24 for (int i = 1; i <= ans; i++)||| 25 if (ans % i == 0) printf(""%d "", i);||| 26 if (ans == 0)||| 27 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 28 puts("""");||| 29 }||| 30 return 0;||| 31 }||| "	23 for (int i = 0; i < 30; i++) ans = gcd(ans, a[i]);
78	71	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int dfs(int i, int j, vector<vector<long long int>>& mt,||| 4 vector<vector<bool>>& vis) {||| 5 int n = mt.size(), m = mt[0].size();||| 6 if (i < 0 || i >= mt.size() || j < 0 || j >= mt[0].size()) return 0;||| 7 vis[i][j] = true;||| 8 int c = 1;||| 9 for (int k = max(0, i - 1); k <= min(n - 1, i + 1); k++) {||| 10 for (int kk = max(0, j - 1); kk <= min(m - 1, j + 1); kk++) {||| 11 if (vis[k][kk] == false && mt[i][j] == mt[k][kk]) {||| 12 c = dfs(k, kk, mt, vis) + 1;||| 13 }||| 14 }||| 15 }||| 16 return c;||| 17 }||| 18 void fac(long long int x, vector<long long int>& v) {||| 19 bitset<32> b(x);||| 20 for (int i = 0; i < 32; i++) {||| 21 if (b[i] == 1) v[i]++;||| 22 }||| 23 }||| 24 void fact(long long int k, vector<long long int>& di) {||| 25 for (long long int i = 1; i <= sqrt(k); i++) {||| 26 if (k % i == 0) {||| 27 di.push_back(i);||| 28 if (i != k / i) di.push_back(k / i);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(NULL);||| 35 long long int t = 1;||| 36 cin >> t;||| 37 while (t--) {||| 38 long long int n;||| 39 cin >> n;||| 40 vector<long long int> v(32, 0);||| 41 vector<long long int> in;||| 42 for (long long int i = 0; i < n; i++) {||| 43 long long int x;||| 44 cin >> x;||| 45 if (x != 0) in.push_back(x);||| 46 fac(x, v);||| 47 }||| 48 long long int mi = n + 1;||| 49 for (int i = 0; i < 32; i++) {||| 50 if (v[i] != 0) {||| 51 mi = min(mi, v[i]);||| 52 }||| 53 }||| 54 if (mi == n + 1) {||| 55 for (int i = 0; i < n; i++) cout << i + 1 << "" "";||| 56 } else {||| 57 vector<long long int> di;||| 58 fact(mi, di);||| 59 vector<long long int> fmo(32, 0);||| 60 for (auto x : in) {||| 61 int k = log2(x);||| 62 fmo[k]++;||| 63 }||| 64 vector<long long int> ans;||| 65 for (auto x : di) {||| 66 bool ok = true;||| 67 for (int i = 0; i < 32; i++) {||| 68 if (v[i] != 0 && v[i] % x != 0) {||| 69 ok = false;||| 70 }||| 71 }||| 72 if (ok) ans.push_back(x);||| 73 }||| 74 sort(ans.begin(), ans.end());||| 75 for (auto x : ans) cout << x << "" "";||| 76 }||| 77 cout << endl;||| 78 }||| 79 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int dfs(int i, int j, vector<vector<long long int>>& mt,||| 4 vector<vector<bool>>& vis) {||| 5 int n = mt.size(), m = mt[0].size();||| 6 if (i < 0 || i >= mt.size() || j < 0 || j >= mt[0].size()) return 0;||| 7 vis[i][j] = true;||| 8 int c = 1;||| 9 for (int k = max(0, i - 1); k <= min(n - 1, i + 1); k++) {||| 10 for (int kk = max(0, j - 1); kk <= min(m - 1, j + 1); kk++) {||| 11 if (vis[k][kk] == false && mt[i][j] == mt[k][kk]) {||| 12 c = dfs(k, kk, mt, vis) + 1;||| 13 }||| 14 }||| 15 }||| 16 return c;||| 17 }||| 18 void fac(long long int x, vector<long long int>& v) {||| 19 bitset<32> b(x);||| 20 for (int i = 0; i < 32; i++) {||| 21 if (b[i] == 1) v[i]++;||| 22 }||| 23 }||| 24 void fact(long long int k, vector<long long int>& di) {||| 25 for (long long int i = 1; i <= sqrt(k); i++) {||| 26 if (k % i == 0) {||| 27 di.push_back(i);||| 28 if (i != k / i) di.push_back(k / i);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(NULL);||| 35 long long int t = 1;||| 36 cin >> t;||| 37 while (t--) {||| 38 long long int n;||| 39 cin >> n;||| 40 vector<long long int> v(32, 0);||| 41 vector<long long int> in;||| 42 for (long long int i = 0; i < n; i++) {||| 43 long long int x;||| 44 cin >> x;||| 45 if (x != 0) in.push_back(x);||| 46 fac(x, v);||| 47 }||| 48 long long int mi = n + 1;||| 49 for (int i = 0; i < 32; i++) {||| 50 if (v[i] != 0) {||| 51 mi = min(mi, v[i]);||| 52 }||| 53 }||| 54 if (mi == n + 1) {||| 55 for (int i = 0; i < n; i++) cout << i + 1 << "" "";||| 56 } else {||| 57 vector<long long int> di;||| 58 fact(mi, di);||| 59 vector<long long int> fmo(32, 0);||| 60 for (auto x : in) {||| 61 int k = log2(x);||| 62 fmo[k]++;||| 63 }||| 64 vector<long long int> ans;||| 65 for (auto x : di) {||| 66 bool ok = true;||| 67 for (int i = 0; i < 32; i++) {||| 68 if (fmo[i] != 0 && fmo[i] % x != 0) {||| 69 ok = false;||| 70 }||| 71 }||| 72 if (ok) ans.push_back(x);||| 73 }||| 74 sort(ans.begin(), ans.end());||| 75 for (auto x : ans) cout << x << "" "";||| 76 }||| 77 cout << endl;||| 78 }||| 79 }||| "	68 if (v[i] != 0 && v[i] % x != 0) {
78	33	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void setIO(const string &name = """") {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 if (name.length()) {||| 8 freopen((name + "".in"").c_str(), ""r"", stdin);||| 9 freopen((name + "".out"").c_str(), ""w"", stdout);||| 10 }||| 11 }||| 12 template <typename T>||| 13 void read(vector<T> &a) {||| 14 for (auto &x : a) cin >> x;||| 15 }||| 16 template <typename T>||| 17 void read(vector<T> &a, long long n) {||| 18 a.resize(n);||| 19 for (auto &x : a) cin >> x;||| 20 }||| 21 template <class T, class U>||| 22 ostream &operator<<(ostream &out, const pair<T, U> &v) {||| 23 out << ""("";||| 24 out << v.first << "","" << v.second;||| 25 return out << "")"";||| 26 }||| 27 template <class T>||| 28 ostream &operator<<(ostream &out, const vector<T> &v) {||| 29 out << ""["";||| 30 for (auto(i) = 0; (i) < ((long long)(v).size()); (i)++) {||| 31 if (i) out << "", "";||| 32 out << v[i];||| 33 }||| 34 return out << ""]"";||| 35 }||| 36 template <typename T>||| 37 void print(vector<T> &a) {||| 38 for (const auto &x : a) cout << x << ' ';||| 39 cout << '\n';||| 40 }||| 41 void MOD(long long &x, long long m = 1000000007) {||| 42 x %= m;||| 43 if (x < 0) x += m;||| 44 }||| 45 template <typename T>||| 46 void dbg(const char *name, T &&arg1) {||| 47 cout << name << "" : "" << arg1 << '\n';||| 48 }||| 49 template <typename T, typename... U>||| 50 void dbg(const char *names, T &&arg1, U &&...args) {||| 51 const char *comma = strchr(names + 1, ',');||| 52 cout.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 53 dbg(comma + 1, args...);||| 54 }||| 55 template <class T>||| 56 void read(T &x) {||| 57 cin >> x;||| 58 }||| 59 template <class T, class... U>||| 60 void read(T &t, U &...u) {||| 61 read(t);||| 62 read(u...);||| 63 }||| 64 long long gcd(long long a, long long b) { return !a ? b : gcd(b % a, a); }||| 65 long long n;||| 66 vector<long long> a;||| 67 vector<long long> cnt;||| 68 void solve() {||| 69 read(n);||| 70 read(a, n);||| 71 cnt.assign(32, 0);||| 72 for (auto(i) = 0; (i) < (32); (i)++) {||| 73 for (auto(j) = 0; (j) < (n); (j)++) {||| 74 if ((1LL << i) & a[j]) {||| 75 cnt[i]++;||| 76 }||| 77 }||| 78 }||| 79 long long g = 0;||| 80 for (auto(i) = 0; (i) < (32); (i)++) {||| 81 g = gcd(cnt[i], g);||| 82 }||| 83 if (g == 0) {||| 84 for (auto(i) = 1; (i) < (n + 1); (i)++) {||| 85 cout << i << ' ';||| 86 }||| 87 cout << '\n';||| 88 return;||| 89 }||| 90 set<long long> s;||| 91 for (long long i = 1; i <= g; i++) {||| 92 if (g % i == 0) {||| 93 s.insert(i);||| 94 }||| 95 }||| 96 for (auto &(c) : (s)) {||| 97 cout << c << ' ';||| 98 }||| 99 cout << '\n';||| 100 }||| 101 int32_t main() {||| 102 setIO();||| 103 long long t;||| 104 cin >> t;||| 105 while (t--) {||| 106 solve();||| 107 }||| 108 return 0;||| 109 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void setIO(const string &name = """") {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 if (name.length()) {||| 8 freopen((name + "".in"").c_str(), ""r"", stdin);||| 9 freopen((name + "".out"").c_str(), ""w"", stdout);||| 10 }||| 11 }||| 12 template <typename T>||| 13 void read(vector<T> &a) {||| 14 for (auto &x : a) cin >> x;||| 15 }||| 16 template <typename T>||| 17 void read(vector<T> &a, long long n) {||| 18 a.resize(n);||| 19 for (auto &x : a) cin >> x;||| 20 }||| 21 template <class T, class U>||| 22 ostream &operator<<(ostream &out, const pair<T, U> &v) {||| 23 out << ""("";||| 24 out << v.first << "","" << v.second;||| 25 return out << "")"";||| 26 }||| 27 template <class T>||| 28 ostream &operator<<(ostream &out, const vector<T> &v) {||| 29 out << ""["";||| 30 for (auto(i) = 0; (i) < ((long long)(v).size()); (i)++) {||| 31 if (i) out << "", "";||| 32 out << v[i];||| 33 }||| 34 return out << ""]"";||| 35 }||| 36 template <typename T>||| 37 void print(vector<T> &a) {||| 38 for (const auto &x : a) cout << x << ' ';||| 39 cout << '\n';||| 40 }||| 41 void MOD(long long &x, long long m = 1000000007) {||| 42 x %= m;||| 43 if (x < 0) x += m;||| 44 }||| 45 template <typename T>||| 46 void dbg(const char *name, T &&arg1) {||| 47 cout << name << "" : "" << arg1 << '\n';||| 48 }||| 49 template <typename T, typename... U>||| 50 void dbg(const char *names, T &&arg1, U &&...args) {||| 51 const char *comma = strchr(names + 1, ',');||| 52 cout.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 53 dbg(comma + 1, args...);||| 54 }||| 55 template <class T>||| 56 void read(T &x) {||| 57 cin >> x;||| 58 }||| 59 template <class T, class... U>||| 60 void read(T &t, U &...u) {||| 61 read(t);||| 62 read(u...);||| 63 }||| 64 long long gcd(long long a, long long b) { return !a ? b : gcd(b % a, a); }||| 65 long long n;||| 66 vector<long long> a;||| 67 vector<long long> cnt;||| 68 void solve() {||| 69 read(n);||| 70 read(a, n);||| 71 cnt.assign(32, 0);||| 72 for (auto(i) = 0; (i) < (32); (i)++) {||| 73 for (auto(j) = 0; (j) < (n); (j)++) {||| 74 if ((1LL << i) & a[j]) {||| 75 cnt[i]++;||| 76 }||| 77 }||| 78 }||| 79 long long g = 0;||| 80 for (auto(i) = 0; (i) < (n); (i)++) {||| 81 g = gcd(cnt[i], g);||| 82 }||| 83 if (g == 0) {||| 84 for (auto(i) = 1; (i) < (n + 1); (i)++) {||| 85 cout << i << ' ';||| 86 }||| 87 cout << '\n';||| 88 return;||| 89 }||| 90 set<long long> s;||| 91 for (long long i = 1; i <= g; i++) {||| 92 if (g % i == 0) {||| 93 s.insert(i);||| 94 }||| 95 }||| 96 for (auto &(c) : (s)) {||| 97 cout << c << ' ';||| 98 }||| 99 cout << '\n';||| 100 }||| 101 int32_t main() {||| 102 setIO();||| 103 long long t;||| 104 cin >> t;||| 105 while (t--) {||| 106 solve();||| 107 }||| 108 return 0;||| 109 }||| "	80 for (auto(i) = 0; (i) < (32); (i)++) {
79	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 5e5 + 5;||| 4 vector<pair<int, int> > g[maxn << 2];||| 5 int id[maxn << 2];||| 6 int le[maxn << 2];||| 7 int be[maxn * 4];||| 8 void build(int rt, int l, int r) {||| 9 if (l == r) {||| 10 id[l] = rt;||| 11 le[rt] = 1;||| 12 be[rt] = l;||| 13 return;||| 14 }||| 15 build(rt << 1, l, ((l + r) >> 1));||| 16 build(rt << 1 | 1, ((l + r) >> 1) + 1, r);||| 17 g[rt].push_back(pair<int, int>(rt << 1, 0));||| 18 g[rt].push_back(pair<int, int>(rt << 1 | 1, 0));||| 19 return;||| 20 }||| 21 void add(int rt, int l, int r, int L, int R, int u) {||| 22 if (L <= l && r <= R) {||| 23 g[u].push_back(pair<int, int>(rt, 1));||| 24 return;||| 25 }||| 26 if (L <= ((l + r) >> 1)) add(rt << 1, l, ((l + r) >> 1), L, R, u);||| 27 if (R > ((l + r) >> 1)) add(rt << 1 | 1, ((l + r) >> 1) + 1, r, L, R, u);||| 28 return;||| 29 }||| 30 int n;||| 31 int a[maxn], b[maxn];||| 32 int dis[maxn << 4], pre[maxn << 4];||| 33 int q[maxn * 40], head = 0, tail = 0;||| 34 int vis[maxn << 4];||| 35 const int inf = 0x3f3f3f3f;||| 36 int main() {||| 37 scanf(""%d"", &n);||| 38 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &a[i]);||| 39 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &b[i]);||| 40 build(1, 0, n);||| 41 int tot = 0;||| 42 for (int i = 0; i <= n; ++i) tot = max(tot, id[i]);||| 43 for (int i = 1; i <= n; ++i) {||| 44 int l = i - a[i], r = i - 1;||| 45 if (l <= r) add(1, 0, n, l, r, tot + i);||| 46 g[id[i]].push_back(pair<int, int>(tot + i + b[i], 0));||| 47 be[tot + i] = i;||| 48 }||| 49 memset(dis, 0x3f, sizeof dis);||| 50 head = tail = maxn * 20;||| 51 q[tail++] = id[n];||| 52 dis[id[n]] = 0;||| 53 while (head < tail) {||| 54 int u = q[head++];||| 55 if (vis[u]) continue;||| 56 vis[u] = 1;||| 57 for (pair<int, int> p : g[u]) {||| 58 int v, w;||| 59 tie(v, w) = p;||| 60 if (dis[v] > dis[u] + w) {||| 61 dis[v] = dis[u] + w;||| 62 if (w)||| 63 q[tail++] = v;||| 64 else||| 65 q[--head] = v;||| 66 pre[v] = u;||| 67 }||| 68 }||| 69 }||| 70 if (dis[id[0]] == inf) {||| 71 puts(""-1"");||| 72 } else {||| 73 vector<int> ans;||| 74 int cur = id[0];||| 75 ans.push_back(0);||| 76 while (cur != id[n]) {||| 77 int nxt = pre[cur];||| 78 if (le[nxt]) {||| 79 ans.push_back(be[nxt]);||| 80 }||| 81 cur = nxt;||| 82 }||| 83 ans.pop_back();||| 84 reverse(ans.begin(), ans.end());||| 85 cout << ans.size() << endl;||| 86 for (int x : ans) printf(""%d "", x);||| 87 }||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 5;||| 4 vector<pair<int, int> > g[maxn << 2];||| 5 int id[maxn << 2];||| 6 int le[maxn << 2];||| 7 int be[maxn * 4];||| 8 void build(int rt, int l, int r) {||| 9 if (l == r) {||| 10 id[l] = rt;||| 11 le[rt] = 1;||| 12 be[rt] = l;||| 13 return;||| 14 }||| 15 build(rt << 1, l, ((l + r) >> 1));||| 16 build(rt << 1 | 1, ((l + r) >> 1) + 1, r);||| 17 g[rt].push_back(pair<int, int>(rt << 1, 0));||| 18 g[rt].push_back(pair<int, int>(rt << 1 | 1, 0));||| 19 return;||| 20 }||| 21 void add(int rt, int l, int r, int L, int R, int u) {||| 22 if (L <= l && r <= R) {||| 23 g[u].push_back(pair<int, int>(rt, 1));||| 24 return;||| 25 }||| 26 if (L <= ((l + r) >> 1)) add(rt << 1, l, ((l + r) >> 1), L, R, u);||| 27 if (R > ((l + r) >> 1)) add(rt << 1 | 1, ((l + r) >> 1) + 1, r, L, R, u);||| 28 return;||| 29 }||| 30 int n;||| 31 int a[maxn], b[maxn];||| 32 int dis[maxn << 4], pre[maxn << 4];||| 33 int q[maxn * 20], head = 0, tail = 0;||| 34 int vis[maxn << 4];||| 35 const int inf = 0x3f3f3f3f;||| 36 int main() {||| 37 scanf(""%d"", &n);||| 38 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &a[i]);||| 39 for (int i = 1; i < n + 1; ++i) scanf(""%d"", &b[i]);||| 40 build(1, 0, n);||| 41 int tot = 0;||| 42 for (int i = 0; i <= n; ++i) tot = max(tot, id[i]);||| 43 for (int i = 1; i <= n; ++i) {||| 44 int l = i - a[i], r = i - 1;||| 45 if (l <= r) add(1, 0, n, l, r, tot + i);||| 46 g[id[i]].push_back(pair<int, int>(tot + i + b[i], 0));||| 47 be[tot + i] = i;||| 48 }||| 49 memset(dis, 0x3f, sizeof dis);||| 50 head = tail = maxn * 20;||| 51 q[tail++] = id[n];||| 52 dis[id[n]] = 0;||| 53 while (head < tail) {||| 54 int u = q[head++];||| 55 if (vis[u]) continue;||| 56 vis[u] = 1;||| 57 for (pair<int, int> p : g[u]) {||| 58 int v, w;||| 59 tie(v, w) = p;||| 60 if (dis[v] > dis[u] + w) {||| 61 dis[v] = dis[u] + w;||| 62 if (w)||| 63 q[tail++] = v;||| 64 else||| 65 q[--head] = v;||| 66 pre[v] = u;||| 67 }||| 68 }||| 69 }||| 70 if (dis[id[0]] == inf) {||| 71 puts(""-1"");||| 72 } else {||| 73 vector<int> ans;||| 74 int cur = id[0];||| 75 ans.push_back(0);||| 76 while (cur != id[n]) {||| 77 int nxt = pre[cur];||| 78 if (le[nxt]) {||| 79 ans.push_back(be[nxt]);||| 80 }||| 81 cur = nxt;||| 82 }||| 83 ans.pop_back();||| 84 reverse(ans.begin(), ans.end());||| 85 cout << ans.size() << endl;||| 86 for (int x : ans) printf(""%d "", x);||| 87 }||| 88 return 0;||| 89 }||| "	3 const int maxn = 5e5 + 5;
79	55	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 const int N = 3e5 + 5;||| 5 int n, a[N], b[N], c[N], t[N];||| 6 pair<int, int> par[N];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) cin >> a[i];||| 10 for (int i = 1; i <= n; i++) cin >> b[i];||| 11 queue<int> Q;||| 12 set<int> S;||| 13 for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9;||| 14 Q.push(n);||| 15 t[n] = 1;||| 16 int inx = -1;||| 17 while (!Q.empty()) {||| 18 int x = Q.front();||| 19 Q.pop();||| 20 int y = x - a[x];||| 21 if (a[x] >= x) {||| 22 inx = x;||| 23 break;||| 24 }||| 25 while (!S.empty()) {||| 26 auto it = S.lower_bound(y);||| 27 if (it == S.end() || *it > x) break;||| 28 if (t[*it + b[*it]] >= t[x] + 1) {||| 29 t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1);||| 30 par[*it + b[*it]] = make_pair(*it, x);||| 31 Q.push(*it + b[*it]);||| 32 }||| 33 S.erase(it);||| 34 }||| 35 }||| 36 cout << (t[inx] ? t[inx] : -1) << '\n';||| 37 if (inx != -1) {||| 38 vector<int> v;||| 39 v.push_back(0);||| 40 while (par[inx].first) {||| 41 v.push_back(par[inx].first);||| 42 inx = par[inx].second;||| 43 }||| 44 reverse(v.begin(), v.end());||| 45 for (auto it : v) cout << it << ' ';||| 46 }||| 47 }||| 48 int main() {||| 49 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 50 int test_cases = 1;||| 51 while (test_cases--) solve();||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 const int N = 3e5 + 5;||| 5 int n, a[N], b[N], c[N], t[N];||| 6 pair<int, int> par[N];||| 7 void solve() {||| 8 cin >> n;||| 9 for (int i = 1; i <= n; i++) cin >> a[i];||| 10 for (int i = 1; i <= n; i++) cin >> b[i];||| 11 queue<int> Q;||| 12 set<int> S;||| 13 for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9;||| 14 Q.push(n);||| 15 t[n] = 1;||| 16 int inx = -1;||| 17 while (!Q.empty()) {||| 18 int x = Q.front();||| 19 Q.pop();||| 20 int y = x - a[x];||| 21 if (a[x] >= x) {||| 22 inx = x;||| 23 }||| 24 while (!S.empty()) {||| 25 auto it = S.lower_bound(y);||| 26 if (it == S.end() || *it > x) break;||| 27 if (t[*it + b[*it]] >= t[x] + 1) {||| 28 t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1);||| 29 par[*it + b[*it]] = make_pair(*it, x);||| 30 Q.push(*it + b[*it]);||| 31 }||| 32 S.erase(it);||| 33 }||| 34 }||| 35 cout << (t[inx] ? t[inx] : -1) << '\n';||| 36 if (inx != -1) {||| 37 vector<int> v;||| 38 v.push_back(0);||| 39 while (par[inx].first) {||| 40 v.push_back(par[inx].first);||| 41 inx = par[inx].second;||| 42 }||| 43 reverse(v.begin(), v.end());||| 44 for (auto it : v) cout << it << ' ';||| 45 }||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 49 int test_cases = 1;||| 50 while (test_cases--) solve();||| 51 return 0;||| 52 }||| 	23 break;
80	40	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 int n, m;||| 8 int A[1000005];||| 9 int B[1000005];||| 10 int T[1000005];||| 11 int S[1000005];||| 12 ll inverse(int s, int e) {||| 13 if (s == e) {||| 14 T[s] = A[s];||| 15 return 0;||| 16 }||| 17 int m = (s + e) / 2;||| 18 ll ans = inverse(s, m) + inverse(m + 1, e);||| 19 for (int i = s; i <= e; i++) {||| 20 S[i] = T[i];||| 21 }||| 22 int i = s, j = m + 1, k = s;||| 23 while (k <= e) {||| 24 if (j > e || (i <= m && S[i] <= S[j]))||| 25 T[k++] = S[i++];||| 26 else||| 27 T[k++] = S[j++], ans += m - i + 1;||| 28 }||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 for (int t = 1; t <= T; t++) {||| 38 cin >> n >> m;||| 39 for (int i = 1; i <= n; i++) cin >> A[i];||| 40 for (int i = 1; i <= m; i++) cin >> B[i];||| 41 sort(B + 1, B + m + 1);||| 42 priority_queue<int> pq;||| 43 ll mx = inverse(1, n);||| 44 for (int i = 1; i <= n; i++) {||| 45 int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 46 int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 47 pq.push(x);||| 48 pq.push(y);||| 49 pq.pop();||| 50 mx += x;||| 51 }||| 52 while (!pq.empty()) {||| 53 mx -= pq.top();||| 54 pq.pop();||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 using pll = pair<ll, ll>;||| 7 int n, m;||| 8 int A[1000005];||| 9 int B[1000005];||| 10 int T[1000005];||| 11 int S[1000005];||| 12 int inverse(int s, int e) {||| 13 if (s == e) {||| 14 T[s] = A[s];||| 15 return 0;||| 16 }||| 17 int m = (s + e) / 2;||| 18 ll ans = inverse(s, m) + inverse(m + 1, e);||| 19 for (int i = s; i <= e; i++) {||| 20 S[i] = T[i];||| 21 }||| 22 int i = s, j = m + 1, k = s;||| 23 while (k <= e) {||| 24 if (j > e || (i <= m && S[i] <= S[j]))||| 25 T[k++] = S[i++];||| 26 else||| 27 T[k++] = S[j++], ans += m - i + 1;||| 28 }||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 for (int t = 1; t <= T; t++) {||| 38 cin >> n >> m;||| 39 for (int i = 1; i <= n; i++) cin >> A[i];||| 40 for (int i = 1; i <= m; i++) cin >> B[i];||| 41 sort(B + 1, B + m + 1);||| 42 priority_queue<int> pq;||| 43 ll mx = inverse(1, n);||| 44 for (int i = 1; i <= n; i++) {||| 45 int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 46 int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1;||| 47 pq.push(x);||| 48 pq.push(y);||| 49 pq.pop();||| 50 mx += x;||| 51 }||| 52 while (!pq.empty()) {||| 53 mx -= pq.top();||| 54 pq.pop();||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	12 ll inverse(int s, int e) {
81	20	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 int x, y;||| 5 bool operator<(const node &a) const {||| 6 if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y);||| 7 return min(x, y) < min(a.x, a.y);||| 8 }||| 9 };||| 10 node st[500000 + 1];||| 11 int n, d, cnt;||| 12 int main() {||| 13 cin >> n >> d;||| 14 for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y;||| 15 sort(st + 1, st + n + 1);||| 16 for (int i = 1; i <= n; ++i)||| 17 if (st[i].x >= d) cnt++, d = max(d, st[i].y);||| 18 cout << cnt << endl;||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 int x, y;||| 5 bool operator<(const node &a) const {||| 6 if (min(x, y) != min(a.x, a.y)) return min(x, y) < min(a.x, a.y);||| 7 return max(x, y) < max(a.x, a.y);||| 8 }||| 9 };||| 10 node st[500000 + 1];||| 11 int n, d, cnt;||| 12 int main() {||| 13 cin >> n >> d;||| 14 for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y;||| 15 sort(st + 1, st + n + 1);||| 16 for (int i = 1; i <= n; ++i)||| 17 if (st[i].x >= d) cnt++, d = max(d, st[i].y);||| 18 cout << cnt << endl;||| 19 return 0;||| 20 }||| 	6 if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y);
98	130	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 string s, s1;||| 66 cin >> s >> s1;||| 67 vector<int> v;||| 68 for (int i = 0; i < s1.size(); i++) {||| 69 for (int j = 0; j < s.size(); j++) {||| 70 if (s1[i] == s[j]) {||| 71 v.push_back(j);||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 int sum = 0;||| 77 for (int i = 1; i < v.size(); i++) {||| 78 sum += abs(v[i] - v[i - 1]);||| 79 }||| 80 cout << sum << endl;||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 long long t;||| 87 cin >> t;||| 88 for (int it = 1; it <= t; it++) {||| 89 solve();||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 string s, s1;||| 66 cin >> s >> s1;||| 67 vector<int> v;||| 68 for (int i = 0; i < s1.size(); i++) {||| 69 for (int j = 0; i < s.size(); j++) {||| 70 if (s1[i] == s[j]) {||| 71 v.push_back(j);||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 int sum = 0;||| 77 for (int i = 1; i < v.size(); i++) {||| 78 sum += abs(v[i] - v[i - 1]);||| 79 }||| 80 cout << sum << endl;||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 long long t;||| 87 cin >> t;||| 88 for (int it = 1; it <= t; it++) {||| 89 solve();||| 90 }||| 91 return 0;||| 92 }||| "	69 for (int j = 0; j < s.size(); j++) {
98	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char a[26];||| 4 int num[26];||| 5 int main() {||| 6 int n;||| 7 scanf(""%d"", &n);||| 8 char b[50];||| 9 for (int i = 0; i < n; i++) {||| 10 int time = 0;||| 11 scanf(""%s"", &a);||| 12 scanf(""%s"", &b);||| 13 for (int i1 = 0; i1 < 26; i1++) {||| 14 num[a[i1] - 'a'] = i1;||| 15 }||| 16 for (int i2 = 0; i2 < strlen(b) - 1; i2++) {||| 17 time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']);||| 18 }||| 19 printf(""%d\n"", time);||| 20 }||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char a[26];||| 4 int num[26];||| 5 int main() {||| 6 int n;||| 7 scanf(""%d"", &n);||| 8 char b[50];||| 9 for (int i = 0; i < n; i++) {||| 10 int time = 0;||| 11 scanf(""%s"", &a);||| 12 scanf(""%s"", &b);||| 13 for (int i1 = 0; i1 < 26; i1++) {||| 14 num[a[i1] - 'a'] = i1;||| 15 }||| 16 for (int i2 = 0; i2 < strlen(b) - 1; i2++) {||| 17 time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']);||| 18 }||| 19 printf(""������Ϊ%d\n"", time);||| 20 }||| 21 }||| "	"19 printf(""%d\n"", time);"
98	105	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 map<char, int> mp;||| 7 while (t--) {||| 8 string x;||| 9 cin >> x;||| 10 for (int i = 1; i <= 26; i++) {||| 11 mp[x[i - 1]] = i;||| 12 }||| 13 string s;||| 14 cin >> s;||| 15 int ans = 0;||| 16 for (int i = 1; i < s.length(); i++) {||| 17 ans += abs(mp[s[i]] - mp[s[i - 1]]);||| 18 }||| 19 cout << ans << endl;||| 20 }||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 map<char, int> mp;||| 7 while (t--) {||| 8 string x;||| 9 cin >> x;||| 10 for (int i = 1; i < 26; i++) {||| 11 mp[x[i - 1]] = i;||| 12 }||| 13 string s;||| 14 cin >> s;||| 15 int ans = 0;||| 16 for (int i = 1; i < s.length(); i++) {||| 17 ans += abs(mp[s[i]] - mp[s[i - 1]]);||| 18 }||| 19 cout << ans << endl;||| 20 }||| 21 }||| 	10 for (int i = 1; i <= 26; i++) {
98	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s, d;||| 8 cin >> s >> d;||| 9 int j, c = 0, k, i;||| 10 for (i = 0; i < s.length(); i++) {||| 11 for (k = 0; k < s.length(); k++) {||| 12 for (j = 0; j < d.length() - 1; j++) {||| 13 if (s[i] == d[j] && s[k] == d[j + 1]) c = c + abs(i - k);||| 14 }||| 15 }||| 16 }||| 17 cout << c << ""\n"";||| 18 }||| 19 return 0;||| 20 }||| "	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s, d;||| 8 cin >> s >> d;||| 9 int j, c = 0, k, i;||| 10 for (i = 0; i < s.length(); i++) {||| 11 for (k = 0; k < s.length(); k++) {||| 12 for (j = 0; j < d.length() - 1; j++) {||| 13 if (s[i] == d[j] && s[k] == d[j + 1]) c = c + abs(i - k);||| 14 }||| 15 }||| 16 }||| 17 cout << c;||| 18 }||| 19 return 0;||| 20 }||| 	"17 cout << c << ""\n"";"
98	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long pow_mod(long long nn, long long pp, long long mm) {||| 4 long long res = 1;||| 5 while (pp > 0) {||| 6 if (pp & 1) res = (res * nn) % mm;||| 7 pp = pp >> 1;||| 8 nn = (nn * nn) % mm;||| 9 }||| 10 return res;||| 11 }||| 12 long long _gcd(long long a, long long b) {||| 13 if (b == 0) return a;||| 14 return _gcd(b, a % b);||| 15 }||| 16 void dhimanda();||| 17 int main() {||| 18 int t = 1;||| 19 scanf(""%d"", &t);||| 20 for (int i = int(1); i <= int(t); i++) {||| 21 dhimanda();||| 22 }||| 23 return 0;||| 24 }||| 25 void dhimanda() {||| 26 string a, b;||| 27 cin >> a >> b;||| 28 std::map<char, int> map;||| 29 map.clear();||| 30 for (int i = 0; i < a.size(); ++i) {||| 31 map[a[i]] = i;||| 32 }||| 33 int ans = 0;||| 34 for (int i = 0; i < b.size() - 1; ++i) {||| 35 ans += abs(map[b[i]] - map[b[i + 1]]);||| 36 }||| 37 cout << ans << '\n';||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long pow_mod(long long nn, long long pp, long long mm) {||| 4 long long res = 1;||| 5 while (pp > 0) {||| 6 if (pp & 1) res = (res * nn) % mm;||| 7 pp = pp >> 1;||| 8 nn = (nn * nn) % mm;||| 9 }||| 10 return res;||| 11 }||| 12 long long _gcd(long long a, long long b) {||| 13 if (b == 0) return a;||| 14 return _gcd(b, a % b);||| 15 }||| 16 void dhimanda();||| 17 int main() {||| 18 int t = 1;||| 19 scanf(""%d"", &t);||| 20 for (int i = int(1); i <= int(t); i++) {||| 21 dhimanda();||| 22 }||| 23 return 0;||| 24 }||| 25 void dhimanda() {||| 26 string a, b;||| 27 cin >> a >> b;||| 28 std::map<char, int> map;||| 29 map.clear();||| 30 for (int i = 0; i < a.size(); ++i) {||| 31 map[a[i]]++;||| 32 }||| 33 int ans = 0;||| 34 for (int i = 0; i < b.size() - 1; ++i) {||| 35 ans += abs(map[b[i]] - map[b[i + 1]]);||| 36 }||| 37 cout << ans << '\n';||| 38 }||| "	31 map[a[i]] = i;
98	98	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string order;||| 8 cin >> order;||| 9 string s;||| 10 cin >> s;||| 11 map<char, int> m;||| 12 int c = 1;||| 13 for (auto i : order) {||| 14 m[i] = c;||| 15 c++;||| 16 }||| 17 int ans = 0;||| 18 for (int i = 1; i < s.length(); i++) {||| 19 ans += abs(m[s[i]] - m[s[i - 1]]);||| 20 }||| 21 std::cout << ans << std::endl;||| 22 }||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string order;||| 8 cin >> order;||| 9 string s;||| 10 cin >> s;||| 11 map<char, int> m;||| 12 int c = 1;||| 13 for (auto i : order) {||| 14 m[i] = c;||| 15 c++;||| 16 }||| 17 int ans = 0;||| 18 for (int i = 1; i < s.length(); i++) {||| 19 ans += (m[s[i]] - m[s[i - 1]]);||| 20 }||| 21 std::cout << ans << std::endl;||| 22 }||| 23 return 0;||| 24 }||| 	19 ans += abs(m[s[i]] - m[s[i - 1]]);
98	167	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str1, str2;||| 8 cin >> str1 >> str2;||| 9 int ans = 0, pos1 = 0, pos2 = 0;||| 10 for (int i = 0; i < str2.length() - 1; i++) {||| 11 for (int j = 0; j <= str1.length(); j++) {||| 12 if (str2[i] == str1[j]) {||| 13 pos1 = j;||| 14 }||| 15 if (str2[i + 1] == str1[j]) {||| 16 pos2 = j;||| 17 }||| 18 }||| 19 ans += abs(pos2 - pos1);||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str1, str2;||| 8 cin >> str1 >> str2;||| 9 int ans = 0, pos1 = 0, pos2 = 0;||| 10 for (int i = 0; i < str2.length() - 1; i++) {||| 11 for (int j = 1; j <= str1.length(); j++) {||| 12 if (str2[i] == str1[j]) {||| 13 pos1 = j;||| 14 }||| 15 if (str2[i + 1] == str1[j]) {||| 16 pos2 = j;||| 17 }||| 18 }||| 19 ans += abs(pos2 - pos1);||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 }||| 	11 for (int j = 0; j <= str1.length(); j++) {
98	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int q, res;||| 5 string keyboard, st;||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> keyboard;||| 9 cin >> st;||| 10 int v[100];||| 11 res = 0;||| 12 for (int i = 0; i < st.length(); i++) {||| 13 for (int j = 0; j < 26; j++) {||| 14 if (keyboard[j] == st[i]) {||| 15 v[i] = j;||| 16 if (i > 0) res += abs(j - v[i - 1]);||| 17 }||| 18 }||| 19 }||| 20 if (st.length() == 1)||| 21 cout << ""0""||| 22 << ""\n"";||| 23 else||| 24 cout << res << ""\n"";||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int q, res;||| 5 string keyboard, st;||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> keyboard;||| 9 cin >> st;||| 10 int v[100];||| 11 res = 0;||| 12 for (int i = 0; i < st.length(); i++) {||| 13 for (int j = 0; j < 26; j++) {||| 14 if (keyboard[j] == st[i]) {||| 15 v[i] = j;||| 16 if (i > 0) res = abs(j - v[i - 1]);||| 17 }||| 18 }||| 19 }||| 20 if (st.length() == 1)||| 21 cout << ""0""||| 22 << ""\n"";||| 23 else||| 24 cout << res << ""\n"";||| 25 }||| 26 }||| "	16 if (i > 0) res += abs(j - v[i - 1]);
98	164	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 string alf;||| 8 cin >> alf;||| 9 string word;||| 10 cin >> word;||| 11 if (word.size() == 1) {||| 12 cout << 0 << endl;||| 13 continue;||| 14 }||| 15 int result = 0;||| 16 int temp = 0;||| 17 for (int j = 1; j < word.size(); j++) {||| 18 temp = alf.find(word[j]) - alf.find(word[j - 1]);||| 19 result += abs(temp);||| 20 temp = 0;||| 21 }||| 22 cout << result << endl;||| 23 }||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 string alf;||| 8 cin >> alf;||| 9 string word;||| 10 cin >> word;||| 11 if (word.size() == 1) {||| 12 cout << 1 << endl;||| 13 continue;||| 14 }||| 15 int result = 0;||| 16 int temp = 0;||| 17 for (int j = 1; j < word.size(); j++) {||| 18 temp = alf.find(word[j]) - alf.find(word[j - 1]);||| 19 result += abs(temp);||| 20 temp = 0;||| 21 }||| 22 cout << result << endl;||| 23 }||| 24 }||| 	12 cout << 0 << endl;
82	132	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 300005;||| 4 int n, q, k, o, s[N], v[N], lg[N], a[N], g[N], h[N][22];||| 5 long long f[N], ans[N];||| 6 vector<pair<int, int>> qr[N];||| 7 int find(int l, int r) {||| 8 int k = lg[r - l + 1];||| 9 return min(h[l][k], h[r - (1 << k) + 1][k]);||| 10 }||| 11 int main() {||| 12 scanf(""%d%d%d"", &n, &q, &k);||| 13 for (int i = (1); i <= (n); i++) scanf(""%d"", &a[i]), h[i][0] = a[i];||| 14 for (int i = (2); i <= (n); i++) lg[i] = lg[i >> 1] + 1;||| 15 for (int i = (1); i <= (20); i++)||| 16 for (int j = (1); j <= (n); j++)||| 17 if (j + (1 << i) - 1 <= n)||| 18 h[j][i] = min(h[j][i - 1], h[j + (1 << i - 1)][i - 1]);||| 19 for (int i = (1); i <= (q); i++) {||| 20 int l, r;||| 21 scanf(""%d%d"", &l, &r);||| 22 qr[l].push_back({r, i});||| 23 }||| 24 for (int i = (0); i <= (k - 1); i++) {||| 25 o = 0, s[0] = n - i + k;||| 26 for (int j = n - i; j >= 1; j -= k) {||| 27 while (o && v[o] >= a[j]) o--;||| 28 s[++o] = j, v[o] = a[j],||| 29 f[o] = f[o - 1] + 1ll * (s[o - 1] - s[o]) / k * a[j];||| 30 for (auto [x, se] : qr[j]) {||| 31 int t = (x / k) * k + (n - i) % k, l = 1, r = o, as = 0;||| 32 if (t > x) t -= k;||| 33 while (l <= r) {||| 34 int mid = (l + r) >> 1;||| 35 if (s[mid] <= x)||| 36 as = mid, r = mid - 1;||| 37 else||| 38 l = mid + 1;||| 39 }||| 40 ans[se] = f[o] - f[as] + 1ll * ((t - s[as]) / k + 1) * v[as];||| 41 }||| 42 if (j < k) break;||| 43 while (o && v[o] >= find(j - k + 1, j)) o--;||| 44 s[++o] = j, v[o] = find(j - k + 1, j),||| 45 f[o] = f[o - 1] + 1ll * (s[o - 1] - s[o]) / k * v[o];||| 46 }||| 47 }||| 48 for (int i = (1); i <= (q); i++) printf(""%lld\n"", ans[i]);||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 300005;||| 4 int n, q, k, o, s[N], v[N], lg[N], a[N], g[N], h[N][22];||| 5 long long f[N], ans[N];||| 6 vector<pair<int, int>> qr[N];||| 7 int find(int l, int r) {||| 8 int k = lg[r - l + 1];||| 9 return min(h[l][k], h[r - (1 << k) + 1][k]);||| 10 }||| 11 int main() {||| 12 scanf(""%d%d%d"", &n, &q, &k);||| 13 for (int i = (1); i <= (n); i++) scanf(""%d"", &a[i]), h[i][0] = a[i];||| 14 for (int i = (2); i <= (n); i++) lg[i] = lg[i >> 1] + 1;||| 15 for (int i = (1); i <= (20); i++)||| 16 for (int j = (1); j <= (n); j++)||| 17 if (j + (1 << i) - 1 <= n)||| 18 h[j][i] = min(h[j][i - 1], h[j + (1 << i - 1)][i - 1]);||| 19 for (int i = (1); i <= (q); i++) {||| 20 int l, r;||| 21 scanf(""%d%d"", &l, &r);||| 22 qr[l].push_back({r, i});||| 23 }||| 24 for (int i = (0); i <= (k - 1); i++) {||| 25 o = 0, s[0] = n - i + k;||| 26 for (int j = n - i; j >= 1; j -= k) {||| 27 while (o && v[o] >= a[j]) o--;||| 28 s[++o] = j, v[o] = a[j],||| 29 f[o] = f[o - 1] + 1ll * (s[o - 1] - s[o]) / k * a[j];||| 30 for (auto [x, se] : qr[j]) {||| 31 int t = (x / k) * k + (n - i) % k, l = 1, r = o, as = 0;||| 32 if (t > x) t -= k;||| 33 while (l <= r) {||| 34 int mid = (l + r) >> 1;||| 35 if (s[mid] <= x)||| 36 as = mid, r = mid - 1;||| 37 else||| 38 l = mid + 1;||| 39 }||| 40 ans[se] = f[o] - f[as] + 1ll * ((t - s[as]) / k + 1) * v[as];||| 41 }||| 42 if (j < k) break;||| 43 while (o && v[o] >= find(j - k + 1, j)) o--;||| 44 s[++o] = j, v[o] = find(j - k + 1, j),||| 45 f[o] = f[o - 1] + 1ll * (s[o - 1] - s[o]) / k * v[o];||| 46 }||| 47 }||| 48 for (int i = (1); i <= (q); i++) printf(""%d\n"", ans[i]);||| 49 return 0;||| 50 }||| "	"48 for (int i = (1); i <= (q); i++) printf(""%lld\n"", ans[i]);"
82	112	1 #include <bits/stdc++.h>||| 2 using ll = long long;||| 3 int const nmax = 300000;||| 4 int const inf = 1000000000;||| 5 int const lgmax = 20;||| 6 int v[5 + nmax], cost[5 + nmax];||| 7 int far[1 + lgmax][5 + nmax];||| 8 ll farcost[1 + lgmax][5 + nmax];||| 9 int main() {||| 10 std::ios::sync_with_stdio(0);||| 11 std::cin.tie(0);||| 12 int n, q, k;||| 13 std::cin >> n >> q >> k;||| 14 for (int i = 1; i <= n; i++) std::cin >> v[i];||| 15 std::deque<int> dq;||| 16 for (int i = n; 1 <= i; i--) {||| 17 while (0 < dq.size() && v[i] <= v[dq.back()]) dq.pop_back();||| 18 dq.push_back(i);||| 19 while (i + k < dq.front()) dq.pop_front();||| 20 cost[i] = v[dq.front()];||| 21 }||| 22 far[0][n + 1] = n + 1;||| 23 cost[n + 1] = 0;||| 24 for (int i = n; 1 <= i; i--) {||| 25 far[0][i] = i + k;||| 26 if (n < far[0][i]) far[0][i] = n + 1;||| 27 while (cost[i] < cost[far[0][i]]) far[0][i] = far[0][far[0][i]];||| 28 farcost[0][i] = 1LL * (far[0][i] - i + k - 1) / k * cost[i];||| 29 }||| 30 for (int h = 1; h <= lgmax; h++)||| 31 for (int i = 1; i <= n + 1; i++) {||| 32 far[h][i] = far[h - 1][far[h - 1][i]];||| 33 farcost[h][i] = farcost[h - 1][i] + farcost[h - 1][far[h - 1][i]];||| 34 }||| 35 for (int i = 1; i <= q; i++) {||| 36 int x, y;||| 37 std::cin >> x >> y;||| 38 ll result = v[x];||| 39 for (int h = lgmax; 0 <= h; h--)||| 40 if (far[h][x] <= y) {||| 41 result += farcost[h][x];||| 42 x = far[h][x];||| 43 }||| 44 result += 1LL * (y - x) / k * cost[x];||| 45 std::cout << result << '\n';||| 46 }||| 47 return 0;||| 48 }||| 	1 #include <bits/stdc++.h>||| 2 using ll = long long;||| 3 int const nmax = 300000;||| 4 int const inf = 1000000000;||| 5 int const lgmax = 20;||| 6 int v[5 + nmax], cost[5 + nmax];||| 7 int far[1 + lgmax][5 + nmax];||| 8 ll farcost[1 + lgmax][5 + nmax];||| 9 int main() {||| 10 std::ios::sync_with_stdio(0);||| 11 std::cin.tie(0);||| 12 int n, q, k;||| 13 std::cin >> n >> q >> k;||| 14 for (int i = 1; i <= n; i++) std::cin >> v[i];||| 15 std::deque<int> dq;||| 16 for (int i = n; 1 <= i; i--) {||| 17 while (0 < dq.size() && v[i] <= v[dq.back()]) dq.pop_back();||| 18 dq.push_back(i);||| 19 while (i + k <= dq.front()) dq.pop_front();||| 20 cost[i] = v[dq.front()];||| 21 }||| 22 far[0][n + 1] = n + 1;||| 23 cost[n + 1] = 0;||| 24 for (int i = n; 1 <= i; i--) {||| 25 far[0][i] = i + k;||| 26 if (n < far[0][i]) far[0][i] = n + 1;||| 27 while (cost[i] < cost[far[0][i]]) far[0][i] = far[0][far[0][i]];||| 28 farcost[0][i] = 1LL * (far[0][i] - i + k - 1) / k * cost[i];||| 29 }||| 30 for (int h = 1; h <= lgmax; h++)||| 31 for (int i = 1; i <= n + 1; i++) {||| 32 far[h][i] = far[h - 1][far[h - 1][i]];||| 33 farcost[h][i] = farcost[h - 1][i] + farcost[h - 1][far[h - 1][i]];||| 34 }||| 35 for (int i = 1; i <= q; i++) {||| 36 int x, y;||| 37 std::cin >> x >> y;||| 38 ll result = v[x];||| 39 for (int h = lgmax; 0 <= h; h--)||| 40 if (far[h][x] <= y) {||| 41 result += farcost[h][x];||| 42 x = far[h][x];||| 43 }||| 44 result += 1LL * (y - x) / k * cost[x];||| 45 std::cout << result << '\n';||| 46 }||| 47 return 0;||| 48 }||| 	19 while (i + k < dq.front()) dq.pop_front();
82	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using lint = long long;||| 4 using pi = pair<lint, lint>;||| 5 const int MAXN = 300005;||| 6 int n, q, k;||| 7 lint a[MAXN], val[MAXN];||| 8 lint minv[20][MAXN];||| 9 int nxt[20][MAXN];||| 10 lint dp[MAXN];||| 11 int find_first_smaller(int x, int y) {||| 12 if (x > n) return 1e9;||| 13 if (minv[19][x] >= y) return 1e9;||| 14 int ret = 0;||| 15 for (int i = 18; i >= 0; i--) {||| 16 if (minv[i][x] >= y) {||| 17 ret += (1 << i);||| 18 x += (1 << i) * k;||| 19 }||| 20 }||| 21 return x;||| 22 }||| 23 lint shoot(int s, int x) {||| 24 if (s > n) return 0;||| 25 int ffs = find_first_smaller(s, x);||| 26 int len = (n - s) / k + 1;||| 27 if (ffs > n) return 1ll * len * x;||| 28 return dp[ffs] + 1ll * ((ffs - s) / k) * x;||| 29 }||| 30 lint query(int s, int e, int x) {||| 31 if (s > e) return 0;||| 32 int len = (e - s) / k + 1;||| 33 lint after_path = x;||| 34 int pos = s;||| 35 for (int i = 0; i < 20; i++) {||| 36 if ((len >> i) & 1) {||| 37 after_path = min(after_path, minv[i][pos]);||| 38 pos += (k << i);||| 39 }||| 40 }||| 41 return shoot(s, x) - shoot(pos, after_path);||| 42 }||| 43 int main() {||| 44 priority_queue<pi, vector<pi>, greater<pi>> pq;||| 45 scanf(""%d %d %d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; i++) {||| 47 scanf(""%lld"", &a[i]);||| 48 pq.emplace(a[i], i);||| 49 while (((int)(pq).size()) && pq.top().second <= i - k) pq.pop();||| 50 val[i] = pq.top().first;||| 51 minv[0][i] = val[i];||| 52 nxt[0][i] = min(i + k, n + 1);||| 53 }||| 54 nxt[0][n + 1] = n + 1;||| 55 minv[0][n + 1] = 2e9;||| 56 for (int i = 1; i < 20; i++) {||| 57 for (int j = 1; j <= n + 1; j++) {||| 58 minv[i][j] = min(minv[i - 1][j], minv[i - 1][nxt[i - 1][j]]);||| 59 nxt[i][j] = nxt[i - 1][nxt[i - 1][j]];||| 60 }||| 61 }||| 62 for (int i = n; i; i--) {||| 63 dp[i] = shoot(i + k, val[i]) + val[i];||| 64 }||| 65 while (q--) {||| 66 int l, r;||| 67 scanf(""%d %d"", &l, &r);||| 68 lint ans = a[l] + query(l + k, r, a[l]);||| 69 printf(""%lld\n"", ans);||| 70 }||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using lint = long long;||| 4 using pi = pair<lint, lint>;||| 5 const int MAXN = 300005;||| 6 int n, q, k;||| 7 lint a[MAXN], val[MAXN];||| 8 lint minv[20][MAXN];||| 9 int nxt[20][MAXN];||| 10 lint dp[MAXN];||| 11 int find_first_smaller(int x, int y) {||| 12 if (x > n) return 1e9;||| 13 if (minv[19][x] >= y) return 1e9;||| 14 int ret = 0;||| 15 for (int i = 18; i >= 0; i--) {||| 16 if (minv[i][x] >= y) {||| 17 ret += (1 << i);||| 18 x += (1 << i) * k;||| 19 }||| 20 }||| 21 return x;||| 22 }||| 23 lint shoot(int s, int x) {||| 24 if (s > n) return 0;||| 25 int ffs = find_first_smaller(s, x);||| 26 int len = (n - s) / k + 1;||| 27 if (ffs > n) return 1ll * len * x;||| 28 return dp[ffs] + ((ffs - s) / k) * x;||| 29 }||| 30 lint query(int s, int e, int x) {||| 31 if (s > e) return 0;||| 32 int len = (e - s) / k + 1;||| 33 lint after_path = x;||| 34 int pos = s;||| 35 for (int i = 0; i < 20; i++) {||| 36 if ((len >> i) & 1) {||| 37 after_path = min(after_path, minv[i][pos]);||| 38 pos += (k << i);||| 39 }||| 40 }||| 41 return shoot(s, x) - shoot(pos, after_path);||| 42 }||| 43 int main() {||| 44 priority_queue<pi, vector<pi>, greater<pi>> pq;||| 45 scanf(""%d %d %d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; i++) {||| 47 scanf(""%lld"", &a[i]);||| 48 pq.emplace(a[i], i);||| 49 while (((int)(pq).size()) && pq.top().second <= i - k) pq.pop();||| 50 val[i] = pq.top().first;||| 51 minv[0][i] = val[i];||| 52 nxt[0][i] = min(i + k, n + 1);||| 53 }||| 54 nxt[0][n + 1] = n + 1;||| 55 minv[0][n + 1] = 2e9;||| 56 for (int i = 1; i < 20; i++) {||| 57 for (int j = 1; j <= n + 1; j++) {||| 58 minv[i][j] = min(minv[i - 1][j], minv[i - 1][nxt[i - 1][j]]);||| 59 nxt[i][j] = nxt[i - 1][nxt[i - 1][j]];||| 60 }||| 61 }||| 62 for (int i = n; i; i--) {||| 63 dp[i] = shoot(i + k, val[i]) + val[i];||| 64 }||| 65 while (q--) {||| 66 int l, r;||| 67 scanf(""%d %d"", &l, &r);||| 68 lint ans = a[l] + query(l + k, r, a[l]);||| 69 printf(""%lld\n"", ans);||| 70 }||| 71 }||| "	28 return dp[ffs] + 1ll * ((ffs - s) / k) * x;
82	49	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 5;||| 4 int read() {||| 5 int s = 0;||| 6 char c = getchar(), lc = '+';||| 7 while (c < '0' || '9' < c) lc = c, c = getchar();||| 8 while ('0' <= c && c <= '9') s = s * 10 + c - '0', c = getchar();||| 9 return lc == '-' ? -s : s;||| 10 }||| 11 void write(long long x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x < 10)||| 14 putchar(x + '0');||| 15 else||| 16 write(x / 10), putchar(x % 10 + '0');||| 17 }||| 18 void print(long long x, char c = '\n') {||| 19 write(x);||| 20 putchar(c);||| 21 }||| 22 int a[N], n, Q, k;||| 23 struct Query {||| 24 int l, len, id;||| 25 };||| 26 long long ans[N];||| 27 vector<int> s[N], g[N];||| 28 vector<Query> q[N];||| 29 void ysgs(int n) {||| 30 static int q[N], h = 1, t = 0;||| 31 for (int i = 0; i < n; i++) {||| 32 while (h <= t && a[q[t]] >= a[i]) t--;||| 33 q[++t] = i;||| 34 if (q[h] <= i - k) h++;||| 35 s[i % k].push_back(a[q[h]]);||| 36 g[i % k].push_back(a[i]);||| 37 }||| 38 }||| 39 void solve(vector<int> &a, vector<int> &b, vector<Query> &c) {||| 40 int top = 0;||| 41 static int st[N];||| 42 static long long sum[N];||| 43 int n = st[0] = a.size();||| 44 a.push_back(0);||| 45 vector<vector<pair<int, int>>> q(n);||| 46 for (auto i : c) q[i.l].push_back(make_pair(i.len, i.id));||| 47 for (int i = n - 1; i >= 0; i--) {||| 48 int pos = lower_bound(st + 1, st + top + 1, b[i],||| 49 [&](int x, int y) { return a[x] < y; }) -||| 50 st - 1;||| 51 for (auto j : q[i]) {||| 52 int len = j.first;||| 53 ans[j.second] = 1LL * b[i] * min(len + 1, st[pos] - i);||| 54 if (i + len >= st[pos]) {||| 55 int tmp = lower_bound(st, st + top + 1, i + len,||| 56 [&](int x, int y) { return x > y; }) -||| 57 st;||| 58 ans[j.second] += sum[pos] - sum[tmp];||| 59 ans[j.second] += 1LL * a[st[tmp]] * (i + len - st[tmp] + 1);||| 60 }||| 61 }||| 62 while (top && a[st[top]] >= a[i]) top--;||| 63 st[++top] = i;||| 64 sum[top] = 1LL * (st[top - 1] - i) * a[i] + sum[top - 1];||| 65 }||| 66 }||| 67 signed main(signed Goodbye, char *Wangang[]) {||| 68 (void)Goodbye, (void)Wangang;||| 69 n = read(), Q = read(), k = read();||| 70 for (int i = 0; i < n; i++) a[i] = read();||| 71 ysgs(n);||| 72 for (int i = 0; i < Q; i++) {||| 73 int l = read() - 1, r = read() - 1;||| 74 q[l % k].push_back((Query){l / k, (r - l) / k, i});||| 75 }||| 76 for (int i = 0; i < k; i++) solve(s[i], g[i], q[i]);||| 77 for (int i = 0; i < Q; i++) print(ans[i]);||| 78 return 0;||| 79 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 5;||| 4 int read() {||| 5 int s = 0;||| 6 char c = getchar(), lc = '+';||| 7 while (c < '0' || '9' < c) lc = c, c = getchar();||| 8 while ('0' <= c && c <= '9') s = s * 10 + c - '0', c = getchar();||| 9 return lc == '-' ? -s : s;||| 10 }||| 11 void write(long long x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x < 10)||| 14 putchar(x + '0');||| 15 else||| 16 write(x / 10), putchar(x % 10 + '0');||| 17 }||| 18 void print(long long x, char c = '\n') {||| 19 write(x);||| 20 putchar(c);||| 21 }||| 22 int a[N], n, Q, k;||| 23 struct Query {||| 24 int l, len, id;||| 25 };||| 26 long long ans[N];||| 27 vector<int> s[N], g[N];||| 28 vector<Query> q[N];||| 29 void ysgs(int n) {||| 30 static int q[N], h = 1, t = 0;||| 31 for (int i = 0; i < n; i++) {||| 32 while (h <= t && a[q[t]] >= a[i]) t--;||| 33 q[++t] = i;||| 34 if (q[h] <= i - k) h++;||| 35 s[i % k].push_back(a[q[h]]);||| 36 g[i % k].push_back(a[i]);||| 37 }||| 38 }||| 39 void solve(vector<int> &a, vector<int> &b, vector<Query> &c) {||| 40 int top = 0;||| 41 static int st[N];||| 42 static long long sum[N];||| 43 int n = st[0] = a.size();||| 44 a.push_back(0);||| 45 vector<vector<pair<int, int>>> q(n);||| 46 for (auto i : c) q[i.l].push_back(make_pair(i.len, i.id));||| 47 for (int i = n - 1; i >= 0; i--) {||| 48 int pos = lower_bound(st + 1, st + top + 1, b[i],||| 49 [&](int x, int y) { return a[x] < y; }) -||| 50 st - 1;||| 51 for (auto j : q[i]) {||| 52 int len = j.first;||| 53 ans[j.second] = 1LL * b[i] * min(len + 1, st[pos] - i);||| 54 if (i + len >= st[pos]) {||| 55 int tmp = lower_bound(st, st + top + 1, i + len,||| 56 [&](int x, int y) { return x > y; }) -||| 57 st;||| 58 ans[j.second] += sum[top] - sum[tmp];||| 59 ans[j.second] += 1LL * a[st[tmp]] * (i + len - st[tmp] + 1);||| 60 }||| 61 }||| 62 while (top && a[st[top]] >= a[i]) top--;||| 63 st[++top] = i;||| 64 sum[top] = 1LL * (st[top - 1] - i) * a[i] + sum[top - 1];||| 65 }||| 66 }||| 67 signed main(signed Goodbye, char *Wangang[]) {||| 68 (void)Goodbye, (void)Wangang;||| 69 n = read(), Q = read(), k = read();||| 70 for (int i = 0; i < n; i++) a[i] = read();||| 71 ysgs(n);||| 72 for (int i = 0; i < Q; i++) {||| 73 int l = read() - 1, r = read() - 1;||| 74 q[l % k].push_back((Query){l / k, (r - l) / k, i});||| 75 }||| 76 for (int i = 0; i < k; i++) solve(s[i], g[i], q[i]);||| 77 for (int i = 0; i < Q; i++) print(ans[i]);||| 78 return 0;||| 79 }||| 	58 ans[j.second] += sum[pos] - sum[tmp];
82	91	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)3e5 + 50, LOGN = 19;||| 4 struct RMQ {||| 5 int n;||| 6 int mm[N], st[LOGN][N];||| 7 void build(int *x) {||| 8 mm[0] = -1;||| 9 for (int i = 1; i <= n; i++)||| 10 mm[i] = (i & (i - 1)) == 0 ? mm[i - 1] + 1 : mm[i - 1];||| 11 for (int i = 0; i < n; i++) {||| 12 st[0][i] = x[i];||| 13 }||| 14 for (int lg = 1; lg < LOGN; lg++) {||| 15 for (int j = 0; j + (1 << lg) - 1 < n; j++) {||| 16 st[lg][j] = min(st[lg - 1][j], st[lg - 1][j + (1 << (lg - 1))]);||| 17 }||| 18 }||| 19 }||| 20 int rmq(int l, int r) {||| 21 int k = mm[r - l + 1];||| 22 return min(st[k][l], st[k][r - (1 << k) + 1]);||| 23 }||| 24 } rmq;||| 25 struct node {||| 26 long long v, cnt;||| 27 long long sumcnt;||| 28 long long totsum;||| 29 };||| 30 int a[N];||| 31 int n, q, k;||| 32 long long res[N];||| 33 vector<node> St[N];||| 34 vector<pair<int, int> > qrs[N];||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(NULL);||| 38 cin >> n >> q >> k;||| 39 for (int i = 0; i < (n); ++i) cin >> a[i];||| 40 for (int i = 0; i < (q); ++i) {||| 41 int l, r;||| 42 cin >> l >> r;||| 43 l--, r--;||| 44 qrs[l].push_back({r, i});||| 45 }||| 46 rmq.n = n;||| 47 rmq.build(a);||| 48 for (int i = n - 1; i >= 0; i--) {||| 49 auto &S = St[i % k];||| 50 if (!S.empty()) {||| 51 long long mn = rmq.rmq(i, i + k - 1);||| 52 int cnt = 0;||| 53 while (!S.empty() && S.back().v >= mn) {||| 54 node o = S.back();||| 55 S.pop_back();||| 56 cnt += o.cnt;||| 57 }||| 58 if (cnt) {||| 59 S.push_back({mn, cnt, cnt + (S.empty() ? 0 : S.back().sumcnt),||| 60 mn * cnt + (S.empty() ? 0 : S.back().totsum)});||| 61 }||| 62 }||| 63 S.push_back({a[i], 1, 1 + (S.empty() ? 0 : S.back().sumcnt),||| 64 a[i] + (S.empty() ? 0 : S.back().totsum)});||| 65 for (auto &p : qrs[i]) {||| 66 int r = p.first, idx = p.second;||| 67 int c = (r - i + k) / k;||| 68 int lb = -1, rb = S.size(), mid;||| 69 while (lb + 1 < rb) {||| 70 mid = (lb + rb) / 2;||| 71 if (S.back().sumcnt - (S[mid].sumcnt - S[mid].cnt) >= c)||| 72 lb = mid;||| 73 else||| 74 rb = mid;||| 75 }||| 76 assert(lb != -1);||| 77 long long cres = S.back().totsum - (S[lb].totsum - S[lb].cnt * S[lb].v);||| 78 long long e = S.back().sumcnt - (S[lb].sumcnt - S[lb].cnt) - c;||| 79 cres -= e * S[lb].v;||| 80 res[p.second] = cres;||| 81 }||| 82 }||| 83 for (int i = 0; i < (q); ++i) {||| 84 cout << res[i] << ""\n"";||| 85 }||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)3e5 + 50, LOGN = 19;||| 4 struct RMQ {||| 5 int n;||| 6 int mm[N], st[LOGN][N];||| 7 void build(int *x) {||| 8 mm[0] = -1;||| 9 for (int i = 1; i <= n; i++)||| 10 mm[i] = (i & (i - 1)) == 0 ? mm[i - 1] + 1 : mm[i - 1];||| 11 for (int i = 0; i < n; i++) {||| 12 st[0][i] = x[i];||| 13 }||| 14 for (int lg = 1; lg < LOGN; lg++) {||| 15 for (int j = 0; j + (1 << lg) - 1 < n; j++) {||| 16 st[lg][j] = min(st[lg - 1][j], st[lg - 1][j + (1 << (lg - 1))]);||| 17 }||| 18 }||| 19 }||| 20 int rmq(int l, int r) {||| 21 int k = mm[r - l + 1];||| 22 return min(st[k][l], st[k][r - (1 << k) + 1]);||| 23 }||| 24 } rmq;||| 25 struct node {||| 26 long long v, cnt;||| 27 long long sumcnt;||| 28 long long totsum;||| 29 };||| 30 int a[N];||| 31 int n, q, k;||| 32 long long res[N];||| 33 vector<node> St[N];||| 34 vector<pair<int, int> > qrs[N];||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(NULL);||| 38 cin >> n >> q >> k;||| 39 for (int i = 0; i < (n); ++i) cin >> a[i];||| 40 for (int i = 0; i < (q); ++i) {||| 41 int l, r;||| 42 cin >> l >> r;||| 43 l--, r--;||| 44 qrs[l].push_back({r, i});||| 45 }||| 46 rmq.n = n;||| 47 rmq.build(a);||| 48 for (int i = n - 1; i >= 0; i--) {||| 49 auto &S = St[i % k];||| 50 if (!S.empty()) {||| 51 int mn = rmq.rmq(i, i + k - 1);||| 52 int cnt = 0;||| 53 while (!S.empty() && S.back().v >= mn) {||| 54 node o = S.back();||| 55 S.pop_back();||| 56 cnt += o.cnt;||| 57 }||| 58 if (cnt) {||| 59 S.push_back({mn, cnt, cnt + (S.empty() ? 0 : S.back().sumcnt),||| 60 mn * cnt + (S.empty() ? 0 : S.back().totsum)});||| 61 }||| 62 }||| 63 S.push_back({a[i], 1, 1 + (S.empty() ? 0 : S.back().sumcnt),||| 64 a[i] + (S.empty() ? 0 : S.back().totsum)});||| 65 for (auto &p : qrs[i]) {||| 66 int r = p.first, idx = p.second;||| 67 int c = (r - i + k) / k;||| 68 int lb = -1, rb = S.size(), mid;||| 69 while (lb + 1 < rb) {||| 70 mid = (lb + rb) / 2;||| 71 if (S.back().sumcnt - (S[mid].sumcnt - S[mid].cnt) >= c)||| 72 lb = mid;||| 73 else||| 74 rb = mid;||| 75 }||| 76 assert(lb != -1);||| 77 long long cres = S.back().totsum - (S[lb].totsum - S[lb].cnt * S[lb].v);||| 78 long long e = S.back().sumcnt - (S[lb].sumcnt - S[lb].cnt) - c;||| 79 cres -= e * S[lb].v;||| 80 res[p.second] = cres;||| 81 }||| 82 }||| 83 for (int i = 0; i < (q); ++i) {||| 84 cout << res[i] << ""\n"";||| 85 }||| 86 }||| "	51 long long mn = rmq.rmq(i, i + k - 1);
82	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 300000;||| 4 int n, cq, m, a[N + 9];||| 5 struct question {||| 6 int l, r, id;||| 7 question(int L = 0, int R = 0, int Id = 0) : l(L), r(R), id(Id) {}||| 8 } q[N + 9];||| 9 void into() {||| 10 scanf(""%d%d%d"", &n, &cq, &m);||| 11 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 12 for (int i = 1; i <= cq; ++i) {||| 13 int l, r;||| 14 scanf(""%d%d"", &l, &r);||| 15 q[i] = question(l, r, i);||| 16 }||| 17 }||| 18 int b[N + 9];||| 19 void Get_b() {||| 20 static int q[N + 9];||| 21 int hd = 0, tl = 0;||| 22 for (int i = 1; i <= n; ++i) {||| 23 for (; hd <= tl && a[i] <= a[q[tl]]; --tl)||| 24 ;||| 25 q[++tl] = i;||| 26 for (; hd <= tl && q[hd] < i - m; ++hd)||| 27 ;||| 28 b[i] = a[q[hd]];||| 29 }||| 30 }||| 31 vector<int> sta[N + 9], cnt[N + 9];||| 32 vector<long long> suf[N + 9];||| 33 long long sum[N + 9], ans[N + 9];||| 34 void Get_ans() {||| 35 sort(q + 1, q + cq + 1,||| 36 [&](const question &a, const question &b) { return a.l > b.l; });||| 37 for (int i = n, j = 1; i >= 1; --i) {||| 38 int o = i % m;||| 39 for (; j <= cq && q[j].l == i; ++j) {||| 40 ans[q[j].id] = a[i];||| 41 if (sta[o].empty()) continue;||| 42 if (q[j].r < q[j].l + m) continue;||| 43 int p =||| 44 lower_bound(sta[o].begin(), sta[o].end(), q[j].r, greater<int>()) -||| 45 sta[o].begin();||| 46 ans[q[j].id] += sum[o] - suf[o][p] +||| 47 1LL * ((q[j].r - sta[o][p]) / m + 1) * b[sta[o][p]];||| 48 }||| 49 int c = 1;||| 50 for (; !sta[o].empty() && b[i] < b[sta[o].back()];) {||| 51 c += cnt[o].back();||| 52 sum[o] -= 1LL * cnt[o].back() * b[sta[o].back()];||| 53 sta[o].pop_back();||| 54 cnt[o].pop_back();||| 55 suf[o].pop_back();||| 56 }||| 57 sum[o] += 1LL * c * b[i];||| 58 sta[o].push_back(i);||| 59 cnt[o].push_back(c);||| 60 suf[o].push_back((suf[o].empty() ? 0 : suf[o].back()) + 1LL * c * b[i]);||| 61 }||| 62 }||| 63 void work() {||| 64 Get_b();||| 65 Get_ans();||| 66 }||| 67 void outo() {||| 68 for (int i = 1; i <= cq; ++i) printf(""%lld\n"", ans[i]);||| 69 }||| 70 int main() {||| 71 int T = 1;||| 72 for (; T--;) {||| 73 into();||| 74 work();||| 75 outo();||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 300000;||| 4 int n, cq, m, a[N + 9];||| 5 struct question {||| 6 int l, r, id;||| 7 question(int L = 0, int R = 0, int Id = 0) : l(L), r(R), id(Id) {}||| 8 } q[N + 9];||| 9 void into() {||| 10 scanf(""%d%d%d"", &n, &cq, &m);||| 11 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 12 for (int i = 1; i <= cq; ++i) {||| 13 int l, r;||| 14 scanf(""%d%d"", &l, &r);||| 15 q[i] = question(l, r, i);||| 16 }||| 17 }||| 18 int b[N + 9];||| 19 void Get_b() {||| 20 static int q[N + 9];||| 21 int hd = 0, tl = 0;||| 22 for (int i = 1; i <= n; ++i) {||| 23 for (; hd <= tl && a[i] <= a[q[tl]]; --tl)||| 24 ;||| 25 q[++tl] = i;||| 26 for (; hd <= tl && q[hd] < i - m; ++hd)||| 27 ;||| 28 b[i] = a[q[hd]];||| 29 }||| 30 }||| 31 vector<int> sta[N + 9], cnt[N + 9];||| 32 vector<long long> suf[N + 9];||| 33 long long sum[N + 9], ans[N + 9];||| 34 void Get_ans() {||| 35 sort(q + 1, q + cq + 1,||| 36 [&](const question &a, const question &b) { return a.l > b.l; });||| 37 for (int i = n, j = 1; i >= 1; --i) {||| 38 int o = i % m;||| 39 for (; j <= cq && q[j].l == i; ++j) {||| 40 ans[q[j].id] = a[i];||| 41 if (sta[o].empty()) continue;||| 42 if (q[j].r < q[j].l + m) continue;||| 43 int p =||| 44 lower_bound(sta[o].begin(), sta[o].end(), q[j].r, greater<int>()) -||| 45 sta[o].begin();||| 46 ans[q[j].id] += sum[o] - suf[o][p] +||| 47 1LL * ((q[j].r - sta[o][p]) / m + 1) * b[sta[o][p]];||| 48 }||| 49 int c = 1;||| 50 for (; !sta[o].empty() && b[i] < b[sta[o].back()];) {||| 51 c += cnt[o].back();||| 52 sum[o] -= cnt[o].back() * b[sta[o].back()];||| 53 sta[o].pop_back();||| 54 cnt[o].pop_back();||| 55 suf[o].pop_back();||| 56 }||| 57 sum[o] += 1LL * c * b[i];||| 58 sta[o].push_back(i);||| 59 cnt[o].push_back(c);||| 60 suf[o].push_back((suf[o].empty() ? 0 : suf[o].back()) + 1LL * c * b[i]);||| 61 }||| 62 }||| 63 void work() {||| 64 Get_b();||| 65 Get_ans();||| 66 }||| 67 void outo() {||| 68 for (int i = 1; i <= cq; ++i) printf(""%lld\n"", ans[i]);||| 69 }||| 70 int main() {||| 71 int T = 1;||| 72 for (; T--;) {||| 73 into();||| 74 work();||| 75 outo();||| 76 }||| 77 return 0;||| 78 }||| "	52 sum[o] -= 1LL * cnt[o].back() * b[sta[o].back()];
82	5	"1 #include <bits/stdc++.h>||| 2 const int maxn = 600005, maxk = 21;||| 3 int n, m, k, l, r;||| 4 long long ans;||| 5 int a[maxn], jump[maxn][maxk], stk[maxn], mn[maxn];||| 6 long long val[maxn][maxk];||| 7 int main() {||| 8 scanf(""%d%d%d"", &n, &m, &k);||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 for (int i = 1; i <= n + k; i++)||| 11 for (int j = 0; j <= 20; j++) jump[i][j] = n + k;||| 12 l = 1, r = 0;||| 13 for (int i = n; i >= 1; i--) {||| 14 while (l <= r && a[stk[r]] >= a[i]) r--;||| 15 stk[++r] = i;||| 16 while (l <= r && stk[l] > i + k) l++;||| 17 mn[i] = a[stk[l]];||| 18 }||| 19 for (int i = n - k; i >= 1; i--) {||| 20 jump[i][0] = i + k;||| 21 if (mn[jump[i][0]] >= mn[i]) {||| 22 int x = jump[i][0];||| 23 for (int j = 20; j >= 0; j--)||| 24 if (mn[jump[x][j]] >= mn[i]) x = jump[x][j];||| 25 jump[i][0] = jump[x][0];||| 26 }||| 27 val[i][0] = 1ll * mn[i] * ((jump[i][0] - i) / k);||| 28 for (int j = 1; j <= 20; j++)||| 29 jump[i][j] = jump[jump[i][j - 1]][j - 1],||| 30 val[i][j] = val[i][j - 1] + val[jump[i][j - 1]][j - 1];||| 31 }||| 32 for (int i = 1, l, r; i <= m; i++) {||| 33 scanf(""%d%d"", &l, &r);||| 34 long long ans = a[l];||| 35 for (int j = 20; j >= 0; j--)||| 36 if (jump[l][j] <= r) ans += val[l][j], l = jump[l][j];||| 37 ans += 1ll * mn[l] * ((r - l) / k);||| 38 printf(""%lld\n"", ans);||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 const int maxn = 600005, maxk = 21;||| 3 int n, m, k, l, r;||| 4 long long ans;||| 5 int a[maxn], jump[maxn][maxk], stk[maxn], mn[maxn];||| 6 long long val[maxn][maxk];||| 7 int main() {||| 8 scanf(""%d%d%d"", &n, &m, &k);||| 9 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 10 for (int i = 1; i <= n + k; i++)||| 11 for (int j = 0; j <= 20; j++) jump[i][j] = n + k;||| 12 l = 1, r = 0;||| 13 for (int i = n; i >= 1; i--) {||| 14 while (l <= r && a[stk[r]] >= a[i]) r--;||| 15 stk[++r] = i;||| 16 while (l <= r && stk[l] > i + k) l++;||| 17 mn[i] = a[stk[l]];||| 18 }||| 19 for (int i = n - k; i >= 1; i--) {||| 20 jump[i][0] = i + k;||| 21 if (mn[jump[i][0]] >= mn[i]) {||| 22 int x = jump[i][0];||| 23 for (int j = 20; j >= 0; j--)||| 24 if (mn[jump[x][j]] >= mn[i]) x = jump[x][j];||| 25 jump[i][0] = jump[x][0];||| 26 }||| 27 val[i][0] = 1ll * mn[i] * ((jump[i][0] - i) / k);||| 28 for (int j = 1; j <= 20; j++)||| 29 jump[i][j] = jump[jump[i][j - 1]][j - 1],||| 30 val[i][j] = val[i][j - 1] + val[jump[i][j - 1]][j - 1];||| 31 }||| 32 for (int i = 1, l, r; i <= m; i++) {||| 33 scanf(""%d%d"", &l, &r);||| 34 long long ans = a[l];||| 35 for (int j = 20; j >= 0; j--)||| 36 if (jump[l][j] <= r) ans += val[l][j], l = jump[l][j];||| 37 ans += 1ll * mn[l] * (r - l) / k;||| 38 printf(""%lld\n"", ans);||| 39 }||| 40 return 0;||| 41 }||| "	37 ans += 1ll * mn[l] * ((r - l) / k);
82	101	"1 #include <bits/stdc++.h>||| 2 const int N = 300300;||| 3 const int M = 333;||| 4 using namespace std;||| 5 int n;||| 6 int q;||| 7 int k;||| 8 int a[N];||| 9 int t[N][20];||| 10 int L[N];||| 11 int get_min(int l, int r) {||| 12 int g = L[r - l + 1];||| 13 return min(t[l][g], t[r - (1 << g) + 1][g]);||| 14 }||| 15 long long res[N];||| 16 vector<pair<int, int>> qu[N];||| 17 vector<pair<int, int>> c[M];||| 18 vector<pair<long long, int>> s[M];||| 19 int main() {||| 20 ios_base::sync_with_stdio(0);||| 21 cin >> n >> q >> k;||| 22 for (int i = 1; i <= n; i++) {||| 23 cin >> a[i];||| 24 t[i][0] = a[i];||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 L[i] = L[i / 2] + 1;||| 28 }||| 29 for (int i = 1; i < 20; i++) {||| 30 for (int j = 1; j <= n; j++) {||| 31 if (j + (1 << i) - 1 > n) {||| 32 break;||| 33 }||| 34 t[j][i] = min(t[j][i - 1], t[j + (1 << i - 1)][i - 1]);||| 35 }||| 36 }||| 37 if (k >= M) {||| 38 for (int i = 1; i <= q; i++) {||| 39 int l, r, j;||| 40 cin >> l >> r;||| 41 j = l;||| 42 long long res = 0;||| 43 while (j <= r) {||| 44 res += get_min(l, j);||| 45 j += k;||| 46 }||| 47 cout << res << ""\n"";||| 48 }||| 49 return 0;||| 50 }||| 51 for (int i = 1; i <= q; i++) {||| 52 int l, r;||| 53 cin >> l >> r;||| 54 qu[l].push_back({(r - l) / k + 1, i});||| 55 }||| 56 for (int i = 0; i < k; i++) {||| 57 c[i].push_back({0, 0});||| 58 s[i].push_back({0, 0});||| 59 }||| 60 for (int i = n; i >= 1; i--) {||| 61 int cur = i % k, X;||| 62 for (int j = 0; j < k; j++) {||| 63 X = (j == cur);||| 64 while (!c[j].empty() && a[i] <= c[j].back().first) {||| 65 X += c[j].back().second;||| 66 s[j].pop_back();||| 67 c[j].pop_back();||| 68 }||| 69 if (X > 0) {||| 70 c[j].push_back({a[i], X});||| 71 s[j].push_back(||| 72 {s[j].back().first + 1ll * a[i] * X, s[j].back().second + X});||| 73 }||| 74 }||| 75 for (auto p : qu[i]) {||| 76 int l = 0, r = s[cur].size() - 1;||| 77 while (l < r) {||| 78 int m = (l + r) / 2;||| 79 if (s[cur].back().second - s[cur][m].second >= p.first) {||| 80 l = m + 1;||| 81 } else {||| 82 r = m;||| 83 }||| 84 }||| 85 res[p.second] += s[cur].back().first - s[cur][l].first;||| 86 res[p.second] += (p.first - (s[cur].back().second - s[cur][l].second)) *||| 87 1ll * c[cur][l].first;||| 88 }||| 89 }||| 90 for (int i = 1; i <= q; i++) {||| 91 cout << res[i] << ""\n"";||| 92 }||| 93 }||| "	"1 #include <bits/stdc++.h>||| 2 const int N = 300300;||| 3 const int M = 333;||| 4 using namespace std;||| 5 int n;||| 6 int q;||| 7 int k;||| 8 int a[N];||| 9 int t[N][20];||| 10 int L[N];||| 11 int get_min(int l, int r) {||| 12 int g = L[r - l + 1];||| 13 return min(t[l][g], t[r - (1 << g) + 1][g]);||| 14 }||| 15 long long res[N];||| 16 vector<pair<int, int>> qu[N];||| 17 vector<pair<int, int>> c[M];||| 18 vector<pair<long long, int>> s[M];||| 19 int main() {||| 20 ios_base::sync_with_stdio(0);||| 21 cin >> n >> q >> k;||| 22 for (int i = 1; i <= n; i++) {||| 23 cin >> a[i];||| 24 t[i][0] = a[i];||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 L[i] = L[i / 2] + 1;||| 28 }||| 29 for (int i = 1; i < 20; i++) {||| 30 for (int j = 1; j <= n; j++) {||| 31 if (j + (1 << i) - 1 > n) {||| 32 break;||| 33 }||| 34 t[j][i] = min(t[j][i - 1], t[j + (1 << i - 1)][i - 1]);||| 35 }||| 36 }||| 37 if (k >= M) {||| 38 for (int i = 1; i <= q; i++) {||| 39 int l, r, j;||| 40 cin >> l >> r;||| 41 j = l;||| 42 long long res = 0;||| 43 while (j <= r) {||| 44 res += get_min(l, j);||| 45 j += k;||| 46 }||| 47 cout << res << ""\n"";||| 48 }||| 49 return 0;||| 50 }||| 51 for (int i = 1; i <= q; i++) {||| 52 int l, r;||| 53 cin >> l >> r;||| 54 qu[l].push_back({(r - l) / k + 1, i});||| 55 }||| 56 for (int i = 0; i < k; i++) {||| 57 c[i].push_back({0, 0});||| 58 s[i].push_back({0, 0});||| 59 }||| 60 for (int i = n; i >= 1; i--) {||| 61 int cur = i % k, X;||| 62 for (int j = 0; j < k; j++) {||| 63 X = (j == cur);||| 64 while (c[j].empty() && a[i] <= c[j].back().first) {||| 65 X += c[j].back().second;||| 66 s[j].pop_back();||| 67 c[j].pop_back();||| 68 }||| 69 if (X > 0) {||| 70 c[j].push_back({a[i], X});||| 71 s[j].push_back(||| 72 {s[j].back().first + 1ll * a[i] * X, s[j].back().second + X});||| 73 }||| 74 }||| 75 for (auto p : qu[i]) {||| 76 int l = 0, r = s[cur].size() - 1;||| 77 while (l < r) {||| 78 int m = (l + r) / 2;||| 79 if (s[cur].back().second - s[cur][m].second >= p.first) {||| 80 l = m + 1;||| 81 } else {||| 82 r = m;||| 83 }||| 84 }||| 85 res[p.second] += s[cur].back().first - s[cur][l].first;||| 86 res[p.second] += (p.first - (s[cur].back().second - s[cur][l].second)) *||| 87 1ll * c[cur][l].first;||| 88 }||| 89 }||| 90 for (int i = 1; i <= q; i++) {||| 91 cout << res[i] << ""\n"";||| 92 }||| 93 }||| "	64 while (!c[j].empty() && a[i] <= c[j].back().first) {
82	4	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static constexpr int64_t inf = 0x3f3f3f3f3f3f3f3f;||| 4 static constexpr int Maxn = 3e5 + 5, LOG = 20;||| 5 int n, q, k, N, Lg2[Maxn];||| 6 int64_t a[Maxn], ans[Maxn], St[LOG][Maxn];||| 7 inline int64_t ask(int l, int r) {||| 8 int K = Lg2[r - l + 1];||| 9 return min(St[K][l], St[K][r - (1 << K) + 1]);||| 10 }||| 11 struct Query {||| 12 int l, r, id;||| 13 Query() = default;||| 14 Query(int l, int r, int id) : l(l), r(r), id(id) {}||| 15 friend bool operator<(const Query &lhs, const Query &rhs) {||| 16 return lhs.l != rhs.l ? lhs.l > rhs.l : lhs.r < rhs.r;||| 17 }||| 18 };||| 19 vector<Query> Q[Maxn];||| 20 struct node {||| 21 int len;||| 22 int64_t val, sum;||| 23 node() = default;||| 24 node(int l, int64_t v, int64_t s) : len(l), val(v), sum(s) {}||| 25 } stk[Maxn];||| 26 int lstk[Maxn];||| 27 int top;||| 28 void modify(int64_t v) {||| 29 int len, slen;||| 30 int64_t sum;||| 31 for (len = 1; top && stk[top].val >= v;) len += stk[top--].len;||| 32 sum = (top ? stk[top].sum : 0) + len * v;||| 33 slen = (top ? lstk[top] : 0) + len;||| 34 stk[++top] = node(len, v, sum);||| 35 lstk[top] = slen;||| 36 }||| 37 int64_t query(int l) {||| 38 int length = lstk[top];||| 39 l = length - l;||| 40 int p = upper_bound(lstk + 1, lstk + top + 1, l) - lstk - 1;||| 41 int64_t ans = (p ? stk[p].sum : 0) + stk[p + 1].val * (l - lstk[p]);||| 42 return stk[top].sum - ans;||| 43 }||| 44 int main(void) {||| 45 scanf(""%d%d%d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 47 Lg2[0] = -1;||| 48 for (int i = 1; i <= n; ++i) Lg2[i] = Lg2[i >> 1] + 1;||| 49 for (int i = 1; i <= n; ++i) St[0][i] = a[i];||| 50 for (int j = 1; j < LOG; ++j)||| 51 for (int i = 1; i + (1 << j) - 1 <= n; ++i)||| 52 St[j][i] = min(St[j - 1][i], St[j - 1][i + (1 << j - 1)]);||| 53 for (int i = 1, l, r; i <= q; ++i) {||| 54 scanf(""%d%d"", &l, &r);||| 55 r = l + (r - l) / k * k;||| 56 ans[i] += a[l], l += k;||| 57 if (l <= r) Q[l % k].push_back(Query(l / k, r / k, i));||| 58 }||| 59 for (int mod = 0; mod < k; ++mod) {||| 60 sort(Q[mod].begin(), Q[mod].end());||| 61 for (top = N = 0; N * k + mod <= n; ++N)||| 62 ;||| 63 for (int j = N - 1, i = 0; j >= 0 && i < (int)Q[mod].size(); --j) {||| 64 modify(ask(max(j * k + mod, 1), min((j + 1) * k + mod, n)));||| 65 for (; i < (int)Q[mod].size() && Q[mod][i].l > j; ++i) {||| 66 const auto &[l, r, id] = Q[mod][i];||| 67 ans[id] += query(r - l + 1);||| 68 }||| 69 }||| 70 }||| 71 for (int i = 1; i <= q; ++i) printf(""%lld\n"", ans[i]);||| 72 exit(EXIT_SUCCESS);||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static constexpr int64_t inf = 0x3f3f3f3f3f3f3f3f;||| 4 static constexpr int Maxn = 3e5 + 5, LOG = 20;||| 5 int n, q, k, N, Lg2[Maxn];||| 6 int64_t a[Maxn], ans[Maxn], St[LOG][Maxn];||| 7 inline int64_t ask(int l, int r) {||| 8 int K = Lg2[r - l + 1];||| 9 return min(St[K][l], St[K][r - (1 << K) + 1]);||| 10 }||| 11 struct Query {||| 12 int l, r, id;||| 13 Query() = default;||| 14 Query(int l, int r, int id) : l(l), r(r), id(id) {}||| 15 friend bool operator<(const Query &lhs, const Query &rhs) {||| 16 return lhs.l != rhs.l ? lhs.l > rhs.l : lhs.r < rhs.r;||| 17 }||| 18 };||| 19 vector<Query> Q[Maxn];||| 20 struct node {||| 21 int len;||| 22 int64_t val, sum;||| 23 node() = default;||| 24 node(int l, int64_t v, int64_t s) : len(l), val(v), sum(s) {}||| 25 } stk[Maxn];||| 26 int lstk[Maxn];||| 27 int top;||| 28 void modify(int64_t v) {||| 29 int len, slen;||| 30 int64_t sum;||| 31 for (len = 1; top && stk[top].val >= v;) len += stk[top--].len;||| 32 sum = (top ? stk[top].sum : 0) + len * v;||| 33 slen = (top ? lstk[top] : 0) + len;||| 34 stk[++top] = node(len, v, sum);||| 35 lstk[top] = slen;||| 36 }||| 37 int64_t query(int l) {||| 38 int length = lstk[top];||| 39 l = length - l;||| 40 int p = upper_bound(lstk + 1, lstk + top + 1, l) - lstk - 1;||| 41 int64_t ans = (p ? stk[p].sum : 0) + stk[p + 1].val * (l - lstk[p]);||| 42 return stk[top].sum - ans;||| 43 }||| 44 int main(void) {||| 45 scanf(""%d%d%d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 47 Lg2[0] = -1;||| 48 for (int i = 1; i <= n; ++i) Lg2[i] = Lg2[i >> 1] + 1;||| 49 for (int i = 1; i <= n; ++i) St[0][i] = a[i];||| 50 for (int j = 1; j < LOG; ++j)||| 51 for (int i = 1; i + (1 << j) - 1 <= n; ++i)||| 52 St[j][i] = min(St[j - 1][i], St[j - 1][i + (1 << j - 1)]);||| 53 for (int i = 1, l, r; i <= q; ++i) {||| 54 scanf(""%d%d"", &l, &r);||| 55 r = l + (r - l) / k * k;||| 56 ans[i] += a[l], l += k;||| 57 if (l <= r) Q[l % k].push_back(Query(l / k, r / k, i));||| 58 }||| 59 for (int mod = 0; mod < k; ++mod) {||| 60 sort(Q[mod].begin(), Q[mod].end());||| 61 for (top = N = 0; N * k + mod <= n; ++N)||| 62 ;||| 63 for (int j = N - 1, i = 0; j >= 0 && i < (int)Q[mod].size(); --j) {||| 64 modify(ask(max(j * k + mod - 1, 1), min((j + 1) * k + mod, n)));||| 65 for (; i < (int)Q[mod].size() && Q[mod][i].l > j; ++i) {||| 66 const auto &[l, r, id] = Q[mod][i];||| 67 ans[id] += query(r - l + 1);||| 68 }||| 69 }||| 70 }||| 71 for (int i = 1; i <= q; ++i) printf(""%lld\n"", ans[i]);||| 72 exit(EXIT_SUCCESS);||| 73 }||| "	64 modify(ask(max(j * k + mod, 1), min((j + 1) * k + mod, n)));
82	40	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static constexpr int64_t inf = 0x3f3f3f3f3f3f3f3f;||| 4 static constexpr int Maxn = 3e5 + 5, LOG = 20;||| 5 int n, q, k, N, Lg2[Maxn];||| 6 int64_t a[Maxn], ans[Maxn], St[LOG][Maxn];||| 7 inline int64_t ask(int l, int r) {||| 8 int K = Lg2[r - l + 1];||| 9 return min(St[K][l], St[K][r - (1 << K) + 1]);||| 10 }||| 11 struct Query {||| 12 int l, r, id;||| 13 Query() = default;||| 14 Query(int l, int r, int id) : l(l), r(r), id(id) {}||| 15 friend bool operator<(const Query &lhs, const Query &rhs) {||| 16 return lhs.l != rhs.l ? lhs.l > rhs.l : lhs.r < rhs.r;||| 17 }||| 18 };||| 19 vector<Query> Q[Maxn];||| 20 struct node {||| 21 int len;||| 22 int64_t val, sum;||| 23 node() = default;||| 24 node(int l, int64_t v, int64_t s) : len(l), val(v), sum(s) {}||| 25 } stk[Maxn];||| 26 int lstk[Maxn];||| 27 int top;||| 28 void modify(int64_t v) {||| 29 int len, slen;||| 30 int64_t sum;||| 31 for (len = 1; top && stk[top].val >= v;) len += stk[top--].len;||| 32 sum = (top ? stk[top].sum : 0) + len * v;||| 33 slen = (top ? lstk[top] : 0) + len;||| 34 stk[++top] = node(len, v, sum);||| 35 lstk[top] = slen;||| 36 }||| 37 int64_t query(int l) {||| 38 int length = lstk[top];||| 39 l = length - l;||| 40 int p = upper_bound(lstk + 1, lstk + top + 1, l) - lstk - 1;||| 41 int64_t ans = (p ? stk[p].sum : 0) + stk[p + 1].val * (l - lstk[p]);||| 42 return stk[top].sum - ans;||| 43 }||| 44 int main(void) {||| 45 scanf(""%d%d%d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 47 Lg2[0] = -1;||| 48 for (int i = 1; i <= n; ++i) Lg2[i] = Lg2[i >> 1] + 1;||| 49 for (int i = 1; i <= n; ++i) St[0][i] = a[i];||| 50 for (int j = 1; j < LOG; ++j)||| 51 for (int i = 1; i + (1 << j) - 1 <= n; ++i)||| 52 St[j][i] = min(St[j - 1][i], St[j - 1][i + (1 << j - 1)]);||| 53 for (int i = 1, l, r; i <= q; ++i) {||| 54 scanf(""%d%d"", &l, &r);||| 55 r = l + (r - l) / k * k;||| 56 ans[i] += a[l], l += k;||| 57 if (l <= r) Q[l % k].push_back(Query(l / k, r / k, i));||| 58 }||| 59 for (int mod = 0; mod < k; ++mod) {||| 60 sort(Q[mod].begin(), Q[mod].end());||| 61 for (top = N = 0; N * k + mod <= n; ++N)||| 62 ;||| 63 for (int j = N - 1, i = 0; j >= 0 && i < (int)Q[mod].size(); --j) {||| 64 modify(ask(max(j * k + mod, 1), min((j + 1) * k + mod, n)));||| 65 for (; i < (int)Q[mod].size() && Q[mod][i].l > j; ++i) {||| 66 const auto &[l, r, id] = Q[mod][i];||| 67 ans[id] += query(r - l + 1);||| 68 }||| 69 }||| 70 }||| 71 for (int i = 1; i <= q; ++i) printf(""%lld\n"", ans[i]);||| 72 exit(EXIT_SUCCESS);||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 static constexpr int64_t inf = 0x3f3f3f3f3f3f3f3f;||| 4 static constexpr int Maxn = 3e5 + 5, LOG = 20;||| 5 int n, q, k, N, Lg2[Maxn];||| 6 int64_t a[Maxn], ans[Maxn], St[LOG][Maxn];||| 7 inline int64_t ask(int l, int r) {||| 8 int K = Lg2[r - l + 1];||| 9 return min(St[K][l], St[K][r - (1 << K) + 1]);||| 10 }||| 11 struct Query {||| 12 int l, r, id;||| 13 Query() = default;||| 14 Query(int l, int r, int id) : l(l), r(r), id(id) {}||| 15 friend bool operator<(const Query &lhs, const Query &rhs) {||| 16 return lhs.l != rhs.l ? lhs.l > rhs.l : lhs.r < rhs.r;||| 17 }||| 18 };||| 19 vector<Query> Q[Maxn];||| 20 struct node {||| 21 int len;||| 22 int64_t val, sum;||| 23 node() = default;||| 24 node(int l, int64_t v, int64_t s) : len(l), val(v), sum(s) {}||| 25 } stk[Maxn];||| 26 int lstk[Maxn];||| 27 int top;||| 28 void modify(int64_t v) {||| 29 int len, slen;||| 30 int64_t sum;||| 31 for (len = 1; top && stk[top].val >= v;) len += stk[top--].len;||| 32 sum = (top ? stk[top].sum : 0) + len * v;||| 33 slen = (top ? lstk[top] : 0) + len;||| 34 stk[++top] = node(len, v, sum);||| 35 lstk[top] = slen;||| 36 }||| 37 int64_t query(int l) {||| 38 int length = lstk[top];||| 39 l = length - l;||| 40 int p = upper_bound(lstk + 1, lstk + top + 1, l) - lstk - 1;||| 41 int64_t ans = (p ? stk[p].sum : 0) + stk[p + 1].val * (l - lstk[p]);||| 42 return stk[top].sum - ans;||| 43 }||| 44 int main(void) {||| 45 scanf(""%d%d%d"", &n, &q, &k);||| 46 for (int i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 47 Lg2[0] = -1;||| 48 for (int i = 1; i <= n; ++i) Lg2[i] = Lg2[i >> 1] + 1;||| 49 for (int i = 1; i <= n; ++i) St[0][i] = a[i];||| 50 for (int j = 1; j < LOG; ++j)||| 51 for (int i = 1; i + (1 << j) - 1 <= n; ++i)||| 52 St[j][i] = min(St[j - 1][i], St[j - 1][i + (1 << j - 1)]);||| 53 for (int i = 1, l, r; i <= q; ++i) {||| 54 scanf(""%d%d"", &l, &r);||| 55 r = l + (r - l) / k * k;||| 56 ans[i] += a[l], l += k;||| 57 if (l <= r) Q[l % k].push_back(Query(l / k, r / k, i));||| 58 }||| 59 for (int mod = 0; mod < k; ++mod) {||| 60 sort(Q[mod].begin(), Q[mod].end());||| 61 for (top = N = 0; N * k + mod <= n; ++N)||| 62 ;||| 63 for (int j = N - 1, i = 0; j >= 0 && i < (int)Q[mod].size(); --j) {||| 64 modify(ask(max(j * k + mod, 1), min((j + 1) * k + mod - 1, n)));||| 65 for (; i < (int)Q[mod].size() && Q[mod][i].l > j; ++i) {||| 66 const auto &[l, r, id] = Q[mod][i];||| 67 ans[id] += query(r - l + 1);||| 68 }||| 69 }||| 70 }||| 71 for (int i = 1; i <= q; ++i) printf(""%lld\n"", ans[i]);||| 72 exit(EXIT_SUCCESS);||| 73 }||| "	64 modify(ask(max(j * k + mod, 1), min((j + 1) * k + mod, n)));
84	2	1 #include <bits/stdc++.h>||| 2 const long long INF = 1e16;||| 3 const int M = 1e5 + 5;||| 4 int n, k, tot;||| 5 bool vis[M];||| 6 int prime[M];||| 7 long long phi[M], f[M][18];||| 8 inline void Init() {||| 9 phi[1] = 1;||| 10 for (int i = 2; i < M; ++i) {||| 11 if (!vis[i]) prime[++tot] = i, phi[i] = i - 1;||| 12 for (int j = 1; j <= tot && prime[j] * i < M; ++j) {||| 13 vis[prime[j] * i] = 1;||| 14 if (i % prime[j] == 0) {||| 15 phi[i * prime[j]] = phi[i] * prime[j];||| 16 break;||| 17 }||| 18 phi[i * prime[j]] = phi[i] * (prime[j] - 1);||| 19 }||| 20 }||| 21 for (int i = 2; i < M; ++i) phi[i] += phi[i - 1];||| 22 }||| 23 inline long long c(int L, int R) {||| 24 if (L > R) return INF;||| 25 long long res = 0;||| 26 for (int l = L, r; l <= R; l = r + 1) {||| 27 r = R / (R / l);||| 28 res += 1ll * phi[R / l] * (r - l + 1);||| 29 }||| 30 return res;||| 31 }||| 32 inline void Solve(int t, int l, int r, int ql, int qr) {||| 33 if (ql > qr || l > r) return;||| 34 int mid = ql + qr >> 1, pos = l;||| 35 long long val = c(std ::min(r, mid) + 1, mid);||| 36 for (int i = std ::min(r, mid); i >= l; --i) {||| 37 if (f[mid][t] > f[i][t - 1] + val) f[mid][t] = f[i][t - 1] + val, pos = i;||| 38 if (val == INF)||| 39 val = phi[mid / i];||| 40 else||| 41 val += phi[mid / i];||| 42 }||| 43 Solve(t, l, pos, ql, mid - 1);||| 44 Solve(t, pos, r, mid + 1, qr);||| 45 }||| 46 inline int read() {||| 47 int f = 1, s = 0;||| 48 char ch = getchar();||| 49 while (!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar();||| 50 while (isdigit(ch)) s = (s << 1) + (s << 3) + (ch ^ 48), ch = getchar();||| 51 return f * s;||| 52 }||| 53 int main() {||| 54 Init();||| 55 for (int i = 0; i < 18; ++i)||| 56 for (int j = 0; j < M; ++j) f[j][i] = INF;||| 57 f[0][0] = 0;||| 58 for (int i = 1; i < M; ++i) f[i][1] = 1ll * i * (i + 1) / 2;||| 59 for (int i = 2; i < 18; ++i) Solve(i, 1, M - 5, 1, M - 5);||| 60 int t = read();||| 61 while (t--) {||| 62 int n = read(), k = read();||| 63 if (k >= 18 || (1 << k) > n) {||| 64 std ::cout << n << '\n';||| 65 continue;||| 66 }||| 67 std ::cout << f[n][k] << '\n';||| 68 }||| 69 return 0;||| 70 }||| 	1 #include <bits/stdc++.h>||| 2 const long long INF = 1e16;||| 3 const int M = 1e5 + 5;||| 4 int n, k, tot;||| 5 bool vis[M];||| 6 int prime[M];||| 7 long long phi[M], f[M][18];||| 8 inline void Init() {||| 9 phi[1] = 1;||| 10 for (int i = 2; i < M; ++i) {||| 11 if (!vis[i]) prime[++tot] = i, phi[i] = i - 1;||| 12 for (int j = 1; j <= tot && prime[j] * i < M; ++j) {||| 13 vis[prime[j] * i] = 1;||| 14 if (i % prime[j] == 0) {||| 15 phi[i * prime[j]] = phi[i] * prime[j];||| 16 break;||| 17 }||| 18 phi[i * prime[j]] = phi[i] * (prime[j] - 1);||| 19 }||| 20 }||| 21 for (int i = 2; i < M; ++i) phi[i] += phi[i - 1];||| 22 }||| 23 inline long long c(int L, int R) {||| 24 if (L > R) return INF;||| 25 long long res = 0;||| 26 for (int l = L, r; l <= R; l = r + 1) {||| 27 r = R / (R / l);||| 28 res += 1ll * phi[R / l] * (r - l + 1);||| 29 }||| 30 return res;||| 31 }||| 32 inline void Solve(int t, int l, int r, int ql, int qr) {||| 33 if (ql > qr || l > r) return;||| 34 int mid = ql + qr >> 1, pos = l;||| 35 long long val = c(std ::min(r, mid) + 1, mid);||| 36 for (int i = std ::min(r, mid); i >= l; --i) {||| 37 if (f[mid][t] > f[i][t - 1] + val) f[mid][t] = f[i][t - 1] + val, pos = i;||| 38 if (val == INF)||| 39 val = phi[mid / i];||| 40 else||| 41 val += phi[mid / i];||| 42 }||| 43 Solve(t, l, pos, ql, mid - 1);||| 44 Solve(t, pos, r, mid + 1, qr);||| 45 }||| 46 inline int read() {||| 47 int f = 1, s = 0;||| 48 char ch = getchar();||| 49 while (!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar();||| 50 while (isdigit(ch)) s = (s << 1) + (s << 3) + (ch ^ 48), ch = getchar();||| 51 return f * s;||| 52 }||| 53 int main() {||| 54 Init();||| 55 for (int i = 0; i < 18; ++i)||| 56 for (int j = 0; j < M; ++j) f[j][i] = INF;||| 57 f[0][0] = 0;||| 58 for (int i = 1; i < M; ++i) f[i][1] = 1ll * i * (i + 1) / 2;||| 59 for (int i = 2; i < 18; ++i) Solve(i, 1, M - 5, 1, M - 5);||| 60 int t = read();||| 61 while (t--) {||| 62 int n = read(), k = read();||| 63 if (k >= 18 || (1 << k) >= n) {||| 64 std ::cout << n << '\n';||| 65 continue;||| 66 }||| 67 std ::cout << f[n][k] << '\n';||| 68 }||| 69 return 0;||| 70 }||| 	63 if (k >= 18 || (1 << k) > n) {
84	74	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 100010, MAXM = 1000010;||| 4 int t, n, k, mu[MAXM], phi[MAXM];||| 5 long long sumphi[MAXM], dp[MAXM][30];||| 6 void solve(int l, int r, int xl, int xr, int k) {||| 7 if (l > r) {||| 8 return;||| 9 }||| 10 int mid = (l + r) >> 1, np = 0;||| 11 long long nw = 0, nv = 1e18;||| 12 for (int l = min(xr, mid - 1) + 2, r; l <= mid; l = r + 1) {||| 13 r = mid / (mid / l);||| 14 nw += sumphi[mid / l] * (r - l + 1);||| 15 }||| 16 for (int i = min(xr, mid - 1); i >= xl; i--) {||| 17 nw += sumphi[mid / (i + 1)];||| 18 if (dp[i][k - 1] + nw < nv) {||| 19 nv = dp[i][k - 1] + nw;||| 20 np = i;||| 21 }||| 22 }||| 23 assert(xl <= np && np <= xr);||| 24 dp[mid][k] = nv;||| 25 solve(l, mid - 1, xl, np, k);||| 26 solve(mid + 1, r, np, xr, k);||| 27 return;||| 28 }||| 29 int main() {||| 30 for (int i = 1; i <= MAXN - 10; i++) {||| 31 mu[i] = 1, phi[i] = i;||| 32 int cpi = i;||| 33 for (int j = 2; j * j <= cpi; j++) {||| 34 if (cpi % j == 0) {||| 35 int cnt = 0;||| 36 while (cpi % j == 0) {||| 37 cpi /= j, cnt++;||| 38 }||| 39 if (cnt > 1) {||| 40 mu[i] = 0;||| 41 } else {||| 42 mu[i] = -mu[i];||| 43 }||| 44 phi[i] = phi[i] / j * (j - 1);||| 45 }||| 46 }||| 47 if (cpi > 1) {||| 48 mu[i] = -mu[i], phi[i] = phi[i] / cpi * (cpi - 1);||| 49 }||| 50 sumphi[i] = sumphi[i - 1] + phi[i];||| 51 dp[i][1] = 1ll * i * (i + 1) / 2;||| 52 }||| 53 for (int i = 2; i <= 20; i++) {||| 54 solve(i, MAXN - 10, i - 1, MAXN - 10, i);||| 55 }||| 56 scanf(""%d"", &t);||| 57 for (int ii = 1; ii <= t; ii++) {||| 58 scanf(""%d%d"", &n, &k);||| 59 if (k <= 20) {||| 60 printf(""%lld\n"", dp[n][k]);||| 61 } else {||| 62 printf(""%d\n"", n);||| 63 }||| 64 }||| 65 return 0;||| 66 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 100010, MAXM = 1000010;||| 4 int t, n, k, mu[MAXM], phi[MAXM];||| 5 long long sumphi[MAXM], dp[MAXM][30];||| 6 void solve(int l, int r, int xl, int xr, int k) {||| 7 if (l > r) {||| 8 return;||| 9 }||| 10 int mid = (l + r) >> 1, np = 0;||| 11 long long nw = 0, nv = 1e18;||| 12 for (int l = min(xr, mid - 1) + 2, r; l <= mid; l = r + 1) {||| 13 r = mid / (mid / l);||| 14 nw += sumphi[mid / l] * (r - l + 1);||| 15 }||| 16 for (int i = min(xr, mid - 1); i >= xl; i--) {||| 17 nw += sumphi[mid / (i + 1)];||| 18 if (dp[i][k - 1] + nw < nv) {||| 19 nv = dp[i][k - 1] + nw;||| 20 np = i;||| 21 }||| 22 }||| 23 assert(xl <= np && np <= xr);||| 24 dp[mid][k] = nv;||| 25 solve(l, mid - 1, xl, np, k);||| 26 solve(mid + 1, r, np, xr, k);||| 27 return;||| 28 }||| 29 int main() {||| 30 for (int i = 1; i <= MAXN - 10; i++) {||| 31 mu[i] = 1, phi[i] = i;||| 32 int cpi = i;||| 33 for (int j = 2; j * j <= cpi; j++) {||| 34 if (cpi % j == 0) {||| 35 int cnt = 0;||| 36 while (cpi % j == 0) {||| 37 cpi /= j, cnt++;||| 38 }||| 39 if (cnt > 1) {||| 40 mu[i] = 0;||| 41 } else {||| 42 mu[i] = -mu[i];||| 43 }||| 44 phi[i] = phi[i] / j * (j - 1);||| 45 }||| 46 }||| 47 if (cpi > 1) {||| 48 mu[i] = -mu[i], phi[i] = phi[i] / cpi * (cpi - 1);||| 49 }||| 50 sumphi[i] = sumphi[i - 1] + phi[i];||| 51 dp[i][1] = 1ll * i * (i + 1) / 2;||| 52 }||| 53 for (int i = 2; i <= 20; i++) {||| 54 solve(i, MAXN - 10, i - 1, MAXN - 10, i);||| 55 }||| 56 scanf(""%d"", &t);||| 57 for (int ii = 1; ii <= t; ii++) {||| 58 scanf(""%d%d"", &n, &k);||| 59 if (k <= 20) {||| 60 printf(""%lld\n"", dp[n][k]);||| 61 } else {||| 62 printf(""%lld\n"", n);||| 63 }||| 64 }||| 65 return 0;||| 66 }||| "	"62 printf(""%d\n"", n);"
84	36	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 long long cal[100005];||| 5 long long val[100005];||| 6 vector<int> prime;||| 7 long long dp[25][100005];||| 8 long long cal2(int l, int r) {||| 9 if (l > r) return 0;||| 10 long long tot = 0;||| 11 long long last = r;||| 12 for (int i = 1;;) {||| 13 int Next = (r) / (i + 1);||| 14 if (Next < l) {||| 15 tot += cal[i] * (last - l + 1);||| 16 break;||| 17 }||| 18 tot += cal[i] * (last - Next);||| 19 last = Next;||| 20 i = r / Next;||| 21 }||| 22 return tot;||| 23 }||| 24 void dc(int k, int l, int r, int optl, int optr) {||| 25 if (l > r) return;||| 26 int mid = (l + r) / 2;||| 27 int opt = 0;||| 28 dp[k][mid] = 1e18;||| 29 long long now = cal2(optr + 1, mid);||| 30 for (int i = min(optr, mid); i >= optl; i--) {||| 31 now += cal[mid / i];||| 32 long long val = dp[k - 1][i - 1] + now;||| 33 if (val < dp[k][mid]) {||| 34 dp[k][mid] = val;||| 35 opt = i;||| 36 }||| 37 }||| 38 dc(k, l, mid - 1, optl, opt);||| 39 dc(k, mid + 1, r, opt, optr);||| 40 }||| 41 void solve() {||| 42 int n, k;||| 43 scanf(""%d %d"", &n, &k);||| 44 if (k >= 20)||| 45 printf(""%d\n"", n);||| 46 else {||| 47 printf(""%lld\n"", dp[k][n]);||| 48 }||| 49 }||| 50 int main() {||| 51 for (int i = 1; i <= 100000; i++) val[i] = i;||| 52 for (int i = 2; i <= 100000; i++) {||| 53 if (val[i] == i) {||| 54 for (int j = i; j <= 100000; j += i) val[j] = val[j] / i * (i - 1);||| 55 }||| 56 }||| 57 cal[1] = 1;||| 58 for (int i = 2; i <= 100000; i++) cal[i] = cal[i - 1] + val[i];||| 59 for (int i = 1; i <= 100000; i++) {||| 60 dp[1][i] = i * 1ll * (i + 1) / 2;||| 61 }||| 62 for (int i = 2; i <= 20; i++) {||| 63 dc(i, 1, 100000, 1, 100000);||| 64 }||| 65 int t = 1;||| 66 scanf(""%d"", &t);||| 67 for (int i = 1; i <= t; i++) {||| 68 solve();||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 long long cal[100005];||| 5 long long val[100005];||| 6 vector<int> prime;||| 7 long long dp[25][100005];||| 8 long long cal2(int l, int r) {||| 9 if (l > r) return 0;||| 10 long long tot = 0;||| 11 long long last = r;||| 12 for (int i = 1;;) {||| 13 int Next = (r) / (i + 1);||| 14 if (Next <= l) {||| 15 tot += cal[i] * (last - l + 1);||| 16 break;||| 17 }||| 18 tot += cal[i] * (last - Next);||| 19 last = Next;||| 20 i = r / Next;||| 21 }||| 22 return tot;||| 23 }||| 24 void dc(int k, int l, int r, int optl, int optr) {||| 25 if (l > r) return;||| 26 int mid = (l + r) / 2;||| 27 int opt = 0;||| 28 dp[k][mid] = 1e18;||| 29 long long now = cal2(optr + 1, mid);||| 30 for (int i = min(optr, mid); i >= optl; i--) {||| 31 now += cal[mid / i];||| 32 long long val = dp[k - 1][i - 1] + now;||| 33 if (val < dp[k][mid]) {||| 34 dp[k][mid] = val;||| 35 opt = i;||| 36 }||| 37 }||| 38 dc(k, l, mid - 1, optl, opt);||| 39 dc(k, mid + 1, r, opt, optr);||| 40 }||| 41 void solve() {||| 42 int n, k;||| 43 scanf(""%d %d"", &n, &k);||| 44 if (k >= 20)||| 45 printf(""%d\n"", n);||| 46 else {||| 47 printf(""%lld\n"", dp[k][n]);||| 48 }||| 49 }||| 50 int main() {||| 51 for (int i = 1; i <= 100000; i++) val[i] = i;||| 52 for (int i = 2; i <= 100000; i++) {||| 53 if (val[i] == i) {||| 54 for (int j = i; j <= 100000; j += i) val[j] = val[j] / i * (i - 1);||| 55 }||| 56 }||| 57 cal[1] = 1;||| 58 for (int i = 2; i <= 100000; i++) cal[i] = cal[i - 1] + val[i];||| 59 for (int i = 1; i <= 100000; i++) {||| 60 dp[1][i] = i * 1ll * (i + 1) / 2;||| 61 }||| 62 for (int i = 2; i <= 20; i++) {||| 63 dc(i, 1, 100000, 1, 100000);||| 64 }||| 65 int t = 1;||| 66 scanf(""%d"", &t);||| 67 for (int i = 1; i <= t; i++) {||| 68 solve();||| 69 }||| 70 return 0;||| 71 }||| "	14 if (Next < l) {
86	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long readint() {||| 4 long long x = 0;||| 5 bool f = 0;||| 6 char c = getchar();||| 7 while (!isdigit(c) && c != '-') c = getchar();||| 8 if (c == '-') {||| 9 f = 1;||| 10 c = getchar();||| 11 }||| 12 while (isdigit(c)) {||| 13 x = x * 10 + c - '0';||| 14 c = getchar();||| 15 }||| 16 return f ? -x : x;||| 17 }||| 18 const long long mod = 998244353, inv2 = 499122177;||| 19 long long ksm(long long a, long long b) {||| 20 long long ans = 1;||| 21 while (b) {||| 22 if (b % 2 == 1) ans = ans * a % mod;||| 23 a = a * a % mod;||| 24 b /= 2;||| 25 }||| 26 return ans;||| 27 }||| 28 const int maxk = 1e7 + 5;||| 29 long long s[maxk];||| 30 int main() {||| 31 int T = readint();||| 32 while (T--) {||| 33 int n, k, x;||| 34 n = readint();||| 35 k = readint();||| 36 x = readint();||| 37 if (x) {||| 38 long long pw1 = 1;||| 39 for (int i = k; i > 0; i--) {||| 40 s[i] = (pw1 - 1 + mod) % mod;||| 41 pw1 = pw1 * 2 % mod;||| 42 }||| 43 s[0] = 1;||| 44 for (int i = 1; i <= k; i++) s[i] = s[i] * s[i - 1] % mod;||| 45 long long ans = 0, pw2 = ksm(2, n), pw3 = 1;||| 46 pw1 = 1;||| 47 for (int i = k - 1; i >= 0; i--) {||| 48 ans = (ans + pw3 * s[i] % mod * pw1 % mod * (i % 2 == 0 ? 1 : mod - 1) %||| 49 mod) %||| 50 mod;||| 51 pw1 = pw1 * 2 % mod;||| 52 pw3 = pw3 * pw2 % mod;||| 53 }||| 54 printf(""%lld\n"", ans);||| 55 } else if (n > k)||| 56 printf(""0\n"");||| 57 else {||| 58 long long ans = 1, pw1 = ksm(2, k), pw2 = 1;||| 59 for (int i = 0; i < n; i++) {||| 60 ans = (pw1 - pw2 + mod) % mod * ans % mod;||| 61 pw2 = pw2 * 2 % mod;||| 62 }||| 63 printf(""%lld\n"", ans);||| 64 }||| 65 }||| 66 return 0;||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long readint() {||| 4 long long x = 0;||| 5 bool f = 0;||| 6 char c = getchar();||| 7 while (!isdigit(c) && c != '-') c = getchar();||| 8 if (c == '-') {||| 9 f = 1;||| 10 c = getchar();||| 11 }||| 12 while (isdigit(c)) {||| 13 x = x * 10 + c - '0';||| 14 c = getchar();||| 15 }||| 16 return f ? -x : x;||| 17 }||| 18 const long long mod = 998244353, inv2 = 499122177;||| 19 long long ksm(long long a, long long b) {||| 20 long long ans = 1;||| 21 while (b) {||| 22 if (b % 2 == 1) ans = ans * a % mod;||| 23 a = a * a % mod;||| 24 b /= 2;||| 25 }||| 26 return ans;||| 27 }||| 28 const int maxk = 1e7 + 5;||| 29 long long s[maxk];||| 30 int main() {||| 31 int T = readint();||| 32 while (T--) {||| 33 int n, k, x;||| 34 n = readint();||| 35 k = readint();||| 36 x = readint();||| 37 if (x) {||| 38 long long pw1 = 1;||| 39 for (int i = k; i > 0; i--) {||| 40 s[i] = (pw1 - 1 + mod) % mod;||| 41 pw1 = pw1 * 2 % mod;||| 42 }||| 43 s[0] = 1;||| 44 for (int i = 1; i <= k; i++) s[i] = s[i] * s[i - 1] % mod;||| 45 long long ans = 0, pw2 = ksm(2, n), pw3 = 1;||| 46 pw1 = 1;||| 47 for (int i = k - 1; i >= 0; i--) {||| 48 ans = (ans + pw3 * s[i] % mod * pw1 % mod * (i % 2 == 0 ? 1 : mod - 1) %||| 49 mod) %||| 50 mod;||| 51 pw1 = pw1 * 2 % mod;||| 52 pw3 = pw3 * pw2 % mod;||| 53 }||| 54 printf(""%lld\n"", ans);||| 55 } else if (n > k)||| 56 printf(""0\n"");||| 57 else {||| 58 long long ans = 1, pw1 = ksm(2, k), pw2 = 1;||| 59 for (int i = 0; i < n; i++) {||| 60 ans = (pw1 - pw2 + mod) % mod * ans % mod;||| 61 pw2 = pw2 * 2;||| 62 }||| 63 printf(""%lld\n"", ans);||| 64 }||| 65 }||| 66 return 0;||| 67 }||| "	61 pw2 = pw2 * 2 % mod;
87	86	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> vec(n);||| 12 int maxi = INT_MIN;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> vec[i];||| 15 maxi = max(maxi, (vec[i] - (i + 1)));||| 16 }||| 17 cout << maxi << '\n';||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> vec(n);||| 12 int maxi = INT_MIN;||| 13 for (int i = 0; i < n; i++) {||| 14 cin >> vec[i];||| 15 maxi = max(maxi, abs(vec[i] - (i + 1)));||| 16 }||| 17 cout << maxi << '\n';||| 18 }||| 19 return 0;||| 20 }||| 	15 maxi = max(maxi, (vec[i] - (i + 1)));
88	278	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[100005];||| 4 int main() {||| 5 int T, n;||| 6 scanf(""%d"", &T);||| 7 while (T--) {||| 8 scanf(""%d"", &n);||| 9 int ans = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 scanf(""%d"", &a[i]);||| 12 if (i && a[i] <= a[i - 1]) {||| 13 ans = 1;||| 14 }||| 15 }||| 16 if (n % 2 == 0) ans = 1;||| 17 if (ans)||| 18 printf(""YES\n"");||| 19 else||| 20 printf(""NO\n"");||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[100005];||| 4 int main() {||| 5 int T, n;||| 6 scanf(""%d"", &T);||| 7 while (T--) {||| 8 scanf(""%d"", &n);||| 9 int ans = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 scanf(""%d"", &a[i]);||| 12 if (i && a[i] < a[i - 1]) {||| 13 ans = 1;||| 14 }||| 15 }||| 16 if (n % 2 == 0) ans = 1;||| 17 if (ans)||| 18 printf(""YES\n"");||| 19 else||| 20 printf(""NO\n"");||| 21 }||| 22 return 0;||| 23 }||| "	12 if (i && a[i] <= a[i - 1]) {
88	229	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6;||| 4 int p[maxn];||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 int fl = 0;||| 9 for (int i = 1; i <= n; i++) {||| 10 scanf(""%d"", &p[i]);||| 11 if (i > 1 && p[i - 1] >= p[i]) fl = 1;||| 12 }||| 13 if (n % 2 == 1 && fl == 0)||| 14 cout << ""NO"" << endl;||| 15 else||| 16 cout << ""YES"" << endl;||| 17 }||| 18 int main() {||| 19 int __;||| 20 cin >> __;||| 21 while (__--) solve();||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6;||| 4 int p[maxn];||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 int fl = 0;||| 9 for (int i = 1; i <= n; i++) {||| 10 scanf(""%d"", &p[i]);||| 11 if (i > 1 && p[i - 1] > p[i]) fl = 1;||| 12 }||| 13 if (n % 2 == 1 && fl == 0)||| 14 cout << ""NO"" << endl;||| 15 else||| 16 cout << ""YES"" << endl;||| 17 }||| 18 int main() {||| 19 int __;||| 20 cin >> __;||| 21 while (__--) solve();||| 22 }||| "	11 if (i > 1 && p[i - 1] >= p[i]) fl = 1;
88	65	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int kMod = 1000000007;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 vector<int> v(n);||| 11 for (int i = 0; i < n; i++) cin >> v[i];||| 12 bool res = false;||| 13 if (n % 2) {||| 14 for (int i = 0; i < n - 1; i++) {||| 15 if (v[i] >= v[i + 1]) {||| 16 res = true;||| 17 break;||| 18 }||| 19 }||| 20 } else {||| 21 res = true;||| 22 }||| 23 cout << ((res) ? ""YES\n"" : ""NO\n"");||| 24 }||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int kMod = 1000000007;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 vector<int> v(n);||| 11 for (int i = 0; i < n; i++) cin >> v[i];||| 12 bool res = false;||| 13 if (n % 2) {||| 14 for (int i = 0; i < n - 1; i++) {||| 15 if (v[i] > v[i + 1]) {||| 16 res = true;||| 17 break;||| 18 }||| 19 }||| 20 } else {||| 21 res = true;||| 22 }||| 23 cout << ((res) ? ""YES\n"" : ""NO\n"");||| 24 }||| 25 }||| "	15 if (v[i] >= v[i + 1]) {
88	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int binpow(long long int a, long long int b, long long int mod) {||| 4 long long int res = 1;||| 5 while (b != 0) {||| 6 if (b % 2) {||| 7 res = (res * a) % mod;||| 8 }||| 9 a = (a * a) % mod;||| 10 b = b / 2;||| 11 }||| 12 return res % mod;||| 13 }||| 14 int main() {||| 15 int t;||| 16 cin >> t;||| 17 while (t--) {||| 18 int n;||| 19 cin >> n;||| 20 vector<int> v(n);||| 21 for (int i = 0; i < n; i++) cin >> v[i];||| 22 if (n % 2 == 0)||| 23 cout << ""YES"" << endl;||| 24 else {||| 25 int fl = 1;||| 26 for (int i = 0; i < n - 1; i++) {||| 27 if (v[i] >= v[i + 1]) {||| 28 fl = 0;||| 29 break;||| 30 }||| 31 }||| 32 if (!fl)||| 33 cout << ""YES"" << endl;||| 34 else {||| 35 cout << ""NO"" << endl;||| 36 }||| 37 }||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int binpow(long long int a, long long int b, long long int mod) {||| 4 long long int res = 1;||| 5 while (b != 0) {||| 6 if (b % 2) {||| 7 res = (res * a) % mod;||| 8 }||| 9 a = (a * a) % mod;||| 10 b = b / 2;||| 11 }||| 12 return res % mod;||| 13 }||| 14 int main() {||| 15 int t;||| 16 cin >> t;||| 17 while (t--) {||| 18 int n;||| 19 cin >> n;||| 20 vector<int> v(n);||| 21 for (int i = 0; i < n; i++) cin >> v[i];||| 22 if (n % 2 == 0)||| 23 cout << ""YES"" << endl;||| 24 else {||| 25 int fl = 1;||| 26 for (int i = 0; i < n - 1; i++) {||| 27 if (v[i] > v[i + 1]) {||| 28 fl = 0;||| 29 break;||| 30 }||| 31 }||| 32 if (!fl)||| 33 cout << ""YES"" << endl;||| 34 else {||| 35 cout << ""NO"" << endl;||| 36 }||| 37 }||| 38 }||| 39 }||| "	27 if (v[i] >= v[i + 1]) {
88	237	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {||| 4 return (a.second < b.second);||| 5 }||| 6 long long modFact(long long n, long long p) {||| 7 if (n >= p) return 0;||| 8 long long result = 1;||| 9 for (long long i = 1; i <= n; i++) result = (result * i) % p;||| 10 return result;||| 11 }||| 12 long long modPower(long long x, long long y, long long p) {||| 13 long long res = 1;||| 14 x = x % p;||| 15 if (x == 0) return 0;||| 16 while (y > 0) {||| 17 if (y & 1) res = (res * x) % p;||| 18 y = y >> 1;||| 19 x = (x * x) % p;||| 20 }||| 21 return res;||| 22 }||| 23 void printArr(vector<long long> arr) {||| 24 for (auto &x : arr) cout << x << "" "";||| 25 cout << '\n';||| 26 }||| 27 long long get() {||| 28 long long temp;||| 29 cin >> temp;||| 30 return temp;||| 31 }||| 32 void solve() {||| 33 long long n;||| 34 cin >> n;||| 35 long long a[n];||| 36 for (auto &x : a) cin >> x;||| 37 if (n % 2 == 0) {||| 38 cout << ""YES\n"";||| 39 return;||| 40 } else {||| 41 bool isSorted = true;||| 42 for (long long i = 0; i < n - 1; i++) {||| 43 if (a[i] >= a[i + 1]) {||| 44 isSorted = false;||| 45 break;||| 46 }||| 47 }||| 48 if (!isSorted)||| 49 cout << ""YES\n"";||| 50 else||| 51 cout << ""NO\n"";||| 52 }||| 53 }||| 54 int main() {||| 55 ios::sync_with_stdio(false), cin.tie(0);||| 56 long long t = 0;||| 57 cin >> t;||| 58 while (t--) solve();||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {||| 4 return (a.second < b.second);||| 5 }||| 6 long long modFact(long long n, long long p) {||| 7 if (n >= p) return 0;||| 8 long long result = 1;||| 9 for (long long i = 1; i <= n; i++) result = (result * i) % p;||| 10 return result;||| 11 }||| 12 long long modPower(long long x, long long y, long long p) {||| 13 long long res = 1;||| 14 x = x % p;||| 15 if (x == 0) return 0;||| 16 while (y > 0) {||| 17 if (y & 1) res = (res * x) % p;||| 18 y = y >> 1;||| 19 x = (x * x) % p;||| 20 }||| 21 return res;||| 22 }||| 23 void printArr(vector<long long> arr) {||| 24 for (auto &x : arr) cout << x << "" "";||| 25 cout << '\n';||| 26 }||| 27 long long get() {||| 28 long long temp;||| 29 cin >> temp;||| 30 return temp;||| 31 }||| 32 void solve() {||| 33 long long n;||| 34 cin >> n;||| 35 long long a[n];||| 36 for (auto &x : a) cin >> x;||| 37 if (n & 1 == 0) {||| 38 cout << ""YES\n"";||| 39 return;||| 40 } else {||| 41 bool isSorted = true;||| 42 for (long long i = 0; i < n - 1; i++) {||| 43 if (a[i] >= a[i + 1]) {||| 44 isSorted = false;||| 45 break;||| 46 }||| 47 }||| 48 if (!isSorted)||| 49 cout << ""YES\n"";||| 50 else||| 51 cout << ""NO\n"";||| 52 }||| 53 }||| 54 int main() {||| 55 ios::sync_with_stdio(false), cin.tie(0);||| 56 long long t = 0;||| 57 cin >> t;||| 58 while (t--) solve();||| 59 return 0;||| 60 }||| "	37 if (n % 2 == 0) {
88	274	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool arraySortedOrNot(long long int arr[], long long int n) {||| 4 if (n == 0 || n == 1) return true;||| 5 for (int i = 1; i < n; i++)||| 6 if (arr[i - 1] >= arr[i]) return false;||| 7 return true;||| 8 }||| 9 void solve() {||| 10 long long int n;||| 11 cin >> n;||| 12 long long int a[n];||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 }||| 16 if (n % 2 == 0) {||| 17 cout << ""YES"";||| 18 } else {||| 19 if (arraySortedOrNot(a, n)) {||| 20 cout << ""NO"";||| 21 } else {||| 22 cout << ""YES"";||| 23 }||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 int t;||| 30 cin >> t;||| 31 while (t--) {||| 32 solve();||| 33 cout << endl;||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool arraySortedOrNot(long long int arr[], long long int n) {||| 4 if (n == 0 || n == 1) return true;||| 5 for (int i = 1; i < n; i++)||| 6 if (arr[i - 1] > arr[i]) return false;||| 7 return true;||| 8 }||| 9 void solve() {||| 10 long long int n;||| 11 cin >> n;||| 12 long long int a[n];||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 }||| 16 if (n % 2 == 0) {||| 17 cout << ""YES"";||| 18 } else {||| 19 if (arraySortedOrNot(a, n)) {||| 20 cout << ""NO"";||| 21 } else {||| 22 cout << ""YES"";||| 23 }||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 int t;||| 30 cin >> t;||| 31 while (t--) {||| 32 solve();||| 33 cout << endl;||| 34 }||| 35 return 0;||| 36 }||| "	6 if (arr[i - 1] >= arr[i]) return false;
88	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (long long &x : a) cin >> x;||| 8 bool flag = 0;||| 9 for (int i = 0; i < n - 1; i++) {||| 10 if (a[i] >= a[i + 1]) flag = true;||| 11 }||| 12 if (n % 2 == 0 || flag)||| 13 cout << ""YES\n"";||| 14 else||| 15 cout << ""NO\n"";||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 long long t;||| 21 cin >> t;||| 22 while (t--) solve();||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (long long &x : a) cin >> x;||| 8 bool flag = 0;||| 9 for (int i = 0; i < n - 1; i++) {||| 10 if (a[i] > a[i + 1]) flag = true;||| 11 }||| 12 if (n % 2 == 0 || flag)||| 13 cout << ""YES\n"";||| 14 else||| 15 cout << ""NO\n"";||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 long long t;||| 21 cin >> t;||| 22 while (t--) solve();||| 23 return 0;||| 24 }||| "	10 if (a[i] >= a[i + 1]) flag = true;
88	152	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[100010];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 if (n % 2 == 0)||| 14 cout << ""YES"" << '\n';||| 15 else {||| 16 int cnt = 0;||| 17 for (int i = 1; i <= n - 1; i++) {||| 18 if (a[i] >= a[i + 1]) cnt = 1;||| 19 }||| 20 if (cnt)||| 21 cout << ""YES"" << '\n';||| 22 else||| 23 cout << ""NO"" << '\n';||| 24 }||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[100010];||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> a[i];||| 12 }||| 13 if (n % 2 == 0)||| 14 cout << ""YES"" << '\n';||| 15 else {||| 16 int cnt = 0;||| 17 for (int i = 1; i <= n - 1; i++) {||| 18 if (a[i] > a[i + 1]) cnt = 1;||| 19 }||| 20 if (cnt)||| 21 cout << ""YES"" << '\n';||| 22 else||| 23 cout << ""NO"" << '\n';||| 24 }||| 25 }||| 26 }||| "	18 if (a[i] >= a[i + 1]) cnt = 1;
88	183	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 cin.sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 int tc;||| 8 cin >> tc;||| 9 while (tc--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> nums(n);||| 13 for (int& x : nums) {||| 14 cin >> x;||| 15 }||| 16 bool ans = n % 2 == 0;||| 17 for (int i = 0; i < n - 1; ++i) {||| 18 ans |= nums[i] >= nums[i + 1];||| 19 }||| 20 int cnt = 0, cur = 0;||| 21 for (int x : nums) {||| 22 if (x > cur) {||| 23 cur = x;||| 24 cnt++;||| 25 }||| 26 }||| 27 ans |= cnt % 2 == 0;||| 28 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 29 }||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 cin.sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 int tc;||| 8 cin >> tc;||| 9 while (tc--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> nums(n);||| 13 for (int& x : nums) {||| 14 cin >> x;||| 15 }||| 16 bool ans = n % 2 == 0;||| 17 for (int i = 0; i < n - 1; ++i) {||| 18 ans |= nums[i] > nums[i + 1];||| 19 }||| 20 int cnt = 0, cur = 0;||| 21 for (int x : nums) {||| 22 if (x > cur) {||| 23 cur = x;||| 24 cnt++;||| 25 }||| 26 }||| 27 ans |= cnt % 2 == 0;||| 28 cout << (ans ? ""YES"" : ""NO"") << '\n';||| 29 }||| 30 }||| "	18 ans |= nums[i] >= nums[i + 1];
88	246	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string to_upper(string &a) {||| 4 for (int i = 0; i < (int)a.size(); ++i)||| 5 if (a[i] >= 'a' && a[i] <= 'z') a[i] -= 'a' - 'A';||| 6 return a;||| 7 }||| 8 string to_lower(string &a) {||| 9 for (int i = 0; i < (int)a.size(); ++i)||| 10 if (a[i] >= 'A' && a[i] <= 'Z') a[i] += 'a' - 'A';||| 11 return a;||| 12 }||| 13 int gcd(int a, int b) {||| 14 if (b == 0) return a;||| 15 return gcd(b, a % b);||| 16 }||| 17 int lcm(int a, int b) { return (a / gcd(a, b)) * b; }||| 18 void dsc() {||| 19 int n;||| 20 cin >> n;||| 21 int arr[n];||| 22 for (int i = 0; i < n; i++) cin >> arr[i];||| 23 if (n % 2 == 0) {||| 24 cout << ""YES\n"";||| 25 return;||| 26 }||| 27 int x = 0;||| 28 for (int i = 1; i < n; i++) {||| 29 if (arr[i] <= arr[i - 1]) x++;||| 30 }||| 31 if (x == 0)||| 32 cout << ""NO\n"";||| 33 else||| 34 cout << ""YES\n"";||| 35 }||| 36 signed main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin.tie(NULL);||| 39 cout.tie(NULL);||| 40 int t;||| 41 cin >> t;||| 42 while (t--) dsc();||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string to_upper(string &a) {||| 4 for (int i = 0; i < (int)a.size(); ++i)||| 5 if (a[i] >= 'a' && a[i] <= 'z') a[i] -= 'a' - 'A';||| 6 return a;||| 7 }||| 8 string to_lower(string &a) {||| 9 for (int i = 0; i < (int)a.size(); ++i)||| 10 if (a[i] >= 'A' && a[i] <= 'Z') a[i] += 'a' - 'A';||| 11 return a;||| 12 }||| 13 int gcd(int a, int b) {||| 14 if (b == 0) return a;||| 15 return gcd(b, a % b);||| 16 }||| 17 int lcm(int a, int b) { return (a / gcd(a, b)) * b; }||| 18 void dsc() {||| 19 int n;||| 20 cin >> n;||| 21 int arr[n];||| 22 for (int i = 0; i < n; i++) cin >> arr[i];||| 23 if (n % 2 == 0) {||| 24 cout << ""YES\n"";||| 25 return;||| 26 }||| 27 int x = 0;||| 28 for (int i = 1; i < n; i++) {||| 29 if (arr[i] < arr[i - 1]) x++;||| 30 }||| 31 if (x == 0)||| 32 cout << ""NO\n"";||| 33 else||| 34 cout << ""YES\n"";||| 35 }||| 36 signed main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin.tie(NULL);||| 39 cout.tie(NULL);||| 40 int t;||| 41 cin >> t;||| 42 while (t--) dsc();||| 43 }||| "	29 if (arr[i] <= arr[i - 1]) x++;
88	227	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 int n;||| 8 cin >> n;||| 9 int last;||| 10 cin >> last;||| 11 bool strictly_increasing = true;||| 12 for (int j = 1; j < n; j++) {||| 13 int x;||| 14 cin >> x;||| 15 if (x <= last) {||| 16 strictly_increasing = false;||| 17 }||| 18 last = x;||| 19 }||| 20 if (n % 2 == 0 || !strictly_increasing) {||| 21 cout << ""YES\n"";||| 22 } else {||| 23 cout << ""NO\n"";||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 int n;||| 8 cin >> n;||| 9 int last;||| 10 cin >> last;||| 11 bool strictly_increasing = true;||| 12 for (int j = 1; j < n; j++) {||| 13 int x;||| 14 cin >> x;||| 15 if (x < last) {||| 16 strictly_increasing = false;||| 17 }||| 18 last = x;||| 19 }||| 20 if (n % 2 == 0 || !strictly_increasing) {||| 21 cout << ""YES\n"";||| 22 } else {||| 23 cout << ""NO\n"";||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	15 if (x <= last) {
88	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> arr(n);||| 7 long long val = 0;||| 8 bool ok = true;||| 9 for (long long i = 0; i < n; i++) {||| 10 long long temp;||| 11 cin >> temp;||| 12 if (temp <= val) ok = false;||| 13 val = temp;||| 14 }||| 15 if (ok && n % 2)||| 16 cout << ""NO"" << endl;||| 17 else||| 18 cout << ""YES"" << endl;||| 19 }||| 20 int32_t main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 long long t = 1;||| 24 cin >> t;||| 25 for (long long i = 1; i <= t; i++) {||| 26 solve();||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> arr(n);||| 7 long long val = 0;||| 8 bool ok = true;||| 9 for (long long i = 0; i < n; i++) {||| 10 long long temp;||| 11 cin >> temp;||| 12 if (temp < val) ok = false;||| 13 val = temp;||| 14 }||| 15 if (ok && n % 2)||| 16 cout << ""NO"" << endl;||| 17 else||| 18 cout << ""YES"" << endl;||| 19 }||| 20 int32_t main() {||| 21 ios_base::sync_with_stdio(false);||| 22 cin.tie(NULL);||| 23 long long t = 1;||| 24 cin >> t;||| 25 for (long long i = 1; i <= t; i++) {||| 26 solve();||| 27 }||| 28 return 0;||| 29 }||| "	12 if (temp <= val) ok = false;
88	203	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 int ar[n];||| 7 for (int i = 0; i < n; i++) cin >> ar[i];||| 8 if (n % 2 == 0)||| 9 cout << ""YES"" << endl;||| 10 else {||| 11 int flag = 0;||| 12 for (int i = 0; i < n - 1; i++) {||| 13 if (ar[i] >= ar[i + 1]) flag++;||| 14 }||| 15 if (flag == 0)||| 16 cout << ""NO"" << endl;||| 17 else||| 18 cout << ""YES"" << endl;||| 19 }||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 int t;||| 25 cin >> t;||| 26 while (t--) solve();||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 int ar[n];||| 7 for (int i = 0; i < n; i++) cin >> ar[i];||| 8 if (n % 2 == 0)||| 9 cout << ""YES"" << endl;||| 10 else {||| 11 int flag = 0;||| 12 for (int i = 0; i < n - 1; i++) {||| 13 if (ar[i] > ar[i + 1]) flag++;||| 14 }||| 15 if (flag == 0)||| 16 cout << ""NO"" << endl;||| 17 else||| 18 cout << ""YES"" << endl;||| 19 }||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 int t;||| 25 cin >> t;||| 26 while (t--) solve();||| 27 }||| "	13 if (ar[i] >= ar[i + 1]) flag++;
88	159	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(NULL);||| 6 long long int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int arr[n];||| 12 for (long long int i = 0; i < n; i++) cin >> arr[i];||| 13 if (n % 2 == 0) {||| 14 cout << ""YES""||| 15 << ""\n"";||| 16 continue;||| 17 }||| 18 long long int check = 0;||| 19 for (long long int i = 1; i < n; i++) {||| 20 if (arr[i - 1] >= arr[i]) {||| 21 cout << ""YES""||| 22 << ""\n"";||| 23 check++;||| 24 break;||| 25 }||| 26 }||| 27 if (check) continue;||| 28 cout << ""NO""||| 29 << ""\n"";||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(NULL);||| 6 long long int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long int n;||| 10 cin >> n;||| 11 long long int arr[n];||| 12 for (long long int i = 0; i < n; i++) cin >> arr[i];||| 13 if (n % 2 == 0) {||| 14 cout << ""YES""||| 15 << ""\n"";||| 16 continue;||| 17 }||| 18 long long int check = 0;||| 19 for (long long int i = 1; i < n; i++) {||| 20 if (arr[i - 1] > arr[i]) {||| 21 cout << ""YES""||| 22 << ""\n"";||| 23 check++;||| 24 break;||| 25 }||| 26 }||| 27 if (check) continue;||| 28 cout << ""NO""||| 29 << ""\n"";||| 30 }||| 31 return 0;||| 32 }||| "	20 if (arr[i - 1] >= arr[i]) {
88	205	"1 #include <bits/stdc++.h>||| 2 const long long int mod = 1e9 + 7;||| 3 const long long int inf = 1e17;||| 4 const double pi = 3.1415926536;||| 5 using namespace std;||| 6 using namespace std::chrono;||| 7 long long int biExp(long long int a, long long int b) {||| 8 if (b == 0) return 1;||| 9 if (b % 2 == 1)||| 10 return (a * biExp(a, b - 1)) % mod;||| 11 else {||| 12 long long int temp = biExp(a, b / 2);||| 13 return (temp * temp) % mod;||| 14 }||| 15 }||| 16 long long int ModularInverse(long long a) { return biExp(a, mod - 2); }||| 17 long long int power(long long int a, long long int b) {||| 18 if (b == 0) return 1;||| 19 if (b % 2 == 1)||| 20 return (a * pow(a, b - 1));||| 21 else {||| 22 long long int temp = pow(a, b / 2);||| 23 return (temp * temp);||| 24 }||| 25 }||| 26 long long int fac(long long int n) {||| 27 long long int ans = 1;||| 28 for (int i = 1; i <= n; i++) {||| 29 ans = (ans * i) % mod;||| 30 }||| 31 return ans;||| 32 }||| 33 long long int ncr(long long int n, long long int r) {||| 34 long long int N = fac(n);||| 35 long long int R = (fac(n - r) * fac(r)) % mod;||| 36 return (N * ModularInverse(R)) % mod;||| 37 }||| 38 void tc() {||| 39 long long int n;||| 40 cin >> n;||| 41 vector<long long int> vec(n);||| 42 for (auto &i : vec) cin >> i;||| 43 if (n % 2 == 0) {||| 44 cout << ""YES"" << endl;||| 45 return;||| 46 } else {||| 47 for (int i = 0; i + 1 < n; i++) {||| 48 if (vec[i] >= vec[i + 1]) {||| 49 cout << ""YES"" << endl;||| 50 return;||| 51 }||| 52 }||| 53 }||| 54 cout << ""NO"" << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(NULL);||| 59 ;||| 60 auto start = high_resolution_clock::now();||| 61 long long int t = 1;||| 62 cin >> t;||| 63 while (t--) {||| 64 tc();||| 65 }||| 66 auto stop = high_resolution_clock::now();||| 67 auto duration = duration_cast<microseconds>(stop - start);||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long int mod = 1e9 + 7;||| 3 const long long int inf = 1e17;||| 4 const double pi = 3.1415926536;||| 5 using namespace std;||| 6 using namespace std::chrono;||| 7 long long int biExp(long long int a, long long int b) {||| 8 if (b == 0) return 1;||| 9 if (b % 2 == 1)||| 10 return (a * biExp(a, b - 1)) % mod;||| 11 else {||| 12 long long int temp = biExp(a, b / 2);||| 13 return (temp * temp) % mod;||| 14 }||| 15 }||| 16 long long int ModularInverse(long long a) { return biExp(a, mod - 2); }||| 17 long long int power(long long int a, long long int b) {||| 18 if (b == 0) return 1;||| 19 if (b % 2 == 1)||| 20 return (a * pow(a, b - 1));||| 21 else {||| 22 long long int temp = pow(a, b / 2);||| 23 return (temp * temp);||| 24 }||| 25 }||| 26 long long int fac(long long int n) {||| 27 long long int ans = 1;||| 28 for (int i = 1; i <= n; i++) {||| 29 ans = (ans * i) % mod;||| 30 }||| 31 return ans;||| 32 }||| 33 long long int ncr(long long int n, long long int r) {||| 34 long long int N = fac(n);||| 35 long long int R = (fac(n - r) * fac(r)) % mod;||| 36 return (N * ModularInverse(R)) % mod;||| 37 }||| 38 void tc() {||| 39 long long int n;||| 40 cin >> n;||| 41 vector<long long int> vec(n);||| 42 for (auto &i : vec) cin >> i;||| 43 if (n % 2 == 0) {||| 44 cout << ""YES"" << endl;||| 45 return;||| 46 } else {||| 47 for (int i = 0; i + 1 < n; i++) {||| 48 if (vec[i] > vec[i + 1]) {||| 49 cout << ""YES"" << endl;||| 50 return;||| 51 }||| 52 }||| 53 }||| 54 cout << ""NO"" << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(NULL);||| 59 ;||| 60 auto start = high_resolution_clock::now();||| 61 long long int t = 1;||| 62 cin >> t;||| 63 while (t--) {||| 64 tc();||| 65 }||| 66 auto stop = high_resolution_clock::now();||| 67 auto duration = duration_cast<microseconds>(stop - start);||| 68 return 0;||| 69 }||| "	48 if (vec[i] >= vec[i + 1]) {
88	44	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int N;||| 8 cin >> N;||| 9 bool good = 0;||| 10 vector<int> a(N);||| 11 for (int &i : a) cin >> i;||| 12 for (int i = 0; i + 1 < N; i++) {||| 13 if (a[i] >= a[i + 1]) good = 1;||| 14 }||| 15 if (!good and N % 2)||| 16 cout << ""NO\n"";||| 17 else||| 18 cout << ""YES\n"";||| 19 }||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int N;||| 8 cin >> N;||| 9 bool good = 0;||| 10 vector<int> a(N);||| 11 for (int &i : a) cin >> i;||| 12 for (int i = 0; i + 1 < N; i++) {||| 13 if (a[i] > a[i + 1]) good = 1;||| 14 }||| 15 if (!good and N % 2)||| 16 cout << ""NO\n"";||| 17 else||| 18 cout << ""YES\n"";||| 19 }||| 20 }||| "	13 if (a[i] >= a[i + 1]) good = 1;
88	271	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> vec(n);||| 7 vector<int> a;||| 8 int p = 0, cnt = 0;||| 9 for (auto& i : vec) {||| 10 cin >> i;||| 11 }||| 12 if (n % 2 == 0) {||| 13 cout << ""YES"" << '\n';||| 14 return;||| 15 }||| 16 p = vec[0];||| 17 for (int i = 1; i < n; i++) {||| 18 if (vec[i] <= vec[i - 1]) {||| 19 cout << ""YES"" << '\n';||| 20 return;||| 21 }||| 22 p = i;||| 23 }||| 24 cout << ""NO"" << '\n';||| 25 }||| 26 int main() {||| 27 int t;||| 28 cin >> t;||| 29 while (t--) solve();||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> vec(n);||| 7 vector<int> a;||| 8 int p = 0, cnt = 0;||| 9 for (auto& i : vec) {||| 10 cin >> i;||| 11 }||| 12 if (n % 2 == 0) {||| 13 cout << ""YES"" << '\n';||| 14 return;||| 15 }||| 16 p = vec[0];||| 17 for (int i = 1; i < n; i++) {||| 18 if (vec[i] >= vec[i - 1]) {||| 19 cout << ""YES"" << '\n';||| 20 return;||| 21 }||| 22 p = i;||| 23 }||| 24 cout << ""NO"" << '\n';||| 25 }||| 26 int main() {||| 27 int t;||| 28 cin >> t;||| 29 while (t--) solve();||| 30 }||| "	18 if (vec[i] <= vec[i - 1]) {
88	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const unsigned int M = 1000000007;||| 4 const unsigned int MOD = 998244353;||| 5 const int MAXN = 1e5 + 55;||| 6 const long long int MAXD = 1e14;||| 7 const long long int INF = 1e18;||| 8 const long long int NINF = INF * (-1);||| 9 int gcd(int a, int b) {||| 10 if (a == 0) return b;||| 11 return gcd(b % a, a);||| 12 }||| 13 long long binpow(long long a, long long b) {||| 14 long long res = 1;||| 15 while (b > 0) {||| 16 if (b & 1) res = ((res) * (a));||| 17 a = ((a) * (a));||| 18 b >>= 1;||| 19 }||| 20 return res;||| 21 }||| 22 vector<vector<int>> adj(200055);||| 23 vector<pair<long long int, pair<long long int, long long int>>> node(200055,||| 24 {0,||| 25 {0, 0}});||| 26 vector<bool> vis(200055);||| 27 void testmetal() {||| 28 long long int n;||| 29 cin >> n;||| 30 long long int a[n];||| 31 for (long long int i = 0; i < n; i++) {||| 32 cin >> a[i];||| 33 }||| 34 if ((n & 1) == 0) {||| 35 cout << ""YES""||| 36 << ""\n"";||| 37 return;||| 38 }||| 39 for (long long int i = 1; i < n; i++) {||| 40 if (a[i] <= a[i - 1]) {||| 41 cout << ""YES""||| 42 << ""\n"";||| 43 return;||| 44 }||| 45 }||| 46 cout << ""NO""||| 47 << ""\n"";||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(false);||| 51 cin.tie(NULL);||| 52 long long int t;||| 53 cin >> t;||| 54 while (t--) {||| 55 testmetal();||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const unsigned int M = 1000000007;||| 4 const unsigned int MOD = 998244353;||| 5 const int MAXN = 1e5 + 55;||| 6 const long long int MAXD = 1e14;||| 7 const long long int INF = 1e18;||| 8 const long long int NINF = INF * (-1);||| 9 int gcd(int a, int b) {||| 10 if (a == 0) return b;||| 11 return gcd(b % a, a);||| 12 }||| 13 long long binpow(long long a, long long b) {||| 14 long long res = 1;||| 15 while (b > 0) {||| 16 if (b & 1) res = ((res) * (a));||| 17 a = ((a) * (a));||| 18 b >>= 1;||| 19 }||| 20 return res;||| 21 }||| 22 vector<vector<int>> adj(200055);||| 23 vector<pair<long long int, pair<long long int, long long int>>> node(200055,||| 24 {0,||| 25 {0, 0}});||| 26 vector<bool> vis(200055);||| 27 void testmetal() {||| 28 long long int n;||| 29 cin >> n;||| 30 long long int a[n];||| 31 for (long long int i = 0; i < n; i++) {||| 32 cin >> a[i];||| 33 }||| 34 if (n & 1 == 0) {||| 35 cout << ""YES""||| 36 << ""\n"";||| 37 return;||| 38 }||| 39 for (long long int i = 1; i < n; i++) {||| 40 if (a[i] <= a[i - 1]) {||| 41 cout << ""YES""||| 42 << ""\n"";||| 43 return;||| 44 }||| 45 }||| 46 cout << ""NO""||| 47 << ""\n"";||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(false);||| 51 cin.tie(NULL);||| 52 long long int t;||| 53 cin >> t;||| 54 while (t--) {||| 55 testmetal();||| 56 }||| 57 return 0;||| 58 }||| "	34 if ((n & 1) == 0) {
88	134	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void yes() {||| 4 cout << ""YES""||| 5 << ""\n"";||| 6 return;||| 7 }||| 8 void no() {||| 9 cout << ""NO""||| 10 << ""\n"";||| 11 return;||| 12 }||| 13 template <typename T>||| 14 void p(T a) {||| 15 cout << a << "" "";||| 16 return;||| 17 }||| 18 template <typename T>||| 19 void pnl(T a) {||| 20 cout << a << ""\n"";||| 21 return;||| 22 }||| 23 const int ten4 = 1e4;||| 24 const int ten5 = 1e5;||| 25 const int ten6 = 1e6;||| 26 const int ten7 = 1e7;||| 27 const int ten9 = 1e9;||| 28 const int mod = 1e9 + 7;||| 29 struct pair_hash {||| 30 inline std::size_t operator()(const std::pair<int, int>& v) const {||| 31 return v.first * 31 + v.second;||| 32 }||| 33 };||| 34 long long bin_to_integer(string strin) {||| 35 long long r = 1, sum = 0;||| 36 for (long long i = strin.length() - 1; i >= 0; i--) {||| 37 if (strin[i] == '1') sum += r;||| 38 r *= 2;||| 39 }||| 40 return sum;||| 41 }||| 42 string to_binary(int n) {||| 43 string strng;||| 44 while (n > 0) {||| 45 if (n & 1)||| 46 strng += '1';||| 47 else||| 48 strng += '0';||| 49 n >>= 1;||| 50 }||| 51 reverse(strng.begin(), strng.end());||| 52 return strng;||| 53 }||| 54 int compare(const void* a, const void* b) {||| 55 const long long* x = (long long*)a;||| 56 const long long* y = (long long*)b;||| 57 if (*x > *y)||| 58 return 1;||| 59 else if (*x < *y)||| 60 return -1;||| 61 return 0;||| 62 }||| 63 int power(int a, int n) {||| 64 int res = 1;||| 65 while (n) {||| 66 if (n & 1) res = (res * 1LL * a) % mod;||| 67 n /= 2;||| 68 a = (a * 1LL * a) % mod;||| 69 }||| 70 return res;||| 71 }||| 72 const int Nc = 200001;||| 73 int F[Nc];||| 74 bool Fcomputed = false;||| 75 int nCr(int n, int r) {||| 76 if (!Fcomputed) {||| 77 F[0] = 1, Fcomputed = true;||| 78 for (int i = 1; i < Nc; i++) F[i] = (F[i - 1] * 1LL * i) % mod;||| 79 }||| 80 if (n < r) return 0;||| 81 int res = F[n];||| 82 res = res * 1LL * power(F[r], mod - 2) % mod;||| 83 res = res * 1LL * power(F[n - r], mod - 2) % mod;||| 84 return res;||| 85 }||| 86 struct unionfind {||| 87 vector<int> p;||| 88 unionfind(int N) { p = vector<int>(N, -1); }||| 89 int root(int x) {||| 90 if (p[x] < 0) {||| 91 return x;||| 92 } else {||| 93 p[x] = root(p[x]);||| 94 return p[x];||| 95 }||| 96 }||| 97 bool same(int x, int y) { return root(x) == root(y); }||| 98 void unite(int x, int y) {||| 99 x = root(x);||| 100 y = root(y);||| 101 if (x != y) {||| 102 if (p[x] < p[y]) {||| 103 swap(x, y);||| 104 }||| 105 p[y] += p[x];||| 106 p[x] = y;||| 107 }||| 108 }||| 109 };||| 110 void testcase(int test) {||| 111 int n;||| 112 cin >> n;||| 113 int arr[n], cnt = 0;||| 114 for (int i = 0; i < (n); i++) cin >> arr[i];||| 115 if (n % 2 == 0) return yes();||| 116 for (int i = 0; i < (n - 1); i++) {||| 117 if (arr[i] >= arr[i + 1]) return yes();||| 118 }||| 119 no();||| 120 return;||| 121 }||| 122 int main() {||| 123 ios_base::sync_with_stdio(false);||| 124 ;||| 125 int test = 1, z = 1;||| 126 cin >> test;||| 127 while (z <= test) {||| 128 testcase(z);||| 129 z++;||| 130 }||| 131 return 0;||| 132 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void yes() {||| 4 cout << ""YES""||| 5 << ""\n"";||| 6 return;||| 7 }||| 8 void no() {||| 9 cout << ""NO""||| 10 << ""\n"";||| 11 return;||| 12 }||| 13 template <typename T>||| 14 void p(T a) {||| 15 cout << a << "" "";||| 16 return;||| 17 }||| 18 template <typename T>||| 19 void pnl(T a) {||| 20 cout << a << ""\n"";||| 21 return;||| 22 }||| 23 const int ten4 = 1e4;||| 24 const int ten5 = 1e5;||| 25 const int ten6 = 1e6;||| 26 const int ten7 = 1e7;||| 27 const int ten9 = 1e9;||| 28 const int mod = 1e9 + 7;||| 29 struct pair_hash {||| 30 inline std::size_t operator()(const std::pair<int, int>& v) const {||| 31 return v.first * 31 + v.second;||| 32 }||| 33 };||| 34 long long bin_to_integer(string strin) {||| 35 long long r = 1, sum = 0;||| 36 for (long long i = strin.length() - 1; i >= 0; i--) {||| 37 if (strin[i] == '1') sum += r;||| 38 r *= 2;||| 39 }||| 40 return sum;||| 41 }||| 42 string to_binary(int n) {||| 43 string strng;||| 44 while (n > 0) {||| 45 if (n & 1)||| 46 strng += '1';||| 47 else||| 48 strng += '0';||| 49 n >>= 1;||| 50 }||| 51 reverse(strng.begin(), strng.end());||| 52 return strng;||| 53 }||| 54 int compare(const void* a, const void* b) {||| 55 const long long* x = (long long*)a;||| 56 const long long* y = (long long*)b;||| 57 if (*x > *y)||| 58 return 1;||| 59 else if (*x < *y)||| 60 return -1;||| 61 return 0;||| 62 }||| 63 int power(int a, int n) {||| 64 int res = 1;||| 65 while (n) {||| 66 if (n & 1) res = (res * 1LL * a) % mod;||| 67 n /= 2;||| 68 a = (a * 1LL * a) % mod;||| 69 }||| 70 return res;||| 71 }||| 72 const int Nc = 200001;||| 73 int F[Nc];||| 74 bool Fcomputed = false;||| 75 int nCr(int n, int r) {||| 76 if (!Fcomputed) {||| 77 F[0] = 1, Fcomputed = true;||| 78 for (int i = 1; i < Nc; i++) F[i] = (F[i - 1] * 1LL * i) % mod;||| 79 }||| 80 if (n < r) return 0;||| 81 int res = F[n];||| 82 res = res * 1LL * power(F[r], mod - 2) % mod;||| 83 res = res * 1LL * power(F[n - r], mod - 2) % mod;||| 84 return res;||| 85 }||| 86 struct unionfind {||| 87 vector<int> p;||| 88 unionfind(int N) { p = vector<int>(N, -1); }||| 89 int root(int x) {||| 90 if (p[x] < 0) {||| 91 return x;||| 92 } else {||| 93 p[x] = root(p[x]);||| 94 return p[x];||| 95 }||| 96 }||| 97 bool same(int x, int y) { return root(x) == root(y); }||| 98 void unite(int x, int y) {||| 99 x = root(x);||| 100 y = root(y);||| 101 if (x != y) {||| 102 if (p[x] < p[y]) {||| 103 swap(x, y);||| 104 }||| 105 p[y] += p[x];||| 106 p[x] = y;||| 107 }||| 108 }||| 109 };||| 110 void testcase(int test) {||| 111 int n;||| 112 cin >> n;||| 113 int arr[n], cnt = 0;||| 114 for (int i = 0; i < (n); i++) cin >> arr[i];||| 115 if (n % 2 == 0) return yes();||| 116 for (int i = 0; i < (n - 1); i++) {||| 117 if (arr[i] > arr[i + 1]) return yes();||| 118 }||| 119 no();||| 120 return;||| 121 }||| 122 int main() {||| 123 ios_base::sync_with_stdio(false);||| 124 ;||| 125 int test = 1, z = 1;||| 126 cin >> test;||| 127 while (z <= test) {||| 128 testcase(z);||| 129 z++;||| 130 }||| 131 return 0;||| 132 }||| "	117 if (arr[i] >= arr[i + 1]) return yes();
88	87	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int v[200005];||| 4 int main() {||| 5 int n, i, j, l, t, z, a;||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 for (z = 1; z <= t; z++) {||| 10 cin >> n;||| 11 int maxim = 0;||| 12 int cnt = 0;||| 13 for (i = 1; i <= n; i++) {||| 14 cin >> v[i];||| 15 }||| 16 for (i = 2; i <= n; i++) {||| 17 if (v[i] <= v[i - 1]) {||| 18 cnt = 1;||| 19 }||| 20 }||| 21 if (n % 2 == 0) {||| 22 cout << ""Yes"";||| 23 } else {||| 24 if (cnt == 1) {||| 25 cout << ""Yes"";||| 26 } else {||| 27 cout << ""NO"";||| 28 }||| 29 }||| 30 cout << '\n';||| 31 }||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int v[200005];||| 4 int main() {||| 5 int n, i, j, l, t, z, a;||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 for (z = 1; z <= t; z++) {||| 10 cin >> n;||| 11 int maxim = 0;||| 12 int cnt = 0;||| 13 for (i = 1; i <= n; i++) {||| 14 cin >> v[i];||| 15 }||| 16 for (i = 2; i <= n; i++) {||| 17 if (v[i] < v[i - 1]) {||| 18 cnt = 1;||| 19 }||| 20 }||| 21 if (n % 2 == 0) {||| 22 cout << ""Yes"";||| 23 } else {||| 24 if (cnt == 1) {||| 25 cout << ""Yes"";||| 26 } else {||| 27 cout << ""NO"";||| 28 }||| 29 }||| 30 cout << '\n';||| 31 }||| 32 return 0;||| 33 }||| "	17 if (v[i] <= v[i - 1]) {
88	154	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int poww(long long int x, long long int y) {||| 4 long long int ans = 1;||| 5 while (y-- > 0) {||| 6 ans *= x;||| 7 }||| 8 return ans;||| 9 }||| 10 void sieve() {||| 11 bool *primes = new bool[100000 + 1];||| 12 for (long long int i = 0; i < 100000 + 1; i++) {||| 13 primes[i] = true;||| 14 }||| 15 long long int sqr = sqrt(100000);||| 16 primes[0] = false;||| 17 primes[1] = false;||| 18 for (long long int p = 2; p <= sqr; p++) {||| 19 if (primes[p]) {||| 20 for (long long int i = p * p; i <= 100000; i += p) {||| 21 primes[i] = false;||| 22 }||| 23 }||| 24 }||| 25 vector<int> v;||| 26 for (long long int i = 2; i <= 100000; i++) {||| 27 if (primes[i]) {||| 28 v.push_back(i);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 long long int t;||| 34 cin >> t;||| 35 while (t-- > 0) {||| 36 int n;||| 37 cin >> n;||| 38 long long int arr[n];||| 39 int ch = 0;||| 40 for (long long int i = 0; i <= n - 1; i++) {||| 41 cin >> arr[i];||| 42 }||| 43 if (n % 2 == 0) {||| 44 cout << ""YES"" << endl;||| 45 } else {||| 46 for (long long int i = 0; i <= n - 2; i++) {||| 47 if (arr[i] >= arr[i + 1]) {||| 48 ch = 1;||| 49 break;||| 50 }||| 51 }||| 52 if (ch == 1) {||| 53 cout << ""YES"" << endl;||| 54 } else {||| 55 cout << ""NO"" << endl;||| 56 }||| 57 }||| 58 }||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int poww(long long int x, long long int y) {||| 4 long long int ans = 1;||| 5 while (y-- > 0) {||| 6 ans *= x;||| 7 }||| 8 return ans;||| 9 }||| 10 void sieve() {||| 11 bool *primes = new bool[100000 + 1];||| 12 for (long long int i = 0; i < 100000 + 1; i++) {||| 13 primes[i] = true;||| 14 }||| 15 long long int sqr = sqrt(100000);||| 16 primes[0] = false;||| 17 primes[1] = false;||| 18 for (long long int p = 2; p <= sqr; p++) {||| 19 if (primes[p]) {||| 20 for (long long int i = p * p; i <= 100000; i += p) {||| 21 primes[i] = false;||| 22 }||| 23 }||| 24 }||| 25 vector<int> v;||| 26 for (long long int i = 2; i <= 100000; i++) {||| 27 if (primes[i]) {||| 28 v.push_back(i);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 long long int t;||| 34 cin >> t;||| 35 while (t-- > 0) {||| 36 int n;||| 37 cin >> n;||| 38 long long int arr[n];||| 39 int ch = 0;||| 40 for (long long int i = 0; i <= n - 1; i++) {||| 41 cin >> arr[i];||| 42 }||| 43 if (n % 2 == 0) {||| 44 cout << ""YES"" << endl;||| 45 } else {||| 46 for (long long int i = 0; i <= n - 2; i++) {||| 47 if (arr[i] > arr[i + 1]) {||| 48 ch = 1;||| 49 break;||| 50 }||| 51 }||| 52 if (ch == 1) {||| 53 cout << ""YES"" << endl;||| 54 } else {||| 55 cout << ""NO"" << endl;||| 56 }||| 57 }||| 58 }||| 59 }||| "	47 if (arr[i] >= arr[i + 1]) {
88	129	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.14159265358979323846;||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n;||| 12 cin >> n;||| 13 long long a[n];||| 14 for (long long i = 0; i < n; i++) cin >> a[i];||| 15 if (n % 2 == 0) {||| 16 cout << ""YES"" << endl;||| 17 } else {||| 18 long long ch = a[0], f = 0, idx1 = -1, idx2 = -1;||| 19 for (long long i = 0; i + 1 < n; i++) {||| 20 if (a[i] >= a[i + 1]) {||| 21 f = 1;||| 22 break;||| 23 }||| 24 }||| 25 if (f == 1)||| 26 cout << ""YES"" << endl;||| 27 else||| 28 cout << ""NO"" << endl;||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.14159265358979323846;||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n;||| 12 cin >> n;||| 13 long long a[n];||| 14 for (long long i = 0; i < n; i++) cin >> a[i];||| 15 if (n % 2 == 0) {||| 16 cout << ""YES"" << endl;||| 17 } else {||| 18 long long ch = a[0], f = 0, idx1 = -1, idx2 = -1;||| 19 for (long long i = 0; i + 1 < n; i++) {||| 20 if (a[i] > a[i + 1]) {||| 21 f = 1;||| 22 break;||| 23 }||| 24 }||| 25 if (f == 1)||| 26 cout << ""YES"" << endl;||| 27 else||| 28 cout << ""NO"" << endl;||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	20 if (a[i] >= a[i + 1]) {
88	196	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string solve() {||| 4 int n;||| 5 cin >> n;||| 6 int a[n];||| 7 for (int i = 0; i < n; i++) cin >> a[i];||| 8 if (n % 2 == 0) return ""YES"";||| 9 for (int i = 0; i < n - 1; i++)||| 10 if (a[i] >= a[i + 1]) return ""YES"";||| 11 return ""NO"";||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 long long int t = 1;||| 18 cin >> t;||| 19 while (t--) {||| 20 cout << solve() << ""\n"";||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string solve() {||| 4 int n;||| 5 cin >> n;||| 6 int a[n];||| 7 for (int i = 0; i < n; i++) cin >> a[i];||| 8 if (n % 2 == 0) return ""YES"";||| 9 for (int i = 0; i < n - 1; i++)||| 10 if (a[i] > a[i + 1]) return ""YES"";||| 11 return ""NO"";||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 long long int t = 1;||| 18 cin >> t;||| 19 while (t--) {||| 20 cout << solve() << ""\n"";||| 21 }||| 22 return 0;||| 23 }||| "	"10 if (a[i] >= a[i + 1]) return ""YES"";"
88	163	"1 #include <bits/stdc++.h>||| 2 const int INF = 0x3f3f3f3f;||| 3 const int N = (int)1e5 + 5;||| 4 using namespace std;||| 5 int t, n;||| 6 int a[N];||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0), cout.tie(0);||| 10 cin >> t;||| 11 a[0] = -1;||| 12 while (t--) {||| 13 cin >> n;||| 14 for (int i = (1); i < (n + 1); i++) cin >> a[i];||| 15 if (n % 2 == 0) {||| 16 puts(""YES"");||| 17 continue;||| 18 } else {||| 19 bool ans = false;||| 20 for (int i = (1); i < (n + 1); i++) {||| 21 if (a[i] <= a[i - 1]) {||| 22 ans = true;||| 23 break;||| 24 }||| 25 }||| 26 puts(ans ? ""YES"" : ""NO"");||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 const int INF = 0x3f3f3f3f;||| 3 const int N = (int)1e5 + 5;||| 4 using namespace std;||| 5 int t, n;||| 6 int a[N];||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0), cout.tie(0);||| 10 cin >> t;||| 11 a[0] = -1;||| 12 while (t--) {||| 13 cin >> n;||| 14 for (int i = (1); i < (n + 1); i++) cin >> a[i];||| 15 if (n % 2 == 0) {||| 16 puts(""YES"");||| 17 continue;||| 18 } else {||| 19 bool ans = false;||| 20 for (int i = (1); i < (n + 1); i++) {||| 21 if (a[i] < a[i - 1]) {||| 22 ans = true;||| 23 break;||| 24 }||| 25 }||| 26 puts(ans ? ""YES"" : ""NO"");||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	21 if (a[i] <= a[i - 1]) {
88	285	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 vector<long long> fact(1);||| 5 int gcdExtended(int a, int b, int* x, int* y) {||| 6 if (a == 0) {||| 7 *x = 0, *y = 1;||| 8 return b;||| 9 }||| 10 int x1, y1;||| 11 int gcd = gcdExtended(b % a, a, &x1, &y1);||| 12 *x = y1 - (b / a) * x1;||| 13 *y = x1;||| 14 return gcd;||| 15 }||| 16 int modInverse(int a, int m) {||| 17 int x, y;||| 18 int g = gcdExtended(a, m, &x, &y);||| 19 if (g != 1)||| 20 return 0;||| 21 else {||| 22 int res = (x % m + m) % m;||| 23 return res;||| 24 }||| 25 }||| 26 long long gcd(long long a, long long b) {||| 27 if (b == 0) return a;||| 28 return gcd(b, a % b);||| 29 }||| 30 long long power(long long x, long long y) {||| 31 long long temp;||| 32 if (y == 0) return 1;||| 33 temp = power(x, y / 2);||| 34 if (y % 2 == 0)||| 35 return temp * temp;||| 36 else||| 37 return x * temp * temp;||| 38 }||| 39 long long power(long long x, long long y, long long p) {||| 40 long long res = 1;||| 41 x = x % p;||| 42 while (y > 0) {||| 43 if (y & 1) res = (res * x) % p;||| 44 y = y >> 1;||| 45 x = (x * x) % p;||| 46 }||| 47 return res;||| 48 }||| 49 long long modInv(long long n, long long p) { return power(n, p - 2, p); }||| 50 long long ncr(long long n, long long r) {||| 51 return (n >= r ? (fact[n] * modInv(fact[r], mod)) % mod *||| 52 modInv(fact[n - r], mod) % mod||| 53 : 0);||| 54 }||| 55 long long add(long long a, long long b) {||| 56 long long z = a + b;||| 57 if (z >= mod) z -= mod;||| 58 return z;||| 59 }||| 60 long long mul(long long a, long long b) { return (a * b) % mod; }||| 61 long long sub(long long a, long long b) { return (a - b + mod) % mod; }||| 62 int main() {||| 63 ios_base::sync_with_stdio(false);||| 64 cin.tie(NULL);||| 65 cout.tie(NULL);||| 66 long long tt = 1, p, i, j, n, x;||| 67 cin >> tt;||| 68 for (p = 1; p <= tt; p++) {||| 69 cin >> n;||| 70 vector<long long> a(n);||| 71 for (i = 0; i < n; i++) cin >> a[i];||| 72 if (n % 2 == 0)||| 73 cout << ""YES\n"";||| 74 else {||| 75 long long f = 0;||| 76 for (i = 0; i < n - 1; i++) {||| 77 if (a[i] >= a[i + 1]) {||| 78 f = 1;||| 79 break;||| 80 }||| 81 }||| 82 if (f)||| 83 cout << ""YES\n"";||| 84 else||| 85 cout << ""NO\n"";||| 86 }||| 87 }||| 88 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 vector<long long> fact(1);||| 5 int gcdExtended(int a, int b, int* x, int* y) {||| 6 if (a == 0) {||| 7 *x = 0, *y = 1;||| 8 return b;||| 9 }||| 10 int x1, y1;||| 11 int gcd = gcdExtended(b % a, a, &x1, &y1);||| 12 *x = y1 - (b / a) * x1;||| 13 *y = x1;||| 14 return gcd;||| 15 }||| 16 int modInverse(int a, int m) {||| 17 int x, y;||| 18 int g = gcdExtended(a, m, &x, &y);||| 19 if (g != 1)||| 20 return 0;||| 21 else {||| 22 int res = (x % m + m) % m;||| 23 return res;||| 24 }||| 25 }||| 26 long long gcd(long long a, long long b) {||| 27 if (b == 0) return a;||| 28 return gcd(b, a % b);||| 29 }||| 30 long long power(long long x, long long y) {||| 31 long long temp;||| 32 if (y == 0) return 1;||| 33 temp = power(x, y / 2);||| 34 if (y % 2 == 0)||| 35 return temp * temp;||| 36 else||| 37 return x * temp * temp;||| 38 }||| 39 long long power(long long x, long long y, long long p) {||| 40 long long res = 1;||| 41 x = x % p;||| 42 while (y > 0) {||| 43 if (y & 1) res = (res * x) % p;||| 44 y = y >> 1;||| 45 x = (x * x) % p;||| 46 }||| 47 return res;||| 48 }||| 49 long long modInv(long long n, long long p) { return power(n, p - 2, p); }||| 50 long long ncr(long long n, long long r) {||| 51 return (n >= r ? (fact[n] * modInv(fact[r], mod)) % mod *||| 52 modInv(fact[n - r], mod) % mod||| 53 : 0);||| 54 }||| 55 long long add(long long a, long long b) {||| 56 long long z = a + b;||| 57 if (z >= mod) z -= mod;||| 58 return z;||| 59 }||| 60 long long mul(long long a, long long b) { return (a * b) % mod; }||| 61 long long sub(long long a, long long b) { return (a - b + mod) % mod; }||| 62 int main() {||| 63 ios_base::sync_with_stdio(false);||| 64 cin.tie(NULL);||| 65 cout.tie(NULL);||| 66 long long tt = 1, p, i, j, n, x;||| 67 cin >> tt;||| 68 for (p = 1; p <= tt; p++) {||| 69 cin >> n;||| 70 vector<long long> a(n);||| 71 for (i = 0; i < n; i++) cin >> a[i];||| 72 if (n % 2 == 0)||| 73 cout << ""YES\n"";||| 74 else {||| 75 long long f = 0;||| 76 for (i = 0; i < n - 1; i++) {||| 77 if (a[i] > a[i + 1]) {||| 78 f = 1;||| 79 break;||| 80 }||| 81 }||| 82 if (f)||| 83 cout << ""YES\n"";||| 84 else||| 85 cout << ""NO\n"";||| 86 }||| 87 }||| 88 }||| "	77 if (a[i] >= a[i + 1]) {
88	117	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> arr(n);||| 7 for (long long int i = 0; i < n; i++) {||| 8 cin >> arr[i];||| 9 }||| 10 if (n % 2 == 0) {||| 11 cout << ""YES"" << endl;||| 12 } else {||| 13 bool flag = false;||| 14 for (long long int i = 0; i < n - 1; i++) {||| 15 if (arr[i] >= arr[i + 1]) {||| 16 flag = true;||| 17 break;||| 18 }||| 19 }||| 20 if (flag == true) {||| 21 cout << ""YES"" << endl;||| 22 } else {||| 23 cout << ""NO"" << endl;||| 24 }||| 25 }||| 26 }||| 27 int main() {||| 28 int t;||| 29 cin >> t;||| 30 for (int i = 1; i <= t; i++) {||| 31 solve();||| 32 }||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> arr(n);||| 7 for (long long int i = 0; i < n; i++) {||| 8 cin >> arr[i];||| 9 }||| 10 if (n % 2 == 0) {||| 11 cout << ""YES"" << endl;||| 12 } else {||| 13 bool flag = false;||| 14 for (long long int i = 0; i < n - 1; i++) {||| 15 if (arr[i] > arr[i + 1]) {||| 16 flag = true;||| 17 break;||| 18 }||| 19 }||| 20 if (flag == true) {||| 21 cout << ""YES"" << endl;||| 22 } else {||| 23 cout << ""NO"" << endl;||| 24 }||| 25 }||| 26 }||| 27 int main() {||| 28 int t;||| 29 cin >> t;||| 30 for (int i = 1; i <= t; i++) {||| 31 solve();||| 32 }||| 33 }||| "	15 if (arr[i] >= arr[i + 1]) {
88	146	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 void solve() {||| 5 long long n, i;||| 6 cin >> n;||| 7 long long a[n];||| 8 for (i = 0; i < n; i++) cin >> a[i];||| 9 if (n % 2 == 0) {||| 10 cout << ""YES\n"";||| 11 return;||| 12 }||| 13 for (i = 0; i < n - 1; i++) {||| 14 if (a[i] >= a[i + 1]) {||| 15 cout << ""YES\n"";||| 16 return;||| 17 }||| 18 }||| 19 cout << ""NO\n"";||| 20 }||| 21 int32_t main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 long long t = 1;||| 26 cin >> t;||| 27 while (t--) solve();||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 void solve() {||| 5 long long n, i;||| 6 cin >> n;||| 7 long long a[n];||| 8 for (i = 0; i < n; i++) cin >> a[i];||| 9 if (n % 2 == 0) {||| 10 cout << ""YES\n"";||| 11 return;||| 12 }||| 13 for (i = 0; i < n - 1; i++) {||| 14 if (a[i] > a[i + 1]) {||| 15 cout << ""YES\n"";||| 16 return;||| 17 }||| 18 }||| 19 cout << ""NO\n"";||| 20 }||| 21 int32_t main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 long long t = 1;||| 26 cin >> t;||| 27 while (t--) solve();||| 28 }||| "	14 if (a[i] >= a[i + 1]) {
89	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c < '0' || c > '9') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') ans = ans * 10 + c - '0', c = getchar();||| 11 return ans * f;||| 12 }||| 13 const int maxn = 1e6 + 5;||| 14 long long T, n, a[maxn], die[maxn], now;||| 15 bool bj;||| 16 int main() {||| 17 T = read();||| 18 while (T--) {||| 19 n = read();||| 20 for (register int i = 1; i <= n; i++) a[i] = read();||| 21 bj = 1;||| 22 for (register int i = 1; i <= n; i++) {||| 23 die[i] = -1;||| 24 for (register int j = i; j >= 1; j--) {||| 25 if (a[i] % (j + 1) != 0) {||| 26 die[i] = i - j;||| 27 break;||| 28 }||| 29 }||| 30 if (die[i] == -1) bj = 0;||| 31 }||| 32 for (register int i = 1; i <= n; i++)||| 33 if (die[i] > i - 1) {||| 34 bj = 0;||| 35 }||| 36 if (!bj)||| 37 puts(""NO"");||| 38 else||| 39 puts(""YES"");||| 40 }||| 41 return 0;||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c < '0' || c > '9') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') ans = ans * 10 + c - '0', c = getchar();||| 11 return ans * f;||| 12 }||| 13 const int maxn = 1e6 + 5;||| 14 long long T, n, a[maxn], die[maxn], now;||| 15 bool bj;||| 16 int main() {||| 17 T = read();||| 18 while (T--) {||| 19 n = read();||| 20 for (register int i = 1; i <= n; i++) a[i] = read();||| 21 bj = 1;||| 22 for (register int i = 1; i <= n; i++) {||| 23 die[i] = -1;||| 24 for (register int j = n; j >= 1; j--) {||| 25 if (a[i] % (j + 1) != 0) {||| 26 die[i] = i - j;||| 27 break;||| 28 }||| 29 }||| 30 if (die[i] == -1) bj = 0;||| 31 }||| 32 for (register int i = 1; i <= n; i++)||| 33 if (die[i] > i - 1) {||| 34 bj = 0;||| 35 }||| 36 if (!bj)||| 37 puts(""NO"");||| 38 else||| 39 puts(""YES"");||| 40 }||| 41 return 0;||| 42 }||| "	24 for (register int j = i; j >= 1; j--) {
90	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ;||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long x, y;||| 12 cin >> x >> y;||| 13 if (x == y)||| 14 cout << x << ""\n"";||| 15 else if (x > y)||| 16 cout << x + y << ""\n"";||| 17 else {||| 18 long long mod = (y / x) * x;||| 19 cout << (mod + y) / 2 << ""\n"";||| 20 }||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ;||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long x, y;||| 12 cin >> x >> y;||| 13 if (x == y)||| 14 cout << x << ""\n"";||| 15 else if (x > y)||| 16 cout << x + y << ""\n"";||| 17 else {||| 18 long long mod = (y % x) * x;||| 19 cout << (mod + y) / 2 << ""\n"";||| 20 }||| 21 }||| 22 return 0;||| 23 }||| "	18 long long mod = (y / x) * x;
90	119	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long x, y, n;||| 4 inline void solve() {||| 5 cin >> x >> y;||| 6 if (y % x == 0) {||| 7 cout << x << endl;||| 8 return;||| 9 }||| 10 if (x < y) {||| 11 n = y / x * x;||| 12 cout << (y + n) / 2 << endl;||| 13 } else {||| 14 cout << x + y << endl;||| 15 }||| 16 }||| 17 int T;||| 18 int main() {||| 19 ios::sync_with_stdio(false);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 cin >> T;||| 23 while (T--) solve();||| 24 return 0;||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long x, y, n;||| 4 inline void solve() {||| 5 cin >> x >> y;||| 6 if (y % x == 0) {||| 7 cout << x << endl;||| 8 return;||| 9 }||| 10 if (x < y) {||| 11 n = y % x * x;||| 12 cout << (y + n) / 2 << endl;||| 13 } else {||| 14 cout << x + y << endl;||| 15 }||| 16 }||| 17 int T;||| 18 int main() {||| 19 ios::sync_with_stdio(false);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 cin >> T;||| 23 while (T--) solve();||| 24 return 0;||| 25 }||| 	11 n = y / x * x;
91	45	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxl = 2e5 + 7;||| 4 const long long mod = 998244353;||| 5 vector<long long> v[2];||| 6 long long dp[2][maxl];||| 7 signed main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 cout.tie(0);||| 11 long long t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long n;||| 15 cin >> n;||| 16 long long ans = 0;||| 17 vector<long long> nana(n + 10);||| 18 for (long long i = 1; i <= n; i++) cin >> nana[i];||| 19 for (long long i = n; i >= 1; i--) {||| 20 long long k = i & 1;||| 21 v[k].push_back(nana[i]);||| 22 dp[k][nana[i]] = 1;||| 23 long long las = nana[i];||| 24 for (auto& x : v[k ^ 1]) {||| 25 long long chuxiancishu = dp[k ^ 1][x];||| 26 long long fenkuai = (nana[i] + x - 1) / x;||| 27 long long newx = nana[i] / fenkuai;||| 28 ans += chuxiancishu * i % mod * (fenkuai - 1) % mod;||| 29 dp[k][newx] += chuxiancishu;||| 30 if (las != newx) v[k].push_back(newx), las = newx;||| 31 }||| 32 for (auto& x : v[k ^ 1]) dp[k ^ 1][x] = 0;||| 33 v[k ^ 1].clear();||| 34 ans %= mod;||| 35 }||| 36 cout << ans << '\n';||| 37 for (auto& x : v[0]) dp[0][x] = 0;||| 38 for (auto& x : v[1]) dp[1][x] = 0;||| 39 v[0].clear(), v[1].clear();||| 40 }||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxl = 2e5 + 7;||| 4 const long long mod = 998244353;||| 5 vector<long long> v[2];||| 6 long long dp[2][maxl];||| 7 signed main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 cout.tie(0);||| 11 long long t;||| 12 cin >> t;||| 13 while (t--) {||| 14 long long n;||| 15 cin >> n;||| 16 long long ans = 0;||| 17 vector<long long> nana(n + 10);||| 18 for (long long i = 1; i <= n; i++) cin >> nana[i];||| 19 for (long long i = n; i >= 1; i--) {||| 20 long long k = i & 1;||| 21 v[k].push_back(nana[i]);||| 22 dp[k][nana[i]] = 1;||| 23 long long las = nana[i];||| 24 for (auto& x : v[k ^ 1]) {||| 25 long long chuxiancishu = dp[k ^ 1][x];||| 26 long long fenkuai = (nana[i] + x - 1) / x;||| 27 long long newx = nana[i] / fenkuai;||| 28 ans += chuxiancishu * i % mod * (fenkuai - 1) % mod;||| 29 dp[k][newx] += chuxiancishu;||| 30 if (las != newx) v[k].push_back(newx), las = newx;||| 31 }||| 32 for (auto& x : v[k ^ 1]) dp[k ^ 1][x] = 0;||| 33 v[k ^ 1].clear();||| 34 ans %= mod;||| 35 }||| 36 cout << ans << '\n';||| 37 for (auto& x : v[0]) dp[0][x] = 0;||| 38 for (auto& x : v[1]) dp[1][x] = 1;||| 39 v[0].clear(), v[1].clear();||| 40 }||| 41 }||| 	38 for (auto& x : v[1]) dp[1][x] = 0;
91	55	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace Ruri {||| 4 const int infi = 1e9;||| 5 const long long infl = 4e18;||| 6 }  // namespace Ruri||| 7 using namespace Ruri;||| 8 namespace Gadgets {||| 9 inline long long ceil_div(long long a, long long b) { return (a + b - 1) / b; }||| 10 inline long long pos_mod(long long a, long long b) { return (a % b + b) % b; }||| 11 }  // namespace Gadgets||| 12 namespace Read {||| 13 inline int ri() {||| 14 int x;||| 15 scanf(""%d"", &x);||| 16 return x;||| 17 }||| 18 inline long long rl() {||| 19 long long x;||| 20 scanf(""%lld"", &x);||| 21 return x;||| 22 }||| 23 inline double rd() {||| 24 double x;||| 25 scanf(""%lf"", &x);||| 26 return x;||| 27 }||| 28 }  // namespace Read||| 29 namespace DeBug {}||| 30 using namespace Gadgets;||| 31 using namespace Read;||| 32 using namespace DeBug;||| 33 const int MAX_N = 1e5 + 5;||| 34 const int mod = 998244353;||| 35 void Add(int &x, int y) {||| 36 x += y;||| 37 if (x >= mod) x -= mod;||| 38 }||| 39 void Minus(int &x, int y) {||| 40 x -= y;||| 41 x += (x >> 31) & mod;||| 42 };||| 43 void Mul(int &x, int y) { x = 1ll * x * y % mod; }||| 44 int n, a[MAX_N];||| 45 int dp[2][MAX_N];||| 46 int main() {||| 47 int T = ri();||| 48 while (T--) {||| 49 n = ri();||| 50 for (int i = 1, bbb = n; i <= bbb; ++i) a[i] = ri();||| 51 int ans = 0;||| 52 int now = 1, pre = 0;||| 53 dp[pre][a[n]] = 1;||| 54 for (int i = n, bbb = 1; i >= bbb; --i) {||| 55 for (int l = 1, r; l <= a[i]; l = r + 1) {||| 56 r = a[i] / (a[i] / l), dp[now][a[i] / r] = 0;||| 57 }||| 58 Add(dp[now][a[i]], 1);||| 59 if (i == n) {||| 60 swap(pre, now);||| 61 continue;||| 62 }||| 63 for (int l = 1, r; l <= a[i + 1]; l = r + 1) {||| 64 r = a[i + 1] / (a[i + 1] / l);||| 65 int val = a[i + 1] / r;||| 66 if (dp[pre][val]) {||| 67 if (false)||| 68 cout << ""dp[pre][val]""||| 69 << "": "" << (dp[pre][val]) << endl;||| 70 ;||| 71 if (false)||| 72 cout << ""val""||| 73 << "": "" << (val) << endl;||| 74 ;||| 75 int k = ceil_div(a[i], val), res = i;||| 76 Mul(res, 1ll * (k - 1) * dp[pre][val] % mod);||| 77 Add(ans, res);||| 78 Add(dp[now][a[i] / k], dp[pre][val]);||| 79 }||| 80 }||| 81 swap(pre, now);||| 82 }||| 83 if (false)||| 84 cout << ""ans""||| 85 << "": "" << (ans) << endl;||| 86 ;||| 87 printf(""%lld\n"", pos_mod(ans, mod));||| 88 }||| 89 return 0;||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace Ruri {||| 4 const int infi = 1e9;||| 5 const long long infl = 4e18;||| 6 }  // namespace Ruri||| 7 using namespace Ruri;||| 8 namespace Gadgets {||| 9 inline long long ceil_div(long long a, long long b) { return (a + b - 1) / b; }||| 10 inline long long pos_mod(long long a, long long b) { return (a % b + b) % b; }||| 11 }  // namespace Gadgets||| 12 namespace Read {||| 13 inline int ri() {||| 14 int x;||| 15 scanf(""%d"", &x);||| 16 return x;||| 17 }||| 18 inline long long rl() {||| 19 long long x;||| 20 scanf(""%lld"", &x);||| 21 return x;||| 22 }||| 23 inline double rd() {||| 24 double x;||| 25 scanf(""%lf"", &x);||| 26 return x;||| 27 }||| 28 }  // namespace Read||| 29 namespace DeBug {}||| 30 using namespace Gadgets;||| 31 using namespace Read;||| 32 using namespace DeBug;||| 33 const int MAX_N = 1e5 + 5;||| 34 const int mod = 998244353;||| 35 void Add(int &x, int y) {||| 36 x += y;||| 37 if (x >= mod) x -= mod;||| 38 }||| 39 void Minus(int &x, int y) {||| 40 x -= y;||| 41 x += (x >> 31) & mod;||| 42 };||| 43 void Mul(int &x, int y) { x = 1ll * x * y % mod; }||| 44 int n, a[MAX_N];||| 45 int dp[2][MAX_N];||| 46 int main() {||| 47 int T = ri();||| 48 while (T--) {||| 49 n = ri();||| 50 for (int i = 1, bbb = n; i <= bbb; ++i) a[i] = ri();||| 51 int ans = 0;||| 52 int now = 1, pre = 0;||| 53 dp[pre][a[n]] = 1;||| 54 for (int i = n, bbb = 1; i >= bbb; --i) {||| 55 for (int l = 1, r; l <= a[i]; l = r + 1) {||| 56 r = a[i] / (a[i] / l), dp[now][a[i] / r] = 0;||| 57 }||| 58 Add(dp[now][a[i]], 1);||| 59 if (i == n) {||| 60 swap(pre, now);||| 61 continue;||| 62 }||| 63 for (int l = 1, r; l <= a[i + 1]; l = r + 1) {||| 64 r = a[i + 1] / (a[i + 1] / l);||| 65 int val = a[i + 1] / r;||| 66 if (dp[pre][val]) {||| 67 if (false)||| 68 cout << ""dp[pre][val]""||| 69 << "": "" << (dp[pre][val]) << endl;||| 70 ;||| 71 if (false)||| 72 cout << ""val""||| 73 << "": "" << (val) << endl;||| 74 ;||| 75 int k = ceil_div(a[i], val), res = i;||| 76 Mul(res, 1ll * (k - 1) * dp[pre][val]);||| 77 Add(ans, res);||| 78 Add(dp[now][a[i] / k], dp[pre][val]);||| 79 }||| 80 }||| 81 swap(pre, now);||| 82 }||| 83 if (false)||| 84 cout << ""ans""||| 85 << "": "" << (ans) << endl;||| 86 ;||| 87 printf(""%lld\n"", pos_mod(ans, mod));||| 88 }||| 89 return 0;||| 90 }||| "	76 Mul(res, 1ll * (k - 1) * dp[pre][val] % mod);
92	69	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int a;||| 5 cin >> a;||| 6 for (int i = 1; i <= a; i++) {||| 7 string p;||| 8 int ans1 = 0, ans2 = 0;||| 9 cin >> p;||| 10 if (p.size() == 1) {||| 11 cout << p << endl;||| 12 } else {||| 13 for (int l = 0; l <= p.size() - 2; l++) {||| 14 if (p[l] == 'a' && p[l + 1] == 'b') {||| 15 ans1++;||| 16 } else if (p[l] == 'b' && p[l + 1] == 'a') {||| 17 ans2++;||| 18 } else {||| 19 }||| 20 }||| 21 int ans = abs(ans1 - ans2);||| 22 if (ans1 > ans2) {||| 23 for (int l = 0; l <= p.size() - 2; l++) {||| 24 if (ans == 0) {||| 25 break;||| 26 }||| 27 if (p[l] == 'a' && p[l + 1] == 'b' || p[l - 1] != 'b') {||| 28 p[l] = 'b';||| 29 ans--;||| 30 } else if (p[l] == 'b' && p[l - 1] == 'a' || p[l + 1] != 'a') {||| 31 p[l] = 'a';||| 32 ans--;||| 33 } else {||| 34 }||| 35 }||| 36 } else if (ans1 < ans2) {||| 37 for (int l = 0; l <= p.size() - 2; l++) {||| 38 if (ans == 0) {||| 39 break;||| 40 }||| 41 if (p[l] == 'b' && p[l + 1] == 'a' || p[l - 1] != 'a') {||| 42 p[l] = 'a';||| 43 ans--;||| 44 } else if (p[l] == 'a' && p[l - 1] == 'b' || p[l + 1] != 'b') {||| 45 p[l] = 'b';||| 46 ans--;||| 47 } else {||| 48 }||| 49 }||| 50 } else {||| 51 }||| 52 cout << p << endl;||| 53 }||| 54 }||| 55 return 0;||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int a;||| 5 cin >> a;||| 6 for (int i = 1; i <= a; i++) {||| 7 string p;||| 8 int ans1 = 0, ans2 = 0;||| 9 cin >> p;||| 10 if (p.size() == 1) {||| 11 cout << p;||| 12 } else {||| 13 for (int l = 0; l <= p.size() - 2; l++) {||| 14 if (p[l] == 'a' && p[l + 1] == 'b') {||| 15 ans1++;||| 16 } else if (p[l] == 'b' && p[l + 1] == 'a') {||| 17 ans2++;||| 18 } else {||| 19 }||| 20 }||| 21 int ans = abs(ans1 - ans2);||| 22 if (ans1 > ans2) {||| 23 for (int l = 0; l <= p.size() - 2; l++) {||| 24 if (ans == 0) {||| 25 break;||| 26 }||| 27 if (p[l] == 'a' && p[l + 1] == 'b' || p[l - 1] != 'b') {||| 28 p[l] = 'b';||| 29 ans--;||| 30 } else if (p[l] == 'b' && p[l - 1] == 'a' || p[l + 1] != 'a') {||| 31 p[l] = 'a';||| 32 ans--;||| 33 } else {||| 34 }||| 35 }||| 36 } else if (ans1 < ans2) {||| 37 for (int l = 0; l <= p.size() - 2; l++) {||| 38 if (ans == 0) {||| 39 break;||| 40 }||| 41 if (p[l] == 'b' && p[l + 1] == 'a' || p[l - 1] != 'a') {||| 42 p[l] = 'a';||| 43 ans--;||| 44 } else if (p[l] == 'a' && p[l - 1] == 'b' || p[l + 1] != 'b') {||| 45 p[l] = 'b';||| 46 ans--;||| 47 } else {||| 48 }||| 49 }||| 50 } else {||| 51 }||| 52 cout << p << endl;||| 53 }||| 54 }||| 55 return 0;||| 56 }||| 	11 cout << p << endl;
92	288	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void ha() { printf(""YES\n""); }||| 4 void na() { printf(""NO\n""); }||| 5 long long power(long long a, long long b) {||| 6 long long c, d;||| 7 if (b == 1) {||| 8 return a % 1000000007;||| 9 } else if (b % 2 == 0) {||| 10 c = power(a, b / 2);||| 11 return (c * c) % 1000000007;||| 12 } else {||| 13 c = power(a, b / 2);||| 14 d = (c * c) % 1000000007;||| 15 d = (d * a) % 1000000007;||| 16 return d;||| 17 }||| 18 }||| 19 int absolute(int a) {||| 20 if (a >= 0) {||| 21 return a;||| 22 } else {||| 23 return (a * (-1));||| 24 }||| 25 }||| 26 long long absolute(long long a) {||| 27 if (a >= 0) {||| 28 return a;||| 29 } else {||| 30 return (a * (-1));||| 31 }||| 32 }||| 33 int main() {||| 34 int t;||| 35 scanf(""%d"", &t);||| 36 while (t--) {||| 37 string a;||| 38 cin >> a;||| 39 int n = a.length();||| 40 if (a[0] != a[n - 1]) {||| 41 a[0] = a[n - 1];||| 42 cout << a << endl;||| 43 } else {||| 44 cout << a << endl;||| 45 }||| 46 }||| 47 return 0;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void ha() { printf(""YES\n""); }||| 4 void na() { printf(""NO\n""); }||| 5 long long power(long long a, long long b) {||| 6 long long c, d;||| 7 if (b == 1) {||| 8 return a % 1000000007;||| 9 } else if (b % 2 == 0) {||| 10 c = power(a, b / 2);||| 11 return (c * c) % 1000000007;||| 12 } else {||| 13 c = power(a, b / 2);||| 14 d = (c * c) % 1000000007;||| 15 d = (d * a) % 1000000007;||| 16 return d;||| 17 }||| 18 }||| 19 int absolute(int a) {||| 20 if (a >= 0) {||| 21 return a;||| 22 } else {||| 23 return (a * (-1));||| 24 }||| 25 }||| 26 long long absolute(long long a) {||| 27 if (a >= 0) {||| 28 return a;||| 29 } else {||| 30 return (a * (-1));||| 31 }||| 32 }||| 33 int main() {||| 34 int t;||| 35 scanf(""%d"", &t);||| 36 while (t--) {||| 37 string a;||| 38 cin >> a;||| 39 int n = a.length();||| 40 if (a[0] == a[n - 1]) {||| 41 a[0] = a[n - 1];||| 42 cout << a << endl;||| 43 } else {||| 44 cout << a << endl;||| 45 }||| 46 }||| 47 return 0;||| 48 }||| "	40 if (a[0] != a[n - 1]) {
93	155	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 scanf(""%d"", &T);||| 6 while (T--) {||| 7 long long n, k;||| 8 scanf(""%lld%lld"", &n, &k);||| 9 long long cnt = 1;||| 10 if (n == 1) {||| 11 printf(""0\n"");||| 12 continue;||| 13 }||| 14 for (int i = 1; i <= 64; i++) {||| 15 if (cnt > k) {||| 16 printf(""%lld\n"", i - 1 + (n - cnt - 1) / k + 1);||| 17 break;||| 18 }||| 19 cnt *= 2;||| 20 if (cnt >= n) {||| 21 printf(""%d\n"", i);||| 22 break;||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 scanf(""%d"", &T);||| 6 while (T--) {||| 7 long long n, k;||| 8 scanf(""%lld%lld"", &n, &k);||| 9 long long cnt = 1;||| 10 if (n == 1) {||| 11 printf(""0\n"");||| 12 continue;||| 13 }||| 14 for (int i = 1; i <= 64; i++) {||| 15 if (cnt > k) {||| 16 printf(""%lld\n"", i - 1 + (n - cnt - 1) / k + 1);||| 17 break;||| 18 }||| 19 cnt *= 2;||| 20 if (cnt >= n) {||| 21 printf(""%lld\n"", i);||| 22 break;||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"21 printf(""%d\n"", i);"
93	257	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ii = pair<long long, long long>;||| 4 long long mod = 1e9 + 7;||| 5 void solve() {||| 6 long long n, k;||| 7 cin >> n >> k;||| 8 long long hr;||| 9 for (long long i = 0; i < 64; i++) {||| 10 if ((1LL << i) >= k) {||| 11 hr = i;||| 12 break;||| 13 }||| 14 }||| 15 long long done = (1LL << hr);||| 16 if (n <= done) {||| 17 for (long long i = 0; i <= hr; i++) {||| 18 if ((1LL << i) >= n) {||| 19 cout << i << ""\n"";||| 20 ;||| 21 return;||| 22 }||| 23 }||| 24 } else {||| 25 long long ans = hr;||| 26 ans += ceil((n - done) / (1.0 * k));||| 27 cout << ans << ""\n"";||| 28 ;||| 29 }||| 30 }||| 31 signed main() {||| 32 ios_base::sync_with_stdio(false);||| 33 cin.tie(NULL);||| 34 cout.tie(NULL);||| 35 long long _t;||| 36 cin >> _t;||| 37 while (_t--) solve();||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ii = pair<long long, long long>;||| 4 long long mod = 1e9 + 7;||| 5 void solve() {||| 6 long long n, k;||| 7 cin >> n >> k;||| 8 long long hr;||| 9 for (long long i = 0; i < 64; i++) {||| 10 if ((1LL << i) >= k) {||| 11 hr = i;||| 12 break;||| 13 }||| 14 }||| 15 long long done = (1 << hr);||| 16 if (n <= done) {||| 17 for (long long i = 0; i <= hr; i++) {||| 18 if ((1LL << i) >= n) {||| 19 cout << i << ""\n"";||| 20 ;||| 21 return;||| 22 }||| 23 }||| 24 } else {||| 25 long long ans = hr;||| 26 ans += ceil((n - done) / (1.0 * k));||| 27 cout << ans << ""\n"";||| 28 ;||| 29 }||| 30 }||| 31 signed main() {||| 32 ios_base::sync_with_stdio(false);||| 33 cin.tie(NULL);||| 34 cout.tie(NULL);||| 35 long long _t;||| 36 cin >> _t;||| 37 while (_t--) solve();||| 38 return 0;||| 39 }||| "	15 long long done = (1LL << hr);
93	232	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e18;||| 4 const long long mod = 1e9 + 7;||| 5 signed main() {||| 6 std::ios::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 ;||| 10 long long t;||| 11 cin >> t;||| 12 while (t--) {||| 13 long long n, k;||| 14 cin >> n >> k;||| 15 if (n == 1) {||| 16 cout << ""0\n"";||| 17 } else {||| 18 if (k == 1) {||| 19 cout << n - 1 << ""\n"";||| 20 } else {||| 21 long long a = 0;||| 22 long long cnt = 0;||| 23 while (pow(2, a) < k) {||| 24 cnt++;||| 25 a++;||| 26 }||| 27 long long x = pow(2, a);||| 28 if (n <= x) {||| 29 long long p = 0;||| 30 long long q = 0;||| 31 while (n > 1) {||| 32 n = n - pow(2, q);||| 33 q++;||| 34 p++;||| 35 }||| 36 cout << p << ""\n"";||| 37 } else {||| 38 long long y = n - x;||| 39 long long z = y % k;||| 40 if (z == 0) {||| 41 cout << a + (y / k) << ""\n"";||| 42 } else {||| 43 cout << a + (y / k) + 1 << ""\n"";||| 44 }||| 45 }||| 46 }||| 47 }||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e18;||| 4 const long long mod = 1e9 + 7;||| 5 signed main() {||| 6 std::ios::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 ;||| 10 long long t;||| 11 cin >> t;||| 12 while (t--) {||| 13 long long n, k;||| 14 cin >> n >> k;||| 15 if (n == 1) {||| 16 cout << ""0\n"";||| 17 } else {||| 18 if (k == 1) {||| 19 cout << n - 1 << ""\n"";||| 20 } else {||| 21 long long a = 0;||| 22 long long cnt = 0;||| 23 while (pow(2, a) < k) {||| 24 cnt++;||| 25 a++;||| 26 }||| 27 long long x = pow(2, a);||| 28 if (n <= x) {||| 29 long long p = 0;||| 30 long long q = 0;||| 31 while (n > 1) {||| 32 n = n - pow(2, q);||| 33 q++;||| 34 p++;||| 35 }||| 36 cout << p << ""\n"";||| 37 } else {||| 38 long long y = n - x;||| 39 long long z = y % k;||| 40 if (z == 0) {||| 41 cout << a + (y / x) << ""\n"";||| 42 } else {||| 43 cout << a + (y / x) + 1 << ""\n"";||| 44 }||| 45 }||| 46 }||| 47 }||| 48 }||| 49 return 0;||| 50 }||| "	"41 cout << a + (y / k) << ""\n"";"
94	239	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, k;||| 10 cin >> n >> k;||| 11 vector<long long> v(n);||| 12 for (long long i = 0; i < n; i++) {||| 13 long long x;||| 14 cin >> x;||| 15 v[i] = pow(10LL, x);||| 16 }||| 17 sort(v.begin(), v.end());||| 18 vector<long long> diff;||| 19 for (long long i = 1; i < n; i++) {||| 20 diff.push_back(v[i] / v[i - 1] - 1);||| 21 }||| 22 long long sum = 0, idx = -1, sum1 = 0;||| 23 for (long long i = 0; i < (long long)diff.size(); i++) {||| 24 sum += diff[i];||| 25 if (sum > k) {||| 26 sum1 = sum - diff[i];||| 27 idx = i;||| 28 break;||| 29 }||| 30 }||| 31 if (idx == -1) {||| 32 long long rem = (k - sum + 1) * (*prev(v.end()));||| 33 if ((long long)v.size() == 1) {||| 34 cout << rem << ""\n"";||| 35 } else {||| 36 cout << rem + (*prev(v.end())) - 1 << ""\n"";||| 37 }||| 38 } else {||| 39 long long rem = (k - sum1 + 1) * v[idx];||| 40 cout << rem + v[idx] - 1 << ""\n"";||| 41 }||| 42 }||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, k;||| 10 cin >> n >> k;||| 11 vector<long long> v(n);||| 12 for (long long i = 0; i < n; i++) {||| 13 long long x;||| 14 cin >> x;||| 15 v[i] = pow(10LL, x);||| 16 }||| 17 sort(v.begin(), v.end());||| 18 vector<long long> diff;||| 19 for (long long i = 1; i < n; i++) {||| 20 diff.push_back(v[i] / v[i - 1] - 1);||| 21 }||| 22 long long sum = 0, idx = -1, sum1 = 0;||| 23 for (long long i = 0; i < (long long)diff.size(); i++) {||| 24 sum += diff[i];||| 25 if (sum >= k) {||| 26 sum1 = sum - diff[i];||| 27 idx = i;||| 28 break;||| 29 }||| 30 }||| 31 if (idx == -1) {||| 32 long long rem = (k - sum + 1) * (*prev(v.end()));||| 33 if ((long long)v.size() == 1) {||| 34 cout << rem << ""\n"";||| 35 } else {||| 36 cout << rem + (*prev(v.end())) - 1 << ""\n"";||| 37 }||| 38 } else {||| 39 long long rem = (k - sum1 + 1) * v[idx];||| 40 cout << rem + v[idx] - 1 << ""\n"";||| 41 }||| 42 }||| 43 }||| "	25 if (sum > k) {
94	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int a, long long int b) {||| 4 long long int result;||| 5 if (b == 0) return 1;||| 6 if (b % 2 != 0) {||| 7 result = a;||| 8 result = (result * (power(a, b - 1)));||| 9 } else {||| 10 result = power(a, b / 2);||| 11 result = (result * result);||| 12 }||| 13 return (long long int)result;||| 14 }||| 15 int main() {||| 16 ios_base::sync_with_stdio(false);||| 17 cin.tie(NULL);||| 18 cout.tie(NULL);||| 19 long long int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 long long int n, k;||| 23 cin >> n >> k;||| 24 long long int sum = 0;||| 25 long long int prev = 0;||| 26 vector<long long int> v(n);||| 27 for (auto &i : v) cin >> i;||| 28 bool f = 1;||| 29 for (int i = 0; i < n - 1; i++) {||| 30 long long int temp = power(10, v[i + 1] - v[i]) - 1;||| 31 if (temp <= k) {||| 32 sum += temp * (power(10, v[i]));||| 33 k -= temp;||| 34 } else {||| 35 sum += (k + 1) * (power(10, v[i]));||| 36 f = 0;||| 37 break;||| 38 }||| 39 }||| 40 if (f) {||| 41 sum += (k + 1) * (power(10, v[n - 1]));||| 42 }||| 43 cout << sum << ""\n"";||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int a, long long int b) {||| 4 long long int result;||| 5 if (b == 0) return 1;||| 6 if (b % 2 != 0) {||| 7 result = a;||| 8 result = (result * (power(a, b - 1)));||| 9 } else {||| 10 result = power(a, b / 2);||| 11 result = (result * result);||| 12 }||| 13 return (long long int)result;||| 14 }||| 15 int main() {||| 16 ios_base::sync_with_stdio(false);||| 17 cin.tie(NULL);||| 18 cout.tie(NULL);||| 19 long long int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 long long int n, k;||| 23 cin >> n >> k;||| 24 long long int sum = 0;||| 25 long long int prev = 0;||| 26 vector<long long int> v(n);||| 27 for (auto &i : v) cin >> i;||| 28 bool f = 1;||| 29 for (int i = 0; i < n - 1; i++) {||| 30 long long int temp = power(10, v[i + 1] - v[i]) - 1;||| 31 if (temp < k) {||| 32 sum += temp * (power(10, v[i]));||| 33 k -= temp;||| 34 } else {||| 35 sum += (k + 1) * (power(10, v[i]));||| 36 f = 0;||| 37 break;||| 38 }||| 39 }||| 40 if (f) {||| 41 sum += (k + 1) * (power(10, v[n - 1]));||| 42 }||| 43 cout << sum << ""\n"";||| 44 }||| 45 return 0;||| 46 }||| "	31 if (temp <= k) {
94	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[15], n, k, t;||| 4 vector<long long> ans;||| 5 long long ten[] = {1,       10,       100,       1000,       10000,      100000,||| 6 1000000, 10000000, 100000000, 1000000000, 10000000000};||| 7 signed main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> k;||| 11 k++;||| 12 for (long long i = 1; i <= n; i++) cin >> a[i];||| 13 ans.clear();||| 14 for (long long i = 1; i <= n; i++)||| 15 if (i < n) {||| 16 long long d = a[i + 1] - a[i];||| 17 if (k <= ten[d] - 1) {||| 18 ans.push_back(k);||| 19 break;||| 20 } else {||| 21 ans.push_back(ten[d] - 1);||| 22 k -= ten[d] - 1;||| 23 }||| 24 } else if (i == n)||| 25 ans.push_back(k);||| 26 for (long long i = ans.size() - 1; i >= 0; i--) printf(""%lld"", ans[i]);||| 27 putchar('\n');||| 28 }||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[15], n, k, t;||| 4 vector<long long> ans;||| 5 long long ten[] = {1,       10,       100,       1000,       10000,      100000,||| 6 1000000, 10000000, 100000000, 1000000000, 10000000000};||| 7 signed main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> k;||| 11 k++;||| 12 for (long long i = 1; i <= n; i++) cin >> a[i];||| 13 ans.clear();||| 14 for (long long i = 1; i <= n; i++)||| 15 if (i < n) {||| 16 long long d = a[i + 1] - a[i];||| 17 if (k < ten[d] - 1) {||| 18 ans.push_back(k);||| 19 break;||| 20 } else {||| 21 ans.push_back(ten[d] - 1);||| 22 k -= ten[d] - 1;||| 23 }||| 24 } else if (i == n)||| 25 ans.push_back(k);||| 26 for (long long i = ans.size() - 1; i >= 0; i--) printf(""%lld"", ans[i]);||| 27 putchar('\n');||| 28 }||| 29 }||| "	17 if (k <= ten[d] - 1) {
94	237	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 int a[N];||| 5 long long ksm(long long a, long long b, long long c) {||| 6 int res = 1;||| 7 while (b) {||| 8 if (b & 1) res = (res * a) % c;||| 9 a = (a * a) % c;||| 10 b >>= 1;||| 11 }||| 12 return res % c;||| 13 }||| 14 int read() {||| 15 int n;||| 16 cin >> n;||| 17 return n;||| 18 }||| 19 void solve() {||| 20 int n;||| 21 long long k;||| 22 cin >> n >> k;||| 23 for (int i = 1; i <= n; i++) cin >> a[i];||| 24 int pos = 0;||| 25 vector<long long> v;||| 26 bool f = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 if (i == 1 && a[i] != 0) {||| 29 cout << 0 << '\n';||| 30 return;||| 31 }||| 32 v.push_back(min(ksm(10, a[i] - pos, 1e18) - 1, k));||| 33 if (k + 1 == ksm(10, a[i] - pos, 1e18)) f = true;||| 34 k = max(0ll, k - ksm(10, a[i] - pos, 1e18) + 1);||| 35 if (k == 0) break;||| 36 pos = a[i];||| 37 }||| 38 if (v.size() == 1) {||| 39 cout << v[0] + k + 1 << '\n';||| 40 return;||| 41 }||| 42 if (k != 0) {||| 43 v.push_back(k);||| 44 v.back()++;||| 45 for (int i = v.size() - 1; i > 0; i--) cout << v[i];||| 46 cout << '\n';||| 47 return;||| 48 }||| 49 if (k == 0) {||| 50 if (!f) {||| 51 v.back()++;||| 52 } else||| 53 v.push_back(1);||| 54 }||| 55 for (int i = v.size() - 1; i > 0; i--) cout << v[i];||| 56 cout << '\n';||| 57 }||| 58 signed main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int _;||| 63 cin >> _;||| 64 while (_--) {||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 int a[N];||| 5 long long ksm(long long a, long long b, long long c) {||| 6 int res = 1;||| 7 while (b) {||| 8 if (b & 1) res = (res * a) % c;||| 9 a = (a * a) % c;||| 10 b >>= 1;||| 11 }||| 12 return res % c;||| 13 }||| 14 int read() {||| 15 int n;||| 16 cin >> n;||| 17 return n;||| 18 }||| 19 void solve() {||| 20 int n;||| 21 long long k;||| 22 cin >> n >> k;||| 23 for (int i = 1; i <= n; i++) cin >> a[i];||| 24 int pos = 0;||| 25 vector<long long> v;||| 26 bool f = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 if (i == 1 && a[i] != 0) {||| 29 cout << 0 << '\n';||| 30 return;||| 31 }||| 32 v.push_back(min(ksm(10, a[i] - pos, 1e18) - 1, k));||| 33 if (k + 1 == ksm(10, a[i] - pos, 1e18)) f = true;||| 34 k = max(0ll, k - ksm(10, a[i] - pos, 1e18) + 1);||| 35 if (k == 0) break;||| 36 pos = a[i];||| 37 }||| 38 if (v.size() == 1) {||| 39 cout << v[0] + 1 << '\n';||| 40 return;||| 41 }||| 42 if (k != 0) {||| 43 v.push_back(k);||| 44 v.back()++;||| 45 for (int i = v.size() - 1; i > 0; i--) cout << v[i];||| 46 cout << '\n';||| 47 return;||| 48 }||| 49 if (k == 0) {||| 50 if (!f) {||| 51 v.back()++;||| 52 } else||| 53 v.push_back(1);||| 54 }||| 55 for (int i = v.size() - 1; i > 0; i--) cout << v[i];||| 56 cout << '\n';||| 57 }||| 58 signed main() {||| 59 ios_base::sync_with_stdio(false);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 int _;||| 63 cin >> _;||| 64 while (_--) {||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| 	39 cout << v[0] + k + 1 << '\n';
94	2	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int n, k;||| 5 int a[12];||| 6 long long fastpow(long long a, long long b) {||| 7 long long sum = 1;||| 8 while (b) {||| 9 if (b & 1) sum *= a;||| 10 a *= a;||| 11 b >>= 1;||| 12 }||| 13 return sum;||| 14 }||| 15 int main() {||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 cin >> n >> k;||| 20 long long sum = 0;||| 21 for (int i = 0; i < n; i++) cin >> a[i];||| 22 int flag = 0;||| 23 for (int i = 0; i < n - 1; i++) {||| 24 long long temp = fastpow(10, a[i + 1] - a[i]) - 1;||| 25 if (k - temp < 0) {||| 26 sum += (k + 1) * fastpow(10, a[i]);||| 27 flag = 1;||| 28 break;||| 29 } else {||| 30 sum += temp * fastpow(10, a[i]);||| 31 k -= temp;||| 32 }||| 33 }||| 34 if (flag == 1)||| 35 cout << sum << endl;||| 36 else {||| 37 sum += (k + 1) * fastpow(10, a[n - 1]);||| 38 cout << sum << endl;||| 39 }||| 40 }||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int n, k;||| 5 int a[12];||| 6 long long fastpow(long long a, long long b) {||| 7 long long sum = 1;||| 8 while (b) {||| 9 if (b & 1) sum *= a;||| 10 a *= a;||| 11 b >>= 1;||| 12 }||| 13 return sum;||| 14 }||| 15 int main() {||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 cin >> n >> k;||| 20 long long sum = 0;||| 21 for (int i = 0; i < n; i++) cin >> a[i];||| 22 int flag = 0;||| 23 for (int i = 0; i < n - 1; i++) {||| 24 long long temp = fastpow(10, a[i + 1] - a[i]) - 1;||| 25 if (k - temp < 0) {||| 26 sum += (k + 1) * fastpow(10, a[i]);||| 27 flag = 1;||| 28 } else {||| 29 sum += temp * fastpow(10, a[i]);||| 30 k -= temp;||| 31 }||| 32 }||| 33 if (flag == 1)||| 34 cout << sum << endl;||| 35 else {||| 36 sum += (k + 1) * fastpow(10, a[n - 1]);||| 37 cout << sum << endl;||| 38 }||| 39 }||| 40 }||| 	28 break;
94	82	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 void yes() { cout << ""YES"" << endl; }||| 5 void no() { cout << ""NO"" << endl; }||| 6 bool compare(pair<long long int, pair<long long int, long long int> > &a,||| 7 pair<long long int, pair<long long int, long long int> > &b) {||| 8 if (a.first == b.first) {||| 9 return a.second.second <= b.second.second;||| 10 }||| 11 return a.first < b.first;||| 12 }||| 13 bool isPrime(long long int n) {||| 14 for (int i = 2; i <= sqrt(n); i++) {||| 15 if (n % i == 0) {||| 16 return 0;||| 17 }||| 18 }||| 19 return 1;||| 20 }||| 21 long long int solve() {||| 22 long long int n, k, m;||| 23 cin >> n >> k;||| 24 string s, t = """", r;||| 25 long long int count = 0, prev = 0, cnt = 0, ans = 0, curr = 0;||| 26 bool turn = 1, win = 0, flag = 1;||| 27 vector<long long int> v(n, 0);||| 28 for (int i = 0; i < n; i++) cin >> v[i];||| 29 if (v[0] != 0) {||| 30 ans = 1;||| 31 } else if (n == 1) {||| 32 ans = k + 1;||| 33 } else {||| 34 count = k;||| 35 for (int i = 1; i < n; i++) {||| 36 cnt = (long long int)pow((long long int)10, v[i]) -||| 37 (long long int)pow((long long int)10, v[i - 1]);||| 38 if (count * (long long int)pow((long long int)10, v[i - 1]) < cnt) {||| 39 ans += (count + 1) * (long long int)pow((long long int)10, v[i - 1]);||| 40 count = -1;||| 41 break;||| 42 } else {||| 43 ans += cnt;||| 44 count -= cnt / (long long int)pow((long long int)10, v[i - 1]);||| 45 }||| 46 }||| 47 ans += (count + 1) * (long long int)pow((long long int)10, v[n - 1]);||| 48 }||| 49 cout << ans << endl;||| 50 return ans;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(NULL);||| 55 int test = 1;||| 56 cin >> test;||| 57 for (int i = 0; i < test; i++) {||| 58 solve();||| 59 }||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 void yes() { cout << ""YES"" << endl; }||| 5 void no() { cout << ""NO"" << endl; }||| 6 bool compare(pair<long long int, pair<long long int, long long int> > &a,||| 7 pair<long long int, pair<long long int, long long int> > &b) {||| 8 if (a.first == b.first) {||| 9 return a.second.second <= b.second.second;||| 10 }||| 11 return a.first < b.first;||| 12 }||| 13 bool isPrime(long long int n) {||| 14 for (int i = 2; i <= sqrt(n); i++) {||| 15 if (n % i == 0) {||| 16 return 0;||| 17 }||| 18 }||| 19 return 1;||| 20 }||| 21 long long int solve() {||| 22 long long int n, k, m;||| 23 cin >> n >> k;||| 24 string s, t = """", r;||| 25 long long int count = 0, prev = 0, cnt = 0, ans = 0, curr = 0;||| 26 bool turn = 1, win = 0, flag = 1;||| 27 vector<long long int> v(n, 0);||| 28 for (int i = 0; i < n; i++) cin >> v[i];||| 29 if (v[0] != 0) {||| 30 ans = 1;||| 31 } else if (n == 1) {||| 32 ans = k + 1;||| 33 } else {||| 34 count = k;||| 35 for (int i = 1; i < n; i++) {||| 36 cnt = (long long int)pow((long long int)10, v[i]) -||| 37 (long long int)pow((long long int)10, v[i - 1]);||| 38 if (count * (long long int)pow((long long int)10, v[i - 1]) <= cnt) {||| 39 ans += (count + 1) * (long long int)pow((long long int)10, v[i - 1]);||| 40 count = -1;||| 41 break;||| 42 } else {||| 43 ans += cnt;||| 44 count -= cnt / (long long int)pow((long long int)10, v[i - 1]);||| 45 }||| 46 }||| 47 ans += (count + 1) * (long long int)pow((long long int)10, v[n - 1]);||| 48 }||| 49 cout << ans << endl;||| 50 return ans;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(NULL);||| 55 int test = 1;||| 56 cin >> test;||| 57 for (int i = 0; i < test; i++) {||| 58 solve();||| 59 }||| 60 }||| "	38 if (count * (long long int)pow((long long int)10, v[i - 1]) < cnt) {
94	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, aux;||| 4 long long int n, k, arr[12];||| 5 long long int sig[12], ans;||| 6 long long int pot(int n) {||| 7 int aux = 1;||| 8 for (int i = 1; i <= n; i++) {||| 9 aux *= 10;||| 10 }||| 11 return aux;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 cin >> t;||| 18 while (t-- > 0) {||| 19 cin >> n >> k;||| 20 ans = 0;||| 21 for (int i = 1; i <= n; i++) {||| 22 cin >> aux;||| 23 arr[i] = pot(aux);||| 24 }||| 25 for (int i = 1; i < n; i++) {||| 26 sig[i] = arr[i + 1] / arr[i];||| 27 sig[i]--;||| 28 }||| 29 k++;||| 30 for (int i = 1; i < n && k > 0; i++) {||| 31 if (sig[i] < k) {||| 32 k -= sig[i];||| 33 ans += arr[i + 1] - arr[i];||| 34 } else {||| 35 ans += k * arr[i];||| 36 k = 0;||| 37 }||| 38 }||| 39 if (k > 0) {||| 40 ans += arr[n] * k;||| 41 }||| 42 cout << ans << ""\n"";||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, aux;||| 4 long long int n, k, arr[12];||| 5 long long int sig[12], ans;||| 6 long long int pot(int n) {||| 7 int aux = 1;||| 8 for (int i = 1; i <= n; i++) {||| 9 aux = 10;||| 10 }||| 11 return aux;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0);||| 16 cout.tie(0);||| 17 cin >> t;||| 18 while (t-- > 0) {||| 19 cin >> n >> k;||| 20 ans = 0;||| 21 for (int i = 1; i <= n; i++) {||| 22 cin >> aux;||| 23 arr[i] = pot(aux);||| 24 }||| 25 for (int i = 1; i < n; i++) {||| 26 sig[i] = arr[i + 1] / arr[i];||| 27 sig[i]--;||| 28 }||| 29 k++;||| 30 for (int i = 1; i < n && k > 0; i++) {||| 31 if (sig[i] < k) {||| 32 k -= sig[i];||| 33 ans += arr[i + 1] - arr[i];||| 34 } else {||| 35 ans += k * arr[i];||| 36 k = 0;||| 37 }||| 38 }||| 39 if (k > 0) {||| 40 ans += arr[n] * k;||| 41 }||| 42 cout << ans << ""\n"";||| 43 }||| 44 return 0;||| 45 }||| "	9 aux *= 10;
94	124	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mo = 1e9 + 7;||| 4 long long int a[100];||| 5 long long fastPower(long long base, long long power) {||| 6 long long result = 1;||| 7 while (power > 0) {||| 8 if (power & 1) {||| 9 result = result * base;||| 10 }||| 11 power >>= 1;||| 12 base = (base * base);||| 13 }||| 14 return result;||| 15 }||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 unsigned long long int n, k, ans = 0;||| 21 cin >> n >> k;||| 22 for (int i = 1; i <= n; i++) {||| 23 cin >> a[i];||| 24 }||| 25 bool flag = false;||| 26 for (int i = 1; i <= n; i++) {||| 27 if (i == 1) {||| 28 if (a[i] != 0) {||| 29 ans = 1;||| 30 flag = true;||| 31 break;||| 32 }||| 33 } else {||| 34 if (k < fastPower(10ll, a[i] - a[i - 1]) - 1) {||| 35 ans += (k + 1) * fastPower(10ll, a[i - 1]);||| 36 flag = true;||| 37 break;||| 38 } else {||| 39 for (int j = a[i - 1]; j < a[i]; j++) {||| 40 ans += fastPower(10ll, j) * 9;||| 41 }||| 42 k = k - fastPower(10ll, a[i] - a[i - 1]) + 1;||| 43 }||| 44 }||| 45 }||| 46 if (flag) {||| 47 cout << ans << ""\n"";||| 48 ;||| 49 } else {||| 50 ans += (k + 1) * fastPower(10ll, a[n]);||| 51 cout << ans << ""\n"";||| 52 ;||| 53 }||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mo = 1e9 + 7;||| 4 long long int a[100];||| 5 long long fastPower(long long base, long long power) {||| 6 long long result = 1;||| 7 while (power > 0) {||| 8 if (power & 1) {||| 9 result = result * base;||| 10 }||| 11 power >>= 1;||| 12 base = (base * base);||| 13 }||| 14 return result;||| 15 }||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 unsigned long long int n, k, ans = 0;||| 21 cin >> n >> k;||| 22 for (int i = 1; i <= n; i++) {||| 23 cin >> a[i];||| 24 }||| 25 bool flag = false;||| 26 for (int i = 1; i <= n; i++) {||| 27 if (i == 1) {||| 28 if (a[i] != 0) {||| 29 ans = 1;||| 30 flag = true;||| 31 break;||| 32 }||| 33 } else {||| 34 if (k < fastPower(10ll, a[i] - a[i - 1])) {||| 35 ans += (k + 1) * fastPower(10ll, a[i - 1]);||| 36 flag = true;||| 37 break;||| 38 } else {||| 39 for (int j = a[i - 1]; j < a[i]; j++) {||| 40 ans += fastPower(10ll, j) * 9;||| 41 }||| 42 k = k - fastPower(10ll, a[i] - a[i - 1]) + 1;||| 43 }||| 44 }||| 45 }||| 46 if (flag) {||| 47 cout << ans << ""\n"";||| 48 ;||| 49 } else {||| 50 ans += (k + 1) * fastPower(10ll, a[n]);||| 51 cout << ans << ""\n"";||| 52 ;||| 53 }||| 54 }||| 55 return 0;||| 56 }||| "	34 if (k < fastPower(10ll, a[i] - a[i - 1]) - 1) {
94	168	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int long long power(int long long n) {||| 4 string s = ""1"";||| 5 for (int i = 0; i < n; i++) {||| 6 s += ""0"";||| 7 }||| 8 return stoll(s);||| 9 }||| 10 int main() {||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 int long long n, k;||| 15 cin >> n >> k;||| 16 k++;||| 17 int arr[n];||| 18 for (int i = 0; i < n; i++) cin >> arr[i];||| 19 if (k <= 9) {||| 20 cout << k << endl;||| 21 continue;||| 22 }||| 23 int idx = -1;||| 24 int long long result = 0;||| 25 for (int i = 1; i < n; i++) {||| 26 if (k + 1 > power(arr[i]) / power(arr[i - 1])) {||| 27 k -= (power(arr[i]) / power(arr[i - 1]) - 1);||| 28 result += ((power(arr[i]) / power(arr[i - 1]) - 1) * power(arr[i - 1]));||| 29 } else {||| 30 idx = i;||| 31 break;||| 32 }||| 33 }||| 34 if (idx == -1) {||| 35 result += (k * power(arr[n - 1]));||| 36 } else {||| 37 result += (k * power(arr[idx - 1]));||| 38 }||| 39 cout << result << endl;||| 40 }||| 41 return 0;||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int long long power(int long long n) {||| 4 string s = ""1"";||| 5 for (int i = 0; i < n; i++) {||| 6 s += ""0"";||| 7 }||| 8 return stoll(s);||| 9 }||| 10 int main() {||| 11 int t;||| 12 cin >> t;||| 13 while (t--) {||| 14 int long long n, k;||| 15 cin >> n >> k;||| 16 k++;||| 17 int arr[n];||| 18 for (int i = 0; i < n; i++) cin >> arr[i];||| 19 if (k <= 9) {||| 20 cout << k << endl;||| 21 }||| 22 int idx = -1;||| 23 int long long result = 0;||| 24 for (int i = 1; i < n; i++) {||| 25 if (k + 1 > power(arr[i]) / power(arr[i - 1])) {||| 26 k -= (power(arr[i]) / power(arr[i - 1]) - 1);||| 27 result += ((power(arr[i]) / power(arr[i - 1]) - 1) * power(arr[i - 1]));||| 28 } else {||| 29 idx = i;||| 30 break;||| 31 }||| 32 }||| 33 if (idx == -1) {||| 34 result += (k * power(arr[n - 1]));||| 35 } else {||| 36 result += (k * power(arr[idx - 1]));||| 37 }||| 38 cout << result << endl;||| 39 }||| 40 return 0;||| 41 }||| "	21 continue;
95	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 int main() {||| 5 int T;||| 6 cin >> T;||| 7 while (T--) {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 vector<vector<int>> a(n, vector<int>(m));||| 11 for (int i = 0; i < n; i++)||| 12 for (int j = 0; j < m; j++) scanf(""%d"", &a[i][j]);||| 13 vector<int> ord(n);||| 14 for (int i = 0; i < n; i++) ord[i] = i;||| 15 sort(ord.begin(), ord.end(),||| 16 [&a](int x, int y) { return a[x][0] > a[y][0]; });||| 17 vector<vector<int>> maxl(n, vector<int>(m, -INF));||| 18 vector<vector<int>> minr(n, vector<int>(m, INF));||| 19 for (int i = n - 1; i >= 0; i--)||| 20 for (int j = 0; j < m; j++) {||| 21 maxl[i][j] = a[ord[i]][j];||| 22 if (i < n - 1) maxl[i][j] = max(maxl[i][j], maxl[i + 1][j]);||| 23 if (j > 0) maxl[i][j] = max(maxl[i][j], maxl[i][j - 1]);||| 24 }||| 25 for (int i = n - 1; i >= 0; i--)||| 26 for (int j = m - 1; j >= 0; j--) {||| 27 minr[i][j] = a[ord[i]][j];||| 28 if (i < n - 1) minr[i][j] = min(minr[i][j], minr[i + 1][j]);||| 29 if (j < m - 1) minr[i][j] = min(minr[i][j], minr[i][j + 1]);||| 30 }||| 31 vector<int> minl(m, INF), maxr(m, -INF);||| 32 pair<int, int> ans = {-1, -1};||| 33 for (int i = 0; i < n - 1; i++) {||| 34 for (int j = 0; j < m; j++) {||| 35 minl[j] = min(minl[j], a[ord[i]][j]);||| 36 if (j > 0) minl[j] = min(minl[j], minl[j - 1]);||| 37 }||| 38 for (int j = m - 1; j >= 0; j--) {||| 39 maxr[j] = max(maxr[j], a[ord[i]][j]);||| 40 if (j < m - 1) maxr[j] = max(maxr[j], maxr[j + 1]);||| 41 }||| 42 for (int j = 0; j < m - 1; j++)||| 43 if (minl[j] > maxl[i + 1][j] && maxr[j + 1] < minr[i + 1][j + 1])||| 44 ans = {i, j};||| 45 }||| 46 if (ans.first == -1) {||| 47 puts(""NO"");||| 48 continue;||| 49 }||| 50 puts(""YES"");||| 51 string res(n, ' ');||| 52 for (int i = 0; i < n; i++) res[ord[i]] = i <= ans.first ? 'R' : 'B';||| 53 printf(""%s %d\n"", res.c_str(), ans.second + 1);||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 int main() {||| 5 int T;||| 6 cin >> T;||| 7 while (T--) {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 vector<vector<int>> a(n, vector<int>(m));||| 11 for (int i = 0; i < n; i++)||| 12 for (int j = 0; j < m; j++) scanf(""%d"", &a[i][j]);||| 13 vector<int> ord(n);||| 14 for (int i = 0; i < n; i++) ord[i] = i;||| 15 sort(ord.begin(), ord.end(),||| 16 [&a](int x, int y) { return a[x][0] > a[y][0]; });||| 17 vector<vector<int>> maxl(n, vector<int>(m, -INF));||| 18 vector<vector<int>> minr(n, vector<int>(m, INF));||| 19 for (int i = n - 1; i >= 0; i--)||| 20 for (int j = 0; j < m; j++) {||| 21 maxl[i][j] = a[ord[i]][j];||| 22 if (i < n - 1) maxl[i][j] = max(maxl[i][j], maxl[i + 1][j]);||| 23 if (j > 0) maxl[i][j] = max(maxl[i][j], maxl[i][j + 1]);||| 24 }||| 25 for (int i = n - 1; i >= 0; i--)||| 26 for (int j = m - 1; j >= 0; j--) {||| 27 minr[i][j] = a[ord[i]][j];||| 28 if (i < n - 1) minr[i][j] = min(minr[i][j], minr[i + 1][j]);||| 29 if (j < m - 1) minr[i][j] = min(minr[i][j], minr[i][j + 1]);||| 30 }||| 31 vector<int> minl(m, INF), maxr(m, -INF);||| 32 pair<int, int> ans = {-1, -1};||| 33 for (int i = 0; i < n - 1; i++) {||| 34 for (int j = 0; j < m; j++) {||| 35 minl[j] = min(minl[j], a[ord[i]][j]);||| 36 if (j > 0) minl[j] = min(minl[j], minl[j - 1]);||| 37 }||| 38 for (int j = m - 1; j >= 0; j--) {||| 39 maxr[j] = max(maxr[j], a[ord[i]][j]);||| 40 if (j < m - 1) maxr[j] = max(maxr[j], maxr[j + 1]);||| 41 }||| 42 for (int j = 0; j < m - 1; j++)||| 43 if (minl[j] > maxl[i + 1][j] && maxr[j + 1] < minr[i + 1][j + 1])||| 44 ans = {i, j};||| 45 }||| 46 if (ans.first == -1) {||| 47 puts(""NO"");||| 48 continue;||| 49 }||| 50 puts(""YES"");||| 51 string res(n, ' ');||| 52 for (int i = 0; i < n; i++) res[ord[i]] = i <= ans.first ? 'R' : 'B';||| 53 printf(""%s %d\n"", res.c_str(), ans.second + 1);||| 54 }||| 55 }||| "	23 if (j > 0) maxl[i][j] = max(maxl[i][j], maxl[i][j - 1]);
95	72	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using li = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 const int INF = 1e9 + 13;||| 7 const li INF64 = 1e18 + 13;||| 8 const int N = 500 + 13;||| 9 const int M = 998244353;||| 10 const ld eps = 1e-6;||| 11 const int B = 300;||| 12 const int K = 400;||| 13 const int LOGN = 20;||| 14 void solve() {||| 15 int n, m;||| 16 cin >> n >> m;||| 17 vector<vector<int>> a(n, vector<int>(m));||| 18 for (int i = 0; i < n; i++) {||| 19 for (int j = 0; j < m; j++) cin >> a[i][j];||| 20 }||| 21 vector<pii> ord(n);||| 22 for (int i = 0; i < n; i++) {||| 23 ord[i] = {a[i][0], i};||| 24 }||| 25 sort(ord.begin(), ord.end());||| 26 vector<vector<int>> b(n);||| 27 for (int i = 0; i < n; i++) {||| 28 b[i] = a[ord[i].second];||| 29 }||| 30 vector<vector<int>> upmx(n, vector<int>(m, 0)), upmn(n, vector<int>(m, INF)),||| 31 dnmx(n, vector<int>(m, 0)), dnmn(n, vector<int>(m, INF));||| 32 for (int i = 0; i < n; i++) {||| 33 for (int j = 0; j < m; j++) {||| 34 upmx[i][j] = (i == 0 ? b[i][j] : max(b[i][j], upmx[i - 1][j]));||| 35 upmn[i][j] = (i == 0 ? b[i][j] : min(b[i][j], upmn[i - 1][j]));||| 36 }||| 37 }||| 38 for (int i = n - 1; i >= 0; i--) {||| 39 for (int j = 0; j < m; j++) {||| 40 dnmx[i][j] = (i == n - 1 ? b[i][j] : max(b[i][j], dnmx[i + 1][j]));||| 41 dnmn[i][j] = (i == n - 1 ? b[i][j] : min(b[i][j], dnmn[i + 1][j]));||| 42 }||| 43 }||| 44 for (int i = 0; i < n - 1; i++) {||| 45 if (b[i][0] == b[i + 1][0]) continue;||| 46 vector<int> prmx(m, 0), prmn(m, INF), sufmx(m, 0), sufmn(m, INF);||| 47 prmx[0] = upmx[i][0];||| 48 prmn[0] = dnmn[i + 1][0];||| 49 for (int j = 1; j < m; j++) {||| 50 prmx[j] = max(prmx[j - 1], upmx[i][j]);||| 51 prmn[j] = min(prmn[j - 1], dnmn[i + 1][j]);||| 52 }||| 53 sufmx[m - 1] = dnmx[i + 1][m - 1];||| 54 sufmn[m - 1] = upmn[i][m - 1];||| 55 for (int j = m - 2; j >= 0; j--) {||| 56 sufmx[j] = max(sufmx[j + 1], dnmx[i + 1][j]);||| 57 sufmn[j] = min(sufmn[j + 1], upmn[i][j]);||| 58 }||| 59 for (int j = 0; j < m - 1; j++) {||| 60 if (prmx[j] < prmn[j] && sufmx[j + 1] < sufmn[j + 1]) {||| 61 cout << ""YES"" << '\n';||| 62 vector<char> res(n);||| 63 for (int k = 0; k < n; k++) {||| 64 res[ord[k].second] = (k <= i ? 'B' : 'R');||| 65 }||| 66 for (auto c : res) cout << c;||| 67 cout << ' ' << j + 1 << '\n';||| 68 return;||| 69 }||| 70 }||| 71 }||| 72 cout << ""NO"" << '\n';||| 73 }||| 74 signed main() {||| 75 ios_base::sync_with_stdio(0);||| 76 cin.tie(0);||| 77 int t = 1;||| 78 cin >> t;||| 79 while (t--) solve();||| 80 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using li = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 const int INF = 1e9 + 13;||| 7 const li INF64 = 1e18 + 13;||| 8 const int N = 500 + 13;||| 9 const int M = 998244353;||| 10 const ld eps = 1e-6;||| 11 const int B = 300;||| 12 const int K = 400;||| 13 const int LOGN = 20;||| 14 void solve() {||| 15 int n, m;||| 16 cin >> n >> m;||| 17 vector<vector<int>> a(n, vector<int>(m));||| 18 for (int i = 0; i < n; i++) {||| 19 for (int j = 0; j < m; j++) cin >> a[i][j];||| 20 }||| 21 vector<pii> ord(n);||| 22 for (int i = 0; i < n; i++) {||| 23 ord[i] = {a[i][0], i};||| 24 }||| 25 sort(ord.begin(), ord.end());||| 26 vector<vector<int>> b(n);||| 27 for (int i = 0; i < n; i++) {||| 28 b[i] = a[ord[i].second];||| 29 }||| 30 vector<vector<int>> upmx(n, vector<int>(m, 0)), upmn(n, vector<int>(m, INF)),||| 31 dnmx(n, vector<int>(m, 0)), dnmn(n, vector<int>(m, INF));||| 32 for (int i = 0; i < n; i++) {||| 33 for (int j = 0; j < m; j++) {||| 34 upmx[i][j] = (i == 0 ? b[i][j] : max(b[i][j], upmx[i - 1][j]));||| 35 upmn[i][j] = (i == 0 ? b[i][j] : min(b[i][j], upmn[i - 1][j]));||| 36 }||| 37 }||| 38 for (int i = n - 1; i >= 0; i--) {||| 39 for (int j = 0; j < m; j++) {||| 40 dnmx[i][j] = (i == n - 1 ? b[i][j] : max(b[i][j], dnmx[i + 1][j]));||| 41 dnmx[i][j] = (i == n - 1 ? b[i][j] : min(b[i][j], dnmn[i + 1][j]));||| 42 }||| 43 }||| 44 for (int i = 0; i < n - 1; i++) {||| 45 if (b[i][0] == b[i + 1][0]) continue;||| 46 vector<int> prmx(m, 0), prmn(m, INF), sufmx(m, 0), sufmn(m, INF);||| 47 prmx[0] = upmx[i][0];||| 48 prmn[0] = dnmn[i + 1][0];||| 49 for (int j = 1; j < m; j++) {||| 50 prmx[j] = max(prmx[j - 1], upmx[i][j]);||| 51 prmn[j] = min(prmn[j - 1], dnmn[i + 1][j]);||| 52 }||| 53 sufmx[m - 1] = dnmx[i + 1][m - 1];||| 54 sufmn[m - 1] = upmn[i][m - 1];||| 55 for (int j = m - 2; j >= 0; j--) {||| 56 sufmx[j] = max(sufmx[j + 1], dnmx[i + 1][j]);||| 57 sufmn[j] = min(sufmn[j + 1], upmn[i][j]);||| 58 }||| 59 for (int j = 0; j < m - 1; j++) {||| 60 if (prmx[j] < prmn[j] && sufmx[j + 1] < sufmn[j + 1]) {||| 61 cout << ""YES"" << '\n';||| 62 vector<char> res(n);||| 63 for (int k = 0; k < n; k++) {||| 64 res[ord[k].second] = (k <= i ? 'B' : 'R');||| 65 }||| 66 for (auto c : res) cout << c;||| 67 cout << ' ' << j + 1 << '\n';||| 68 return;||| 69 }||| 70 }||| 71 }||| 72 cout << ""NO"" << '\n';||| 73 }||| 74 signed main() {||| 75 ios_base::sync_with_stdio(0);||| 76 cin.tie(0);||| 77 int t = 1;||| 78 cin >> t;||| 79 while (t--) solve();||| 80 }||| "	41 dnmn[i][j] = (i == n - 1 ? b[i][j] : min(b[i][j], dnmn[i + 1][j]));
96	52	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 555, mod = 998244353;||| 4 long long k, T, t, n, m, ans, cnt;||| 5 long long f[N][N], dp[N][N];||| 6 bool vis[N];||| 7 priority_queue<long long, vector<long long>, greater<long long> > q;||| 8 long long ksm(long long a, long long b) {||| 9 long long res = 1;||| 10 while (b) {||| 11 if (b % 2) res = res * a % mod;||| 12 b >>= 1;||| 13 a = a * a % mod;||| 14 }||| 15 return res % mod;||| 16 }||| 17 void init() {||| 18 f[0][0] = 1;||| 19 for (long long i = 1; i < N; i++) {||| 20 f[i][0] = 1;||| 21 for (long long j = 1; j <= i; j++)||| 22 f[i][j] = (f[i - 1][j] + f[i - 1][j - 1]) % mod;||| 23 }||| 24 }||| 25 signed main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(0), cout.tie(0);||| 28 init();||| 29 cin >> n >> m;||| 30 for (long long i = 2; i <= n; i++)||| 31 for (long long j = 1; j <= m; j++) {||| 32 if (i - 1 >= j)||| 33 dp[i][j] = ksm(j, i);||| 34 else {||| 35 for (long long k = 2; k <= i; k++)||| 36 (dp[i][j] += dp[k][j - i + 1] * ksm(i - 1, i - k) % mod * f[i][k]) %=||| 37 mod;||| 38 dp[i][j] = (dp[i][j] + ksm(i - 1, i)) % mod;||| 39 }||| 40 }||| 41 cout << dp[n][m] << '\n';||| 42 return 0;||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 555, mod = 998244353;||| 4 long long k, T, t, n, m, ans, cnt;||| 5 long long f[N][N], dp[N][N];||| 6 bool vis[N];||| 7 priority_queue<long long, vector<long long>, greater<long long> > q;||| 8 long long ksm(long long a, long long b) {||| 9 long long res = 1;||| 10 while (b) {||| 11 if (b % 2) res = res * a % mod;||| 12 b >>= 1;||| 13 a = a * a % mod;||| 14 }||| 15 return res % mod;||| 16 }||| 17 void init() {||| 18 f[0][0] = 1;||| 19 for (long long i = 1; i < N; i++) {||| 20 f[i][0] = 1;||| 21 for (long long j = 1; j <= i; j++)||| 22 f[i][j] = (f[i - 1][j] + f[i - 1][j - 1]) % mod;||| 23 }||| 24 }||| 25 signed main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(0), cout.tie(0);||| 28 init();||| 29 cin >> n >> m;||| 30 for (long long i = 2; i <= n; i++)||| 31 for (long long j = 1; j <= m; j++) {||| 32 if (i - 1 >= j)||| 33 dp[i][j] = ksm(j, i);||| 34 else {||| 35 for (long long k = 2; k <= i; k++)||| 36 (dp[i][j] += dp[k][j - i + 1] * ksm(i - 1, i - k) % mod * f[i][k]) %=||| 37 mod;||| 38 dp[i][j] = dp[i][j] + ksm(i - 1, i) % mod;||| 39 }||| 40 }||| 41 cout << dp[n][m] << '\n';||| 42 return 0;||| 43 }||| 	38 dp[i][j] = (dp[i][j] + ksm(i - 1, i)) % mod;
96	42	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 long long dp[509][509], C[509][509];||| 23 int n, x;||| 24 void init() {||| 25 for (int i = 0; i <= 500; i++) {||| 26 C[i][0] = 1;||| 27 for (int j = 1; j <= i; j++) {||| 28 C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 scanf(""%d%d"", &n, &x);||| 34 init();||| 35 for (int i = 2; i <= n; i++) {||| 36 for (int j = 1; j <= x; j++) {||| 37 if (j < i) {||| 38 dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod);||| 39 dp[i][j] = (dp[i][j] % mod + mod) % mod;||| 40 } else {||| 41 for (int k = 2; k <= i; k++) {||| 42 dp[i][j] +=||| 43 dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod;||| 44 dp[i][j] %= mod;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 long long ans = 0;||| 50 for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod;||| 51 printf(""%lld\n"", ans);||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 long long dp[509][509], C[509][509];||| 23 int n, x;||| 24 void init() {||| 25 for (int i = 1; i <= 500; i++) {||| 26 C[i][0] = 1;||| 27 for (int j = 1; j <= i; j++) {||| 28 C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 scanf(""%d%d"", &n, &x);||| 34 init();||| 35 for (int i = 2; i <= n; i++) {||| 36 for (int j = 1; j <= x; j++) {||| 37 if (j < i) {||| 38 dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod);||| 39 dp[i][j] = (dp[i][j] % mod + mod) % mod;||| 40 } else {||| 41 for (int k = 2; k <= i; k++) {||| 42 dp[i][j] +=||| 43 dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod;||| 44 dp[i][j] %= mod;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 long long ans = 0;||| 50 for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod;||| 51 printf(""%lld\n"", ans);||| 52 }||| "	25 for (int i = 0; i <= 500; i++) {
96	65	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 long long dp[509][509], C[509][509];||| 23 int n, x;||| 24 void init() {||| 25 for (int i = 0; i <= 500; i++) {||| 26 C[i][0] = 1;||| 27 for (int j = 1; j <= i; j++) {||| 28 C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 scanf(""%d%d"", &n, &x);||| 34 init();||| 35 for (int i = 2; i <= n; i++) {||| 36 for (int j = 1; j <= x; j++) {||| 37 if (j < i) {||| 38 dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod);||| 39 dp[i][j] = (dp[i][j] % mod + mod) % mod;||| 40 } else {||| 41 for (int k = 2; k <= i; k++) {||| 42 dp[i][j] +=||| 43 dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod;||| 44 dp[i][j] %= mod;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 long long ans = 0;||| 50 for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod;||| 51 printf(""%lld\n"", ans);||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 long long dp[509][509], C[509][509];||| 23 int n, x;||| 24 void init() {||| 25 for (int i = 0; i <= 500; i++) {||| 26 C[i][0] = 1;||| 27 for (int j = 1; j <= 500; j++) {||| 28 C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 scanf(""%d%d"", &n, &x);||| 34 init();||| 35 for (int i = 2; i <= n; i++) {||| 36 for (int j = 1; j <= x; j++) {||| 37 if (j < i) {||| 38 dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod);||| 39 dp[i][j] = (dp[i][j] % mod + mod) % mod;||| 40 } else {||| 41 for (int k = 2; k <= i; k++) {||| 42 dp[i][j] +=||| 43 dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod;||| 44 dp[i][j] %= mod;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 long long ans = 0;||| 50 for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod;||| 51 printf(""%lld\n"", ans);||| 52 }||| "	27 for (int j = 1; j <= i; j++) {
96	34	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 int p[505][505], f[505][505], c[505][505];||| 5 int main() {||| 6 for (int i = 0; i <= 500; i++) {||| 7 p[i][0] = 1;||| 8 for (int j = 1; j <= 500; j++) p[i][j] = 1ll * p[i][j - 1] * i % mod;||| 9 }||| 10 for (int i = 0; i <= 500; i++) {||| 11 c[i][0] = 1;||| 12 for (int j = 1; j <= i; j++)||| 13 c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;||| 14 }||| 15 int n, x;||| 16 cin >> n >> x;||| 17 for (int i = 1; i <= x; i++) f[0][i] = 1;||| 18 for (int i = 2; i <= n; i++)||| 19 for (int j = 1; j <= x; j++)||| 20 if (i > j)||| 21 f[i][j] = p[j][i];||| 22 else||| 23 for (int k = 0; k <= i; k++)||| 24 f[i][j] = (f[i][j] + 1ll * c[i][k] * p[i - 1][k] % mod *||| 25 f[i - k][j - i + 1] % mod) %||| 26 mod;||| 27 cout << f[n][x];||| 28 return 0;||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 int p[505][505], f[505][505], c[505][505];||| 5 int main() {||| 6 for (int i = 0; i <= 500; i++) {||| 7 p[i][0] = 1;||| 8 for (int j = 1; j <= 500; j++) p[i][j] = 1ll * p[i][j - 1] * i % mod;||| 9 }||| 10 for (int i = 0; i <= 500; i++) {||| 11 c[i][0] = 1;||| 12 for (int j = 1; j <= 500; j++)||| 13 c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;||| 14 }||| 15 int n, x;||| 16 cin >> n >> x;||| 17 for (int i = 1; i <= x; i++) f[0][i] = 1;||| 18 for (int i = 2; i <= n; i++)||| 19 for (int j = 1; j <= x; j++)||| 20 if (i > j)||| 21 f[i][j] = p[j][i];||| 22 else||| 23 for (int k = 0; k <= i; k++)||| 24 f[i][j] = (f[i][j] + 1ll * c[i][k] * p[i - 1][k] % mod *||| 25 f[i - k][j - i + 1] % mod) %||| 26 mod;||| 27 cout << f[n][x];||| 28 return 0;||| 29 }||| 	12 for (int j = 1; j <= i; j++)
96	91	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const int mod = 998244353;||| 5 LL dp[507][507], C[507][507], mi[507][507];||| 6 int qpow(int a, int k, int p = mod) {||| 7 int res = 1 % p;||| 8 while (k) {||| 9 if (k & 1) res = (LL)res * a % p;||| 10 k >>= 1;||| 11 a = (LL)a * a % p;||| 12 }||| 13 return res;||| 14 }||| 15 void solve() {||| 16 for (int i = 1; i <= 500; i++) {||| 17 C[i][0] = C[i][i] = 1;||| 18 for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 19 for (int j = 0; j <= 500; j++) mi[i][j] = qpow(i, j);||| 20 dp[0][i] = 1;||| 21 }||| 22 for (int i = 1; i <= 500; i++) {||| 23 for (int j = 1; j <= 500; j++) {||| 24 if (j < i)||| 25 dp[i][j] = mi[j][i];||| 26 else {||| 27 for (int k = 0; k <= i; k++) {||| 28 dp[i][j] =||| 29 (dp[i][j] + C[i][k] * dp[i - k][j - i + 1] % mod * mi[i - 1][k]) %||| 30 mod;||| 31 }||| 32 }||| 33 }||| 34 }||| 35 }||| 36 signed main() {||| 37 ios::sync_with_stdio(false);||| 38 solve();||| 39 int tt = 1;||| 40 while (tt--) {||| 41 int n, x;||| 42 cin >> n >> x;||| 43 cout << dp[n][x] << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const int mod = 998244353;||| 5 LL dp[507][507], C[507][507], mi[507][507];||| 6 int qpow(int a, int k, int p = mod) {||| 7 int res = 1 % p;||| 8 while (k) {||| 9 if (k & 1) res = (LL)res * a % p;||| 10 k >>= 1;||| 11 a = (LL)a * a % p;||| 12 }||| 13 return res;||| 14 }||| 15 void solve() {||| 16 for (int i = 1; i <= 500; i++) {||| 17 C[i][0] = C[i][i] = 1;||| 18 for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;||| 19 for (int j = 0; j <= 500; j++) mi[i][j] = qpow(i, j);||| 20 dp[0][i] = 1;||| 21 }||| 22 for (int i = 1; i <= 500; i++) {||| 23 for (int j = 1; j <= 500; j++) {||| 24 if (j < i)||| 25 dp[i][j] = mi[j][i];||| 26 else {||| 27 for (int k = 0; k <= i; k++) {||| 28 dp[i][j] =||| 29 (dp[i][j] + C[i][k] * dp[i - k][j - i + 1] * mi[i - 1][k]) % mod;||| 30 }||| 31 }||| 32 }||| 33 }||| 34 }||| 35 signed main() {||| 36 ios::sync_with_stdio(false);||| 37 solve();||| 38 int tt = 1;||| 39 while (tt--) {||| 40 int n, x;||| 41 cin >> n >> x;||| 42 cout << dp[n][x] << endl;||| 43 }||| 44 }||| 	29 (dp[i][j] + C[i][k] * dp[i - k][j - i + 1] % mod * mi[i - 1][k]) %
96	83	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 using minpq = priority_queue<T, vector<T>, greater<T>>;||| 5 const int INF = 1005000000;||| 6 const long long MOD = 998244353LL;||| 7 int ni() {||| 8 int x;||| 9 cin >> x;||| 10 return x;||| 11 }||| 12 long long nl() {||| 13 long long x;||| 14 cin >> x;||| 15 return x;||| 16 }||| 17 double nd() {||| 18 double x;||| 19 cin >> x;||| 20 return x;||| 21 }||| 22 string next() {||| 23 string x;||| 24 cin >> x;||| 25 return x;||| 26 }||| 27 struct Combo {||| 28 vector<long long> facs;||| 29 vector<long long> invfacs;||| 30 int N;||| 31 Combo(int N) {||| 32 this->N = N;||| 33 facs.assign(N + 1, 0);||| 34 invfacs.assign(N + 1, 0);||| 35 facs[0] = 1;||| 36 for (int i = 1; i <= N; i++) {||| 37 facs[i] = (facs[i - 1] * i) % MOD;||| 38 }||| 39 invfacs[N] = power(facs[N], MOD - 2);||| 40 for (int i = N - 1; i >= 0; i--) {||| 41 invfacs[i] = (invfacs[i + 1] * (i + 1)) % MOD;||| 42 }||| 43 }||| 44 long long choose(int n, int k) {||| 45 if (n < 0 || k < 0 || n < k) return 0LL;||| 46 long long denInv = (invfacs[k] * invfacs[n - k]) % MOD;||| 47 long long ans = (facs[n] * denInv) % MOD;||| 48 return ans;||| 49 }||| 50 long long power(long long x, long long y) {||| 51 long long ans = 1;||| 52 x %= MOD;||| 53 while (y > 0) {||| 54 if (y % 2 == 1) ans = (ans * x) % MOD;||| 55 y /= 2;||| 56 x = (x * x) % MOD;||| 57 }||| 58 return ans;||| 59 }||| 60 };||| 61 int main() {||| 62 ios::sync_with_stdio(false);||| 63 cin.tie(0);||| 64 int N = ni();||| 65 int X = ni();||| 66 const int M = 502;||| 67 long long dp[M][M];||| 68 memset(dp, 0, sizeof dp);||| 69 for (int j = 0; j < (X + 1); j++) dp[1][j] = j;||| 70 Combo c(M);||| 71 long long pows[M][M];||| 72 for (int i = 0; i < (M); i++)||| 73 for (int j = 0; j < (M); j++) {||| 74 pows[i][j] = c.power(i, j);||| 75 }||| 76 for (int i = 2; i <= N; i++) {||| 77 for (int j = i; j <= X; j++) {||| 78 for (int k = 1; k <= N; k++) {||| 79 long long val = (c.choose(i, k) * pows[i - 1][i - k]) % MOD;||| 80 dp[i][j] += dp[k][j - (i - 1)] * val;||| 81 dp[i][j] %= MOD;||| 82 }||| 83 }||| 84 }||| 85 long long ans = (pows[X][N] - dp[N][X] + MOD) % MOD;||| 86 cout << ans;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 using minpq = priority_queue<T, vector<T>, greater<T>>;||| 5 const int INF = 1005000000;||| 6 const long long MOD = 998244353LL;||| 7 int ni() {||| 8 int x;||| 9 cin >> x;||| 10 return x;||| 11 }||| 12 long long nl() {||| 13 long long x;||| 14 cin >> x;||| 15 return x;||| 16 }||| 17 double nd() {||| 18 double x;||| 19 cin >> x;||| 20 return x;||| 21 }||| 22 string next() {||| 23 string x;||| 24 cin >> x;||| 25 return x;||| 26 }||| 27 struct Combo {||| 28 vector<long long> facs;||| 29 vector<long long> invfacs;||| 30 int N;||| 31 Combo(int N) {||| 32 this->N = N;||| 33 facs.assign(N + 1, 0);||| 34 invfacs.assign(N + 1, 0);||| 35 facs[0] = 1;||| 36 for (int i = 1; i <= N; i++) {||| 37 facs[i] = (facs[i - 1] * i) % MOD;||| 38 }||| 39 invfacs[N] = power(facs[N], MOD - 2);||| 40 for (int i = N - 1; i >= 0; i--) {||| 41 invfacs[i] = (invfacs[i + 1] * (i + 1)) % MOD;||| 42 }||| 43 }||| 44 long long choose(int n, int k) {||| 45 if (n < 0 || k < 0 || n < k) return 0LL;||| 46 long long denInv = (invfacs[k] * invfacs[n - k]) % MOD;||| 47 long long ans = (facs[n] * denInv) % MOD;||| 48 return ans;||| 49 }||| 50 long long power(long long x, long long y) {||| 51 long long ans = 1;||| 52 x %= MOD;||| 53 while (y > 0) {||| 54 if (y % 2 == 1) ans = (ans * x) % MOD;||| 55 y /= 2;||| 56 x = (x * x) % MOD;||| 57 }||| 58 return ans;||| 59 }||| 60 };||| 61 int main() {||| 62 ios::sync_with_stdio(false);||| 63 cin.tie(0);||| 64 int N = ni();||| 65 int X = ni();||| 66 const int M = 51;||| 67 long long dp[M][M];||| 68 memset(dp, 0, sizeof dp);||| 69 for (int j = 0; j < (X + 1); j++) dp[1][j] = j;||| 70 Combo c(M);||| 71 long long pows[M][M];||| 72 for (int i = 0; i < (M); i++)||| 73 for (int j = 0; j < (M); j++) {||| 74 pows[i][j] = c.power(i, j);||| 75 }||| 76 for (int i = 2; i <= N; i++) {||| 77 for (int j = i; j <= X; j++) {||| 78 for (int k = 1; k <= N; k++) {||| 79 long long val = (c.choose(i, k) * pows[i - 1][N - k]) % MOD;||| 80 dp[i][j] += dp[k][j - (i - 1)] * val;||| 81 dp[i][j] %= MOD;||| 82 }||| 83 }||| 84 }||| 85 long long ans = (pows[X][N] - dp[N][X] + MOD) % MOD;||| 86 cout << ans;||| 87 }||| 	66 const int M = 502;
96	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void in(long long& x) { scanf(""%lld"", &x); }||| 4 inline void in(int& x) { scanf(""%d"", &x); }||| 5 inline void in(double& x) { scanf(""%lf"", &x); }||| 6 inline void in(char& x) { x = getchar(); }||| 7 inline void in(char* x) { scanf(""%s"", x); }||| 8 inline void in() {}||| 9 template <class T, class... U>||| 10 inline void in(T& a, U&... b) {||| 11 in(a);||| 12 in(b...);||| 13 }||| 14 inline void out(const long long x) { printf(""%lld"", x); }||| 15 inline void out(const int x) { printf(""%d"", x); }||| 16 inline void out(const char x) { putchar(x); }||| 17 inline void out(const char* x) { printf(""%s"", x); }||| 18 inline void out() {}||| 19 template <class T, class... U>||| 20 inline void out(const T a, const U... b) {||| 21 out(a);||| 22 out(b...);||| 23 }||| 24 template <class... U>||| 25 inline void outl(const U... b) {||| 26 out(b...);||| 27 putchar('\n');||| 28 }||| 29 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 30 const long long MOD = 998244353;||| 31 const long long N = 500 + 10;||| 32 long long n, x, dp[N][N], c[N][N];||| 33 long long qpow(long long a, long long b) {||| 34 long long ans = 1;||| 35 while (b > 0) {||| 36 if (b & 1) (ans *= a) %= MOD;||| 37 b >>= 1;||| 38 (a *= a) %= MOD;||| 39 }||| 40 return ans;||| 41 }||| 42 int solve(long long T) {||| 43 cin >> n >> x;||| 44 dp[n][0] = 1;||| 45 for (long long i = n; i >= 2; --i) {||| 46 for (long long j = 0; j <= x - 1; ++j) {||| 47 if (dp[i][j] <= 0) continue;||| 48 long long nj = min(x, j + i - 1);||| 49 for (long long k = 0; k <= i; ++k) {||| 50 (dp[k][nj] +=||| 51 (dp[i][j] * ((c[i][k] * qpow(nj - j, i - k)) % MOD)) % MOD) %= MOD;||| 52 }||| 53 }||| 54 }||| 55 long long ans = 0;||| 56 for (long long i = 0; i <= x; ++i) (ans += dp[0][i]) %= MOD;||| 57 outl(ans);||| 58 return 0;||| 59 }||| 60 int main() {||| 61 for (long long i = 0; i <= N - 1; ++i) {||| 62 c[i][0] = c[i][i] = 1;||| 63 for (long long j = 1; j <= i - 1; ++j) {||| 64 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;||| 65 }||| 66 }||| 67 solve(0);||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void in(long long& x) { scanf(""%lld"", &x); }||| 4 inline void in(int& x) { scanf(""%d"", &x); }||| 5 inline void in(double& x) { scanf(""%lf"", &x); }||| 6 inline void in(char& x) { x = getchar(); }||| 7 inline void in(char* x) { scanf(""%s"", x); }||| 8 inline void in() {}||| 9 template <class T, class... U>||| 10 inline void in(T& a, U&... b) {||| 11 in(a);||| 12 in(b...);||| 13 }||| 14 inline void out(const long long x) { printf(""%lld"", x); }||| 15 inline void out(const int x) { printf(""%d"", x); }||| 16 inline void out(const char x) { putchar(x); }||| 17 inline void out(const char* x) { printf(""%s"", x); }||| 18 inline void out() {}||| 19 template <class T, class... U>||| 20 inline void out(const T a, const U... b) {||| 21 out(a);||| 22 out(b...);||| 23 }||| 24 template <class... U>||| 25 inline void outl(const U... b) {||| 26 out(b...);||| 27 putchar('\n');||| 28 }||| 29 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 30 const long long MOD = 998244353;||| 31 const long long N = 500 + 10;||| 32 long long n, x, dp[N][N], c[N][N];||| 33 long long qpow(long long a, long long b) {||| 34 long long ans = 1;||| 35 while (b > 0) {||| 36 if (b & 1) (ans *= a) %= MOD;||| 37 b >>= 1;||| 38 (a *= a) %= MOD;||| 39 }||| 40 return ans;||| 41 }||| 42 int solve(long long T) {||| 43 cin >> n >> x;||| 44 dp[n][0] = 1;||| 45 for (long long i = n; i >= 2; --i) {||| 46 for (long long j = 0; j <= x - 1; ++j) {||| 47 if (dp[i][j] <= 0) continue;||| 48 long long nj = min(x, j + i - 1);||| 49 for (long long k = 0; k <= i; ++k) {||| 50 (dp[k][nj] +=||| 51 (dp[i][j] * (c[i][k] * qpow(nj - j, i - k)) % MOD) % MOD) %= MOD;||| 52 }||| 53 }||| 54 }||| 55 long long ans = 0;||| 56 for (long long i = 0; i <= x; ++i) (ans += dp[0][i]) %= MOD;||| 57 outl(ans);||| 58 return 0;||| 59 }||| 60 int main() {||| 61 for (long long i = 0; i <= N - 1; ++i) {||| 62 c[i][0] = c[i][i] = 1;||| 63 for (long long j = 1; j <= i - 1; ++j) {||| 64 c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;||| 65 }||| 66 }||| 67 solve(0);||| 68 return 0;||| 69 }||| "	51 (dp[i][j] * ((c[i][k] * qpow(nj - j, i - k)) % MOD)) % MOD) %= MOD;
98	130	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 string s, s1;||| 66 cin >> s >> s1;||| 67 vector<int> v;||| 68 for (int i = 0; i < s1.size(); i++) {||| 69 for (int j = 0; j < s.size(); j++) {||| 70 if (s1[i] == s[j]) {||| 71 v.push_back(j);||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 int sum = 0;||| 77 for (int i = 1; i < v.size(); i++) {||| 78 sum += abs(v[i] - v[i - 1]);||| 79 }||| 80 cout << sum << endl;||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 long long t;||| 87 cin >> t;||| 88 for (int it = 1; it <= t; it++) {||| 89 solve();||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 string s, s1;||| 66 cin >> s >> s1;||| 67 vector<int> v;||| 68 for (int i = 0; i < s1.size(); i++) {||| 69 for (int j = 0; i < s.size(); j++) {||| 70 if (s1[i] == s[j]) {||| 71 v.push_back(j);||| 72 break;||| 73 }||| 74 }||| 75 }||| 76 int sum = 0;||| 77 for (int i = 1; i < v.size(); i++) {||| 78 sum += abs(v[i] - v[i - 1]);||| 79 }||| 80 cout << sum << endl;||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 long long t;||| 87 cin >> t;||| 88 for (int it = 1; it <= t; it++) {||| 89 solve();||| 90 }||| 91 return 0;||| 92 }||| "	69 for (int j = 0; j < s.size(); j++) {
98	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char a[26];||| 4 int num[26];||| 5 int main() {||| 6 int n;||| 7 scanf(""%d"", &n);||| 8 char b[50];||| 9 for (int i = 0; i < n; i++) {||| 10 int time = 0;||| 11 scanf(""%s"", &a);||| 12 scanf(""%s"", &b);||| 13 for (int i1 = 0; i1 < 26; i1++) {||| 14 num[a[i1] - 'a'] = i1;||| 15 }||| 16 for (int i2 = 0; i2 < strlen(b) - 1; i2++) {||| 17 time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']);||| 18 }||| 19 printf(""%d\n"", time);||| 20 }||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char a[26];||| 4 int num[26];||| 5 int main() {||| 6 int n;||| 7 scanf(""%d"", &n);||| 8 char b[50];||| 9 for (int i = 0; i < n; i++) {||| 10 int time = 0;||| 11 scanf(""%s"", &a);||| 12 scanf(""%s"", &b);||| 13 for (int i1 = 0; i1 < 26; i1++) {||| 14 num[a[i1] - 'a'] = i1;||| 15 }||| 16 for (int i2 = 0; i2 < strlen(b) - 1; i2++) {||| 17 time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']);||| 18 }||| 19 printf(""������Ϊ%d\n"", time);||| 20 }||| 21 }||| "	"19 printf(""%d\n"", time);"
98	105	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 map<char, int> mp;||| 7 while (t--) {||| 8 string x;||| 9 cin >> x;||| 10 for (int i = 1; i <= 26; i++) {||| 11 mp[x[i - 1]] = i;||| 12 }||| 13 string s;||| 14 cin >> s;||| 15 int ans = 0;||| 16 for (int i = 1; i < s.length(); i++) {||| 17 ans += abs(mp[s[i]] - mp[s[i - 1]]);||| 18 }||| 19 cout << ans << endl;||| 20 }||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 map<char, int> mp;||| 7 while (t--) {||| 8 string x;||| 9 cin >> x;||| 10 for (int i = 1; i < 26; i++) {||| 11 mp[x[i - 1]] = i;||| 12 }||| 13 string s;||| 14 cin >> s;||| 15 int ans = 0;||| 16 for (int i = 1; i < s.length(); i++) {||| 17 ans += abs(mp[s[i]] - mp[s[i - 1]]);||| 18 }||| 19 cout << ans << endl;||| 20 }||| 21 }||| 	10 for (int i = 1; i <= 26; i++) {
98	98	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string order;||| 8 cin >> order;||| 9 string s;||| 10 cin >> s;||| 11 map<char, int> m;||| 12 int c = 1;||| 13 for (auto i : order) {||| 14 m[i] = c;||| 15 c++;||| 16 }||| 17 int ans = 0;||| 18 for (int i = 1; i < s.length(); i++) {||| 19 ans += abs(m[s[i]] - m[s[i - 1]]);||| 20 }||| 21 std::cout << ans << std::endl;||| 22 }||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string order;||| 8 cin >> order;||| 9 string s;||| 10 cin >> s;||| 11 map<char, int> m;||| 12 int c = 1;||| 13 for (auto i : order) {||| 14 m[i] = c;||| 15 c++;||| 16 }||| 17 int ans = 0;||| 18 for (int i = 1; i < s.length(); i++) {||| 19 ans += (m[s[i]] - m[s[i - 1]]);||| 20 }||| 21 std::cout << ans << std::endl;||| 22 }||| 23 return 0;||| 24 }||| 	19 ans += abs(m[s[i]] - m[s[i - 1]]);
98	167	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str1, str2;||| 8 cin >> str1 >> str2;||| 9 int ans = 0, pos1 = 0, pos2 = 0;||| 10 for (int i = 0; i < str2.length() - 1; i++) {||| 11 for (int j = 0; j <= str1.length(); j++) {||| 12 if (str2[i] == str1[j]) {||| 13 pos1 = j;||| 14 }||| 15 if (str2[i + 1] == str1[j]) {||| 16 pos2 = j;||| 17 }||| 18 }||| 19 ans += abs(pos2 - pos1);||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string str1, str2;||| 8 cin >> str1 >> str2;||| 9 int ans = 0, pos1 = 0, pos2 = 0;||| 10 for (int i = 0; i < str2.length() - 1; i++) {||| 11 for (int j = 1; j <= str1.length(); j++) {||| 12 if (str2[i] == str1[j]) {||| 13 pos1 = j;||| 14 }||| 15 if (str2[i + 1] == str1[j]) {||| 16 pos2 = j;||| 17 }||| 18 }||| 19 ans += abs(pos2 - pos1);||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 }||| 	11 for (int j = 0; j <= str1.length(); j++) {
98	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int q, res;||| 5 string keyboard, st;||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> keyboard;||| 9 cin >> st;||| 10 int v[100];||| 11 res = 0;||| 12 for (int i = 0; i < st.length(); i++) {||| 13 for (int j = 0; j < 26; j++) {||| 14 if (keyboard[j] == st[i]) {||| 15 v[i] = j;||| 16 if (i > 0) res += abs(j - v[i - 1]);||| 17 }||| 18 }||| 19 }||| 20 if (st.length() == 1)||| 21 cout << ""0""||| 22 << ""\n"";||| 23 else||| 24 cout << res << ""\n"";||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int q, res;||| 5 string keyboard, st;||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> keyboard;||| 9 cin >> st;||| 10 int v[100];||| 11 res = 0;||| 12 for (int i = 0; i < st.length(); i++) {||| 13 for (int j = 0; j < 26; j++) {||| 14 if (keyboard[j] == st[i]) {||| 15 v[i] = j;||| 16 if (i > 0) res = abs(j - v[i - 1]);||| 17 }||| 18 }||| 19 }||| 20 if (st.length() == 1)||| 21 cout << ""0""||| 22 << ""\n"";||| 23 else||| 24 cout << res << ""\n"";||| 25 }||| 26 }||| "	16 if (i > 0) res += abs(j - v[i - 1]);
98	164	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 string alf;||| 8 cin >> alf;||| 9 string word;||| 10 cin >> word;||| 11 if (word.size() == 1) {||| 12 cout << 0 << endl;||| 13 continue;||| 14 }||| 15 int result = 0;||| 16 int temp = 0;||| 17 for (int j = 1; j < word.size(); j++) {||| 18 temp = alf.find(word[j]) - alf.find(word[j - 1]);||| 19 result += abs(temp);||| 20 temp = 0;||| 21 }||| 22 cout << result << endl;||| 23 }||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 string alf;||| 8 cin >> alf;||| 9 string word;||| 10 cin >> word;||| 11 if (word.size() == 1) {||| 12 cout << 1 << endl;||| 13 continue;||| 14 }||| 15 int result = 0;||| 16 int temp = 0;||| 17 for (int j = 1; j < word.size(); j++) {||| 18 temp = alf.find(word[j]) - alf.find(word[j - 1]);||| 19 result += abs(temp);||| 20 temp = 0;||| 21 }||| 22 cout << result << endl;||| 23 }||| 24 }||| 	12 cout << 0 << endl;
99	24	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long x0, n, t;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> x0 >> n;||| 8 if (x0 % 2 == 0) {||| 9 if (n % 4 == 1) {||| 10 x0 = x0 - 1 - n / 4 * (4);||| 11 cout << x0 << endl;||| 12 } else if (n % 4 == 2)||| 13 cout << x0 + 1 << endl;||| 14 else if (n % 4 == 3)||| 15 cout << (x0 + 4 + n / 4 * 4) << endl;||| 16 else if (n % 4 == 0)||| 17 cout << x0 << endl;||| 18 } else if (x0 % 2 != 0) {||| 19 if (n % 4 == 1)||| 20 cout << x0 + 1 + n / 4 * 4 << endl;||| 21 else if (n % 4 == 2)||| 22 cout << x0 - 1 << endl;||| 23 else if (n % 4 == 3)||| 24 cout << (x0 - 4 + n / 4 * (-4)) << endl;||| 25 else if (n % 4 == 0)||| 26 cout << x0 << endl;||| 27 }||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long x0, n, t;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> x0 >> n;||| 8 if (x0 % 2 == 0) {||| 9 if (n % 4 == 1) {||| 10 x0 = x0 - 1 - n / 4 * (4);||| 11 cout << x0 << endl;||| 12 } else if (n % 4 == 2)||| 13 cout << x0 + 1 << endl;||| 14 else if (n % 4 == 3)||| 15 cout << (x0 + 4 + n / 4 * 4) << endl;||| 16 else if (n % 4 == 0)||| 17 cout << x0 << endl;||| 18 } else if (x0 % 2 != 0) {||| 19 if (n % 4 == 1)||| 20 cout << x0 + 1 + n / 4 * 4 << endl;||| 21 else if (n % 4 == 2)||| 22 cout << x0 - 1 << endl;||| 23 else if (n % 4 == 3)||| 24 cout << (x0 - 3 + n / 4 * (-4)) << endl;||| 25 else if (n % 4 == 0)||| 26 cout << x0 << endl;||| 27 }||| 28 }||| 29 return 0;||| 30 }||| 	24 cout << (x0 - 4 + n / 4 * (-4)) << endl;
99	96	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long x, j;||| 8 cin >> x >> j;||| 9 long long mod = j % 4;||| 10 long long mult = j / 4;||| 11 j -= (mult)*4;||| 12 if (j == 0)||| 13 cout << x << endl;||| 14 else {||| 15 for (long long i = (mult * 4) + 1; i <= (mult * 4) + mod; i++) {||| 16 if (x % 2 == 0)||| 17 x -= i;||| 18 else||| 19 x += i;||| 20 }||| 21 cout << x << endl;||| 22 }||| 23 }||| 24 return 0;||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long x, j;||| 8 cin >> x >> j;||| 9 long long mod = j % 4;||| 10 long long mult = j / 4;||| 11 j -= (mult)*4;||| 12 if (j == 0)||| 13 cout << x << endl;||| 14 else {||| 15 for (long long i = (mult * 4) + 1; i <= (mult * 4) + mod; i++) {||| 16 if (x % 2 == 0)||| 17 x -= i;||| 18 else||| 19 x += i;||| 20 }||| 21 }||| 22 cout << x << endl;||| 23 }||| 24 return 0;||| 25 }||| 	21 cout << x << endl;
99	215	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long m = 998244353;||| 4 long long ce(long long n, long long k) {||| 5 if (n % k == 0) return (n / k);||| 6 return (n / k + 1);||| 7 }||| 8 long long powl(long long a, long long b) {||| 9 long long ans = 1;||| 10 while (b != 0) {||| 11 if (b & 1) ans = (ans * a) % m;||| 12 a = (a * a) % m;||| 13 b = b / 2;||| 14 }||| 15 return ans;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int t;||| 21 cin >> t;||| 22 while (t--) {||| 23 long long x, n, ans, m;||| 24 cin >> x >> n;||| 25 if (x % 2 == 0) {||| 26 if (n % 4 == 1) {||| 27 m = -n;||| 28 } else if (n % 4 == 2) {||| 29 m = 1;||| 30 } else if (n % 4 == 3) {||| 31 m = ce(n, 4) * 4;||| 32 } else {||| 33 m = 0;||| 34 }||| 35 ans = x + m;||| 36 } else {||| 37 if (n % 4 == 1) {||| 38 m = (n / 4) * 4 + 1;||| 39 } else if (n % 4 == 2) {||| 40 m = -1;||| 41 } else if (n % 4 == 3) {||| 42 m = -(ce(n, 4) * 4);||| 43 } else {||| 44 m = 0;||| 45 }||| 46 ans = x + m;||| 47 }||| 48 cout << ans << ""\n"";||| 49 }||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long m = 998244353;||| 4 long long ce(long long n, long long k) {||| 5 if (n % k == 0) return (n / k);||| 6 return (n / k + 1);||| 7 }||| 8 long long powl(long long a, long long b) {||| 9 long long ans = 1;||| 10 while (b != 0) {||| 11 if (b & 1) ans = (ans * a) % m;||| 12 a = (a * a) % m;||| 13 b = b / 2;||| 14 }||| 15 return ans;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 int t;||| 21 cin >> t;||| 22 while (t--) {||| 23 long long x, n, ans, m;||| 24 cin >> x >> n;||| 25 if (x % 2 == 0) {||| 26 if (n % 4 == 1) {||| 27 m = -n;||| 28 } else if (n % 4 == 2) {||| 29 m = 1;||| 30 } else if (n % 4 == 3) {||| 31 m = ce(n, 4) * 4;||| 32 } else {||| 33 m = 0;||| 34 }||| 35 ans = x + m;||| 36 } else {||| 37 if (n % 4 == 1) {||| 38 m = (n - 1) * 4 + 1;||| 39 } else if (n % 4 == 2) {||| 40 m = -1;||| 41 } else if (n % 4 == 3) {||| 42 m = -(ce(n, 4) * 4);||| 43 } else {||| 44 m = 0;||| 45 }||| 46 ans = x + m;||| 47 }||| 48 cout << ans << ""\n"";||| 49 }||| 50 }||| "	38 m = (n / 4) * 4 + 1;
99	151	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename M>||| 4 istream& operator>>(istream& in, pair<T, M>& pr) {||| 5 in >> pr.first >> pr.second;||| 6 return in;||| 7 }||| 8 template <typename T, typename M>||| 9 ostream& operator<<(ostream& out, const pair<T, M>& pr) {||| 10 out << pr.first << ' ' << pr.second;||| 11 return out;||| 12 }||| 13 template <typename T, typename M>||| 14 pair<T, M> operator+(const pair<T, M>& p1, const pair<T, M>& p2) {||| 15 return make_pair(p1.first + p2.first, p1.second + p2.second);||| 16 }||| 17 bool prostoechislo(unsigned long long k) {||| 18 for (unsigned long long j = 2; j * j <= k; j++)||| 19 if (k % j == 0) return 0;||| 20 return 1;||| 21 }||| 22 int stepen(long long a, long long b) {||| 23 if (b == 0) return 1;||| 24 if (b % 2 == 0)||| 25 return stepen(a, b / 2) * stepen(a, b / 2);||| 26 else||| 27 return a * stepen(a, b - 1);||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(0);||| 31 cin.tie(0);||| 32 cout.tie(0);||| 33 long long t;||| 34 cin >> t;||| 35 while (t--) {||| 36 long long x, n;||| 37 cin >> x >> n;||| 38 long long n1 = n;||| 39 long long n2 = n;||| 40 if (n % 4 == 0) {||| 41 cout << x << ""\n"";||| 42 continue;||| 43 }||| 44 if (n % 4 == 1) {||| 45 if (x % 2 == 0)||| 46 cout << x - n << ""\n"";||| 47 else||| 48 cout << x + n << ""\n"";||| 49 continue;||| 50 }||| 51 if (n % 4 == 2) {||| 52 if (x % 2 == 0)||| 53 cout << x + 1 << ""\n"";||| 54 else||| 55 cout << x - 1 << ""\n"";||| 56 }||| 57 if (n % 4 == 3) {||| 58 if (x % 2 == 0)||| 59 cout << x + n + 1 << ""\n"";||| 60 else||| 61 cout << x - n - 1 << ""\n"";||| 62 }||| 63 }||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename M>||| 4 istream& operator>>(istream& in, pair<T, M>& pr) {||| 5 in >> pr.first >> pr.second;||| 6 return in;||| 7 }||| 8 template <typename T, typename M>||| 9 ostream& operator<<(ostream& out, const pair<T, M>& pr) {||| 10 out << pr.first << ' ' << pr.second;||| 11 return out;||| 12 }||| 13 template <typename T, typename M>||| 14 pair<T, M> operator+(const pair<T, M>& p1, const pair<T, M>& p2) {||| 15 return make_pair(p1.first + p2.first, p1.second + p2.second);||| 16 }||| 17 bool prostoechislo(unsigned long long k) {||| 18 for (unsigned long long j = 2; j * j <= k; j++)||| 19 if (k % j == 0) return 0;||| 20 return 1;||| 21 }||| 22 int stepen(long long a, long long b) {||| 23 if (b == 0) return 1;||| 24 if (b % 2 == 0)||| 25 return stepen(a, b / 2) * stepen(a, b / 2);||| 26 else||| 27 return a * stepen(a, b - 1);||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(0);||| 31 cin.tie(0);||| 32 cout.tie(0);||| 33 long long t;||| 34 cin >> t;||| 35 while (t--) {||| 36 long long x, n;||| 37 cin >> x >> n;||| 38 long long n1 = n;||| 39 long long n2 = n;||| 40 if (n % 4 == 0) {||| 41 cout << x << ""\n"";||| 42 continue;||| 43 }||| 44 if (n % 4 == 1) {||| 45 if (x % 2 == 0)||| 46 cout << x - n << ""\n"";||| 47 else||| 48 cout << x + n << ""\n"";||| 49 continue;||| 50 }||| 51 if (n % 4 == 2) {||| 52 if (x % 2 == 0)||| 53 cout << x + 1 << ""\n"";||| 54 else||| 55 cout << x - 1;||| 56 }||| 57 if (n % 4 == 3) {||| 58 if (x % 2 == 0)||| 59 cout << x + n + 1 << ""\n"";||| 60 else||| 61 cout << x - n - 1 << ""\n"";||| 62 }||| 63 }||| 64 }||| "	"55 cout << x - 1 << ""\n"";"
99	52	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int x, n, ans;||| 5 cin >> x >> n;||| 6 if (x % 2 == 0) {||| 7 if (n % 4 == 0) {||| 8 ans = x;||| 9 }||| 10 if (n % 4 == 1) {||| 11 ans = x - 1 - (n / 4) * 4;||| 12 }||| 13 if (n % 4 == 2) {||| 14 ans = x + 1;||| 15 }||| 16 if (n % 4 == 3) {||| 17 ans = x + (ceil(n / 4.00)) * 4;||| 18 }||| 19 } else {||| 20 if (n % 4 == 0) {||| 21 ans = x;||| 22 }||| 23 if (n % 4 == 1) {||| 24 ans = x + 1 + (n / 4) * 4;||| 25 }||| 26 if (n % 4 == 2) {||| 27 ans = x - 1;||| 28 }||| 29 if (n % 4 == 3) {||| 30 ans = x - (ceil(n / 4.00)) * 4;||| 31 }||| 32 }||| 33 cout << ans;||| 34 }||| 35 int main() {||| 36 int t = 1;||| 37 cin >> t;||| 38 while (t--) {||| 39 solve();||| 40 cout << endl;||| 41 }||| 42 return 0;||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int x, n, ans;||| 5 cin >> x >> n;||| 6 if (x % 2 == 0) {||| 7 if (n % 4 == 0) {||| 8 ans = x;||| 9 }||| 10 if (n % 4 == 1) {||| 11 ans = x - 1 - (n / 4) * 4;||| 12 }||| 13 if (n % 4 == 2) {||| 14 ans = x + 1;||| 15 }||| 16 if (n % 4 == 3) {||| 17 ans = x + (ceil(n / 4.00)) * 4;||| 18 }||| 19 } else {||| 20 if (n % 4 == 0) {||| 21 ans = x;||| 22 }||| 23 if (n % 4 == 1) {||| 24 ans = x + 1 + (n / 4) * 4;||| 25 }||| 26 if (n % 4 == 2) {||| 27 ans = x - 1;||| 28 }||| 29 if (n % 4 == 3) {||| 30 ans = x - (ceil(n / 4)) * 4;||| 31 }||| 32 }||| 33 cout << ans;||| 34 }||| 35 int main() {||| 36 int t = 1;||| 37 cin >> t;||| 38 while (t--) {||| 39 solve();||| 40 cout << endl;||| 41 }||| 42 return 0;||| 43 }||| 	30 ans = x - (ceil(n / 4.00)) * 4;
99	154	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const auto LAMBDA_TRUE = [](long long int) { return true; };||| 4 const auto LAMBDA_FALSE = [](long long int) { return false; };||| 5 long long int _fastXOR(const long long int &_n) {||| 6 if (_n % 4 == 0) return _n;||| 7 if (_n % 4 == 1) return 1;||| 8 if (_n % 4 == 2) return _n + 1;||| 9 return 0;||| 10 }||| 11 long long int _fastSUM(const long long int &_n) { return ((1 + _n) * _n) / 2; }||| 12 long long int _ceil(const long long int &_v1, const long long int &_v2) {||| 13 return (_v1 + _v2 - 1) / _v2;||| 14 }||| 15 template <class T>||| 16 pair<T, T> _min_v(||| 17 const vector<T> &_v,||| 18 const std::function<bool(const T &)> &_cmpv = LAMBDA_TRUE,||| 19 const std::function<bool(const T &)> &_cmpi = LAMBDA_TRUE) noexcept {||| 20 pair<T, T> r;||| 21 r.first = numeric_limits<long long int>::max();||| 22 for (size_t i = 0; i < _v.size(); i++)||| 23 if (_v[i] < r.first && _cmpv(_v[i]) && _cmpi(i)) {||| 24 r.first = _v[i];||| 25 r.second = i;||| 26 }||| 27 return r;||| 28 }||| 29 template <class T>||| 30 pair<T, T> _max_v(||| 31 const vector<T> &_v,||| 32 const std::function<bool(const T &)> &_cmpv = LAMBDA_TRUE,||| 33 const std::function<bool(const T &)> &_cmpi = LAMBDA_TRUE) noexcept {||| 34 pair<T, T> r;||| 35 r.first = numeric_limits<long long int>::min();||| 36 for (size_t i = 0; i < _v.size(); i++)||| 37 if (_v[i] > r.first && _cmpv(_v[i]) && _cmpi(i)) {||| 38 r.first = _v[i];||| 39 r.second = i;||| 40 }||| 41 return r;||| 42 }||| 43 void solve() {||| 44 long long int x, n;||| 45 cin >> x >> n;||| 46 long long int d = 0;||| 47 if (x % 2 == 0) {||| 48 if (n % 4 == 0) d = 0;||| 49 if (n % 4 == 2) d = 1;||| 50 if (n % 4 == 1) d = -n;||| 51 if (n % 4 == 3) d = n + 1;||| 52 } else {||| 53 if (n % 4 == 0) d = 0;||| 54 if (n % 4 == 2) d = -1;||| 55 if (n % 4 == 1) d = n;||| 56 if (n % 4 == 3) d = -n - 1;||| 57 }||| 58 cout << x + d << endl;||| 59 }||| 60 int main(int argc, char **argv) {||| 61 ios_base::sync_with_stdio(NULL);||| 62 cin.tie(NULL);||| 63 cout.tie(NULL);||| 64 long long int t;||| 65 cin >> t;||| 66 while (t--) solve();||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const auto LAMBDA_TRUE = [](long long int) { return true; };||| 4 const auto LAMBDA_FALSE = [](long long int) { return false; };||| 5 long long int _fastXOR(const long long int &_n) {||| 6 if (_n % 4 == 0) return _n;||| 7 if (_n % 4 == 1) return 1;||| 8 if (_n % 4 == 2) return _n + 1;||| 9 return 0;||| 10 }||| 11 long long int _fastSUM(const long long int &_n) { return ((1 + _n) * _n) / 2; }||| 12 long long int _ceil(const long long int &_v1, const long long int &_v2) {||| 13 return (_v1 + _v2 - 1) / _v2;||| 14 }||| 15 template <class T>||| 16 pair<T, T> _min_v(||| 17 const vector<T> &_v,||| 18 const std::function<bool(const T &)> &_cmpv = LAMBDA_TRUE,||| 19 const std::function<bool(const T &)> &_cmpi = LAMBDA_TRUE) noexcept {||| 20 pair<T, T> r;||| 21 r.first = numeric_limits<long long int>::max();||| 22 for (size_t i = 0; i < _v.size(); i++)||| 23 if (_v[i] < r.first && _cmpv(_v[i]) && _cmpi(i)) {||| 24 r.first = _v[i];||| 25 r.second = i;||| 26 }||| 27 return r;||| 28 }||| 29 template <class T>||| 30 pair<T, T> _max_v(||| 31 const vector<T> &_v,||| 32 const std::function<bool(const T &)> &_cmpv = LAMBDA_TRUE,||| 33 const std::function<bool(const T &)> &_cmpi = LAMBDA_TRUE) noexcept {||| 34 pair<T, T> r;||| 35 r.first = numeric_limits<long long int>::min();||| 36 for (size_t i = 0; i < _v.size(); i++)||| 37 if (_v[i] > r.first && _cmpv(_v[i]) && _cmpi(i)) {||| 38 r.first = _v[i];||| 39 r.second = i;||| 40 }||| 41 return r;||| 42 }||| 43 void solve() {||| 44 long long int x, n;||| 45 cin >> x >> n;||| 46 long long int d = 0;||| 47 if (x % 2 == 0) {||| 48 if (n % 4 == 0) d = 0;||| 49 if (n % 4 == 2) d = 1;||| 50 if (n % 4 == 1) d = -n;||| 51 if (n % 4 == 3) d = n - 1;||| 52 } else {||| 53 if (n % 4 == 0) d = 0;||| 54 if (n % 4 == 2) d = -1;||| 55 if (n % 4 == 1) d = n;||| 56 if (n % 4 == 3) d = -n - 1;||| 57 }||| 58 cout << x + d << endl;||| 59 }||| 60 int main(int argc, char **argv) {||| 61 ios_base::sync_with_stdio(NULL);||| 62 cin.tie(NULL);||| 63 cout.tie(NULL);||| 64 long long int t;||| 65 cin >> t;||| 66 while (t--) solve();||| 67 return 0;||| 68 }||| 	51 if (n % 4 == 3) d = n + 1;
99	119	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T;||| 4 int main() {||| 5 cin >> T;||| 6 while (T--) {||| 7 long long x, y;||| 8 cin >> x >> y;||| 9 long long ans = y % 4;||| 10 long long cnt = 0;||| 11 if (x % 2 == 0) {||| 12 if (ans == 0) {||| 13 cnt = x;||| 14 }||| 15 if (ans == 1) {||| 16 cnt = x - y;||| 17 }||| 18 if (ans == 2) {||| 19 cnt = x + 1;||| 20 }||| 21 if (ans == 3) {||| 22 cnt = x + 1 + y;||| 23 }||| 24 } else {||| 25 if (ans == 0) {||| 26 cnt = x;||| 27 }||| 28 if (ans == 1) {||| 29 cnt = x + y;||| 30 }||| 31 if (ans == 2) {||| 32 cnt = x - 1;||| 33 }||| 34 if (ans == 3) {||| 35 cnt = x - y - 1;||| 36 }||| 37 }||| 38 cout << cnt << endl;||| 39 }||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T;||| 4 int main() {||| 5 cin >> T;||| 6 while (T--) {||| 7 long long x, y;||| 8 cin >> x >> y;||| 9 long long ans = y % 4;||| 10 long long cnt = 0;||| 11 if (x % 2 == 0) {||| 12 if (ans == 0) {||| 13 cnt = x;||| 14 }||| 15 if (ans == 1) {||| 16 cnt = x - y;||| 17 }||| 18 if (ans == 2) {||| 19 cnt = x + y;||| 20 }||| 21 if (ans == 3) {||| 22 cnt = x + 1 + y;||| 23 }||| 24 } else {||| 25 if (ans == 0) {||| 26 cnt = x;||| 27 }||| 28 if (ans == 1) {||| 29 cnt = x + y;||| 30 }||| 31 if (ans == 2) {||| 32 cnt = x - y;||| 33 }||| 34 if (ans == 3) {||| 35 cnt = x - y - 1;||| 36 }||| 37 }||| 38 cout << cnt << endl;||| 39 }||| 40 }||| 	19 cnt = x + 1;
99	165	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long gcd(long long a, long long b) {||| 5 if (b == 0) return a;||| 6 return gcd(b, a % b);||| 7 }||| 8 long long pwr(long long a, long long b) {||| 9 a %= mod;||| 10 long long res = 1;||| 11 while (b > 0) {||| 12 if (b & 1) res = res * a % mod;||| 13 a = a * a % mod;||| 14 b >>= 1;||| 15 }||| 16 return res;||| 17 }||| 18 void solve() {||| 19 long long x, n;||| 20 cin >> x >> n;||| 21 if (n == 0) {||| 22 cout << x << '\n';||| 23 return;||| 24 }||| 25 if (x % 2 == 0) {||| 26 if (n % 4 == 0) {||| 27 cout << x << '\n';||| 28 return;||| 29 }||| 30 if (n % 4 == 1) {||| 31 cout << x - n << '\n';||| 32 return;||| 33 }||| 34 if (n % 4 == 2) {||| 35 cout << x + 1 << '\n';||| 36 return;||| 37 }||| 38 if (n % 4 == 3) {||| 39 cout << x + n + 1 << '\n';||| 40 return;||| 41 }||| 42 }||| 43 if (n % 4 == 0) {||| 44 cout << x << '\n';||| 45 return;||| 46 }||| 47 if (n % 4 == 1) {||| 48 cout << x + n << '\n';||| 49 return;||| 50 }||| 51 if (n % 4 == 2) {||| 52 cout << x - 1 << '\n';||| 53 return;||| 54 }||| 55 if (n % 4 == 3) {||| 56 cout << x - n - 1 << '\n';||| 57 return;||| 58 }||| 59 }||| 60 int main() {||| 61 ios_base::sync_with_stdio(false);||| 62 cin.tie(NULL);||| 63 cout.tie(NULL);||| 64 long long t;||| 65 cin >> t;||| 66 while (t--) {||| 67 solve();||| 68 }||| 69 return 0;||| 70 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long gcd(long long a, long long b) {||| 5 if (b == 0) return a;||| 6 return gcd(b, a % b);||| 7 }||| 8 long long pwr(long long a, long long b) {||| 9 a %= mod;||| 10 long long res = 1;||| 11 while (b > 0) {||| 12 if (b & 1) res = res * a % mod;||| 13 a = a * a % mod;||| 14 b >>= 1;||| 15 }||| 16 return res;||| 17 }||| 18 void solve() {||| 19 long long x, n;||| 20 cin >> x >> n;||| 21 if (n == 0) {||| 22 cout << x << '\n';||| 23 return;||| 24 }||| 25 if (x % 2 == 0) {||| 26 if (n % 4 == 0) {||| 27 cout << 0 << '\n';||| 28 return;||| 29 }||| 30 if (n % 4 == 1) {||| 31 cout << x - n << '\n';||| 32 return;||| 33 }||| 34 if (n % 4 == 2) {||| 35 cout << x + 1 << '\n';||| 36 return;||| 37 }||| 38 if (n % 4 == 3) {||| 39 cout << x + n + 1 << '\n';||| 40 return;||| 41 }||| 42 }||| 43 if (n % 4 == 0) {||| 44 cout << 0 << '\n';||| 45 return;||| 46 }||| 47 if (n % 4 == 1) {||| 48 cout << x + n << '\n';||| 49 return;||| 50 }||| 51 if (n % 4 == 2) {||| 52 cout << x - 1 << '\n';||| 53 return;||| 54 }||| 55 if (n % 4 == 3) {||| 56 cout << x - n - 1 << '\n';||| 57 return;||| 58 }||| 59 }||| 60 int main() {||| 61 ios_base::sync_with_stdio(false);||| 62 cin.tie(NULL);||| 63 cout.tie(NULL);||| 64 long long t;||| 65 cin >> t;||| 66 while (t--) {||| 67 solve();||| 68 }||| 69 return 0;||| 70 }||| 	27 cout << x << '\n';
99	29	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 5e5 + 10;||| 4 void fast() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 int32_t main() {||| 10 fast();||| 11 long long t, z;||| 12 cin >> t;||| 13 for (long long z = 1; z < t + 1; z++) {||| 14 long long x, n;||| 15 long long ex;||| 16 cin >> x >> n;||| 17 if (abs(x) % 2)||| 18 ex = x - 1;||| 19 else||| 20 ex = x;||| 21 long long ans;||| 22 if (abs(x) % 2) {||| 23 if (n % 4 == 0)||| 24 ans = 1;||| 25 else if (n % 4 == 1)||| 26 ans = n + 1;||| 27 else if (n % 4 == 2)||| 28 ans = 0;||| 29 else||| 30 ans = -n;||| 31 } else {||| 32 if (n % 4 == 0)||| 33 ans = 0;||| 34 else if (n % 4 == 1)||| 35 ans = -n;||| 36 else if (n % 4 == 2)||| 37 ans = 1;||| 38 else||| 39 ans = n + 1;||| 40 }||| 41 ans += ex;||| 42 cout << ans << ""\n"";||| 43 }||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 5e5 + 10;||| 4 void fast() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 int32_t main() {||| 10 fast();||| 11 long long t, z;||| 12 cin >> t;||| 13 for (long long z = 1; z < t + 1; z++) {||| 14 long long x, n;||| 15 long long ex;||| 16 cin >> x >> n;||| 17 if (abs(x) % 2)||| 18 ex = x - 1;||| 19 else||| 20 ex = x;||| 21 long long ans;||| 22 if (abs(x) % 2) {||| 23 if (n % 4 == 0)||| 24 ans = 1;||| 25 else if (n % 4 == 1)||| 26 ans = n + 1;||| 27 else if (n % 4 == 2)||| 28 ans = 6;||| 29 else||| 30 ans = -n;||| 31 } else {||| 32 if (n % 4 == 0)||| 33 ans = 0;||| 34 else if (n % 4 == 1)||| 35 ans = -n;||| 36 else if (n % 4 == 2)||| 37 ans = 1;||| 38 else||| 39 ans = n + 1;||| 40 }||| 41 ans += ex;||| 42 cout << ans << ""\n"";||| 43 }||| 44 }||| "	28 ans = 0;
99	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 long long x, n, a, ans;||| 8 scanf(""%lld%lld"", &x, &n);||| 9 if (x % 2 == 0) {||| 10 a = n % 4;||| 11 ans = (a == 1 ? x - n : a == 2 ? x + 1 : a == 3 ? x + 1 + n : x);||| 12 } else {||| 13 a = n % 4;||| 14 ans = (a == 1 ? x + n : a == 2 ? x - 1 : a == 3 ? x - 1 - n : x);||| 15 }||| 16 printf(""%lld\n"", ans);||| 17 }||| 18 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 long long x, n, a, ans;||| 8 scanf(""%lld%lld"", &x, &n);||| 9 if (x % 2 == 0) {||| 10 a = n % 4;||| 11 ans = (a == 1 ? x - n : a == 2 ? x + 1 : a == 3 ? x + 1 + n : a);||| 12 } else {||| 13 a = n % 4;||| 14 ans = (a == 1 ? x + n : a == 2 ? x - 1 : a == 3 ? x - 1 - n : x);||| 15 }||| 16 printf(""%lld\n"", ans);||| 17 }||| 18 }||| "	11 ans = (a == 1 ? x - n : a == 2 ? x + 1 : a == 3 ? x + 1 + n : x);
99	83	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long x, n;||| 8 cin >> x >> n;||| 9 if (n == 0) {||| 10 cout << x << endl;||| 11 continue;||| 12 }||| 13 long long xxx = n - 1;||| 14 long long t2 = xxx % 4;||| 15 long long temp = (xxx / 4);||| 16 long long n1, n2, n3, n4;||| 17 if (t2 == 0) {||| 18 n1 = n2 = n3 = n4 = temp;||| 19 } else if (t2 == 1) {||| 20 n1 = temp + 1;||| 21 n2 = n3 = n4 = temp;||| 22 } else if (t2 == 2) {||| 23 n1 = n2 = (temp + 1);||| 24 n3 = n4 = temp;||| 25 } else if (t2 == 3) {||| 26 n1 = n2 = n3 = (temp + 1);||| 27 n4 = temp;||| 28 }||| 29 long long s1 = (n1 * (4 * n1)) / 2;||| 30 long long s2 = (n2 * (2 + 4 * n2)) / 2;||| 31 long long s3 = (n3 * (4 + 4 * n3)) / 2;||| 32 long long s4 = (n4 * (6 + 4 * n4)) / 2;||| 33 if (x % 2 == 0) {||| 34 x += s1 + s2;||| 35 x -= (1 + s3 + s4);||| 36 } else {||| 37 x += (1 + s3 + s4);||| 38 x -= (s1 + s2);||| 39 }||| 40 cout << x << endl;||| 41 }||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long x, n;||| 8 cin >> x >> n;||| 9 if (n == 0) {||| 10 cout << x << endl;||| 11 }||| 12 long long xxx = n - 1;||| 13 long long t2 = xxx % 4;||| 14 long long temp = (xxx / 4);||| 15 long long n1, n2, n3, n4;||| 16 if (t2 == 0) {||| 17 n1 = n2 = n3 = n4 = temp;||| 18 } else if (t2 == 1) {||| 19 n1 = temp + 1;||| 20 n2 = n3 = n4 = temp;||| 21 } else if (t2 == 2) {||| 22 n1 = n2 = (temp + 1);||| 23 n3 = n4 = temp;||| 24 } else if (t2 == 3) {||| 25 n1 = n2 = n3 = (temp + 1);||| 26 n4 = temp;||| 27 }||| 28 long long s1 = (n1 * (4 * n1)) / 2;||| 29 long long s2 = (n2 * (2 + 4 * n2)) / 2;||| 30 long long s3 = (n3 * (4 + 4 * n3)) / 2;||| 31 long long s4 = (n4 * (6 + 4 * n4)) / 2;||| 32 if (x % 2 == 0) {||| 33 x += s1 + s2;||| 34 x -= (1 + s3 + s4);||| 35 } else {||| 36 x += (1 + s3 + s4);||| 37 x -= (s1 + s2);||| 38 }||| 39 cout << x << endl;||| 40 }||| 41 }||| 	11 continue;
99	141	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, x, y;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> x >> y;||| 8 if (x % 2 == 0) {||| 9 if (y % 4 == 0) {||| 10 cout << x << endl;||| 11 } else if (y % 4 == 1) {||| 12 cout << x - y << endl;||| 13 } else if (y % 4 == 2) {||| 14 cout << x + 1 << endl;||| 15 } else if (y % 4 == 3) {||| 16 cout << (x + 1) + y << endl;||| 17 }||| 18 } else {||| 19 if (y % 4 == 0) {||| 20 cout << x << endl;||| 21 } else if (y % 4 == 1) {||| 22 cout << x + y << endl;||| 23 } else if (y % 4 == 2) {||| 24 cout << x - 1 << endl;||| 25 } else if (y % 4 == 3) {||| 26 cout << (x - 1) - y << endl;||| 27 }||| 28 }||| 29 }||| 30 return 0;||| 31 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, x, y;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> x >> y;||| 8 if (x % 2 == 0) {||| 9 if (y % 4 == 0) {||| 10 cout << y << endl;||| 11 } else if (y % 4 == 1) {||| 12 cout << x - y << endl;||| 13 } else if (y % 4 == 2) {||| 14 cout << x + 1 << endl;||| 15 } else if (y % 4 == 3) {||| 16 cout << (x + 1) + y << endl;||| 17 }||| 18 } else {||| 19 if (y % 4 == 0) {||| 20 cout << x << endl;||| 21 } else if (y % 4 == 1) {||| 22 cout << x + y << endl;||| 23 } else if (y % 4 == 2) {||| 24 cout << x - 1 << endl;||| 25 } else if (y % 4 == 3) {||| 26 cout << (x - 1) - y << endl;||| 27 }||| 28 }||| 29 }||| 30 return 0;||| 31 }||| 	10 cout << x << endl;
99	30	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int main() {||| 5 int T;||| 6 for (cin >> T; T; T -= 1) {||| 7 LL x, n;||| 8 cin >> x >> n;||| 9 LL n2 = n / 4 * 4;||| 10 while (n2 < n) {||| 11 if (x % 2 == 0) {||| 12 x -= n2 + 1;||| 13 } else||| 14 x += n2 + 1;||| 15 n2++;||| 16 }||| 17 cout << x << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int main() {||| 5 int T;||| 6 for (cin >> T; T; T -= 1) {||| 7 LL x, n;||| 8 cin >> x >> n;||| 9 LL n2 = n / 4 * 4;||| 10 while (n2 < n) {||| 11 if (x % 2 == 0) {||| 12 x -= n2 + 1;||| 13 } else||| 14 x += n2 + 1;||| 15 n2++;||| 16 }||| 17 cout << n2 << endl;||| 18 }||| 19 return 0;||| 20 }||| 	17 cout << x << endl;
99	176	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T>||| 17 void _print(unordered_set<T> v);||| 18 template <class T, class V>||| 19 void _print(map<T, V> v);||| 20 template <class T, class V>||| 21 void _print(unordered_map<T, V> v);||| 22 template <class T>||| 23 void _print(multiset<T> v);||| 24 template <class T, class V>||| 25 void _print(pair<T, V> p) {||| 26 cerr << ""{"";||| 27 _print(p.first);||| 28 cerr << "","";||| 29 _print(p.second);||| 30 cerr << ""}"";||| 31 }||| 32 template <class T>||| 33 void _print(vector<T> v) {||| 34 cerr << ""[ "";||| 35 for (T i : v) {||| 36 _print(i);||| 37 cerr << "" "";||| 38 }||| 39 cerr << ""]"";||| 40 }||| 41 template <class T>||| 42 void _print(set<T> v) {||| 43 cerr << ""[ "";||| 44 for (T i : v) {||| 45 _print(i);||| 46 cerr << "" "";||| 47 }||| 48 cerr << ""]"";||| 49 }||| 50 template <class T>||| 51 void _print(unordered_set<T> v) {||| 52 cerr << ""[ "";||| 53 for (T i : v) {||| 54 _print(i);||| 55 cerr << "" "";||| 56 }||| 57 cerr << ""]"";||| 58 }||| 59 template <class T>||| 60 void _print(multiset<T> v) {||| 61 cerr << ""[ "";||| 62 for (T i : v) {||| 63 _print(i);||| 64 cerr << "" "";||| 65 }||| 66 cerr << ""]"";||| 67 }||| 68 template <class T, class V>||| 69 void _print(map<T, V> v) {||| 70 cerr << ""[ "";||| 71 for (auto i : v) {||| 72 _print(i);||| 73 cerr << "" "";||| 74 }||| 75 cerr << ""]"";||| 76 }||| 77 template <class T, class V>||| 78 void _print(unordered_map<T, V> v) {||| 79 cerr << ""[ "";||| 80 for (auto i : v) {||| 81 _print(i);||| 82 cerr << "" "";||| 83 }||| 84 cerr << ""]"";||| 85 }||| 86 void file_i_o() {||| 87 ios_base::sync_with_stdio(0);||| 88 cin.tie(0);||| 89 cout.tie(0);||| 90 }||| 91 void solve() {||| 92 long long x0, n;||| 93 cin >> x0 >> n;||| 94 long long rem = 4 * (n / 4);||| 95 while (rem < n) {||| 96 if (x0 % 2 == 0)||| 97 x0 -= (rem + 1);||| 98 else||| 99 x0 += (rem + 1);||| 100 rem++;||| 101 }||| 102 cout << x0 << ""\n"";||| 103 }||| 104 int main() {||| 105 clock_t begin = clock();||| 106 file_i_o();||| 107 int t = 1;||| 108 cin >> t;||| 109 while (t-- > 0) {||| 110 solve();||| 111 }||| 112 return 0;||| 113 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T>||| 17 void _print(unordered_set<T> v);||| 18 template <class T, class V>||| 19 void _print(map<T, V> v);||| 20 template <class T, class V>||| 21 void _print(unordered_map<T, V> v);||| 22 template <class T>||| 23 void _print(multiset<T> v);||| 24 template <class T, class V>||| 25 void _print(pair<T, V> p) {||| 26 cerr << ""{"";||| 27 _print(p.first);||| 28 cerr << "","";||| 29 _print(p.second);||| 30 cerr << ""}"";||| 31 }||| 32 template <class T>||| 33 void _print(vector<T> v) {||| 34 cerr << ""[ "";||| 35 for (T i : v) {||| 36 _print(i);||| 37 cerr << "" "";||| 38 }||| 39 cerr << ""]"";||| 40 }||| 41 template <class T>||| 42 void _print(set<T> v) {||| 43 cerr << ""[ "";||| 44 for (T i : v) {||| 45 _print(i);||| 46 cerr << "" "";||| 47 }||| 48 cerr << ""]"";||| 49 }||| 50 template <class T>||| 51 void _print(unordered_set<T> v) {||| 52 cerr << ""[ "";||| 53 for (T i : v) {||| 54 _print(i);||| 55 cerr << "" "";||| 56 }||| 57 cerr << ""]"";||| 58 }||| 59 template <class T>||| 60 void _print(multiset<T> v) {||| 61 cerr << ""[ "";||| 62 for (T i : v) {||| 63 _print(i);||| 64 cerr << "" "";||| 65 }||| 66 cerr << ""]"";||| 67 }||| 68 template <class T, class V>||| 69 void _print(map<T, V> v) {||| 70 cerr << ""[ "";||| 71 for (auto i : v) {||| 72 _print(i);||| 73 cerr << "" "";||| 74 }||| 75 cerr << ""]"";||| 76 }||| 77 template <class T, class V>||| 78 void _print(unordered_map<T, V> v) {||| 79 cerr << ""[ "";||| 80 for (auto i : v) {||| 81 _print(i);||| 82 cerr << "" "";||| 83 }||| 84 cerr << ""]"";||| 85 }||| 86 void file_i_o() {||| 87 ios_base::sync_with_stdio(0);||| 88 cin.tie(0);||| 89 cout.tie(0);||| 90 }||| 91 void solve() {||| 92 int x0, n;||| 93 cin >> x0 >> n;||| 94 long long rem = 4 * (n / 4);||| 95 while (rem < n) {||| 96 if (x0 % 2 == 0)||| 97 x0 -= (rem + 1);||| 98 else||| 99 x0 += (rem + 1);||| 100 rem++;||| 101 }||| 102 cout << x0 << ""\n"";||| 103 }||| 104 int main() {||| 105 clock_t begin = clock();||| 106 file_i_o();||| 107 int t = 1;||| 108 cin >> t;||| 109 while (t-- > 0) {||| 110 solve();||| 111 }||| 112 return 0;||| 113 }||| "	92 long long x0, n;
99	183	1 #include <bits/stdc++.h>||| 2 const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};||| 3 using namespace std;||| 4 void solve() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long x, n, ans = 0, final;||| 9 cin >> x >> n;||| 10 final = n % 4;||| 11 if (final == 0) {||| 12 cout << x << endl;||| 13 } else if (x % 2 == 0) {||| 14 if (final == 1) {||| 15 ans = x - (n);||| 16 } else if (final == 2) {||| 17 ans = x + 1;||| 18 } else if (final == 3) {||| 19 ans = x + 1 + n;||| 20 }||| 21 cout << ans << endl;||| 22 } else {||| 23 if (final == 1) {||| 24 ans = x + (n);||| 25 } else if (final == 2) {||| 26 ans = x - 1;||| 27 } else if (final == 3) {||| 28 ans = x - 1 - n;||| 29 }||| 30 cout << ans << endl;||| 31 }||| 32 }||| 33 }||| 34 int main() {||| 35 ios_base::sync_with_stdio(false);||| 36 cin.tie(NULL);||| 37 solve();||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};||| 3 using namespace std;||| 4 void solve() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long x, n, ans = 0, final;||| 9 cin >> x >> n;||| 10 final = n % 4;||| 11 if (final == 0) {||| 12 cout << 0 << endl;||| 13 } else if (x % 2 == 0) {||| 14 if (final == 1) {||| 15 ans = x - (n);||| 16 } else if (final == 2) {||| 17 ans = x + 1;||| 18 } else if (final == 3) {||| 19 ans = x + 1 + n;||| 20 }||| 21 cout << ans << endl;||| 22 } else {||| 23 if (final == 1) {||| 24 ans = x + (n);||| 25 } else if (final == 2) {||| 26 ans = x - 1;||| 27 } else if (final == 3) {||| 28 ans = x - 1 - n;||| 29 }||| 30 cout << ans << endl;||| 31 }||| 32 }||| 33 }||| 34 int main() {||| 35 ios_base::sync_with_stdio(false);||| 36 cin.tie(NULL);||| 37 solve();||| 38 }||| 	12 cout << x << endl;
99	217	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int q;||| 4 long long x, n, tmp;||| 5 int main() {||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> x >> n;||| 9 tmp = n % 4;||| 10 n -= tmp;||| 11 if (tmp == 0) {||| 12 cout << x << ""\n"";||| 13 continue;||| 14 }||| 15 if (x % 2 != 0) {||| 16 x += n + 1;||| 17 for (int i = 2; i <= tmp; i++) x -= n + i;||| 18 } else {||| 19 x -= n + 1;||| 20 for (int i = 2; i <= tmp; i++) x += n + i;||| 21 }||| 22 cout << x << ""\n"";||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int q;||| 4 long long x, n, tmp;||| 5 int main() {||| 6 cin >> q;||| 7 while (q--) {||| 8 cin >> x >> n;||| 9 tmp = n % 4;||| 10 n -= tmp;||| 11 if (tmp == 0) {||| 12 cout << x << ""\n"";||| 13 continue;||| 14 }||| 15 if (x % 2 == 0) {||| 16 x += n + 1;||| 17 for (int i = 2; i <= tmp; i++) x -= n + i;||| 18 } else {||| 19 x -= n + 1;||| 20 for (int i = 2; i <= tmp; i++) x += n + i;||| 21 }||| 22 cout << x << ""\n"";||| 23 }||| 24 return 0;||| 25 }||| "	15 if (x % 2 != 0) {
100	127	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, k, sum = 0, c = 0, mn = INT_MIN, m;||| 8 cin >> n;||| 9 long long a[n];||| 10 for (long long i = 0; i < n; i++) cin >> a[i];||| 11 sort(a, a + n);||| 12 if (n == 2) {||| 13 cout << max(a[0], a[1] - a[0]) << endl;||| 14 } else {||| 15 for (long long i = 0; i < n - 1; i++) {||| 16 m = a[i + 1] - a[i];||| 17 mn = max(m, mn);||| 18 }||| 19 mn = max(mn, a[0]);||| 20 cout << mn << endl;||| 21 }||| 22 }||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, k, sum = 0, c = 0, mn = INT_MIN, m;||| 8 cin >> n;||| 9 long long a[n];||| 10 for (long long i = 0; i < n; i++) cin >> a[i];||| 11 sort(a, a + n);||| 12 if (n == 2) {||| 13 cout << max(a[0], a[1] - a[0]) << endl;||| 14 } else {||| 15 for (long long i = 1; i < n - 1; i++) {||| 16 m = a[i + 1] - a[i];||| 17 mn = max(m, mn);||| 18 }||| 19 mn = max(mn, a[0]);||| 20 cout << mn << endl;||| 21 }||| 22 }||| 23 }||| 	15 for (long long i = 0; i < n - 1; i++) {
100	186	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 sort((a).begin(), (a).end());||| 9 long long vic = 0;||| 10 long long mn = a[0];||| 11 for (long long j = 0; j < n - 1; ++j) {||| 12 vic += (a[j] - vic);||| 13 mn = max(mn, a[j + 1] - vic);||| 14 }||| 15 cout << mn << '\n';||| 16 }||| 17 signed main() {||| 18 ios_base::sync_with_stdio(0);||| 19 long long n;||| 20 cin >> n;||| 21 for (long long i = 0; i < n; ++i) {||| 22 solve();||| 23 }||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 sort((a).begin(), (a).end());||| 9 long long vic = 0;||| 10 long long mn = a[0];||| 11 for (long long j = 0; j < n - 1; ++j) {||| 12 vic -= (a[j] - vic);||| 13 mn = max(mn, a[j + 1] - vic);||| 14 }||| 15 cout << mn << '\n';||| 16 }||| 17 signed main() {||| 18 ios_base::sync_with_stdio(0);||| 19 long long n;||| 20 cin >> n;||| 21 for (long long i = 0; i < n; ++i) {||| 22 solve();||| 23 }||| 24 }||| 	12 vic += (a[j] - vic);
100	247	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 size_t t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n;||| 8 cin >> n;||| 9 vector<long long> a(n);||| 10 for (size_t i = 0; i < n; ++i) {||| 11 cin >> a[i];||| 12 }||| 13 if (a.size() == 1) {||| 14 cout << a[0] << endl;||| 15 continue;||| 16 }||| 17 sort(a.begin(), a.end());||| 18 long long s = 0;||| 19 long long res = 0;||| 20 size_t i;||| 21 for (i = 0; i < n - 1; ++i) {||| 22 if (a[i] + s <= 0) {||| 23 s -= a[i] + s;||| 24 continue;||| 25 }||| 26 break;||| 27 }||| 28 vector<long long> diffs(n - i + 1);||| 29 diffs[0] = a[i] + s;||| 30 for (size_t j = i; j < n - 1; ++j) {||| 31 diffs[j - i + 1] = a[j + 1] - a[j];||| 32 }||| 33 cout << *max_element(diffs.begin(), diffs.end()) << endl;||| 34 }||| 35 return 0;||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 size_t t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n;||| 8 cin >> n;||| 9 vector<long long> a(n);||| 10 for (size_t i = 0; i < n; ++i) {||| 11 cin >> a[i];||| 12 }||| 13 if (a.size() == 1) {||| 14 cout << a[0] << endl;||| 15 }||| 16 sort(a.begin(), a.end());||| 17 long long s = 0;||| 18 long long res = 0;||| 19 size_t i;||| 20 for (i = 0; i < n - 1; ++i) {||| 21 if (a[i] + s <= 0) {||| 22 s -= a[i] + s;||| 23 continue;||| 24 }||| 25 break;||| 26 }||| 27 vector<long long> diffs(n - i + 1);||| 28 diffs[0] = a[i] + s;||| 29 for (size_t j = i; j < n - 1; ++j) {||| 30 diffs[j - i + 1] = a[j + 1] - a[j];||| 31 }||| 32 cout << *max_element(diffs.begin(), diffs.end()) << endl;||| 33 }||| 34 return 0;||| 35 }||| 	15 continue;
101	40	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, mx = 1e12;||| 8 cin >> n;||| 9 long long a[n + 2];||| 10 string s;||| 11 set<pair<long long, long long>> red, blue;||| 12 for (long long i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 char ch;||| 16 for (long long i = 1; i <= n; i++) {||| 17 cin >> ch;||| 18 if (ch == 'R') {||| 19 red.insert({-a[i], i});||| 20 } else {||| 21 blue.insert({a[i], i});||| 22 }||| 23 }||| 24 red.insert({mx, mx});||| 25 red.insert({-mx, mx});||| 26 blue.insert({-mx, mx});||| 27 blue.insert({mx, mx});||| 28 bool flag = true;||| 29 for (long long i = 1; i <= n; i++) {||| 30 auto p1 = blue.upper_bound({i, -mx});||| 31 long long valu = p1->first;||| 32 if (valu == i) {||| 33 blue.erase(blue.find({p1->first, p1->second}));||| 34 continue;||| 35 }||| 36 if (valu != mx) {||| 37 blue.erase(blue.find({p1->first, p1->second}));||| 38 continue;||| 39 }||| 40 auto p = red.lower_bound({-i, -mx});||| 41 long long val = abs(p->first);||| 42 if (val == i) {||| 43 red.erase(red.find({p->first, p->second}));||| 44 continue;||| 45 }||| 46 if (val != mx) {||| 47 red.erase(red.find({p->first, p->second}));||| 48 continue;||| 49 }||| 50 flag = false;||| 51 break;||| 52 }||| 53 if (flag)||| 54 cout << ""YES"" << '\n';||| 55 else||| 56 cout << ""NO"" << '\n';||| 57 }||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, mx = 1e12;||| 8 cin >> n;||| 9 long long a[n + 2];||| 10 string s;||| 11 set<pair<long long, long long>> red, blue;||| 12 for (long long i = 1; i <= n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 char ch;||| 16 for (long long i = 1; i <= n; i++) {||| 17 cin >> ch;||| 18 if (ch == 'R') {||| 19 red.insert({-a[i], i});||| 20 } else {||| 21 blue.insert({a[i], i});||| 22 }||| 23 }||| 24 red.insert({mx, mx});||| 25 red.insert({-mx, mx});||| 26 blue.insert({-mx, mx});||| 27 blue.insert({mx, mx});||| 28 bool flag = true;||| 29 for (long long i = 1; i <= n; i++) {||| 30 auto p1 = blue.upper_bound({i, -mx});||| 31 long long valu = p1->first;||| 32 if (valu == i) {||| 33 blue.erase(blue.find({p1->first, p1->second}));||| 34 continue;||| 35 }||| 36 if (valu != mx) {||| 37 blue.erase(blue.find({p1->first, p1->second}));||| 38 continue;||| 39 auto p = red.lower_bound({-i, -mx});||| 40 long long val = abs(p->first);||| 41 if (val == i) {||| 42 red.erase(red.find({p->first, p->second}));||| 43 continue;||| 44 }||| 45 if (val != mx) {||| 46 red.erase(red.find({p->first, p->second}));||| 47 continue;||| 48 }||| 49 flag = false;||| 50 break;||| 51 }||| 52 if (flag)||| 53 cout << ""YES"" << '\n';||| 54 else||| 55 cout << ""NO"" << '\n';||| 56 }||| 57 }||| 58 }||| "	39 }
101	211	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void testcase();||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 cout << setprecision(15);||| 9 cout << fixed;||| 10 long long t;||| 11 cin >> t;||| 12 while (t--) testcase();||| 13 return 0;||| 14 }||| 15 typedef struct element {||| 16 long long data;||| 17 char color;||| 18 } box;||| 19 void testcase() {||| 20 long long n;||| 21 cin >> n;||| 22 box a[n];||| 23 for (long long i = 0; i < n; i++) {||| 24 cin >> a[i].data;||| 25 }||| 26 char color[n];||| 27 for (long long i = 0; i < n; i++) {||| 28 cin >> a[i].color;||| 29 }||| 30 box blue[n];||| 31 box red[n];||| 32 long long redindex = 0;||| 33 long long blueindex = 0;||| 34 for (long long i = 0; i < n; i++) {||| 35 if (a[i].color == 'B') {||| 36 blue[blueindex] = a[i];||| 37 blueindex++;||| 38 } else if (a[i].color == 'R') {||| 39 red[redindex] = a[i];||| 40 redindex++;||| 41 }||| 42 }||| 43 long long rednumber[n + 2], bluenumber[n + 2];||| 44 for (long long i = 0; i < n + 2; i++) {||| 45 rednumber[i] = 0;||| 46 bluenumber[i] = 0;||| 47 }||| 48 for (long long i = 0; i < blueindex; i++) {||| 49 if (blue[i].data <= 0) {||| 50 bluenumber[0]++;||| 51 } else if (blue[i].data > n) {||| 52 bluenumber[n + 1]++;||| 53 } else {||| 54 bluenumber[blue[i].data]++;||| 55 }||| 56 }||| 57 for (long long i = 0; i < redindex; i++) {||| 58 if (red[i].data <= 0) {||| 59 rednumber[0]++;||| 60 } else if (red[i].data > n) {||| 61 rednumber[n + 1]++;||| 62 } else {||| 63 rednumber[red[i].data]++;||| 64 }||| 65 }||| 66 for (long long i = 1; i < n + 2; i++) {||| 67 bluenumber[i] += bluenumber[i - 1];||| 68 }||| 69 for (long long i = n; i >= 0; i--) {||| 70 rednumber[i] += rednumber[i + 1];||| 71 }||| 72 long long flag = 1;||| 73 for (long long i = 0; i < n + 2; i++) {||| 74 if (bluenumber[i] > i) {||| 75 flag = 0;||| 76 }||| 77 if (rednumber[i] > (n + 1 - i)) {||| 78 flag = 0;||| 79 }||| 80 }||| 81 if (0 == flag) {||| 82 cout << ""NO"" << endl;||| 83 } else {||| 84 cout << ""YES"" << endl;||| 85 }||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void testcase();||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 cout << setprecision(15);||| 9 cout << fixed;||| 10 long long t;||| 11 cin >> t;||| 12 while (t--) testcase();||| 13 return 0;||| 14 }||| 15 typedef struct element {||| 16 long long data;||| 17 char color;||| 18 } box;||| 19 void testcase() {||| 20 long long n;||| 21 cin >> n;||| 22 box a[n];||| 23 for (long long i = 0; i < n; i++) {||| 24 cin >> a[i].data;||| 25 }||| 26 char color[n];||| 27 for (long long i = 0; i < n; i++) {||| 28 cin >> a[i].color;||| 29 }||| 30 box blue[n];||| 31 box red[n];||| 32 long long redindex = 0;||| 33 long long blueindex = 0;||| 34 for (long long i = 0; i < n; i++) {||| 35 if (a[i].color == 'B') {||| 36 blue[blueindex] = a[i];||| 37 blueindex++;||| 38 } else if (a[i].color == 'R') {||| 39 red[redindex] = a[i];||| 40 redindex++;||| 41 }||| 42 }||| 43 long long rednumber[n + 2], bluenumber[n + 2];||| 44 for (long long i = 0; i < n + 2; i++) {||| 45 rednumber[i] = 0;||| 46 bluenumber[i] = 0;||| 47 }||| 48 for (long long i = 0; i < blueindex; i++) {||| 49 if (blue[i].data <= 0) {||| 50 rednumber[0]++;||| 51 } else if (blue[i].data > n) {||| 52 bluenumber[n + 1]++;||| 53 } else {||| 54 bluenumber[blue[i].data]++;||| 55 }||| 56 }||| 57 for (long long i = 0; i < redindex; i++) {||| 58 if (red[i].data <= 0) {||| 59 rednumber[0]++;||| 60 } else if (red[i].data > n) {||| 61 rednumber[n + 1]++;||| 62 } else {||| 63 rednumber[red[i].data]++;||| 64 }||| 65 }||| 66 for (long long i = 1; i < n + 2; i++) {||| 67 bluenumber[i] += bluenumber[i - 1];||| 68 }||| 69 for (long long i = n; i >= 0; i--) {||| 70 rednumber[i] += rednumber[i + 1];||| 71 }||| 72 long long flag = 1;||| 73 for (long long i = 0; i < n + 2; i++) {||| 74 if (bluenumber[i] > i) {||| 75 flag = 0;||| 76 }||| 77 if (rednumber[i] > (n + 1 - i)) {||| 78 flag = 0;||| 79 }||| 80 }||| 81 if (0 == flag) {||| 82 cout << ""NO"" << endl;||| 83 } else {||| 84 cout << ""YES"" << endl;||| 85 }||| 86 }||| "	50 bluenumber[0]++;
102	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int x[1000005], y[1000005];||| 4 int main() {||| 5 int t, n, m, cntx, cnty, mnx, mny, mxx, mxy, okx, oky;||| 6 string s;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n >> m;||| 10 cin >> s;||| 11 cntx = 1;||| 12 cnty = 1;||| 13 mnx = 0;||| 14 mny = 0;||| 15 mxx = 0;||| 16 mxy = 0;||| 17 okx = 0;||| 18 oky = 0;||| 19 if (mxx - mnx + 1 == n) okx = 1;||| 20 if (mxy - mny + 1 == m) oky = 1;||| 21 for (int i = 0; i < s.size(); i++) {||| 22 if (s[i] == 'L') {||| 23 y[cnty] = y[cnty - 1] - 1;||| 24 if (oky == 1 && (y[cnty] < mny || y[cnty] > mxy)) break;||| 25 mny = min(mny, y[cnty]);||| 26 mxy = max(mxy, y[cnty]);||| 27 cnty++;||| 28 } else if (s[i] == 'R') {||| 29 y[cnty] = y[cnty - 1] + 1;||| 30 if (oky == 1 && (y[cnty] < mny || y[cnty] > mxy)) break;||| 31 mxy = max(mxy, y[cnty]);||| 32 mny = min(mny, y[cnty]);||| 33 cnty++;||| 34 } else if (s[i] == 'U') {||| 35 x[cntx] = x[cntx - 1] - 1;||| 36 if (okx == 1 && (x[cntx] < mnx || x[cntx] > mxx)) break;||| 37 mnx = min(mnx, x[cntx]);||| 38 mxx = max(mxx, x[cntx]);||| 39 cntx++;||| 40 } else {||| 41 x[cntx] = x[cntx - 1] + 1;||| 42 if (okx == 1 && (x[cntx] < mnx || x[cntx] > mxx)) break;||| 43 mxx = max(mxx, x[cntx]);||| 44 mnx = min(mnx, x[cntx]);||| 45 cntx++;||| 46 }||| 47 if (mxx - mnx + 1 == n) okx = 1;||| 48 if (mxy - mny + 1 == m) oky = 1;||| 49 }||| 50 cout << n - mxx << "" "" << m - mxy << '\n';||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int x[1000005], y[1000005];||| 4 int main() {||| 5 int t, n, m, cntx, cnty, mnx, mny, mxx, mxy, okx, oky;||| 6 string s;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n >> m;||| 10 cin >> s;||| 11 cntx = 1;||| 12 cnty = 1;||| 13 mnx = 0;||| 14 mny = 0;||| 15 mxx = 0;||| 16 mxy = 0;||| 17 okx = 0;||| 18 oky = 0;||| 19 if (mxx - mnx + 1 == n) okx = 1;||| 20 if (mxy - mny + 1 == m) oky = 1;||| 21 for (int i = 0; i < s.size(); i++) {||| 22 if (s[i] == 'L') {||| 23 y[cnty] = y[cnty - 1] - 1;||| 24 if (oky == 1 && (y[cnty] < mny || y[cnty] > mxy)) break;||| 25 mny = min(mny, y[cnty]);||| 26 mxy = max(mxy, y[cnty]);||| 27 cnty++;||| 28 } else if (s[i] == 'R') {||| 29 y[cnty] = y[cnty - 1] + 1;||| 30 if (oky == 1 && (y[cnty] < mny || y[cnty] > mxy)) break;||| 31 mxy = max(mxy, y[cnty]);||| 32 mny = min(mny, y[cnty]);||| 33 cnty++;||| 34 } else if (s[i] == 'U') {||| 35 x[cntx] = x[cntx - 1] - 1;||| 36 if (okx == 1 && (x[cntx] < mnx || x[cntx] > mxx)) break;||| 37 mnx = min(mnx, x[cntx]);||| 38 mxx = max(mxx, x[cntx]);||| 39 cntx++;||| 40 } else {||| 41 x[cntx] = y[cntx - 1] + 1;||| 42 if (okx == 1 && (x[cntx] < mnx || x[cntx] > mxx)) break;||| 43 mxx = max(mxx, x[cntx]);||| 44 mnx = min(mnx, x[cntx]);||| 45 cntx++;||| 46 }||| 47 if (mxx - mnx + 1 == n) okx = 1;||| 48 if (mxy - mny + 1 == m) oky = 1;||| 49 }||| 50 cout << n - mxx << "" "" << m - mxy << '\n';||| 51 }||| 52 return 0;||| 53 }||| "	41 x[cntx] = x[cntx - 1] + 1;
102	192	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 7;||| 4 char s[N];||| 5 void solve() {||| 6 int n, m;||| 7 cin >> n >> m;||| 8 scanf(""%s"", s + 1);||| 9 int x = 1, y = 1;||| 10 int dx = 0, dy = 0;||| 11 int len = strlen(s + 1);||| 12 int maxx = n, maxny = m;||| 13 for (register int i = 1; i <= len; ++i) {||| 14 if (s[i] == 'L')||| 15 dy--;||| 16 else if (s[i] == 'R')||| 17 dy++;||| 18 else if (s[i] == 'D')||| 19 dx++;||| 20 else||| 21 dx--;||| 22 if (1 - dx > maxx || n - dx < x || 1 - dy > maxny || m - dy < y) break;||| 23 x = max(1 - dx, x);||| 24 y = max(1 - dy, y);||| 25 maxx = min(maxx, n - dx);||| 26 maxny = min(maxny, m - dy);||| 27 }||| 28 cout << x << ' ' << y << '\n';||| 29 }||| 30 signed main() {||| 31 int T;||| 32 cin >> T;||| 33 while (T--) solve();||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 7;||| 4 char s[N];||| 5 void solve() {||| 6 int n, m;||| 7 cin >> n >> m;||| 8 scanf(""%s"", s + 1);||| 9 int x = 1, y = 1;||| 10 int dx = 0, dy = 0;||| 11 int len = strlen(s + 1);||| 12 int maxx = n, maxny = m;||| 13 for (register int i = 1; i <= len; ++i) {||| 14 if (s[i] == 'L')||| 15 dy--;||| 16 else if (s[i] == 'R')||| 17 dy++;||| 18 else if (s[i] == 'D')||| 19 dx++;||| 20 else||| 21 dx--;||| 22 if (1 - dx > maxx || n - dx < x || 1 - dy > maxny || m - dy < y) break;||| 23 x = max(1 - dx, x);||| 24 y = max(1 - dy, y);||| 25 maxx = min(maxx, n - dx);||| 26 maxny = min(maxny, n - dy);||| 27 }||| 28 cout << x << ' ' << y << '\n';||| 29 }||| 30 signed main() {||| 31 int T;||| 32 cin >> T;||| 33 while (T--) solve();||| 34 return 0;||| 35 }||| "	26 maxny = min(maxny, m - dy);
102	120	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 4;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 long long test = 1;||| 10 cin >> test;||| 11 while (test--) {||| 12 int n, m;||| 13 cin >> n >> m;||| 14 string s;||| 15 cin >> s;||| 16 int len = s.size();||| 17 int up = 0, down = 0, left = 0, right = 0;||| 18 int xcor = 0, ycor = 0;||| 19 int flag = 0;||| 20 int maxx = 0, minx = 0, miny = 0, maxy = 0;||| 21 for (int i = 0; i < len; i++) {||| 22 if (s[i] == 'L')||| 23 xcor--;||| 24 else if (s[i] == 'R')||| 25 xcor++;||| 26 else if (s[i] == 'U')||| 27 ycor++;||| 28 else||| 29 ycor--;||| 30 maxx = max(maxx, xcor);||| 31 minx = min(minx, xcor);||| 32 maxy = max(maxy, ycor);||| 33 miny = min(miny, ycor);||| 34 if (abs(maxx - minx) + 1 > m || abs(maxy - miny) + 1 > n) {||| 35 int x, y;||| 36 if (s[i] == 'L')||| 37 y = m - maxx, x = n + miny;||| 38 else if (s[i] == 'R')||| 39 y = m - maxx + 1, x = n + miny;||| 40 else if (s[i] == 'U')||| 41 x = n + miny, y = m - maxx;||| 42 else if (s[i] == 'D')||| 43 x = n + miny + 1, y = m - maxx;||| 44 cout << x << "" "" << y << endl;||| 45 flag = 1;||| 46 break;||| 47 }||| 48 }||| 49 if (flag == 0) {||| 50 cout << n + miny << "" "" << m - maxx << endl;||| 51 }||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 4;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 long long test = 1;||| 10 cin >> test;||| 11 while (test--) {||| 12 int n, m;||| 13 cin >> n >> m;||| 14 string s;||| 15 cin >> s;||| 16 int len = s.size();||| 17 int up = 0, down = 0, left = 0, right = 0;||| 18 int xcor = 0, ycor = 0;||| 19 int flag = 0;||| 20 int maxx = 0, minx = 0, miny = 0, maxy = 0;||| 21 for (int i = 0; i < len; i++) {||| 22 if (s[i] == 'L')||| 23 xcor--;||| 24 else if (s[i] == 'R')||| 25 xcor++;||| 26 else if (s[i] == 'U')||| 27 ycor++;||| 28 else||| 29 ycor--;||| 30 maxx = max(maxx, xcor);||| 31 minx = min(minx, xcor);||| 32 maxy = max(maxy, ycor);||| 33 miny = min(miny, ycor);||| 34 if (abs(maxx - minx) + 1 > m || abs(maxy - miny) + 1 > n) {||| 35 int x, y;||| 36 if (s[i] == 'L')||| 37 y = m - maxx, x = n + miny;||| 38 else if (s[i] == 'R')||| 39 y = m - maxx - 1, x = n + miny;||| 40 else if (s[i] == 'U')||| 41 x = n + miny, y = m - maxx;||| 42 else if (s[i] == 'D')||| 43 x = n + miny + 1, y = m - maxx;||| 44 cout << x << "" "" << y << endl;||| 45 flag = 1;||| 46 break;||| 47 }||| 48 }||| 49 if (flag == 0) {||| 50 cout << n + miny << "" "" << m - maxx << endl;||| 51 }||| 52 }||| 53 return 0;||| 54 }||| "	39 y = m - maxx + 1, x = n + miny;
103	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2010;||| 4 int n, m, cnt;||| 5 int dist[N][N];||| 6 bool st[N][N];||| 7 char g[N][N];||| 8 pair<int, int> p[N * N];||| 9 int dfs(int first, int second) {||| 10 p[++cnt] = {first, second};||| 11 if (first < 1 || first > n || second < 1 || second > m || st[first][second])||| 12 return dist[first][second];||| 13 st[first][second] = true;||| 14 auto &k = dist[first][second];||| 15 if (g[first][second] == 'U') k = dfs(first - 1, second) + 1;||| 16 if (g[first][second] == 'D') k = dfs(first + 1, second) + 1;||| 17 if (g[first][second] == 'L') k = dfs(first, second - 1) + 1;||| 18 if (g[first][second] == 'R') k = dfs(first, second + 1) + 1;||| 19 return dist[first][second];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m;||| 23 for (int i = 1; i <= n; i++)||| 24 for (int j = 1; j <= m; j++) cin >> g[i][j];||| 25 for (int i = 0; i <= n + 5; i++)||| 26 for (int j = 0; j <= m + 5; j++) st[i][j] = false, dist[i][j] = 0;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = 1; j <= m; j++) {||| 29 if (!st[i][j]) {||| 30 cnt = 0;||| 31 dfs(i, j);||| 32 pair<int, int> t = p[cnt];||| 33 for (int k = 1; k < cnt; k++)||| 34 if (t == p[k]) {||| 35 for (int h = k; h <= cnt; h++)||| 36 dist[p[h].first][p[h].second] = cnt - k;||| 37 }||| 38 }||| 39 }||| 40 int first = 0, second = 0, res = 0;||| 41 for (int i = 1; i <= n; i++)||| 42 for (int j = 1; j <= m; j++)||| 43 if (dist[i][j] > res) first = i, second = j, res = dist[i][j];||| 44 cout << first << "" "" << second << "" "" << res << endl;||| 45 }||| 46 int main() {||| 47 int T;||| 48 cin >> T;||| 49 while (T--) solve();||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2010;||| 4 int n, m, cnt;||| 5 int dist[N][N];||| 6 bool st[N][N];||| 7 char g[N][N];||| 8 pair<int, int> p[N * N];||| 9 int dfs(int first, int second) {||| 10 p[++cnt] = {first, second};||| 11 if (first < 1 || first > n || second < 1 || second > m || st[first][second])||| 12 return dist[first][second];||| 13 st[first][second] = true;||| 14 auto &k = dist[first][second];||| 15 if (g[first][second] == 'U') k = dfs(first - 1, second) + 1;||| 16 if (g[first][second] == 'D') k = dfs(first + 1, second) + 1;||| 17 if (g[first][second] == 'L') k = dfs(first, second - 1) + 1;||| 18 if (g[first][second] == 'R') k = dfs(first, second + 1) + 1;||| 19 return dist[first][second];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m;||| 23 for (int i = 1; i <= n; i++)||| 24 for (int j = 1; j <= m; j++) cin >> g[i][j];||| 25 for (int i = 0; i <= n + 5; i++)||| 26 for (int j = 0; j <= m + 5; j++) st[i][j] = false, dist[i][j] = 0;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = 1; j <= m; j++) {||| 29 if (!st[i][j]) {||| 30 cnt = 0;||| 31 dfs(i, j);||| 32 pair<int, int> t = p[cnt];||| 33 for (int k = 1; k <= cnt; k++)||| 34 if (t == p[k]) {||| 35 for (int h = k; h <= cnt; h++)||| 36 dist[p[h].first][p[h].second] = cnt - k;||| 37 }||| 38 }||| 39 }||| 40 int first = 0, second = 0, res = 0;||| 41 for (int i = 1; i <= n; i++)||| 42 for (int j = 1; j <= m; j++)||| 43 if (dist[i][j] > res) first = i, second = j, res = dist[i][j];||| 44 cout << first << "" "" << second << "" "" << res << endl;||| 45 }||| 46 int main() {||| 47 int T;||| 48 cin >> T;||| 49 while (T--) solve();||| 50 }||| "	33 for (int k = 1; k < cnt; k++)
103	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2010;||| 4 int n, m, cnt;||| 5 int dist[N][N];||| 6 bool st[N][N];||| 7 char g[N][N];||| 8 pair<int, int> p[N * N];||| 9 int dfs(int first, int second) {||| 10 p[++cnt] = {first, second};||| 11 if (first < 1 || first > n || second < 1 || second > m || st[first][second])||| 12 return dist[first][second];||| 13 st[first][second] = true;||| 14 auto &k = dist[first][second];||| 15 if (g[first][second] == 'U') k = dfs(first - 1, second) + 1;||| 16 if (g[first][second] == 'D') k = dfs(first + 1, second) + 1;||| 17 if (g[first][second] == 'L') k = dfs(first, second - 1) + 1;||| 18 if (g[first][second] == 'R') k = dfs(first, second + 1) + 1;||| 19 return dist[first][second];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m;||| 23 for (int i = 1; i <= n; i++)||| 24 for (int j = 1; j <= m; j++) cin >> g[i][j];||| 25 for (int i = 0; i <= n + 5; i++)||| 26 for (int j = 0; j <= m + 5; j++) st[i][j] = false, dist[i][j] = 0;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = 1; j <= m; j++) {||| 29 if (!st[i][j]) {||| 30 cnt = 0;||| 31 dfs(i, j);||| 32 pair<int, int> t = p[cnt];||| 33 for (int k = 1; k <= cnt; k++)||| 34 if (t == p[k]) {||| 35 for (int h = k; h < cnt; h++)||| 36 dist[p[h].first][p[h].second] = cnt - k;||| 37 }||| 38 }||| 39 }||| 40 int first = 0, second = 0, res = 0;||| 41 for (int i = 1; i <= n; i++)||| 42 for (int j = 1; j <= m; j++)||| 43 if (dist[i][j] > res) first = i, second = j, res = dist[i][j];||| 44 cout << first << "" "" << second << "" "" << res << endl;||| 45 }||| 46 int main() {||| 47 int T;||| 48 cin >> T;||| 49 while (T--) solve();||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2010;||| 4 int n, m, cnt;||| 5 int dist[N][N];||| 6 bool st[N][N];||| 7 char g[N][N];||| 8 pair<int, int> p[N * N];||| 9 int dfs(int first, int second) {||| 10 p[++cnt] = {first, second};||| 11 if (first < 1 || first > n || second < 1 || second > m || st[first][second])||| 12 return dist[first][second];||| 13 st[first][second] = true;||| 14 auto &k = dist[first][second];||| 15 if (g[first][second] == 'U') k = dfs(first - 1, second) + 1;||| 16 if (g[first][second] == 'D') k = dfs(first + 1, second) + 1;||| 17 if (g[first][second] == 'L') k = dfs(first, second - 1) + 1;||| 18 if (g[first][second] == 'R') k = dfs(first, second + 1) + 1;||| 19 return dist[first][second];||| 20 }||| 21 void solve() {||| 22 cin >> n >> m;||| 23 for (int i = 1; i <= n; i++)||| 24 for (int j = 1; j <= m; j++) cin >> g[i][j];||| 25 for (int i = 0; i <= n + 5; i++)||| 26 for (int j = 0; j <= m + 5; j++) st[i][j] = false, dist[i][j] = 0;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = 1; j <= m; j++) {||| 29 if (!st[i][j]) {||| 30 cnt = 0;||| 31 dfs(i, j);||| 32 pair<int, int> t = p[cnt];||| 33 for (int k = 1; k <= cnt; k++)||| 34 if (t == p[k]) {||| 35 for (int h = k; h <= cnt; h++)||| 36 dist[p[h].first][p[h].second] = cnt - k;||| 37 }||| 38 }||| 39 }||| 40 int first = 0, second = 0, res = 0;||| 41 for (int i = 1; i <= n; i++)||| 42 for (int j = 1; j <= m; j++)||| 43 if (dist[i][j] > res) first = i, second = j, res = dist[i][j];||| 44 cout << first << "" "" << second << "" "" << res << endl;||| 45 }||| 46 int main() {||| 47 int T;||| 48 cin >> T;||| 49 while (T--) solve();||| 50 }||| "	35 for (int h = k; h < cnt; h++)
104	55	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 const int M = 1000010;||| 5 const int INF = 0x3f3f3f3f;||| 6 const int mod = 998244353;||| 7 pair<int, int> a[N], c[N];||| 8 void solve() {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 long long suma = 0, sumb = 0;||| 12 long long l = 0, r = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> a[i].first >> a[i].second;||| 15 int first = min(m, a[i].first), second = min(m, a[i].second);||| 16 suma += a[i].first, sumb += a[i].second;||| 17 l += -2 * first + m, r += 2 * second - m;||| 18 }||| 19 if (suma + l <= sumb && suma + r >= sumb) {||| 20 long long cx = sumb - suma - l;||| 21 vector<pair<int, int> > res;||| 22 for (int i = 1; i <= n; i++) {||| 23 int first = min(m, a[i].first), second = min(m, a[i].second);||| 24 int le = m - second, ri = first;||| 25 while (le < ri) {||| 26 int mid = le + ri >> 1;||| 27 if ((first - mid) * 2 <= cx)||| 28 ri = mid;||| 29 else||| 30 le = mid + 1;||| 31 }||| 32 cx -= (first - le) * 2;||| 33 res.push_back({le, m - le});||| 34 }||| 35 cout << cx << '\n';||| 36 for (int i = 0; i < n; i++)||| 37 cout << res[i].first << ' ' << res[i].second << '\n';||| 38 } else if (suma + l > sumb) {||| 39 cout << suma + l - sumb << '\n';||| 40 for (int i = 1; i <= n; i++) {||| 41 int first = min(m, a[i].first);||| 42 cout << first << ' ' << m - first << '\n';||| 43 }||| 44 } else {||| 45 cout << sumb - suma - r << '\n';||| 46 for (int i = 1; i <= n; i++) {||| 47 int second = min(m, a[i].second);||| 48 cout << m - second << ' ' << second << '\n';||| 49 }||| 50 }||| 51 }||| 52 int main() {||| 53 ios::sync_with_stdio(false);||| 54 cin.tie(nullptr), cout.tie(nullptr);||| 55 cout << fixed << setprecision(10);||| 56 int T(1);||| 57 cin >> T;||| 58 for (int o = 1; o <= T; o++) {||| 59 solve();||| 60 }||| 61 return 0;||| 62 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2000 + 10;||| 4 const int M = 1000010;||| 5 const int INF = 0x3f3f3f3f;||| 6 const int mod = 998244353;||| 7 pair<int, int> a[N], c[N];||| 8 void solve() {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 long long suma = 0, sumb = 0;||| 12 long long l = 0, r = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> a[i].first >> a[i].second;||| 15 int first = min(m, a[i].first), second = min(m, a[i].second);||| 16 suma += a[i].first, sumb += a[i].second;||| 17 l += -2 * first + m, r += 2 * second - m;||| 18 }||| 19 if (suma + l <= sumb && suma + r >= sumb) {||| 20 long long cx = sumb - suma - l;||| 21 vector<pair<int, int> > res;||| 22 for (int i = 1; i <= n; i++) {||| 23 int first = min(m, a[i].first), second = min(m, a[i].second);||| 24 int le = m - second, ri = first;||| 25 while (le < ri) {||| 26 int mid = le + ri >> 1;||| 27 if ((first - mid) * 2 <= cx)||| 28 ri = mid;||| 29 else||| 30 le = mid + 1;||| 31 }||| 32 cx -= (first - le) * 2;||| 33 res.push_back({le, m - le});||| 34 }||| 35 cout << cx << '\n';||| 36 for (int i = 0; i < n; i++)||| 37 cout << res[i].first << ' ' << res[i].second << '\n';||| 38 } else if (suma + l > sumb) {||| 39 cout << suma + l - sumb << '\n';||| 40 for (int i = 1; i <= n; i++) {||| 41 int first = min(m, a[i].first);||| 42 cout << first << ' ' << m - first << '\n';||| 43 }||| 44 } else {||| 45 cout << sumb - suma - r;||| 46 for (int i = 1; i <= n; i++) {||| 47 int second = min(m, a[i].second);||| 48 cout << m - second << ' ' << second << '\n';||| 49 }||| 50 }||| 51 }||| 52 int main() {||| 53 ios::sync_with_stdio(false);||| 54 cin.tie(nullptr), cout.tie(nullptr);||| 55 cout << fixed << setprecision(10);||| 56 int T(1);||| 57 cin >> T;||| 58 for (int o = 1; o <= T; o++) {||| 59 solve();||| 60 }||| 61 return 0;||| 62 }||| 	3 const int N = 2e5 + 10;
104	59	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, a[200010], b[200010], l[200010], r[200010];||| 4 int main() {||| 5 cin >> T;||| 6 while (T--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 long long suma = 0, sumb = 0;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> a[i] >> b[i];||| 12 suma += a[i], sumb += b[i];||| 13 }||| 14 long long suml = 0, sumr = 0;||| 15 for (int i = 1; i <= n; i++) {||| 16 l[i] = max(0, m - b[i]);||| 17 r[i] = min(m, a[i]);||| 18 suml += l[i];||| 19 sumr += r[i];||| 20 }||| 21 if (suma - suml <= sumb - ((long long)n * m - suml)) {||| 22 cout << (sumb - ((long long)n * m - suml)) - (suma - suml) << endl;||| 23 for (int i = 1; i <= n; i++) {||| 24 cout << l[i] << "" "" << m - l[i] << endl;||| 25 }||| 26 } else if (suma - sumr >= sumb - ((long long)n * m - sumr)) {||| 27 cout << (suma - sumr) - (sumb - ((long long)n * m - sumr)) << endl;||| 28 for (int i = 1; i <= n; i++) {||| 29 cout << r[i] << "" "" << m - r[i] << endl;||| 30 }||| 31 } else {||| 32 long long v = (suma - suml) - (sumb - ((long long)n * m - suml));||| 33 cout << (v & 1) << endl;||| 34 for (int i = 1; i <= n; i++) {||| 35 if (v >= (r[i] - l[i]) * 2) {||| 36 v -= (r[i] - l[i]) * 2;||| 37 cout << r[i] << "" "" << m - r[i] << endl;||| 38 } else {||| 39 cout << l[i] + v / 2 << "" "" << m - (l[i] + v / 2) << endl;||| 40 v -= v / 2 * 2;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, a[200010], b[200010], l[200010], r[200010];||| 4 int main() {||| 5 cin >> T;||| 6 while (T--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 long long suma = 0, sumb = 0;||| 10 for (int i = 1; i <= n; i++) {||| 11 cin >> a[i] >> b[i];||| 12 suma += a[i], sumb += b[i];||| 13 }||| 14 long long suml = 0, sumr = 0;||| 15 for (int i = 1; i <= n; i++) {||| 16 l[i] = max(0, m - b[i]);||| 17 r[i] = min(m, a[i]);||| 18 suml += l[i];||| 19 sumr += r[i];||| 20 }||| 21 if (suma - suml <= sumb - ((long long)n * m - suml)) {||| 22 cout << (sumb - ((long long)n * m - suml)) - (suma - suml) << endl;||| 23 for (int i = 1; i <= n; i++) {||| 24 cout << l[i] << "" "" << m - l[i] << endl;||| 25 }||| 26 } else if (suma - sumr >= sumb - ((long long)n * m - sumr)) {||| 27 cout << (suma - sumr) - (sumb - ((long long)n * m - sumr)) << endl;||| 28 for (int i = 1; i <= n; i++) {||| 29 cout << r[i] << "" "" << m - r[i] << endl;||| 30 }||| 31 } else {||| 32 long long v = (suma - suml) - (sumb - ((long long)n * m - suml));||| 33 cout << (v & 1) << endl;||| 34 for (int i = 1; i <= n; i++) {||| 35 if (v >= (r[i] - l[i]) * 2) {||| 36 v -= (r[i] - l[i]) * 2;||| 37 cout << l[i] << "" "" << m - l[i] << endl;||| 38 } else {||| 39 cout << l[i] + v / 2 << "" "" << m - (l[i] + v / 2) << endl;||| 40 v -= v / 2 * 2;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 return 0;||| 46 }||| "	"37 cout << r[i] << "" "" << m - r[i] << endl;"
104	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1000000007;||| 4 const long long U = 998244353;||| 5 string to_string(char c) { return ""'"" + string(1, c) + ""'""; }||| 6 string to_string(string s) { return '""' + s + '""'; }||| 7 string to_string(bool f) {||| 8 if (f)||| 9 return ""True"";||| 10 else||| 11 return ""False"";||| 12 }||| 13 string to_string(const char *s) { return to_string((string)s); }||| 14 template <typename A>||| 15 string to_string(A);||| 16 template <typename A, typename B>||| 17 string to_string(pair<A, B> p) {||| 18 return ""("" + to_string(p.first) + "": "" + to_string(p.second) + "")"";||| 19 }||| 20 template <typename A>||| 21 string to_string(A v) {||| 22 bool f = false;||| 23 string r = ""{"";||| 24 for (auto x : v) {||| 25 if (f) r += "", "";||| 26 r += to_string(x);||| 27 f = true;||| 28 }||| 29 return r += ""}"";||| 30 }||| 31 template <typename A>||| 32 string to_string(vector<vector<A>> v) {||| 33 string r;||| 34 for (auto x : v) r += ""\n"" + to_string(x);||| 35 return r;||| 36 }||| 37 long long Nerr;||| 38 template <typename A>||| 39 string to_string(A *p) {||| 40 return to_string(vector<A>(p, p + Nerr));||| 41 }||| 42 void err(istream_iterator<string>) { cerr << '\n'; }||| 43 template <typename T, typename... Args>||| 44 void err(istream_iterator<string> it, T a, Args... args) {||| 45 cerr << *it << "" = "" << to_string(a) << ""; "";||| 46 err(++it, args...);||| 47 }||| 48 template <typename T>||| 49 void kek(T ans) {||| 50 cout << ans << '\n';||| 51 exit(0);||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 long long TESTS = 1;||| 56 cin >> TESTS;||| 57 while (TESTS--) {||| 58 long long n, m;||| 59 cin >> n >> m;||| 60 vector<long long> a(n);||| 61 vector<long long> b(n);||| 62 for (long long i = 0; i < n; i++) cin >> a[i] >> b[i];||| 63 vector<pair<long long, long long>> ranges;||| 64 for (long long i = 0; i < n; i++) {||| 65 long long l = (long long)1e15;||| 66 if (b[i] >= m)||| 67 l = 0;||| 68 else||| 69 l = m - b[i];||| 70 long long r = 0;||| 71 if (a[i] >= m)||| 72 r = m;||| 73 else||| 74 r = a[i];||| 75 ranges.push_back({l, r});||| 76 }||| 77 long long p = n * m;||| 78 for (long long i = 0; i < n; i++) p += a[i] - b[i];||| 79 long long mnsum = 0;||| 80 long long mxsum = 0;||| 81 for (auto j : ranges) {||| 82 mnsum += j.first;||| 83 mxsum += j.second;||| 84 }||| 85 if (p >= 2 * mnsum and p <= 2 * mxsum) {||| 86 if (p % 2 == 0)||| 87 cout << 0 << '\n';||| 88 else||| 89 cout << 1 << '\n';||| 90 long long diff = p - 2 * mnsum;||| 91 for (auto j : ranges) {||| 92 long long r = (j.second - j.first);||| 93 long long x = j.first;||| 94 long long use = min(diff / 2, r);||| 95 diff -= 2 * use;||| 96 cout << x + use << "" "" << m - (x + use) << '\n';||| 97 }||| 98 } else {||| 99 long long ans = min(abs(2 * mnsum - p), abs(2 * mxsum - p));||| 100 cout << ans << '\n';||| 101 if (ans == abs(2 * mnsum - p)) {||| 102 for (auto j : ranges) {||| 103 cout << j.first << "" "" << m - j.first << '\n';||| 104 }||| 105 } else if (ans == abs(2 * mxsum - p)) {||| 106 for (auto j : ranges) {||| 107 cout << j.second << "" "" << m - j.second << '\n';||| 108 }||| 109 }||| 110 }||| 111 }||| 112 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1000000007;||| 4 const long long U = 998244353;||| 5 string to_string(char c) { return ""'"" + string(1, c) + ""'""; }||| 6 string to_string(string s) { return '""' + s + '""'; }||| 7 string to_string(bool f) {||| 8 if (f)||| 9 return ""True"";||| 10 else||| 11 return ""False"";||| 12 }||| 13 string to_string(const char *s) { return to_string((string)s); }||| 14 template <typename A>||| 15 string to_string(A);||| 16 template <typename A, typename B>||| 17 string to_string(pair<A, B> p) {||| 18 return ""("" + to_string(p.first) + "": "" + to_string(p.second) + "")"";||| 19 }||| 20 template <typename A>||| 21 string to_string(A v) {||| 22 bool f = false;||| 23 string r = ""{"";||| 24 for (auto x : v) {||| 25 if (f) r += "", "";||| 26 r += to_string(x);||| 27 f = true;||| 28 }||| 29 return r += ""}"";||| 30 }||| 31 template <typename A>||| 32 string to_string(vector<vector<A>> v) {||| 33 string r;||| 34 for (auto x : v) r += ""\n"" + to_string(x);||| 35 return r;||| 36 }||| 37 long long Nerr;||| 38 template <typename A>||| 39 string to_string(A *p) {||| 40 return to_string(vector<A>(p, p + Nerr));||| 41 }||| 42 void err(istream_iterator<string>) { cerr << '\n'; }||| 43 template <typename T, typename... Args>||| 44 void err(istream_iterator<string> it, T a, Args... args) {||| 45 cerr << *it << "" = "" << to_string(a) << ""; "";||| 46 err(++it, args...);||| 47 }||| 48 template <typename T>||| 49 void kek(T ans) {||| 50 cout << ans << '\n';||| 51 exit(0);||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 long long TESTS = 1;||| 56 cin >> TESTS;||| 57 while (TESTS--) {||| 58 long long n, m;||| 59 cin >> n >> m;||| 60 vector<long long> a(n);||| 61 vector<long long> b(n);||| 62 for (long long i = 0; i < n; i++) cin >> a[i] >> b[i];||| 63 vector<pair<long long, long long>> ranges;||| 64 for (long long i = 0; i < n; i++) {||| 65 long long l = (long long)1e15;||| 66 if (b[i] >= m)||| 67 l = 0;||| 68 else||| 69 l = m - b[i];||| 70 long long r = 0;||| 71 if (a[i] >= m)||| 72 r = m;||| 73 else||| 74 r = a[i];||| 75 ranges.push_back({l, r});||| 76 }||| 77 long long p = n * m;||| 78 for (long long i = 0; i < n; i++) p += a[i] - b[i];||| 79 long long mnsum = 0;||| 80 long long mxsum = 0;||| 81 for (auto j : ranges) {||| 82 mnsum += j.first;||| 83 mxsum += j.second;||| 84 }||| 85 if (p >= 2 * mnsum and p <= 2 * mxsum) {||| 86 if (p % 2 == 0)||| 87 cout << 0 << '\n';||| 88 else||| 89 cout << 1 << '\n';||| 90 long long diff = p - 2 * mnsum;||| 91 for (auto j : ranges) {||| 92 long long r = (j.second - j.first);||| 93 long long x = j.first;||| 94 long long use = min(diff / 2, r);||| 95 diff -= 2 * use;||| 96 cout << x + use << "" "" << m - (x + use) << '\n';||| 97 }||| 98 } else {||| 99 long long ans = min(abs(2 * mnsum - p), abs(2 * mxsum - p));||| 100 cout << ans << '\n';||| 101 if (ans == abs(2 * mnsum - p)) {||| 102 for (auto j : ranges) {||| 103 cout << j.first << "" "" << m - j.first << '\n';||| 104 }||| 105 }||| 106 if (ans == abs(2 * mxsum - p)) {||| 107 for (auto j : ranges) {||| 108 cout << j.second << "" "" << m - j.second << '\n';||| 109 }||| 110 }||| 111 }||| 112 }||| 113 }||| "	105 } else if (ans == abs(2 * mxsum - p)) {
105	31	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 200100;||| 4 long long ans;||| 5 vector<long long> a(N), b(N), m(N), ans1(N), ans2(N);||| 6 void cal(vector<long long>& ind) {||| 7 long long n = (long long)ind.size();||| 8 long long l = -1, r = -1, prev = 0;||| 9 for (long long j = 0; j < n; j++) {||| 10 long long i = ind[j];||| 11 long long lx = max(0LL, a[i] - m[i]);||| 12 long long rx = max(0LL, a[i]);||| 13 long long templ = l, tempr = r;||| 14 if ((l == -1) || (l < lx)) {||| 15 l = lx;||| 16 }||| 17 if ((r == -1) || (rx < r)) {||| 18 r = rx;||| 19 }||| 20 if (l > r) {||| 21 ans -= (j - prev - 1);||| 22 long long to = templ;||| 23 for (long long k = prev; k < j; k++) {||| 24 i = ind[k];||| 25 ans1[i] = a[i] - to;||| 26 ans2[i] = m[i] - ans1[i];||| 27 }||| 28 prev = j;||| 29 j--;||| 30 l = -1, r = -1;||| 31 } else if (j == n - 1) {||| 32 ans -= (j - prev + 1 - 1);||| 33 long long to = l;||| 34 for (long long k = prev; k <= j; k++) {||| 35 i = ind[k];||| 36 ans1[i] = a[i] - to;||| 37 ans2[i] = m[i] - ans1[i];||| 38 }||| 39 }||| 40 }||| 41 }||| 42 void solve() {||| 43 long long n;||| 44 cin >> n;||| 45 ans = n;||| 46 map<long long, vector<long long>> mp;||| 47 for (long long i = 0; i < n; i++) {||| 48 cin >> a[i] >> b[i] >> m[i];||| 49 mp[a[i] + b[i] - m[i]].push_back(i);||| 50 }||| 51 for (auto& p : mp) {||| 52 sort(p.second.begin(), p.second.end(),||| 53 [&](const long long& i1, const long long& i2) {||| 54 if (a[i1] != a[i2]) {||| 55 return a[i1] < a[i2];||| 56 }||| 57 return b[i1] < b[i2];||| 58 });||| 59 cal(p.second);||| 60 }||| 61 cout << ans << '\n';||| 62 for (long long i = 0; i < n; i++) {||| 63 cout << ans1[i] << ' ' << ans2[i] << '\n';||| 64 }||| 65 }||| 66 int32_t main() {||| 67 ios_base::sync_with_stdio(false);||| 68 cin.tie(NULL);||| 69 long long t = 1;||| 70 cin >> t;||| 71 while (t--) {||| 72 solve();||| 73 }||| 74 return 0;||| 75 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 100100;||| 4 long long ans;||| 5 vector<long long> a(N), b(N), m(N), ans1(N), ans2(N);||| 6 void cal(vector<long long>& ind) {||| 7 long long n = (long long)ind.size();||| 8 long long l = -1, r = -1, prev = 0;||| 9 for (long long j = 0; j < n; j++) {||| 10 long long i = ind[j];||| 11 long long lx = max(0LL, a[i] - m[i]);||| 12 long long rx = max(0LL, a[i]);||| 13 long long templ = l, tempr = r;||| 14 if ((l == -1) || (l < lx)) {||| 15 l = lx;||| 16 }||| 17 if ((r == -1) || (rx < r)) {||| 18 r = rx;||| 19 }||| 20 if (l > r) {||| 21 ans -= (j - prev - 1);||| 22 long long to = templ;||| 23 for (long long k = prev; k < j; k++) {||| 24 i = ind[k];||| 25 ans1[i] = a[i] - to;||| 26 ans2[i] = m[i] - ans1[i];||| 27 }||| 28 prev = j;||| 29 j--;||| 30 l = -1, r = -1;||| 31 } else if (j == n - 1) {||| 32 ans -= (j - prev + 1 - 1);||| 33 long long to = l;||| 34 for (long long k = prev; k <= j; k++) {||| 35 i = ind[k];||| 36 ans1[i] = a[i] - to;||| 37 ans2[i] = m[i] - ans1[i];||| 38 }||| 39 }||| 40 }||| 41 }||| 42 void solve() {||| 43 long long n;||| 44 cin >> n;||| 45 ans = n;||| 46 map<long long, vector<long long>> mp;||| 47 for (long long i = 0; i < n; i++) {||| 48 cin >> a[i] >> b[i] >> m[i];||| 49 mp[a[i] + b[i] - m[i]].push_back(i);||| 50 }||| 51 for (auto& p : mp) {||| 52 sort(p.second.begin(), p.second.end(),||| 53 [&](const long long& i1, const long long& i2) {||| 54 if (a[i1] != b[i1]) {||| 55 return a[i1] < a[i2];||| 56 }||| 57 return b[i1] < b[i2];||| 58 });||| 59 cal(p.second);||| 60 }||| 61 cout << ans << '\n';||| 62 for (long long i = 0; i < n; i++) {||| 63 cout << ans1[i] << ' ' << ans2[i] << '\n';||| 64 }||| 65 }||| 66 int32_t main() {||| 67 ios_base::sync_with_stdio(false);||| 68 cin.tie(NULL);||| 69 long long t = 1;||| 70 cin >> t;||| 71 while (t--) {||| 72 solve();||| 73 }||| 74 return 0;||| 75 }||| 	3 const long long N = 200100;
105	29	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long n, a[N], b[N], m[N], cur_a[N], cur_b[N], mn[N], mx[N];||| 5 int solve(vector<int> &v) {||| 6 int res = 0;||| 7 vector<pair<pair<int, int>, int> > seg;||| 8 for (auto idx : v) {||| 9 seg.push_back({{mx[idx], mn[idx]}, idx});||| 10 }||| 11 sort(seg.begin(), seg.end());||| 12 int mxx = -1;||| 13 for (auto it : seg) {||| 14 int l = it.first.second, r = it.first.first, idx = it.second;||| 15 if (l > mxx) mxx = r, res++;||| 16 mn[idx] = mxx;||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 cout.tie(0);||| 24 int t;||| 25 cin >> t;||| 26 while (t--) {||| 27 cin >> n;||| 28 long long sum = 0;||| 29 map<long long, vector<int> > mp;||| 30 for (int i = 1; i <= n; i++) {||| 31 cin >> a[i] >> b[i] >> m[i];||| 32 long long tmp_m = m[i];||| 33 long long tmp = min(tmp_m, a[i]);||| 34 cur_a[i] = a[i] - tmp;||| 35 tmp_m -= tmp;||| 36 tmp = min(tmp_m, b[i]);||| 37 cur_b[i] = b[i] - tmp;||| 38 mn[i] = cur_a[i], mx[i] = mn[i] + min({a[i] - cur_a[i], cur_b[i], m[i]});||| 39 mp[a[i] + b[i] - m[i]].push_back(i);||| 40 }||| 41 int ans = 0;||| 42 for (auto it : mp) {||| 43 ans += solve(it.second);||| 44 }||| 45 cout << ans << ""\n"";||| 46 for (int i = 1; i <= n; i++) {||| 47 int diff = mn[i] - cur_a[i];||| 48 cur_a[i] += diff, cur_b[i] -= diff;||| 49 cout << a[i] - cur_a[i] << ' ' << b[i] - cur_b[i] << '\n';||| 50 }||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long n, a[N], b[N], m[N], cur_a[N], cur_b[N], mn[N], mx[N];||| 5 int solve(vector<int> &v) {||| 6 int res = 0;||| 7 vector<pair<pair<int, int>, int> > seg;||| 8 for (auto idx : v) {||| 9 seg.push_back({{mx[idx], mn[idx]}, idx});||| 10 }||| 11 sort(seg.begin(), seg.end());||| 12 int mxx = -1;||| 13 for (auto it : seg) {||| 14 int l = it.first.second, r = it.first.first, idx = it.second;||| 15 if (l > mxx) mxx = r, res++;||| 16 mn[idx] = mxx;||| 17 }||| 18 return res;||| 19 }||| 20 int main() {||| 21 ios_base::sync_with_stdio(0);||| 22 cin.tie(0);||| 23 cout.tie(0);||| 24 int t;||| 25 cin >> t;||| 26 while (t--) {||| 27 cin >> n;||| 28 long long sum = 0;||| 29 map<long long, vector<int> > mp;||| 30 for (int i = 1; i <= n; i++) {||| 31 cin >> a[i] >> b[i] >> m[i];||| 32 long long tmp_m = m[i];||| 33 long long tmp = min(tmp_m, a[i]);||| 34 cur_a[i] = a[i] - tmp;||| 35 tmp_m -= tmp;||| 36 tmp = min(tmp_m, b[i]);||| 37 cur_b[i] = b[i] - tmp;||| 38 mn[i] = cur_a[i], mx[i] = mn[i] + min({a[i] - cur_a[i], b[i], m[i]});||| 39 mp[a[i] + b[i] - m[i]].push_back(i);||| 40 }||| 41 int ans = 0;||| 42 for (auto it : mp) {||| 43 ans += solve(it.second);||| 44 }||| 45 cout << ans << ""\n"";||| 46 for (int i = 1; i <= n; i++) {||| 47 int diff = mn[i] - cur_a[i];||| 48 cur_a[i] += diff, cur_b[i] -= diff;||| 49 cout << a[i] - cur_a[i] << ' ' << b[i] - cur_b[i] << '\n';||| 50 }||| 51 }||| 52 return 0;||| 53 }||| "	38 mn[i] = cur_a[i], mx[i] = mn[i] + min({a[i] - cur_a[i], cur_b[i], m[i]});
105	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<pair<long long, long long>> vals[2000005];||| 4 int32_t main() {||| 5 ios::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 pair<long long, long long> a[n];||| 13 pair<long long, long long> op[n];||| 14 long long mi[n];||| 15 for (long long i = 0; i < n; i++) {||| 16 cin >> a[i].first >> a[i].second;||| 17 op[i].first = a[i].first;||| 18 op[i].second = a[i].second;||| 19 cin >> mi[i];||| 20 }||| 21 long long rx[n];||| 22 long long taken[n];||| 23 memset(taken, 0, sizeof(taken));||| 24 for (long long i = 0; i < n; i++) {||| 25 long long ll = max((long long)(0), mi[i] - a[i].second);||| 26 long long rr = min(a[i].first, mi[i]);||| 27 taken[i] += ll;||| 28 rr -= ll;||| 29 a[i].first -= ll;||| 30 a[i].second -= (mi[i] - ll);||| 31 rx[i] = rr;||| 32 }||| 33 set<long long> s;||| 34 for (long long i = 0; i < n; i++) {||| 35 auto x = a[i];||| 36 s.insert(x.first + x.second);||| 37 vals[x.first + x.second].push_back({x.first, i});||| 38 }||| 39 long long fina = 0;||| 40 for (auto x : s) {||| 41 sort(vals[x].begin(), vals[x].end());||| 42 auto vv = vals[x];||| 43 long long maxa = 0;||| 44 long long optim_start = 0;||| 45 long long optim_end = 0;||| 46 long long z = vals[x].size();||| 47 long long r = 0;||| 48 for (long long i = 0; i < z; i++) {||| 49 long long l = i;||| 50 if (i < r) {||| 51 continue;||| 52 }||| 53 r = max(r, i);||| 54 while (r < z && vv[r].first - (rx[vv[r].second]) <= vv[l].first) {||| 55 r++;||| 56 }||| 57 for (long long i = l; i < r; i++) {||| 58 taken[vv[i].second] += (vv[i].first - vv[l].first);||| 59 }||| 60 }||| 61 fina += (z - maxa + 1);||| 62 }||| 63 set<pair<long long, long long>> lol;||| 64 for (long long i = 0; i < n; i++) {||| 65 lol.insert({op[i].first - taken[i], op[i].second + taken[i] - mi[i]});||| 66 }||| 67 cout << lol.size() << ""\n"";||| 68 ;||| 69 for (long long i = 0; i < n; i++) {||| 70 auto x = taken[i];||| 71 cout << x << "" "" << mi[i] - x << ""\n"";||| 72 }||| 73 for (auto x : s) {||| 74 vals[x].clear();||| 75 }||| 76 }||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<pair<long long, long long>> vals[2000005];||| 4 int32_t main() {||| 5 ios::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 pair<long long, long long> a[n];||| 13 pair<long long, long long> op[n];||| 14 long long mi[n];||| 15 for (long long i = 0; i < n; i++) {||| 16 cin >> a[i].first >> a[i].second;||| 17 op[i].first = a[i].first;||| 18 op[i].second = a[i].second;||| 19 cin >> mi[i];||| 20 }||| 21 long long rx[n];||| 22 long long taken[n];||| 23 memset(taken, 0, sizeof(taken));||| 24 for (long long i = 0; i < n; i++) {||| 25 long long ll = max((long long)(0), mi[i] - a[i].second);||| 26 long long rr = min(a[i].first, mi[i]);||| 27 taken[i] += ll;||| 28 rr -= ll;||| 29 a[i].first -= ll;||| 30 a[i].second -= (mi[i] - ll);||| 31 rx[i] = rr;||| 32 }||| 33 set<long long> s;||| 34 for (long long i = 0; i < n; i++) {||| 35 auto x = a[i];||| 36 s.insert(x.first + x.second);||| 37 vals[x.first + x.second].push_back({x.first, i});||| 38 }||| 39 long long fina = 0;||| 40 for (auto x : s) {||| 41 sort(vals[x].begin(), vals[x].end());||| 42 auto vv = vals[x];||| 43 long long maxa = 0;||| 44 long long optim_start = 0;||| 45 long long optim_end = 0;||| 46 long long z = vals[x].size();||| 47 long long r = 0;||| 48 for (long long i = 0; i < z; i++) {||| 49 long long l = i;||| 50 if (i < r) {||| 51 continue;||| 52 }||| 53 r = max(r, i);||| 54 while (r < z && vv[r].first - (rx[vv[r].second]) <= vv[l].first) {||| 55 r++;||| 56 }||| 57 for (long long i = l; i < r; i++) {||| 58 taken[vv[i].second] += (vv[i].first - vv[optim_start].first);||| 59 }||| 60 }||| 61 fina += (z - maxa + 1);||| 62 }||| 63 set<pair<long long, long long>> lol;||| 64 for (long long i = 0; i < n; i++) {||| 65 lol.insert({op[i].first - taken[i], op[i].second + taken[i] - mi[i]});||| 66 }||| 67 cout << lol.size() << ""\n"";||| 68 ;||| 69 for (long long i = 0; i < n; i++) {||| 70 auto x = taken[i];||| 71 cout << x << "" "" << mi[i] - x << ""\n"";||| 72 }||| 73 for (auto x : s) {||| 74 vals[x].clear();||| 75 }||| 76 }||| 77 }||| "	58 taken[vv[i].second] += (vv[i].first - vv[l].first);
105	55	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Yo {||| 4 int a, b, m, idx;||| 5 bool operator<(const Yo &other) const {||| 6 return (a + b - m < other.a + other.b - other.m) ||||| 7 (a + b - m == other.a + other.b - other.m && a < other.a);||| 8 }||| 9 };||| 10 int n;||| 11 vector<pair<int, int> > ans;||| 12 vector<Yo> v;||| 13 void solve() {||| 14 cin >> n;||| 15 ans.clear();||| 16 ans.resize(n + 1);||| 17 v.clear();||| 18 for (int i = 0; i < n; i++) {||| 19 Yo tmp;||| 20 cin >> tmp.a >> tmp.b >> tmp.m;||| 21 tmp.idx = i;||| 22 v.push_back(tmp);||| 23 }||| 24 sort(v.begin(), v.end());||| 25 int dist = 0, mn = -1, w = -1;||| 26 for (auto i : v) {||| 27 if (i.a + i.b - i.m != w) {||| 28 dist++;||| 29 w = i.a + i.b - i.m;||| 30 if (i.m > i.b) {||| 31 mn = i.a - (i.m - i.b);||| 32 ans[i.idx] = {i.m - i.b, i.b};||| 33 } else {||| 34 mn = i.a;||| 35 ans[i.idx] = {0, i.m};||| 36 }||| 37 continue;||| 38 }||| 39 if (i.a - i.m > mn) {||| 40 dist++;||| 41 if (i.m > i.b) {||| 42 mn = i.a - (i.m - i.b);||| 43 ans[i.idx] = {i.m - i.b, i.b};||| 44 } else {||| 45 mn = i.a;||| 46 ans[i.idx] = {0, i.m};||| 47 }||| 48 } else {||| 49 ans[i.idx] = {i.a - mn, i.m - (i.a - mn)};||| 50 }||| 51 }||| 52 cout << dist << ""\n"";||| 53 for (int i = 0; i < n; i++)||| 54 cout << ans[i].first << "" "" << ans[i].second << ""\n"";||| 55 }||| 56 int main() {||| 57 int t;||| 58 cin >> t;||| 59 while (t--) solve();||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Yo {||| 4 int a, b, m, idx;||| 5 bool operator<(const Yo &other) const {||| 6 return (a + b - m < other.a + other.b - other.m) ||||| 7 (a + b - m == other.a + other.b - other.m && a < other.a);||| 8 }||| 9 };||| 10 int n;||| 11 vector<pair<int, int> > ans;||| 12 vector<Yo> v;||| 13 void solve() {||| 14 cin >> n;||| 15 ans.clear();||| 16 ans.resize(n + 1);||| 17 v.clear();||| 18 for (int i = 0; i < n; i++) {||| 19 Yo tmp;||| 20 cin >> tmp.a >> tmp.b >> tmp.m;||| 21 tmp.idx = i;||| 22 v.push_back(tmp);||| 23 }||| 24 sort(v.begin(), v.end());||| 25 int dist = 0, mn = -1, w = 0;||| 26 for (auto i : v) {||| 27 if (i.a + i.b - i.m != w) {||| 28 dist++;||| 29 w = i.a + i.b - i.m;||| 30 if (i.m > i.b) {||| 31 mn = i.a - (i.m - i.b);||| 32 ans[i.idx] = {i.m - i.b, i.b};||| 33 } else {||| 34 mn = i.a;||| 35 ans[i.idx] = {0, i.m};||| 36 }||| 37 continue;||| 38 }||| 39 if (i.a - i.m > mn) {||| 40 dist++;||| 41 if (i.m > i.b) {||| 42 mn = i.a - (i.m - i.b);||| 43 ans[i.idx] = {i.m - i.b, i.b};||| 44 } else {||| 45 mn = i.a;||| 46 ans[i.idx] = {0, i.m};||| 47 }||| 48 } else {||| 49 ans[i.idx] = {i.a - mn, i.m - (i.a - mn)};||| 50 }||| 51 }||| 52 cout << dist << ""\n"";||| 53 for (int i = 0; i < n; i++)||| 54 cout << ans[i].first << "" "" << ans[i].second << ""\n"";||| 55 }||| 56 int main() {||| 57 int t;||| 58 cin >> t;||| 59 while (t--) solve();||| 60 return 0;||| 61 }||| "	25 int dist = 0, mn = -1, w = -1;
105	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace Ruri {||| 4 const int infi = 1e9;||| 5 const long long infl = 4e18;||| 6 }  // namespace Ruri||| 7 using namespace Ruri;||| 8 namespace Gadgets {||| 9 inline long long ceil_div(long long a, long long b) { return (a + b - 1) / b; }||| 10 inline long long pos_mod(long long a, long long b) { return (a % b + b) % b; }||| 11 }  // namespace Gadgets||| 12 namespace Read {||| 13 inline int ri() {||| 14 int x;||| 15 scanf(""%d"", &x);||| 16 return x;||| 17 }||| 18 inline long long rl() {||| 19 long long x;||| 20 scanf(""%lld"", &x);||| 21 return x;||| 22 }||| 23 inline double rd() {||| 24 double x;||| 25 scanf(""%lf"", &x);||| 26 return x;||| 27 }||| 28 }  // namespace Read||| 29 namespace DeBug {}||| 30 using namespace Gadgets;||| 31 using namespace Read;||| 32 using namespace DeBug;||| 33 const int MAX_N = 2e5 + 5;||| 34 int n;||| 35 int a[MAX_N], b[MAX_N], m[MAX_N], t[MAX_N];||| 36 int mna[MAX_N], mxa[MAX_N];||| 37 int id[MAX_N];||| 38 int eat_a[MAX_N], eat_b[MAX_N];||| 39 int main() {||| 40 t[0] = infi;||| 41 int T = ri();||| 42 while (T--) {||| 43 n = ri();||| 44 for (int i = 1, bbb = n; i <= bbb; ++i)||| 45 a[i] = ri(), b[i] = ri(), m[i] = ri(), t[i] = a[i] + b[i] - m[i];||| 46 for (int i = 1, bbb = n; i <= bbb; ++i)||| 47 mna[i] = max(0, a[i] - m[i]), mxa[i] = a[i] - max(0, m[i] - b[i]);||| 48 iota(id + 1, id + 1 + n, 1);||| 49 sort(id + 1, id + 1 + n, [&](int x, int y) {||| 50 if (t[x] != t[y]) return t[x] < t[y];||| 51 return mna[x] != mna[y] ? mna[x] > mna[y] : mxa[x] > mxa[y];||| 52 });||| 53 int variety = 0, mn = 0;||| 54 for (int i = 1, bbb = n; i <= bbb; ++i) {||| 55 int now = id[i];||| 56 if (t[now] != t[id[i - 1]]) {||| 57 ++variety;||| 58 eat_a[now] = a[now] - mna[now];||| 59 eat_b[now] = m[now] - eat_a[now];||| 60 mn = mna[now];||| 61 } else {||| 62 if (mxa[now] >= mn) {||| 63 eat_a[now] = a[now] - mn;||| 64 eat_b[now] = m[now] - eat_a[now];||| 65 } else {||| 66 ++variety;||| 67 eat_a[now] = a[now] - mna[now];||| 68 eat_b[now] = m[now] - eat_a[now];||| 69 mn = mna[now];||| 70 }||| 71 }||| 72 }||| 73 printf(""%d\n"", variety);||| 74 for (int i = 1, bbb = n; i <= bbb; ++i)||| 75 printf(""%d %d\n"", eat_a[i], eat_b[i]);||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace Ruri {||| 4 const int infi = 1e9;||| 5 const long long infl = 4e18;||| 6 }  // namespace Ruri||| 7 using namespace Ruri;||| 8 namespace Gadgets {||| 9 inline long long ceil_div(long long a, long long b) { return (a + b - 1) / b; }||| 10 inline long long pos_mod(long long a, long long b) { return (a % b + b) % b; }||| 11 }  // namespace Gadgets||| 12 namespace Read {||| 13 inline int ri() {||| 14 int x;||| 15 scanf(""%d"", &x);||| 16 return x;||| 17 }||| 18 inline long long rl() {||| 19 long long x;||| 20 scanf(""%lld"", &x);||| 21 return x;||| 22 }||| 23 inline double rd() {||| 24 double x;||| 25 scanf(""%lf"", &x);||| 26 return x;||| 27 }||| 28 }  // namespace Read||| 29 namespace DeBug {}||| 30 using namespace Gadgets;||| 31 using namespace Read;||| 32 using namespace DeBug;||| 33 const int MAX_N = 2e5 + 5;||| 34 int n;||| 35 int a[MAX_N], b[MAX_N], m[MAX_N], t[MAX_N];||| 36 int mna[MAX_N], mxa[MAX_N];||| 37 int id[MAX_N];||| 38 int eat_a[MAX_N], eat_b[MAX_N];||| 39 int main() {||| 40 t[0] = infi;||| 41 int T = ri();||| 42 while (T--) {||| 43 n = ri();||| 44 for (int i = 1, bbb = n; i <= bbb; ++i)||| 45 a[i] = ri(), b[i] = ri(), m[i] = ri(), t[i] = a[i] + b[i] - m[i];||| 46 for (int i = 1, bbb = n; i <= bbb; ++i)||| 47 mna[i] = max(0, a[i] - m[i]), mxa[i] = a[i] - max(0, m[i] - b[i]);||| 48 iota(id + 1, id + 1 + n, 1);||| 49 sort(id + 1, id + 1 + n, [&](int x, int y) {||| 50 if (t[x] != t[y]) return t[x] < t[y];||| 51 return mna[x] != mna[y] ? mna[x] > mna[y] : mxa[x] > mxa[y];||| 52 });||| 53 int variety = 0, mn = 0;||| 54 for (int i = 1, bbb = n; i <= bbb; ++i) {||| 55 int now = id[i];||| 56 if (t[now] != t[id[i - 1]]) {||| 57 ++variety;||| 58 eat_a[now] = a[now] - mna[now];||| 59 eat_b[now] = m[now] - eat_a[now];||| 60 mn = mna[now];||| 61 } else {||| 62 if (mxa[now] >= mn) {||| 63 eat_a[now] = a[now] - mn;||| 64 eat_b[i] = m[now] - eat_a[now];||| 65 } else {||| 66 ++variety;||| 67 eat_a[now] = a[now] - mna[now];||| 68 eat_b[now] = m[now] - eat_a[now];||| 69 mn = mna[now];||| 70 }||| 71 }||| 72 }||| 73 printf(""%d\n"", variety);||| 74 for (int i = 1, bbb = n; i <= bbb; ++i)||| 75 printf(""%d %d\n"", eat_a[i], eat_b[i]);||| 76 }||| 77 return 0;||| 78 }||| "	64 eat_b[now] = m[now] - eat_a[now];
105	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1000000000;||| 4 long long mod = 1000000007LL;||| 5 long long mod2 = 998244353LL;||| 6 int t, n, h;||| 7 int k;||| 8 int q;||| 9 int a[200005], b[200005];||| 10 int m[200005];||| 11 map<int, vector<pair<int, int>>> gp;||| 12 vector<int> ans;||| 13 int main() {||| 14 cin >> t;||| 15 for (int cas = 1; cas <= t; ++cas) {||| 16 scanf(""%d"", &n);||| 17 gp.clear();||| 18 ans.clear();||| 19 for (int i = 1; i <= n; ++i) {||| 20 ans.push_back(0);||| 21 scanf(""%d%d%d"", &a[i], &b[i], &m[i]);||| 22 gp[a[i] + b[i] - m[i]].push_back(make_pair(a[i], i));||| 23 }||| 24 int tot = 0;||| 25 for (auto itr : gp) {||| 26 auto v = itr.second;||| 27 sort(v.begin(), v.end());||| 28 for (int i = 0; i < v.size(); ++i) {||| 29 if (i == 0) {||| 30 tot++;||| 31 int id = v[i].second;||| 32 if (b[id] < m[id]) {||| 33 ans[id - 1] = m[id] - b[id];||| 34 }||| 35 } else {||| 36 int id = v[i].second;||| 37 int id2 = v[i - 1].second;||| 38 if (a[id] - a[id2] + ans[id2 - 1] <= m[id]) {||| 39 ans[id - 1] = a[id] - (a[id2] - ans[id2 - 1]);||| 40 } else {||| 41 tot++;||| 42 if (b[id] < m[id]) {||| 43 ans[id - 1] = m[id] - b[id];||| 44 }||| 45 }||| 46 }||| 47 }||| 48 }||| 49 printf(""%d\n"", tot);||| 50 for (int i = 1; i <= n; ++i) {||| 51 printf(""%d %d\n"", ans[i - 1], m[i] - ans[i - 1]);||| 52 }||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1000000000;||| 4 long long mod = 1000000007LL;||| 5 long long mod2 = 998244353LL;||| 6 int t, n, h;||| 7 int k;||| 8 int q;||| 9 int a[200005], b[200005];||| 10 int m[200005];||| 11 map<int, vector<pair<int, int>>> gp;||| 12 vector<int> ans;||| 13 int main() {||| 14 cin >> t;||| 15 for (int cas = 1; cas <= t; ++cas) {||| 16 scanf(""%d"", &n);||| 17 gp.clear();||| 18 ans.clear();||| 19 for (int i = 1; i <= n; ++i) {||| 20 ans.push_back(0);||| 21 scanf(""%d%d%d"", &a[i], &b[i], &m[i]);||| 22 gp[a[i] + b[i] - m[i]].push_back(make_pair(a[i], i));||| 23 }||| 24 int tot = 0;||| 25 for (auto itr : gp) {||| 26 auto v = itr.second;||| 27 sort(v.begin(), v.end());||| 28 for (int i = 0; i < v.size(); ++i) {||| 29 if (i == 0) {||| 30 tot++;||| 31 int id = v[i].second;||| 32 if (b[id] < m[id]) {||| 33 ans[id - 1] = m[id] - b[id];||| 34 }||| 35 } else {||| 36 int id = v[i].second;||| 37 int id2 = v[i - 1].second;||| 38 if (a[id] - a[id2] - ans[id2 - 1] <= m[id]) {||| 39 ans[id - 1] = a[id] - (a[id2] - ans[id2 - 1]);||| 40 } else {||| 41 tot++;||| 42 if (b[id] < m[id]) {||| 43 ans[id - 1] = m[id] - b[id];||| 44 }||| 45 }||| 46 }||| 47 }||| 48 }||| 49 printf(""%d\n"", tot);||| 50 for (int i = 1; i <= n; ++i) {||| 51 printf(""%d %d\n"", ans[i - 1], m[i] - ans[i - 1]);||| 52 }||| 53 }||| 54 return 0;||| 55 }||| "	38 if (a[id] - a[id2] + ans[id2 - 1] <= m[id]) {
106	16	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 long long qs(long long a, long long b) {||| 5 long long res = 1;||| 6 while (b) {||| 7 if (b & 1) {||| 8 res *= a;||| 9 res %= mod;||| 10 }||| 11 a *= a;||| 12 a %= mod;||| 13 b >>= 1;||| 14 }||| 15 return res;||| 16 }||| 17 int32_t main() {||| 18 long long t;||| 19 cin >> t;||| 20 while (t--) {||| 21 long long n;||| 22 cin >> n;||| 23 for (long long i = 2; i <= n + 1; i++) {||| 24 cout << i << "" "";||| 25 }||| 26 cout << endl;||| 27 }||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 long long qs(long long a, long long b) {||| 5 long long res = 1;||| 6 while (b) {||| 7 if (b & 1) {||| 8 res *= a;||| 9 res %= mod;||| 10 }||| 11 a *= a;||| 12 a %= mod;||| 13 b >>= 1;||| 14 }||| 15 return res;||| 16 }||| 17 int32_t main() {||| 18 long long t;||| 19 cin >> t;||| 20 while (t--) {||| 21 long long n;||| 22 cin >> n;||| 23 for (long long i = 2; i <= n + 2; i++) {||| 24 cout << i << "" "";||| 25 }||| 26 cout << endl;||| 27 }||| 28 }||| "	23 for (long long i = 2; i <= n + 1; i++) {
106	38	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long test;||| 8 cin >> test;||| 9 while (test--) {||| 10 long long int n, ans = 2;||| 11 cin >> n;||| 12 for (long long int i = 0; i < n; i++) {||| 13 cout << ans << "" "";||| 14 ans = ans + 1;||| 15 }||| 16 cout << ""\n"";||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long test;||| 8 cin >> test;||| 9 while (test--) {||| 10 long long int n, ans = 1;||| 11 cin >> n;||| 12 for (long long int i = 0; i < n; i++) {||| 13 cout << ans << "" "";||| 14 ans = ans + 1;||| 15 }||| 16 cout << ""\n"";||| 17 }||| 18 return 0;||| 19 }||| "	10 long long int n, ans = 2;
106	172	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long binpow(long long a, long long b, long long m) {||| 4 a %= m;||| 5 long long res = 1;||| 6 while (b > 0) {||| 7 if (b & 1) res = res * a % m;||| 8 a = a * a % m;||| 9 b >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 bool isPowerOfTwo(long long n) {||| 14 if ((n & (n - 1)) == 0) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 ;||| 21 long long t;||| 22 cin >> t;||| 23 while (t--) {||| 24 long long n;||| 25 cin >> n;||| 26 for (long long i = 0; i < n; i++) {||| 27 cout << i + 2 << "" "";||| 28 }||| 29 cout << ""\n"";||| 30 }||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long binpow(long long a, long long b, long long m) {||| 4 a %= m;||| 5 long long res = 1;||| 6 while (b > 0) {||| 7 if (b & 1) res = res * a % m;||| 8 a = a * a % m;||| 9 b >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 bool isPowerOfTwo(long long n) {||| 14 if ((n & (n - 1)) == 0) return true;||| 15 return false;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 ;||| 21 long long t;||| 22 cin >> t;||| 23 while (t--) {||| 24 long long n;||| 25 cin >> n;||| 26 for (long long i = 0; i < n; i++) {||| 27 cout << i + 1 << "" "";||| 28 }||| 29 cout << ""\n"";||| 30 }||| 31 }||| "	"27 cout << i + 2 << "" "";"
106	195	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 long long INFF = 1000000000000000005ll;||| 5 const int mod = 1000000007;||| 6 const int dx[4] = {-1, 1, 0, 0};||| 7 const int dy[4] = {0, 0, -1, 1};||| 8 const int dx2[8] = {-1, -1, 0, 1, 1, 1, 0, -1};||| 9 const int dy2[8] = {0, 1, 1, 1, 0, -1, -1, -1};||| 10 void _print(long long t) { cerr << t; }||| 11 void _print(int t) { cerr << t; }||| 12 void _print(string t) { cerr << t; }||| 13 void _print(char t) { cerr << t; }||| 14 void _print(long double t) { cerr << t; }||| 15 void _print(double t) { cerr << t; }||| 16 void _print(unsigned long long t) { cerr << t; }||| 17 template <class T, class V>||| 18 void _print(pair<T, V> p);||| 19 template <class T>||| 20 void _print(vector<T> v);||| 21 template <class T>||| 22 void _print(set<T> v);||| 23 template <class T, class V>||| 24 void _print(map<T, V> v);||| 25 template <class T>||| 26 void _print(multiset<T> v);||| 27 template <class T, class V>||| 28 void _print(pair<T, V> p) {||| 29 cerr << ""{"";||| 30 _print(p.first);||| 31 cerr << "","";||| 32 _print(p.second);||| 33 cerr << ""}"";||| 34 }||| 35 template <class T>||| 36 void _print(vector<T> v) {||| 37 cerr << ""[ "";||| 38 for (T i : v) {||| 39 _print(i);||| 40 cerr << "" "";||| 41 }||| 42 cerr << ""]"";||| 43 }||| 44 template <class T>||| 45 void _print(set<T> v) {||| 46 cerr << ""[ "";||| 47 for (T i : v) {||| 48 _print(i);||| 49 cerr << "" "";||| 50 }||| 51 cerr << ""]"";||| 52 }||| 53 template <class T>||| 54 void _print(multiset<T> v) {||| 55 cerr << ""[ "";||| 56 for (T i : v) {||| 57 _print(i);||| 58 cerr << "" "";||| 59 }||| 60 cerr << ""]"";||| 61 }||| 62 template <class T, class V>||| 63 void _print(map<T, V> v) {||| 64 cerr << ""[ "";||| 65 for (auto i : v) {||| 66 _print(i);||| 67 cerr << "" "";||| 68 }||| 69 cerr << ""]"";||| 70 }||| 71 const int N = 100010;||| 72 long long n, m, k, q;||| 73 long long dp[N], a[N];||| 74 vector<pair<long long, long long> > adj[N];||| 75 bool vis[N];||| 76 long long dist[N], deg[N];||| 77 struct Edge {||| 78 int a, b, c;||| 79 bool operator<(const Edge& w) const { return c < w.c; }||| 80 } edges[N];||| 81 int p[N];||| 82 int find(int u) {||| 83 if (u != p[u]) p[u] = find(p[u]);||| 84 return p[u];||| 85 }||| 86 int main() {||| 87 ios::sync_with_stdio(0);||| 88 cin.tie(0);||| 89 int T;||| 90 cin >> T;||| 91 while (T--) {||| 92 cin >> n;||| 93 a[0] = 2;||| 94 for (int i = 1; i <= n; ++i) {||| 95 a[i] = a[i - 1] + 1;||| 96 }||| 97 for (int i = 0; i < n; ++i) {||| 98 cout << a[i] << ' ';||| 99 }||| 100 cout << ""\n"";||| 101 }||| 102 return 0;||| 103 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 long long INFF = 1000000000000000005ll;||| 5 const int mod = 1000000007;||| 6 const int dx[4] = {-1, 1, 0, 0};||| 7 const int dy[4] = {0, 0, -1, 1};||| 8 const int dx2[8] = {-1, -1, 0, 1, 1, 1, 0, -1};||| 9 const int dy2[8] = {0, 1, 1, 1, 0, -1, -1, -1};||| 10 void _print(long long t) { cerr << t; }||| 11 void _print(int t) { cerr << t; }||| 12 void _print(string t) { cerr << t; }||| 13 void _print(char t) { cerr << t; }||| 14 void _print(long double t) { cerr << t; }||| 15 void _print(double t) { cerr << t; }||| 16 void _print(unsigned long long t) { cerr << t; }||| 17 template <class T, class V>||| 18 void _print(pair<T, V> p);||| 19 template <class T>||| 20 void _print(vector<T> v);||| 21 template <class T>||| 22 void _print(set<T> v);||| 23 template <class T, class V>||| 24 void _print(map<T, V> v);||| 25 template <class T>||| 26 void _print(multiset<T> v);||| 27 template <class T, class V>||| 28 void _print(pair<T, V> p) {||| 29 cerr << ""{"";||| 30 _print(p.first);||| 31 cerr << "","";||| 32 _print(p.second);||| 33 cerr << ""}"";||| 34 }||| 35 template <class T>||| 36 void _print(vector<T> v) {||| 37 cerr << ""[ "";||| 38 for (T i : v) {||| 39 _print(i);||| 40 cerr << "" "";||| 41 }||| 42 cerr << ""]"";||| 43 }||| 44 template <class T>||| 45 void _print(set<T> v) {||| 46 cerr << ""[ "";||| 47 for (T i : v) {||| 48 _print(i);||| 49 cerr << "" "";||| 50 }||| 51 cerr << ""]"";||| 52 }||| 53 template <class T>||| 54 void _print(multiset<T> v) {||| 55 cerr << ""[ "";||| 56 for (T i : v) {||| 57 _print(i);||| 58 cerr << "" "";||| 59 }||| 60 cerr << ""]"";||| 61 }||| 62 template <class T, class V>||| 63 void _print(map<T, V> v) {||| 64 cerr << ""[ "";||| 65 for (auto i : v) {||| 66 _print(i);||| 67 cerr << "" "";||| 68 }||| 69 cerr << ""]"";||| 70 }||| 71 const int N = 100010;||| 72 long long n, m, k, q;||| 73 long long dp[N], a[N];||| 74 vector<pair<long long, long long> > adj[N];||| 75 bool vis[N];||| 76 long long dist[N], deg[N];||| 77 struct Edge {||| 78 int a, b, c;||| 79 bool operator<(const Edge& w) const { return c < w.c; }||| 80 } edges[N];||| 81 int p[N];||| 82 int find(int u) {||| 83 if (u != p[u]) p[u] = find(p[u]);||| 84 return p[u];||| 85 }||| 86 int main() {||| 87 ios::sync_with_stdio(0);||| 88 cin.tie(0);||| 89 int T;||| 90 cin >> T;||| 91 while (T--) {||| 92 cin >> n;||| 93 a[0] = 2;||| 94 for (int i = 1; i <= n; ++i) {||| 95 a[i] = 2 * a[i - 1] + 1;||| 96 }||| 97 for (int i = 0; i < n; ++i) {||| 98 cout << a[i] << ' ';||| 99 }||| 100 cout << ""\n"";||| 101 }||| 102 return 0;||| 103 }||| "	95 a[i] = a[i - 1] + 1;
106	165	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 cout << 2 << "" "";||| 7 for (int i = 1; i < n; i++) {||| 8 cout << i + 2 << "" "";||| 9 }||| 10 cout << endl;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 cout << 2 << "" "";||| 7 for (int i = 1; i <= n; i++) {||| 8 cout << i + 2 << "" "";||| 9 }||| 10 cout << endl;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	7 for (int i = 1; i < n; i++) {
106	190	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e6 + 5;||| 4 long long n, k, a[N], res;||| 5 void solo() {||| 6 cin >> n;||| 7 for (int i = 1; i <= n; i++) cout << i + 1 << "" "";||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(0);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 long long t = 1;||| 14 cin >> t;||| 15 while (t--) {||| 16 solo();||| 17 cout << endl;||| 18 }||| 19 cerr << ""\n"" << (double)clock() / CLOCKS_PER_SEC * 1000 << "" ms"";||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e6 + 5;||| 4 long long n, k, a[N], res;||| 5 void solo() {||| 6 cin >> n;||| 7 for (int i = 1; i <= n; i++) cout << n + 1 << "" "";||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(0);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 long long t = 1;||| 14 cin >> t;||| 15 while (t--) {||| 16 solo();||| 17 cout << endl;||| 18 }||| 19 cerr << ""\n"" << (double)clock() / CLOCKS_PER_SEC * 1000 << "" ms"";||| 20 }||| "	"7 for (int i = 1; i <= n; i++) cout << i + 1 << "" "";"
106	96	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 const int inf = 1e9 + 10;||| 6 const ll llinf = 1e18 + 10;||| 7 const int mod = 1e9 + 7;||| 8 ll gcd(ll a, ll b) {||| 9 if (b == 0) {||| 10 return a;||| 11 }||| 12 return gcd(b, a % b);||| 13 }||| 14 int main() {||| 15 std::ios_base::sync_with_stdio(false);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 int n;||| 20 cin >> n;||| 21 for (int i = 1; i <= n; ++i) {||| 22 cout << i + 1 << "" "";||| 23 }||| 24 cout << ""\n"";||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 const int inf = 1e9 + 10;||| 6 const ll llinf = 1e18 + 10;||| 7 const int mod = 1e9 + 7;||| 8 ll gcd(ll a, ll b) {||| 9 if (b == 0) {||| 10 return a;||| 11 }||| 12 return gcd(b, a % b);||| 13 }||| 14 int main() {||| 15 std::ios_base::sync_with_stdio(false);||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 int n;||| 20 cin >> n;||| 21 for (int i = 0; i < n; ++i) {||| 22 cout << i + 1 << "" "";||| 23 }||| 24 cout << ""\n"";||| 25 }||| 26 }||| "	21 for (int i = 1; i <= n; ++i) {
106	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<bool> prime(1000001, true);||| 4 long long cha;||| 5 const int INF = 1000000000;||| 6 vector<vector<int>> g(0);||| 7 vector<pair<long long, long long>> t(0);||| 8 pair<int, int> combine(pair<int, int> a, pair<int, int> b) {||| 9 if (a.first > b.first) return a;||| 10 if (b.first > a.first) return b;||| 11 return make_pair(a.first, a.second + b.second);||| 12 }||| 13 void build(vector<long long> a, int v, int tl, int tr) {||| 14 if (tl == tr)||| 15 t[v] = make_pair(a[tl], 1);||| 16 else {||| 17 int tm = (tl + tr) / 2;||| 18 build(a, v * 2, tl, tm);||| 19 build(a, v * 2 + 1, tm + 1, tr);||| 20 t[v] = combine(t[v * 2], t[v * 2 + 1]);||| 21 }||| 22 }||| 23 pair<int, int> get_max(int v, int tl, int tr, int l, int r) {||| 24 if (l > r) return make_pair(-INF, 0);||| 25 if (l == tl && r == tr) return t[v];||| 26 int tm = (tl + tr) / 2;||| 27 return combine(get_max(v * 2, tl, tm, l, min(r, tm)),||| 28 get_max(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r));||| 29 }||| 30 void update(int v, int tl, int tr, int pos, int new_val) {||| 31 if (tl == tr)||| 32 t[v] = make_pair(new_val, 1);||| 33 else {||| 34 int tm = (tl + tr) / 2;||| 35 if (pos <= tm)||| 36 update(v * 2, tl, tm, pos, new_val);||| 37 else||| 38 update(v * 2 + 1, tm + 1, tr, pos, new_val);||| 39 t[v] = combine(t[v * 2], t[v * 2 + 1]);||| 40 }||| 41 }||| 42 void swap(long long a, long long b) {||| 43 a += b;||| 44 b = a - b;||| 45 a -= b;||| 46 }||| 47 unsigned long long binpow(long long a, long long n) {||| 48 int res = 1;||| 49 while (n) {||| 50 if (n & 1) res *= a;||| 51 a *= a;||| 52 n >>= 1;||| 53 }||| 54 return res;||| 55 }||| 56 int phi(int n) {||| 57 int result = n;||| 58 for (int i = 2; i * i <= n; ++i)||| 59 if (n % i == 0) {||| 60 while (n % i == 0) n /= i;||| 61 result -= result / i;||| 62 }||| 63 if (n > 1) result -= result / n;||| 64 return result;||| 65 }||| 66 void pr(int n) {||| 67 prime[0] = prime[1] = false;||| 68 for (int i = 2; i <= n; ++i)||| 69 if (prime[i])||| 70 if (i * 1ll * i <= n)||| 71 for (int j = i * i; j <= n; j += i) prime[j] = false;||| 72 }||| 73 long long gcd(long long a, long long b) {||| 74 if (b == 0) {||| 75 if (a == 0) {||| 76 return -1;||| 77 }||| 78 return a;||| 79 }||| 80 return gcd(abs(b - a), a);||| 81 }||| 82 int32_t main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 int tt, n;||| 87 cin >> tt;||| 88 pr(100000);||| 89 vector<int> pri(1000);||| 90 int last = 0;||| 91 for (int i = 0; i < 1000; i++) {||| 92 while (!prime[last]) {||| 93 last++;||| 94 }||| 95 pri[i] = last;||| 96 last++;||| 97 }||| 98 while (tt--) {||| 99 cin >> n;||| 100 for (int i = 0; i < n; i++) {||| 101 cout << pri[i] << "" "";||| 102 }||| 103 cout << endl;||| 104 }||| 105 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<bool> prime(1000001, true);||| 4 long long cha;||| 5 const int INF = 1000000000;||| 6 vector<vector<int>> g(0);||| 7 vector<pair<long long, long long>> t(0);||| 8 pair<int, int> combine(pair<int, int> a, pair<int, int> b) {||| 9 if (a.first > b.first) return a;||| 10 if (b.first > a.first) return b;||| 11 return make_pair(a.first, a.second + b.second);||| 12 }||| 13 void build(vector<long long> a, int v, int tl, int tr) {||| 14 if (tl == tr)||| 15 t[v] = make_pair(a[tl], 1);||| 16 else {||| 17 int tm = (tl + tr) / 2;||| 18 build(a, v * 2, tl, tm);||| 19 build(a, v * 2 + 1, tm + 1, tr);||| 20 t[v] = combine(t[v * 2], t[v * 2 + 1]);||| 21 }||| 22 }||| 23 pair<int, int> get_max(int v, int tl, int tr, int l, int r) {||| 24 if (l > r) return make_pair(-INF, 0);||| 25 if (l == tl && r == tr) return t[v];||| 26 int tm = (tl + tr) / 2;||| 27 return combine(get_max(v * 2, tl, tm, l, min(r, tm)),||| 28 get_max(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r));||| 29 }||| 30 void update(int v, int tl, int tr, int pos, int new_val) {||| 31 if (tl == tr)||| 32 t[v] = make_pair(new_val, 1);||| 33 else {||| 34 int tm = (tl + tr) / 2;||| 35 if (pos <= tm)||| 36 update(v * 2, tl, tm, pos, new_val);||| 37 else||| 38 update(v * 2 + 1, tm + 1, tr, pos, new_val);||| 39 t[v] = combine(t[v * 2], t[v * 2 + 1]);||| 40 }||| 41 }||| 42 void swap(long long a, long long b) {||| 43 a += b;||| 44 b = a - b;||| 45 a -= b;||| 46 }||| 47 unsigned long long binpow(long long a, long long n) {||| 48 int res = 1;||| 49 while (n) {||| 50 if (n & 1) res *= a;||| 51 a *= a;||| 52 n >>= 1;||| 53 }||| 54 return res;||| 55 }||| 56 int phi(int n) {||| 57 int result = n;||| 58 for (int i = 2; i * i <= n; ++i)||| 59 if (n % i == 0) {||| 60 while (n % i == 0) n /= i;||| 61 result -= result / i;||| 62 }||| 63 if (n > 1) result -= result / n;||| 64 return result;||| 65 }||| 66 void pr(int n) {||| 67 prime[0] = prime[1] = false;||| 68 for (int i = 2; i <= n; ++i)||| 69 if (prime[i])||| 70 if (i * 1ll * i <= n)||| 71 for (int j = i * i; j <= n; j += i) prime[j] = false;||| 72 }||| 73 long long gcd(long long a, long long b) {||| 74 if (b == 0) {||| 75 if (a == 0) {||| 76 return -1;||| 77 }||| 78 return a;||| 79 }||| 80 return gcd(abs(b - a), a);||| 81 }||| 82 int32_t main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(NULL);||| 85 cout.tie(NULL);||| 86 int tt, n;||| 87 cin >> tt;||| 88 pr(100000);||| 89 vector<int> pri(1000);||| 90 int last = 0;||| 91 for (int i = 0; i < 1000; i++) {||| 92 while (!prime[last]) {||| 93 last++;||| 94 }||| 95 pri[i] = last;||| 96 last++;||| 97 }||| 98 while (tt--) {||| 99 cin >> n;||| 100 for (int i = 0; i < n; i++) {||| 101 cout << pri[i - 1] << "" "";||| 102 }||| 103 cout << endl;||| 104 }||| 105 }||| "	"101 cout << pri[i] << "" "";"
106	294	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 const long long inf = 1e6;||| 6 const long long mod = 1e9;||| 7 void solve() {||| 8 long long n;||| 9 cin >> n;||| 10 vector<long long> a(n);||| 11 for (long long i = 0; i < n; i++) a[i] = i + 2;||| 12 for (auto i : a) cout << i << "" "";||| 13 cout << ""\n"";||| 14 }||| 15 signed main() {||| 16 ios_base::sync_with_stdio(0);||| 17 cin.tie(0);||| 18 cout.tie(0);||| 19 long long tests = 1;||| 20 cin >> tests;||| 21 while (tests--) {||| 22 solve();||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 const long long inf = 1e6;||| 6 const long long mod = 1e9;||| 7 void solve() {||| 8 long long n;||| 9 cin >> n;||| 10 vector<long long> a(n);||| 11 for (long long i = 0; i < n; i++) a[i] = i + 1;||| 12 for (auto i : a) cout << i << "" "";||| 13 cout << ""\n"";||| 14 }||| 15 signed main() {||| 16 ios_base::sync_with_stdio(0);||| 17 cin.tie(0);||| 18 cout.tie(0);||| 19 long long tests = 1;||| 20 cin >> tests;||| 21 while (tests--) {||| 22 solve();||| 23 }||| 24 return 0;||| 25 }||| "	11 for (long long i = 0; i < n; i++) a[i] = i + 2;
106	165	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 cout << 2 << "" "";||| 7 for (int i = 1; i < n; i++) {||| 8 cout << i + 2 << "" "";||| 9 }||| 10 cout << endl;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 cout << 2 << "" "";||| 7 for (int i = 1; i <= n; i++) {||| 8 cout << i + 2 << "" "";||| 9 }||| 10 cout << endl;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 return 0;||| 19 }||| "	7 for (int i = 1; i < n; i++) {
107	101	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 int main() {||| 5 int t = 1;||| 6 while (t--) {||| 7 solve();||| 8 cout << endl;||| 9 }||| 10 return 0;||| 11 }||| 12 void solve() {||| 13 int n, a, b;||| 14 cin >> n >> a >> b;||| 15 if (abs(a - b) <= 1 && a + b + 2 <= n) {||| 16 if (a <= b) {||| 17 int i, j, k = min(a, b);||| 18 if (a < b) {||| 19 cout << 2 << "" "" << 1 << "" "";||| 20 i = 4, j = 3;||| 21 } else {||| 22 cout << 1 << "" "";||| 23 i = 3, j = 2;||| 24 }||| 25 for (; max(i, j) < n && k > 0; i += 2, j += 2, k--)||| 26 cout << i << "" "" << j << "" "";||| 27 for (int t = min(i, j); t <= n; t++) cout << t << "" "";||| 28 } else {||| 29 int i = n - 1, j = n, k = max(a, b);||| 30 for (; min(i, j) > 0 && k > 0; i -= 2, j -= 2, k--)||| 31 cout << i << "" "" << j << "" "";||| 32 for (int t = max(i, j); t > 0; t--) cout << t << "" "";||| 33 }||| 34 } else {||| 35 cout << -1;||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 int main() {||| 5 int t = 1;||| 6 while (t--) {||| 7 solve();||| 8 cout << endl;||| 9 }||| 10 return 0;||| 11 }||| 12 void solve() {||| 13 int n, a, b;||| 14 cin >> n >> a >> b;||| 15 if (abs(a - b) <= 1 && a + b + 2 <= n) {||| 16 if (a <= b) {||| 17 int i, j, k = min(a, b);||| 18 if (a < b) {||| 19 cout << 2 << "" "" << 1 << "" "";||| 20 i = 3, j = 4;||| 21 } else {||| 22 cout << 1 << "" "";||| 23 i = 3, j = 2;||| 24 }||| 25 for (; max(i, j) < n && k > 0; i += 2, j += 2, k--)||| 26 cout << i << "" "" << j << "" "";||| 27 for (int t = min(i, j); t <= n; t++) cout << t << "" "";||| 28 } else {||| 29 int i = n - 1, j = n, k = max(a, b);||| 30 for (; min(i, j) > 0 && k > 0; i -= 2, j -= 2, k--)||| 31 cout << i << "" "" << j << "" "";||| 32 for (int t = max(i, j); t > 0; t--) cout << t << "" "";||| 33 }||| 34 } else {||| 35 cout << -1;||| 36 }||| 37 }||| "	20 i = 4, j = 3;
107	382	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, m, n, s, t, x, z, y;||| 4 int main() {||| 5 cin >> n;||| 6 while (n--) {||| 7 cin >> x >> y >> z;||| 8 if (y + z >= x - 1 || y - z > 1 || y - z < -1) {||| 9 cout << -1 << endl;||| 10 continue;||| 11 }||| 12 if (y > z) {||| 13 cout << x - 1;||| 14 for (i = 1; i <= y; i++) {||| 15 cout << "" "" << x - (2 * i - 2);||| 16 if (i != y)||| 17 cout << "" "" << x - (2 * i + 1);||| 18 else||| 19 cout << "" "" << x - (2 * i);||| 20 }||| 21 for (i = x - (2 * y + 1); i >= 1; i--) cout << "" "" << i;||| 22 cout << endl;||| 23 }||| 24 if (y < z) {||| 25 cout << 2;||| 26 for (i = 1; i <= y; i++) {||| 27 cout << "" "" << 2 * i - 1;||| 28 cout << "" "" << 2 * i + 2;||| 29 }||| 30 cout << "" "" << 2 * y + 2 - 1;||| 31 for (i = 2 * y + 2 + 1; i <= x; i++) cout << "" "" << i;||| 32 }||| 33 if (y == z) {||| 34 cout << 1;||| 35 for (i = 1; i <= y; i++) {||| 36 cout << "" "" << 2 * i + 1;||| 37 cout << "" "" << 2 * i;||| 38 }||| 39 for (i = 2 * y + 2; i <= x; i++) cout << "" "" << i;||| 40 }||| 41 cout << endl;||| 42 }||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, m, n, s, t, x, z, y;||| 4 int main() {||| 5 cin >> n;||| 6 while (n--) {||| 7 cin >> x >> y >> z;||| 8 if (y + z >= x - 1 || y - z > 1 || y - z < -1) {||| 9 cout << -1 << endl;||| 10 continue;||| 11 }||| 12 if (y > z) {||| 13 cout << x - 1;||| 14 for (i = 1; i <= y; i++) {||| 15 cout << "" "" << x - (2 * i - 2);||| 16 if (i != y)||| 17 cout << "" "" << x - (2 * i + 1);||| 18 else||| 19 cout << "" "" << x - (2 * i);||| 20 }||| 21 for (i = x - (2 * y + 1); i >= 1; i--) cout << "" "" << i;||| 22 cout << endl;||| 23 }||| 24 if (y < z) {||| 25 cout << 2;||| 26 for (i = 1; i <= y; i++) {||| 27 cout << "" "" << 2 * i - 1;||| 28 cout << "" "" << 2 * i + 2;||| 29 }||| 30 cout << "" "" << 2 * y + 2 - 1;||| 31 for (i = 2 * y + 2 + 1; i <= x; i++) cout << "" "" << i;||| 32 }||| 33 if (y == z) {||| 34 cout << 1;||| 35 for (i = 1; i <= y; i++) {||| 36 cout << "" "" << 2 * i + 1;||| 37 cout << "" "" << 2 * i;||| 38 }||| 39 for (i = 2 * i + 2; i <= x; i++) cout << "" "" << i;||| 40 }||| 41 cout << endl;||| 42 }||| 43 }||| "	"39 for (i = 2 * y + 2; i <= x; i++) cout << "" "" << i;"
107	455	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.1415926535897932384626433;||| 3 const int KL = 1e6;||| 4 const long long MOD = 1e9 + 7;||| 5 using namespace std;||| 6 int q, x, y, z, n, m, a, b, ans;||| 7 string t;||| 8 vector<int> vec;||| 9 int main() {||| 10 scanf(""%d"", &q);||| 11 while (q--) {||| 12 scanf(""%d"", &n);||| 13 scanf(""%d"", &a);||| 14 scanf(""%d"", &b);||| 15 if (a + b <= n - 2 && abs(a - b) <= 1) {||| 16 if (a == b + 1) {||| 17 int cnt = n - 1;||| 18 while (a > 0) {||| 19 printf(""%d %d "", cnt, cnt + 1);||| 20 cnt -= 2;||| 21 a -= 1;||| 22 }||| 23 for (int i = cnt + 1; i >= 1; i--) printf(""%d "", i);||| 24 printf(""\n"");||| 25 } else if (a == b) {||| 26 int cnt = a + b;||| 27 while (a > 0) {||| 28 printf(""%d %d "", cnt, cnt + 1);||| 29 cnt -= 2;||| 30 a--;||| 31 }||| 32 printf(""1 "");||| 33 for (int i = b + b + 2; i <= n; i++) printf(""%d "", i);||| 34 printf(""\n"");||| 35 } else {||| 36 int cnt = 2;||| 37 while (b > 0) {||| 38 printf(""%d %d "", cnt, cnt - 1);||| 39 cnt += 2;||| 40 b--;||| 41 }||| 42 for (int i = cnt - 1; i <= n; i++) printf(""%d "", i);||| 43 printf(""\n"");||| 44 }||| 45 } else||| 46 printf(""-1\n"");||| 47 }||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.1415926535897932384626433;||| 3 const int KL = 1e6;||| 4 const long long MOD = 1e9 + 7;||| 5 using namespace std;||| 6 int q, x, y, z, n, m, a, b, ans;||| 7 string t;||| 8 vector<int> vec;||| 9 int main() {||| 10 scanf(""%d"", &q);||| 11 while (q--) {||| 12 scanf(""%d"", &n);||| 13 scanf(""%d"", &a);||| 14 scanf(""%d"", &b);||| 15 if (a + b <= n - 2 && abs(a - b) <= 1) {||| 16 if (a == b + 1) {||| 17 int cnt = n - 1;||| 18 while (a > 0) {||| 19 printf(""%d %d "", cnt, cnt + 1);||| 20 cnt -= 2;||| 21 a -= 1;||| 22 }||| 23 for (int i = cnt + 1; i >= 1; i--) printf(""%d "", cnt);||| 24 printf(""\n"");||| 25 } else if (a == b) {||| 26 int cnt = a + b;||| 27 while (a > 0) {||| 28 printf(""%d %d "", cnt, cnt + 1);||| 29 cnt -= 2;||| 30 a--;||| 31 }||| 32 printf(""1 "");||| 33 for (int i = b + b + 2; i <= n; i++) printf(""%d "", i);||| 34 printf(""\n"");||| 35 } else {||| 36 int cnt = 2;||| 37 while (b > 0) {||| 38 printf(""%d %d "", cnt, cnt - 1);||| 39 cnt += 2;||| 40 b--;||| 41 }||| 42 for (int i = cnt - 1; i <= n; i++) printf(""%d "", i);||| 43 printf(""\n"");||| 44 }||| 45 } else||| 46 printf(""-1\n"");||| 47 }||| 48 return 0;||| 49 }||| "	"23 for (int i = cnt + 1; i >= 1; i--) printf(""%d "", i);"
107	213	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1000000007;||| 4 const long long MM = 998244353;||| 5 const long long INF = 9e18;||| 6 long long expm(long long a, long long b) {||| 7 long long res = 1;||| 8 while (b > 0) {||| 9 if (b & 1) res = (res % M * a % M) % M;||| 10 a = (a % M * a % M) % M;||| 11 b >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 signed main() {||| 16 ios::sync_with_stdio(NULL), cin.tie(NULL), cout.tie(NULL);||| 17 auto start = chrono::high_resolution_clock::now();||| 18 long long tt = 1;||| 19 cin >> tt;||| 20 for (long long test = 1; test <= tt; test++) {||| 21 long long n, a, b;||| 22 cin >> n >> a >> b;||| 23 long long x = abs(a - b);||| 24 if (x > 1 || max(a, b) > n / 2 || (a + b) >= n - 1) {||| 25 cout << -1 << ""\n"";||| 26 continue;||| 27 }||| 28 if (a == b) {||| 29 long long p = 1, q = n;||| 30 for (long long i = 1; i <= a; i++) {||| 31 cout << p << "" "" << q << "" "";||| 32 p++;||| 33 q--;||| 34 }||| 35 while (p <= q) {||| 36 cout << p << "" "";||| 37 p++;||| 38 }||| 39 cout << ""\n"";||| 40 } else if (a > b) {||| 41 long long p = 1, q = n;||| 42 for (long long i = 1; i <= a; i++) {||| 43 cout << p << "" "" << q << "" "";||| 44 p++;||| 45 q--;||| 46 }||| 47 while (q >= p) {||| 48 cout << q << "" "";||| 49 q--;||| 50 }||| 51 cout << ""\n"";||| 52 } else {||| 53 long long p = 1, q = n;||| 54 for (long long i = 1; i <= b; i++) {||| 55 cout << q << "" "" << p << "" "";||| 56 p++;||| 57 q--;||| 58 }||| 59 while (p <= q) {||| 60 cout << p << "" "";||| 61 p++;||| 62 }||| 63 cout << ""\n"";||| 64 }||| 65 }||| 66 cout << ""\n"";||| 67 auto stop = chrono::high_resolution_clock::now();||| 68 auto duration = chrono::duration_cast<chrono::microseconds>(stop - start);||| 69 cerr << duration.count() / 1000.0 << "" ms\n"";||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1000000007;||| 4 const long long MM = 998244353;||| 5 const long long INF = 9e18;||| 6 long long expm(long long a, long long b) {||| 7 long long res = 1;||| 8 while (b > 0) {||| 9 if (b & 1) res = (res % M * a % M) % M;||| 10 a = (a % M * a % M) % M;||| 11 b >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 signed main() {||| 16 ios::sync_with_stdio(NULL), cin.tie(NULL), cout.tie(NULL);||| 17 auto start = chrono::high_resolution_clock::now();||| 18 long long tt = 1;||| 19 cin >> tt;||| 20 for (long long test = 1; test <= tt; test++) {||| 21 long long n, a, b;||| 22 cin >> n >> a >> b;||| 23 long long x = abs(a - b);||| 24 if (x > 1 || max(a, b) > n / 2 || (a + b) >= n) {||| 25 cout << -1 << ""\n"";||| 26 continue;||| 27 }||| 28 if (a == b) {||| 29 long long p = 1, q = n;||| 30 for (long long i = 1; i <= a; i++) {||| 31 cout << p << "" "" << q << "" "";||| 32 p++;||| 33 q--;||| 34 }||| 35 while (p <= q) {||| 36 cout << p << "" "";||| 37 p++;||| 38 }||| 39 cout << ""\n"";||| 40 } else if (a > b) {||| 41 long long p = 1, q = n;||| 42 for (long long i = 1; i <= a; i++) {||| 43 cout << p << "" "" << q << "" "";||| 44 p++;||| 45 q--;||| 46 }||| 47 while (q >= p) {||| 48 cout << q << "" "";||| 49 q--;||| 50 }||| 51 cout << ""\n"";||| 52 } else {||| 53 long long p = 1, q = n;||| 54 for (long long i = 1; i <= b; i++) {||| 55 cout << q << "" "" << p << "" "";||| 56 p++;||| 57 q--;||| 58 }||| 59 while (p <= q) {||| 60 cout << p << "" "";||| 61 p++;||| 62 }||| 63 cout << ""\n"";||| 64 }||| 65 }||| 66 cout << ""\n"";||| 67 auto stop = chrono::high_resolution_clock::now();||| 68 auto duration = chrono::duration_cast<chrono::microseconds>(stop - start);||| 69 cerr << duration.count() / 1000.0 << "" ms\n"";||| 70 return 0;||| 71 }||| "	24 if (x > 1 || max(a, b) > n / 2 || (a + b) >= n - 1) {
107	407	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int arr[N];||| 5 int main(void) {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 int n, a, b;||| 10 cin >> n >> a >> b;||| 11 bool flag = true;||| 12 for (int i = 1; i <= n; i++) arr[i] = i;||| 13 int maxv = (n - 2) / 2 + (n & 1);||| 14 if (a > maxv || b > maxv)||| 15 flag = false;||| 16 else if (abs(a - b) > 1)||| 17 flag = false;||| 18 else if ((n & 1) && a == maxv && b == maxv)||| 19 flag = false;||| 20 else if (a == 0 && b == 0) {||| 21 for (int i = 1; i <= n; i++) arr[i] = i;||| 22 } else {||| 23 if (a == b) {||| 24 int l = 1, r = n;||| 25 for (int i = 1; i <= b * 2 + 1; i += 2) arr[i] = r--;||| 26 for (int i = 2; i <= a * 2; i += 2) arr[i] = l++;||| 27 for (int i = 2 * b + 2; i <= n; i++) arr[i] = r--;||| 28 } else if (a == b + 1) {||| 29 int l = 1, r = n;||| 30 for (int i = 1; i <= a * 2; i += 2) arr[i] = l++;||| 31 for (int i = 2; i <= a * 2; i += 2) arr[i] = r--;||| 32 for (int i = 2 * a + 1; i <= n; i++) arr[i] = r--;||| 33 } else {||| 34 int l = 1, r = n;||| 35 for (int i = 1; i <= b * 2; i += 2) arr[i] = r--;||| 36 for (int i = 2; i <= b * 2; i += 2) arr[i] = l++;||| 37 for (int i = 2 * b + 1; i <= n; i++) arr[i] = l++;||| 38 }||| 39 }||| 40 if (flag) {||| 41 for (int i = 1; i <= n; i++) cout << arr[i] << "" "";||| 42 cout << endl;||| 43 } else||| 44 cout << ""-1"" << endl;||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int arr[N];||| 5 int main(void) {||| 6 int T;||| 7 cin >> T;||| 8 while (T--) {||| 9 int n, a, b;||| 10 cin >> n >> a >> b;||| 11 bool flag = true;||| 12 for (int i = 1; i <= n; i++) arr[i] = i;||| 13 int maxv = (n - 2) / 2 + (n & 1);||| 14 if (a > maxv || b > maxv)||| 15 flag = false;||| 16 else if (abs(a - b) > 1)||| 17 flag = false;||| 18 else if ((n & 1) && a == maxv && b == maxv)||| 19 flag = false;||| 20 else if (a == 0 && b == 0) {||| 21 for (int i = 1; i <= n; i++) arr[i] = i;||| 22 } else {||| 23 if (a == b) {||| 24 int l = 1, r = n;||| 25 for (int i = 1; i <= b * 2 + 1; i += 2) arr[i] = r--;||| 26 for (int i = 2; i <= a * 2; i += 2) arr[i] = l++;||| 27 for (int i = 2 * b + 2; i <= n; i++) arr[i] = l++;||| 28 } else if (a == b + 1) {||| 29 int l = 1, r = n;||| 30 for (int i = 1; i <= a * 2; i += 2) arr[i] = l++;||| 31 for (int i = 2; i <= a * 2; i += 2) arr[i] = r--;||| 32 for (int i = 2 * a + 1; i <= n; i++) arr[i] = r--;||| 33 } else {||| 34 int l = 1, r = n;||| 35 for (int i = 1; i <= b * 2; i += 2) arr[i] = r--;||| 36 for (int i = 2; i <= b * 2; i += 2) arr[i] = l++;||| 37 for (int i = 2 * b + 1; i <= n; i++) arr[i] = l++;||| 38 }||| 39 }||| 40 if (flag) {||| 41 for (int i = 1; i <= n; i++) cout << arr[i] << "" "";||| 42 cout << endl;||| 43 } else||| 44 cout << ""-1"" << endl;||| 45 }||| 46 return 0;||| 47 }||| "	27 for (int i = 2 * b + 2; i <= n; i++) arr[i] = r--;
107	317	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 return b ? gcd(b, a % b) : a;||| 5 }||| 6 long long int expo(long long int a, long long int b, long long int mod) {||| 7 long long int res = 1;||| 8 while (b > 0) {||| 9 if (b & 1) res = (res * a) % mod;||| 10 a = (a * a) % mod;||| 11 b = b >> 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long int mminvprime(long long int a, long long int b) {||| 16 return expo(a, b - 2, b);||| 17 }||| 18 long long int mod_add(long long int a, long long int b, long long int m) {||| 19 a = a % m;||| 20 b = b % m;||| 21 return (((a + b) % m) + m) % m;||| 22 }||| 23 long long int mod_mul(long long int a, long long int b, long long int m) {||| 24 a = a % m;||| 25 b = b % m;||| 26 return (((a * b) % m) + m) % m;||| 27 }||| 28 long long int mod_sub(long long int a, long long int b, long long int m) {||| 29 a = a % m;||| 30 b = b % m;||| 31 return (((a - b) % m) + m) % m;||| 32 }||| 33 long long int mod_div(long long int a, long long int b, long long int m) {||| 34 a = a % m;||| 35 b = b % m;||| 36 return (mod_mul(a, mminvprime(b, m), m) + m) % m;||| 37 }||| 38 vector<long long int> sieve(int n) {||| 39 int* arr = new int[n + 1]();||| 40 vector<long long int> vect;||| 41 for (int i = 2; i <= n; i++)||| 42 if (arr[i] == 0) {||| 43 vect.push_back(i);||| 44 for (int j = 2 * i; j <= n; j += i) arr[j] = 1;||| 45 }||| 46 return vect;||| 47 }||| 48 void solve() {||| 49 long long int n;||| 50 cin >> n;||| 51 long long int a;||| 52 cin >> a;||| 53 long long int b;||| 54 cin >> b;||| 55 vector<long long int> v;||| 56 if (abs(a - b) > 1 || (n - 2 + 1) / 2 < a || (n - 2 + 1) / 2 < b ||||| 57 (n - 2) < (a + b)) {||| 58 cout << ""-1\n"";||| 59 return;||| 60 }||| 61 long long int mn = min(a, b);||| 62 long long int points = n;||| 63 if (a > b) {||| 64 long long int i = 1;||| 65 while (mn >= 0 && points > 0) {||| 66 v.push_back(i);||| 67 v.push_back(n - i + 1);||| 68 points -= 2;||| 69 i++;||| 70 mn--;||| 71 }||| 72 long long int start = i - 1;||| 73 while ((n - i + 1) > start && points > 0) {||| 74 v.push_back(n - i + 1);||| 75 points -= 1;||| 76 i++;||| 77 }||| 78 } else if (b > a) {||| 79 long long int i = 1;||| 80 while (mn >= 0 && points > 0) {||| 81 v.push_back(n - i + 1);||| 82 v.push_back(i);||| 83 points -= 2;||| 84 i++;||| 85 mn--;||| 86 }||| 87 long long int end = n - i + 1 + 1;||| 88 while (i < end && points > 0) {||| 89 v.push_back(i);||| 90 points -= 1;||| 91 i++;||| 92 }||| 93 } else {||| 94 long long int i = 1;||| 95 while (mn > 0 && points > 0 && (a + b) > 0) {||| 96 v.push_back(n - i + 1);||| 97 v.push_back(i);||| 98 points -= 2;||| 99 i++;||| 100 mn--;||| 101 }||| 102 long long int start = i - 1;||| 103 while ((n - i + 1) > start && points > 0) {||| 104 v.push_back(n - i + 1);||| 105 points -= 1;||| 106 i++;||| 107 }||| 108 }||| 109 for (auto it : v) {||| 110 cout << it << ' ';||| 111 }||| 112 cout << ""\n"";||| 113 }||| 114 int main() {||| 115 ios::sync_with_stdio(0);||| 116 cin.tie(0);||| 117 cout.tie(0);||| 118 ;||| 119 long long int t = 1;||| 120 cin >> t;||| 121 while (t--) {||| 122 solve();||| 123 }||| 124 return 0;||| 125 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 return b ? gcd(b, a % b) : a;||| 5 }||| 6 long long int expo(long long int a, long long int b, long long int mod) {||| 7 long long int res = 1;||| 8 while (b > 0) {||| 9 if (b & 1) res = (res * a) % mod;||| 10 a = (a * a) % mod;||| 11 b = b >> 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long int mminvprime(long long int a, long long int b) {||| 16 return expo(a, b - 2, b);||| 17 }||| 18 long long int mod_add(long long int a, long long int b, long long int m) {||| 19 a = a % m;||| 20 b = b % m;||| 21 return (((a + b) % m) + m) % m;||| 22 }||| 23 long long int mod_mul(long long int a, long long int b, long long int m) {||| 24 a = a % m;||| 25 b = b % m;||| 26 return (((a * b) % m) + m) % m;||| 27 }||| 28 long long int mod_sub(long long int a, long long int b, long long int m) {||| 29 a = a % m;||| 30 b = b % m;||| 31 return (((a - b) % m) + m) % m;||| 32 }||| 33 long long int mod_div(long long int a, long long int b, long long int m) {||| 34 a = a % m;||| 35 b = b % m;||| 36 return (mod_mul(a, mminvprime(b, m), m) + m) % m;||| 37 }||| 38 vector<long long int> sieve(int n) {||| 39 int* arr = new int[n + 1]();||| 40 vector<long long int> vect;||| 41 for (int i = 2; i <= n; i++)||| 42 if (arr[i] == 0) {||| 43 vect.push_back(i);||| 44 for (int j = 2 * i; j <= n; j += i) arr[j] = 1;||| 45 }||| 46 return vect;||| 47 }||| 48 void solve() {||| 49 long long int n;||| 50 cin >> n;||| 51 long long int a;||| 52 cin >> a;||| 53 long long int b;||| 54 cin >> b;||| 55 vector<long long int> v;||| 56 if (abs(a - b) > 1 || (n - 2 + 1) / 2 < a || (n - 2 + 1) / 2 < b ||||| 57 (n - 2) < (a + b)) {||| 58 cout << ""-1\n"";||| 59 return;||| 60 }||| 61 long long int mn = min(a, b);||| 62 long long int points = n;||| 63 if (a > b) {||| 64 long long int i = 1;||| 65 while (mn >= 0 && points > 0) {||| 66 v.push_back(i);||| 67 v.push_back(n - i + 1);||| 68 points -= 2;||| 69 i++;||| 70 mn--;||| 71 }||| 72 long long int start = i - 1;||| 73 while ((n - i + 1) > start && points > 0) {||| 74 v.push_back(n - i + 1);||| 75 points -= 1;||| 76 i++;||| 77 }||| 78 } else if (b > a) {||| 79 long long int i = 1;||| 80 while (mn >= 0 && points > 0) {||| 81 v.push_back(n - i + 1);||| 82 v.push_back(i);||| 83 points -= 2;||| 84 i++;||| 85 mn--;||| 86 }||| 87 long long int end = n - i + 1 + 1;||| 88 while (i < end && points > 0) {||| 89 v.push_back(i);||| 90 points -= 1;||| 91 i++;||| 92 }||| 93 } else {||| 94 long long int i = 1;||| 95 while (mn >= 0 && points > 0 && (a + b) > 0) {||| 96 v.push_back(n - i + 1);||| 97 v.push_back(i);||| 98 points -= 2;||| 99 i++;||| 100 mn--;||| 101 }||| 102 long long int start = i - 1;||| 103 while ((n - i + 1) > start && points > 0) {||| 104 v.push_back(n - i + 1);||| 105 points -= 1;||| 106 i++;||| 107 }||| 108 }||| 109 for (auto it : v) {||| 110 cout << it << ' ';||| 111 }||| 112 cout << ""\n"";||| 113 }||| 114 int main() {||| 115 ios::sync_with_stdio(0);||| 116 cin.tie(0);||| 117 cout.tie(0);||| 118 ;||| 119 long long int t = 1;||| 120 cin >> t;||| 121 while (t--) {||| 122 solve();||| 123 }||| 124 return 0;||| 125 }||| "	95 while (mn > 0 && points > 0 && (a + b) > 0) {
107	298	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, a, b;||| 5 cin >> n >> a >> b;||| 6 if (abs(a - b) > 1) {||| 7 cout << ""-1\n"";||| 8 return;||| 9 }||| 10 if (a > b) {||| 11 if (2 * a + 1 > n) {||| 12 cout << ""-1\n"";||| 13 return;||| 14 }||| 15 cout << ""1 "";||| 16 for (long long i = a + 2; i <= n - a; i++) cout << i << "" "";||| 17 for (long long i = 2; i <= a + 1; i++) {||| 18 cout << n - i + 2 << "" "" << i << "" "";||| 19 }||| 20 cout << ""\n"";||| 21 } else if (b > a) {||| 22 if (2 * b + 1 > n) {||| 23 cout << ""-1\n"";||| 24 return;||| 25 }||| 26 cout << n << "" "";||| 27 for (long long i = n - b - 1; i > b; i--) {||| 28 cout << i << "" "";||| 29 }||| 30 for (long long i = 1; i <= b; i++) {||| 31 cout << i << "" "" << n - i << "" "";||| 32 }||| 33 cout << ""\n"";||| 34 } else {||| 35 if (2 * a + 2 > n) {||| 36 cout << ""-1\n"";||| 37 return;||| 38 }||| 39 if (n == 1) {||| 40 cout << ""1\n"";||| 41 return;||| 42 }||| 43 cout << ""1 "";||| 44 for (long long i = a + 2; i < n - a; i++) cout << i << "" "";||| 45 cout << n << "" "";||| 46 for (long long i = 2; i <= a + 1; i++) {||| 47 cout << i << "" "" << n - i + 1 << "" "";||| 48 }||| 49 cout << ""\n"";||| 50 }||| 51 }||| 52 signed main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(nullptr);||| 55 cout.tie(nullptr);||| 56 long long testcases = 1;||| 57 cin >> testcases;||| 58 while (testcases--) solve();||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, a, b;||| 5 cin >> n >> a >> b;||| 6 if (abs(a - b) > 1) {||| 7 cout << ""-1\n"";||| 8 return;||| 9 }||| 10 if (a > b) {||| 11 if (2 * a + 1 > n) {||| 12 cout << ""-1\n"";||| 13 return;||| 14 }||| 15 cout << ""1 "";||| 16 for (long long i = a + 2; i <= n - a; i++) cout << i << "" "";||| 17 for (long long i = 2; i <= a + 1; i++) {||| 18 cout << n - i + 2 << "" "" << i << "" "";||| 19 }||| 20 cout << ""\n"";||| 21 } else if (b > a) {||| 22 if (2 * b + 1 > n) {||| 23 cout << ""-1\n"";||| 24 return;||| 25 }||| 26 cout << n << "" "";||| 27 for (long long i = n - b - 1; i > b; i--) {||| 28 cout << i << "" "";||| 29 }||| 30 for (long long i = 1; i <= b; i++) {||| 31 cout << i << "" "" << n - i << "" "";||| 32 }||| 33 cout << ""\n"";||| 34 } else {||| 35 if (2 * a + 1 > n) {||| 36 cout << ""-1\n"";||| 37 return;||| 38 }||| 39 if (n == 1) {||| 40 cout << ""1\n"";||| 41 return;||| 42 }||| 43 cout << ""1 "";||| 44 for (long long i = a + 2; i < n - a; i++) cout << i << "" "";||| 45 cout << n << "" "";||| 46 for (long long i = 2; i <= a + 1; i++) {||| 47 cout << i << "" "" << n - i + 1 << "" "";||| 48 }||| 49 cout << ""\n"";||| 50 }||| 51 }||| 52 signed main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(nullptr);||| 55 cout.tie(nullptr);||| 56 long long testcases = 1;||| 57 cin >> testcases;||| 58 while (testcases--) solve();||| 59 return 0;||| 60 }||| "	35 if (2 * a + 2 > n) {
108	271	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Arg1>||| 4 void __f(const char* name, Arg1&& arg1) {||| 5 std::cerr << name << "" : "" << arg1 << '\n';||| 6 }||| 7 template <typename Arg1, typename... Args>||| 8 void __f(const char* names, Arg1&& arg1, Args&&... args) {||| 9 const char* comma = strchr(names + 1, ',');||| 10 std::cerr.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 11 __f(comma + 1, args...);||| 12 }||| 13 template <typename T, typename U>||| 14 static inline void amin(T& x, U y) {||| 15 if (y < x) x = y;||| 16 }||| 17 template <typename T, typename U>||| 18 static inline void amax(T& x, U y) {||| 19 if (x < y) x = y;||| 20 }||| 21 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 22 struct custom_hash {||| 23 static uint64_t splitmix64(uint64_t x) {||| 24 x += 0x9e3779b97f4a7c15;||| 25 x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;||| 26 x = (x ^ (x >> 27)) * 0x94d049bb133111eb;||| 27 return x ^ (x >> 31);||| 28 }||| 29 size_t operator()(uint64_t x) const {||| 30 static const uint64_t FIXED_RANDOM =||| 31 chrono::steady_clock::now().time_since_epoch().count();||| 32 return splitmix64(x + FIXED_RANDOM);||| 33 }||| 34 };||| 35 long long max(long long a, long long b) { return (a > b) ? a : b; }||| 36 long long min(long long a, long long b) { return (a < b) ? a : b; }||| 37 long long solve() {||| 38 long long n;||| 39 cin >> n;||| 40 vector<pair<long long, long long> > v(n);||| 41 for (long long i = 0; i < n; i++) cin >> v[i].first;||| 42 for (long long i = 0; i < n; i++) cin >> v[i].second;||| 43 long long m1, m2;||| 44 m1 = m2 = 0;||| 45 priority_queue<pair<long long, long long> > p1, p2;||| 46 for (long long i = 0; i < n; i++) {||| 47 p1.push({v[i].first, i});||| 48 p2.push({v[i].second, i});||| 49 m1 = max(m1, v[i].first);||| 50 m2 = max(m2, v[i].second);||| 51 }||| 52 bool vis[n];||| 53 memset(vis, 0, sizeof(vis));||| 54 queue<long long> q;||| 55 for (long long i = 0; i < n; i++) {||| 56 if (v[i].first == m1 || v[i].second == m2) {||| 57 vis[i] = 1;||| 58 q.push(i);||| 59 }||| 60 }||| 61 while (!q.empty()) {||| 62 auto f = q.front();||| 63 q.pop();||| 64 long long v1 = v[f].first, v2 = v[f].second;||| 65 while (p1.size() && p1.top().first >= v1) {||| 66 if (vis[p1.top().second] == 0) q.push(p1.top().second);||| 67 vis[p1.top().second] = 1;||| 68 p1.pop();||| 69 }||| 70 while (p2.size() && p2.top().first >= v2) {||| 71 if (vis[p2.top().second] == 0) q.push(p2.top().second);||| 72 vis[p2.top().second] = 1;||| 73 p2.pop();||| 74 }||| 75 }||| 76 for (auto i : vis) cout << i;||| 77 cout << '\n';||| 78 return 0;||| 79 }||| 80 signed main() {||| 81 ios_base::sync_with_stdio(false);||| 82 cin.tie(0);||| 83 cout.tie(0);||| 84 long long t = 1;||| 85 cin >> t;||| 86 while (t--) {||| 87 solve();||| 88 }||| 89 return 0;||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename Arg1>||| 4 void __f(const char* name, Arg1&& arg1) {||| 5 std::cerr << name << "" : "" << arg1 << '\n';||| 6 }||| 7 template <typename Arg1, typename... Args>||| 8 void __f(const char* names, Arg1&& arg1, Args&&... args) {||| 9 const char* comma = strchr(names + 1, ',');||| 10 std::cerr.write(names, comma - names) << "" : "" << arg1 << "" | "";||| 11 __f(comma + 1, args...);||| 12 }||| 13 template <typename T, typename U>||| 14 static inline void amin(T& x, U y) {||| 15 if (y < x) x = y;||| 16 }||| 17 template <typename T, typename U>||| 18 static inline void amax(T& x, U y) {||| 19 if (x < y) x = y;||| 20 }||| 21 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 22 struct custom_hash {||| 23 static uint64_t splitmix64(uint64_t x) {||| 24 x += 0x9e3779b97f4a7c15;||| 25 x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;||| 26 x = (x ^ (x >> 27)) * 0x94d049bb133111eb;||| 27 return x ^ (x >> 31);||| 28 }||| 29 size_t operator()(uint64_t x) const {||| 30 static const uint64_t FIXED_RANDOM =||| 31 chrono::steady_clock::now().time_since_epoch().count();||| 32 return splitmix64(x + FIXED_RANDOM);||| 33 }||| 34 };||| 35 long long max(long long a, long long b) { return (a > b) ? a : b; }||| 36 long long min(long long a, long long b) { return (a < b) ? a : b; }||| 37 long long solve() {||| 38 long long n;||| 39 cin >> n;||| 40 vector<pair<long long, long long> > v(n);||| 41 for (long long i = 0; i < n; i++) cin >> v[i].first;||| 42 for (long long i = 0; i < n; i++) cin >> v[i].second;||| 43 long long m1, m2;||| 44 m1 = m2 = 0;||| 45 priority_queue<pair<long long, long long> > p1, p2;||| 46 for (long long i = 0; i < n; i++) {||| 47 p1.push({v[i].first, i});||| 48 p1.push({v[i].second, i});||| 49 m1 = max(m1, v[i].first);||| 50 m2 = max(m2, v[i].second);||| 51 }||| 52 bool vis[n];||| 53 memset(vis, 0, sizeof(vis));||| 54 queue<long long> q;||| 55 for (long long i = 0; i < n; i++) {||| 56 if (v[i].first == m1 || v[i].second == m2) {||| 57 vis[i] = 1;||| 58 q.push(i);||| 59 }||| 60 }||| 61 while (!q.empty()) {||| 62 auto f = q.front();||| 63 q.pop();||| 64 long long v1 = v[f].first, v2 = v[f].second;||| 65 while (p1.size() && p1.top().first >= v1) {||| 66 if (vis[p1.top().second] == 0) q.push(p1.top().second);||| 67 vis[p1.top().second] = 1;||| 68 p1.pop();||| 69 }||| 70 while (p2.size() && p2.top().first >= v2) {||| 71 if (vis[p2.top().second] == 0) q.push(p2.top().second);||| 72 vis[p2.top().second] = 1;||| 73 p2.pop();||| 74 }||| 75 }||| 76 for (auto i : vis) cout << i;||| 77 cout << '\n';||| 78 return 0;||| 79 }||| 80 signed main() {||| 81 ios_base::sync_with_stdio(false);||| 82 cin.tie(0);||| 83 cout.tie(0);||| 84 long long t = 1;||| 85 cin >> t;||| 86 while (t--) {||| 87 solve();||| 88 }||| 89 return 0;||| 90 }||| "	48 p2.push({v[i].second, i});
108	54	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100100;||| 4 struct pp {||| 5 pair<int, int> p;||| 6 int id;||| 7 } w[N];||| 8 int cmp(pp a, pp b) { return a.p.second < b.p.second; }||| 9 set<int, greater<int> > los;||| 10 set<int, greater<int> > L;||| 11 int ans[N];||| 12 void solve() {||| 13 los.clear();||| 14 int n;||| 15 cin >> n;||| 16 for (int i = 1; i <= n; i++) {||| 17 scanf(""%d"", &w[i].p.first);||| 18 w[i].id = i;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 scanf(""%d"", &w[i].p.second);||| 22 }||| 23 sort(w + 1, w + 1 + n, cmp);||| 24 int win = w[n].p.first;||| 25 ans[w[n].id] = 1;||| 26 for (int i = 1; i <= n - 1; i++) {||| 27 L.insert(w[i].p.first);||| 28 }||| 29 for (int i = n - 1; i >= 1; i--) {||| 30 if (w[i].p.first > win || *L.begin() > win) {||| 31 win = min(win, w[i].p.first);||| 32 ans[w[i].id] = 1;||| 33 while (!los.empty()) {||| 34 int x = *los.begin();||| 35 if (w[i].p.first < x) {||| 36 win = min(win, x);||| 37 los.erase(los.begin());||| 38 } else||| 39 break;||| 40 }||| 41 } else {||| 42 los.insert(w[i].p.first);||| 43 ans[w[i].id] = 0;||| 44 }||| 45 L.erase(w[i].p.first);||| 46 }||| 47 for (int i = 1; i <= n; i++) {||| 48 cout << ans[i];||| 49 }||| 50 cout << '\n';||| 51 }||| 52 int main() {||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 solve();||| 57 }||| 58 return 0;||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100100;||| 4 struct pp {||| 5 pair<int, int> p;||| 6 int id;||| 7 } w[N];||| 8 int cmp(pp a, pp b) { return a.p.second < b.p.second; }||| 9 set<int, greater<int> > los;||| 10 set<int, greater<int> > L;||| 11 int ans[N];||| 12 void solve() {||| 13 los.clear();||| 14 int n;||| 15 cin >> n;||| 16 for (int i = 1; i <= n; i++) {||| 17 scanf(""%d"", &w[i].p.first);||| 18 w[i].id = i;||| 19 }||| 20 for (int i = 1; i <= n; i++) {||| 21 scanf(""%d"", &w[i].p.second);||| 22 }||| 23 sort(w + 1, w + 1 + n, cmp);||| 24 int win = w[n].p.first;||| 25 ans[w[n].id] = 1;||| 26 for (int i = 1; i <= n - 1; i++) {||| 27 L.insert(w[i].p.second);||| 28 }||| 29 for (int i = n - 1; i >= 1; i--) {||| 30 if (w[i].p.first > win || *L.begin() > win) {||| 31 win = min(win, w[i].p.first);||| 32 ans[w[i].id] = 1;||| 33 while (!los.empty()) {||| 34 int x = *los.begin();||| 35 if (w[i].p.first < x) {||| 36 win = min(win, x);||| 37 los.erase(los.begin());||| 38 } else||| 39 break;||| 40 }||| 41 } else {||| 42 los.insert(w[i].p.first);||| 43 ans[w[i].id] = 0;||| 44 }||| 45 L.erase(w[i].p.second);||| 46 }||| 47 for (int i = 1; i <= n; i++) {||| 48 cout << ans[i];||| 49 }||| 50 cout << '\n';||| 51 }||| 52 int main() {||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 solve();||| 57 }||| 58 return 0;||| 59 }||| "	27 L.insert(w[i].p.first);
108	62	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<long long>> g, g_rev;||| 4 signed main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long t;||| 8 cin >> t;||| 9 for (long long q = 0; q < t; q++) {||| 10 long long n;||| 11 cin >> n;||| 12 vector<long long> a(n), b(n);||| 13 map<long long, long long> ma, mb;||| 14 for (long long i = 0; i < n; i++) {||| 15 cin >> a[i];||| 16 ma[a[i]] = i;||| 17 }||| 18 for (long long i = 0; i < n; i++) {||| 19 cin >> b[i];||| 20 mb[b[i]] = i;||| 21 }||| 22 set<long long> winners;||| 23 vector<long long> a_add, b_add;||| 24 a_add.push_back(prev(ma.end())->second);||| 25 winners.insert(prev(ma.end())->second);||| 26 ma.erase(prev(ma.end()));||| 27 long long cnt = 1;||| 28 while (cnt > 0) {||| 29 cnt = 0;||| 30 for (auto &e : a_add) {||| 31 while (mb.lower_bound(b[e]) != mb.end()) {||| 32 b_add.push_back(mb.lower_bound(b[e])->second);||| 33 winners.insert(mb.lower_bound(b[e])->second);||| 34 cnt++;||| 35 mb.erase(mb.lower_bound(b[e]));||| 36 }||| 37 }||| 38 a_add.clear();||| 39 for (auto &e : b_add) {||| 40 while (ma.lower_bound(a[e]) != ma.end()) {||| 41 a_add.push_back(ma.lower_bound(a[e])->second);||| 42 winners.insert(ma.lower_bound(a[e])->second);||| 43 cnt++;||| 44 ma.erase(ma.lower_bound(a[e]));||| 45 }||| 46 }||| 47 b_add.clear();||| 48 }||| 49 for (long long i = 0; i < n; i++) {||| 50 if (winners.count(i)) {||| 51 cout << 1;||| 52 } else {||| 53 cout << 0;||| 54 }||| 55 }||| 56 cout << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<long long>> g, g_rev;||| 4 signed main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long t;||| 8 cin >> t;||| 9 for (long long q = 0; q < t; q++) {||| 10 long long n;||| 11 cin >> n;||| 12 vector<long long> a(n), b(n);||| 13 map<long long, long long> ma, mb;||| 14 for (long long i = 0; i < n; i++) {||| 15 cin >> a[i];||| 16 ma[a[i]] = i;||| 17 }||| 18 for (long long i = 0; i < n; i++) {||| 19 cin >> b[i];||| 20 mb[b[i]] = i;||| 21 }||| 22 set<long long> winners;||| 23 vector<long long> a_add, b_add;||| 24 a_add.push_back(prev(ma.end())->second);||| 25 winners.insert(prev(ma.end())->second);||| 26 ma.erase(prev(ma.end()));||| 27 long long cnt = 1;||| 28 while (cnt > 0) {||| 29 cnt = 0;||| 30 for (auto &e : a_add) {||| 31 while (mb.lower_bound(b[e]) != mb.end()) {||| 32 b_add.push_back(mb.lower_bound(b[e])->second);||| 33 winners.insert(mb.lower_bound(b[e])->second);||| 34 cnt++;||| 35 mb.erase(mb.lower_bound(b[e]));||| 36 }||| 37 }||| 38 a_add.clear();||| 39 for (auto &e : b_add) {||| 40 while (ma.lower_bound(a[e]) != ma.end()) {||| 41 a_add.push_back(ma.lower_bound(a[e])->second);||| 42 winners.insert(mb.lower_bound(a[e])->second);||| 43 cnt++;||| 44 ma.erase(ma.lower_bound(a[e]));||| 45 }||| 46 }||| 47 b_add.clear();||| 48 }||| 49 for (long long i = 0; i < n; i++) {||| 50 if (winners.count(i)) {||| 51 cout << 1;||| 52 } else {||| 53 cout << 0;||| 54 }||| 55 }||| 56 cout << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	42 winners.insert(ma.lower_bound(a[e])->second);
109	55	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int max_n = 200111, inf = 1000111222, mod = 998244353;||| 4 int f[max_n];||| 5 int rf[max_n];||| 6 int powm(int a, int b) {||| 7 if (b == 0) {||| 8 return 1;||| 9 }||| 10 if (b % 2 == 0) {||| 11 return powm((1LL * a * a) % mod, b / 2);||| 12 } else {||| 13 return (1LL * a * powm(a, b - 1)) % mod;||| 14 }||| 15 }||| 16 void precalc() {||| 17 f[0] = 1;||| 18 for (int i = 1; i < max_n; ++i) {||| 19 f[i] = (1LL * f[i - 1] * i) % mod;||| 20 }||| 21 rf[max_n - 1] = powm(f[max_n - 1], mod - 2);||| 22 for (int i = max_n - 2; i >= 0; --i) {||| 23 rf[i] = (1LL * rf[i + 1] * (i + 1)) % mod;||| 24 }||| 25 }||| 26 int C(int n, int k) {||| 27 if (k > n) return 0;||| 28 return ((1LL * f[n] * rf[n - k] % mod) * rf[k]) % mod;||| 29 }||| 30 int A(int n, int k) {||| 31 if (k > n) return 0;||| 32 return (1LL * f[n] * rf[n - k]) % mod;||| 33 }||| 34 string s[max_n];||| 35 int n;||| 36 long long dp[max_n][4];||| 37 bool can01(string s) {||| 38 if (s[0] == '1') return 0;||| 39 if (s[1] == '0') return 0;||| 40 return 1;||| 41 }||| 42 bool can10(string s) {||| 43 if (s[0] == '0') return 0;||| 44 if (s[1] == '1') return 0;||| 45 return 1;||| 46 }||| 47 int main() {||| 48 ios_base::sync_with_stdio(0);||| 49 cin.tie(0);||| 50 cin >> n;||| 51 precalc();||| 52 int c1 = 0, c0 = 0, cq = 0;||| 53 bool have00 = 0;||| 54 bool have11 = 0;||| 55 for (int i = 0; i < n; ++i) {||| 56 cin >> s[i];||| 57 for (int j = 0; j < 2; ++j) {||| 58 if (s[i][j] == 'W') s[i][j] = '0';||| 59 if (s[i][j] == 'B') s[i][j] = '1';||| 60 if (s[i][j] == '0') ++c0;||| 61 if (s[i][j] == '1') ++c1;||| 62 if (s[i][j] == '?') ++cq;||| 63 }||| 64 if (s[i] == ""00"") have00 = 1;||| 65 if (s[i] == ""11"") have11 = 1;||| 66 }||| 67 if (c0 > n || c1 > n) {||| 68 puts(""0"");||| 69 return 0;||| 70 }||| 71 int need = n - c0;||| 72 long long ans = C(cq, need);||| 73 if (have00 || have11) {||| 74 cout << ans << endl;||| 75 return 0;||| 76 }||| 77 c0 = can01(s[0]);||| 78 c1 = can10(s[0]);||| 79 if (c0) {||| 80 dp[0][1] = 1;||| 81 }||| 82 if (c1) {||| 83 dp[0][2] = 1;||| 84 }||| 85 for (int i = 1; i < n; ++i) {||| 86 int c0 = can01(s[i]);||| 87 int c1 = can10(s[i]);||| 88 for (int mask = 0; mask <= 3; ++mask) {||| 89 if (c0) {||| 90 dp[i][mask | 1] += dp[i - 1][mask];||| 91 dp[i][mask | 1] %= mod;||| 92 }||| 93 if (c1) {||| 94 dp[i][mask | 2] += dp[i - 1][mask];||| 95 dp[i][mask | 2] %= mod;||| 96 }||| 97 }||| 98 }||| 99 cout << (ans - dp[n - 1][3] + mod) % mod;||| 100 return 0;||| 101 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int max_n = 200111, inf = 1000111222, mod = 998244353;||| 4 int f[max_n];||| 5 int rf[max_n];||| 6 int powm(int a, int b) {||| 7 if (b == 0) {||| 8 return 1;||| 9 }||| 10 if (b % 2 == 0) {||| 11 return powm((1LL * a * a) % mod, b / 2);||| 12 } else {||| 13 return (1LL * a * powm(a, b - 1)) % mod;||| 14 }||| 15 }||| 16 void precalc() {||| 17 f[0] = 1;||| 18 for (int i = 1; i < max_n; ++i) {||| 19 f[i] = (1LL * f[i - 1] * i) % mod;||| 20 }||| 21 rf[max_n - 1] = powm(f[max_n - 1], mod - 2);||| 22 for (int i = max_n - 2; i >= 0; --i) {||| 23 rf[i] = (1LL * rf[i + 1] * (i + 1)) % mod;||| 24 }||| 25 }||| 26 int C(int n, int k) {||| 27 if (k > n) return 0;||| 28 return ((1LL * f[n] * rf[n - k] % mod) * rf[k]) % mod;||| 29 }||| 30 int A(int n, int k) {||| 31 if (k > n) return 0;||| 32 return (1LL * f[n] * rf[n - k]) % mod;||| 33 }||| 34 string s[max_n];||| 35 int n;||| 36 long long dp[max_n][4];||| 37 bool can01(string s) {||| 38 if (s[0] == '1') return 0;||| 39 if (s[1] == '0') return 0;||| 40 return 1;||| 41 }||| 42 bool can10(string s) {||| 43 if (s[0] == '0') return 0;||| 44 if (s[1] == '1') return 0;||| 45 return 1;||| 46 }||| 47 int main() {||| 48 ios_base::sync_with_stdio(0);||| 49 cin.tie(0);||| 50 cin >> n;||| 51 precalc();||| 52 int c1 = 0, c0 = 0, cq = 0;||| 53 bool have00 = 0;||| 54 bool have11 = 0;||| 55 for (int i = 0; i < n; ++i) {||| 56 cin >> s[i];||| 57 for (int j = 0; j < 2; ++j) {||| 58 if (s[i][j] == 'W') s[i][j] = '0';||| 59 if (s[i][j] == 'B') s[i][j] = '1';||| 60 if (s[i][j] == '0') ++c0;||| 61 if (s[i][j] == '1') ++c1;||| 62 if (s[i][j] == '?') ++cq;||| 63 }||| 64 if (s[i] == ""00"") have00 = 1;||| 65 if (s[i] == ""11"") have11 = 1;||| 66 }||| 67 if (c0 > n || c1 > n) {||| 68 puts(""0"");||| 69 return 0;||| 70 }||| 71 int need = n - c0;||| 72 long long ans = C(cq, need);||| 73 if (have00 || have11) {||| 74 cout << ans << endl;||| 75 return 0;||| 76 }||| 77 c0 = can01(s[0]);||| 78 c1 = can10(s[0]);||| 79 if (c0) {||| 80 dp[0][0] = 1;||| 81 }||| 82 if (c1) {||| 83 dp[0][2] = 1;||| 84 }||| 85 for (int i = 1; i < n; ++i) {||| 86 int c0 = can01(s[i]);||| 87 int c1 = can10(s[i]);||| 88 for (int mask = 0; mask <= 3; ++mask) {||| 89 if (c0) {||| 90 dp[i][mask | 1] += dp[i - 1][mask];||| 91 dp[i][mask | 1] %= mod;||| 92 }||| 93 if (c1) {||| 94 dp[i][mask | 2] += dp[i - 1][mask];||| 95 dp[i][mask | 2] %= mod;||| 96 }||| 97 }||| 98 }||| 99 cout << (ans - dp[n - 1][3] + mod) % mod;||| 100 return 0;||| 101 }||| "	80 dp[0][1] = 1;
109	44	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 return (b == 0LL ? a : gcd(b, a % b));||| 5 }||| 6 long double dist(long double x, long double arayikhalatyan, long double x2,||| 7 long double y2) {||| 8 return sqrt((x - x2) * (x - x2) +||| 9 (arayikhalatyan - y2) * (arayikhalatyan - y2));||| 10 }||| 11 long long int S(long long int a) { return (a * (a + 1LL)) / 2; }||| 12 mt19937 rnd(363542);||| 13 char vow[] = {'a', 'e', 'i', 'o', 'u'};||| 14 int dx[] = {0, -1, 0, 1, -1, -1, 1, 1, 0};||| 15 int dy[] = {-1, 0, 1, 0, -1, 1, -1, 1, 0};||| 16 const int N = 1e5 + 20;||| 17 const long long int mod = 998244353;||| 18 const long double pi = acos(-1);||| 19 const int T = 200;||| 20 long long int bp(long long int a, long long int b = mod - 2LL) {||| 21 long long int ret = 1;||| 22 while (b) {||| 23 if (b & 1) ret *= a, ret %= mod;||| 24 a *= a;||| 25 a %= mod;||| 26 b >>= 1;||| 27 }||| 28 return ret;||| 29 }||| 30 ostream& operator<<(ostream& c, pair<int, int> a) {||| 31 c << a.first << "" "" << a.second;||| 32 return c;||| 33 }||| 34 template <class T>||| 35 void maxi(T& a, T b) {||| 36 a = max(a, b);||| 37 }||| 38 template <class T>||| 39 void mini(T& a, T b) {||| 40 a = min(a, b);||| 41 }||| 42 int n;||| 43 int r0, r1, l0, l1;||| 44 string s[N];||| 45 long long int f[N], ans;||| 46 long long int c(int n, int k) {||| 47 long long int ret = f[n] * bp(f[k]);||| 48 ret %= mod;||| 49 ret *= bp(f[n - k]);||| 50 ret %= mod;||| 51 return ret;||| 52 }||| 53 long long int ss() {||| 54 int sm = 0, a = 0, b = 0;||| 55 for (int i = 0; i < n; i++) {||| 56 if (s[i][0] == s[i][1] && s[i][0] == '?')||| 57 sm++;||| 58 else if (s[i][0] == s[i][1])||| 59 return 0;||| 60 if (s[i][0] == 'W' || s[i][1] == 'B')||| 61 a++;||| 62 else if (s[i][0] == 'B' || s[i][1] == 'W')||| 63 b++;||| 64 }||| 65 long long int ret = bp(2, sm);||| 66 if (a == 0) ret--;||| 67 if (b == 0) ret--;||| 68 return ret;||| 69 }||| 70 int main() {||| 71 ios_base::sync_with_stdio(false);||| 72 cin.tie(0);||| 73 cout.tie(0);||| 74 ;||| 75 cin >> n;||| 76 f[0] = 1;||| 77 for (long long int i = 1; i <= n; i++) {||| 78 f[i] = f[i - 1] * 1LL * i;||| 79 f[i] %= mod;||| 80 }||| 81 for (int i = 0; i < n; i++) {||| 82 cin >> s[i];||| 83 if (s[i][0] == 'W')||| 84 l0++;||| 85 else if (s[i][0] == 'B')||| 86 l1++;||| 87 if (s[i][1] == 'W')||| 88 r0++;||| 89 else if (s[i][1] == 'B')||| 90 r1++;||| 91 }||| 92 for (int i = 0; i <= n - l0 - l1; i++) {||| 93 int l00 = l0 + i;||| 94 int l11 = n - l00;||| 95 int r00 = l11;||| 96 int r11 = l00;||| 97 if (r00 < r0 || r11 < r1) continue;||| 98 ans += (c(n - l0 - l1, i) * c(n - r0 - r1, r11 - r1)) % mod;||| 99 ans %= mod;||| 100 }||| 101 ans -= ss();||| 102 ans = (ans + mod) % mod;||| 103 cout << ans << endl;||| 104 return 0;||| 105 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 return (b == 0LL ? a : gcd(b, a % b));||| 5 }||| 6 long double dist(long double x, long double arayikhalatyan, long double x2,||| 7 long double y2) {||| 8 return sqrt((x - x2) * (x - x2) +||| 9 (arayikhalatyan - y2) * (arayikhalatyan - y2));||| 10 }||| 11 long long int S(long long int a) { return (a * (a + 1LL)) / 2; }||| 12 mt19937 rnd(363542);||| 13 char vow[] = {'a', 'e', 'i', 'o', 'u'};||| 14 int dx[] = {0, -1, 0, 1, -1, -1, 1, 1, 0};||| 15 int dy[] = {-1, 0, 1, 0, -1, 1, -1, 1, 0};||| 16 const int N = 1e5 + 20;||| 17 const long long int mod = 998244353;||| 18 const long double pi = acos(-1);||| 19 const int T = 200;||| 20 long long int bp(long long int a, long long int b = mod - 2LL) {||| 21 long long int ret = 1;||| 22 while (b) {||| 23 if (b & 1) ret *= a, ret %= mod;||| 24 a *= a;||| 25 a %= mod;||| 26 b >>= 1;||| 27 }||| 28 return ret;||| 29 }||| 30 ostream& operator<<(ostream& c, pair<int, int> a) {||| 31 c << a.first << "" "" << a.second;||| 32 return c;||| 33 }||| 34 template <class T>||| 35 void maxi(T& a, T b) {||| 36 a = max(a, b);||| 37 }||| 38 template <class T>||| 39 void mini(T& a, T b) {||| 40 a = min(a, b);||| 41 }||| 42 int n;||| 43 int r0, r1, l0, l1;||| 44 string s[N];||| 45 long long int f[N], ans;||| 46 long long int c(int n, int k) {||| 47 long long int ret = f[n] * bp(f[k]);||| 48 ret %= mod;||| 49 ret *= bp(f[n - k]);||| 50 ret %= mod;||| 51 return ret;||| 52 }||| 53 long long int ss() {||| 54 int sm = 0, a = 0, b = 0;||| 55 for (int i = 0; i < n; i++) {||| 56 if (s[i][0] == s[i][1] && s[i][0] == '?')||| 57 sm++;||| 58 else if (s[i][0] == s[i][1])||| 59 return 0;||| 60 if (s[i][0] == 'W' || s[i][1] == 'B')||| 61 a++;||| 62 else if (s[i][0] == 'B' || s[i][1] == 'W')||| 63 b++;||| 64 }||| 65 long long int ret = bp(2, sm);||| 66 if (a == 0) ret--;||| 67 if (b == 0) ret--;||| 68 return ret;||| 69 }||| 70 int main() {||| 71 ios_base::sync_with_stdio(false);||| 72 cin.tie(0);||| 73 cout.tie(0);||| 74 ;||| 75 cin >> n;||| 76 f[0] = 1;||| 77 for (long long int i = 1; i <= n; i++) {||| 78 f[i] = f[i - 1] * 1LL * i;||| 79 f[i] %= mod;||| 80 }||| 81 for (int i = 0; i < n; i++) {||| 82 cin >> s[i];||| 83 if (s[i][0] == 'W')||| 84 l0++;||| 85 else if (s[i][0] == 'B')||| 86 l1++;||| 87 if (s[i][1] == 'W')||| 88 r0++;||| 89 else if (s[i][0] == 'B')||| 90 r1++;||| 91 }||| 92 for (int i = 0; i <= n - l0 - l1; i++) {||| 93 int l00 = l0 + i;||| 94 int l11 = n - l00;||| 95 int r00 = l11;||| 96 int r11 = l00;||| 97 if (r00 < r0 || r11 < r1) continue;||| 98 ans += (c(n - l0 - l1, i) * c(n - r0 - r1, r11 - r1)) % mod;||| 99 ans %= mod;||| 100 }||| 101 ans -= ss();||| 102 ans = (ans + mod) % mod;||| 103 cout << ans << endl;||| 104 return 0;||| 105 }||| "	89 else if (s[i][1] == 'B')
109	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char d[100001][3];||| 4 inline long long qpow(long long base, long long expo) {||| 5 long long ret = 1;||| 6 for (; expo; (base *= base) %= 998244353, expo >>= 1)||| 7 if (expo & 1) (ret *= base) %= 998244353;||| 8 return ret;||| 9 }||| 10 long long fac[100001], invfac[100001];||| 11 inline long long C(int n, int m) {||| 12 return fac[n] * invfac[m] % 998244353 * invfac[n - m] % 998244353;||| 13 }||| 14 int main() {||| 15 int n;||| 16 scanf(""%d"", &n);||| 17 int b0 = 0, b1 = 0, w0 = 0, w1 = 0;||| 18 fac[0] = invfac[0] = 1;||| 19 for (int i = 1; i <= n; i++) {||| 20 scanf(""%s"", d[i]);||| 21 b0 += d[i][0] == 'B';||| 22 b1 += d[i][1] == 'B';||| 23 w0 += d[i][0] == 'W';||| 24 w1 += d[i][1] == 'W';||| 25 fac[i] = fac[i - 1] * i % 998244353;||| 26 }||| 27 invfac[n] = qpow(fac[n], 998244353 - 2);||| 28 for (int i = n - 1; i; i--) invfac[i] = invfac[i + 1] * (i + 1) % 998244353;||| 29 int f0 = n - b0 - w0, f1 = n - b1 - w1;||| 30 long long ans = 0;||| 31 for (int i = 0; i <= f0; i++) {||| 32 int c1 = b0 + i - w1;||| 33 if (c1 >= 0 && c1 <= f1) ans = (ans + C(f0, i) * C(f1, c1)) % 998244353;||| 34 }||| 35 bool flag = 0;||| 36 int set = 0, bw = 0, wb = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if ((d[i][0] == 'B' && d[i][1] == 'B') ||||| 39 (d[i][0] == 'W' && d[i][1] == 'W')) {||| 40 flag = 1;||| 41 break;||| 42 }||| 43 bw += d[i][0] == 'B' || d[i][1] == 'W';||| 44 wb += d[i][0] == 'W' || d[i][1] == 'B';||| 45 if (d[i][0] != '?' || d[i][1] != '?') set++;||| 46 }||| 47 if (!flag) {||| 48 ans = ans - qpow(2, n - set) + 998244353;||| 49 if (!bw || !wb) ans++;||| 50 if (!set) ans++;||| 51 ans %= 998244353;||| 52 }||| 53 printf(""%lld"", ans);||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char d[100001][3];||| 4 inline long long qpow(long long base, long long expo) {||| 5 long long ret = 1;||| 6 for (; expo; (base *= base) %= 998244353, expo >>= 1)||| 7 if (expo & 1) (ret *= base) %= 998244353;||| 8 return ret;||| 9 }||| 10 long long fac[100001], invfac[100001];||| 11 inline long long C(int n, int m) {||| 12 return fac[n] * invfac[m] % 998244353 * invfac[n - m] % 998244353;||| 13 }||| 14 int main() {||| 15 int n;||| 16 scanf(""%d"", &n);||| 17 int b0 = 0, b1 = 0, w0 = 0, w1 = 0;||| 18 fac[0] = invfac[0] = 1;||| 19 for (int i = 1; i <= n; i++) {||| 20 scanf(""%s"", d[i]);||| 21 b0 += d[i][0] == 'B';||| 22 b1 += d[i][1] == 'B';||| 23 w0 += d[i][0] == 'W';||| 24 w1 += d[i][1] == 'W';||| 25 fac[i] = fac[i - 1] * i % 998244353;||| 26 }||| 27 invfac[n] = qpow(fac[n], 998244353 - 2);||| 28 for (int i = n - 1; i; i--) invfac[i] = invfac[i + 1] * (i + 1) % 998244353;||| 29 int f0 = n - b0 - w0, f1 = n - b1 - w1;||| 30 long long ans = 0;||| 31 for (int i = 0; i <= f0; i++) {||| 32 int c1 = b0 + i - b1;||| 33 if (c1 >= 0 && c1 <= f1) ans = (ans + C(f0, i) * C(f1, c1)) % 998244353;||| 34 }||| 35 bool flag = 0;||| 36 int set = 0, bw = 0, wb = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 if ((d[i][0] == 'B' && d[i][1] == 'B') ||||| 39 (d[i][0] == 'W' && d[i][1] == 'W')) {||| 40 flag = 1;||| 41 break;||| 42 }||| 43 bw += d[i][0] == 'B' || d[i][1] == 'W';||| 44 wb += d[i][0] == 'W' || d[i][1] == 'B';||| 45 if (d[i][0] != '?' || d[i][1] != '?') set++;||| 46 }||| 47 if (!flag) {||| 48 ans = ans - qpow(2, n - set) + 998244353;||| 49 if (!bw || !wb) ans++;||| 50 if (!set) ans++;||| 51 ans %= 998244353;||| 52 }||| 53 printf(""%lld"", ans);||| 54 return 0;||| 55 }||| "	32 int c1 = b0 + i - w1;
110	141	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3,unroll-loops"")||| 3 #pragma GCC target(""avx2,bmi,bmi2,lzcnt,popcnt"")||| 4 using namespace std;||| 5 const long long infll = (long long)1e18 + 228;||| 6 const int inf = 1e9 + 228;||| 7 const int mod = 998244353;||| 8 const int MOD = 1e9 + 7;||| 9 using mem = vector<pair<int, int>>;||| 10 int solve(mem a, mem b, mem c) {||| 11 sort((a).begin(), (a).end());||| 12 sort((b).begin(), (b).end());||| 13 sort((c).begin(), (c).end());||| 14 int n = a.size();||| 15 int L = 0, R = a.size() + 1;||| 16 while (R - L > 1) {||| 17 bool ok = 0;||| 18 int M = (L + R) / 2;||| 19 int p1 = M - 1;||| 20 int p2 = inf;||| 21 for (int i = 0; i < n; ++i) {||| 22 if (b[i].first > a[p1].first) {||| 23 p2 = i;||| 24 break;||| 25 }||| 26 }||| 27 if (n - p2 >= M) {||| 28 int p3 = inf;||| 29 p2 += M - 1;||| 30 for (int i = 0; i < n; ++i) {||| 31 if (c[i].first > a[p1].first && c[i].first > b[p2].first) {||| 32 p3 = i;||| 33 break;||| 34 }||| 35 }||| 36 ok |= (n - p3 >= M);||| 37 }||| 38 vector<int> yb, yc;||| 39 for (int i = 0; i < n; ++i) {||| 40 if (b[i].first > a[p1].first) {||| 41 yb.emplace_back(b[i].second);||| 42 }||| 43 if (c[i].first > a[p1].first) {||| 44 yc.emplace_back(c[i].second);||| 45 }||| 46 }||| 47 if (yb.size() >= M) {||| 48 nth_element(yb.begin(), yb.begin() + M - 1, yb.end());||| 49 int ct = 0;||| 50 for (auto x : yc) {||| 51 if (x > yb[M - 1]) {||| 52 ++ct;||| 53 }||| 54 }||| 55 ok |= (ct >= M);||| 56 }||| 57 if (ok) {||| 58 L = M;||| 59 } else {||| 60 R = M;||| 61 }||| 62 }||| 63 return L;||| 64 }||| 65 signed main() {||| 66 ios_base::sync_with_stdio(false);||| 67 cin.tie(0);||| 68 cout.tie(0);||| 69 int n;||| 70 cin >> n;||| 71 mem a, b, c;||| 72 vector<int> diff;||| 73 for (int i = 0; i < n; ++i) {||| 74 int x, y, col;||| 75 cin >> x >> y >> col;||| 76 if (col == 1) {||| 77 a.emplace_back(x, y);||| 78 } else if (col == 2) {||| 79 b.emplace_back(x, y);||| 80 } else if (col == 3) {||| 81 c.emplace_back(x, y);||| 82 }||| 83 }||| 84 int ans = 0;||| 85 for (int k = 0; k < 4; ++k) {||| 86 ans = max(ans, solve(a, b, c));||| 87 ans = max(ans, solve(a, c, b));||| 88 ans = max(ans, solve(b, a, c));||| 89 ans = max(ans, solve(b, c, a));||| 90 ans = max(ans, solve(c, a, b));||| 91 ans = max(ans, solve(c, b, a));||| 92 for (auto &[x, y] : a) {||| 93 tie(x, y) = make_pair(-y, x);||| 94 }||| 95 for (auto &[x, y] : b) {||| 96 tie(x, y) = make_pair(-y, x);||| 97 }||| 98 for (auto &[x, y] : c) {||| 99 tie(x, y) = make_pair(-y, x);||| 100 }||| 101 }||| 102 cout << 3 * ans << '\n';||| 103 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3,unroll-loops"")||| 3 #pragma GCC target(""avx2,bmi,bmi2,lzcnt,popcnt"")||| 4 using namespace std;||| 5 const long long infll = (long long)1e18 + 228;||| 6 const int inf = 1e9 + 228;||| 7 const int mod = 998244353;||| 8 const int MOD = 1e9 + 7;||| 9 using mem = vector<pair<int, int>>;||| 10 int solve(mem a, mem b, mem c) {||| 11 sort((a).begin(), (a).end());||| 12 sort((b).begin(), (b).end());||| 13 sort((c).begin(), (c).end());||| 14 int n = a.size();||| 15 int L = 0, R = a.size() + 1;||| 16 while (R - L > 1) {||| 17 bool ok = 0;||| 18 int M = (L + R) / 2;||| 19 int p1 = M - 1;||| 20 int p2 = inf;||| 21 for (int i = 0; i < n; ++i) {||| 22 if (b[i].first > a[p1].first) {||| 23 p2 = i;||| 24 break;||| 25 }||| 26 }||| 27 if (n - p2 >= M) {||| 28 int p3 = inf;||| 29 p2 += M - 1;||| 30 for (int i = 0; i < n; ++i) {||| 31 if (c[i].first > a[p1].first && c[i].first > b[p2].first) {||| 32 p3 = i;||| 33 break;||| 34 }||| 35 }||| 36 ok |= (n - p3 >= M);||| 37 }||| 38 vector<int> yb, yc;||| 39 for (int i = 0; i < n; ++i) {||| 40 if (b[i].first > a[p1].first) {||| 41 yb.emplace_back(b[i].second);||| 42 }||| 43 if (c[i].first > a[p1].first) {||| 44 yc.emplace_back(c[i].second);||| 45 }||| 46 }||| 47 if (yb.size() >= M) {||| 48 nth_element(yb.begin(), yb.begin() + M, yb.end());||| 49 int ct = 0;||| 50 for (auto x : yc) {||| 51 if (x > yb[M - 1]) {||| 52 ++ct;||| 53 }||| 54 }||| 55 ok |= (ct >= M);||| 56 }||| 57 if (ok) {||| 58 L = M;||| 59 } else {||| 60 R = M;||| 61 }||| 62 }||| 63 return L;||| 64 }||| 65 signed main() {||| 66 ios_base::sync_with_stdio(false);||| 67 cin.tie(0);||| 68 cout.tie(0);||| 69 int n;||| 70 cin >> n;||| 71 mem a, b, c;||| 72 vector<int> diff;||| 73 for (int i = 0; i < n; ++i) {||| 74 int x, y, col;||| 75 cin >> x >> y >> col;||| 76 if (col == 1) {||| 77 a.emplace_back(x, y);||| 78 } else if (col == 2) {||| 79 b.emplace_back(x, y);||| 80 } else if (col == 3) {||| 81 c.emplace_back(x, y);||| 82 }||| 83 }||| 84 int ans = 0;||| 85 for (int k = 0; k < 4; ++k) {||| 86 ans = max(ans, solve(a, b, c));||| 87 ans = max(ans, solve(a, c, b));||| 88 ans = max(ans, solve(b, a, c));||| 89 ans = max(ans, solve(b, c, a));||| 90 ans = max(ans, solve(c, a, b));||| 91 ans = max(ans, solve(c, b, a));||| 92 for (auto &[x, y] : a) {||| 93 tie(x, y) = make_pair(-y, x);||| 94 }||| 95 for (auto &[x, y] : b) {||| 96 tie(x, y) = make_pair(-y, x);||| 97 }||| 98 for (auto &[x, y] : c) {||| 99 tie(x, y) = make_pair(-y, x);||| 100 }||| 101 }||| 102 cout << 3 * ans << '\n';||| 103 }||| "	48 nth_element(yb.begin(), yb.begin() + M - 1, yb.end());
110	93	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int max_n = 100000;||| 4 struct nd {||| 5 int x, y, c;||| 6 } a[max_n];||| 7 int x[max_n], y[max_n], c[max_n], tmp[max_n], n, ans = 0;||| 8 priority_queue<int> q1;||| 9 priority_queue<int, vector<int>, greater<int> > q2;||| 10 void lsh(int *x) {||| 11 for (int i = 0; i < n; i++) tmp[i] = x[i];||| 12 sort(tmp, tmp + n);||| 13 int nn = unique(tmp, tmp + n) - tmp;||| 14 for (int i = 0; i < n; i++) {||| 15 x[i] = lower_bound(tmp, tmp + nn, x[i]) - tmp;||| 16 }||| 17 }||| 18 int solve(int *p, int ca) {||| 19 while (!q1.empty()) q1.pop();||| 20 while (!q2.empty()) q2.pop();||| 21 for (int i = 0, j = 0; i < n; i = j) {||| 22 while (j < n && a[j].x == a[i].x) {||| 23 if (a[j].c == p[0]) {||| 24 ca--;||| 25 while (q1.size() > ca) q1.pop();||| 26 while (q2.size() > ca) q2.pop();||| 27 } else if (a[j].c == p[1]) {||| 28 q1.push(a[j].y);||| 29 while (q1.size() > ca) q1.pop();||| 30 } else {||| 31 q2.push(a[j].y);||| 32 while (q2.size() > ca) q2.pop();||| 33 }||| 34 j++;||| 35 }||| 36 if (ca && q1.size() == ca && q2.size() == ca && q1.top() < q2.top())||| 37 return ca;||| 38 }||| 39 return 0;||| 40 }||| 41 inline void chmax(int &a, int b) {||| 42 if (a < b) a = b;||| 43 }||| 44 void bigsolve(int *x, int *y, int ty = 1) {||| 45 int p[3] = {0, 1, 2}, cc[3] = {0, 0, 0};||| 46 for (int i = 0; i < n; i++)||| 47 a[i].x = x[i], a[i].y = y[i], cc[a[i].c = c[i] - 1]++;||| 48 sort(a, a + n, [](const nd &a, const nd &b) { return a.x < b.x; });||| 49 do {||| 50 chmax(ans, solve(p, cc[p[0]]));||| 51 } while (next_permutation(p, p + 3));||| 52 if (ty) {||| 53 reverse(a, a + n);||| 54 do {||| 55 chmax(ans, solve(p, cc[p[0]]));||| 56 } while (next_permutation(p, p + 3));||| 57 }||| 58 }||| 59 signed main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(0);||| 62 cin >> n;||| 63 for (int i = 0; i < n; i++) cin >> x[i] >> y[i] >> c[i];||| 64 lsh(x), lsh(y);||| 65 bigsolve(x, y), bigsolve(y, x);||| 66 bigsolve(x, x, 0), bigsolve(y, y, 0);||| 67 cout << ans * 3 << endl;||| 68 return 0;||| 69 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int max_n = 100000;||| 4 struct nd {||| 5 int x, y, c;||| 6 } a[max_n];||| 7 int x[max_n], y[max_n], c[max_n], tmp[max_n], n, ans = 0;||| 8 priority_queue<int> q1;||| 9 priority_queue<int, vector<int>, greater<int> > q2;||| 10 void lsh(int *x) {||| 11 for (int i = 0; i < n; i++) tmp[i] = x[i];||| 12 sort(tmp, tmp + n);||| 13 int nn = unique(tmp, tmp + n) - tmp;||| 14 for (int i = 0; i < n; i++) {||| 15 x[i] = lower_bound(tmp, tmp + nn, x[i]) - tmp;||| 16 }||| 17 }||| 18 int solve(int *p, int ca) {||| 19 while (!q1.empty()) q1.pop();||| 20 while (!q2.empty()) q2.pop();||| 21 for (int i = 0, j = 0; i < n; i = j) {||| 22 while (j < n && a[j].x == a[i].x) {||| 23 if (a[j].c == p[0]) {||| 24 ca--;||| 25 while (q1.size() > ca) q1.pop();||| 26 while (q2.size() > ca) q2.pop();||| 27 } else if (a[j].c == p[1]) {||| 28 q1.push(a[j].y);||| 29 while (q1.size() > ca) q1.pop();||| 30 } else {||| 31 q2.push(a[j].y);||| 32 while (q2.size() > ca) q2.pop();||| 33 }||| 34 j++;||| 35 }||| 36 if (ca && q1.size() == ca && q2.size() == ca && q1.top() <= q2.top())||| 37 return ca;||| 38 }||| 39 return 0;||| 40 }||| 41 inline void chmax(int &a, int b) {||| 42 if (a < b) a = b;||| 43 }||| 44 void bigsolve(int *x, int *y, int ty = 1) {||| 45 int p[3] = {0, 1, 2}, cc[3] = {0, 0, 0};||| 46 for (int i = 0; i < n; i++)||| 47 a[i].x = x[i], a[i].y = y[i], cc[a[i].c = c[i] - 1]++;||| 48 sort(a, a + n, [](const nd &a, const nd &b) { return a.x < b.x; });||| 49 do {||| 50 chmax(ans, solve(p, cc[p[0]]));||| 51 } while (next_permutation(p, p + 3));||| 52 if (ty) {||| 53 reverse(a, a + n);||| 54 do {||| 55 chmax(ans, solve(p, cc[p[0]]));||| 56 } while (next_permutation(p, p + 3));||| 57 }||| 58 }||| 59 signed main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(0);||| 62 cin >> n;||| 63 for (int i = 0; i < n; i++) cin >> x[i] >> y[i] >> c[i];||| 64 lsh(x), lsh(y);||| 65 bigsolve(x, y), bigsolve(y, x);||| 66 bigsolve(x, x, 0), bigsolve(y, y, 0);||| 67 cout << ans * 3 << endl;||| 68 return 0;||| 69 }||| 	36 if (ca && q1.size() == ca && q2.size() == ca && q1.top() < q2.top())
110	139	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = (int)1e5 + 5;||| 4 struct Point {||| 5 int x, y, c, idx;||| 6 Point() { x = y = c = idx = 0; }||| 7 void rotate() {||| 8 swap(x, y);||| 9 x = -x;||| 10 }||| 11 } P[MAXN], Q[MAXN];||| 12 bool operator<(Point a, Point b) {||| 13 return make_pair(a.x, a.y) < make_pair(b.x, b.y);||| 14 }||| 15 bool byY(Point a, Point b) { return make_pair(a.y, a.x) < make_pair(b.y, b.x); }||| 16 int perm[3];||| 17 int n;||| 18 bool check(int k) {||| 19 iota(perm, perm + 3, 1);||| 20 do {||| 21 int p = 0, cnt = 0;||| 22 while (p < n && (cnt < k || P[p].x == P[p + 1].x)) {||| 23 p++;||| 24 cnt += (P[p].c == perm[0]);||| 25 }||| 26 int q = p;||| 27 cnt = 0;||| 28 while (q < n && (cnt < k || P[q].x == P[q + 1].x)) {||| 29 q++;||| 30 cnt += (P[q].c == perm[1]);||| 31 }||| 32 cnt = 0;||| 33 for (int i = q + 1; i <= n; i++) {||| 34 cnt += (P[i].c == perm[2]);||| 35 }||| 36 if (cnt >= k) {||| 37 return 1;||| 38 }||| 39 vector<Point> T;||| 40 for (int i = 1; i <= n; i++) {||| 41 if (Q[i].idx > p) {||| 42 T.push_back(Q[i]);||| 43 }||| 44 }||| 45 q = -1;||| 46 cnt = 0;||| 47 while (q + 1 < (int)(T).size() && (cnt < k || T[q].y == T[q + 1].y)) {||| 48 q++;||| 49 cnt += (T[q].c == perm[1]);||| 50 }||| 51 cnt = 0;||| 52 for (int i = q + 1; i < (int)(T).size(); i++) {||| 53 cnt += (T[i].c == perm[2]);||| 54 }||| 55 if (cnt >= k) {||| 56 return 1;||| 57 }||| 58 } while (next_permutation(perm, perm + 3));||| 59 return 0;||| 60 }||| 61 int main() {||| 62 ios::sync_with_stdio(0);||| 63 cin.tie(0);||| 64 cin >> n;||| 65 for (int i = 1; i <= n; i++) {||| 66 cin >> P[i].x >> P[i].y >> P[i].c;||| 67 }||| 68 int ans = 0;||| 69 for (int i = 0; i < 3; i++) {||| 70 perm[i] = i;||| 71 }||| 72 for (int rot = 0; rot < 4; rot++) {||| 73 sort(P + 1, P + n + 1);||| 74 for (int i = 1; i <= n; i++) {||| 75 P[i].idx = i;||| 76 Q[i] = P[i];||| 77 }||| 78 sort(Q + 1, Q + n + 1, byY);||| 79 int l = 1, r = n / 3, opt = 0;||| 80 while (l <= r) {||| 81 int mid = (l + r) / 2;||| 82 if (check(mid)) {||| 83 opt = mid;||| 84 l = mid + 1;||| 85 } else {||| 86 r = mid - 1;||| 87 }||| 88 }||| 89 ans = max(ans, opt);||| 90 for (int i = 1; i <= n; i++) {||| 91 P[i].rotate();||| 92 }||| 93 }||| 94 cout << ans * 3 << endl;||| 95 return 0;||| 96 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = (int)1e5 + 5;||| 4 struct Point {||| 5 int x, y, c, idx;||| 6 Point() { x = y = c = idx = 0; }||| 7 void rotate() {||| 8 swap(x, y);||| 9 x = -x;||| 10 }||| 11 } P[MAXN], Q[MAXN];||| 12 bool operator<(Point a, Point b) {||| 13 return make_pair(a.x, a.y) < make_pair(b.x, b.y);||| 14 }||| 15 bool byY(Point a, Point b) { return make_pair(a.y, a.x) < make_pair(b.y, b.x); }||| 16 int perm[3];||| 17 int n;||| 18 bool check(int k) {||| 19 iota(perm, perm + 3, 1);||| 20 do {||| 21 int p = 0, cnt = 0;||| 22 while (p < n && (cnt < k || P[p].x == P[p + 1].x)) {||| 23 p++;||| 24 cnt += (P[p].c == perm[0]);||| 25 }||| 26 int q = p;||| 27 cnt = 0;||| 28 while (q < n && (cnt < k || P[q].x == P[q + 1].x)) {||| 29 q++;||| 30 cnt += (P[q].c == perm[1]);||| 31 }||| 32 cnt = 0;||| 33 for (int i = q + 1; i <= n; i++) {||| 34 cnt += (P[i].c == perm[2]);||| 35 }||| 36 if (cnt >= k) {||| 37 return 1;||| 38 }||| 39 vector<Point> T;||| 40 for (int i = 1; i <= n; i++) {||| 41 if (Q[i].idx > p) {||| 42 T.push_back(Q[i]);||| 43 }||| 44 }||| 45 q = 0;||| 46 cnt = 0;||| 47 while (q + 1 < (int)(T).size() && (cnt < k || T[q].y == T[q + 1].y)) {||| 48 q++;||| 49 cnt += (T[q].c == perm[1]);||| 50 }||| 51 cnt = 0;||| 52 for (int i = q + 1; i < (int)(T).size(); i++) {||| 53 cnt += (T[i].c == perm[2]);||| 54 }||| 55 if (cnt >= k) {||| 56 return 1;||| 57 }||| 58 } while (next_permutation(perm, perm + 3));||| 59 return 0;||| 60 }||| 61 int main() {||| 62 ios::sync_with_stdio(0);||| 63 cin.tie(0);||| 64 cin >> n;||| 65 for (int i = 1; i <= n; i++) {||| 66 cin >> P[i].x >> P[i].y >> P[i].c;||| 67 }||| 68 int ans = 0;||| 69 for (int i = 0; i < 3; i++) {||| 70 perm[i] = i;||| 71 }||| 72 for (int rot = 0; rot < 4; rot++) {||| 73 sort(P + 1, P + n + 1);||| 74 for (int i = 1; i <= n; i++) {||| 75 P[i].idx = i;||| 76 Q[i] = P[i];||| 77 }||| 78 sort(Q + 1, Q + n + 1, byY);||| 79 int l = 1, r = n / 3, opt = 0;||| 80 while (l <= r) {||| 81 int mid = (l + r) / 2;||| 82 if (check(mid)) {||| 83 opt = mid;||| 84 l = mid + 1;||| 85 } else {||| 86 r = mid - 1;||| 87 }||| 88 }||| 89 ans = max(ans, opt);||| 90 for (int i = 1; i <= n; i++) {||| 91 P[i].rotate();||| 92 }||| 93 }||| 94 cout << ans * 3 << endl;||| 95 return 0;||| 96 }||| 	45 q = -1;
110	132	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using cd = complex<double>;||| 4 mt19937 rnd(chrono::system_clock::now().time_since_epoch().count());||| 5 const long long N = 2e18;||| 6 struct ppp {||| 7 long long x, y;||| 8 };||| 9 long long c[4], n;||| 10 vector<ppp> h[5], s[5];||| 11 long long get(long long lx, long long rx, long long ly, long long ry,||| 12 long long k) {||| 13 long long l = N, r = -N, num = 0;||| 14 for (auto i : h[c[2]]) {||| 15 if (i.x >= lx && i.x <= rx && i.y >= ly && i.y <= ry) {||| 16 num++;||| 17 if (num == k) {||| 18 l = i.x;||| 19 break;||| 20 }||| 21 }||| 22 }||| 23 num = 0;||| 24 for (auto i : h[c[3]]) {||| 25 if (i.x > l && i.x <= rx && i.y >= ly && i.y <= ry) {||| 26 num++;||| 27 if (num == k) {||| 28 r = i.x;||| 29 break;||| 30 }||| 31 }||| 32 }||| 33 if (r > l) return 1;||| 34 l = N, r = -N, num = 0;||| 35 for (auto i : s[c[2]]) {||| 36 if (i.x >= lx && i.x <= rx && i.y >= ly && i.y <= ry) {||| 37 num++;||| 38 if (num == k) {||| 39 l = i.y;||| 40 break;||| 41 }||| 42 }||| 43 }||| 44 num = 0;||| 45 for (auto i : s[c[3]]) {||| 46 if (i.x >= lx && i.x <= rx && i.y > l && i.y <= ry) {||| 47 num++;||| 48 if (num == k) {||| 49 r = i.y;||| 50 break;||| 51 }||| 52 }||| 53 }||| 54 if (r > l) return 1;||| 55 return 0;||| 56 }||| 57 long long check(long long x) {||| 58 c[1] = 1;||| 59 c[2] = 2;||| 60 c[3] = 3;||| 61 do {||| 62 long long l = h[c[1]][x - 1].x;||| 63 if (get(l + 1, N, -N, N, x)) return 1;||| 64 long long r = h[c[1]][n / 3 - x].x;||| 65 if (get(-N, r - 1, -N, N, x)) return 1;||| 66 l = s[c[1]][x - 1].y;||| 67 if (get(-N, N, l + 1, N, x)) return 1;||| 68 r = s[c[1]][n / 3 - x].y;||| 69 if (get(-N, N, -N, r - 1, x)) return 1;||| 70 } while (next_permutation(c + 1, c + 4));||| 71 return 0;||| 72 }||| 73 bool cmp1(ppp i, ppp j) { return i.x < j.x; }||| 74 bool cmp2(ppp i, ppp j) { return i.y < j.y; }||| 75 int main() {||| 76 ios::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 cin >> n;||| 80 for (long long i = 1; i <= n; i++) {||| 81 long long x, y, w;||| 82 cin >> x >> y >> w;||| 83 h[w].push_back({x, y});||| 84 s[w].push_back({x, y});||| 85 }||| 86 for (long long i = 1; i <= 3; i++) {||| 87 sort(h[i].begin(), h[i].end(), cmp1);||| 88 sort(s[i].begin(), s[i].end(), cmp2);||| 89 }||| 90 long long l = 1, r = n / 3;||| 91 while (r >= l) {||| 92 long long mid = (l + r) / 2;||| 93 if (check(mid))||| 94 l = mid + 1;||| 95 else||| 96 r = mid - 1;||| 97 }||| 98 cout << r * 3 << endl;||| 99 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using cd = complex<double>;||| 4 mt19937 rnd(chrono::system_clock::now().time_since_epoch().count());||| 5 const long long N = 2e18;||| 6 struct ppp {||| 7 long long x, y;||| 8 };||| 9 long long c[4], n;||| 10 vector<ppp> h[5], s[5];||| 11 long long get(long long lx, long long rx, long long ly, long long ry,||| 12 long long k) {||| 13 long long l = N, r = -N, num = 0;||| 14 for (auto i : h[c[2]]) {||| 15 if (i.x >= lx && i.x <= rx && i.y >= ly && i.y <= ry) {||| 16 num++;||| 17 if (num == k) {||| 18 l = i.x;||| 19 break;||| 20 }||| 21 }||| 22 }||| 23 num = 0;||| 24 for (auto i : h[c[3]]) {||| 25 if (i.x > l && i.x <= rx && i.y >= ly && i.y <= ry) {||| 26 num++;||| 27 if (num == k) {||| 28 r = i.x;||| 29 break;||| 30 }||| 31 }||| 32 }||| 33 if (r > l) return 1;||| 34 l = N, r = -N, num = 0;||| 35 for (auto i : s[c[2]]) {||| 36 if (i.x >= lx && i.x <= rx && i.y >= ly && i.y <= ry) {||| 37 num++;||| 38 if (num == k) {||| 39 l = i.y;||| 40 break;||| 41 }||| 42 }||| 43 }||| 44 num = 0;||| 45 for (auto i : s[c[3]]) {||| 46 if (i.x >= lx && i.x <= rx && i.y > l && i.y <= ry) {||| 47 num++;||| 48 if (num == k) {||| 49 r = i.x;||| 50 break;||| 51 }||| 52 }||| 53 }||| 54 if (r > l) return 1;||| 55 return 0;||| 56 }||| 57 long long check(long long x) {||| 58 c[1] = 1;||| 59 c[2] = 2;||| 60 c[3] = 3;||| 61 do {||| 62 long long l = h[c[1]][x - 1].x;||| 63 if (get(l + 1, N, -N, N, x)) return 1;||| 64 long long r = h[c[1]][n / 3 - x].x;||| 65 if (get(-N, r - 1, -N, N, x)) return 1;||| 66 l = s[c[1]][x - 1].y;||| 67 if (get(-N, N, l + 1, N, x)) return 1;||| 68 r = s[c[1]][n / 3 - x].y;||| 69 if (get(-N, N, -N, r - 1, x)) return 1;||| 70 } while (next_permutation(c + 1, c + 4));||| 71 return 0;||| 72 }||| 73 bool cmp1(ppp i, ppp j) { return i.x < j.x; }||| 74 bool cmp2(ppp i, ppp j) { return i.y < j.y; }||| 75 int main() {||| 76 ios::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 cin >> n;||| 80 for (long long i = 1; i <= n; i++) {||| 81 long long x, y, w;||| 82 cin >> x >> y >> w;||| 83 h[w].push_back({x, y});||| 84 s[w].push_back({x, y});||| 85 }||| 86 for (long long i = 1; i <= 3; i++) {||| 87 sort(h[i].begin(), h[i].end(), cmp1);||| 88 sort(s[i].begin(), s[i].end(), cmp2);||| 89 }||| 90 long long l = 1, r = n / 3;||| 91 while (r >= l) {||| 92 long long mid = (l + r) / 2;||| 93 if (check(mid))||| 94 l = mid + 1;||| 95 else||| 96 r = mid - 1;||| 97 }||| 98 cout << r * 3 << endl;||| 99 }||| 	49 r = i.y;
113	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void show(vector<T> x) {||| 5 for (auto e : x) {||| 6 cout << e << "" "";||| 7 }||| 8 cout << endl;||| 9 }||| 10 template <typename T1>||| 11 void showPair(vector<pair<T1, T1>> x) {||| 12 for (auto e : x) {||| 13 cout << e.first << "" "" << e.second << endl;||| 14 }||| 15 }||| 16 template <typename T2>||| 17 void showSet(set<T2> x) {||| 18 for (auto e : x) {||| 19 cout << e << "" "";||| 20 }||| 21 cout << endl;||| 22 }||| 23 template <typename T3>||| 24 void showMultiSet(multiset<T3> x) {||| 25 for (auto e : x) {||| 26 cout << e << "" "";||| 27 }||| 28 cout << endl;||| 29 }||| 30 template <typename T4>||| 31 void showSetPair(set<T4> x) {||| 32 for (auto e : x) {||| 33 cout << ""{"" << e.first << "" "" << e.second << ""}, "";||| 34 }||| 35 cout << endl;||| 36 }||| 37 template <typename T5>||| 38 void showSinglePair(pair<T5, T5> P) {||| 39 cout << P.first << "" "" << P.second << ""\n"";||| 40 }||| 41 vector<long long> dx = {1, -1};||| 42 bool isValid(long long i, long long n) { return (i >= 0 && i < n); }||| 43 long long seal(long long a, long long b) {||| 44 if (a < 0 && b < 0) {||| 45 return (a + b - 1) / b;||| 46 }||| 47 if (a < 0 || b < 0) {||| 48 return (a / b);||| 49 }||| 50 return (a + b - 1) / b;||| 51 }||| 52 const long long mod = 998244353;||| 53 void dfs(long long u, vector<vector<long long>>& gr, vector<bool>& vis,||| 54 vector<long long>& d) {||| 55 for (auto v : gr[u]) {||| 56 if (!vis[v]) {||| 57 d.push_back(v);||| 58 vis[v] = 1;||| 59 dfs(v, gr, vis, d);||| 60 }||| 61 }||| 62 }||| 63 void solve() {||| 64 long long x[2], p[2];||| 65 cin >> x[0] >> p[0];||| 66 cin >> x[1] >> p[1];||| 67 long long digits[2];||| 68 for (long long i = 0; i < 2; i++) {||| 69 digits[i] = 0;||| 70 while (x[i] > 0) {||| 71 if (x[i] % 10 == 0) {||| 72 p[i]++;||| 73 x[i] = x[i] / 10;||| 74 } else {||| 75 break;||| 76 }||| 77 }||| 78 digits[i] = p[i];||| 79 long long y = x[i];||| 80 while (y > 0) {||| 81 y = y / 10;||| 82 digits[i]++;||| 83 }||| 84 }||| 85 if (digits[0] == digits[1]) {||| 86 string s[2];||| 87 s[0] = to_string(x[0]);||| 88 s[1] = to_string(x[1]);||| 89 if (s[0] == s[1]) {||| 90 cout << ""=\n"";||| 91 return;||| 92 } else {||| 93 for (long long i = 0; i < s[0].size() && i < s[1].size(); i++) {||| 94 if (s[0][i] == s[1][i]) continue;||| 95 if (s[0][i] > s[1][i]) {||| 96 cout << "">\n"";||| 97 return;||| 98 } else {||| 99 cout << ""<\n"";||| 100 return;||| 101 }||| 102 }||| 103 if (s[0].size() > s[1].size()) {||| 104 cout << "">\n"";||| 105 return;||| 106 } else if (s[0].size() < s[1].size()) {||| 107 cout << ""<\n"";||| 108 return;||| 109 }||| 110 }||| 111 } else if (digits[0] < digits[1]) {||| 112 cout << ""<\n"";||| 113 } else {||| 114 cout << "">\n"";||| 115 }||| 116 }||| 117 signed main() {||| 118 ios::sync_with_stdio(false);||| 119 cin.tie(0);||| 120 long long t = 1;||| 121 cin >> t;||| 122 for (long long i = 1; i <= t; i++) {||| 123 solve();||| 124 }||| 125 return 0;||| 126 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void show(vector<T> x) {||| 5 for (auto e : x) {||| 6 cout << e << "" "";||| 7 }||| 8 cout << endl;||| 9 }||| 10 template <typename T1>||| 11 void showPair(vector<pair<T1, T1>> x) {||| 12 for (auto e : x) {||| 13 cout << e.first << "" "" << e.second << endl;||| 14 }||| 15 }||| 16 template <typename T2>||| 17 void showSet(set<T2> x) {||| 18 for (auto e : x) {||| 19 cout << e << "" "";||| 20 }||| 21 cout << endl;||| 22 }||| 23 template <typename T3>||| 24 void showMultiSet(multiset<T3> x) {||| 25 for (auto e : x) {||| 26 cout << e << "" "";||| 27 }||| 28 cout << endl;||| 29 }||| 30 template <typename T4>||| 31 void showSetPair(set<T4> x) {||| 32 for (auto e : x) {||| 33 cout << ""{"" << e.first << "" "" << e.second << ""}, "";||| 34 }||| 35 cout << endl;||| 36 }||| 37 template <typename T5>||| 38 void showSinglePair(pair<T5, T5> P) {||| 39 cout << P.first << "" "" << P.second << ""\n"";||| 40 }||| 41 vector<long long> dx = {1, -1};||| 42 bool isValid(long long i, long long n) { return (i >= 0 && i < n); }||| 43 long long seal(long long a, long long b) {||| 44 if (a < 0 && b < 0) {||| 45 return (a + b - 1) / b;||| 46 }||| 47 if (a < 0 || b < 0) {||| 48 return (a / b);||| 49 }||| 50 return (a + b - 1) / b;||| 51 }||| 52 const long long mod = 998244353;||| 53 void dfs(long long u, vector<vector<long long>>& gr, vector<bool>& vis,||| 54 vector<long long>& d) {||| 55 for (auto v : gr[u]) {||| 56 if (!vis[v]) {||| 57 d.push_back(v);||| 58 vis[v] = 1;||| 59 dfs(v, gr, vis, d);||| 60 }||| 61 }||| 62 }||| 63 void solve() {||| 64 long long x[2], p[2];||| 65 cin >> x[0] >> p[0];||| 66 cin >> x[1] >> p[1];||| 67 long long digits[2];||| 68 for (long long i = 0; i < 2; i++) {||| 69 digits[i] = 0;||| 70 while (x[i] > 0) {||| 71 if (x[i] % 10 == 0) {||| 72 p[i]++;||| 73 x[i] = x[i] / 10;||| 74 } else {||| 75 break;||| 76 }||| 77 }||| 78 digits[i] = p[i];||| 79 long long y = x[i];||| 80 while (y > 0) {||| 81 y = y / 10;||| 82 digits[i]++;||| 83 }||| 84 }||| 85 if (digits[0] == digits[1]) {||| 86 string s[2];||| 87 s[0] = to_string(x[0]);||| 88 s[1] = to_string(x[1]);||| 89 if (s[0] == s[1]) {||| 90 cout << ""=\n"";||| 91 return;||| 92 } else {||| 93 for (long long i = 0; i < s[0].size() && i < s[1].size(); i++) {||| 94 if (s[0][i] == s[1][i]) continue;||| 95 if (s[0][i] > s[1][i]) {||| 96 cout << "">\n"";||| 97 return;||| 98 } else {||| 99 cout << ""<\n"";||| 100 return;||| 101 }||| 102 if (s[0].size() > s[1].size()) {||| 103 cout << "">\n"";||| 104 return;||| 105 } else if (s[0].size() < s[1].size()) {||| 106 cout << ""<\n"";||| 107 return;||| 108 }||| 109 }||| 110 }||| 111 } else if (digits[0] < digits[1]) {||| 112 cout << ""<\n"";||| 113 } else {||| 114 cout << "">\n"";||| 115 }||| 116 }||| 117 signed main() {||| 118 ios::sync_with_stdio(false);||| 119 cin.tie(0);||| 120 long long t = 1;||| 121 cin >> t;||| 122 for (long long i = 1; i <= t; i++) {||| 123 solve();||| 124 }||| 125 return 0;||| 126 }||| "	102 }
113	199	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 std::ios_base::sync_with_stdio(0);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s1, s2;||| 11 long long n1, n2, num1 = 0, num2 = 0;||| 12 cin >> s1;||| 13 cin >> n1;||| 14 cin >> s2;||| 15 cin >> n2;||| 16 if (s1.size() < s2.size())||| 17 for (int i = 0;; i < n1) {||| 18 s1 += '0';||| 19 n1--;||| 20 if (s1.size() == s2.size()) break;||| 21 }||| 22 else if (s1.size() > s2.size())||| 23 for (int i = 0;; i < n2) {||| 24 s2 += '0';||| 25 n2--;||| 26 if (s1.size() == s2.size()) break;||| 27 }||| 28 if (n1 > n2)||| 29 cout << '>' << endl;||| 30 else if (n1 < n2)||| 31 cout << '<' << endl;||| 32 else {||| 33 for (int i = 0; i < s1.size(); i++) {||| 34 num1 *= 10;||| 35 num1 += s1[i] - 48;||| 36 num2 *= 10;||| 37 num2 += s2[i] - 48;||| 38 if (num1 > num2) {||| 39 cout << '>' << endl;||| 40 break;||| 41 } else if (num1 < num2) {||| 42 cout << '<' << endl;||| 43 break;||| 44 } else if (i == s1.size() - 1)||| 45 cout << '=' << endl;||| 46 }||| 47 }||| 48 }||| 49 return 0;||| 50 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 std::ios_base::sync_with_stdio(0);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s1, s2;||| 11 long long n1, n2, num1 = 0, num2 = 0;||| 12 cin >> s1;||| 13 cin >> n1;||| 14 cin >> s2;||| 15 cin >> n2;||| 16 if (s1.size() < s2.size())||| 17 for (int i = 0;; i < n1) {||| 18 s1 += '0';||| 19 n1--;||| 20 if (s1.size() == s2.size()) break;||| 21 }||| 22 else if (s1.size() > s2.size())||| 23 for (int i = 0;; i < n2) {||| 24 s2 += '0';||| 25 n2--;||| 26 if (s1.size() == s2.size()) break;||| 27 }||| 28 if (n1 > n2)||| 29 cout << '>' << endl;||| 30 else if (n1 < n2)||| 31 cout << '<' << endl;||| 32 else {||| 33 for (int i = 0; i < s1.size(); i++) {||| 34 num1 *= 10;||| 35 num1 += s1[0] - 48;||| 36 num2 *= 10;||| 37 num2 += s2[0] - 48;||| 38 if (num1 > num2) {||| 39 cout << '>' << endl;||| 40 break;||| 41 } else if (num1 < num2) {||| 42 cout << '<' << endl;||| 43 break;||| 44 } else if (i == s1.size() - 1)||| 45 cout << '=' << endl;||| 46 }||| 47 }||| 48 }||| 49 return 0;||| 50 }||| 	35 num1 += s1[i] - 48;
113	150	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10;||| 4 int main() {||| 5 int T;||| 6 int x1, p1, x2, p2;||| 7 cin >> T;||| 8 string res;||| 9 while (T--) {||| 10 cin >> x1 >> p1 >> x2 >> p2;||| 11 if (p2 - p1 > 6) {||| 12 res += '<';||| 13 continue;||| 14 }||| 15 if (p1 - p2 > 6) {||| 16 res += '>';||| 17 continue;||| 18 }||| 19 char s1[N] = ""\0"", s2[N] = ""\0"";||| 20 int t1 = x1, t2 = x2;||| 21 int cnt1 = 0, cnt2 = 0;||| 22 while (t1) {||| 23 cnt1++;||| 24 t1 /= 10;||| 25 }||| 26 while (t2) {||| 27 cnt2++;||| 28 t2 /= 10;||| 29 }||| 30 int idx1 = 0, idx2 = 0;||| 31 for (int i = cnt1 - 1; i >= 0; i--) {||| 32 int tt = (x1 / pow(10, i));||| 33 tt %= 10;||| 34 s1[idx1++] = tt + '0';||| 35 }||| 36 for (int i = cnt2 - 1; i >= 0; i--) {||| 37 int tt = x2 / pow(10, i);||| 38 tt %= 10;||| 39 s2[idx2++] = tt + '0';||| 40 }||| 41 if (idx1 + p1 < idx2 + p2) {||| 42 res += '<';||| 43 continue;||| 44 }||| 45 if (idx1 + p1 > idx2 + p2) {||| 46 res += '>';||| 47 continue;||| 48 }||| 49 if (cnt1 < cnt2) {||| 50 cnt1 = cnt2;||| 51 for (int i = idx1; i < idx2; i++) s1[i] = '0';||| 52 }||| 53 if (cnt1 > cnt2)||| 54 for (int i = idx2; i < idx1; i++) s2[i] = '0';||| 55 for (int i = 0; i < cnt1; i++) {||| 56 if (s1[i] < s2[i]) {||| 57 res += '<';||| 58 break;||| 59 }||| 60 if (s1[i] > s2[i]) {||| 61 res += '>';||| 62 break;||| 63 }||| 64 if (i == cnt1 - 1) res += '=';||| 65 }||| 66 }||| 67 for (int i = 0; i < res.size(); i++) cout << res[i] << endl;||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10;||| 4 int main() {||| 5 int T;||| 6 int x1, p1, x2, p2;||| 7 cin >> T;||| 8 string res;||| 9 while (T--) {||| 10 cin >> x1 >> p1 >> x2 >> p2;||| 11 if (p2 - p1 >= 6) {||| 12 res += '<';||| 13 continue;||| 14 }||| 15 if (p1 - p2 >= 6) {||| 16 res += '>';||| 17 continue;||| 18 }||| 19 char s1[N] = ""\0"", s2[N] = ""\0"";||| 20 int t1 = x1, t2 = x2;||| 21 int cnt1 = 0, cnt2 = 0;||| 22 while (t1) {||| 23 cnt1++;||| 24 t1 /= 10;||| 25 }||| 26 while (t2) {||| 27 cnt2++;||| 28 t2 /= 10;||| 29 }||| 30 int idx1 = 0, idx2 = 0;||| 31 for (int i = cnt1 - 1; i >= 0; i--) {||| 32 int tt = (x1 / pow(10, i));||| 33 tt %= 10;||| 34 s1[idx1++] = tt + '0';||| 35 }||| 36 for (int i = cnt2 - 1; i >= 0; i--) {||| 37 int tt = x2 / pow(10, i);||| 38 tt %= 10;||| 39 s2[idx2++] = tt + '0';||| 40 }||| 41 if (idx1 + p1 < idx2 + p2) {||| 42 res += '<';||| 43 continue;||| 44 }||| 45 if (idx1 + p1 > idx2 + p2) {||| 46 res += '>';||| 47 continue;||| 48 }||| 49 if (cnt1 < cnt2) {||| 50 cnt1 = cnt2;||| 51 for (int i = idx1; i < idx2; i++) s1[i] = '0';||| 52 }||| 53 if (cnt1 > cnt2)||| 54 for (int i = idx2; i < idx1; i++) s2[i] = '0';||| 55 for (int i = 0; i < cnt1; i++) {||| 56 if (s1[i] < s2[i]) {||| 57 res += '<';||| 58 break;||| 59 }||| 60 if (s1[i] > s2[i]) {||| 61 res += '>';||| 62 break;||| 63 }||| 64 if (i == cnt1 - 1) res += '=';||| 65 }||| 66 }||| 67 for (int i = 0; i < res.size(); i++) cout << res[i] << endl;||| 68 return 0;||| 69 }||| "	11 if (p2 - p1 > 6) {
113	231	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 double x1, p1;||| 10 cin >> x1 >> p1;||| 11 double x2, p2;||| 12 cin >> x2 >> p2;||| 13 double temp1 = log10(x1 / x2) + p1 - p2;||| 14 if (temp1 < 0) {||| 15 cout << '<' << '\n';||| 16 } else if (temp1 > 0) {||| 17 cout << '>' << '\n';||| 18 } else {||| 19 cout << '=' << '\n';||| 20 }||| 21 }||| 22 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int x1, p1;||| 10 cin >> x1 >> p1;||| 11 int x2, p2;||| 12 cin >> x2 >> p2;||| 13 double temp1 = log10(x1 / x2) + p1 - p2;||| 14 if (temp1 < 0) {||| 15 cout << '<' << '\n';||| 16 } else if (temp1 > 0) {||| 17 cout << '>' << '\n';||| 18 } else {||| 19 cout << '=' << '\n';||| 20 }||| 21 }||| 22 }||| 	9 double x1, p1;
113	290	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solution() {||| 4 long long int n, m, a, b, c, d, p, q, cnt = 0, ct = 0, sum = 0, ans = 0;||| 5 cin >> n >> a;||| 6 cin >> m >> b;||| 7 p = n;||| 8 q = m;||| 9 string s1, s2;||| 10 s1 = to_string(p);||| 11 s2 = to_string(q);||| 12 long long int sz1, sz2;||| 13 sz1 = s1.size();||| 14 sz2 = s2.size();||| 15 long long int second = sz1, sss = sz2;||| 16 sz1 += a;||| 17 sz2 += b;||| 18 if (sz1 > sz2)||| 19 cout << ""> "" << endl;||| 20 else if (sz1 < sz2)||| 21 cout << ""<"" << endl;||| 22 else {||| 23 if (second > sss) {||| 24 for (long long int i = 0; i < second - sss; i++) s2 += '0';||| 25 } else {||| 26 for (long long int i = 0; i < sss - second; i++) s1 += '0';||| 27 }||| 28 for (long long int i = 0; i < s1.size(); i++) {||| 29 if (s1[i] > s2[i]) {||| 30 cout << "">"" << endl;||| 31 return;||| 32 } else if (s2[i] > s1[i]) {||| 33 cout << ""<"" << endl;||| 34 return;||| 35 }||| 36 }||| 37 cout << ""="" << endl;||| 38 }||| 39 }||| 40 int main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(NULL);||| 43 cout.tie(NULL);||| 44 int t;||| 45 cin >> t;||| 46 while (t--) solution();||| 47 return 0;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solution() {||| 4 long long int n, m, a, b, c, d, p, q, cnt = 0, ct = 0, sum = 0, ans = 0;||| 5 cin >> n >> a;||| 6 cin >> m >> b;||| 7 p = n;||| 8 q = m;||| 9 string s1, s2;||| 10 s1 = to_string(p);||| 11 s2 = to_string(q);||| 12 long long int sz1, sz2;||| 13 sz1 = s1.size();||| 14 sz2 = s2.size();||| 15 long long int second = sz1, sss = sz2;||| 16 sz1 += a;||| 17 sz2 += b;||| 18 if (sz1 > sz2)||| 19 cout << ""> "" << endl;||| 20 else if (sz1 < sz2)||| 21 cout << ""<"" << endl;||| 22 else {||| 23 if (second > sss) {||| 24 for (long long int i = 0; i < second - sss; i++) s1 += '0';||| 25 } else {||| 26 for (long long int i = 0; i < sss - second; i++) s2 += '0';||| 27 }||| 28 for (long long int i = 0; i < s1.size(); i++) {||| 29 if (s1[i] > s2[i]) {||| 30 cout << "">"" << endl;||| 31 return;||| 32 } else if (s2[i] > s1[i]) {||| 33 cout << ""<"" << endl;||| 34 return;||| 35 }||| 36 }||| 37 cout << ""="" << endl;||| 38 }||| 39 }||| 40 int main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(NULL);||| 43 cout.tie(NULL);||| 44 int t;||| 45 cin >> t;||| 46 while (t--) solution();||| 47 return 0;||| 48 }||| "	24 for (long long int i = 0; i < second - sss; i++) s2 += '0';
113	38	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {+1, -1, +0, +0};||| 4 int dy[] = {+0, +0, +1, -1};||| 5 int main() {||| 6 int test;||| 7 cin >> test;||| 8 while (test--) {||| 9 long long int n, m, a, b, cnt = 0;||| 10 string s1, s2, res;||| 11 cin >> s1 >> n >> s2 >> m;||| 12 if (s1.size() + n > s2.size() + m)||| 13 cout << "">"";||| 14 else if (s1.size() + n < s2.size() + m)||| 15 cout << ""<"";||| 16 else {||| 17 int ok = 0;||| 18 a = min(s1.size(), s2.size());||| 19 for (int i = 0; i < a; i++) {||| 20 if (s1[i] > s2[i]) {||| 21 cout << "">"";||| 22 ok = 1;||| 23 break;||| 24 } else if (s1[i] < s2[i]) {||| 25 cout << ""<"";||| 26 ok = 1;||| 27 break;||| 28 }||| 29 }||| 30 if (ok == 0) {||| 31 int x = min(s1.size(), s2.size());||| 32 if (s1.size() < s2.size()) {||| 33 for (int i = x; i < s2.size(); i++) {||| 34 if (s2[i] != '0') {||| 35 cout << ""<"";||| 36 ok = 1;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 if (s1.size() > s2.size()) {||| 42 for (int i = x; i < s1.size(); i++) {||| 43 if (s1[i] != '0') {||| 44 cout << "">"";||| 45 ok = 1;||| 46 break;||| 47 }||| 48 }||| 49 }||| 50 if (ok == 0) cout << ""="";||| 51 }||| 52 }||| 53 cout << endl;||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {+1, -1, +0, +0};||| 4 int dy[] = {+0, +0, +1, -1};||| 5 int main() {||| 6 int test;||| 7 cin >> test;||| 8 while (test--) {||| 9 long long int n, m, a, b, cnt = 0;||| 10 string s1, s2, res;||| 11 cin >> s1 >> n >> s2 >> m;||| 12 if (s1.size() + n > s2.size() + m)||| 13 cout << "">"";||| 14 else if (s1.size() + n < s2.size() + m)||| 15 cout << ""<"";||| 16 else {||| 17 int ok = 0;||| 18 a = min(s1.size(), s2.size());||| 19 for (int i = 0; i < a; i++) {||| 20 if (s1[i] > s2[i]) {||| 21 cout << "">"";||| 22 ok = 1;||| 23 break;||| 24 } else if (s1[i] < s2[i]) {||| 25 cout << ""<"";||| 26 ok = 1;||| 27 break;||| 28 }||| 29 }||| 30 if (ok == 0) {||| 31 int x = min(s1.size(), s2.size());||| 32 if (s1.size() < s2.size()) {||| 33 for (int i = x; i < s2.size(); i++) {||| 34 if (s2[i] != '0') {||| 35 cout << ""<"";||| 36 ok = 1;||| 37 break;||| 38 }||| 39 }||| 40 }||| 41 if (s1.size() > s2.size()) {||| 42 for (int i = x; i < s1.size(); i++) {||| 43 if (s2[i] != '0') {||| 44 cout << "">"";||| 45 ok = 1;||| 46 break;||| 47 }||| 48 }||| 49 }||| 50 if (ok == 0) cout << ""="";||| 51 }||| 52 }||| 53 cout << endl;||| 54 }||| 55 return 0;||| 56 }||| "	43 if (s1[i] != '0') {
114	10	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 long a[n], minn = 99999999;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 if (minn > a[i]) {||| 13 minn = a[i];||| 14 }||| 15 }||| 16 int req = n / 2, i = 0;||| 17 while (i < n && req > 0) {||| 18 if (a[i] != minn) {||| 19 cout << a[i] << "" "" << minn << endl;||| 20 req--;||| 21 }||| 22 i++;||| 23 }||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int a[n], minn = 99999;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 if (minn > a[i]) {||| 13 minn = a[i];||| 14 }||| 15 }||| 16 int req = n / 2, i = 0;||| 17 while (i < n && req > 0) {||| 18 if (a[i] != minn) {||| 19 cout << a[i] << "" "" << minn << endl;||| 20 req--;||| 21 }||| 22 i++;||| 23 }||| 24 }||| 25 return 0;||| 26 }||| "	9 long a[n], minn = 99999999;
114	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int j = 0; j < t; j++) {||| 7 int n, mn, c = 0;||| 8 cin >> n;||| 9 int arr[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> arr[i];||| 12 if (i == 0) {||| 13 mn = arr[i];||| 14 } else {||| 15 mn = min(mn, arr[i]);||| 16 }||| 17 }||| 18 pair<int, int> p;||| 19 p.second = mn;||| 20 for (int i = 0; i < n; i++) {||| 21 p.first = arr[i];||| 22 if (p.first == p.second) {||| 23 continue;||| 24 } else if (c != n / 2) {||| 25 c++;||| 26 cout << p.first << "" "" << p.second << endl;||| 27 }||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int j = 0; j < t; j++) {||| 7 int n, mn, c = 0;||| 8 cin >> n;||| 9 int arr[n];||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> arr[i];||| 12 if (i == 0) {||| 13 mn = arr[i];||| 14 } else {||| 15 mn = min(mn, arr[i]);||| 16 }||| 17 }||| 18 pair<int, int> p;||| 19 p.second = mn;||| 20 for (int i = 1; i < n; i++) {||| 21 p.first = arr[i];||| 22 if (p.first == p.second) {||| 23 continue;||| 24 } else if (c != n / 2) {||| 25 c++;||| 26 cout << p.first << "" "" << p.second << endl;||| 27 }||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	20 for (int i = 0; i < n; i++) {
114	268	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 vector<long long> v;||| 12 int op = n;||| 13 while (op--) {||| 14 long long num;||| 15 cin >> num;||| 16 v.push_back(num);||| 17 }||| 18 sort(v.begin(), v.end());||| 19 for (int i = 1; i <= n / 2; i++) {||| 20 cout << v[i] << "" "" << v[0] << endl;||| 21 }||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 vector<long long> v;||| 12 int op = n;||| 13 while (op--) {||| 14 long long num;||| 15 cin >> num;||| 16 v.push_back(num);||| 17 }||| 18 sort(v.begin(), v.end());||| 19 for (int i = 1; i <= n / 2; i++) {||| 20 cout << v[0] << "" "" << v[i] << endl;||| 21 }||| 22 }||| 23 return 0;||| 24 }||| "	"20 cout << v[i] << "" "" << v[0] << endl;"
114	121	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 long long arr[n];||| 7 for (int i = 0; i < n; i++) {||| 8 cin >> arr[i];||| 9 }||| 10 sort(arr, arr + n);||| 11 long long c = floor(n / 2);||| 12 for (int i = 1; i <= c; i++) {||| 13 cout << arr[i] << "" "" << arr[0] << endl;||| 14 }||| 15 }||| 16 int main() {||| 17 ios::sync_with_stdio(0);||| 18 cin.tie(0);||| 19 long long t;||| 20 cin >> t;||| 21 while (t--) {||| 22 solve();||| 23 }||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 long long arr[n];||| 7 for (int i = 0; i < n; i++) {||| 8 cin >> arr[i];||| 9 }||| 10 sort(arr, arr + n);||| 11 long long c = floor(n / 2);||| 12 for (int i = 1; i <= c; i++) {||| 13 cout << arr[0] << "" "" << arr[i] << endl;||| 14 }||| 15 }||| 16 int main() {||| 17 ios::sync_with_stdio(0);||| 18 cin.tie(0);||| 19 long long t;||| 20 cin >> t;||| 21 while (t--) {||| 22 solve();||| 23 }||| 24 }||| "	"13 cout << arr[i] << "" "" << arr[0] << endl;"
114	120	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> a(n);||| 7 for (long long int i = 0; i < n; i++) cin >> a[i];||| 8 sort(a.begin(), a.end());||| 9 for (long long int z = 0; z < n / 2; z++) {||| 10 cout << a[z + 1] << ' ' << a[0] << '\n';||| 11 }||| 12 return;||| 13 }||| 14 signed main() {||| 15 ios::sync_with_stdio(0);||| 16 cin.tie(NULL);||| 17 cout.tie(NULL);||| 18 long long int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> a(n);||| 7 for (long long int i = 0; i < n; i++) cin >> a[i];||| 8 sort(a.begin(), a.end());||| 9 for (long long int z = 0; z < n / 2; z++) {||| 10 cout << a[z + 1] << ' ' << a[z] << '\n';||| 11 }||| 12 return;||| 13 }||| 14 signed main() {||| 15 ios::sync_with_stdio(0);||| 16 cin.tie(NULL);||| 17 cout.tie(NULL);||| 18 long long int t;||| 19 cin >> t;||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 return 0;||| 24 }||| 	10 cout << a[z + 1] << ' ' << a[0] << '\n';
114	257	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 9;||| 4 int n, a[N];||| 5 bool tong[10 * N];||| 6 void work() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 tong[a[i]] = 1;||| 11 }||| 12 sort(a + 1, a + 1 + n);||| 13 int m = unique(a + 1, a + 1 + n) - a;||| 14 int t = min(n / 2, m);||| 15 for (int i = 2; i <= t + 1; i++) {||| 16 printf(""%d %d\n"", a[i], a[1]);||| 17 }||| 18 for (int i = 2; i <= m && t < n / 2; i++) {||| 19 for (int j = i + 1; j <= m && t < n / 2; j++) {||| 20 if (tong[a[j] % a[i]]) continue;||| 21 printf(""%d %d\n"", a[j], a[i]);||| 22 t++;||| 23 }||| 24 }||| 25 }||| 26 int main() {||| 27 int T;||| 28 cin >> T;||| 29 while (T--) work();||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 9;||| 4 int n, a[N];||| 5 bool tong[10 * N];||| 6 void work() {||| 7 scanf(""%d"", &n);||| 8 for (int i = 1; i <= n; i++) {||| 9 scanf(""%d"", &a[i]);||| 10 tong[a[i]] = 1;||| 11 }||| 12 sort(a + 1, a + 1 + n);||| 13 int m = unique(a + 1, a + 1 + n) - a;||| 14 int t = min(n / 2, m);||| 15 for (int i = 2; i <= t + 1; i++) {||| 16 printf(""%d %d\n"", a[1], a[i]);||| 17 }||| 18 for (int i = 2; i <= m && t < n / 2; i++) {||| 19 for (int j = i + 1; j <= m && t < n / 2; j++) {||| 20 if (tong[a[j] % a[i]]) continue;||| 21 printf(""%d %d\n"", a[j], a[i]);||| 22 t++;||| 23 }||| 24 }||| 25 }||| 26 int main() {||| 27 int T;||| 28 cin >> T;||| 29 while (T--) work();||| 30 }||| "	"16 printf(""%d %d\n"", a[i], a[1]);"
114	284	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 10, INF = 1e18 + 10;||| 4 long long a[N], n, h;||| 5 void solve() {||| 6 cin >> n;||| 7 long long pos = 0, mn = INF;||| 8 for (int i = 1; i <= n; i++) {||| 9 cin >> a[i];||| 10 if (mn > a[i]) {||| 11 mn = min(mn, a[i]);||| 12 pos = i;||| 13 }||| 14 }||| 15 int cnt = 0, j = 1;||| 16 while (cnt < (n / 2)) {||| 17 if (j != pos) {||| 18 cout << a[j] << "" "" << a[pos] << endl;||| 19 cnt++;||| 20 }||| 21 j++;||| 22 }||| 23 }||| 24 int main() {||| 25 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 26 int T = 1;||| 27 cin >> T;||| 28 while (T--) {||| 29 solve();||| 30 }||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 10, INF = 1e18 + 10;||| 4 long long a[N], n, h;||| 5 void solve() {||| 6 cin >> n;||| 7 long long pos = 0, mn = INF;||| 8 for (int i = 1; i <= n; i++) {||| 9 cin >> a[i];||| 10 if (mn > a[i]) {||| 11 mn = min(mn, a[i]);||| 12 pos = i;||| 13 }||| 14 }||| 15 int cnt = 0, j = 1;||| 16 while (cnt < (n / 2)) {||| 17 if (j != pos) {||| 18 cout << a[pos] << "" "" << a[j] << endl;||| 19 cnt++;||| 20 }||| 21 j++;||| 22 }||| 23 }||| 24 int main() {||| 25 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 26 int T = 1;||| 27 cin >> T;||| 28 while (T--) {||| 29 solve();||| 30 }||| 31 }||| "	"18 cout << a[j] << "" "" << a[pos] << endl;"
114	211	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int N = 1e6 + 1;||| 5 ll t, n, m, k, a, b, c, f, ans;||| 6 ll d[N], fa[N], x[N];||| 7 vector<ll> g[N];||| 8 string S;||| 9 int main() {||| 10 ios::sync_with_stdio(0), cin.tie(0);||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n;||| 14 for (ll i = 1; i <= n; i++) cin >> x[i];||| 15 sort(x + 1, x + n + 1);||| 16 for (ll i = 2; i <= n + 2 >> 1; i++) cout << x[i] << ' ' << x[1] << '\n';||| 17 }||| 18 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int N = 1e6 + 1;||| 5 ll t, n, m, k, a, b, c, f, ans;||| 6 ll d[N], fa[N], x[N];||| 7 vector<ll> g[N];||| 8 string S;||| 9 int main() {||| 10 ios::sync_with_stdio(0), cin.tie(0);||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n;||| 14 for (ll i = 1; i <= n; i++) cin >> x[i];||| 15 sort(x + 1, x + n + 1);||| 16 for (ll i = 2; i <= n + 3 >> 1; i++) cout << x[i] << ' ' << x[1] << '\n';||| 17 }||| 18 }||| 	16 for (ll i = 2; i <= n + 2 >> 1; i++) cout << x[i] << ' ' << x[1] << '\n';
114	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class a, class b>||| 4 ostream& operator<<(ostream& os, const pair<a, b>& p) {||| 5 os << ""("" << p.first << "","" << p.second << "")"";||| 6 return os;||| 7 }||| 8 template <class T>||| 9 ostream& operator<<(ostream& os, const vector<T>& v) {||| 10 os << ""["";||| 11 if (!v.size())||| 12 os << ""]"";||| 13 else||| 14 for (int i = 0; i < v.size(); ++i) os << v[i] << "",]""[i == v.size() - 1];||| 15 return os;||| 16 }||| 17 template <class T>||| 18 ostream& operator<<(ostream& os, const set<T>& s) {||| 19 os << ""{"";||| 20 if (!s.size())||| 21 os << ""}"";||| 22 else||| 23 for (auto x : s) os << x << "",}""[x == *s.rbegin()];||| 24 return os;||| 25 }||| 26 void printr(ostream& os) { os << '\n'; }||| 27 template <class T, class... Args>||| 28 void printr(ostream& os, const T& t, const Args&... args) {||| 29 os << t;||| 30 if (sizeof...(args)) os << "" "";||| 31 printr(os, args...);||| 32 }||| 33 template <class T>||| 34 void read(T& x) {||| 35 cin >> x;||| 36 }||| 37 template <class T, class... Args>||| 38 void read(T& t, Args&... args) {||| 39 read(t), read(args...);||| 40 }||| 41 template <class T>||| 42 void readarray(T* A, int n) {||| 43 for (__typeof(0) i = (0), _end = (n), _step = 1 - 2 * ((0) > (n)); i != _end;||| 44 i += _step)||| 45 read(A[i]);||| 46 }||| 47 void dbgr(ostream& os) { os << endl; }||| 48 template <class T, class... Args>||| 49 void dbgr(ostream& os, const T& t, const Args&... args) {||| 50 os << t;||| 51 if (sizeof...(args)) os << "", "";||| 52 dbgr(os, args...);||| 53 }||| 54 template <class T>||| 55 T min(const vector<T>& v) {||| 56 return *min_element(v.begin(), v.end());||| 57 }||| 58 template <class T>||| 59 T max(const vector<T>& v) {||| 60 return *max_element(v.begin(), v.end());||| 61 }||| 62 long long pw(long long a, long long k = 998244353 - 2) {||| 63 long long ans = 1;||| 64 for (a %= 998244353; k; k >>= 1) {||| 65 if (k & 1) ans = ans * a % 998244353;||| 66 a = a * a % 998244353;||| 67 }||| 68 return ans;||| 69 }||| 70 int n, a[500050];||| 71 int main() {||| 72 ios::sync_with_stdio(false);||| 73 cin.tie(0), cout.tie(0);||| 74 int _;||| 75 read(_);||| 76 while (_--) {||| 77 read(n);||| 78 readarray(a, n);||| 79 sort(a, a + n);||| 80 for (int i = 1; i <= n / 2; ++i) cout << a[i] << "" "" << a[0] << endl;||| 81 }||| 82 return 0;||| 83 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class a, class b>||| 4 ostream& operator<<(ostream& os, const pair<a, b>& p) {||| 5 os << ""("" << p.first << "","" << p.second << "")"";||| 6 return os;||| 7 }||| 8 template <class T>||| 9 ostream& operator<<(ostream& os, const vector<T>& v) {||| 10 os << ""["";||| 11 if (!v.size())||| 12 os << ""]"";||| 13 else||| 14 for (int i = 0; i < v.size(); ++i) os << v[i] << "",]""[i == v.size() - 1];||| 15 return os;||| 16 }||| 17 template <class T>||| 18 ostream& operator<<(ostream& os, const set<T>& s) {||| 19 os << ""{"";||| 20 if (!s.size())||| 21 os << ""}"";||| 22 else||| 23 for (auto x : s) os << x << "",}""[x == *s.rbegin()];||| 24 return os;||| 25 }||| 26 void printr(ostream& os) { os << '\n'; }||| 27 template <class T, class... Args>||| 28 void printr(ostream& os, const T& t, const Args&... args) {||| 29 os << t;||| 30 if (sizeof...(args)) os << "" "";||| 31 printr(os, args...);||| 32 }||| 33 template <class T>||| 34 void read(T& x) {||| 35 cin >> x;||| 36 }||| 37 template <class T, class... Args>||| 38 void read(T& t, Args&... args) {||| 39 read(t), read(args...);||| 40 }||| 41 template <class T>||| 42 void readarray(T* A, int n) {||| 43 for (__typeof(0) i = (0), _end = (n), _step = 1 - 2 * ((0) > (n)); i != _end;||| 44 i += _step)||| 45 read(A[i]);||| 46 }||| 47 void dbgr(ostream& os) { os << endl; }||| 48 template <class T, class... Args>||| 49 void dbgr(ostream& os, const T& t, const Args&... args) {||| 50 os << t;||| 51 if (sizeof...(args)) os << "", "";||| 52 dbgr(os, args...);||| 53 }||| 54 template <class T>||| 55 T min(const vector<T>& v) {||| 56 return *min_element(v.begin(), v.end());||| 57 }||| 58 template <class T>||| 59 T max(const vector<T>& v) {||| 60 return *max_element(v.begin(), v.end());||| 61 }||| 62 long long pw(long long a, long long k = 998244353 - 2) {||| 63 long long ans = 1;||| 64 for (a %= 998244353; k; k >>= 1) {||| 65 if (k & 1) ans = ans * a % 998244353;||| 66 a = a * a % 998244353;||| 67 }||| 68 return ans;||| 69 }||| 70 int n, a[500050];||| 71 int main() {||| 72 ios::sync_with_stdio(false);||| 73 cin.tie(0), cout.tie(0);||| 74 int _;||| 75 read(_);||| 76 while (_--) {||| 77 read(n);||| 78 readarray(a, n);||| 79 sort(a, a + n);||| 80 for (int i = 0; i < n / 2; ++i) cout << a[i] << "" "" << a[0] << endl;||| 81 }||| 82 return 0;||| 83 }||| "	"80 for (int i = 1; i <= n / 2; ++i) cout << a[i] << "" "" << a[0] << endl;"
114	235	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long int t, n, i, x, y, m, p, q, sum, ans, cnt, mx, mn, j, k;||| 7 cin >> t;||| 8 while (t--) {||| 9 sum = 0;||| 10 cnt = 0;||| 11 ans = 0;||| 12 mx = INT_MIN;||| 13 mn = 1e18;||| 14 cin >> n;||| 15 vector<long long int> a(n);||| 16 for (i = 0; i < n; i++) cin >> a[i];||| 17 sort(a.begin(), a.end());||| 18 i = 0;||| 19 j = n - 1;||| 20 while (i < n / 2) {||| 21 cout << a[j] << "" "" << a[0] << ""\n"";||| 22 i++;||| 23 j--;||| 24 }||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long int t, n, i, x, y, m, p, q, sum, ans, cnt, mx, mn, j, k;||| 7 cin >> t;||| 8 while (t--) {||| 9 sum = 0;||| 10 cnt = 0;||| 11 ans = 0;||| 12 mx = INT_MIN;||| 13 mn = 1e18;||| 14 cin >> n;||| 15 vector<long long int> a(n);||| 16 for (i = 0; i < n; i++) cin >> a[i];||| 17 sort(a.begin(), a.end());||| 18 i = 0;||| 19 j = n - 1;||| 20 while (i < n / 2) {||| 21 cout << a[i] << "" "" << a[j] << ""\n"";||| 22 i++;||| 23 j--;||| 24 }||| 25 }||| 26 }||| "	"21 cout << a[j] << "" "" << a[0] << ""\n"";"
114	292	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long tt;||| 5 cin >> tt;||| 6 while (tt--) {||| 7 long long n, temp;||| 8 cin >> n;||| 9 vector<int> v;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> temp;||| 12 v.push_back(temp);||| 13 }||| 14 sort(v.begin(), v.end());||| 15 n /= 2;||| 16 int j = 1;||| 17 while (n--) {||| 18 cout << v[j] << "" "" << v[0] << ""\n"";||| 19 j += 1;||| 20 }||| 21 }||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long tt;||| 5 cin >> tt;||| 6 while (tt--) {||| 7 long long n, temp;||| 8 cin >> n;||| 9 vector<int> v;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> temp;||| 12 v.push_back(temp);||| 13 }||| 14 sort(v.begin(), v.end());||| 15 n /= 2;||| 16 int j = 1;||| 17 while (n--) {||| 18 cout << v[0] << "" "" << v[j] << ""\n"";||| 19 j += 1;||| 20 }||| 21 }||| 22 }||| "	"18 cout << v[j] << "" "" << v[0] << ""\n"";"
114	63	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 for (int i = 0; i < n; i++) {||| 11 int k;||| 12 cin >> k;||| 13 v.push_back(k);||| 14 }||| 15 sort(v.begin(), v.end());||| 16 int temp = n / 2;||| 17 int i = 0, j = 1;||| 18 while (j <= temp) {||| 19 cout << v[j] << "" "" << v[i] << endl;||| 20 j++;||| 21 }||| 22 }||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> v;||| 10 for (int i = 0; i < n; i++) {||| 11 int k;||| 12 cin >> k;||| 13 v.push_back(k);||| 14 }||| 15 sort(v.begin(), v.end());||| 16 int temp = n / 2;||| 17 int i = 0, j = 1;||| 18 while (j <= temp) {||| 19 cout << v[i] << "" "" << v[j] << endl;||| 20 j++;||| 21 }||| 22 }||| 23 }||| "	"19 cout << v[j] << "" "" << v[i] << endl;"
114	173	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long const INF = 1e16;||| 4 long long power(long long a, long long b) {||| 5 long long result = 1;||| 6 while (b) {||| 7 if (b % 2) result = (result * a) % 1000000007;||| 8 a = (a * a) % 1000000007;||| 9 b /= 2;||| 10 }||| 11 return result;||| 12 }||| 13 void solve() {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> a(n);||| 17 for (long long i = 0; i < n; i++) cin >> a[i];||| 18 sort((a).begin(), (a).end());||| 19 int r = n / 2;||| 20 for (int i = 1; i <= r; i++) {||| 21 cout << a[i] << "" "" << a[0] << ""\n"";||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(NULL);||| 27 cout.tie(NULL);||| 28 int T = 1;||| 29 cin >> T;||| 30 for (int t = 1; t <= T; t++) {||| 31 solve();||| 32 }||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long const INF = 1e16;||| 4 long long power(long long a, long long b) {||| 5 long long result = 1;||| 6 while (b) {||| 7 if (b % 2) result = (result * a) % 1000000007;||| 8 a = (a * a) % 1000000007;||| 9 b /= 2;||| 10 }||| 11 return result;||| 12 }||| 13 void solve() {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> a(n);||| 17 for (long long i = 0; i < n; i++) cin >> a[i];||| 18 sort((a).begin(), (a).end());||| 19 int r = n / 2;||| 20 for (int i = 1; i <= r; i++) {||| 21 cout << a[i] << "" "" << a[r] << ""\n"";||| 22 }||| 23 }||| 24 int main() {||| 25 ios_base::sync_with_stdio(false);||| 26 cin.tie(NULL);||| 27 cout.tie(NULL);||| 28 int T = 1;||| 29 cin >> T;||| 30 for (int t = 1; t <= T; t++) {||| 31 solve();||| 32 }||| 33 return 0;||| 34 }||| "	"21 cout << a[i] << "" "" << a[0] << ""\n"";"
114	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void printvec(vector<T>& vec) {||| 5 for (int i = 0; i < vec.size(); i++) cout << vec[i] << "" "";||| 6 cout << '\n';||| 7 }||| 8 int main() {||| 9 std::ios::sync_with_stdio(false);||| 10 int i = 0, j = 0;||| 11 int ttt = 0;||| 12 cin >> ttt;||| 13 while (ttt--) {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> a(n);||| 17 for (int i = 0; i < a.size(); i++) {||| 18 cin >> a[i];||| 19 };||| 20 sort(a.begin(), a.end());||| 21 int m = n / 2;||| 22 for (i = 1; i <= m; i++) {||| 23 cout << a[i] << "" "" << a[0] << '\n';||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void printvec(vector<T>& vec) {||| 5 for (int i = 0; i < vec.size(); i++) cout << vec[i] << "" "";||| 6 cout << '\n';||| 7 }||| 8 int main() {||| 9 std::ios::sync_with_stdio(false);||| 10 int i = 0, j = 0;||| 11 int ttt = 0;||| 12 cin >> ttt;||| 13 while (ttt--) {||| 14 int n;||| 15 cin >> n;||| 16 vector<int> a(n);||| 17 for (int i = 0; i < a.size(); i++) {||| 18 cin >> a[i];||| 19 };||| 20 sort(a.begin(), a.end());||| 21 int m = n / 2;||| 22 for (i = 1; i <= m; i++) {||| 23 cout << a[0] << "" "" << a[i] << '\n';||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"23 cout << a[i] << "" "" << a[0] << '\n';"
115	18	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2000010;||| 4 long long n, h, T, x;||| 5 long long q[110];||| 6 bool check(long long x) {||| 7 long long cnt = 0;||| 8 for (long long i = 1; i < n; i++) {||| 9 long long a = q[i], b = q[i + 1];||| 10 a = min(a + x, b);||| 11 cnt += a - q[i];||| 12 }||| 13 cnt += x;||| 14 return cnt >= h;||| 15 }||| 16 void solve() {||| 17 cin >> n >> h;||| 18 for (long long i = 1; i <= n; i++) cin >> q[i];||| 19 long long l = 1, r = h;||| 20 while (l < r) {||| 21 long long mid = l + r >> 1;||| 22 if (check(mid))||| 23 r = mid;||| 24 else||| 25 l = mid + 1;||| 26 }||| 27 cout << l << endl;||| 28 }||| 29 signed main() {||| 30 cin >> T;||| 31 while (T--) solve();||| 32 return 0;||| 33 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2000010;||| 4 long long n, h, T, x;||| 5 long long q[110];||| 6 bool check(long long x) {||| 7 long long cnt = 0;||| 8 for (long long i = 1; i < n; i++) {||| 9 long long a = q[i], b = q[i + 1];||| 10 a = min(a + x, b);||| 11 cnt += a - q[i];||| 12 }||| 13 cnt += x;||| 14 return cnt >= h;||| 15 }||| 16 void solve() {||| 17 cin >> n >> h;||| 18 for (long long i = 1; i <= n; i++) cin >> q[i];||| 19 long long l = 1, r = 0x3f3f3f3f;||| 20 while (l < r) {||| 21 long long mid = l + r >> 1;||| 22 if (check(mid))||| 23 r = mid;||| 24 else||| 25 l = mid + 1;||| 26 }||| 27 cout << l << endl;||| 28 }||| 29 signed main() {||| 30 cin >> T;||| 31 while (T--) solve();||| 32 return 0;||| 33 }||| 	19 long long l = 1, r = h;
115	26	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long T = 1, n, k, mx, mn, i, j, x, sum, MOD = 1e9 + 7;||| 4 long long up(long long x, long long y) {||| 5 if (x % y == 0) return x / y;||| 6 return x / y + 1;||| 7 }||| 8 long long fastestPower(long long x, long long y) {||| 9 if (y == 0) return 1;||| 10 if (y & 1) return x * fastestPower(x, y - 1);||| 11 long long z = fastestPower(x, y / 2);||| 12 return z * z;||| 13 }||| 14 long long a[200];||| 15 long long health;||| 16 bool check(long long k) {||| 17 long long me = health;||| 18 for (long long i = 0; i < n; i++) {||| 19 if (i == n - 1)||| 20 me -= k;||| 21 else {||| 22 long long temp = a[i] + k - 1;||| 23 if (temp < a[i + 1])||| 24 me -= k;||| 25 else {||| 26 me -= a[i + 1] - a[i];||| 27 }||| 28 }||| 29 }||| 30 return (me <= 0);||| 31 }||| 32 long long bs() {||| 33 long long b = 0, e = 2e18, ans = -1;||| 34 while (b < e) {||| 35 long long mid = (b + e) / 2;||| 36 if (check(mid)) {||| 37 ans = mid;||| 38 e = mid - 1;||| 39 } else||| 40 b = mid + 1;||| 41 }||| 42 if (check(ans - 1)) --ans;||| 43 return ans;||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 cin >> T;||| 50 while (T--) {||| 51 cin >> n >> health;||| 52 for (i = 0; i < n; i++) cin >> a[i];||| 53 a[n] = + +1e9;||| 54 cout << bs() << ""\n"";||| 55 }||| 56 return 0;||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long T = 1, n, k, mx, mn, i, j, x, sum, MOD = 1e9 + 7;||| 4 long long up(long long x, long long y) {||| 5 if (x % y == 0) return x / y;||| 6 return x / y + 1;||| 7 }||| 8 long long fastestPower(long long x, long long y) {||| 9 if (y == 0) return 1;||| 10 if (y & 1) return x * fastestPower(x, y - 1);||| 11 long long z = fastestPower(x, y / 2);||| 12 return z * z;||| 13 }||| 14 long long a[200];||| 15 long long health;||| 16 bool check(long long k) {||| 17 long long me = health;||| 18 for (i = 0; i < n; i++) {||| 19 if (i == n - 1)||| 20 me -= k;||| 21 else {||| 22 long long temp = a[i] + k - 1;||| 23 if (temp < a[i + 1])||| 24 me -= k;||| 25 else {||| 26 me -= a[i + 1] - a[i];||| 27 }||| 28 }||| 29 }||| 30 return (me <= 0);||| 31 }||| 32 long long bs() {||| 33 long long b = 0, e = 1e18, ans = -1;||| 34 while (b < e) {||| 35 long long mid = (b + e) / 2;||| 36 if (check(mid)) {||| 37 ans = mid;||| 38 e = mid - 1;||| 39 } else||| 40 b = mid + 1;||| 41 }||| 42 if (check(ans - 1)) --ans;||| 43 return ans;||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 cin >> T;||| 50 while (T--) {||| 51 cin >> n >> health;||| 52 for (i = 0; i < n; i++) cin >> a[i];||| 53 a[n] = + +1e9;||| 54 cout << bs() << ""\n"";||| 55 }||| 56 return 0;||| 57 }||| "	18 for (long long i = 0; i < n; i++) {
115	227	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug() { cout << endl; }||| 4 template <typename T, typename... Args>||| 5 void debug(T a, Args... args) {||| 6 cout << a << "" "";||| 7 debug(args...);||| 8 }||| 9 const int N = 2e5 + 15;||| 10 const long long mod = 1e9 + 7;||| 11 const double E = 1e-7;||| 12 long long A[N];||| 13 int dg(long long a) {||| 14 int ans = 0;||| 15 while (a) {||| 16 a /= 10;||| 17 ans++;||| 18 }||| 19 return ans;||| 20 }||| 21 long long n, h;||| 22 bool f(long long mid) {||| 23 long long ans = 0;||| 24 for (int i = 1; i < n; i++) {||| 25 long long dis = abs(A[i] - A[i - 1]);||| 26 long long end = A[i - 1] + mid;||| 27 dis = min(dis, end - A[i - 1]);||| 28 ans += dis;||| 29 }||| 30 ans += mid;||| 31 return ans >= h;||| 32 }||| 33 void solve() {||| 34 cin >> n >> h;||| 35 for (int i = 0; i < n; i++) cin >> A[i];||| 36 long long a = -1, b = 2e18, mid;||| 37 while (b - a > 1) {||| 38 mid = (a + b) >> 1;||| 39 if (f(mid))||| 40 b = mid;||| 41 else||| 42 a = mid;||| 43 }||| 44 cout << b << '\n';||| 45 }||| 46 int main() {||| 47 ios_base::sync_with_stdio(0);||| 48 cin.tie(0);||| 49 cout.tie(0);||| 50 int t = 1;||| 51 cin >> t;||| 52 for (int i = 1; i <= t; i++) {||| 53 solve();||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug() { cout << endl; }||| 4 template <typename T, typename... Args>||| 5 void debug(T a, Args... args) {||| 6 cout << a << "" "";||| 7 debug(args...);||| 8 }||| 9 const int N = 2e5 + 15;||| 10 const long long mod = 1e9 + 7;||| 11 const double E = 1e-7;||| 12 long long A[N];||| 13 int dg(long long a) {||| 14 int ans = 0;||| 15 while (a) {||| 16 a /= 10;||| 17 ans++;||| 18 }||| 19 return ans;||| 20 }||| 21 int n, h;||| 22 bool f(long long mid) {||| 23 long long ans = 0;||| 24 for (int i = 1; i < n; i++) {||| 25 long long dis = abs(A[i] - A[i - 1]);||| 26 long long end = A[i - 1] + mid;||| 27 dis = min(dis, end - A[i - 1]);||| 28 ans += dis;||| 29 }||| 30 ans += mid;||| 31 return ans >= h;||| 32 }||| 33 void solve() {||| 34 cin >> n >> h;||| 35 for (int i = 0; i < n; i++) cin >> A[i];||| 36 long long a = -1, b = 2e18, mid;||| 37 while (b - a > 1) {||| 38 mid = (a + b) >> 1;||| 39 if (f(mid))||| 40 b = mid;||| 41 else||| 42 a = mid;||| 43 }||| 44 cout << b << '\n';||| 45 }||| 46 int main() {||| 47 ios_base::sync_with_stdio(0);||| 48 cin.tie(0);||| 49 cout.tie(0);||| 50 int t = 1;||| 51 cin >> t;||| 52 for (int i = 1; i <= t; i++) {||| 53 solve();||| 54 }||| 55 return 0;||| 56 }||| "	21 long long n, h;
116	107	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 using pll = pair<ll, ll>;||| 6 mt19937 rng((int)chrono::steady_clock::now().time_since_epoch().count());||| 7 const int MOD = 998244353;||| 8 const int MAXN = 5e5 + 5;||| 9 const ll INF = 2e18;||| 10 void add(ll &a, ll b) {||| 11 a += b;||| 12 a %= MOD;||| 13 if (a < 0) a += MOD;||| 14 }||| 15 ll dp[MAXN][2];||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int n;||| 23 cin >> n;||| 24 for (int i = 0; i <= n + 5; i++) dp[i][0] = dp[i][1] = 0;||| 25 vector<int> v(n);||| 26 for (int &x : v) cin >> x;||| 27 ll ans = 0;||| 28 for (int i = 0; i < n; i++) {||| 29 if (v[i] == 0) {||| 30 add(ans, dp[1][0] + 1);||| 31 add(ans, dp[1][1]);||| 32 add(dp[1][0], dp[1][0] + 1);||| 33 add(dp[1][1], dp[1][1]);||| 34 } else if (v[i] == 1) {||| 35 add(ans, dp[0][1] + 1);||| 36 add(ans, dp[1][0]);||| 37 add(ans, dp[2][1]);||| 38 add(ans, dp[2][0]);||| 39 add(dp[2][0], dp[2][0]);||| 40 add(dp[2][1], dp[2][1]);||| 41 add(dp[0][1], dp[0][1] + 1);||| 42 add(dp[2][0], dp[1][0]);||| 43 } else {||| 44 add(ans, dp[v[i] - 1][1]);||| 45 add(ans, dp[v[i]][0]);||| 46 add(ans, dp[v[i] - 1][0]);||| 47 add(ans, dp[v[i] + 1][1]);||| 48 add(ans, dp[v[i] + 1][0]);||| 49 add(dp[v[i] + 1][0], dp[v[i] + 1][0]);||| 50 add(dp[v[i] + 1][1], dp[v[i] + 1][1]);||| 51 add(dp[v[i] - 1][1], dp[v[i] - 1][1]);||| 52 add(dp[v[i] - 1][1], dp[v[i] - 1][0]);||| 53 add(dp[v[i] + 1][0], dp[v[i]][0]);||| 54 }||| 55 }||| 56 cout << ans << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 using pll = pair<ll, ll>;||| 6 mt19937 rng((int)chrono::steady_clock::now().time_since_epoch().count());||| 7 const int MOD = 998244353;||| 8 const int MAXN = 5e5 + 5;||| 9 const ll INF = 2e18;||| 10 void add(ll &a, ll b) {||| 11 a += b;||| 12 a %= MOD;||| 13 if (a < 0) a += MOD;||| 14 }||| 15 ll dp[MAXN][2];||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int n;||| 23 cin >> n;||| 24 for (int i = 0; i <= n; i++) dp[i][0] = dp[i][1] = 0;||| 25 vector<int> v(n);||| 26 for (int &x : v) cin >> x;||| 27 ll ans = 0;||| 28 for (int i = 0; i < n; i++) {||| 29 if (v[i] == 0) {||| 30 add(ans, dp[1][0] + 1);||| 31 add(ans, dp[1][1]);||| 32 add(dp[1][0], dp[1][0] + 1);||| 33 add(dp[1][1], dp[1][1]);||| 34 } else if (v[i] == 1) {||| 35 add(ans, dp[0][1] + 1);||| 36 add(ans, dp[1][0]);||| 37 add(ans, dp[2][1]);||| 38 add(ans, dp[2][0]);||| 39 add(dp[2][0], dp[2][0]);||| 40 add(dp[2][1], dp[2][1]);||| 41 add(dp[0][1], dp[0][1] + 1);||| 42 add(dp[2][0], dp[1][0]);||| 43 } else {||| 44 add(ans, dp[v[i] - 1][1]);||| 45 add(ans, dp[v[i]][0]);||| 46 add(ans, dp[v[i] - 1][0]);||| 47 add(ans, dp[v[i] + 1][1]);||| 48 add(ans, dp[v[i] + 1][0]);||| 49 add(dp[v[i] + 1][0], dp[v[i] + 1][0]);||| 50 add(dp[v[i] + 1][1], dp[v[i] + 1][1]);||| 51 add(dp[v[i] - 1][1], dp[v[i] - 1][1]);||| 52 add(dp[v[i] - 1][1], dp[v[i] - 1][0]);||| 53 add(dp[v[i] + 1][0], dp[v[i]][0]);||| 54 }||| 55 }||| 56 cout << ans << '\n';||| 57 }||| 58 return 0;||| 59 }||| 	24 for (int i = 0; i <= n + 5; i++) dp[i][0] = dp[i][1] = 0;
116	39	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x7f7f7f7f;||| 4 const long long linf = 1e18;||| 5 const int maxn = 5e5 + 9;||| 6 const int maxm = 1e5 + 9;||| 7 const double PI = 3.1415926;||| 8 const double eps = 1e-5;||| 9 const int base = 131;||| 10 const int N = 1e6;||| 11 const long long mod = 998244353;||| 12 namespace IO {||| 13 long long read() {||| 14 long long a = 1, b = 0;||| 15 char c = getchar();||| 16 while (c > '9' || c < '0') {||| 17 if (c == '-') a = -1;||| 18 c = getchar();||| 19 }||| 20 while (c >= '0' && c <= '9') {||| 21 b = (b << 3) + (b << 1) + c - '0';||| 22 c = getchar();||| 23 }||| 24 return a * b;||| 25 }||| 26 void print(long long x) {||| 27 if (x < 0) putchar('-'), x = -x;||| 28 if (x > 9) print(x / 10);||| 29 putchar(x % 10 + '0');||| 30 }||| 31 }  // namespace IO||| 32 using namespace IO;||| 33 int n;||| 34 long long dp[maxn][2];||| 35 int main() {||| 36 int cse = read();||| 37 while (cse--) {||| 38 dp[0][0] = 1;||| 39 n = read();||| 40 for (int i = 1; i <= n; ++i) {||| 41 int x = read() + 1;||| 42 dp[x][0] += dp[x - 1][0] + dp[x][0];||| 43 dp[x][1] += dp[x][1];||| 44 if (x > 1) dp[x][1] += dp[x - 2][0];||| 45 dp[x + 2][1] += dp[x + 2][1];||| 46 dp[x][0] %= mod;||| 47 dp[x][1] %= mod;||| 48 dp[x + 2][1] %= mod;||| 49 }||| 50 long long ans = 0;||| 51 for (int i = 1; i <= n + 1; ++i) {||| 52 ans = (ans + dp[i][0] + dp[i][1]) % mod;||| 53 }||| 54 print(ans);||| 55 putchar('\n');||| 56 for (int i = 0; i <= n + 1; ++i) dp[i][0] = dp[i][1] = 0;||| 57 }||| 58 return 0;||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x7f7f7f7f;||| 4 const long long linf = 1e18;||| 5 const int maxn = 5e5 + 9;||| 6 const int maxm = 1e5 + 9;||| 7 const double PI = 3.1415926;||| 8 const double eps = 1e-5;||| 9 const int base = 131;||| 10 const int N = 1e6;||| 11 const long long mod = 998244353;||| 12 namespace IO {||| 13 long long read() {||| 14 long long a = 1, b = 0;||| 15 char c = getchar();||| 16 while (c > '9' || c < '0') {||| 17 if (c == '-') a = -1;||| 18 c = getchar();||| 19 }||| 20 while (c >= '0' && c <= '9') {||| 21 b = (b << 3) + (b << 1) + c - '0';||| 22 c = getchar();||| 23 }||| 24 return a * b;||| 25 }||| 26 void print(long long x) {||| 27 if (x < 0) putchar('-'), x = -x;||| 28 if (x > 9) print(x / 10);||| 29 putchar(x % 10 + '0');||| 30 }||| 31 }  // namespace IO||| 32 using namespace IO;||| 33 int n;||| 34 int dp[maxn][2];||| 35 int main() {||| 36 int cse = read();||| 37 while (cse--) {||| 38 dp[0][0] = 1;||| 39 n = read();||| 40 for (int i = 1; i <= n; ++i) {||| 41 int x = read() + 1;||| 42 dp[x][0] += dp[x - 1][0] + dp[x][0];||| 43 dp[x][1] += dp[x][1];||| 44 if (x > 1) dp[x][1] += dp[x - 2][0];||| 45 dp[x + 2][1] += dp[x + 2][1];||| 46 dp[x][0] %= mod;||| 47 dp[x][1] %= mod;||| 48 dp[x + 2][1] %= mod;||| 49 }||| 50 long long ans = 0;||| 51 for (int i = 1; i <= n + 1; ++i) {||| 52 ans = (ans + dp[i][0] + dp[i][1]) % mod;||| 53 }||| 54 print(ans);||| 55 putchar('\n');||| 56 for (int i = 0; i <= n + 1; ++i) dp[i][0] = dp[i][1] = 0;||| 57 }||| 58 return 0;||| 59 }||| 	34 long long dp[maxn][2];
117	74	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int maxn = 1e6 + 10;||| 5 int sta_x = 0, sta_y = 0;||| 6 int n, m;||| 7 struct note {||| 8 int x;||| 9 int y;||| 10 } sta;||| 11 vector<char> mm[maxn];||| 12 int pmove[5][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};||| 13 void bfs() {||| 14 sta.x = sta_x, sta.y = sta_y;||| 15 queue<note> alls;||| 16 alls.push(sta);||| 17 while (!alls.empty()) {||| 18 note temp;||| 19 temp = alls.front();||| 20 alls.pop();||| 21 for (int i = 0; i < 4; i++) {||| 22 int dx = temp.x + pmove[i][0];||| 23 int dy = temp.y + pmove[i][1];||| 24 int cnt = 0;||| 25 if (dx >= 0 && dx < n && dy >= 0 && dy < m && mm[dx][dy] == '.') {||| 26 for (int j = 0; j < 4; j++) {||| 27 int ddx = dx + pmove[j][0];||| 28 int ddy = dy + pmove[j][1];||| 29 if (ddx >= 0 && ddx < n && ddy >= 0 && ddy < m && mm[ddx][ddy] == '.')||| 30 cnt++;||| 31 }||| 32 if (cnt <= 1) {||| 33 mm[dx][dy] = '+';||| 34 note res;||| 35 res.x = dx, res.y = dy;||| 36 alls.push(res);||| 37 }||| 38 }||| 39 }||| 40 }||| 41 }||| 42 int main() {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) {||| 46 scanf(""%d %d"", &n, &m);||| 47 for (int i = 0; i < n; i++) {||| 48 char str[maxn];||| 49 scanf(""%s"", str);||| 50 for (int j = 0; j < m; j++) {||| 51 if (str[j] == 'L') sta_x = i, sta_y = j;||| 52 mm[i].push_back(str[j]);||| 53 }||| 54 }||| 55 bfs();||| 56 for (int i = 0; i < n; i++) {||| 57 for (int j = 0; j < m; j++) cout << mm[i][j];||| 58 mm[i].clear();||| 59 cout << ""\n"";||| 60 }||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int maxn = 1e6 + 10;||| 5 int sta_x = 0, sta_y = 0;||| 6 int n, m;||| 7 struct note {||| 8 int x;||| 9 int y;||| 10 } sta;||| 11 vector<char> mm[maxn];||| 12 int pmove[5][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};||| 13 void bfs() {||| 14 sta.x = sta_x, sta.y = sta_y;||| 15 queue<note> alls;||| 16 alls.push(sta);||| 17 while (!alls.empty()) {||| 18 note temp;||| 19 temp = alls.front();||| 20 alls.pop();||| 21 for (int i = 0; i < 4; i++) {||| 22 int dx = temp.x + pmove[i][0];||| 23 int dy = temp.y + pmove[i][1];||| 24 int cnt = 0;||| 25 if (dx >= 0 && dx < n && dy >= 0 && dy < m && mm[dx][dy] == '.') {||| 26 for (int j = 0; j < 4; j++) {||| 27 int ddx = dx + pmove[j][0];||| 28 int ddy = dy + pmove[j][1];||| 29 if (ddx >= 0 && ddx < n && ddy >= 0 && ddy < m && mm[ddx][ddy] != '#')||| 30 cnt++;||| 31 }||| 32 if (cnt <= 2) {||| 33 mm[dx][dy] = '+';||| 34 note res;||| 35 res.x = dx, res.y = dy;||| 36 alls.push(res);||| 37 }||| 38 }||| 39 }||| 40 }||| 41 }||| 42 int main() {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) {||| 46 scanf(""%d %d"", &n, &m);||| 47 for (int i = 0; i < n; i++) {||| 48 char str[maxn];||| 49 scanf(""%s"", str);||| 50 for (int j = 0; j < m; j++) {||| 51 if (str[j] == 'L') sta_x = i, sta_y = j;||| 52 mm[i].push_back(str[j]);||| 53 }||| 54 }||| 55 bfs();||| 56 for (int i = 0; i < n; i++) {||| 57 for (int j = 0; j < m; j++) cout << mm[i][j];||| 58 mm[i].clear();||| 59 cout << ""\n"";||| 60 }||| 61 }||| 62 return 0;||| 63 }||| "	29 if (ddx >= 0 && ddx < n && ddy >= 0 && ddy < m && mm[ddx][ddy] == '.')
117	66	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 998244353;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0), cout.tie(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n, m;||| 11 cin >> n >> m;||| 12 vector<vector<char>> a(n, vector<char>(m));||| 13 for (int i = 0; i < n; i++) {||| 14 for (int j = 0; j < m; j++) {||| 15 cin >> a[i][j];||| 16 }||| 17 }||| 18 queue<pair<int, int>> q;||| 19 vector<vector<int>> bad_deg(n, vector<int>(m));||| 20 for (int i = 0; i < n; i++) {||| 21 for (int j = 0; j < m; j++) {||| 22 if (a[i][j] == '#' || a[i][j] == 'L') {||| 23 continue;||| 24 }||| 25 int good_deg = 0;||| 26 if (j < m - 1) {||| 27 if (a[i][j + 1] == '.') {||| 28 bad_deg[i][j]++;||| 29 }||| 30 if (a[i][j + 1] == 'L') {||| 31 good_deg++;||| 32 }||| 33 }||| 34 if (j > 0) {||| 35 if (a[i][j - 1] == '.') {||| 36 bad_deg[i][j]++;||| 37 }||| 38 if (a[i][j - 1] == 'L') {||| 39 good_deg++;||| 40 }||| 41 }||| 42 if (i < n - 1) {||| 43 if (a[i + 1][j] == '.') {||| 44 bad_deg[i][j]++;||| 45 }||| 46 if (a[i + 1][j] == 'L') {||| 47 good_deg++;||| 48 }||| 49 }||| 50 if (i > 0) {||| 51 if (a[i - 1][j] == '.') {||| 52 bad_deg[i][j]++;||| 53 }||| 54 if (a[i - 1][j] == 'L') {||| 55 good_deg++;||| 56 }||| 57 }||| 58 if (bad_deg[i][j] <= 1 && good_deg == 1) {||| 59 q.push({i, j});||| 60 }||| 61 }||| 62 }||| 63 vector<vector<bool>> used(n, vector<bool>(m));||| 64 while (!q.empty()) {||| 65 int i = q.front().first;||| 66 int j = q.front().second;||| 67 q.pop();||| 68 used[i][j] = true;||| 69 a[i][j] = '+';||| 70 if (j < m - 1 && a[i][j + 1] == '.' && !used[i][j + 1]) {||| 71 bad_deg[i][j + 1]--;||| 72 if (bad_deg[i][j + 1] <= 1) {||| 73 q.push({i, j + 1});||| 74 }||| 75 }||| 76 if (j > 0 && a[i][j - 1] == '.' && !used[i][j - 1]) {||| 77 bad_deg[i][j - 1]--;||| 78 if (bad_deg[i][j - 1] <= 1) {||| 79 q.push({i, j - 1});||| 80 }||| 81 }||| 82 if (i < n - 1 && a[i + 1][j] == '.' && !used[i + 1][j]) {||| 83 bad_deg[i + 1][j]--;||| 84 if (bad_deg[i + 1][j] <= 1) {||| 85 q.push({i + 1, j});||| 86 }||| 87 }||| 88 if (i > 0 && a[i - 1][j] == '.' && !used[i - 1][j]) {||| 89 bad_deg[i - 1][j]--;||| 90 if (bad_deg[i - 1][j] <= 1) {||| 91 q.push({i - 1, j});||| 92 }||| 93 }||| 94 }||| 95 for (int i = 0; i < n; i++) {||| 96 for (int j = 0; j < m; j++) {||| 97 cout << a[i][j];||| 98 }||| 99 cout << ""\n"";||| 100 }||| 101 }||| 102 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 998244353;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0), cout.tie(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n, m;||| 11 cin >> n >> m;||| 12 vector<vector<char>> a(n, vector<char>(m));||| 13 for (int i = 0; i < n; i++) {||| 14 for (int j = 0; j < m; j++) {||| 15 cin >> a[i][j];||| 16 }||| 17 }||| 18 queue<pair<int, int>> q;||| 19 vector<vector<int>> bad_deg(n, vector<int>(m));||| 20 for (int i = 0; i < n; i++) {||| 21 for (int j = 0; j < m; j++) {||| 22 if (a[i][j] == '#' || a[i][j] == 'L') {||| 23 continue;||| 24 }||| 25 int good_deg = 0;||| 26 if (j < m - 1) {||| 27 if (a[i][j + 1] == '.') {||| 28 bad_deg[i][j]++;||| 29 }||| 30 if (a[i][j + 1] == 'L') {||| 31 good_deg++;||| 32 }||| 33 }||| 34 if (j > 0) {||| 35 if (a[i][j - 1] == '.') {||| 36 bad_deg[i][j]++;||| 37 }||| 38 if (a[i][j - 1] == 'L') {||| 39 good_deg++;||| 40 }||| 41 }||| 42 if (i < n - 1) {||| 43 if (a[i + 1][j] == '.') {||| 44 bad_deg[i][j]++;||| 45 }||| 46 if (a[i + 1][j] == 'L') {||| 47 good_deg++;||| 48 }||| 49 }||| 50 if (i > 0) {||| 51 if (a[i - 1][j] == '.') {||| 52 bad_deg[i][j]++;||| 53 }||| 54 if (a[i - 1][j] == 'L') {||| 55 good_deg++;||| 56 }||| 57 }||| 58 if (bad_deg[i][j] == 1 && good_deg == 1) {||| 59 q.push({i, j});||| 60 }||| 61 }||| 62 }||| 63 vector<vector<bool>> used(n, vector<bool>(m));||| 64 while (!q.empty()) {||| 65 int i = q.front().first;||| 66 int j = q.front().second;||| 67 q.pop();||| 68 used[i][j] = true;||| 69 a[i][j] = '+';||| 70 if (j < m - 1 && a[i][j + 1] == '.' && !used[i][j + 1]) {||| 71 bad_deg[i][j + 1]--;||| 72 if (bad_deg[i][j + 1] <= 1) {||| 73 q.push({i, j + 1});||| 74 }||| 75 }||| 76 if (j > 0 && a[i][j - 1] == '.' && !used[i][j - 1]) {||| 77 bad_deg[i][j - 1]--;||| 78 if (bad_deg[i][j - 1] <= 1) {||| 79 q.push({i, j - 1});||| 80 }||| 81 }||| 82 if (i < n - 1 && a[i + 1][j] == '.' && !used[i + 1][j]) {||| 83 bad_deg[i + 1][j]--;||| 84 if (bad_deg[i + 1][j] <= 1) {||| 85 q.push({i + 1, j});||| 86 }||| 87 }||| 88 if (i > 0 && a[i - 1][j] == '.' && !used[i - 1][j]) {||| 89 bad_deg[i - 1][j]--;||| 90 if (bad_deg[i - 1][j] <= 1) {||| 91 q.push({i - 1, j});||| 92 }||| 93 }||| 94 }||| 95 for (int i = 0; i < n; i++) {||| 96 for (int j = 0; j < m; j++) {||| 97 cout << a[i][j];||| 98 }||| 99 cout << ""\n"";||| 100 }||| 101 }||| 102 }||| "	58 if (bad_deg[i][j] <= 1 && good_deg == 1) {
117	149	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 10;||| 4 int n, m, lx, ly, val[maxn];||| 5 int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};||| 6 vector<string> a;||| 7 bool inside(int x, int y) { return x >= 0 && x < n && y >= 0 && y < m; }||| 8 void dfs(int u) {||| 9 int i = u / m, j = u % m, w = 0, can = 0;||| 10 for (int d = 0; d < (int)(4); ++d) {||| 11 int x = i + dx[d], y = j + dy[d];||| 12 if (!inside(x, y) || a[x][y] == '#') continue;||| 13 int v = x * m + y;||| 14 w++;||| 15 can += val[v];||| 16 }||| 17 val[u] = (can && w - can <= 1) || (i == lx && j == ly);||| 18 if (!val[u]) return;||| 19 for (int d = 0; d < (int)(4); ++d) {||| 20 int x = i + dx[d], y = j + dy[d];||| 21 if (!inside(x, y) || a[x][y] == '#') continue;||| 22 int v = x * m + y;||| 23 if (!val[v]) dfs(v);||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 28 int tt;||| 29 cin >> tt;||| 30 while (tt--) {||| 31 cin >> n >> m;||| 32 a.resize(n);||| 33 for (int i = 0; i < (int)(n); ++i) {||| 34 cin >> a[i];||| 35 for (int j = 0; j < (int)(m); ++j) {||| 36 if (a[i][j] == 'L') lx = i, ly = j;||| 37 val[i * m + j] = 0;||| 38 }||| 39 }||| 40 dfs(lx * m + ly);||| 41 for (int i = 0; i < (int)(n); ++i) {||| 42 for (int j = 0; j < (int)(m); ++j) {||| 43 if (a[i][j] == 'L' || !val[i * m + j])||| 44 cout << a[i][j];||| 45 else||| 46 cout << '+';||| 47 }||| 48 cout << '\n';||| 49 }||| 50 }||| 51 return 0;||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 10;||| 4 int n, m, lx, ly, val[maxn];||| 5 int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};||| 6 vector<string> a;||| 7 bool inside(int x, int y) { return x >= 0 && x < n && y >= 0 && y < m; }||| 8 void dfs(int u) {||| 9 int i = u / m, j = u % m, w = 0, can = 0;||| 10 for (int d = 0; d < (int)(4); ++d) {||| 11 int x = i + dx[d], y = j + dy[d];||| 12 if (!inside(x, y) || a[x][y] == '#') continue;||| 13 int v = x * m + y;||| 14 w++;||| 15 can += val[v];||| 16 }||| 17 val[u] = (can && w - can <= 1) || (i == lx && j == ly);||| 18 if (!val[u]) return;||| 19 for (int d = 0; d < (int)(4); ++d) {||| 20 int x = i + dx[d], y = j + dy[d];||| 21 if (!inside(x, y) || a[x][y] == '#') continue;||| 22 int v = x * m + y;||| 23 if (!val[v]) dfs(v);||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 28 int tt;||| 29 cin >> tt;||| 30 while (tt--) {||| 31 cin >> n >> m;||| 32 a.resize(n);||| 33 for (int i = 0; i < (int)(n); ++i) {||| 34 cin >> a[i];||| 35 for (int j = 0; j < (int)(m); ++j) {||| 36 if (a[i][j] == 'L') lx = i, ly = j;||| 37 val[i * n + j] = 0;||| 38 }||| 39 }||| 40 dfs(lx * m + ly);||| 41 for (int i = 0; i < (int)(n); ++i) {||| 42 for (int j = 0; j < (int)(m); ++j) {||| 43 if (a[i][j] == 'L' || !val[i * m + j])||| 44 cout << a[i][j];||| 45 else||| 46 cout << '+';||| 47 }||| 48 cout << '\n';||| 49 }||| 50 }||| 51 return 0;||| 52 }||| 	37 val[i * m + j] = 0;
117	152	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 const int max_n = 1e6 + 1;||| 5 string G[max_n];||| 6 int sx, sy;||| 7 pair<int, int> mov[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};||| 8 int possible_route(int x, int y) {||| 9 int cnt = 0;||| 10 for (int i = 0; i < 4; i++) {||| 11 int xn = x + mov[i].first, yn = y + mov[i].second;||| 12 if (0 <= xn && xn < n && 0 <= yn && yn < m && G[xn][yn] == '.') cnt++;||| 13 }||| 14 return cnt;||| 15 }||| 16 void dfs(int x, int y) {||| 17 for (int i = 0; i < 4; i++) {||| 18 int xn = x + mov[i].first, yn = y + mov[i].second;||| 19 if (xn < 0 || xn >= n || yn < 0 || yn >= m) continue;||| 20 if (G[xn][yn] == '.' && possible_route(xn, yn) <= 1) {||| 21 G[xn][yn] = '+';||| 22 dfs(xn, yn);||| 23 }||| 24 }||| 25 }||| 26 void solve() {||| 27 cin >> n >> m;||| 28 for (int i = 0; i < n; i++) {||| 29 cin >> G[i];||| 30 int j = G[i].find('L');||| 31 if (j != -1) sx = i, sy = j;||| 32 }||| 33 dfs(sx, sy);||| 34 for (int i = 0; i < n; i++) cout << G[i] << ""\n"";||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin.tie(0), cout.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) solve();||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 const int max_n = 1e6 + 1;||| 5 string G[max_n];||| 6 int sx, sy;||| 7 pair<int, int> mov[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};||| 8 int possible_route(int x, int y) {||| 9 int cnt = 0;||| 10 for (int i = 0; i < 4; i++) {||| 11 int xn = x + mov[i].first, yn = y + mov[i].second;||| 12 if (0 <= xn && xn < n && 0 <= yn && yn < m && G[xn][yn] != '#') cnt++;||| 13 }||| 14 return cnt;||| 15 }||| 16 void dfs(int x, int y) {||| 17 for (int i = 0; i < 4; i++) {||| 18 int xn = x + mov[i].first, yn = y + mov[i].second;||| 19 if (xn < 0 || xn >= n || yn < 0 || yn >= m) continue;||| 20 if (G[xn][yn] == '.' && possible_route(xn, yn) <= 2) {||| 21 G[xn][yn] = '+';||| 22 dfs(xn, yn);||| 23 }||| 24 }||| 25 }||| 26 void solve() {||| 27 cin >> n >> m;||| 28 for (int i = 0; i < n; i++) {||| 29 cin >> G[i];||| 30 int j = G[i].find('L');||| 31 if (j != -1) sx = i, sy = j;||| 32 }||| 33 dfs(sx, sy);||| 34 for (int i = 0; i < n; i++) cout << G[i] << ""\n"";||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(false);||| 38 cin.tie(0), cout.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) solve();||| 42 }||| "	12 if (0 <= xn && xn < n && 0 <= yn && yn < m && G[xn][yn] == '.') cnt++;
118	42	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 998244353, G = 3, N = 1 << 20;||| 4 int Pw(int x, int y = M - 2) {||| 5 return y ? ((y & 1) ? (long long)Pw((long long)x * x % M, y / 2) * x % M||| 6 : Pw((long long)x * x % M, y / 2) % M)||| 7 : 1;||| 8 }||| 9 int rt[N], mg[N], fac[N], Lm = 1;||| 10 int rev[N], a[N], iv;||| 11 void dft(int n) {||| 12 for (int i = (0); i <= (n - 1); ++i)||| 13 rev[i] = (rev[i >> 1] >> 1) | ((i & 1) * (n >> 1)),||| 14 ((i < rev[i]) && (a[i] ^= a[rev[i]] ^= a[i] ^= a[rev[i]]));||| 15 for (int i = 2; i <= n; i <<= 1)||| 16 for (int j = 0, l = (i >> 1); j < n; j += i)||| 17 for (int k = 0, pa, pb, *w = rt + l; k < l; k++, w++)||| 18 pa = a[j + k], pb = (long long)a[j + k + l] * *w % M,||| 19 a[j + k] = (pa + pb) % M, a[j + k + l] = (pa + M - pb) % M;||| 20 for (int i = (0); i <= (n - 1); ++i) a[i] = (long long)a[i] * iv % M;||| 21 }||| 22 int n, deg[N], cnt[N], ns, x, y, all;||| 23 int main() {||| 24 cin >> n, fac[0] = deg[1] = 1;||| 25 for (int i = (1); i <= (n); ++i) fac[i] = (long long)fac[i - 1] * i % M;||| 26 for (int i = (1); i <= (n - 1); ++i) cin >> x >> y, deg[x] += 1, deg[y] += 1;||| 27 for (int i = (1); i <= (n); ++i)||| 28 if (deg[i] > 1) cnt[deg[i] - 1] += 1, all += 1;||| 29 for (; Lm <= all; Lm <<= 1)||| 30 ;||| 31 int w = Pw(G, (M - 1) / Lm);||| 32 mg[0] = 1, iv = Pw(Lm);||| 33 for (int i = (1); i <= (Lm - 1); ++i) mg[i] = (long long)mg[i - 1] * w % M;||| 34 for (int i = 1, S; i < Lm; i <<= 1) {||| 35 S = Pw(G, M - 1 - (M - 1) / (i << 1)), rt[i] = 1;||| 36 for (int j = (i + 1); j <= (i * 2 - 1); ++j)||| 37 rt[j] = (long long)rt[j - 1] * S % M;||| 38 }||| 39 for (int i = (0); i <= (Lm - 1); ++i) a[i] = 1;||| 40 for (int i = (1); i <= (n); ++i)||| 41 if (cnt[i])||| 42 for (int j = 0, *w = mg; j < Lm; j++, w++)||| 43 a[j] = (long long)a[j] * Pw(*w + i, cnt[i]) % M;||| 44 dft(Lm);||| 45 for (int i = (0); i <= (all); ++i)||| 46 (ns +=||| 47 (long long)fac[n - i] * a[all - i] % M * ((i & 1) ? M - 1 : 1) % M) %= M;||| 48 cout << ns << '\n';||| 49 return 0;||| 50 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 998244353, G = 3, N = 1 << 20;||| 4 int Pw(int x, int y = M - 2) {||| 5 return y ? ((y & 1) ? (long long)Pw((long long)x * x % M, y / 2) * x % M||| 6 : Pw((long long)x * x % M, y / 2) % M)||| 7 : 1;||| 8 }||| 9 int rt[N], mg[N], fac[N], Lm = 1;||| 10 int rev[N], a[N], iv;||| 11 void dft(int n) {||| 12 for (int i = (0); i <= (n - 1); ++i)||| 13 rev[i] = (rev[i >> 1] >> 1) | ((i & 1) * (n >> 1)),||| 14 ((i < rev[i]) && (a[i] ^= a[rev[i]] ^= a[i] ^= a[rev[i]]));||| 15 for (int i = 2; i <= n; i <<= 1)||| 16 for (int j = 0, l = (i >> 1); j < n; j += i)||| 17 for (int k = 0, pa, pb, *w = rt + l; k < l; k++, w++)||| 18 pa = a[j + k], pb = (long long)a[j + k + l] * *w % M,||| 19 a[j + k] = (pa + pb) % M, a[j + k + l] = (pa + M - pb) % M;||| 20 for (int i = (0); i <= (n - 1); ++i) a[i] = (long long)a[i] * iv % M;||| 21 }||| 22 int n, deg[N], cnt[N], ns, x, y, all;||| 23 int main() {||| 24 cin >> n, fac[0] = deg[1] = 1;||| 25 for (int i = (1); i <= (n); ++i) fac[i] = (long long)fac[i - 1] * i % M;||| 26 for (int i = (1); i <= (n - 1); ++i) cin >> x >> y, deg[x] += 1, deg[y] += 1;||| 27 for (int i = (1); i <= (n); ++i)||| 28 if (deg[i] > 1) cnt[deg[i] - 1] += 1, all += 1;||| 29 for (; Lm <= x; Lm <<= 1)||| 30 ;||| 31 int w = Pw(G, (M - 1) / Lm);||| 32 mg[0] = 1, iv = Pw(Lm);||| 33 for (int i = (1); i <= (Lm - 1); ++i) mg[i] = (long long)mg[i - 1] * w % M;||| 34 for (int i = 1, S; i < Lm; i <<= 1) {||| 35 S = Pw(G, M - 1 - (M - 1) / (i << 1)), rt[i] = 1;||| 36 for (int j = (i + 1); j <= (i * 2 - 1); ++j)||| 37 rt[j] = (long long)rt[j - 1] * S % M;||| 38 }||| 39 for (int i = (0); i <= (Lm - 1); ++i) a[i] = 1;||| 40 for (int i = (1); i <= (n); ++i)||| 41 if (cnt[i])||| 42 for (int j = 0, *w = mg; j < Lm; j++, w++)||| 43 a[j] = (long long)a[j] * Pw(*w + i, cnt[i]) % M;||| 44 dft(Lm);||| 45 for (int i = (0); i <= (all); ++i)||| 46 (ns +=||| 47 (long long)fac[n - i] * a[all - i] % M * ((i & 1) ? M - 1 : 1) % M) %= M;||| 48 cout << ns << '\n';||| 49 return 0;||| 50 }||| 	29 for (; Lm <= all; Lm <<= 1)
119	280	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 long long s = 0;||| 6 cin >> n;||| 7 for (int i = 0; i < n; i++) {||| 8 int a;||| 9 cin >> a;||| 10 s += a;||| 11 }||| 12 if (s % n == 0)||| 13 cout << ""0\n"";||| 14 else||| 15 cout << ""1\n"";||| 16 }||| 17 int main() {||| 18 int t = 1;||| 19 cin >> t;||| 20 while (t--) solve();||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 long long s = 0;||| 6 cin >> n;||| 7 for (int i = 0; i < n; i++) {||| 8 int a;||| 9 cin >> a;||| 10 s += a;||| 11 }||| 12 if (s % n == 0)||| 13 cout << ""1\n"";||| 14 else||| 15 cout << ""0\n"";||| 16 }||| 17 int main() {||| 18 int t = 1;||| 19 cin >> t;||| 20 while (t--) solve();||| 21 return 0;||| 22 }||| "	"13 cout << ""0\n"";"
119	84	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 long long A[n + 1];||| 8 long long ans = 0;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> A[i];||| 11 ans += A[i];||| 12 }||| 13 if (ans % n == 0)||| 14 cout << 0;||| 15 else||| 16 cout << 1;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(NULL);||| 20 cin.tie(nullptr);||| 21 cout.tie(nullptr);||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 long long A[n + 1];||| 8 long long ans = 0;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> A[i];||| 11 ans += A[i];||| 12 }||| 13 if (ans % 2 == 0)||| 14 cout << 0;||| 15 else||| 16 cout << 1;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(NULL);||| 20 cin.tie(nullptr);||| 21 cout.tie(nullptr);||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 }||| "	13 if (ans % n == 0)
119	157	1 #include <bits/stdc++.h>||| 2 using lli = long long int;||| 3 using li = long int;||| 4 using namespace std;||| 5 const lli MOD{998244353};||| 6 const lli INF{(false ? (INT_MAX - 1) / 2 : (lli)1e18 + 5)};||| 7 const lli N{200005};||| 8 int main() {||| 9 cout << setprecision(15);||| 10 cin.tie(nullptr)->sync_with_stdio(false);||| 11 li T{1};||| 12 cin >> T;||| 13 while (T--) {||| 14 lli n{};||| 15 cin >> n;||| 16 vector<lli> arr(n);||| 17 lli sum{};||| 18 for (auto &i : arr) cin >> i, sum += i;||| 19 if (sum % n)||| 20 cout << 1 << '\n';||| 21 else||| 22 cout << 0 << '\n';||| 23 }||| 24 return 0;||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using lli = long long int;||| 3 using li = long int;||| 4 using namespace std;||| 5 const lli MOD{998244353};||| 6 const lli INF{(false ? (INT_MAX - 1) / 2 : (lli)1e18 + 5)};||| 7 const lli N{200005};||| 8 int main() {||| 9 cout << setprecision(15);||| 10 cin.tie(nullptr)->sync_with_stdio(false);||| 11 li T{1};||| 12 cin >> T;||| 13 while (T--) {||| 14 lli n{};||| 15 cin >> n;||| 16 vector<lli> arr(n);||| 17 lli sum{};||| 18 for (auto &i : arr) cin >> i, sum += i;||| 19 if (sum & 1)||| 20 cout << 1 << '\n';||| 21 else||| 22 cout << 0 << '\n';||| 23 }||| 24 return 0;||| 25 }||| 	19 if (sum % n)
119	181	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int k, s = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> k;||| 12 s += k;||| 13 }||| 14 if (s % n == 0)||| 15 cout << 0 << endl;||| 16 else||| 17 cout << 1 << endl;||| 18 }||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int k, s = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> k;||| 12 s += k;||| 13 }||| 14 if (s % k == 0)||| 15 cout << 0 << endl;||| 16 else||| 17 cout << 1 << endl;||| 18 }||| 19 }||| 	14 if (s % n == 0)
120	218	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T, class V>||| 4 T power(T t, V v) {||| 5 T second = 1;||| 6 while (v--) second *= t;||| 7 return second;||| 8 }||| 9 void _print(long long t) { cerr << t; }||| 10 void _print(int t) { cerr << t; }||| 11 void _print(string t) { cerr << t; }||| 12 void _print(char t) { cerr << t; }||| 13 void _print(long double t) { cerr << t; }||| 14 void _print(double t) { cerr << t; }||| 15 void _print(unsigned long long t) { cerr << t; }||| 16 template <class T, class V>||| 17 void _print(pair<T, V> p);||| 18 template <class T>||| 19 void _print(vector<T> v);||| 20 template <class T>||| 21 void _print(set<T> v);||| 22 template <class T, class V>||| 23 void _print(map<T, V> v);||| 24 template <class T>||| 25 void _print(multiset<T> v);||| 26 template <class T, class V>||| 27 void _print(pair<T, V> p) {||| 28 cerr << ""{"";||| 29 _print(p.first);||| 30 cerr << "" "";||| 31 _print(p.second);||| 32 cerr << ""}"";||| 33 }||| 34 template <class T>||| 35 void _print(vector<T> v) {||| 36 int n = v.size();||| 37 cerr << ""[ "";||| 38 for (T i : v) {||| 39 _print(i);||| 40 n--;||| 41 cerr << (n ? "", "" : "" "");||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(set<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T>||| 55 void _print(multiset<T> v) {||| 56 cerr << ""[ "";||| 57 for (T i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 template <class T, class V>||| 64 void _print(map<T, V> v) {||| 65 int n = v.size();||| 66 cerr << ""{ "";||| 67 for (auto p : v) {||| 68 cerr << ""["";||| 69 _print(p.first);||| 70 cerr << ""]="";||| 71 _print(p.second);||| 72 n--;||| 73 cerr << (n ? "", "" : "" "");||| 74 }||| 75 cerr << ""}"";||| 76 }||| 77 vector<long long> p(25);||| 78 void go() {||| 79 long long l, r;||| 80 cin >> l >> r;||| 81 long long ans = 0;||| 82 for (int i = 0; i < 24; i++) {||| 83 long long temp = 0;||| 84 long long a = 0;||| 85 if (l >= p[i]) {||| 86 a = l / p[i];||| 87 if (a % 2 == 1) {||| 88 long long z = l - a * p[i];||| 89 a = (a / 2) * p[i] + z;||| 90 } else {||| 91 a = (a / 2) * p[i];||| 92 }||| 93 }||| 94 long long b = 0;||| 95 if (r >= p[i]) {||| 96 b = r / p[i];||| 97 if (b % 2 == 1) {||| 98 long long z = r - b * p[i] + 1;||| 99 b = (b / 2) * p[i] + z;||| 100 } else {||| 101 b = (b / 2) * p[i];||| 102 }||| 103 }||| 104 ans = max(ans, b - a);||| 105 }||| 106 cout << (r - l + 1) - ans << ""\n"";||| 107 }||| 108 int main() {||| 109 ios_base::sync_with_stdio(false);||| 110 cin.tie(NULL);||| 111 int t = 1;||| 112 cin >> t;||| 113 p[0] = 1;||| 114 for (int i = 1; i < 25; i++) {||| 115 p[i] = p[i - 1] * 2;||| 116 }||| 117 cerr << ""p""||| 118 << "": "";||| 119 _print(p);||| 120 cerr << ""\n"";||| 121 ;||| 122 while (t--) {||| 123 go();||| 124 }||| 125 return 0;||| 126 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T, class V>||| 4 T power(T t, V v) {||| 5 T second = 1;||| 6 while (v--) second *= t;||| 7 return second;||| 8 }||| 9 void _print(long long t) { cerr << t; }||| 10 void _print(int t) { cerr << t; }||| 11 void _print(string t) { cerr << t; }||| 12 void _print(char t) { cerr << t; }||| 13 void _print(long double t) { cerr << t; }||| 14 void _print(double t) { cerr << t; }||| 15 void _print(unsigned long long t) { cerr << t; }||| 16 template <class T, class V>||| 17 void _print(pair<T, V> p);||| 18 template <class T>||| 19 void _print(vector<T> v);||| 20 template <class T>||| 21 void _print(set<T> v);||| 22 template <class T, class V>||| 23 void _print(map<T, V> v);||| 24 template <class T>||| 25 void _print(multiset<T> v);||| 26 template <class T, class V>||| 27 void _print(pair<T, V> p) {||| 28 cerr << ""{"";||| 29 _print(p.first);||| 30 cerr << "" "";||| 31 _print(p.second);||| 32 cerr << ""}"";||| 33 }||| 34 template <class T>||| 35 void _print(vector<T> v) {||| 36 int n = v.size();||| 37 cerr << ""[ "";||| 38 for (T i : v) {||| 39 _print(i);||| 40 n--;||| 41 cerr << (n ? "", "" : "" "");||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(set<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T>||| 55 void _print(multiset<T> v) {||| 56 cerr << ""[ "";||| 57 for (T i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 template <class T, class V>||| 64 void _print(map<T, V> v) {||| 65 int n = v.size();||| 66 cerr << ""{ "";||| 67 for (auto p : v) {||| 68 cerr << ""["";||| 69 _print(p.first);||| 70 cerr << ""]="";||| 71 _print(p.second);||| 72 n--;||| 73 cerr << (n ? "", "" : "" "");||| 74 }||| 75 cerr << ""}"";||| 76 }||| 77 vector<long long> p(25);||| 78 void go() {||| 79 long long l, r;||| 80 cin >> l >> r;||| 81 long long ans = 0;||| 82 for (int i = 0; i < 24; i++) {||| 83 long long temp = 0;||| 84 long long a = 0;||| 85 if (l >= p[i]) {||| 86 a = l / p[i];||| 87 if (a % 2 == 1) {||| 88 long long z = l - a * p[i];||| 89 a = (a / 2) * p[i] + z;||| 90 } else {||| 91 a = (a / 2) * p[i];||| 92 }||| 93 }||| 94 long long b = 0;||| 95 if (r >= p[i]) {||| 96 b = r / p[i];||| 97 if (b % 2 == 1) {||| 98 long long z = r - b * p[i];||| 99 b = (b / 2) * p[i] + z;||| 100 } else {||| 101 b = (b / 2) * p[i];||| 102 }||| 103 }||| 104 ans = max(ans, b - a);||| 105 }||| 106 cout << (r - l + 1) - ans << ""\n"";||| 107 }||| 108 int main() {||| 109 ios_base::sync_with_stdio(false);||| 110 cin.tie(NULL);||| 111 int t = 1;||| 112 cin >> t;||| 113 p[0] = 1;||| 114 for (int i = 1; i < 25; i++) {||| 115 p[i] = p[i - 1] * 2;||| 116 }||| 117 cerr << ""p""||| 118 << "": "";||| 119 _print(p);||| 120 cerr << ""\n"";||| 121 ;||| 122 while (t--) {||| 123 go();||| 124 }||| 125 return 0;||| 126 }||| "	98 long long z = r - b * p[i] + 1;
121	156	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t, cnt = 1;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 string a, b;||| 12 cin >> a >> b;||| 13 long long ans1 = (1LL << 62), ans2 = (1LL << 62), changehobena = 0,||| 14 changehobe = 0, changehobena1 = 0, changehobe1 = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 if (a[i] == b[i]) {||| 17 changehobena++;||| 18 if (a[i] == '1') changehobena1++;||| 19 } else {||| 20 changehobe++;||| 21 if (a[i] == '1') changehobe1++;||| 22 }||| 23 }||| 24 if ((changehobena & 1) && ((changehobena + 1) / 2) == changehobena1)||| 25 ans1 = changehobena;||| 26 if ((changehobe & 1 ^ 1) && ((changehobe + 1) / 2) == changehobe1)||| 27 ans2 = changehobe;||| 28 long long ans = min(ans1, ans2);||| 29 if (ans == (1LL << 62))||| 30 cout << -1 << '\n';||| 31 else||| 32 cout << ans << '\n';||| 33 }||| 34 return 0;||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t, cnt = 1;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 string a, b;||| 12 cin >> a >> b;||| 13 long long ans1 = (1LL << 62), ans2 = (1LL << 62), changehobena = 0,||| 14 changehobe = 0, changehobena1 = 0, changehobe1 = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 if (a[i] == b[i]) {||| 17 changehobena++;||| 18 if (a[i] == '1') changehobena1++;||| 19 } else {||| 20 changehobe++;||| 21 if (a[i] == '1') changehobe1++;||| 22 }||| 23 }||| 24 if ((changehobena & 1) && ((changehobena + 1) / 2) <= changehobena1)||| 25 ans1 = changehobena;||| 26 if ((changehobe & 1 ^ 1) && ((changehobe + 1) / 2) <= changehobe1)||| 27 ans2 = changehobe;||| 28 long long ans = min(ans1, ans2);||| 29 if (ans == (1LL << 62))||| 30 cout << -1 << '\n';||| 31 else||| 32 cout << ans << '\n';||| 33 }||| 34 return 0;||| 35 }||| 	24 if ((changehobena & 1) && ((changehobena + 1) / 2) == changehobena1)
121	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long n, string str1, string str2) {||| 4 long long t1 = 0, t2 = 0;||| 5 for (long long i = 0; i < n; i++) {||| 6 if (str1[i] != str2[i]) {||| 7 if (str1[i] == '1')||| 8 t1++;||| 9 else||| 10 t2++;||| 11 }||| 12 }||| 13 if (t1 != t2)||| 14 return -1;||| 15 else||| 16 return 2 * t1;||| 17 }||| 18 int main() {||| 19 long long t;||| 20 cin >> t;||| 21 while (t--) {||| 22 long long n;||| 23 string str1, str2;||| 24 cin >> n;||| 25 cin >> str1 >> str2;||| 26 long long a1 = solve(n, str1, str2);||| 27 long long ind = -1;||| 28 for (long long i = 0; i < n; i++) {||| 29 if (str1[i] == '1' && str2[i] == '1') {||| 30 ind = i;||| 31 break;||| 32 }||| 33 }||| 34 long long a2 = -1;||| 35 string temp = str1;||| 36 if (ind != -1) {||| 37 for (long long i = 0; i < n; i++) {||| 38 if (str1[i] == '1' && i != ind)||| 39 str1[i] = '0';||| 40 else if (str1[i] == '0')||| 41 str1[i] = '1';||| 42 }||| 43 a2 = solve(n, str1, str2);||| 44 }||| 45 long long a3 = -1;||| 46 str1 = temp;||| 47 long long ind2 = -1;||| 48 for (long long i = 0; i < n; i++) {||| 49 if (str1[i] == '1' && str2[i] == '0') {||| 50 ind2 = i;||| 51 break;||| 52 }||| 53 }||| 54 if (ind2 != -1) {||| 55 for (long long i = 0; i < n; i++) {||| 56 if (str1[i] == '1' && i != ind2)||| 57 str1[i] = '0';||| 58 else if (str1[i] == '0')||| 59 str1[i] = '1';||| 60 }||| 61 a3 = solve(n, str1, str2);||| 62 }||| 63 if (a1 == -1 && a2 == -1 && a3 == -1) {||| 64 cout << ""-1"" << endl;||| 65 } else {||| 66 if (a1 == -1 && a2 == -1)||| 67 cout << (a3 + 1) << endl;||| 68 else if (a1 == -1 && a3 == -1)||| 69 cout << (a2 + 1) << endl;||| 70 else if (a2 == -1 && a3 == -1)||| 71 cout << a1 << endl;||| 72 else if (a1 == -1)||| 73 cout << min(a2 + 1, a3 + 1) << endl;||| 74 else if (a2 == -1)||| 75 cout << min(a1, a3 + 1) << endl;||| 76 else if (a3 == -1)||| 77 cout << min(a1, a2 + 1) << endl;||| 78 else {||| 79 long long b = min(a2 + 1, a3 + 1);||| 80 long long ans = min(b, a1);||| 81 cout << ans << endl;||| 82 }||| 83 }||| 84 }||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long solve(long long n, string str1, string str2) {||| 4 long long t1 = 0, t2 = 0;||| 5 for (long long i = 0; i < n; i++) {||| 6 if (str1[i] != str2[i]) {||| 7 if (str1[i] == '1')||| 8 t1++;||| 9 else||| 10 t2++;||| 11 }||| 12 }||| 13 if (t1 != t2)||| 14 return -1;||| 15 else||| 16 return 2 * t1;||| 17 }||| 18 int main() {||| 19 long long t;||| 20 cin >> t;||| 21 while (t--) {||| 22 long long n;||| 23 string str1, str2;||| 24 cin >> n;||| 25 cin >> str1 >> str2;||| 26 long long a1 = solve(n, str1, str2);||| 27 long long ind = -1;||| 28 for (long long i = 0; i < n; i++) {||| 29 if (str1[i] == '1' && str2[i] == '1') {||| 30 ind = i;||| 31 break;||| 32 }||| 33 }||| 34 long long a2 = -1;||| 35 string temp = str1;||| 36 if (ind != -1) {||| 37 for (long long i = 0; i < n; i++) {||| 38 if (str1[i] == '1' && i != ind)||| 39 str1[i] = '0';||| 40 else if (str1[i] == '0')||| 41 str1[i] = '1';||| 42 }||| 43 a2 = solve(n, str1, str2);||| 44 }||| 45 long long a3 = -1;||| 46 str1 = temp;||| 47 long long ind2 = -1;||| 48 for (long long i = 0; i < n; i++) {||| 49 if (str1[i] == '1' && str2[i] == '0') {||| 50 ind2 = i;||| 51 break;||| 52 }||| 53 }||| 54 if (ind2 != -1) {||| 55 for (long long i = 0; i < n; i++) {||| 56 if (str1[i] == '1' && i != ind)||| 57 str1[i] = '0';||| 58 else if (str1[i] == '0')||| 59 str1[i] = '1';||| 60 }||| 61 a3 = solve(n, str1, str2);||| 62 }||| 63 if (a1 == -1 && a2 == -1 && a3 == -1) {||| 64 cout << ""-1"" << endl;||| 65 } else {||| 66 if (a1 == -1 && a2 == -1)||| 67 cout << (a3 + 1) << endl;||| 68 else if (a1 == -1 && a3 == -1)||| 69 cout << (a2 + 1) << endl;||| 70 else if (a2 == -1 && a3 == -1)||| 71 cout << a1 << endl;||| 72 else if (a1 == -1)||| 73 cout << min(a2 + 1, a3 + 1) << endl;||| 74 else if (a2 == -1)||| 75 cout << min(a1, a3 + 1) << endl;||| 76 else if (a3 == -1)||| 77 cout << min(a1, a2 + 1) << endl;||| 78 else {||| 79 long long b = min(a2 + 1, a3 + 1);||| 80 long long ans = min(b, a1);||| 81 cout << ans << endl;||| 82 }||| 83 }||| 84 }||| 85 return 0;||| 86 }||| "	56 if (str1[i] == '1' && i != ind2)
123	196	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using vll = vector<ll>;||| 5 const ll S = 2e5 + 10;||| 6 vector<ll> g[S];||| 7 vector<ll> c;||| 8 ll dfs(ll u, ll p) {||| 9 ll ret = u;||| 10 for (ll it : g[u]) {||| 11 if (it != p) {||| 12 ll x = dfs(it, u);||| 13 if (c[x] > c[ret]) ret = x;||| 14 }||| 15 }||| 16 c[ret]++;||| 17 return ret;||| 18 }||| 19 ll f(ll x) { return x / 2 * (x - x / 2); }||| 20 signed main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(0);||| 23 ll n, k;||| 24 cin >> n >> k;||| 25 c.assign(n, 0);||| 26 for (ll i = 0; i < n - 1; i++) {||| 27 ll u, v;||| 28 cin >> u >> v;||| 29 u--;||| 30 v--;||| 31 g[u].push_back(v);||| 32 g[v].push_back(u);||| 33 }||| 34 dfs(0, 0);||| 35 sort(c.begin(), c.end(), greater<ll>());||| 36 c.erase(lower_bound(c.begin(), c.end(), 0, greater<ll>()), c.end());||| 37 ll ans = 0;||| 38 ll cs = c.size();||| 39 if (k >= cs) {||| 40 if (cs > n - cs)||| 41 ans = cs * (n - cs);||| 42 else if (k <= n - k)||| 43 ans = k * (n - k);||| 44 else||| 45 ans = f(n);||| 46 } else {||| 47 ll w = 0;||| 48 for (ll i = 0; i < k; i++) {||| 49 w += c[i] - 1;||| 50 }||| 51 ll b = n - w - k;||| 52 if (b > k) {||| 53 b -= k;||| 54 if (w >= b)||| 55 ans = -w * b;||| 56 else||| 57 ans = -f(w + b);||| 58 } else {||| 59 ans = (k - b) * w;||| 60 }||| 61 }||| 62 cout << ans << '\n';||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using vll = vector<ll>;||| 5 const ll S = 2e5 + 10;||| 6 vector<ll> g[S];||| 7 vector<ll> c;||| 8 ll dfs(ll u, ll p) {||| 9 ll ret = u;||| 10 for (ll it : g[u]) {||| 11 if (it != p) {||| 12 ll x = dfs(it, u);||| 13 if (c[x] > c[ret]) ret = x;||| 14 }||| 15 }||| 16 c[ret]++;||| 17 return ret;||| 18 }||| 19 ll f(ll x) { return x / 2 * (x - x / 2); }||| 20 signed main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(0);||| 23 ll n, k;||| 24 cin >> n >> k;||| 25 c.assign(n, 0);||| 26 for (ll i = 0; i < n - 1; i++) {||| 27 ll u, v;||| 28 cin >> u >> v;||| 29 u--;||| 30 v--;||| 31 g[u].push_back(v);||| 32 g[v].push_back(u);||| 33 }||| 34 dfs(0, 0);||| 35 sort(c.begin(), c.end(), greater<ll>());||| 36 c.erase(lower_bound(c.begin(), c.end(), 0, greater<ll>()), c.end());||| 37 ll ans = 0;||| 38 ll cs = c.size();||| 39 if (k >= cs) {||| 40 if (cs > n - cs)||| 41 ans = cs * (n - cs);||| 42 else if (k >= n - k)||| 43 ans = k * (n - k);||| 44 else||| 45 ans = f(n);||| 46 } else {||| 47 ll w = 0;||| 48 for (ll i = 0; i < k; i++) {||| 49 w += c[i] - 1;||| 50 }||| 51 ll b = n - w - k;||| 52 if (b > k) {||| 53 b -= k;||| 54 if (w >= b)||| 55 ans = -w * b;||| 56 else||| 57 ans = -f(w + b);||| 58 } else {||| 59 ans = (k - b) * w;||| 60 }||| 61 }||| 62 cout << ans << '\n';||| 63 return 0;||| 64 }||| 	42 else if (k <= n - k)
123	121	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 vector<int> g[nax];||| 6 int n, k;||| 7 int lvl[nax], tin[nax], tout[nax];||| 8 int cnt = 0;||| 9 int timer = 0;||| 10 int ver[nax];||| 11 int seen[nax];||| 12 int par[nax];||| 13 int vr[nax];||| 14 vector<pair<int, int>> vec;||| 15 void dfs(int v, int p = -1) {||| 16 if (p != -1) lvl[v] = lvl[p] + 1;||| 17 vec.push_back({lvl[v], v});||| 18 par[v] = p;||| 19 if (g[v].size() == 1 && p != -1) cnt++;||| 20 if (p != -1) lvl[v] = lvl[p] + 1;||| 21 for (auto to : g[v]) {||| 22 if (to == p) continue;||| 23 dfs(to, v);||| 24 }||| 25 }||| 26 long long f(int red, int blue) {||| 27 int w = n - red - blue;||| 28 return w * 1ll * (red - blue);||| 29 }||| 30 int main() {||| 31 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 32 cin >> n >> k;||| 33 for (int i = 0; i < n - 1; i++) {||| 34 int a, b;||| 35 cin >> a >> b;||| 36 --a, --b;||| 37 g[a].push_back(b);||| 38 g[b].push_back(a);||| 39 }||| 40 dfs(0);||| 41 sort(vec.begin(), vec.end(), greater<pair<int, int>>());||| 42 vector<int> vv;||| 43 for (int i = 0; i < n; i++) {||| 44 int cur = vec[i].second;||| 45 int cc = 0;||| 46 while (cur != -1 && !seen[cur]) {||| 47 cc++;||| 48 seen[cur] = 1;||| 49 cur = par[cur];||| 50 }||| 51 vv.push_back(cc);||| 52 }||| 53 sort(vv.begin(), vv.end(), greater<int>());||| 54 int blue = n;||| 55 long long best_ans = -(long long)1e18;||| 56 for (int i = 0; i < min(k, cnt); i++) {||| 57 blue -= vv[i];||| 58 int l = 0, r = blue;||| 59 for (int it = 0; it < 40; it++) {||| 60 int mid = (l + r) / 2;||| 61 if (f(i + 1, mid + 1) <= f(i + 1, mid))||| 62 l = mid;||| 63 else||| 64 r = mid;||| 65 }||| 66 if ((f(i + 1, r) > f(i + 1, r + 1) && r + 1 < blue) ||||| 67 (f(i + 1, r - 1) < f(i + 1, r) && r - 1 >= 0))||| 68 throw 47;||| 69 best_ans = max(best_ans, f(i + 1, r));||| 70 }||| 71 while (cnt <= k) {||| 72 best_ans = max(best_ans, (n - cnt) * 1ll * cnt);||| 73 cnt++;||| 74 }||| 75 cout << best_ans << '\n';||| 76 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 vector<int> g[nax];||| 6 int n, k;||| 7 int lvl[nax], tin[nax], tout[nax];||| 8 int cnt = 0;||| 9 int timer = 0;||| 10 int ver[nax];||| 11 int seen[nax];||| 12 int par[nax];||| 13 int vr[nax];||| 14 vector<pair<int, int>> vec;||| 15 void dfs(int v, int p = -1) {||| 16 if (p != -1) lvl[v] = lvl[p] + 1;||| 17 vec.push_back({lvl[v], v});||| 18 par[v] = p;||| 19 if (g[v].size() == 1 && p != -1) cnt++;||| 20 if (p != -1) lvl[v] = lvl[p] + 1;||| 21 for (auto to : g[v]) {||| 22 if (to == p) continue;||| 23 dfs(to, v);||| 24 }||| 25 }||| 26 long long f(int red, int blue) {||| 27 int w = n - red - blue;||| 28 return w * 1ll * (red - blue);||| 29 }||| 30 int main() {||| 31 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 32 cin >> n >> k;||| 33 for (int i = 0; i < n - 1; i++) {||| 34 int a, b;||| 35 cin >> a >> b;||| 36 --a, --b;||| 37 g[a].push_back(b);||| 38 g[b].push_back(a);||| 39 }||| 40 dfs(0);||| 41 sort(vec.begin(), vec.end(), greater<pair<int, int>>());||| 42 vector<int> vv;||| 43 for (int i = 0; i < n; i++) {||| 44 int cur = vec[i].second;||| 45 int cc = 0;||| 46 while (cur != -1 && !seen[cur]) {||| 47 cc++;||| 48 seen[cur] = 1;||| 49 cur = par[cur];||| 50 }||| 51 vv.push_back(cc);||| 52 }||| 53 sort(vv.begin(), vv.end(), greater<int>());||| 54 int blue = n;||| 55 long long best_ans = -(int)1e18;||| 56 for (int i = 0; i < min(k, cnt); i++) {||| 57 blue -= vv[i];||| 58 int l = 0, r = blue;||| 59 for (int it = 0; it < 40; it++) {||| 60 int mid = (l + r) / 2;||| 61 if (f(i + 1, mid + 1) <= f(i + 1, mid))||| 62 l = mid;||| 63 else||| 64 r = mid;||| 65 }||| 66 if ((f(i + 1, r) > f(i + 1, r + 1) && r + 1 < blue) ||||| 67 (f(i + 1, r - 1) < f(i + 1, r) && r - 1 >= 0))||| 68 throw 47;||| 69 best_ans = max(best_ans, f(i + 1, r));||| 70 }||| 71 while (cnt <= k) {||| 72 best_ans = max(best_ans, (n - cnt) * 1ll * cnt);||| 73 cnt++;||| 74 }||| 75 cout << best_ans << '\n';||| 76 }||| 	55 long long best_ans = -(long long)1e18;
123	36	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long INF = 1e14;||| 4 int n, k;||| 5 vector<int> L[200005];||| 6 int uz[200005];||| 7 int tata[200005];||| 8 vector<pair<int, int>> frunze;||| 9 void DFS(int x, int d = 0) {||| 10 uz[x] = 1;||| 11 for (int i : L[x])||| 12 if (!uz[i]) {||| 13 tata[i] = x;||| 14 DFS(i, d + 1);||| 15 }||| 16 if (L[x].size() == 1 && x != 1) frunze.push_back({d, x});||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(false);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 cin >> n >> k;||| 23 for (int i = 1; i < n; i++) {||| 24 int x, y;||| 25 cin >> x >> y;||| 26 L[x].push_back(y);||| 27 L[y].push_back(x);||| 28 }||| 29 DFS(1);||| 30 if (k >= frunze.size()) {||| 31 long long maxim = 0;||| 32 for (int i = frunze.size(); i <= k; i++)||| 33 maxim = max(maxim, 1ll * (n - i) * i);||| 34 cout << maxim << '\n';||| 35 } else {||| 36 sort(frunze.begin(), frunze.end(), greater<pair<int, int>>());||| 37 vector<int> moves;||| 38 for (auto fr : frunze) {||| 39 int scor = 0;||| 40 int aux = fr.second;||| 41 while (aux && uz[aux]) {||| 42 uz[aux] = 0;||| 43 scor++;||| 44 aux = tata[aux];||| 45 }||| 46 moves.push_back(scor);||| 47 }||| 48 sort(moves.begin(), moves.end(), greater<int>());||| 49 int nr = 0;||| 50 for (int i = 0; i < k; i++) nr += moves[i];||| 51 long long minim = INF;||| 52 for (int i = 0; i <= n - nr; i++)||| 53 minim = min(minim, 1ll * (n - k - i) * (k - i));||| 54 cout << minim << '\n';||| 55 }||| 56 return 0;||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long INF = 1e14;||| 4 int n, k;||| 5 vector<int> L[200005];||| 6 int uz[200005];||| 7 int tata[200005];||| 8 vector<pair<int, int>> frunze;||| 9 void DFS(int x, int d = 0) {||| 10 uz[x] = 1;||| 11 for (int i : L[x])||| 12 if (!uz[i]) {||| 13 tata[i] = x;||| 14 DFS(i, d + 1);||| 15 }||| 16 if (L[x].size() == 1 && x != 1) frunze.push_back({d, x});||| 17 }||| 18 int main() {||| 19 ios::sync_with_stdio(false);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 cin >> n >> k;||| 23 for (int i = 1; i < n; i++) {||| 24 int x, y;||| 25 cin >> x >> y;||| 26 L[x].push_back(y);||| 27 L[y].push_back(x);||| 28 }||| 29 DFS(1);||| 30 if (k >= frunze.size()) {||| 31 long long maxim = 0;||| 32 for (int i = frunze.size(); i <= n; i++)||| 33 maxim = max(maxim, 1ll * (n - i) * i);||| 34 cout << maxim << '\n';||| 35 } else {||| 36 sort(frunze.begin(), frunze.end(), greater<pair<int, int>>());||| 37 vector<int> moves;||| 38 for (auto fr : frunze) {||| 39 int scor = 0;||| 40 int aux = fr.second;||| 41 while (aux && uz[aux]) {||| 42 uz[aux] = 0;||| 43 scor++;||| 44 aux = tata[aux];||| 45 }||| 46 moves.push_back(scor);||| 47 }||| 48 sort(moves.begin(), moves.end(), greater<int>());||| 49 int nr = 0;||| 50 for (int i = 0; i < k; i++) nr += moves[i];||| 51 long long minim = INF;||| 52 for (int i = 0; i <= n - nr; i++)||| 53 minim = min(minim, 1ll * (n - k - i) * (k - i));||| 54 cout << minim << '\n';||| 55 }||| 56 return 0;||| 57 }||| 	32 for (int i = frunze.size(); i <= k; i++)
124	1	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long P = 1e9 + 7;||| 4 const int N = 2005;||| 5 const long long INF = (1ll << 62) - 1;||| 6 const double pi = acos(-1);||| 7 mt19937 rng(time(0));||| 8 int T, n;||| 9 int f[N][N * 2], g[N][N * 2];||| 10 char s[N], t[N];||| 11 void revbit(char s[]) {||| 12 for (int i = 2; i <= n; i += 2)||| 13 if (s[i] != '?') s[i] = '0' + '1' - s[i];||| 14 }||| 15 void calc(int f[][N * 2], char s[], char t[]) {||| 16 f[0][n + 1] = 1;||| 17 for (int i = (1); i <= (n); ++i)||| 18 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j) {||| 19 f[i][j] = ((s[i] != '1' && t[i] != '1') ? f[i - 1][j] : 0) % P;||| 20 (f[i][j] += (s[i] != '0' && t[i] != '0') ? f[i - 1][j] : 0) %= P;||| 21 (f[i][j] += (s[i] != '0' && t[i] != '1') ? f[i - 1][j - 1] : 0) %= P;||| 22 (f[i][j] += (s[i] != '1' && t[i] != '0') ? f[i - 1][j + 1] : 0) %= P;||| 23 }||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 27 cin >> T;||| 28 while (T--) {||| 29 cin >> n >> (s + 1) >> (t + 1);||| 30 revbit(s), revbit(t);||| 31 calc(f, s, t);||| 32 reverse(s + 1, s + n + 1), reverse(t + 1, t + n + 1);||| 33 calc(g, s, t);||| 34 int ans = 0;||| 35 for (int i = (1); i <= (n - 1); ++i)||| 36 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j)||| 37 ans = (1ll * abs(n + 1 - j) * f[i][j] % P * g[n - i][n + n + 2 - j] +||| 38 ans) %||| 39 P;||| 40 cout << ans << endl;||| 41 for (int i = (0); i <= (n); ++i)||| 42 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j) f[i][j] = g[i][j] = 0;||| 43 }||| 44 return 0;||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long P = 1e9 + 7;||| 4 const int N = 2005;||| 5 const long long INF = (1ll << 62) - 1;||| 6 const double pi = acos(-1);||| 7 mt19937 rng(time(0));||| 8 int T, n;||| 9 int f[N][N * 2], g[N][N * 2];||| 10 char s[N], t[N];||| 11 void revbit(char s[]) {||| 12 for (int i = 2; i <= n; i += 2)||| 13 if (s[i] != '?') s[i] = '0' + '1' - s[i];||| 14 }||| 15 void calc(int f[][N * 2], char s[], char t[]) {||| 16 f[0][n + 1] = 1;||| 17 for (int i = (1); i <= (n); ++i)||| 18 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j) {||| 19 f[i][j] = ((s[i] != '1' && t[i] != '1') ? f[i - 1][j] : 0) % P;||| 20 (f[i][j] += (s[i] != '0' && t[i] != '0') ? f[i - 1][j] : 0) %= P;||| 21 (f[i][j] += (s[i] != '0' && t[i] != '1') ? f[i - 1][j - 1] : 0) %= P;||| 22 (f[i][j] += (s[i] != '1' && t[i] != '0') ? f[i - 1][j + 1] : 0) %= P;||| 23 }||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 27 cin >> T;||| 28 while (T--) {||| 29 cin >> n >> (s + 1) >> (t + 1);||| 30 revbit(s), revbit(t);||| 31 calc(f, s, t);||| 32 reverse(s + 1, s + n + 1), reverse(t + 1, t + n + 1);||| 33 calc(g, s, t);||| 34 int ans = 0;||| 35 for (int i = (1); i <= (n - 1); ++i)||| 36 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j)||| 37 ans = (1ll * abs(n + 1 - j) * f[i][j] * g[n - i][n + n + 2 - j] + ans) %||| 38 P;||| 39 cout << ans << endl;||| 40 for (int i = (0); i <= (n); ++i)||| 41 for (int j = (n + 1 - i); j <= (n + 1 + i); ++j) f[i][j] = g[i][j] = 0;||| 42 }||| 43 return 0;||| 44 }||| 	37 ans = (1ll * abs(n + 1 - j) * f[i][j] % P * g[n - i][n + n + 2 - j] +
124	10	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 7;||| 4 const long long INF = 1e18;||| 5 const int mod = 1e9 + 7;||| 6 inline int add(int x, int y) { return x + y < mod ? x + y : x + y - mod; }||| 7 inline int sub(int x, int y) { return x < y ? x + mod - y : x - y; }||| 8 inline int mul(int x, int y) { return (int)((long long)x * y % mod); }||| 9 inline int pw(int x, int y) {||| 10 int r = 1;||| 11 while (y > 0) {||| 12 if (y % 2 == 1) r = mul(r, x);||| 13 x = mul(x, x);||| 14 y /= 2;||| 15 }||| 16 return r;||| 17 }||| 18 inline int inv(int x) { return pw(x, mod - 2); }||| 19 inline int divi(int x, int y) { return mul(x, inv(y)); }||| 20 int dp[2010][4010];||| 21 int ct[2010][4010];||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int tcc;||| 26 cin >> tcc;||| 27 while (tcc-- > 0) {||| 28 int n;||| 29 cin >> n;||| 30 string s, t;||| 31 cin >> s;||| 32 cin >> t;||| 33 vector<int> v1(n), v2(n);||| 34 for (int i = 0; i < n; i++) {||| 35 if (s[i] == '?')||| 36 v1[i] = -1;||| 37 else||| 38 v1[i] = s[i] == '0' ? 0 : 1;||| 39 }||| 40 for (int i = 0; i < n; i++) {||| 41 if (t[i] == '?')||| 42 v2[i] = -1;||| 43 else||| 44 v2[i] = t[i] == '0' ? 0 : 1;||| 45 }||| 46 const int mid = 2005;||| 47 dp[0][mid] = 0;||| 48 ct[0][mid] = 1;||| 49 for (int i = 0; i < n; i++) {||| 50 int cr = i;||| 51 int nx = i + 1;||| 52 int a = v1[i], b = v2[i];||| 53 for (int j = -n; j <= n; j++) {||| 54 for (int x = 0; x < 2; x++) {||| 55 if (a != -1 && a != x) continue;||| 56 for (int y = 0; y < 2; y++) {||| 57 if (b != -1 && b != y) continue;||| 58 int nxj = (x - y) - j;||| 59 ct[nx][mid + nxj] = add(ct[nx][mid + nxj], ct[cr][mid + j]);||| 60 dp[nx][mid + nxj] =||| 61 add(dp[nx][mid + nxj],||| 62 add(dp[cr][mid + j], mul(ct[cr][mid + j], abs(j))));||| 63 }||| 64 }||| 65 }||| 66 }||| 67 cout << dp[n][mid] << '\n';||| 68 for (int i = 0; i <= n; i++)||| 69 for (int j = -n; j <= n; j++) dp[i][mid + j] = ct[i][mid + j] = 0;||| 70 }||| 71 return 0;||| 72 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 7;||| 4 const long long INF = 1e18;||| 5 const int mod = 1e9 + 7;||| 6 inline int add(int x, int y) { return x + y < mod ? x + y : x + y - mod; }||| 7 inline int sub(int x, int y) { return x < y ? x + mod - y : x - y; }||| 8 inline int mul(int x, int y) { return (int)((long long)x * y % mod); }||| 9 inline int pw(int x, int y) {||| 10 int r = 1;||| 11 while (y > 0) {||| 12 if (y % 2 == 1) r = mul(r, x);||| 13 x = mul(x, x);||| 14 y /= 2;||| 15 }||| 16 return r;||| 17 }||| 18 inline int inv(int x) { return pw(x, mod - 2); }||| 19 inline int divi(int x, int y) { return mul(x, inv(y)); }||| 20 int dp[2010][4010];||| 21 int ct[2010][4010];||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int tcc;||| 26 cin >> tcc;||| 27 while (tcc-- > 0) {||| 28 int n;||| 29 cin >> n;||| 30 string s, t;||| 31 cin >> s;||| 32 cin >> t;||| 33 vector<int> v1(n), v2(n);||| 34 for (int i = 0; i < n; i++) {||| 35 if (s[i] == '?')||| 36 v1[i] = -1;||| 37 else||| 38 v1[i] = s[i] == '0' ? 0 : 1;||| 39 }||| 40 for (int i = 0; i < n; i++) {||| 41 if (t[i] == '?')||| 42 v2[i] = -1;||| 43 else||| 44 v2[i] = t[i] == '0' ? 0 : 1;||| 45 }||| 46 const int mid = 2005;||| 47 dp[0][mid] = 0;||| 48 ct[0][mid] = 1;||| 49 for (int i = 0; i < n; i++) {||| 50 int cr = i;||| 51 int nx = i + 1;||| 52 int a = v1[i], b = v2[i];||| 53 for (int j = -n; j <= n; j++) {||| 54 for (int x = 0; x < 2; x++) {||| 55 if (a != -1 && a != x) continue;||| 56 for (int y = 0; y < 2; y++) {||| 57 if (b != -1 && b != y) continue;||| 58 int nxj = (x - y) - j;||| 59 ct[nx][mid + nxj] = add(ct[nx][mid + nxj], ct[cr][mid + j]);||| 60 dp[nx][mid + nxj] =||| 61 add(dp[nx][mid + nxj],||| 62 add(dp[cr][mid + j], mul(ct[cr][mid + j], abs(j))));||| 63 }||| 64 }||| 65 }||| 66 }||| 67 cout << dp[n][mid] << '\n';||| 68 for (int i = 0; i <= n; i++)||| 69 for (int j = -n; j < n; j++) dp[i][mid + j] = ct[i][mid + j] = 0;||| 70 }||| 71 return 0;||| 72 }||| 	69 for (int j = -n; j <= n; j++) dp[i][mid + j] = ct[i][mid + j] = 0;
124	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 4020;||| 4 const int maxm = 4020;||| 5 const int N = 2002;||| 6 const int mod = 1e9 + 7;||| 7 int n;||| 8 char s[maxn], t[maxn];||| 9 int pre[maxn][maxn], suf[maxn][maxn];||| 10 int id(char x, int y) { return (x == y + '0' || x == '?'); }||| 11 int main() {||| 12 int T;||| 13 scanf(""%d"", &T);||| 14 while (T--) {||| 15 scanf(""%d"", &n);||| 16 scanf(""%s"", s + 1);||| 17 scanf(""%s"", t + 1);||| 18 for (int i = 0; i <= n + 1; i++) {||| 19 for (int j = 0; j <= 2 * N + 5; j++) {||| 20 pre[i][j] = suf[i][j] = 0;||| 21 }||| 22 }||| 23 pre[0][N] = 1;||| 24 for (int i = 1; i <= n; i++) {||| 25 for (int j = -n; j <= n; j++) {||| 26 for (int x = 0; x < 2; x++) {||| 27 for (int y = 0; y < 2; y++) {||| 28 if (id(s[i], x ^ (i & 1)) && id(t[i], y ^ (i & 1))) {||| 29 (pre[i][j + x - y + N] += pre[i - 1][j + N]) %= mod;||| 30 }||| 31 }||| 32 }||| 33 }||| 34 }||| 35 suf[n + 1][N] = 1;||| 36 for (int i = n; i >= 1; i--) {||| 37 for (int j = -n; j <= n; j++) {||| 38 for (int x = 0; x < 2; x++) {||| 39 for (int y = 0; y < 2; y++) {||| 40 if (id(s[i], x ^ (i & 1)) && id(t[i], y ^ (i & 1))) {||| 41 (suf[i][j + x - y + N] += suf[i + 1][j + N]) %= mod;||| 42 }||| 43 }||| 44 }||| 45 }||| 46 }||| 47 int ans = 0;||| 48 for (int i = 1; i <= n; i++) {||| 49 for (int j = -n; j <= n; j++) {||| 50 int tmp = 1;||| 51 tmp = 1ll * tmp * pre[i][j + N] % mod * suf[i + 1][-j + N] % mod *||| 52 abs(j) % mod;||| 53 ans = (ans + tmp) % mod;||| 54 }||| 55 }||| 56 printf(""%d\n"", ans);||| 57 }||| 58 return 0;||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 4020;||| 4 const int maxm = 4020;||| 5 const int N = 2002;||| 6 const int mod = 1e9 + 7;||| 7 int n;||| 8 char s[maxn], t[maxn];||| 9 int pre[maxn][maxn], suf[maxn][maxn];||| 10 int id(char x, int y) { return (x == y + '0' || x == '?'); }||| 11 int main() {||| 12 int T;||| 13 scanf(""%d"", &T);||| 14 while (T--) {||| 15 scanf(""%d"", &n);||| 16 scanf(""%s"", s + 1);||| 17 scanf(""%s"", t + 1);||| 18 for (int i = 0; i <= n + 1; i++) {||| 19 for (int j = 0; j <= 2 * N + 5; j++) {||| 20 pre[i][j] = suf[i][j] = 0;||| 21 }||| 22 }||| 23 pre[0][N] = 1;||| 24 for (int i = 1; i <= n; i++) {||| 25 for (int j = -n; j <= n; j++) {||| 26 for (int x = 0; x < 2; x++) {||| 27 for (int y = 0; y < 2; y++) {||| 28 if (id(s[i], x ^ (i & 1)) && id(t[i], y ^ (i & 1))) {||| 29 (pre[i][j + x - y + N] += pre[i - 1][j + N]) %= mod;||| 30 }||| 31 }||| 32 }||| 33 }||| 34 }||| 35 suf[n + 1][N] = 1;||| 36 for (int i = n; i >= 1; i--) {||| 37 for (int j = -n; j <= n; j++) {||| 38 for (int x = 0; x < 2; x++) {||| 39 for (int y = 0; y < 2; y++) {||| 40 if (id(s[i], x ^ (i & 1)) && id(t[i], y ^ (i & 1))) {||| 41 (suf[i][j + x - y + N] += suf[i + 1][j + N]) %= mod;||| 42 }||| 43 }||| 44 }||| 45 }||| 46 }||| 47 int ans = 0;||| 48 for (int i = 1; i <= n; i++) {||| 49 for (int j = -n; j <= n; j++) {||| 50 int tmp = 1;||| 51 tmp =||| 52 tmp * pre[i][j + N] % mod * suf[i + 1][-j + N] % mod * abs(j) % mod;||| 53 ans = (ans + tmp) % mod;||| 54 }||| 55 }||| 56 printf(""%d\n"", ans);||| 57 }||| 58 return 0;||| 59 }||| "	51 tmp = 1ll * tmp * pre[i][j + N] % mod * suf[i + 1][-j + N] % mod *
124	35	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int MaxN = 2000 + 5, Mod = 1000000007;||| 4 inline void SimpleMod(int &wei) { (wei >= Mod) && (wei -= Mod); }||| 5 int F[2][MaxN << 1], G[2][MaxN << 1];||| 6 char a[MaxN], b[MaxN];||| 7 int main() {||| 8 ios::sync_with_stdio(false), cin.tie(nullptr);||| 9 int T;||| 10 cin >> T;||| 11 int n;||| 12 while (T--) {||| 13 cin >> n >> (a + 1) >> (b + 1);||| 14 for (register int i = (1); i <= (n); ++i) {||| 15 if ((i & 1) || (a[i] == '?')) continue;||| 16 a[i] = ((a[i] == '0') ? '1' : '0');||| 17 }||| 18 for (register int i = (1); i <= (n); ++i) {||| 19 if ((i & 1) || (b[i] == '?')) continue;||| 20 b[i] = ((b[i] == '0') ? '1' : '0');||| 21 }||| 22 bool Cur = false, Last = true;||| 23 for (register int i = (0); i <= (n << 1); ++i) F[Cur][i] = G[Cur][i] = 0;||| 24 G[Cur][n] = 1;||| 25 for (register int i = (1); i <= (n); ++i) {||| 26 swap(Cur, Last);||| 27 for (register int j = (0); j <= (n << 1); ++j) F[Cur][j] = G[Cur][j] = 0;||| 28 for (register int j = (0); j <= (n << 1); ++j) {||| 29 if (!(F[Last][j] || G[Last][j])) continue;||| 30 for (register char A = '0'; A <= '1'; ++A) {||| 31 if (!((a[i] == '?') || (a[i] == A))) continue;||| 32 for (register char B = '0'; B <= '1'; ++B) {||| 33 if (!((b[i] == '?') || (b[i] == B))) continue;||| 34 const int Delta = ((A == '1') - (B == '1'));||| 35 SimpleMod(G[Cur][j + Delta] += G[Last][j]);||| 36 F[Cur][j + Delta] =||| 37 (F[Cur][j + Delta] + (F[Last][j] + ((long long)G[Last][j] *||| 38 abs((j + Delta) - n)))) %||| 39 Mod;||| 40 }||| 41 }||| 42 }||| 43 }||| 44 cout << F[Cur][n] << '\n';||| 45 }||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int MaxN = 2000 + 5, Mod = 1000000007;||| 4 inline void SimpleMod(int &wei) { (wei >= Mod) && (wei -= Mod); }||| 5 int F[2][MaxN << 1], G[2][MaxN << 1];||| 6 char a[MaxN], b[MaxN];||| 7 int main() {||| 8 ios::sync_with_stdio(false), cin.tie(nullptr);||| 9 int T;||| 10 cin >> T;||| 11 int n;||| 12 while (T--) {||| 13 cin >> n >> (a + 1) >> (b + 1);||| 14 for (register int i = (1); i <= (n); ++i) {||| 15 if ((i & 1) || (a[i] == '?')) continue;||| 16 a[i] = ((a[i] == '0') ? '1' : '0');||| 17 }||| 18 for (register int i = (1); i <= (n); ++i) {||| 19 if ((i & 1) || (b[i] == '?')) continue;||| 20 b[i] = ((b[i] == '0') ? '1' : '0');||| 21 }||| 22 bool Cur = false, Last = true;||| 23 for (register int i = (0); i <= (n << 1); ++i) F[Cur][i] = G[Cur][i] = 0;||| 24 G[Cur][n] = 1;||| 25 for (register int i = (1); i <= (n); ++i) {||| 26 swap(Cur, Last);||| 27 for (register int j = (0); j <= (n << 1); ++j) F[Cur][j] = G[Cur][j] = 0;||| 28 for (register int j = (0); j <= (n << 1); ++j) {||| 29 if (!(F[Last][j] || G[Last][j])) continue;||| 30 for (register char A = '0'; A <= '1'; ++A) {||| 31 if (!((a[i] == '?') || (a[i] == A))) continue;||| 32 for (register char B = '0'; B <= '1'; ++B) {||| 33 if (!((b[i] == '?') || (b[i] == B))) continue;||| 34 const int Delta = ((A == '1') - (B == '1'));||| 35 SimpleMod(G[Cur][j + Delta] += G[Last][j]);||| 36 F[Cur][j + Delta] =||| 37 (F[Cur][j + Delta] +||| 38 (F[Last][j] + ((long long)G[Last][j] * abs((j + Delta) - n))));||| 39 }||| 40 }||| 41 }||| 42 }||| 43 cout << F[Cur][n] << '\n';||| 44 }||| 45 return 0;||| 46 }||| 	37 (F[Cur][j + Delta] + (F[Last][j] + ((long long)G[Last][j] *
124	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class T>||| 5 void read(T &x) {||| 6 char ch;||| 7 x = 0;||| 8 int f = 1;||| 9 while (isspace(ch = getchar_unlocked()))||| 10 ;||| 11 if (ch == '-') ch = getchar_unlocked(), f = -1;||| 12 do x = x * 10 + (ch - '0');||| 13 while (isdigit(ch = getchar_unlocked()));||| 14 x *= f;||| 15 }||| 16 template <class T, class... A>||| 17 void read(T &x, A &...args) {||| 18 read(x);||| 19 read(args...);||| 20 }||| 21 const int N = 2005;||| 22 const int M = 1000000007;||| 23 char s[N], t[N];||| 24 int way[N][N * 2], sum[N][N * 2];||| 25 void inc(int &x, int y) {||| 26 if ((x += y) >= M) x -= M;||| 27 }||| 28 int main() {||| 29 int T;||| 30 read(T);||| 31 while (T--) {||| 32 int n;||| 33 read(n);||| 34 memset(way, 0, (n + 1) * sizeof(way[0]));||| 35 memset(sum, 0, (n + 1) * sizeof(sum[0]));||| 36 scanf(""%s%s"", s, t);||| 37 for (int i = 1; i < n; i += 2) {||| 38 if (s[i] != '?') s[i] ^= 1;||| 39 if (t[i] != '?') t[i] ^= 1;||| 40 }||| 41 way[0][N] = 1;||| 42 for (int i = 0; i < n; ++i) {||| 43 vector<int> cs, ct;||| 44 if (s[i] == '0')||| 45 cs = {0};||| 46 else if (s[i] == '1')||| 47 cs = {1};||| 48 else||| 49 cs = {0, 1};||| 50 if (t[i] == '0')||| 51 ct = {0};||| 52 else if (t[i] == '1')||| 53 ct = {-1};||| 54 else||| 55 ct = {0, -1};||| 56 for (int x : cs)||| 57 for (int y : ct)||| 58 for (int j = N - i; j <= N + i; ++j) {||| 59 inc(way[i + 1][j + x + y], way[i][j]);||| 60 sum[i + 1][j + x + y] = (sum[i + 1][j + x + y] + sum[i][j] +||| 61 (ll)abs(j - N + x + y) * way[i][j]) %||| 62 M;||| 63 }||| 64 }||| 65 printf(""%d\n"", sum[n][N]);||| 66 }||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class T>||| 5 void read(T &x) {||| 6 char ch;||| 7 x = 0;||| 8 int f = 1;||| 9 while (isspace(ch = getchar_unlocked()))||| 10 ;||| 11 if (ch == '-') ch = getchar_unlocked(), f = -1;||| 12 do x = x * 10 + (ch - '0');||| 13 while (isdigit(ch = getchar_unlocked()));||| 14 x *= f;||| 15 }||| 16 template <class T, class... A>||| 17 void read(T &x, A &...args) {||| 18 read(x);||| 19 read(args...);||| 20 }||| 21 const int N = 2005;||| 22 const int M = 1000000007;||| 23 char s[N], t[N];||| 24 int way[N][N * 2], sum[N][N * 2];||| 25 void inc(int &x, int y) {||| 26 if ((x += y) >= M) x -= M;||| 27 }||| 28 int main() {||| 29 int T;||| 30 read(T);||| 31 while (T--) {||| 32 int n;||| 33 read(n);||| 34 memset(way, 0, (n + 1) * sizeof(way[0]));||| 35 memset(sum, 0, (n + 1) * sizeof(sum[0]));||| 36 scanf(""%s%s"", s, t);||| 37 for (int i = 1; i < n; i += 2) {||| 38 if (s[i] != '?') s[i] ^= 1;||| 39 if (t[i] != '?') t[i] ^= 1;||| 40 }||| 41 way[0][N] = 1;||| 42 for (int i = 0; i < n; ++i) {||| 43 vector<int> cs, ct;||| 44 if (s[i] == '0')||| 45 cs = {0};||| 46 else if (s[i] == '1')||| 47 cs = {1};||| 48 else||| 49 cs = {0, 1};||| 50 if (t[i] == '0')||| 51 ct = {0};||| 52 else if (t[i] == '1')||| 53 ct = {-1};||| 54 else||| 55 ct = {0, -1};||| 56 for (int x : cs)||| 57 for (int y : ct)||| 58 for (int j = N - i; j <= N + i; ++j) {||| 59 inc(way[i + 1][j + x + y], way[i][j]);||| 60 sum[i + 1][j + x + y] = (sum[i + 1][j + x + y] + sum[i][j] +||| 61 (ll)abs(j - N + x + y) * way[i][j]);||| 62 }||| 63 }||| 64 printf(""%d\n"", sum[n][N]);||| 65 }||| 66 return 0;||| 67 }||| "	61 (ll)abs(j - N + x + y) * way[i][j]) %
124	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2050, mod = (int)1e9 + 7;||| 4 int T;||| 5 int n;||| 6 char s[maxn], t[maxn];||| 7 int ans;||| 8 int pre[maxn][maxn * 2], suf[maxn][maxn * 2];||| 9 char flip(char c) { return c == '?' ? '?' : (c == '1' ? '0' : '1'); }||| 10 void Mod(int &x) { x %= mod; }||| 11 void Add(int &x, int y) {||| 12 x += y;||| 13 Mod(x);||| 14 }||| 15 void trans_pre(int i, int j, int ss, int tt) {||| 16 int jj = j - (ss - tt);||| 17 if (jj > 0) Add(pre[i][j], pre[i - 1][jj]);||| 18 }||| 19 void trans_suf(int i, int j, int ss, int tt) {||| 20 int jj = j - (ss - tt);||| 21 if (jj > 0) Add(suf[i][j], suf[i + 1][jj]);||| 22 }||| 23 int main() {||| 24 scanf(""%d"", &T);||| 25 while (T--) {||| 26 ans = 0;||| 27 scanf(""%d%s%s"", &n, s + 1, t + 1);||| 28 for (int i = 2; i <= n; i += 2) {||| 29 s[i] = flip(s[i]);||| 30 t[i] = flip(t[i]);||| 31 }||| 32 for (int j = 0; j <= 2 * n; j++) pre[0][j] = 0;||| 33 pre[0][n] = 1;||| 34 for (int i = 1; i <= n; i++)||| 35 for (int j = 0; j <= 2 * n; j++) {||| 36 pre[i][j] = 0;||| 37 if (s[i] == '?' && t[i] == '?') {||| 38 trans_pre(i, j, 0, 0);||| 39 trans_pre(i, j, 0, 1);||| 40 trans_pre(i, j, 1, 0);||| 41 trans_pre(i, j, 1, 1);||| 42 } else if (s[i] == '?') {||| 43 trans_pre(i, j, 0, t[i] - '0');||| 44 trans_pre(i, j, 1, t[i] - '0');||| 45 } else if (t[i] == '?') {||| 46 trans_pre(i, j, s[i] - '0', 0);||| 47 trans_pre(i, j, s[i] - '0', 1);||| 48 } else||| 49 trans_pre(i, j, s[i] - '0', t[i] - '0');||| 50 }||| 51 for (int j = 0; j <= 2 * n; j++) suf[n + 1][j] = 0;||| 52 suf[n + 1][n] = 1;||| 53 for (int i = n; i >= 1; i--)||| 54 for (int j = 0; j <= 2 * n; j++) {||| 55 suf[i][j] = 0;||| 56 if (s[i] == '?' && t[i] == '?') {||| 57 trans_suf(i, j, 0, 0);||| 58 trans_suf(i, j, 0, 1);||| 59 trans_suf(i, j, 1, 0);||| 60 trans_suf(i, j, 1, 1);||| 61 } else if (s[i] == '?') {||| 62 trans_suf(i, j, 0, t[i] - '0');||| 63 trans_suf(i, j, 1, t[i] - '0');||| 64 } else if (t[i] == '?') {||| 65 trans_suf(i, j, s[i] - '0', 0);||| 66 trans_suf(i, j, s[i] - '0', 1);||| 67 } else||| 68 trans_suf(i, j, s[i] - '0', t[i] - '0');||| 69 }||| 70 for (int i = 1; i <= n; i++)||| 71 for (int j = 0; j <= 2 * n; j++)||| 72 Add(ans,||| 73 1LL * pre[i][j] * suf[i + 1][2 * n - j] % mod * abs(j - n) % mod);||| 74 cout << ans << endl;||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2050, mod = (int)1e9 + 7;||| 4 int T;||| 5 int n;||| 6 char s[maxn], t[maxn];||| 7 int ans;||| 8 int pre[maxn][maxn * 2], suf[maxn][maxn * 2];||| 9 char flip(char c) { return c == '?' ? '?' : (c == '1' ? '0' : '1'); }||| 10 void Mod(int &x) { x %= mod; }||| 11 void Add(int &x, int y) {||| 12 x += y;||| 13 Mod(x);||| 14 }||| 15 void trans_pre(int i, int j, int ss, int tt) {||| 16 int jj = j - (ss - tt);||| 17 if (jj > 0) Add(pre[i][j], pre[i - 1][jj]);||| 18 }||| 19 void trans_suf(int i, int j, int ss, int tt) {||| 20 int jj = j - (ss - tt);||| 21 if (jj > 0) Add(suf[i][j], suf[i + 1][jj]);||| 22 }||| 23 int main() {||| 24 scanf(""%d"", &T);||| 25 while (T--) {||| 26 ans = 0;||| 27 scanf(""%d%s%s"", &n, s + 1, t + 1);||| 28 for (int i = 2; i <= n; i += 2) {||| 29 s[i] = flip(s[i]);||| 30 t[i] = flip(t[i]);||| 31 }||| 32 for (int j = 0; j <= 2 * n; j++) pre[0][j] = 0;||| 33 pre[0][n] = 1;||| 34 for (int i = 1; i <= n; i++)||| 35 for (int j = 0; j <= 2 * n; j++) {||| 36 pre[i][j] = 0;||| 37 if (s[i] == '?' && t[i] == '?') {||| 38 trans_pre(i, j, 0, 0);||| 39 trans_pre(i, j, 0, 1);||| 40 trans_pre(i, j, 1, 0);||| 41 trans_pre(i, j, 1, 1);||| 42 } else if (s[i] == '?') {||| 43 trans_pre(i, j, 0, t[i] - '0');||| 44 trans_pre(i, j, 1, t[i] - '0');||| 45 } else if (t[i] == '?') {||| 46 trans_pre(i, j, s[i] - '0', 0);||| 47 trans_pre(i, j, s[i] - '0', 1);||| 48 } else||| 49 trans_pre(i, j, s[i] - '0', t[i] - '0');||| 50 }||| 51 for (int j = 0; j <= 2 * n; j++) suf[n + 1][j] = 0;||| 52 suf[n + 1][n] = 1;||| 53 for (int i = n; i >= 1; i--)||| 54 for (int j = 0; j <= 2 * n; j++) {||| 55 suf[i][j] = 0;||| 56 if (s[i] == '?' && t[i] == '?') {||| 57 trans_suf(i, j, 0, 0);||| 58 trans_suf(i, j, 0, 1);||| 59 trans_suf(i, j, 1, 0);||| 60 trans_suf(i, j, 1, 1);||| 61 } else if (s[i] == '?') {||| 62 trans_suf(i, j, 0, t[i] - '0');||| 63 trans_suf(i, j, 1, t[i] - '0');||| 64 } else if (t[i] == '?') {||| 65 trans_suf(i, j, s[i] - '0', 0);||| 66 trans_suf(i, j, s[i] - '0', 1);||| 67 } else||| 68 trans_suf(i, j, s[i] - '0', t[i] - '0');||| 69 }||| 70 for (int i = 1; i <= n; i++)||| 71 for (int j = 0; j <= 2 * n; j++)||| 72 Add(ans, 1LL * pre[i][j] * suf[i + 1][2 * n - j] % mod * abs(j - n));||| 73 cout << ans << endl;||| 74 }||| 75 return 0;||| 76 }||| "	72 Add(ans,
124	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1000000007;||| 4 int N;||| 5 char A[2020];||| 6 char B[2020];||| 7 long long D[2020][4040];||| 8 long long E[2020][4040];||| 9 int main() {||| 10 int tc;||| 11 scanf(""%d"", &tc);||| 12 while (tc--) {||| 13 scanf(""%d"", &N);||| 14 scanf(""%s"", A + 1);||| 15 scanf(""%s"", B + 1);||| 16 for (int i = 0; i <= N + 1; i++)||| 17 for (int j = 0; j <= N + N; j++) D[i][j] = E[i][j] = 0;||| 18 D[0][N] = 1;||| 19 for (int i = 1; i <= N; i++) {||| 20 for (int j = 0; j <= N + N; j++) {||| 21 for (int k = 0; k < 2; k++) {||| 22 if (A[i] != '?' && A[i] != k + '0') continue;||| 23 for (int l = 0; l < 2; l++) {||| 24 if (B[i] != '?' && B[i] != l + '0') continue;||| 25 int tj = (i & 1 ? j + l - k : j - l + k);||| 26 if (tj < 0 || tj > N + N) continue;||| 27 D[i][tj] = (D[i][tj] + D[i - 1][j]) % MOD;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 E[N + 1][N] = 1;||| 33 for (int i = N; i >= 1; i--) {||| 34 for (int j = 0; j <= N + N; j++) {||| 35 for (int k = 0; k < 2; k++) {||| 36 if (A[i] != '?' && A[i] != k + '0') continue;||| 37 for (int l = 0; l < 2; l++) {||| 38 if (B[i] != '?' && B[i] != l + '0') continue;||| 39 int tj = (~i & 1 ? j + l - k : j - l + k);||| 40 if (tj < 0 || tj > N + N) continue;||| 41 E[i][tj] = (E[i][tj] + E[i + 1][j]) % MOD;||| 42 }||| 43 }||| 44 }||| 45 }||| 46 long long ans = 0;||| 47 for (int i = 1; i < N; i++) {||| 48 for (int j = 0; j <= N + N; j++) {||| 49 ans = (ans + abs(j - N) * D[i][j] % MOD * E[i + 1][j]) % MOD;||| 50 }||| 51 }||| 52 printf(""%lld\n"", ans);||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1000000007;||| 4 int N;||| 5 char A[2020];||| 6 char B[2020];||| 7 long long D[2020][4040];||| 8 long long E[2020][4040];||| 9 int main() {||| 10 int tc;||| 11 scanf(""%d"", &tc);||| 12 while (tc--) {||| 13 scanf(""%d"", &N);||| 14 scanf(""%s"", A + 1);||| 15 scanf(""%s"", B + 1);||| 16 for (int i = 0; i <= N; i++)||| 17 for (int j = 0; j <= N + N; j++) D[i][j] = E[i][j] = 0;||| 18 D[0][N] = 1;||| 19 for (int i = 1; i <= N; i++) {||| 20 for (int j = 0; j <= N + N; j++) {||| 21 for (int k = 0; k < 2; k++) {||| 22 if (A[i] != '?' && A[i] != k + '0') continue;||| 23 for (int l = 0; l < 2; l++) {||| 24 if (B[i] != '?' && B[i] != l + '0') continue;||| 25 int tj = (i & 1 ? j + l - k : j - l + k);||| 26 if (tj < 0 || tj > N + N) continue;||| 27 D[i][tj] = (D[i][tj] + D[i - 1][j]) % MOD;||| 28 }||| 29 }||| 30 }||| 31 }||| 32 E[N + 1][N] = 1;||| 33 for (int i = N; i >= 1; i--) {||| 34 for (int j = 0; j <= N + N; j++) {||| 35 for (int k = 0; k < 2; k++) {||| 36 if (A[i] != '?' && A[i] != k + '0') continue;||| 37 for (int l = 0; l < 2; l++) {||| 38 if (B[i] != '?' && B[i] != l + '0') continue;||| 39 int tj = (~i & 1 ? j + l - k : j - l + k);||| 40 if (tj < 0 || tj > N + N) continue;||| 41 E[i][tj] = (E[i][tj] + E[i + 1][j]) % MOD;||| 42 }||| 43 }||| 44 }||| 45 }||| 46 long long ans = 0;||| 47 for (int i = 1; i < N; i++) {||| 48 for (int j = 0; j <= N + N; j++) {||| 49 ans = (ans + abs(j - N) * D[i][j] % MOD * E[i + 1][j]) % MOD;||| 50 }||| 51 }||| 52 printf(""%lld\n"", ans);||| 53 }||| 54 return 0;||| 55 }||| "	16 for (int i = 0; i <= N + 1; i++)
127	161	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s;||| 11 cin >> s;||| 12 string t;||| 13 cin >> t;||| 14 sort(s.begin(), s.end());||| 15 bool rg = false;||| 16 if (t[0] == 'a' && t[1] == 'b' && t[2] == 'c') {||| 17 rg = true;||| 18 }||| 19 if (s.size() < 3) {||| 20 rg = false;||| 21 } else {||| 22 bool c1 = false, c2 = false, c3 = false;||| 23 for (int i = 0; i < s.size(); i++) {||| 24 if (s[i] == 'a') {||| 25 c1 = true;||| 26 }||| 27 if (s[i] == 'b') {||| 28 c2 = true;||| 29 }||| 30 if (s[i] == 'c') {||| 31 c3 = true;||| 32 }||| 33 }||| 34 if (!c1 || !c2 || !c3) {||| 35 rg = false;||| 36 }||| 37 }||| 38 if (!rg) {||| 39 cout << s << endl;||| 40 } else {||| 41 long long p1 = 0;||| 42 bool p2c = true;||| 43 for (int i = 0; i < s.size(); i++) {||| 44 if (s[i] == 'b' && p2c) {||| 45 p1 = i;||| 46 p2c = false;||| 47 }||| 48 if (s[i] == 'c') {||| 49 swap(s[i], s[p1]);||| 50 p1++;||| 51 }||| 52 }||| 53 cout << s << endl;||| 54 }||| 55 }||| 56 return 0;||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s;||| 11 cin >> s;||| 12 string t;||| 13 cin >> t;||| 14 sort(s.begin(), s.end());||| 15 bool rg = false;||| 16 if (t[0] == 'a' && t[1] == 'b' && t[2] == 'c') {||| 17 rg = true;||| 18 }||| 19 if (s.size() < 3) {||| 20 rg = false;||| 21 } else {||| 22 bool c1 = false, c2 = false, c3 = false;||| 23 for (int i = 0; i < s.size(); i++) {||| 24 if (s[i] == 'a') {||| 25 c1 = true;||| 26 }||| 27 if (s[i] == 'b') {||| 28 c2 = true;||| 29 }||| 30 if (s[i] == 'c') {||| 31 c3 = true;||| 32 }||| 33 }||| 34 if (!c1 || !c2 || !c3) {||| 35 rg = false;||| 36 }||| 37 }||| 38 if (!rg) {||| 39 cout << s << endl;||| 40 } else {||| 41 long long p1 = 0;||| 42 bool p2c = true;||| 43 for (int i = 0; i < s.size(); i++) {||| 44 if (s[i] == 'b' && p2c) {||| 45 p1 = i;||| 46 p2c = false;||| 47 }||| 48 if (s[i] == 'c') {||| 49 swap(s[i], s[p1]);||| 50 break;||| 51 }||| 52 }||| 53 cout << s << endl;||| 54 }||| 55 }||| 56 return 0;||| 57 }||| 	50 p1++;
127	280	"1 #include <bits/stdc++.h>||| 2 const long long INF = 1e18;||| 3 const int32_t M = 1e9 + 7;||| 4 using namespace std;||| 5 long long nextprime(long long x) {||| 6 x++;||| 7 long long n = x;||| 8 long long c = 0, c1 = 0;||| 9 while (true) {||| 10 long long x1 = (long long)(sqrt(n));||| 11 c1 = 0;||| 12 for (long long i = 2; i < x1 + 1; i++) {||| 13 if (n % i == 0) {||| 14 c1++;||| 15 break;||| 16 }||| 17 }||| 18 if (c1 == 0) {||| 19 break;||| 20 } else||| 21 n++;||| 22 }||| 23 return n;||| 24 }||| 25 long long binpow(long long a, long long b) {||| 26 a %= M;||| 27 long long res = 1;||| 28 while (b > 0) {||| 29 if (b & 1) res = res * a % M;||| 30 a = a * a % M;||| 31 b >>= 1;||| 32 }||| 33 return res;||| 34 }||| 35 void Solve() {||| 36 string s, t;||| 37 cin >> s >> t;||| 38 sort(s.begin(), s.end());||| 39 vector<char> cha(26);||| 40 for (auto x : s) {||| 41 cha[x - 'a']++;||| 42 }||| 43 if (t != ""abc"" || !cha[0] || !cha[1] || !cha[2]) {||| 44 cout << s << endl;||| 45 return;||| 46 } else {||| 47 while (cha[0]--) cout << 'a';||| 48 while (cha[2]--) cout << 'c';||| 49 while (cha[1]--) cout << 'b';||| 50 for (long long i = 3; i < 26; i++)||| 51 while (cha[i]--) {||| 52 cout << char('a' + i);||| 53 }||| 54 cout << endl;||| 55 return;||| 56 }||| 57 }||| 58 int32_t main() {||| 59 ios_base::sync_with_stdio(0);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 long long tcase;||| 63 cin >> tcase;||| 64 while (tcase--) {||| 65 Solve();||| 66 }||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long INF = 1e18;||| 3 const int32_t M = 1e9 + 7;||| 4 using namespace std;||| 5 long long nextprime(long long x) {||| 6 x++;||| 7 long long n = x;||| 8 long long c = 0, c1 = 0;||| 9 while (true) {||| 10 long long x1 = (long long)(sqrt(n));||| 11 c1 = 0;||| 12 for (long long i = 2; i < x1 + 1; i++) {||| 13 if (n % i == 0) {||| 14 c1++;||| 15 break;||| 16 }||| 17 }||| 18 if (c1 == 0) {||| 19 break;||| 20 } else||| 21 n++;||| 22 }||| 23 return n;||| 24 }||| 25 long long binpow(long long a, long long b) {||| 26 a %= M;||| 27 long long res = 1;||| 28 while (b > 0) {||| 29 if (b & 1) res = res * a % M;||| 30 a = a * a % M;||| 31 b >>= 1;||| 32 }||| 33 return res;||| 34 }||| 35 void Solve() {||| 36 string s, t;||| 37 cin >> s >> t;||| 38 sort(s.begin(), s.end());||| 39 vector<char> cha(26);||| 40 for (auto x : s) {||| 41 cha[x - 'a']++;||| 42 }||| 43 if (t != ""abc"" || !cha[0] || !cha[1] || !cha[2]) {||| 44 cout << s << endl;||| 45 return;||| 46 } else {||| 47 while (cha[0]--) cout << 'a';||| 48 while (cha[2]--) cout << 'c';||| 49 while (cha[1]--) cout << 'b';||| 50 for (long long i = 3; i < 26; i++)||| 51 while (cha[i]--) {||| 52 cout << char('a' - i);||| 53 }||| 54 cout << endl;||| 55 return;||| 56 }||| 57 }||| 58 int32_t main() {||| 59 ios_base::sync_with_stdio(0);||| 60 cin.tie(0);||| 61 cout.tie(0);||| 62 long long tcase;||| 63 cin >> tcase;||| 64 while (tcase--) {||| 65 Solve();||| 66 }||| 67 }||| "	52 cout << char('a' + i);
128	277	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void init() {||| 65 ios_base::sync_with_stdio(false);||| 66 cin.tie(NULL);||| 67 cout.tie(NULL);||| 68 }||| 69 long long gcd(long long a, long long b) {||| 70 if (b == 0) return a;||| 71 return gcd(b, a % b);||| 72 }||| 73 void solve() {||| 74 long long n;||| 75 cin >> n;||| 76 if (n % 2 == 0)||| 77 cout << 2 << "" "" << n - 3 << "" "" << 1 << ""\n"";||| 78 else {||| 79 for (long long i = 2; i < n + 1; i++) {||| 80 if (gcd(n - i - 1, i) == 1) {||| 81 cout << i << "" "" << n - 1 - i << "" "" << 1 << ""\n"";||| 82 return;||| 83 }||| 84 }||| 85 }||| 86 }||| 87 int main() {||| 88 init();||| 89 long long tt = 1;||| 90 cin >> tt;||| 91 while (tt--) {||| 92 solve();||| 93 }||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void init() {||| 65 ios_base::sync_with_stdio(false);||| 66 cin.tie(NULL);||| 67 cout.tie(NULL);||| 68 }||| 69 long long gcd(long long a, long long b) {||| 70 if (b == 0) return a;||| 71 return gcd(b, a % b);||| 72 }||| 73 void solve() {||| 74 long long n;||| 75 cin >> n;||| 76 if (n % 2 == 0)||| 77 cout << 2 << "" "" << n - 4 << "" "" << 2 << ""\n"";||| 78 else {||| 79 for (long long i = 2; i < n + 1; i++) {||| 80 if (gcd(n - i - 1, i) == 1) {||| 81 cout << i << "" "" << n - 1 - i << "" "" << 1 << ""\n"";||| 82 return;||| 83 }||| 84 }||| 85 }||| 86 }||| 87 int main() {||| 88 init();||| 89 long long tt = 1;||| 90 cin >> tt;||| 91 while (tt--) {||| 92 solve();||| 93 }||| 94 return 0;||| 95 }||| "	"77 cout << 2 << "" "" << n - 3 << "" "" << 1 << ""\n"";"
128	154	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n, a, b, c, i, v;||| 11 cin >> n;||| 12 if (n % 2 == 0) {||| 13 n--;||| 14 cout << n / 2 + 1 << "" "" << n / 2 << "" ""||| 15 << ""1\n"";||| 16 } else {||| 17 n--;||| 18 if ((n / 2) % 2 == 0) {||| 19 cout << n / 2 + 1 << "" "" << n / 2 - 1 << "" ""||| 20 << ""1\n"";||| 21 } else {||| 22 cout << n / 2 + 2 << "" "" << n / 2 - 2 << "" ""||| 23 << ""1\n"";||| 24 }||| 25 }||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n, a, b, c, i, v;||| 11 cin >> n;||| 12 if (n % 2 == 0) {||| 13 n--;||| 14 cout << n / 2 + 1 << "" "" << n / 2 << "" ""||| 15 << ""1\n"";||| 16 } else {||| 17 n--;||| 18 if ((n / 4) % 2 == 0) {||| 19 cout << n / 2 + 1 << "" "" << n / 2 - 1 << "" ""||| 20 << ""1\n"";||| 21 } else {||| 22 cout << n / 2 + 2 << "" "" << n / 2 - 2 << "" ""||| 23 << ""1\n"";||| 24 }||| 25 }||| 26 }||| 27 }||| "	18 if ((n / 2) % 2 == 0) {
129	142	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fun() {||| 4 long long a, s, d, i, j, k;||| 5 cin >> a;||| 6 vector<long long> vec;||| 7 set<pair<long long, long long> > se;||| 8 set<pair<long long, long long> >::iterator ii;||| 9 se.insert({1000000000000, 1000000000000});||| 10 for (i = 0; i < a; i++) {||| 11 cin >> s;||| 12 se.insert({s, i});||| 13 }||| 14 long long otv = 0;||| 15 for (i = a; i >= 1; i--) {||| 16 ii = se.lower_bound({i, 0});||| 17 long long a1, a2;||| 18 a1 = (*ii).first;||| 19 a2 = (*ii).second;||| 20 if (a1 == i) {||| 21 se.erase(*ii);||| 22 } else {||| 23 ii = se.lower_bound({i * 2 + 1, 0});||| 24 a1 = (*ii).first;||| 25 a2 = (*ii).second;||| 26 if (a1 == 1000000000000) {||| 27 cout << -1 << endl;||| 28 return;||| 29 }||| 30 se.erase(*ii);||| 31 otv++;||| 32 }||| 33 }||| 34 cout << otv << endl;||| 35 }||| 36 int main() {||| 37 long long a, i;||| 38 cin >> a;||| 39 for (i = 0; i < a; i++) fun();||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fun() {||| 4 long long a, s, d, i, j, k;||| 5 cin >> a;||| 6 vector<long long> vec;||| 7 set<pair<long long, long long> > se;||| 8 set<pair<long long, long long> >::iterator ii;||| 9 se.insert({1000000000000, 1000000000000});||| 10 for (i = 0; i < a; i++) {||| 11 cin >> s;||| 12 se.insert({s, i});||| 13 }||| 14 long long otv = 0;||| 15 for (i = a; i >= 1; i--) {||| 16 ii = se.lower_bound({i, 0});||| 17 long long a1, a2;||| 18 a1 = (*ii).first;||| 19 a2 = (*ii).second;||| 20 if (a1 == i) {||| 21 se.erase(*ii);||| 22 } else {||| 23 ii = se.upper_bound({i * 2 + 1, 0});||| 24 a1 = (*ii).first;||| 25 a2 = (*ii).second;||| 26 if (a1 == 1000000000000) {||| 27 cout << -1 << endl;||| 28 return;||| 29 }||| 30 se.erase(*ii);||| 31 otv++;||| 32 }||| 33 }||| 34 cout << otv << endl;||| 35 }||| 36 int main() {||| 37 long long a, i;||| 38 cin >> a;||| 39 for (i = 0; i < a; i++) fun();||| 40 }||| 	23 ii = se.lower_bound({i * 2 + 1, 0});
129	172	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void intxt() {}||| 4 inline void read(int &x) {||| 5 int f = 1;||| 6 x = 0;||| 7 char ch = getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = -1;||| 10 ch = getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + ch - '0';||| 14 ch = getchar();||| 15 }||| 16 x *= f;||| 17 }||| 18 inline void read(long long &x) {||| 19 long long f = 1;||| 20 x = 0;||| 21 char ch = getchar();||| 22 while (ch < '0' || ch > '9') {||| 23 if (ch == '-') f = -1;||| 24 ch = getchar();||| 25 }||| 26 while (ch >= '0' && ch <= '9') {||| 27 x = x * 10 + ch - '0';||| 28 ch = getchar();||| 29 }||| 30 x *= f;||| 31 }||| 32 const long long mod = 998244353;||| 33 const int N = 4e5 + 5;||| 34 const int M = 1e6 + 5;||| 35 int n, m, k;||| 36 int a[N];||| 37 multiset<int> cup;||| 38 int main() {||| 39 intxt();||| 40 int casen;||| 41 scanf(""%d"", &casen);||| 42 for (int LP = 1; LP <= casen; ++LP) {||| 43 cin >> n;||| 44 cup.clear();||| 45 for (int i = 1; i <= n; i++) {||| 46 cin >> a[i];||| 47 cup.insert(a[i]);||| 48 }||| 49 int ans = 0;||| 50 for (int i = n; i >= 1; i--) {||| 51 if (cup.count(i) >= 1) {||| 52 auto x = cup.lower_bound(i);||| 53 cup.erase(x);||| 54 } else {||| 55 auto x = cup.upper_bound(i * 2);||| 56 if (x == cup.end()) {||| 57 ans = -1;||| 58 break;||| 59 }||| 60 cup.erase(x);||| 61 ans++;||| 62 }||| 63 }||| 64 cout << ans << endl;||| 65 }||| 66 return 0;||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline void intxt() {}||| 4 inline void read(int &x) {||| 5 int f = 1;||| 6 x = 0;||| 7 char ch = getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = -1;||| 10 ch = getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + ch - '0';||| 14 ch = getchar();||| 15 }||| 16 x *= f;||| 17 }||| 18 inline void read(long long &x) {||| 19 long long f = 1;||| 20 x = 0;||| 21 char ch = getchar();||| 22 while (ch < '0' || ch > '9') {||| 23 if (ch == '-') f = -1;||| 24 ch = getchar();||| 25 }||| 26 while (ch >= '0' && ch <= '9') {||| 27 x = x * 10 + ch - '0';||| 28 ch = getchar();||| 29 }||| 30 x *= f;||| 31 }||| 32 const long long mod = 998244353;||| 33 const int N = 4e5 + 5;||| 34 const int M = 1e6 + 5;||| 35 int n, m, k;||| 36 int a[N];||| 37 multiset<int> cup;||| 38 int main() {||| 39 intxt();||| 40 int casen;||| 41 scanf(""%d"", &casen);||| 42 for (int LP = 1; LP <= casen; ++LP) {||| 43 cin >> n;||| 44 cup.clear();||| 45 for (int i = 1; i <= n; i++) {||| 46 cin >> a[i];||| 47 cup.insert(a[i]);||| 48 }||| 49 int ans = 0;||| 50 for (int i = n; i >= 1; i--) {||| 51 if (cup.count(i) >= 1) {||| 52 auto x = cup.lower_bound(i);||| 53 cup.erase(*x);||| 54 } else {||| 55 auto x = cup.upper_bound(i * 2);||| 56 if (x == cup.end()) {||| 57 ans = -1;||| 58 break;||| 59 }||| 60 cup.erase(*x);||| 61 ans++;||| 62 }||| 63 }||| 64 cout << ans << endl;||| 65 }||| 66 return 0;||| 67 }||| "	53 cup.erase(x);
130	134	"1 #include <bits/stdc++.h>||| 2 using LL = long long;||| 3 int query(int a, int b, int c) {||| 4 std::cout << ""? "" << a << ' ' << b << ' ' << c << std::endl;||| 5 int x;||| 6 std::cin >> x;||| 7 return x;||| 8 }||| 9 void solve() {||| 10 int n;||| 11 std::cin >> n;||| 12 std::vector<int> type(n + 1, -1);||| 13 n /= 3;||| 14 std::vector<int> ans(n);||| 15 for (int i = 0; i < n; ++i) ans[i] = query(i * 3 + 1, i * 3 + 2, i * 3 + 3);||| 16 int g = std::find(ans.begin(), ans.end(), 1) - ans.begin();||| 17 int b = std::find(ans.begin(), ans.end(), 0) - ans.begin();||| 18 std::vector<int> a{g * 3 + 1, g * 3 + 2, g * 3 + 3,||| 19 b * 3 + 1, b * 3 + 2, b * 3 + 3};||| 20 int id = 0;||| 21 if (query(a[1], a[2], a[3])) {||| 22 if (query(a[2], a[3], a[4])) {||| 23 id = 2;||| 24 } else {||| 25 id = 1;||| 26 }||| 27 }||| 28 int x = a[id], y = a[id + 3];||| 29 type[x] = 1;||| 30 type[y] = 0;||| 31 type[a[id + 1]] = query(x, y, a[id + 1]);||| 32 type[a[id + 2]] = !type[a[id + 1]];||| 33 for (auto t : a) {||| 34 if (type[t] == -1) {||| 35 type[t] = query(x, y, t);||| 36 }||| 37 }||| 38 for (int i = 0; i < n; ++i)||| 39 if (i != g && i != b) {||| 40 if (ans[i]) {||| 41 if (query(y, 3 * i + 1, 3 * i + 2)) {||| 42 type[3 * i + 1] = type[3 * i + 2] = 1;||| 43 type[3 * i + 3] = query(x, y, 3 * i + 3);||| 44 } else {||| 45 type[3 * i + 3] = 1;||| 46 type[3 * i + 1] = query(x, y, 3 * i + 1);||| 47 type[3 * i + 2] = !type[3 * i + 1];||| 48 }||| 49 } else {||| 50 if (query(x, 3 * i + 1, 3 * i + 2)) {||| 51 type[3 * i + 3] = 0;||| 52 type[3 * i + 1] = query(x, y, 3 * i + 1);||| 53 type[3 * i + 2] = !type[3 * i + 1];||| 54 } else {||| 55 type[3 * i + 1] = type[3 * i + 2] = 0;||| 56 type[3 * i + 3] = query(x, y, 3 * i + 3);||| 57 }||| 58 }||| 59 }||| 60 std::vector<int> r;||| 61 r.reserve(n * 2);||| 62 for (int i = 1; i <= 3 * n; ++i)||| 63 if (type[i] == 0) r.emplace_back(i);||| 64 std::cout << ""! "" << r.size();||| 65 for (auto x : r) std::cout << ' ' << x;||| 66 std::cout << std::endl;||| 67 }||| 68 int main() {||| 69 std::cin.tie(nullptr)->sync_with_stdio(false);||| 70 int cas = 1;||| 71 std::cin >> cas;||| 72 while (cas--) {||| 73 solve();||| 74 }||| 75 return 0;||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using LL = long long;||| 3 int query(int a, int b, int c) {||| 4 std::cout << ""? "" << a << ' ' << b << ' ' << c << std::endl;||| 5 int x;||| 6 std::cin >> x;||| 7 return x;||| 8 }||| 9 void solve() {||| 10 int n;||| 11 std::cin >> n;||| 12 std::vector<int> type(n + 1, -1);||| 13 n /= 3;||| 14 std::vector<int> ans(n);||| 15 for (int i = 0; i < n; ++i) ans[i] = query(i * 3 + 1, i * 3 + 2, i * 3 + 3);||| 16 int g = std::find(ans.begin(), ans.end(), 1) - ans.begin();||| 17 int b = std::find(ans.begin(), ans.end(), 0) - ans.begin();||| 18 std::vector<int> a{g * 3 + 1, g * 3 + 2, g * 3 + 3,||| 19 b * 3 + 1, b * 3 + 2, b * 3 + 3};||| 20 int id = 0;||| 21 if (query(a[1], a[2], a[3])) {||| 22 if (query(a[2], a[3], a[4])) {||| 23 id = 2;||| 24 } else {||| 25 id = 1;||| 26 }||| 27 }||| 28 int x = a[id], y = a[id + 3];||| 29 type[x] = 1;||| 30 type[y] = 0;||| 31 type[a[id + 1]] = query(x, y, a[id + 1]);||| 32 type[a[id + 2]] = !type[a[id + 1]];||| 33 for (auto t : a) {||| 34 if (type[t] == -1) {||| 35 type[t] = query(x, y, t);||| 36 }||| 37 }||| 38 for (int i = 0; i < n; ++i)||| 39 if (i != g && i != b) {||| 40 if (ans[i]) {||| 41 if (query(y, 3 * i + 1, 3 * i + 2)) {||| 42 type[3 * i + 1] = type[3 * i + 2] = 1;||| 43 type[3 * i + 3] = query(x, y, 3 * i + 3);||| 44 } else {||| 45 type[3 * i + 3] = 1;||| 46 type[3 * i + 1] = query(x, y, 3 * i + 1);||| 47 type[3 * i + 2] = !type[3 * i + 1];||| 48 }||| 49 } else {||| 50 if (query(x, 3 * i + 1, 3 * i + 2)) {||| 51 type[3 * i + 3] = 0;||| 52 type[3 * i + 1] = query(x, y, 3 * i + 1);||| 53 type[3 * i + 2] = !type[3 * i + 1];||| 54 } else {||| 55 type[3 * i + 1] = type[3 * i + 2];||| 56 type[3 * i + 3] = query(x, y, 3 * i + 3);||| 57 }||| 58 }||| 59 }||| 60 std::vector<int> r;||| 61 r.reserve(n * 2);||| 62 for (int i = 1; i <= 3 * n; ++i)||| 63 if (type[i] == 0) r.emplace_back(i);||| 64 std::cout << ""! "" << r.size();||| 65 for (auto x : r) std::cout << ' ' << x;||| 66 std::cout << std::endl;||| 67 }||| 68 int main() {||| 69 std::cin.tie(nullptr)->sync_with_stdio(false);||| 70 int cas = 1;||| 71 std::cin >> cas;||| 72 while (cas--) {||| 73 solve();||| 74 }||| 75 return 0;||| 76 }||| "	55 type[3 * i + 1] = type[3 * i + 2] = 0;
130	82	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 10;||| 4 int read() {||| 5 int x;||| 6 scanf(""%d"", &x);||| 7 return x;||| 8 }||| 9 int query[N], peo[N], lp;||| 10 int ask(int x, int y, int z) {||| 11 printf(""? %d %d %d\n"", x, y, z);||| 12 fflush(stdout);||| 13 int p = read();||| 14 return p;||| 15 }||| 16 int main() {||| 17 int one, zero, cheat, honest, t, n, i, j;||| 18 t = read();||| 19 while (t--) {||| 20 lp = 0;||| 21 n = read();||| 22 for (i = 1; i <= n; i += 3) {||| 23 query[i] = ask(i, i + 1, i + 2);||| 24 if (query[i] == 1)||| 25 one = i;||| 26 else||| 27 zero = i;||| 28 }||| 29 int tmp1 = ask(one + 1, one + 2, zero);||| 30 int tmp2 = ask(one + 2, zero, zero + 1);||| 31 if (query[one] != tmp1) {||| 32 if (tmp1 == 1)||| 33 cheat = one, honest = zero;||| 34 else||| 35 honest = one, cheat = zero;||| 36 } else if (tmp1 != tmp2) {||| 37 if (tmp2 == 1)||| 38 cheat = one + 1, honest = zero + 1;||| 39 else||| 40 honest = one + 1, cheat = zero + 1;||| 41 } else if (tmp2 != query[zero]) {||| 42 if (query[zero] == 1)||| 43 cheat = one + 2, honest = zero + 2;||| 44 else||| 45 honest = one + 2, cheat = zero + 2;||| 46 }||| 47 for (i = 1; i <= n; i += 3) {||| 48 if ((i <= cheat && cheat <= i + 2) || (i <= honest && honest <= i + 2)) {||| 49 for (j = i; j <= i + 2; j++)||| 50 if (j == cheat || j == honest)||| 51 continue;||| 52 else {||| 53 tmp1 = ask(j, honest, cheat);||| 54 if (!tmp1) peo[++lp] = j;||| 55 }||| 56 continue;||| 57 }||| 58 if (query[i] == 0) {||| 59 tmp1 = ask(i, i + 1, honest);||| 60 if (tmp1 == 0) {||| 61 peo[++lp] = i, peo[++lp] = i + 1;||| 62 tmp2 = ask(i + 2, honest, cheat);||| 63 if (!tmp2) peo[++lp] = i + 2;||| 64 } else {||| 65 tmp2 = ask(i, honest, cheat);||| 66 if (tmp2)||| 67 peo[++lp] = i + 1;||| 68 else||| 69 peo[++lp] = i;||| 70 peo[++lp] = i + 2;||| 71 }||| 72 } else {||| 73 tmp1 = ask(i, i + 1, cheat);||| 74 if (tmp1 == 1) {||| 75 tmp2 = ask(i + 2, honest, cheat);||| 76 if (!tmp2) peo[++lp] = i + 2;||| 77 } else {||| 78 tmp2 = ask(i, honest, cheat);||| 79 if (tmp2)||| 80 peo[++lp] = i + 1;||| 81 else||| 82 peo[++lp] = i;||| 83 }||| 84 }||| 85 }||| 86 printf(""! %d "", lp + 1);||| 87 for (i = 1; i <= lp; i++) printf(""%d "", peo[i]);||| 88 printf(""%d\n"", cheat);||| 89 fflush(stdout);||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4 + 10;||| 4 int read() {||| 5 int x;||| 6 scanf(""%d"", &x);||| 7 return x;||| 8 }||| 9 int query[N], peo[N], lp;||| 10 int ask(int x, int y, int z) {||| 11 printf(""? %d %d %d\n"", x, y, z);||| 12 fflush(stdout);||| 13 int p = read();||| 14 return p;||| 15 }||| 16 int main() {||| 17 int one, zero, cheat, honest, t, n, i, j;||| 18 t = read();||| 19 while (t--) {||| 20 lp = 0;||| 21 n = read();||| 22 for (i = 1; i <= n; i += 3) {||| 23 query[i] = ask(i, i + 1, i + 2);||| 24 if (query[i] == 1)||| 25 one = i;||| 26 else||| 27 zero = i;||| 28 }||| 29 int tmp1 = ask(one + 1, one + 2, zero);||| 30 int tmp2 = ask(one + 2, zero, zero + 1);||| 31 if (query[one] != tmp1) {||| 32 if (tmp1 == 1)||| 33 cheat = one, honest = zero;||| 34 else||| 35 honest = zero, cheat = one;||| 36 } else if (tmp1 != tmp2) {||| 37 if (tmp2 == 1)||| 38 cheat = one + 1, honest = zero + 1;||| 39 else||| 40 honest = one + 1, cheat = zero + 1;||| 41 } else if (tmp2 != query[zero]) {||| 42 if (query[zero] == 1)||| 43 cheat = one + 2, honest = zero + 2;||| 44 else||| 45 honest = one + 2, cheat = zero + 2;||| 46 }||| 47 for (i = 1; i <= n; i += 3) {||| 48 if ((i <= cheat && cheat <= i + 2) || (i <= honest && honest <= i + 2)) {||| 49 for (j = i; j <= i + 2; j++)||| 50 if (j == cheat || j == honest)||| 51 continue;||| 52 else {||| 53 tmp1 = ask(j, honest, cheat);||| 54 if (!tmp1) peo[++lp] = j;||| 55 }||| 56 continue;||| 57 }||| 58 if (query[i] == 0) {||| 59 tmp1 = ask(i, i + 1, honest);||| 60 if (tmp1 == 0) {||| 61 peo[++lp] = i, peo[++lp] = i + 1;||| 62 tmp2 = ask(i + 2, honest, cheat);||| 63 if (!tmp2) peo[++lp] = i + 2;||| 64 } else {||| 65 tmp2 = ask(i, honest, cheat);||| 66 if (tmp2)||| 67 peo[++lp] = i + 1;||| 68 else||| 69 peo[++lp] = i;||| 70 peo[++lp] = i + 2;||| 71 }||| 72 } else {||| 73 tmp1 = ask(i, i + 1, cheat);||| 74 if (tmp1 == 1) {||| 75 tmp2 = ask(i + 2, honest, cheat);||| 76 if (!tmp2) peo[++lp] = i + 2;||| 77 } else {||| 78 tmp2 = ask(i, honest, cheat);||| 79 if (tmp2)||| 80 peo[++lp] = i + 1;||| 81 else||| 82 peo[++lp] = i;||| 83 }||| 84 }||| 85 }||| 86 printf(""! %d "", lp + 1);||| 87 for (i = 1; i <= lp; i++) printf(""%d "", peo[i]);||| 88 printf(""%d\n"", cheat);||| 89 fflush(stdout);||| 90 }||| 91 return 0;||| 92 }||| "	35 honest = one, cheat = zero;
130	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e4 + 10;||| 4 long long a[N];||| 5 long long ans[N];||| 6 long long ind1, ind0;||| 7 long long find1, find0;||| 8 long long query(long long x, long long y, long long z) {||| 9 cout << ""? "" << x << "" "" << y << "" "" << z << endl;||| 10 long long tmp;||| 11 cin >> tmp;||| 12 return tmp;||| 13 }||| 14 void solve() {||| 15 long long n;||| 16 cin >> n;||| 17 ind1 = ind0 = -1;||| 18 find0 = find1 = -1;||| 19 for (long long i = 1; i <= n; ++i) ans[i] = a[i] = -1;||| 20 for (long long i = 1; i <= n - 2; i += 3) {||| 21 a[i] = query(i, i + 1, i + 2);||| 22 }||| 23 for (long long i = 1; i <= n - 5; i += 3) {||| 24 if (a[i] != a[i + 3]) {||| 25 a[i + 1] = query(i + 1, i + 2, i + 3);||| 26 a[i + 2] = query(i + 2, i + 3, i + 4);||| 27 for (long long j = i; j <= i + 2; ++j) {||| 28 if (a[j] != a[j + 1]) {||| 29 if (a[j] == 0) {||| 30 ind1 = j + 3;||| 31 ind0 = j;||| 32 ans[j + 3] = 1;||| 33 ans[j] = 0;||| 34 } else {||| 35 ind0 = j + 3;||| 36 ind1 = j;||| 37 ans[j + 3] = 0;||| 38 ans[j] = 1;||| 39 }||| 40 }||| 41 }||| 42 break;||| 43 }||| 44 }||| 45 for (long long i = 1; i + 2 <= n; i += 3) {||| 46 if (ind0 <= i + 2 && ind0 >= i) continue;||| 47 if (ind1 <= i + 2 && ind1 >= i) continue;||| 48 if (a[i] == 0) {||| 49 long long ab1 = query(i, i + 1, ind1);||| 50 if (ab1 == 1) {||| 51 ans[i + 2] = 0;||| 52 long long bc1 = query(i + 1, i + 2, ind1);||| 53 if (bc1 == 1) {||| 54 ans[i + 1] = 1;||| 55 ans[i] = 0;||| 56 } else {||| 57 ans[i] = 1;||| 58 ans[i + 1] = 0;||| 59 }||| 60 } else {||| 61 ans[i + 1] = ans[i] = 0;||| 62 long long bc1 = query(i + 1, i + 2, ind1);||| 63 if (bc1 == 1) {||| 64 ans[i + 2] = 1;||| 65 } else||| 66 ans[i + 2] = 0;||| 67 }||| 68 } else {||| 69 long long ab0 = query(i, i + 1, ind0);||| 70 if (ab0 == 0) {||| 71 ans[i + 2] = 1;||| 72 long long bc0 = query(i + 1, i + 2, ind0);||| 73 if (bc0 == 0) {||| 74 ans[i + 1] = 0;||| 75 ans[i] = 1;||| 76 } else {||| 77 ans[i] = 0;||| 78 ans[i + 1] = 1;||| 79 }||| 80 } else {||| 81 ans[i + 1] = ans[i] = 1;||| 82 long long bc0 = query(i + 1, i + 2, ind0);||| 83 if (bc0 == 0) {||| 84 ans[i + 2] = 0;||| 85 } else||| 86 ans[i + 2] = 1;||| 87 }||| 88 }||| 89 }||| 90 for (long long i = 1; i <= n; ++i) {||| 91 if (ans[i] == -1) {||| 92 ans[i] = query(ind0, ind1, i);||| 93 }||| 94 }||| 95 vector<long long> vec;||| 96 for (long long i = 1; i <= n; ++i)||| 97 if (ans[i] == 0) {||| 98 vec.push_back(i);||| 99 }||| 100 cout << ""! "" << vec.size() << "" "";||| 101 for (auto i : vec) {||| 102 cout << i << "" "";||| 103 }||| 104 cout << endl;||| 105 return;||| 106 }||| 107 signed main() {||| 108 long long T;||| 109 cin >> T;||| 110 while (T--) {||| 111 solve();||| 112 }||| 113 return 0;||| 114 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e4 + 10;||| 4 long long a[N];||| 5 long long ans[N];||| 6 long long ind1, ind0;||| 7 long long find1, find0;||| 8 long long query(long long x, long long y, long long z) {||| 9 cout << ""? "" << x << "" "" << y << "" "" << z << endl;||| 10 long long tmp;||| 11 cin >> tmp;||| 12 return tmp;||| 13 }||| 14 void solve() {||| 15 long long n;||| 16 cin >> n;||| 17 ind1 = ind0 = -1;||| 18 find0 = find1 = -1;||| 19 for (long long i = 1; i <= n; ++i) ans[i] = a[i] = -1;||| 20 for (long long i = 1; i <= n - 2; i += 3) {||| 21 a[i] = query(i, i + 1, i + 2);||| 22 }||| 23 for (long long i = 1; i <= n - 5; i += 3) {||| 24 if (a[i] != a[i + 3]) {||| 25 a[i + 1] = query(i + 1, i + 2, i + 3);||| 26 a[i + 2] = query(i + 2, i + 3, i + 4);||| 27 for (long long j = i; j <= i + 2; ++j) {||| 28 if (a[j] != a[j + 1]) {||| 29 if (a[j] == 0) {||| 30 ind1 = j + 3;||| 31 ind0 = j;||| 32 ans[j + 3] = 1;||| 33 ans[j] = 0;||| 34 } else {||| 35 ind0 = j + 3;||| 36 ind1 = j;||| 37 ans[j + 3] = 0;||| 38 ans[j] = 1;||| 39 }||| 40 }||| 41 }||| 42 break;||| 43 }||| 44 }||| 45 for (long long i = 1; i + 2 <= n; i += 3) {||| 46 if (ind0 <= i + 2 && ind0 >= i) continue;||| 47 if (ind1 <= i + 2 && ind1 >= i) continue;||| 48 if (a[i] == 0) {||| 49 long long ab1 = query(i, i + 1, ind1);||| 50 if (ab1 == 1) {||| 51 ans[i + 2] = 0;||| 52 long long bc1 = query(i + 1, i + 2, ind1);||| 53 if (bc1 == 1) {||| 54 ans[i + 1] = 1;||| 55 ans[i] = 0;||| 56 } else {||| 57 ans[i] = 1;||| 58 ans[i + 1] = 0;||| 59 }||| 60 } else {||| 61 ans[i + 1] = ans[i] = 0;||| 62 long long bc1 = query(i + 1, i + 2, ind1);||| 63 if (bc1 == 1) {||| 64 ans[i + 2] = 1;||| 65 } else||| 66 ans[i + 2] = 0;||| 67 }||| 68 } else {||| 69 long long ab0 = query(i, i + 1, ind0);||| 70 if (ab0 == 0) {||| 71 ans[i + 2] = 1;||| 72 long long bc0 = query(i + 1, i + 2, ind0);||| 73 if (bc0 == 1) {||| 74 ans[i + 1] = 0;||| 75 ans[i] = 1;||| 76 } else {||| 77 ans[i] = 0;||| 78 ans[i + 1] = 1;||| 79 }||| 80 } else {||| 81 ans[i + 1] = ans[i] = 1;||| 82 long long bc0 = query(i + 1, i + 2, ind0);||| 83 if (bc0 == 0) {||| 84 ans[i + 2] = 0;||| 85 } else||| 86 ans[i + 2] = 1;||| 87 }||| 88 }||| 89 }||| 90 for (long long i = 1; i <= n; ++i) {||| 91 if (ans[i] == -1) {||| 92 ans[i] = query(ind0, ind1, i);||| 93 }||| 94 }||| 95 vector<long long> vec;||| 96 for (long long i = 1; i <= n; ++i)||| 97 if (ans[i] == 0) {||| 98 vec.push_back(i);||| 99 }||| 100 cout << ""! "" << vec.size() << "" "";||| 101 for (auto i : vec) {||| 102 cout << i << "" "";||| 103 }||| 104 cout << endl;||| 105 return;||| 106 }||| 107 signed main() {||| 108 long long T;||| 109 cin >> T;||| 110 while (T--) {||| 111 solve();||| 112 }||| 113 return 0;||| 114 }||| "	73 if (bc0 == 0) {
130	57	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long query(long long a, long long b, long long c) {||| 4 cout << ""? "" << a << "" "" << b << "" "" << c << endl;||| 5 long long r;||| 6 cin >> r;||| 7 return r;||| 8 }||| 9 signed main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(NULL);||| 12 cout.tie(NULL);||| 13 long long t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long n;||| 17 cin >> n;||| 18 long long a[n + 1], role[n + 1];||| 19 for (long long i = 1; i <= n; i++) role[i] = -1;||| 20 for (long long i = 1; i + 2 <= n; i += 3) a[i] = query(i, i + 1, i + 2);||| 21 long long imp, crew;||| 22 for (long long i = 1; i + 5 <= n; i += 3) {||| 23 if (a[i] != a[i + 3]) {||| 24 a[i + 1] = query(i + 1, i + 2, i + 3),||| 25 a[i + 2] = query(i + 2, i + 3, i + 4);||| 26 for (long long j = i; j < (i + 3); j++) {||| 27 if (a[j] != a[j + 1]) {||| 28 if (a[j] == 0) {||| 29 imp = j;||| 30 crew = j + 3;||| 31 role[j] = 0;||| 32 role[j + 3] = 1;||| 33 } else {||| 34 imp = j + 3;||| 35 crew = j;||| 36 role[j] = 1;||| 37 role[j + 3] = 0;||| 38 }||| 39 }||| 40 }||| 41 break;||| 42 }||| 43 }||| 44 for (long long i = 1; i + 2 <= n; i += 3) {||| 45 if (i == imp || (i + 1) == imp || (i + 2) == imp || i == crew ||||| 46 (i + 1) == crew || (i + 2) == crew) {||| 47 for (long long j = i; j < (i + 3); j++) {||| 48 if (role[j] == -1) {||| 49 role[j] = query(j, crew, imp);||| 50 }||| 51 }||| 52 } else {||| 53 if (a[i] == 0) {||| 54 if (query(i, i + 1, crew) == 1) {||| 55 if (query(i, crew, imp) == 1)||| 56 role[i] = 1, role[i + 1] = 0;||| 57 else||| 58 role[i] = 0, role[i + 1] = 1;||| 59 role[i + 2] = 0;||| 60 } else {||| 61 role[i] = 0, role[i + 1] = 0;||| 62 role[i + 2] = query(i + 2, crew, imp);||| 63 }||| 64 } else {||| 65 if (query(i, i + 1, imp) == 0) {||| 66 if (query(i, crew, imp) == 1)||| 67 role[i] = 1, role[i + 1] = 0;||| 68 else||| 69 role[i] = 0, role[i + 1] = 1;||| 70 role[i + 2] = 1;||| 71 } else {||| 72 role[i] = 1, role[i + 1] = 1;||| 73 role[i + 2] = query(i + 2, crew, imp);||| 74 }||| 75 }||| 76 }||| 77 }||| 78 vector<long long> v;||| 79 for (long long i = 1; i <= n; i++)||| 80 if (role[i] == 0) v.push_back(i);||| 81 cout << ""! "" << v.size() << ' ';||| 82 for (long long i = 0; i < v.size(); i++) {||| 83 cout << v[i] << ' ';||| 84 }||| 85 cout << endl;||| 86 }||| 87 return 0;||| 88 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long query(long long a, long long b, long long c) {||| 4 cout << ""? "" << a << "" "" << b << "" "" << c << endl;||| 5 long long r;||| 6 cin >> r;||| 7 return r;||| 8 }||| 9 signed main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(NULL);||| 12 cout.tie(NULL);||| 13 long long t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long n;||| 17 cin >> n;||| 18 long long a[n + 1], role[n + 1];||| 19 for (long long i = 1; i <= n; i++) role[i] = -1;||| 20 for (long long i = 1; i + 2 <= n; i += 3) a[i] = query(i, i + 1, i + 2);||| 21 long long imp, crew;||| 22 for (long long i = 1; i + 5 <= n; i += 3) {||| 23 if (a[i] != a[i + 3]) {||| 24 a[i + 1] = query(i + 1, i + 2, i + 3),||| 25 a[i + 2] = query(i + 2, i + 3, i + 4);||| 26 for (long long j = i; j < (i + 3); j++) {||| 27 if (a[j] != a[j + 1]) {||| 28 if (a[j] == 0) {||| 29 imp = j;||| 30 crew = j + 3;||| 31 role[j] = 0;||| 32 role[j + 3] = 1;||| 33 } else {||| 34 imp = j + 3;||| 35 crew = j;||| 36 role[j] = 1;||| 37 role[j + 3] = 0;||| 38 }||| 39 }||| 40 }||| 41 }||| 42 break;||| 43 }||| 44 for (long long i = 1; i + 2 <= n; i += 3) {||| 45 if (i == imp || (i + 1) == imp || (i + 2) == imp || i == crew ||||| 46 (i + 1) == crew || (i + 2) == crew) {||| 47 for (long long j = i; j < (i + 3); j++) {||| 48 if (role[j] == -1) {||| 49 role[j] = query(j, crew, imp);||| 50 }||| 51 }||| 52 } else {||| 53 if (a[i] == 0) {||| 54 if (query(i, i + 1, crew) == 1) {||| 55 if (query(i, crew, imp) == 1)||| 56 role[i] = 1, role[i + 1] = 0;||| 57 else||| 58 role[i] = 0, role[i + 1] = 1;||| 59 role[i + 2] = 0;||| 60 } else {||| 61 role[i] = 0, role[i + 1] = 0;||| 62 role[i + 2] = query(i + 2, crew, imp);||| 63 }||| 64 } else {||| 65 if (query(i, i + 1, imp) == 0) {||| 66 if (query(i, crew, imp) == 1)||| 67 role[i] = 1, role[i + 1] = 0;||| 68 else||| 69 role[i] = 0, role[i + 1] = 1;||| 70 role[i + 2] = 1;||| 71 } else {||| 72 role[i] = 1, role[i + 1] = 1;||| 73 role[i + 2] = query(i + 2, crew, imp);||| 74 }||| 75 }||| 76 }||| 77 }||| 78 vector<long long> v;||| 79 for (long long i = 1; i <= n; i++)||| 80 if (role[i] == 0) v.push_back(i);||| 81 cout << ""! "" << v.size() << ' ';||| 82 for (long long i = 0; i < v.size(); i++) {||| 83 cout << v[i] << ' ';||| 84 }||| 85 cout << endl;||| 86 }||| 87 return 0;||| 88 }||| "	41 break;
131	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long I1 = 1e9;||| 4 const long long I2 = 1e18;||| 5 const int32_t M1 = 1e9 + 7;||| 6 const int32_t M2 = 998244353;||| 7 template <typename T, typename T1>||| 8 T maxn(T &a, T1 b) {||| 9 if (b > a) a = b;||| 10 return a;||| 11 }||| 12 template <typename T, typename T1>||| 13 T minn(T &a, T1 b) {||| 14 if (b < a) a = b;||| 15 return a;||| 16 }||| 17 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 18 map<int, set<int> > adj;||| 19 int mx = 0;||| 20 pair<int, int> ind = {-1, -1};||| 21 map<int, int> mp;||| 22 pair<int, int> dfs(int src, int p) {||| 23 int mx1 = -1, mx2 = -1, ind1 = -1, ind2 = -1;||| 24 for (auto u : adj[src]) {||| 25 if (u != p) {||| 26 pair<int, int> x = dfs(u, src);||| 27 x.first++;||| 28 if (x.first > mx1) {||| 29 mx2 = mx1, ind2 = ind1;||| 30 mx1 = x.first, ind1 = x.second;||| 31 } else if (x.first > mx2) {||| 32 mx2 = x.first, ind2 = x.second;||| 33 }||| 34 }||| 35 }||| 36 if (mx1 > -1 && mx2 > -1 && mx1 + mx2 > mx) {||| 37 mx = mx1 + mx2;||| 38 ind = {ind1, ind2};||| 39 }||| 40 if (mp.count(src)) {||| 41 if (mx1 > mx) {||| 42 mx = mx1;||| 43 ind = {ind1, src};||| 44 }||| 45 if (mx1 == -1) {||| 46 mx1 = 0, ind1 = src;||| 47 }||| 48 }||| 49 return {mx1, ind1};||| 50 }||| 51 void solve() {||| 52 int n;||| 53 cin >> n;||| 54 vector<int> a(n);||| 55 for (int i = 0; i < n; i++) {||| 56 cin >> a[i];||| 57 mp[a[i]] = i + 1;||| 58 }||| 59 for (auto u : a) {||| 60 for (int i = 30; i >= 0; i--) {||| 61 if ((1 << i) < u) {||| 62 adj[(1 << (i + 1)) - u].insert(u);||| 63 adj[u].insert((1 << (i + 1)) - u);||| 64 u = (1 << (i + 1)) - u;||| 65 }||| 66 }||| 67 if (u == 1) {||| 68 adj[0].insert(1);||| 69 adj[1].insert(0);||| 70 }||| 71 }||| 72 pair<int, int> cur = dfs(0, -1);||| 73 cout << mp[ind.first] << "" "" << mp[ind.second] << "" "" << mx << '\n';||| 74 }||| 75 signed main() {||| 76 ios_base::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 int testcase = 1;||| 80 while (testcase--) solve();||| 81 return 0;||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long I1 = 1e9;||| 4 const long long I2 = 1e18;||| 5 const int32_t M1 = 1e9 + 7;||| 6 const int32_t M2 = 998244353;||| 7 template <typename T, typename T1>||| 8 T maxn(T &a, T1 b) {||| 9 if (b > a) a = b;||| 10 return a;||| 11 }||| 12 template <typename T, typename T1>||| 13 T minn(T &a, T1 b) {||| 14 if (b < a) a = b;||| 15 return a;||| 16 }||| 17 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 18 map<int, set<int> > adj;||| 19 int mx = 0;||| 20 pair<int, int> ind = {-1, -1};||| 21 map<int, int> mp;||| 22 pair<int, int> dfs(int src, int p) {||| 23 int mx1 = -1, mx2 = -1, ind1 = -1, ind2 = -1;||| 24 for (auto u : adj[src]) {||| 25 if (u != p) {||| 26 pair<int, int> x = dfs(u, src);||| 27 x.first++;||| 28 if (x.first > mx1) {||| 29 mx2 = mx1, ind2 = ind1;||| 30 mx1 = x.first, ind1 = x.second;||| 31 } else if (x.first > mx2) {||| 32 mx2 = x.first, ind2 = x.second;||| 33 }||| 34 }||| 35 }||| 36 if (mx1 > -1 && mx2 > -1 && mx1 + mx2 > mx) {||| 37 mx = mx1 + mx2;||| 38 ind = {ind1, ind2};||| 39 }||| 40 if (mp.count(src)) {||| 41 if (mx1 > mx) {||| 42 mx = mx1;||| 43 ind = {ind1, src};||| 44 }||| 45 if (mx1 = -1) {||| 46 mx1 = 0, ind1 = src;||| 47 }||| 48 }||| 49 return {mx1, ind1};||| 50 }||| 51 void solve() {||| 52 int n;||| 53 cin >> n;||| 54 vector<int> a(n);||| 55 for (int i = 0; i < n; i++) {||| 56 cin >> a[i];||| 57 mp[a[i]] = i + 1;||| 58 }||| 59 for (auto u : a) {||| 60 for (int i = 30; i >= 0; i--) {||| 61 if ((1 << i) < u) {||| 62 adj[(1 << (i + 1)) - u].insert(u);||| 63 adj[u].insert((1 << (i + 1)) - u);||| 64 u = (1 << (i + 1)) - u;||| 65 }||| 66 }||| 67 if (u == 1) {||| 68 adj[0].insert(1);||| 69 adj[1].insert(0);||| 70 }||| 71 }||| 72 pair<int, int> cur = dfs(0, -1);||| 73 cout << mp[ind.first] << "" "" << mp[ind.second] << "" "" << mx << '\n';||| 74 }||| 75 signed main() {||| 76 ios_base::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 cout.tie(0);||| 79 int testcase = 1;||| 80 while (testcase--) solve();||| 81 return 0;||| 82 }||| "	45 if (mx1 == -1) {
132	244	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int arr[8];||| 5 int test;||| 6 cin >> test;||| 7 int i;||| 8 for (i = 0; i < test; i++) {||| 9 for (int j = 0; j < 7; j++) {||| 10 cin >> arr[j];||| 11 }||| 12 cout << arr[0] << "" "" << arr[1] << "" "" << arr[6] - arr[0] - arr[1] << ""\n"";||| 13 }||| 14 return 0;||| 15 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int arr[8];||| 5 int test;||| 6 cin >> test;||| 7 int i;||| 8 for (i = 0; i < test; i++) {||| 9 for (int j = 0; j < 7; j++) {||| 10 cin >> arr[j];||| 11 }||| 12 cout << arr[0] << "" "" << arr[1] << "" "" << arr[7] - arr[0] - arr[1] << ""\n"";||| 13 }||| 14 return 0;||| 15 }||| "	"12 cout << arr[0] << "" "" << arr[1] << "" "" << arr[6] - arr[0] - arr[1] << ""\n"";"
132	122	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 vector<long long> v(7);||| 8 for (auto &i : v) cin >> i;||| 9 long long a = v[0];||| 10 long long b = v[1];||| 11 long long c = v[5] - v[1];||| 12 cout << a << ' ' << b << ' ' << c << '\n';||| 13 }||| 14 return 0;||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 vector<long long> v(7);||| 8 for (auto &i : v) cin >> i;||| 9 long long a = v[0];||| 10 long long b = v[1];||| 11 long long c = v[5] - v[2];||| 12 cout << a << ' ' << b << ' ' << c << '\n';||| 13 }||| 14 return 0;||| 15 }||| 	11 long long c = v[5] - v[1];
132	40	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[7];||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 while (n--) {||| 8 for (int i = 0; i < 7; i++) {||| 9 cin >> a[i];||| 10 }||| 11 if ((a[6] - a[0]) - a[1] == a[2]) {||| 12 cout << a[0] << ' ' << a[1] << ' ' << a[2] << '\n';||| 13 continue;||| 14 }||| 15 if ((a[6] - a[0]) - a[1] == a[3]) {||| 16 cout << a[0] << ' ' << a[1] << ' ' << a[3] << '\n';||| 17 continue;||| 18 }||| 19 }||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[7];||| 4 int main() {||| 5 int n;||| 6 cin >> n;||| 7 while (n--) {||| 8 for (int i = 0; i <= 7; i++) {||| 9 cin >> a[i];||| 10 }||| 11 if ((a[6] - a[0]) - a[1] == a[2]) {||| 12 cout << a[0] << ' ' << a[1] << ' ' << a[2] << '\n';||| 13 continue;||| 14 }||| 15 if ((a[6] - a[0]) - a[1] == a[3]) {||| 16 cout << a[0] << ' ' << a[1] << ' ' << a[3] << '\n';||| 17 continue;||| 18 }||| 19 }||| 20 }||| 	8 for (int i = 0; i < 7; i++) {
132	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long b[6];||| 5 int n;||| 6 cin >> n;||| 7 long long a1, a2, a3;||| 8 for (int i = 0; i < n; i++) {||| 9 for (int j = 0; j < 7; j++) {||| 10 cin >> b[j];||| 11 }||| 12 a1 = b[0];||| 13 a2 = b[1];||| 14 if (b[2] == b[1] + b[0])||| 15 a3 = b[3];||| 16 else||| 17 a3 = b[2];||| 18 cout << a3 << "" "" << a2 << "" "" << a1;||| 19 if (i != n - 1) cout << ""\n"";||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long b[6];||| 5 int n;||| 6 cin >> n;||| 7 long long a1, a2, a3;||| 8 for (int i = 0; i < n; i++) {||| 9 for (int j = 0; j < 7; j++) {||| 10 cin >> b[j];||| 11 }||| 12 a1 = b[0];||| 13 a2 = b[1];||| 14 if (b[2] = b[1] + b[0])||| 15 a3 = b[3];||| 16 else||| 17 a3 = b[2];||| 18 cout << a3 << "" "" << a2 << "" "" << a1;||| 19 if (i != n - 1) cout << ""\n"";||| 20 }||| 21 return 0;||| 22 }||| "	14 if (b[2] == b[1] + b[0])
132	182	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 char str[3025];||| 5 long long int dp[3025][3025];||| 6 int t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 int arr[100];||| 11 for (int i = 1; i <= 7; i++) {||| 12 cin >> arr[i];||| 13 }||| 14 cout << arr[1] << "" "" << arr[2] << "" "" << (arr[7] - arr[1] - arr[2])||| 15 << ""\n"";||| 16 }||| 17 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 char str[3025];||| 5 long long int dp[3025][3025];||| 6 int t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 int arr[100];||| 11 for (int i = 1; i <= 7; i++) {||| 12 cin >> arr[i];||| 13 }||| 14 cout << arr[1] << "" "" << arr[2] << "" "" << (arr[7] - arr[1] - arr[0])||| 15 << ""\n"";||| 16 }||| 17 }||| "	"14 cout << arr[1] << "" "" << arr[2] << "" "" << (arr[7] - arr[1] - arr[2])"
132	297	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 char str[3025];||| 5 long long int dp[3025][3025];||| 6 int t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 int arr[100];||| 11 for (int i = 1; i <= 7; i++) {||| 12 cin >> arr[i];||| 13 }||| 14 cout << arr[1] << "" "" << arr[2] << "" "" << (arr[7] - arr[1] - arr[2])||| 15 << ""\n"";||| 16 }||| 17 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 char str[3025];||| 5 long long int dp[3025][3025];||| 6 int t;||| 7 int main() {||| 8 cin >> t;||| 9 while (t--) {||| 10 int arr[100];||| 11 for (int i = 1; i <= 7; i++) {||| 12 cin >> arr[0];||| 13 }||| 14 cout << arr[1] << "" "" << arr[2] << "" "" << (arr[7] - arr[1] - arr[0])||| 15 << ""\n"";||| 16 }||| 17 }||| "	12 cin >> arr[i];
132	133	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const long double pi = 2 * acos(0.0);||| 6 const int mod = 1e9 + 7;||| 7 const int maxn = 2e5 + 5;||| 8 void solve() {||| 9 int n = 7;||| 10 int a[n];||| 11 for (int i = 0; i < n; i++) cin >> a[i];||| 12 cout << a[0] << ' ' << a[1] << ' ';||| 13 int c = a[2];||| 14 if (a[0] + a[1] + a[2] == a[6]) {||| 15 cout << a[2] << '\n';||| 16 } else {||| 17 cout << a[3] << '\n';||| 18 }||| 19 return;||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 cin.tie(0);||| 24 int t = 1;||| 25 cin >> t;||| 26 while (t--) {||| 27 solve();||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const long double pi = 2 * acos(0.0);||| 6 const int mod = 1e9 + 7;||| 7 const int maxn = 2e5 + 5;||| 8 void solve() {||| 9 int n = 7;||| 10 int a[n];||| 11 for (int i = 0; i < n; i++) cin >> a[i];||| 12 cout << a[0] << ' ' << a[1] << ' ';||| 13 int c = a[2];||| 14 if (a[0] + a[1] + a[2] == a[7]) {||| 15 cout << a[2] << '\n';||| 16 } else {||| 17 cout << a[3] << '\n';||| 18 }||| 19 return;||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 cin.tie(0);||| 24 int t = 1;||| 25 cin >> t;||| 26 while (t--) {||| 27 solve();||| 28 }||| 29 return 0;||| 30 }||| 	14 if (a[0] + a[1] + a[2] == a[6]) {
133	33	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e4;||| 4 int t, n;||| 5 string s[N];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 cin >> t;||| 11 while (t--) {||| 12 string ans;||| 13 cin >> n;||| 14 n -= 2;||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> s[i];||| 17 }||| 18 ans += s[0][0];||| 19 bool sech = 0;||| 20 for (int i = 0; i < n - 1; ++i) {||| 21 if (s[i][1] != s[i + 1][0]) {||| 22 for (int j = 0; j < n; ++j) {||| 23 if (i + 1 == j) {||| 24 ans += s[j];||| 25 continue;||| 26 }||| 27 ans += s[j][1];||| 28 }||| 29 sech = 1;||| 30 break;||| 31 }||| 32 }||| 33 if (!sech) {||| 34 for (int i = 0; i < n; ++i) {||| 35 ans += s[i][1];||| 36 }||| 37 ans += ""a"";||| 38 }||| 39 cout << ans;||| 40 cout << ""\n"";||| 41 }||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 7;||| 4 int t, n;||| 5 string s[N];||| 6 signed main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 cin >> t;||| 11 while (t--) {||| 12 string ans;||| 13 cin >> n;||| 14 n -= 2;||| 15 for (int i = 0; i < n; ++i) {||| 16 cin >> s[i];||| 17 }||| 18 ans += s[0][0];||| 19 bool sech = 0;||| 20 for (int i = 0; i < n - 1; ++i) {||| 21 if (s[i][1] != s[i + 1][0]) {||| 22 for (int j = 0; j < n; ++j) {||| 23 if (i + 1 == j) {||| 24 ans += s[j];||| 25 continue;||| 26 }||| 27 ans += s[j][1];||| 28 }||| 29 sech = 1;||| 30 break;||| 31 }||| 32 }||| 33 if (!sech) {||| 34 for (int i = 0; i < n; ++i) {||| 35 ans += s[i][1];||| 36 }||| 37 ans += ""aa"";||| 38 }||| 39 cout << ans;||| 40 cout << ""\n"";||| 41 }||| 42 return 0;||| 43 }||| "	3 const int N = 1e4;
133	16	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 int n, i, j = 0;||| 7 scanf(""%d "", &n);||| 8 char s[2 * n + n], q[2 * n + n];||| 9 gets(s);||| 10 for (i = 0; s[i] != '\0'; i++) {||| 11 if (s[i] != ' ') {||| 12 q[j++] = s[i];||| 13 }||| 14 }||| 15 q[j] = '\0';||| 16 int f = 0;||| 17 printf(""%c"", q[0]);||| 18 for (i = 2; i < strlen(q) - 1; i = i + 2) {||| 19 if (q[i] != q[i - 1]) {||| 20 printf(""%c%c"", q[i - 1], q[i]);||| 21 f = 1;||| 22 } else {||| 23 printf(""%c"", q[i]);||| 24 }||| 25 }||| 26 if (f == 1) printf(""%c\n"", q[strlen(q) - 1]);||| 27 if (f == 0) {||| 28 printf(""%ca\n"", q[strlen(q) - 1]);||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 int n, i, j = 0;||| 7 scanf(""%d "", &n);||| 8 char s[2 * n + n], q[2 * n + n];||| 9 gets(s);||| 10 for (i = 0; s[i] != '\0'; i++) {||| 11 if (s[i] != ' ') {||| 12 q[j++] = s[i];||| 13 }||| 14 }||| 15 q[i] = '\0';||| 16 int f = 0;||| 17 printf(""%c"", q[0]);||| 18 for (i = 2; i < strlen(q) - 1; i = i + 2) {||| 19 if (q[i] != q[i - 1]) {||| 20 printf(""%c%c"", q[i - 1], q[i]);||| 21 f = 1;||| 22 } else {||| 23 printf(""%c"", q[i]);||| 24 }||| 25 }||| 26 if (f == 1) printf(""%c\n"", q[strlen(q) - 1]);||| 27 if (f == 0) {||| 28 printf(""%ca\n"", q[strlen(q) - 2]);||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	15 q[j] = '\0';
133	244	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 int n, i, j = 0;||| 7 scanf(""%d "", &n);||| 8 char s[2 * n + n], q[2 * n + n];||| 9 gets(s);||| 10 for (i = 0; s[i] != '\0'; i++) {||| 11 if (s[i] != ' ') {||| 12 q[j++] = s[i];||| 13 }||| 14 }||| 15 q[j] = '\0';||| 16 int f = 0;||| 17 printf(""%c"", q[0]);||| 18 for (i = 2; i < strlen(q) - 1; i = i + 2) {||| 19 if (q[i] != q[i - 1]) {||| 20 printf(""%c%c"", q[i - 1], q[i]);||| 21 f = 1;||| 22 } else {||| 23 printf(""%c"", q[i]);||| 24 }||| 25 }||| 26 if (f == 1) printf(""%c\n"", q[strlen(q) - 1]);||| 27 if (f == 0) {||| 28 printf(""%ca\n"", q[strlen(q) - 1]);||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 int n, i, j = 0;||| 7 scanf(""%d "", &n);||| 8 char s[2 * n + n], q[2 * n + n];||| 9 gets(s);||| 10 for (i = 0; s[i] != '\0'; i++) {||| 11 if (s[i] != ' ') {||| 12 q[j++] = s[i];||| 13 }||| 14 }||| 15 q[i] = '\0';||| 16 int f = 0;||| 17 printf(""%c"", q[0]);||| 18 for (i = 2; i < strlen(q) - 1; i = i + 2) {||| 19 if (q[i] != q[i - 1]) {||| 20 printf(""%c%c"", q[i - 1], q[i]);||| 21 f = 1;||| 22 } else {||| 23 printf(""%c"", q[i]);||| 24 }||| 25 }||| 26 if (f == 1) printf(""%c\n"", q[strlen(q) - 1]);||| 27 if (f == 0) {||| 28 printf(""%ca\n"", q[strlen(q) - 1]);||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	15 q[j] = '\0';
134	202	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long __gcd(long long a, long long b) {||| 4 long long r;||| 5 while (b > 0) {||| 6 r = a % b;||| 7 a = b;||| 8 b = r;||| 9 }||| 10 return a;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 long long a[101];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long x = 0, y = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (i % 2 == 0)||| 23 x = __gcd(x, a[i]);||| 24 else||| 25 y = __gcd(y, a[i]);||| 26 }||| 27 int sum1 = 1, sum2 = 1;||| 28 for (int i = 0; i < n; i++) {||| 29 if (i % 2 == 0 && a[i] % y == 0) sum1 = 0;||| 30 if (i % 2 == 1 && a[i] % x == 0) sum2 = 0;||| 31 }||| 32 if (sum2)||| 33 cout << x << endl;||| 34 else if (sum1)||| 35 cout << y << endl;||| 36 else||| 37 cout << 0 << endl;||| 38 }||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long __gcd(long long a, long long b) {||| 4 int r;||| 5 while (b > 0) {||| 6 r = a % b;||| 7 a = b;||| 8 b = r;||| 9 }||| 10 return a;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 long long a[101];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long x = 0, y = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (i % 2 == 0)||| 23 x = __gcd(x, a[i]);||| 24 else||| 25 y = __gcd(y, a[i]);||| 26 }||| 27 int sum1 = 1, sum2 = 1;||| 28 for (int i = 0; i < n; i++) {||| 29 if (i % 2 == 0 && a[i] % y == 0) sum1 = 0;||| 30 if (i % 2 == 1 && a[i] % x == 0) sum2 = 0;||| 31 }||| 32 if (sum2)||| 33 cout << x << endl;||| 34 else if (sum1)||| 35 cout << y << endl;||| 36 else||| 37 cout << 0 << endl;||| 38 }||| 39 }||| 	4 long long r;
134	254	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long __gcd(long long a, long long b) {||| 4 long long r;||| 5 while (b > 0) {||| 6 r = a % b;||| 7 a = b;||| 8 b = r;||| 9 }||| 10 return a;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 long long a[101];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long x = 0, y = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (i % 2 == 0)||| 23 x = __gcd(x, a[i]);||| 24 else||| 25 y = __gcd(y, a[i]);||| 26 }||| 27 int sum1 = 1, sum2 = 1;||| 28 for (int i = 0; i < n; i++) {||| 29 if (i % 2 == 0 && a[i] % y == 0) sum1 = 0;||| 30 if (i % 2 == 1 && a[i] % x == 0) sum2 = 0;||| 31 }||| 32 if (sum2)||| 33 cout << x << endl;||| 34 else if (sum1)||| 35 cout << y << endl;||| 36 else||| 37 cout << 0 << endl;||| 38 }||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long __gcd(long long a, long long b) {||| 4 int r;||| 5 while (b > 0) {||| 6 r = a % b;||| 7 a = b;||| 8 b = r;||| 9 }||| 10 return a;||| 11 }||| 12 int main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 long long a[100];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long x = 0, y = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 if (i % 2 == 0)||| 23 x = __gcd(x, a[i]);||| 24 else||| 25 y = __gcd(y, a[i]);||| 26 }||| 27 int sum1 = 1, sum2 = 1;||| 28 for (int i = 0; i < n; i++) {||| 29 if (i % 2 == 0 && a[i] % y == 0) sum1 = 0;||| 30 if (i % 2 == 1 && a[i] % x == 0) sum2 = 0;||| 31 }||| 32 if (sum2)||| 33 cout << x << endl;||| 34 else if (sum1)||| 35 cout << y << endl;||| 36 else||| 37 cout << 0 << endl;||| 38 }||| 39 }||| 	4 long long r;
134	151	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd(time(0));||| 4 template <class T>||| 5 long long upmax(T &a, T b) {||| 6 return (b > a) ? a = b, 1 : 0;||| 7 }||| 8 template <class T>||| 9 long long upmin(T &a, T b) {||| 10 return (b < a) ? a = b, 1 : 0;||| 11 }||| 12 long long gcd(long long a, long long b) {||| 13 if (a == 0) return b;||| 14 return gcd(b % a, a);||| 15 }||| 16 void solve() {||| 17 int n;||| 18 cin >> n;||| 19 vector<long long> arr(n);||| 20 for (auto &i : arr) cin >> i;||| 21 long long g[2];||| 22 memset(g, -1, sizeof(g));||| 23 for (int i = 0; i < n; i++) {||| 24 if (g[i % 2] == -1)||| 25 g[i % 2] = arr[i];||| 26 else||| 27 g[i % 2] = gcd(g[i % 2], arr[i]);||| 28 }||| 29 auto ok = [&](long long d) {||| 30 int color = -1;||| 31 for (int i = 0; i < n; i++) {||| 32 if (arr[i] % d == 0) {||| 33 if (color == 0) {||| 34 return 0;||| 35 }||| 36 color = 0;||| 37 } else {||| 38 if (color == 1) {||| 39 return 0;||| 40 }||| 41 color = 1;||| 42 }||| 43 }||| 44 return 1;||| 45 };||| 46 if (ok(g[0])) {||| 47 cout << g[0] << '\n';||| 48 } else if (ok(g[1])) {||| 49 cout << g[1] << '\n';||| 50 } else {||| 51 cout << 0 << '\n';||| 52 }||| 53 }||| 54 signed main() {||| 55 ios_base::sync_with_stdio(0);||| 56 cin.tie(0);||| 57 cout.tie(0);||| 58 int t = 1;||| 59 cin >> t;||| 60 while (t-- > 0) {||| 61 solve();||| 62 }||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd(time(0));||| 4 template <class T>||| 5 long long upmax(T &a, T b) {||| 6 return (b > a) ? a = b, 1 : 0;||| 7 }||| 8 template <class T>||| 9 long long upmin(T &a, T b) {||| 10 return (b < a) ? a = b, 1 : 0;||| 11 }||| 12 long long gcd(long long a, long long b) {||| 13 if (a == 0) return b;||| 14 return gcd(b % a, a);||| 15 }||| 16 void solve() {||| 17 int n;||| 18 cin >> n;||| 19 vector<long long> arr(n);||| 20 for (auto &i : arr) cin >> i;||| 21 long long g[2];||| 22 memset(g, -1, sizeof(g));||| 23 for (int i = 0; i < n; i++) {||| 24 if (g[i % 2] == -1)||| 25 g[i % 2] = arr[i];||| 26 else||| 27 g[i % 2] = gcd(g[i % 2], arr[i]);||| 28 }||| 29 auto ok = [&](int d) {||| 30 int color = -1;||| 31 for (int i = 0; i < n; i++) {||| 32 if (arr[i] % d == 0) {||| 33 if (color == 0) {||| 34 return 0;||| 35 }||| 36 color = 0;||| 37 } else {||| 38 if (color == 1) {||| 39 return 0;||| 40 }||| 41 color = 1;||| 42 }||| 43 }||| 44 return 1;||| 45 };||| 46 if (ok(g[0])) {||| 47 cout << g[0] << '\n';||| 48 } else if (ok(g[1])) {||| 49 cout << g[1] << '\n';||| 50 } else {||| 51 cout << 0 << '\n';||| 52 }||| 53 }||| 54 signed main() {||| 55 ios_base::sync_with_stdio(0);||| 56 cin.tie(0);||| 57 cout.tie(0);||| 58 int t = 1;||| 59 cin >> t;||| 60 while (t-- > 0) {||| 61 solve();||| 62 }||| 63 return 0;||| 64 }||| 	29 auto ok = [&](long long d) {
134	181	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 if (a == 0) return b;||| 5 return gcd(b % a, a);||| 6 }||| 7 int main() {||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 long long int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 long long int arr[2];||| 16 long long int x = 0, y = 0;||| 17 for (int i = 0; i < n; i += 2) {||| 18 x = gcd(x, a[i]);||| 19 }||| 20 arr[0] = x;||| 21 for (int i = 1; i < n; i += 2) {||| 22 y = gcd(y, a[i]);||| 23 }||| 24 arr[1] = y;||| 25 int count;||| 26 bool isans = false;||| 27 for (int i = 0; i < 2; i++) {||| 28 int flag = 0;||| 29 if (a[0] % arr[i] == 0)||| 30 count = 0;||| 31 else||| 32 count = 1;||| 33 for (int j = 1; j < n; j++) {||| 34 if (count == 0 && a[j] % arr[i] != 0) {||| 35 count = 1;||| 36 } else if (count == 1 && a[j] % arr[i] == 0) {||| 37 count = 0;||| 38 } else {||| 39 flag = 1;||| 40 break;||| 41 }||| 42 }||| 43 if (flag == 0) {||| 44 cout << arr[i] << endl;||| 45 isans = true;||| 46 break;||| 47 }||| 48 }||| 49 if (isans == false) cout << 0 << endl;||| 50 }||| 51 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int gcd(long long int a, long long int b) {||| 4 if (a == 0) return b;||| 5 return gcd(b % a, a);||| 6 }||| 7 int main() {||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 long long int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 int arr[2];||| 16 long long int x = 0, y = 0;||| 17 for (int i = 0; i < n; i += 2) {||| 18 x = gcd(x, a[i]);||| 19 }||| 20 arr[0] = x;||| 21 for (int i = 1; i < n; i += 2) {||| 22 y = gcd(y, a[i]);||| 23 }||| 24 arr[1] = y;||| 25 int count;||| 26 bool isans = false;||| 27 for (int i = 0; i < 2; i++) {||| 28 int flag = 0;||| 29 if (a[0] % arr[i] == 0)||| 30 count = 0;||| 31 else||| 32 count = 1;||| 33 for (int j = 1; j < n; j++) {||| 34 if (count == 0 && a[j] % arr[i] != 0) {||| 35 count = 1;||| 36 } else if (count == 1 && a[j] % arr[i] == 0) {||| 37 count = 0;||| 38 } else {||| 39 flag = 1;||| 40 break;||| 41 }||| 42 }||| 43 if (flag == 0) {||| 44 cout << arr[i] << endl;||| 45 isans = true;||| 46 break;||| 47 }||| 48 }||| 49 if (isans == false) cout << 0 << endl;||| 50 }||| 51 }||| 	15 long long int arr[2];
135	15	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 long long int t;||| 7 cin >> t;||| 8 for (long long int k = 1; k <= t; k++) {||| 9 int n, w;||| 10 cin >> n >> w;||| 11 int arr[n];||| 12 for (int i = 0; i < n; i++) cin >> arr[i];||| 13 sort(arr, arr + n);||| 14 long long sum = 0;||| 15 for (int i = n - 1; i >= n - w; i--) {||| 16 sum += arr[i - w] / arr[i];||| 17 }||| 18 for (int i = n - 2 * w - 1; i >= 0; i--) sum += arr[i];||| 19 cout << sum << endl;||| 20 }||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 long long int t;||| 7 cin >> t;||| 8 for (long long int k = 1; k <= t; k++) {||| 9 int n, w;||| 10 cin >> n >> k;||| 11 int arr[n];||| 12 for (int i = 0; i < n; i++) cin >> arr[i];||| 13 sort(arr, arr + n);||| 14 long long sum = 0;||| 15 for (int i = n - 1; i >= n - w; i--) {||| 16 sum += arr[i - w] / arr[i];||| 17 }||| 18 for (int i = n - 2 * w - 1; i >= 0; i--) sum += arr[i];||| 19 cout << sum << endl;||| 20 }||| 21 }||| 	10 cin >> n >> w;
135	257	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long lcm(long long a, long long b) { return (a / gcd(a, b) * b); }||| 8 bool sorta(const pair<int, int> &a, const pair<int, int> &b) {||| 9 return (a.second < b.second);||| 10 }||| 11 bool sortd(const pair<int, int> &a, const pair<int, int> &b) {||| 12 return (a.second > b.second);||| 13 }||| 14 void printarr(long long arr[], long long n) {||| 15 for (int i = 0; i < n; i++) cout << arr[i] << ' ';||| 16 cout << ' ';||| 17 }||| 18 void printvec(vector<long long> arr, long long n) {||| 19 for (int i = 0; i < n; i++) cout << arr[i] << ' ';||| 20 cout << ' ';||| 21 }||| 22 long long binaryToDecimal(string n) {||| 23 string num = n;||| 24 long long dec_value = 0;||| 25 int base = 1;||| 26 int len = num.length();||| 27 for (int i = len - 1; i >= 0; i--) {||| 28 if (num[i] == '1') dec_value += base;||| 29 base = base * 2;||| 30 }||| 31 return dec_value;||| 32 }||| 33 bool isPrime(long long n) {||| 34 if (n <= 1) return false;||| 35 if (n <= 3) return true;||| 36 if (n % 2 == 0 || n % 3 == 0) return false;||| 37 for (int i = 5; i * i <= n; i = i + 6)||| 38 if (n % i == 0 || n % (i + 2) == 0) return false;||| 39 return true;||| 40 }||| 41 bool isPowerOfTwo(int n) {||| 42 if (n == 0) return false;||| 43 return (ceil(log2(n)) == floor(log2(n)));||| 44 }||| 45 bool isPerfectSquare(long long x) {||| 46 if (x >= 0) {||| 47 long long sr = sqrt(x);||| 48 return (sr * sr == x);||| 49 }||| 50 return false;||| 51 }||| 52 long long moduloMultiplication(long long a, long long b, long long mod) {||| 53 long long res = 0;||| 54 a %= mod;||| 55 while (b) {||| 56 if (b & 1) res = (res + a) % mod;||| 57 b >>= 1;||| 58 }||| 59 return res;||| 60 }||| 61 long long powermod(long long x, long long y, long long p) {||| 62 long long res = 1;||| 63 x = x % p;||| 64 if (x == 0) return 0;||| 65 while (y > 0) {||| 66 if (y & 1) res = (res * x) % p;||| 67 y = y >> 1;||| 68 x = (x * x) % p;||| 69 }||| 70 return res;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false);||| 74 cin.tie(NULL);||| 75 cout.tie(NULL);||| 76 long long t;||| 77 cin >> t;||| 78 while (t--) {||| 79 long long n, k;||| 80 cin >> n >> k;||| 81 vector<long long> v(n);||| 82 long long res = 0;||| 83 for (long long &e : v) {||| 84 cin >> e;||| 85 }||| 86 sort(v.begin(), v.end());||| 87 long long start = n - (2 * k);||| 88 long long count = 1;||| 89 long long i = n - 1;||| 90 while (count <= k) {||| 91 res += v[i - k] / v[i];||| 92 count++;||| 93 i--;||| 94 }||| 95 for (long long i = 0; i < start; i++) {||| 96 res += v[i];||| 97 }||| 98 cout << res << endl;||| 99 }||| 100 return 0;||| 101 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long lcm(long long a, long long b) { return (a / gcd(a, b) * b); }||| 8 bool sorta(const pair<int, int> &a, const pair<int, int> &b) {||| 9 return (a.second < b.second);||| 10 }||| 11 bool sortd(const pair<int, int> &a, const pair<int, int> &b) {||| 12 return (a.second > b.second);||| 13 }||| 14 void printarr(long long arr[], long long n) {||| 15 for (int i = 0; i < n; i++) cout << arr[i] << ' ';||| 16 cout << ' ';||| 17 }||| 18 void printvec(vector<long long> arr, long long n) {||| 19 for (int i = 0; i < n; i++) cout << arr[i] << ' ';||| 20 cout << ' ';||| 21 }||| 22 long long binaryToDecimal(string n) {||| 23 string num = n;||| 24 long long dec_value = 0;||| 25 int base = 1;||| 26 int len = num.length();||| 27 for (int i = len - 1; i >= 0; i--) {||| 28 if (num[i] == '1') dec_value += base;||| 29 base = base * 2;||| 30 }||| 31 return dec_value;||| 32 }||| 33 bool isPrime(long long n) {||| 34 if (n <= 1) return false;||| 35 if (n <= 3) return true;||| 36 if (n % 2 == 0 || n % 3 == 0) return false;||| 37 for (int i = 5; i * i <= n; i = i + 6)||| 38 if (n % i == 0 || n % (i + 2) == 0) return false;||| 39 return true;||| 40 }||| 41 bool isPowerOfTwo(int n) {||| 42 if (n == 0) return false;||| 43 return (ceil(log2(n)) == floor(log2(n)));||| 44 }||| 45 bool isPerfectSquare(long long x) {||| 46 if (x >= 0) {||| 47 long long sr = sqrt(x);||| 48 return (sr * sr == x);||| 49 }||| 50 return false;||| 51 }||| 52 long long moduloMultiplication(long long a, long long b, long long mod) {||| 53 long long res = 0;||| 54 a %= mod;||| 55 while (b) {||| 56 if (b & 1) res = (res + a) % mod;||| 57 b >>= 1;||| 58 }||| 59 return res;||| 60 }||| 61 long long powermod(long long x, long long y, long long p) {||| 62 long long res = 1;||| 63 x = x % p;||| 64 if (x == 0) return 0;||| 65 while (y > 0) {||| 66 if (y & 1) res = (res * x) % p;||| 67 y = y >> 1;||| 68 x = (x * x) % p;||| 69 }||| 70 return res;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false);||| 74 cin.tie(NULL);||| 75 cout.tie(NULL);||| 76 long long t;||| 77 cin >> t;||| 78 while (t--) {||| 79 long long n, k;||| 80 cin >> n >> k;||| 81 vector<long long> v(n);||| 82 long long res = 0;||| 83 for (long long &e : v) {||| 84 cin >> e;||| 85 }||| 86 sort(v.begin(), v.end());||| 87 long long start = n - (2 * k);||| 88 long long count = 1;||| 89 long long i = n - 1;||| 90 while (count <= k) {||| 91 res += v[i - 2] / v[i];||| 92 count++;||| 93 i--;||| 94 }||| 95 for (long long i = 0; i < start; i++) {||| 96 res += v[i];||| 97 }||| 98 cout << res << endl;||| 99 }||| 100 return 0;||| 101 }||| 	91 res += v[i - k] / v[i];
136	356	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long MAX = 1e9 + 7;||| 4 void fast() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 }||| 9 int gcd(int a, int b) {||| 10 if (a == 0) return b;||| 11 if (b == 0) return a;||| 12 if (a == b) return a;||| 13 if (a > b) return gcd(a - b, b);||| 14 return gcd(a, b - a);||| 15 }||| 16 long long powM(long long x, long long y, long long m) {||| 17 long long ans = 1, r = 1;||| 18 x = x % m;||| 19 while (r > 0 && r <= y) {||| 20 if (r & y) {||| 21 ans = ans * x;||| 22 ans = ans % m;||| 23 }||| 24 r = r << 1;||| 25 x = x * x;||| 26 x = x % m;||| 27 }||| 28 ans = ans % m;||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 long long t;||| 36 cin >> t;||| 37 for (long long T = 0; T < t; T++) {||| 38 long long n;||| 39 cin >> n;||| 40 long long b[n];||| 41 for (long long i = 0; i < n; i++) cin >> b[i];||| 42 long long a[n];||| 43 long long sum = 0;||| 44 for (long long i = 0; i < n; i++) {||| 45 sum += b[i];||| 46 }||| 47 bool imp = 0;||| 48 if ((sum) % (n * (n + 1) / 2) == 0)||| 49 sum = (2 * sum) / (n * (n + 1));||| 50 else {||| 51 imp = 1;||| 52 }||| 53 if (!imp) {||| 54 for (long long i = 0; i < n; i++) {||| 55 if ((b[(i - 1 + n) % n] - b[i % n] + sum) % n == 0)||| 56 a[i] = (b[(i - 1 + n) % n] - b[i % n] + sum) / n;||| 57 else {||| 58 imp = 1;||| 59 break;||| 60 }||| 61 if (a[i] < 1 || a[i] > 1000000000) {||| 62 imp = 1;||| 63 break;||| 64 }||| 65 }||| 66 }||| 67 if (imp) {||| 68 cout << ""NO"" << endl;||| 69 goto done;||| 70 } else {||| 71 cout << ""YES"" << endl;||| 72 }||| 73 for (long long i = 0; i < n; i++) {||| 74 cout << a[i] << "" "";||| 75 }||| 76 cout << endl;||| 77 done:;||| 78 }||| 79 return (0);||| 80 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long MAX = 1e9 + 7;||| 4 void fast() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 cout.tie(NULL);||| 8 }||| 9 int gcd(int a, int b) {||| 10 if (a == 0) return b;||| 11 if (b == 0) return a;||| 12 if (a == b) return a;||| 13 if (a > b) return gcd(a - b, b);||| 14 return gcd(a, b - a);||| 15 }||| 16 long long powM(long long x, long long y, long long m) {||| 17 long long ans = 1, r = 1;||| 18 x = x % m;||| 19 while (r > 0 && r <= y) {||| 20 if (r & y) {||| 21 ans = ans * x;||| 22 ans = ans % m;||| 23 }||| 24 r = r << 1;||| 25 x = x * x;||| 26 x = x % m;||| 27 }||| 28 ans = ans % m;||| 29 return ans;||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(0);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 long long t;||| 36 cin >> t;||| 37 for (long long T = 0; T < t; T++) {||| 38 long long n;||| 39 cin >> n;||| 40 long long b[n];||| 41 for (long long i = 0; i < n; i++) cin >> b[i];||| 42 long long a[n];||| 43 long long sum = 0;||| 44 for (long long i = 0; i < n; i++) {||| 45 sum += b[i];||| 46 }||| 47 bool imp = 0;||| 48 if ((sum) % (n * (n + 1) / 2) == 0)||| 49 sum = (2 * sum) / (n * (n + 1));||| 50 else {||| 51 imp = 1;||| 52 break;||| 53 }||| 54 if (!imp) {||| 55 for (long long i = 0; i < n; i++) {||| 56 if ((b[(i - 1 + n) % n] - b[i % n] + sum) % n == 0)||| 57 a[i] = (b[(i - 1 + n) % n] - b[i % n] + sum) / n;||| 58 else {||| 59 imp = 1;||| 60 break;||| 61 }||| 62 if (a[i] < 1 || a[i] > 1000000000) {||| 63 imp = 1;||| 64 break;||| 65 }||| 66 }||| 67 }||| 68 if (imp) {||| 69 cout << ""NO"" << endl;||| 70 goto done;||| 71 } else {||| 72 cout << ""YES"" << endl;||| 73 }||| 74 for (long long i = 0; i < n; i++) {||| 75 cout << a[i] << "" "";||| 76 }||| 77 cout << endl;||| 78 done:;||| 79 }||| 80 return (0);||| 81 }||| "	52 
136	162	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 2e3 + 100;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 int32_t main() {||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 long long t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long n;||| 19 cin >> n;||| 20 vector<long long> a(n);||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 cin >> a[i];||| 24 sum += a[i];||| 25 }||| 26 long long k = n * (n + 1) / 2;||| 27 if (sum % k) {||| 28 cout << ""NO"" << '\n';||| 29 continue;||| 30 }||| 31 long long s = sum / k;||| 32 vector<long long> v(n);||| 33 bool ok = 1;||| 34 for (long long i = 0; i < n && ok; ++i) {||| 35 long long j = i - 1;||| 36 if (j < 0) j = n - 1;||| 37 long long x = a[i] - a[j] - s;||| 38 x = -x;||| 39 if (x % n || x / n <= 0)||| 40 ok = 0;||| 41 else||| 42 v[i] = x / n;||| 43 }||| 44 if (!ok) {||| 45 cout << ""NO"" << '\n';||| 46 continue;||| 47 }||| 48 cout << ""YES\n"";||| 49 for (auto to : v) cout << to << ' ';||| 50 cout << '\n';||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 2e3 + 100;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 int32_t main() {||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 long long t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long n;||| 19 cin >> n;||| 20 vector<long long> a(n);||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 cin >> a[i];||| 24 sum += a[i];||| 25 }||| 26 long long k = n * (n + 1) / 2;||| 27 if (sum % k) {||| 28 cout << ""NO"" << '\n';||| 29 continue;||| 30 }||| 31 long long s = sum / k;||| 32 vector<long long> v(n);||| 33 bool ok = 1;||| 34 for (long long i = 0; i < n && ok; ++i) {||| 35 long long j = i - 1;||| 36 if (j < 0) j = n - 1;||| 37 long long x = a[i] - a[j] - s;||| 38 x = -x;||| 39 if (x % n || x / n == 0)||| 40 ok = 0;||| 41 else||| 42 v[i] = x / n;||| 43 }||| 44 if (!ok) {||| 45 cout << ""NO"" << '\n';||| 46 continue;||| 47 }||| 48 cout << ""YES\n"";||| 49 for (auto to : v) cout << to << ' ';||| 50 cout << '\n';||| 51 }||| 52 return 0;||| 53 }||| "	39 if (x % n || x / n <= 0)
136	121	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const long long int mod = 1e9 + 7;||| 5 const long long int modd = 998244353;||| 6 void __print(int x) { cerr << x; }||| 7 void __print(long x) { cerr << x; }||| 8 void __print(long long x) { cerr << x; }||| 9 void __print(unsigned x) { cerr << x; }||| 10 void __print(unsigned long x) { cerr << x; }||| 11 void __print(unsigned long long x) { cerr << x; }||| 12 void __print(float x) { cerr << x; }||| 13 void __print(double x) { cerr << x; }||| 14 void __print(long double x) { cerr << x; }||| 15 void __print(char x) { cerr << '\'' << x << '\''; }||| 16 void __print(const char* x) { cerr << '\""' << x << '\""'; }||| 17 void __print(const string& x) { cerr << '\""' << x << '\""'; }||| 18 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 19 template <typename T, typename V>||| 20 void __print(const pair<T, V>& x) {||| 21 cerr << '{';||| 22 __print(x.first);||| 23 cerr << ',';||| 24 __print(x.second);||| 25 cerr << '}';||| 26 }||| 27 template <typename T>||| 28 void __print(const T& x) {||| 29 int f = 0;||| 30 cerr << '{';||| 31 for (auto& i : x) cerr << (f++ ? "","" : """"), __print(i);||| 32 cerr << ""}"";||| 33 }||| 34 void _print() { cerr << ""]\n""; }||| 35 template <typename T, typename... V>||| 36 void _print(T t, V... v) {||| 37 __print(t);||| 38 if (sizeof...(v)) cerr << "", "";||| 39 _print(v...);||| 40 }||| 41 template <typename T>||| 42 void print(vector<T> v) {||| 43 for (T i : v) cout << i << "" "";||| 44 cout << '\n';||| 45 }||| 46 template <typename T>||| 47 void print(vector<vector<T>>& v) {||| 48 for (vector<T>& vv : v) {||| 49 for (T& i : vv) cout << i << "" "";||| 50 cout << '\n';||| 51 }||| 52 }||| 53 template <typename T>||| 54 void read(vector<T>& v) {||| 55 for (T& i : v) cin >> i;||| 56 }||| 57 template <typename T>||| 58 void read(T&& t) {||| 59 cin >> t;||| 60 }||| 61 template <typename T, typename... Args>||| 62 void read(T&& t, Args&&... args) {||| 63 cin >> t;||| 64 read(forward<Args>(args)...);||| 65 }||| 66 template <typename T>||| 67 void print(T&& t) {||| 68 cout << t << '\n';||| 69 }||| 70 template <typename T, typename... Args>||| 71 void print(T&& t, Args&&... args) {||| 72 cout << t << "" "";||| 73 print(forward<Args>(args)...);||| 74 }||| 75 int main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(nullptr);||| 78 ;||| 79 int t;||| 80 cin >> t;||| 81 while (t--) {||| 82 ll n;||| 83 cin >> n;||| 84 vector<ll> arr(n);||| 85 ll sum = 0;||| 86 for (ll i = 0; i < n; i++) {||| 87 cin >> arr[i];||| 88 sum += arr[i];||| 89 }||| 90 ll val = (n * (n + 1)) / 2;||| 91 if (sum % val) {||| 92 print(""NO"");||| 93 continue;||| 94 }||| 95 ll can = 1;||| 96 vector<ll> ans(n, 0);||| 97 for (ll i = 0; i < n; i++) {||| 98 ll diff = (sum / val) - (arr[(i + 1) % n] - arr[i]);||| 99 ;||| 100 if (diff % n or diff <= 0) {||| 101 can = 0;||| 102 break;||| 103 }||| 104 ans[(i + 1) % n] = diff / n;||| 105 }||| 106 if (can) {||| 107 print(""YES"");||| 108 print(ans);||| 109 } else {||| 110 print(""NO"");||| 111 }||| 112 }||| 113 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const long long int mod = 1e9 + 7;||| 5 const long long int modd = 998244353;||| 6 void __print(int x) { cerr << x; }||| 7 void __print(long x) { cerr << x; }||| 8 void __print(long long x) { cerr << x; }||| 9 void __print(unsigned x) { cerr << x; }||| 10 void __print(unsigned long x) { cerr << x; }||| 11 void __print(unsigned long long x) { cerr << x; }||| 12 void __print(float x) { cerr << x; }||| 13 void __print(double x) { cerr << x; }||| 14 void __print(long double x) { cerr << x; }||| 15 void __print(char x) { cerr << '\'' << x << '\''; }||| 16 void __print(const char* x) { cerr << '\""' << x << '\""'; }||| 17 void __print(const string& x) { cerr << '\""' << x << '\""'; }||| 18 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 19 template <typename T, typename V>||| 20 void __print(const pair<T, V>& x) {||| 21 cerr << '{';||| 22 __print(x.first);||| 23 cerr << ',';||| 24 __print(x.second);||| 25 cerr << '}';||| 26 }||| 27 template <typename T>||| 28 void __print(const T& x) {||| 29 int f = 0;||| 30 cerr << '{';||| 31 for (auto& i : x) cerr << (f++ ? "","" : """"), __print(i);||| 32 cerr << ""}"";||| 33 }||| 34 void _print() { cerr << ""]\n""; }||| 35 template <typename T, typename... V>||| 36 void _print(T t, V... v) {||| 37 __print(t);||| 38 if (sizeof...(v)) cerr << "", "";||| 39 _print(v...);||| 40 }||| 41 template <typename T>||| 42 void print(vector<T> v) {||| 43 for (T i : v) cout << i << "" "";||| 44 cout << '\n';||| 45 }||| 46 template <typename T>||| 47 void print(vector<vector<T>>& v) {||| 48 for (vector<T>& vv : v) {||| 49 for (T& i : vv) cout << i << "" "";||| 50 cout << '\n';||| 51 }||| 52 }||| 53 template <typename T>||| 54 void read(vector<T>& v) {||| 55 for (T& i : v) cin >> i;||| 56 }||| 57 template <typename T>||| 58 void read(T&& t) {||| 59 cin >> t;||| 60 }||| 61 template <typename T, typename... Args>||| 62 void read(T&& t, Args&&... args) {||| 63 cin >> t;||| 64 read(forward<Args>(args)...);||| 65 }||| 66 template <typename T>||| 67 void print(T&& t) {||| 68 cout << t << '\n';||| 69 }||| 70 template <typename T, typename... Args>||| 71 void print(T&& t, Args&&... args) {||| 72 cout << t << "" "";||| 73 print(forward<Args>(args)...);||| 74 }||| 75 int main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(nullptr);||| 78 ;||| 79 int t;||| 80 cin >> t;||| 81 while (t--) {||| 82 ll n;||| 83 cin >> n;||| 84 vector<ll> arr(n);||| 85 ll sum = 0;||| 86 for (ll i = 0; i < n; i++) {||| 87 cin >> arr[i];||| 88 sum += arr[i];||| 89 }||| 90 ll val = (n * (n + 1)) / 2;||| 91 if (sum % val) {||| 92 print(""NO"");||| 93 continue;||| 94 }||| 95 ll can = 1;||| 96 vector<ll> ans(n, 0);||| 97 for (ll i = 0; i < n; i++) {||| 98 ll diff = (sum / val) - (arr[(i + 1) % n] - arr[i]);||| 99 ;||| 100 if (diff % n or diff == 0) {||| 101 can = 0;||| 102 break;||| 103 }||| 104 ans[(i + 1) % n] = diff / n;||| 105 }||| 106 if (can) {||| 107 print(""YES"");||| 108 print(ans);||| 109 } else {||| 110 print(""NO"");||| 111 }||| 112 }||| 113 }||| "	100 if (diff % n or diff <= 0) {
136	307	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 i64 n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<int> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x <= 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 int n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<int> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x == 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	5 i64 n;
136	365	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 i64 n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<int> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x <= 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 i64 n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<int> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x == 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	20 if (x <= 0 || x % n != 0) {
136	381	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 i64 n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<int> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x <= 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using i64 = long long;||| 4 void Solve() {||| 5 i64 n;||| 6 cin >> n;||| 7 vector<int> b(n);||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 }||| 11 i64 sum = accumulate(b.begin(), b.end(), 0ll);||| 12 if (sum % (n * (n + 1) / 2) != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 i64 c = sum / (n * (n + 1) / 2);||| 17 vector<i64> a(n);||| 18 for (int i = 0; i < n; i++) {||| 19 i64 x = c - b[i] + b[(i - 1 + n) % n];||| 20 if (x == 0 || x % n != 0) {||| 21 cout << ""NO\n"";||| 22 return;||| 23 }||| 24 a[i] = x / n;||| 25 }||| 26 cout << ""YES\n"";||| 27 for (int i = 0; i < n; i++) {||| 28 cout << a[i] << ' ';||| 29 }||| 30 cout << '\n';||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(nullptr);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) {||| 38 Solve();||| 39 }||| 40 }||| "	17 vector<int> a(n);
136	320	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int a[500005], b[500005], c[500005], d[500005];||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 long long int t, i, j, k, n, m, w, y, z, x, l, r, k1, k2;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 x = 0;||| 12 for (i = 1; i <= n; i++) cin >> b[i], x += b[i];||| 13 y = (n * (n + 1)) / 2;||| 14 if (x % y != 0) {||| 15 cout << ""NO"" << endl;||| 16 continue;||| 17 }||| 18 x /= y;||| 19 z = 0;||| 20 for (i = 1; i <= n; i++) {||| 21 y = x + b[((i + n - 2) % n) + 1] - b[i];||| 22 if (y <= 0 || (y % n != 0)) {||| 23 z = 1;||| 24 break;||| 25 }||| 26 a[i] = y / n;||| 27 }||| 28 if (z)||| 29 cout << ""NO"" << endl;||| 30 else {||| 31 cout << ""YES"" << endl;||| 32 for (i = 1; i <= n; i++) cout << a[i] << "" "";||| 33 cout << endl;||| 34 }||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int a[500005], b[500005], c[500005], d[500005];||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 long long int t, i, j, k, n, m, w, y, z, x, l, r, k1, k2;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 x = 0;||| 12 for (i = 1; i <= n; i++) cin >> b[i], x += b[i];||| 13 y = (n * (n + 1)) / 2;||| 14 if (x % y != 0) {||| 15 cout << ""NO"" << endl;||| 16 continue;||| 17 }||| 18 x /= y;||| 19 z = 0;||| 20 for (i = 1; i <= n; i++) {||| 21 y = x + b[((i + n - 2) % n) + 1] - b[i];||| 22 if (y == 0 || (y % n != 0)) {||| 23 z = 1;||| 24 break;||| 25 }||| 26 a[i] = y / n;||| 27 }||| 28 if (z)||| 29 cout << ""NO"" << endl;||| 30 else {||| 31 cout << ""YES"" << endl;||| 32 for (i = 1; i <= n; i++) cout << a[i] << "" "";||| 33 cout << endl;||| 34 }||| 35 }||| 36 }||| "	22 if (y <= 0 || (y % n != 0)) {
136	272	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int fastpow(long long int a, long long int p) {||| 4 long long int res = 1;||| 5 while (p) {||| 6 if (p % 2 == 0) {||| 7 a = a * 1ll * a % 1000000007;||| 8 p /= 2;||| 9 } else {||| 10 res = res * 1ll * a % 1000000007;||| 11 p--;||| 12 }||| 13 }||| 14 return res;||| 15 }||| 16 long long int fact(long long int n) {||| 17 long long int res = 1;||| 18 for (long long int i = 1; i <= n; i++) {||| 19 res = res * 1ll * i % 1000000007;||| 20 }||| 21 return res;||| 22 }||| 23 long long int comb(long long int n, long long int k) {||| 24 return fact(n) * 1ll * fastpow(fact(k), 1000000007 - 2) % 1000000007 * 1ll *||| 25 fastpow(fact(n - k), 1000000007 - 2) % 1000000007;||| 26 }||| 27 long long int to_integer(string& aa) {||| 28 long long int res = 0;||| 29 for (auto x : aa) res = (res * 10) + (x - '0');||| 30 return res;||| 31 }||| 32 bool prime(long long int n) {||| 33 if (n <= 1) return false;||| 34 if (n <= 3) return true;||| 35 if (n % 2 == 0 || n % 3 == 0) return false;||| 36 for (long long int i = 5; i * i <= n; i = i + 6)||| 37 if (n % i == 0 || n % (i + 2) == 0) return false;||| 38 return true;||| 39 }||| 40 void sieve(long long int n, vector<long long int>& prime) {||| 41 for (long long int p = 2; p * p <= n; p++) {||| 42 if (prime[p] == 1) {||| 43 for (long long int i = p * p; i <= n; i += p) prime[i] = 0;||| 44 }||| 45 }||| 46 }||| 47 bool check(string s, string a) {||| 48 long long int j = 0;||| 49 for (long long int i = 0; i < s.size(); i++) {||| 50 if (s[i] == a[j]) {||| 51 j++;||| 52 }||| 53 if (j == a.size()) return true;||| 54 }||| 55 return false;||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(NULL);||| 60 long long int t;||| 61 cin >> t;||| 62 while (t--) {||| 63 long long int n;||| 64 cin >> n;||| 65 vector<long long int> b(n);||| 66 long long int s = 0;||| 67 for (long long int i = 0; i < n; i++) {||| 68 cin >> b[i];||| 69 s += b[i];||| 70 }||| 71 long long int x = n * (n + 1) / 2;||| 72 if (s % x != 0) {||| 73 cout << ""NO\n"";||| 74 continue;||| 75 }||| 76 long long int f = 0;||| 77 s /= x;||| 78 vector<long long int> ans(n);||| 79 for (long long int i = 0; i < n; i++) {||| 80 if (i != n - 1) {||| 81 long long int tmp = b[i] - b[i + 1] + s;||| 82 if (tmp <= 0 || tmp % n != 0) {||| 83 f = 1;||| 84 break;||| 85 }||| 86 ans[i + 1] = tmp / n;||| 87 } else {||| 88 long long int tmp = b[i] - b[0] + s;||| 89 if (tmp <= 0 || tmp % n != 0) {||| 90 f = 1;||| 91 break;||| 92 }||| 93 ans[0] = tmp / n;||| 94 }||| 95 }||| 96 if (f) {||| 97 cout << ""NO\n"";||| 98 } else {||| 99 cout << ""YES\n"";||| 100 for (auto x : ans) {||| 101 cout << x << "" "";||| 102 }||| 103 cout << ""\n"";||| 104 }||| 105 }||| 106 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int fastpow(long long int a, long long int p) {||| 4 long long int res = 1;||| 5 while (p) {||| 6 if (p % 2 == 0) {||| 7 a = a * 1ll * a % 1000000007;||| 8 p /= 2;||| 9 } else {||| 10 res = res * 1ll * a % 1000000007;||| 11 p--;||| 12 }||| 13 }||| 14 return res;||| 15 }||| 16 long long int fact(long long int n) {||| 17 long long int res = 1;||| 18 for (long long int i = 1; i <= n; i++) {||| 19 res = res * 1ll * i % 1000000007;||| 20 }||| 21 return res;||| 22 }||| 23 long long int comb(long long int n, long long int k) {||| 24 return fact(n) * 1ll * fastpow(fact(k), 1000000007 - 2) % 1000000007 * 1ll *||| 25 fastpow(fact(n - k), 1000000007 - 2) % 1000000007;||| 26 }||| 27 long long int to_integer(string& aa) {||| 28 long long int res = 0;||| 29 for (auto x : aa) res = (res * 10) + (x - '0');||| 30 return res;||| 31 }||| 32 bool prime(long long int n) {||| 33 if (n <= 1) return false;||| 34 if (n <= 3) return true;||| 35 if (n % 2 == 0 || n % 3 == 0) return false;||| 36 for (long long int i = 5; i * i <= n; i = i + 6)||| 37 if (n % i == 0 || n % (i + 2) == 0) return false;||| 38 return true;||| 39 }||| 40 void sieve(long long int n, vector<long long int>& prime) {||| 41 for (long long int p = 2; p * p <= n; p++) {||| 42 if (prime[p] == 1) {||| 43 for (long long int i = p * p; i <= n; i += p) prime[i] = 0;||| 44 }||| 45 }||| 46 }||| 47 bool check(string s, string a) {||| 48 long long int j = 0;||| 49 for (long long int i = 0; i < s.size(); i++) {||| 50 if (s[i] == a[j]) {||| 51 j++;||| 52 }||| 53 if (j == a.size()) return true;||| 54 }||| 55 return false;||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(NULL);||| 60 long long int t;||| 61 cin >> t;||| 62 while (t--) {||| 63 long long int n;||| 64 cin >> n;||| 65 vector<long long int> b(n);||| 66 long long int s = 0;||| 67 for (long long int i = 0; i < n; i++) {||| 68 cin >> b[i];||| 69 s += b[i];||| 70 }||| 71 long long int x = n * (n + 1) / 2;||| 72 if (s % x != 0) {||| 73 cout << ""NO\n"";||| 74 continue;||| 75 }||| 76 long long int f = 0;||| 77 s /= x;||| 78 vector<long long int> ans(n);||| 79 for (long long int i = 0; i < n; i++) {||| 80 if (i != n - 1) {||| 81 long long int tmp = b[i] - b[i + 1] + s;||| 82 if (tmp == 0 || tmp % n != 0) {||| 83 f = 1;||| 84 break;||| 85 }||| 86 ans[i + 1] = tmp / n;||| 87 } else {||| 88 long long int tmp = b[i] - b[0] + s;||| 89 if (tmp == 0 || tmp % n != 0) {||| 90 f = 1;||| 91 break;||| 92 }||| 93 ans[0] = tmp / n;||| 94 }||| 95 }||| 96 if (f) {||| 97 cout << ""NO\n"";||| 98 } else {||| 99 cout << ""YES\n"";||| 100 for (auto x : ans) {||| 101 cout << x << "" "";||| 102 }||| 103 cout << ""\n"";||| 104 }||| 105 }||| 106 }||| "	82 if (tmp <= 0 || tmp % n != 0) {
136	143	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e4 + 10;||| 4 long long a[N], b[N];||| 5 int main() {||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 long long cnt = 0;||| 12 for (int i = 1; i <= n; i++) cin >> a[i], cnt += a[i];||| 13 if (cnt % ((n * n + n) / 2) != 0) {||| 14 cout << ""NO"" << endl;||| 15 continue;||| 16 }||| 17 cnt /= (n * n + n) / 2;||| 18 bool flag = 1;||| 19 for (int i = n; i <= 2 * n - 1; i++)||| 20 if ((a[(i - 1) % n + 1] - a[i % n + 1] + cnt) % n == 0 &&||| 21 (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) > 0)||| 22 b[i - n + 1] = (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) / n;||| 23 else||| 24 flag = 0;||| 25 if (flag) {||| 26 cout << ""YES"" << endl;||| 27 for (int i = 1; i <= n; i++) cout << b[i] << "" "";||| 28 cout << endl;||| 29 } else||| 30 cout << ""NO"" << endl;||| 31 }||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5e4 + 10;||| 4 long long a[N], b[N];||| 5 int main() {||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 long long cnt = 0;||| 12 for (int i = 1; i <= n; i++) cin >> a[i], cnt += a[i];||| 13 if (cnt % ((n * n + n) / 2) != 0) {||| 14 cout << ""NO"" << endl;||| 15 continue;||| 16 }||| 17 cnt /= (n * n + n) / 2;||| 18 bool flag = 1;||| 19 for (int i = n; i <= 2 * n - 1; i++)||| 20 if ((a[(i - 1) % n + 1] - a[i % n + 1] + cnt) % n == 0 &&||| 21 (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) != 0)||| 22 b[i - n + 1] = (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) / n;||| 23 else||| 24 flag = 0;||| 25 if (flag) {||| 26 cout << ""YES"" << endl;||| 27 for (int i = 1; i <= n; i++) cout << b[i] << "" "";||| 28 cout << endl;||| 29 } else||| 30 cout << ""NO"" << endl;||| 31 }||| 32 return 0;||| 33 }||| "	3 const int N = 4e4 + 10;
136	367	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> b(n), a(n);||| 7 long long int sa, sb = 0, t_n = (long long int)n * (n + 1) / 2, x;||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 sb += b[i];||| 11 }||| 12 if (sb % t_n != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 sa = sb / t_n;||| 17 for (int i = n - 1; i >= 0; i--) {||| 18 x = b[i] - b[(i + 1) % n] + sa;||| 19 if (x % n != 0 || x <= 0) {||| 20 cout << ""NO\n"";||| 21 return;||| 22 }||| 23 a[(i + 1) % n] = x / n;||| 24 }||| 25 cout << ""YES\n"";||| 26 for (int i = 0; i < n; i++) {||| 27 cout << a[i] << "" "";||| 28 }||| 29 cout << ""\n"";||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(false);||| 33 cin.tie(NULL);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 solve();||| 38 }||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> b(n), a(n);||| 7 long long int sa, sb = 0, t_n = (long long int)n * (n + 1) / 2, x;||| 8 for (int i = 0; i < n; i++) {||| 9 cin >> b[i];||| 10 sb += b[i];||| 11 }||| 12 if (sb % t_n != 0) {||| 13 cout << ""NO\n"";||| 14 return;||| 15 }||| 16 sa = sb / n;||| 17 for (int i = n - 1; i >= 0; i--) {||| 18 x = b[i] - b[(i + 1) % n] + sa;||| 19 if (x % n != 0 || x <= 0) {||| 20 cout << ""NO\n"";||| 21 return;||| 22 }||| 23 a[(i + 1) % n] = x / n;||| 24 }||| 25 cout << ""YES\n"";||| 26 for (int i = 0; i < n; i++) {||| 27 cout << a[i] << "" "";||| 28 }||| 29 cout << ""\n"";||| 30 }||| 31 int main() {||| 32 ios_base::sync_with_stdio(false);||| 33 cin.tie(NULL);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 solve();||| 38 }||| 39 return 0;||| 40 }||| "	16 sa = sb / t_n;
136	382	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> ls(n);||| 7 for (int i = 0; i < n; i++) cin >> ls[i];||| 8 long long sum = 0;||| 9 for (int i = 0; i < n; i++) sum += ls[i];||| 10 if (sum % (n * (n + 1) / 2) != 0) {||| 11 cout << ""NO"" << '\n';||| 12 return;||| 13 }||| 14 int s = sum / (n * (n + 1) / 2);||| 15 vector<long long> ans(n);||| 16 for (int i = 0; i < n; i++) {||| 17 long long k = ls[i] - s;||| 18 long long j = ((i - 1 + n) % n);||| 19 long long y = ls[j] - k;||| 20 if (y <= 0 or y % n) {||| 21 cout << ""NO"" << '\n';||| 22 return;||| 23 }||| 24 ans[i] = y / n;||| 25 }||| 26 cout << ""YES"" << '\n';||| 27 for (auto i : ans) cout << i << "" "";||| 28 cout << '\n';||| 29 }||| 30 int main() {||| 31 std::ios::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 ;||| 35 int T;||| 36 cin >> T;||| 37 while (T--) {||| 38 solve();||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> ls(n);||| 7 for (int i = 0; i < n; i++) cin >> ls[i];||| 8 long long sum = 0;||| 9 for (int i = 0; i < n; i++) sum += ls[i];||| 10 if (sum % (n * (n + 1) / 2) != 0) {||| 11 cout << ""NO"" << '\n';||| 12 return;||| 13 }||| 14 int s = sum / (n * (n + 1) / 2);||| 15 vector<long long> ans(n);||| 16 for (int i = 0; i < n; i++) {||| 17 long long k = ls[i] - s;||| 18 long long j = ((i - 1 + n) % n);||| 19 long long y = ls[j] - k;||| 20 if (y == 0 or y % n) {||| 21 cout << ""NO"" << '\n';||| 22 return;||| 23 }||| 24 ans[i] = y / n;||| 25 }||| 26 cout << ""YES"" << '\n';||| 27 for (auto i : ans) cout << i << "" "";||| 28 cout << '\n';||| 29 }||| 30 int main() {||| 31 std::ios::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 ;||| 35 int T;||| 36 cin >> T;||| 37 while (T--) {||| 38 solve();||| 39 }||| 40 return 0;||| 41 }||| "	20 if (y <= 0 or y % n) {
136	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cout << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cout << ' ' << H;||| 20 dbg_out(T...);||| 21 }||| 22 int32_t main() {||| 23 ios::sync_with_stdio(false);||| 24 cin.tie(0);||| 25 long long tt;||| 26 cin >> tt;||| 27 while (tt--) {||| 28 long long n;||| 29 cin >> n;||| 30 vector<long long> a(n);||| 31 for (long long i = 0; i < n; i++) cin >> a[i];||| 32 long long sum = accumulate((a).begin(), (a).end(), 0ll);||| 33 long long tot = (n * (n + 1)) / 2;||| 34 if (sum % tot || sum / tot < n) {||| 35 cout << ""NO\n"";||| 36 continue;||| 37 }||| 38 sum /= tot;||| 39 vector<long long> ans(n);||| 40 long long bad = 0;||| 41 for (long long i = 0; i < n; i++) {||| 42 long long diff = a[(i + 1) % n] - a[i];||| 43 if ((sum - diff) % n) bad = 1;||| 44 ans[(i + 1) % n] = (sum - diff) / n;||| 45 };||| 46 long long s = 0;||| 47 for (auto x : ans) bad |= (x <= 0), s += x;||| 48 if (bad || sum != s)||| 49 cout << ""NO\n"";||| 50 else {||| 51 cout << ""YES\n"";||| 52 for (auto x : ans) cout << x << "" "";||| 53 cout << ""\n"";||| 54 }||| 55 }||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cout << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cout << ' ' << H;||| 20 dbg_out(T...);||| 21 }||| 22 int32_t main() {||| 23 ios::sync_with_stdio(false);||| 24 cin.tie(0);||| 25 long long tt;||| 26 cin >> tt;||| 27 while (tt--) {||| 28 long long n;||| 29 cin >> n;||| 30 vector<long long> a(n);||| 31 for (long long i = 0; i < n; i++) cin >> a[i];||| 32 long long sum = accumulate((a).begin(), (a).end(), 0ll);||| 33 long long tot = (n * (n + 1)) / 2;||| 34 if (sum % tot || sum / tot < n) {||| 35 cout << ""NO\n"";||| 36 continue;||| 37 }||| 38 sum /= tot;||| 39 vector<long long> ans(n);||| 40 long long bad = 0;||| 41 for (long long i = 0; i < n; i++) {||| 42 long long diff = a[(i + 1) % n] - a[i];||| 43 if ((sum - diff) % n) bad = 1;||| 44 ans[(i + 1) % n] = (sum - diff) / n;||| 45 };||| 46 long long s = 0;||| 47 for (auto x : ans) bad |= (x == 0), s += x;||| 48 if (bad || sum != s)||| 49 cout << ""NO\n"";||| 50 else {||| 51 cout << ""YES\n"";||| 52 for (auto x : ans) cout << x << "" "";||| 53 cout << ""\n"";||| 54 }||| 55 }||| 56 }||| "	47 for (auto x : ans) bad |= (x <= 0), s += x;
136	286	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int MOD = 1000000007;||| 4 long long int gcd(long long int a, long long int b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 unsigned long long power(unsigned long long x, long long int y,||| 8 long long int p) {||| 9 unsigned long long res = 1;||| 10 x = x % p;||| 11 while (y > 0) {||| 12 if (y & 1) res = (res * x) % p;||| 13 y = y >> 1;||| 14 x = (x * x) % p;||| 15 }||| 16 return res;||| 17 }||| 18 unsigned long long modInverse(unsigned long long n, long long int p) {||| 19 return power(n, p - 2, p);||| 20 }||| 21 unsigned long long nCrModPFermat(unsigned long long n, long long int r,||| 22 long long int p) {||| 23 if (n < r) return 0;||| 24 if (r == 0) return 1;||| 25 unsigned long long fac[n + 1];||| 26 fac[0] = 1;||| 27 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 28 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 29 p;||| 30 }||| 31 long long int find_set(long long int i, vector<long long int> &parent) {||| 32 if (parent[i] == -1) {||| 33 return i;||| 34 } else {||| 35 parent[i] = find_set(parent[i], parent);||| 36 return parent[i];||| 37 }||| 38 }||| 39 void union_set(long long int i, long long int j, vector<long long int> &parent,||| 40 vector<long long int> &rank) {||| 41 long long int s1 = find_set(i, parent);||| 42 long long int s2 = find_set(j, parent);||| 43 if (s1 != s2) {||| 44 if (rank[s1] > rank[s2]) {||| 45 parent[s2] = s1;||| 46 rank[s1] += rank[s2];||| 47 } else {||| 48 parent[s1] = s2;||| 49 rank[s2] += rank[s1];||| 50 }||| 51 } else {||| 52 return;||| 53 }||| 54 }||| 55 void solve() {||| 56 long long int n, i, j;||| 57 cin >> n;||| 58 long long int arr[n];||| 59 long long int sum = 0;||| 60 for (long long int i = 0; i < n; i++) {||| 61 cin >> arr[i];||| 62 sum += arr[i];||| 63 }||| 64 if ((2 * sum) % (n * (n + 1)) != 0) {||| 65 cout << ""NO"" << endl;||| 66 return;||| 67 }||| 68 long long int val = (2 * sum) / (n * (n + 1));||| 69 if (val < n) {||| 70 cout << ""NO"" << endl;||| 71 return;||| 72 }||| 73 vector<long long int> a(n);||| 74 for (i = 0; i < n; i++) {||| 75 long long int val1 = arr[i];||| 76 long long int val2 = arr[(i - 1 + n) % (n)];||| 77 if ((val - val1 + val2) <= 0 || (val - val1 + val2) % n != 0) {||| 78 cout << ""NO"" << endl;||| 79 return;||| 80 }||| 81 a[i] = (val - val1 + val2) / n;||| 82 }||| 83 cout << ""YES"" << endl;||| 84 for (i = 0; i < n; i++) {||| 85 cout << a[i] << "" "";||| 86 }||| 87 cout << endl;||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(false);||| 91 cin.tie(NULL);||| 92 long long int t;||| 93 cin >> t;||| 94 while (t--) solve();||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int MOD = 1000000007;||| 4 long long int gcd(long long int a, long long int b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 unsigned long long power(unsigned long long x, long long int y,||| 8 long long int p) {||| 9 unsigned long long res = 1;||| 10 x = x % p;||| 11 while (y > 0) {||| 12 if (y & 1) res = (res * x) % p;||| 13 y = y >> 1;||| 14 x = (x * x) % p;||| 15 }||| 16 return res;||| 17 }||| 18 unsigned long long modInverse(unsigned long long n, long long int p) {||| 19 return power(n, p - 2, p);||| 20 }||| 21 unsigned long long nCrModPFermat(unsigned long long n, long long int r,||| 22 long long int p) {||| 23 if (n < r) return 0;||| 24 if (r == 0) return 1;||| 25 unsigned long long fac[n + 1];||| 26 fac[0] = 1;||| 27 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 28 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 29 p;||| 30 }||| 31 long long int find_set(long long int i, vector<long long int> &parent) {||| 32 if (parent[i] == -1) {||| 33 return i;||| 34 } else {||| 35 parent[i] = find_set(parent[i], parent);||| 36 return parent[i];||| 37 }||| 38 }||| 39 void union_set(long long int i, long long int j, vector<long long int> &parent,||| 40 vector<long long int> &rank) {||| 41 long long int s1 = find_set(i, parent);||| 42 long long int s2 = find_set(j, parent);||| 43 if (s1 != s2) {||| 44 if (rank[s1] > rank[s2]) {||| 45 parent[s2] = s1;||| 46 rank[s1] += rank[s2];||| 47 } else {||| 48 parent[s1] = s2;||| 49 rank[s2] += rank[s1];||| 50 }||| 51 } else {||| 52 return;||| 53 }||| 54 }||| 55 void solve() {||| 56 long long int n, i, j;||| 57 cin >> n;||| 58 long long int arr[n];||| 59 long long int sum = 0;||| 60 for (long long int i = 0; i < n; i++) {||| 61 cin >> arr[i];||| 62 sum += arr[i];||| 63 }||| 64 if ((2 * sum) % (n * (n + 1)) != 0) {||| 65 cout << ""NO"" << endl;||| 66 return;||| 67 }||| 68 long long int val = (2 * sum) / (n * (n + 1));||| 69 if (val < n) {||| 70 cout << ""NO"" << endl;||| 71 return;||| 72 }||| 73 vector<long long int> a(n);||| 74 for (i = 0; i < n; i++) {||| 75 long long int val1 = arr[i];||| 76 long long int val2 = arr[(i - 1 + n) % (n)];||| 77 if ((val - val1 + val2) > 0 && (val - val1 + val2) % n != 0) {||| 78 cout << ""NO"" << endl;||| 79 return;||| 80 }||| 81 a[i] = (val - val1 + val2) / n;||| 82 }||| 83 cout << ""YES"" << endl;||| 84 for (i = 0; i < n; i++) {||| 85 cout << a[i] << "" "";||| 86 }||| 87 cout << endl;||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(false);||| 91 cin.tie(NULL);||| 92 long long int t;||| 93 cin >> t;||| 94 while (t--) solve();||| 95 }||| "	77 if ((val - val1 + val2) <= 0 || (val - val1 + val2) % n != 0) {
137	235	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long x, y;||| 4 int vx[70];||| 5 int vy[70];||| 6 int countX, countY;||| 7 bool tryy(long long xx, long long yy) {||| 8 if (yy == xx) return true;||| 9 countX = 0;||| 10 countY = 0;||| 11 if (xx == 0) {||| 12 countX = 1;||| 13 vx[0] = 0;||| 14 }||| 15 while (xx != 0) {||| 16 vx[countX] = xx % 2;||| 17 xx = xx / 2;||| 18 countX++;||| 19 }||| 20 if (yy == 0) {||| 21 countY = 1;||| 22 vy[0] = 0;||| 23 }||| 24 while (yy != 0) {||| 25 vy[countY] = yy % 2;||| 26 yy = yy / 2;||| 27 countY++;||| 28 }||| 29 if (countX > countY) return false;||| 30 for (int i = 0; i <= countY - countX; i++) {||| 31 bool ok = true;||| 32 for (int j = 0; j < i; j++)||| 33 if (vy[j] != 1) ok = false;||| 34 if (!ok) continue;||| 35 bool found = true;||| 36 for (int j = 0; j < countX; j++) {||| 37 if (vy[i + j] != vx[j]) found = false;||| 38 if (vx[0] == 0 && vy[0] == 0) found = false;||| 39 }||| 40 if (!found) {||| 41 found = true;||| 42 for (int j = 0; j < countX; j++) {||| 43 if (vy[i + j] != vx[countX - j - 1]) found = false;||| 44 if (vx[0] == 0 && vy[countY - 1] == 0) found = false;||| 45 }||| 46 }||| 47 if (!found) continue;||| 48 for (int j = i + countX; j < countY; j++)||| 49 if (vy[j] != 1) ok = false;||| 50 if (ok) return true;||| 51 }||| 52 return false;||| 53 }||| 54 void solve() {||| 55 scanf(""%lld %lld"", &x, &y);||| 56 countX = 0;||| 57 countY = 0;||| 58 if (y == x) {||| 59 printf(""YES\n"");||| 60 return;||| 61 }||| 62 if (x == 0) {||| 63 while (y != 0) {||| 64 if (y % 2 == 0) {||| 65 printf(""NO\n"");||| 66 return;||| 67 }||| 68 y = y / 2;||| 69 }||| 70 printf(""YES\n"");||| 71 }||| 72 if (tryy(x, y)) {||| 73 printf(""YES\n"");||| 74 return;||| 75 }||| 76 while (x % 2 == 0) x = x / 2;||| 77 if (tryy(x, y)) {||| 78 printf(""YES\n"");||| 79 return;||| 80 }||| 81 printf(""NO\n"");||| 82 }||| 83 int main() { solve(); }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long x, y;||| 4 int vx[70];||| 5 int vy[70];||| 6 int countX, countY;||| 7 bool tryy(long long xx, long long yy) {||| 8 if (yy == xx) return true;||| 9 countX = 0;||| 10 countY = 0;||| 11 if (xx == 0) {||| 12 countX = 1;||| 13 vx[0] = 0;||| 14 }||| 15 while (xx != 0) {||| 16 vx[countX] = xx % 2;||| 17 xx = xx / 2;||| 18 countX++;||| 19 }||| 20 if (yy == 0) {||| 21 countY = 1;||| 22 vy[0] = 0;||| 23 }||| 24 while (yy != 0) {||| 25 vy[countY] = yy % 2;||| 26 yy = yy / 2;||| 27 countY++;||| 28 }||| 29 if (countX >= countY) return false;||| 30 for (int i = 0; i <= countY - countX; i++) {||| 31 bool ok = true;||| 32 for (int j = 0; j < i; j++)||| 33 if (vy[j] != 1) ok = false;||| 34 if (!ok) continue;||| 35 bool found = true;||| 36 for (int j = 0; j < countX; j++) {||| 37 if (vy[i + j] != vx[j]) found = false;||| 38 if (vx[0] == 0 && vy[0] == 0) found = false;||| 39 }||| 40 if (!found) {||| 41 found = true;||| 42 for (int j = 0; j < countX; j++) {||| 43 if (vy[i + j] != vx[countX - j - 1]) found = false;||| 44 if (vx[0] == 0 && vy[countY - 1] == 0) found = false;||| 45 }||| 46 }||| 47 if (!found) continue;||| 48 for (int j = i + countX; j < countY; j++)||| 49 if (vy[j] != 1) ok = false;||| 50 if (ok) return true;||| 51 }||| 52 return false;||| 53 }||| 54 void solve() {||| 55 scanf(""%lld %lld"", &x, &y);||| 56 countX = 0;||| 57 countY = 0;||| 58 if (y == x) {||| 59 printf(""YES\n"");||| 60 return;||| 61 }||| 62 if (x == 0) {||| 63 while (y != 0) {||| 64 if (y % 2 == 0) {||| 65 printf(""NO\n"");||| 66 return;||| 67 }||| 68 y = y / 2;||| 69 }||| 70 printf(""YES\n"");||| 71 }||| 72 if (tryy(x, y)) {||| 73 printf(""YES\n"");||| 74 return;||| 75 }||| 76 while (x % 2 == 0) x = x / 2;||| 77 if (tryy(x, y)) {||| 78 printf(""YES\n"");||| 79 return;||| 80 }||| 81 printf(""NO\n"");||| 82 }||| 83 int main() { solve(); }||| "	29 if (countX > countY) return false;
137	218	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = unsigned long long;||| 4 using pll = pair<ll, ll>;||| 5 using str = string;||| 6 using vll = vector<ll>;||| 7 using pll = pair<ll, ll>;||| 8 using ld = long double;||| 9 const ld PI = acos(-1);||| 10 mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());||| 11 ll gcd(ll a, ll b) {||| 12 if (b == 0) return a;||| 13 return gcd(b, a % b);||| 14 }||| 15 str Y = ""YES"";||| 16 str N = ""NO"";||| 17 map<str, bool> used;||| 18 void solve() {||| 19 ll x, y;||| 20 cin >> x >> y;||| 21 str sx = """", sy = """";||| 22 while (x) {||| 23 ll ot = x % 2;||| 24 sx += char('0' + ot);||| 25 x /= 2;||| 26 }||| 27 reverse(((sx).begin()), ((sx).end()));||| 28 while (y) {||| 29 ll ot = y % 2;||| 30 sy += char('0' + ot);||| 31 y /= 2;||| 32 }||| 33 reverse(((sy).begin()), ((sy).end()));||| 34 used[sx] = true;||| 35 queue<str> q;||| 36 q.push(sx);||| 37 while (!q.empty()) {||| 38 str nit = q.front();||| 39 q.pop();||| 40 str pl = nit + '1';||| 41 reverse(((pl).begin()), ((pl).end()));||| 42 while (pl.front() == '0') {||| 43 pl.erase(pl.begin());||| 44 }||| 45 if ((ll)pl.size() <= (ll)sy.size() && !used[pl]) {||| 46 used[pl] = true;||| 47 q.push(pl);||| 48 }||| 49 str mn = nit;||| 50 reverse(((mn).begin()), ((mn).end()));||| 51 while (mn.front() == '0') {||| 52 mn.erase(mn.begin());||| 53 }||| 54 if ((ll)mn.size() <= (ll)sy.size() && !used[mn]) {||| 55 used[mn] = true;||| 56 q.push(mn);||| 57 }||| 58 }||| 59 if (used[sy]) {||| 60 cout << Y;||| 61 return;||| 62 }||| 63 cout << N;||| 64 }||| 65 int main() {||| 66 ios_base::sync_with_stdio(0);||| 67 cin.tie(0);||| 68 ll t;||| 69 t = 1;||| 70 for (ll i = 0; i < t; ++i) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = unsigned long long;||| 4 using pll = pair<ll, ll>;||| 5 using str = string;||| 6 using vll = vector<ll>;||| 7 using pll = pair<ll, ll>;||| 8 using ld = long double;||| 9 const ld PI = acos(-1);||| 10 mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());||| 11 ll gcd(ll a, ll b) {||| 12 if (b == 0) return a;||| 13 return gcd(b, a % b);||| 14 }||| 15 str Y = ""YES"";||| 16 str N = ""NO"";||| 17 map<str, bool> used;||| 18 void solve() {||| 19 ll x, y;||| 20 cin >> x >> y;||| 21 str sx = """", sy = """";||| 22 while (x) {||| 23 ll ot = x % 2;||| 24 sx += char('0' + ot);||| 25 x /= 2;||| 26 }||| 27 reverse(((sx).begin()), ((sx).end()));||| 28 while (y) {||| 29 ll ot = y % 2;||| 30 sy += char('0' + ot);||| 31 y /= 2;||| 32 }||| 33 reverse(((sy).begin()), ((sy).end()));||| 34 used[sx] = true;||| 35 queue<str> q;||| 36 q.push(sx);||| 37 while (!q.empty()) {||| 38 str nit = q.front();||| 39 q.pop();||| 40 str pl = nit + '1';||| 41 reverse(((pl).begin()), ((pl).end()));||| 42 while (pl.front() == '0') {||| 43 pl.erase(pl.begin());||| 44 }||| 45 if ((ll)pl.size() <= (ll)sy.size() && !used[pl]) {||| 46 used[pl] = true;||| 47 q.push(pl);||| 48 }||| 49 str mn = nit;||| 50 reverse(((nit).begin()), ((nit).end()));||| 51 while (mn.front() == '0') {||| 52 mn.erase(mn.begin());||| 53 }||| 54 if ((ll)mn.size() <= (ll)sy.size() && !used[mn]) {||| 55 used[mn] = true;||| 56 q.push(mn);||| 57 }||| 58 }||| 59 if (used[sy]) {||| 60 cout << Y;||| 61 return;||| 62 }||| 63 cout << N;||| 64 }||| 65 int main() {||| 66 ios_base::sync_with_stdio(0);||| 67 cin.tie(0);||| 68 ll t;||| 69 t = 1;||| 70 for (ll i = 0; i < t; ++i) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	50 reverse(((mn).begin()), ((mn).end()));
138	64	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int maxn = 2e5 + 5;||| 5 int n, m, q;||| 6 int a[maxn], b[maxn];||| 7 int val[2 * maxn], p[2 * maxn];||| 8 multiset<pair<int, bool>> S[2 * maxn];||| 9 set<pair<int, ll>> ans;||| 10 int ata(int nd) {||| 11 if (p[nd] == nd) return nd;||| 12 return p[nd] = ata(p[nd]);||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(0);||| 17 cin >> n >> m >> q;||| 18 vector<pair<int, bool>> v;||| 19 for (int i = 1; i <= n; i++) {||| 20 cin >> a[i];||| 21 v.push_back({a[i], 0});||| 22 }||| 23 for (int i = 1; i <= m; i++) {||| 24 cin >> b[i];||| 25 v.push_back({b[i], 1});||| 26 }||| 27 sort(v.begin(), v.end());||| 28 map<int, vector<int>> seg;||| 29 ll now = 0;||| 30 for (int i = 0; i < (int)v.size(); i++) {||| 31 if (v[i].second == 0)||| 32 val[i] = v[i].first, now += v[i].first;||| 33 else||| 34 val[i] = 1e9;||| 35 S[i].insert({v[i].first, (v[i].second == 0)});||| 36 p[i] = i;||| 37 }||| 38 ans.insert({0, now});||| 39 for (int i = 1; i < (int)v.size(); i++)||| 40 seg[v[i].first - v[i - 1].first].push_back(i);||| 41 for (auto i : seg) {||| 42 for (auto j : i.second) {||| 43 int a = ata(j - 1);||| 44 int b = ata(j);||| 45 int go = a, lit = b;||| 46 if ((int)S[b].size() > (int)S[a].size()) go = b, lit = a;||| 47 auto cep = S[a].lower_bound({val[a], 1});||| 48 auto sag = S[b].lower_bound({val[b], 1});||| 49 vector<pair<int, int>> er;||| 50 while (cep != S[a].end() and sag != S[b].begin()) {||| 51 sag--;||| 52 er.push_back({(*cep).first, (*sag).first});||| 53 cep++;||| 54 }||| 55 if (sag != S[b].begin()) {||| 56 if (sag == S[b].end())||| 57 val[go] = 1e9;||| 58 else||| 59 val[go] = (*sag).first;||| 60 } else {||| 61 if (cep == S[a].end()) {||| 62 if (sag == S[b].end())||| 63 val[go] = 1e9;||| 64 else||| 65 val[go] = (*sag).first;||| 66 } else||| 67 val[go] = (*cep).first;||| 68 }||| 69 for (auto k : er) {||| 70 now -= k.first;||| 71 now += k.second;||| 72 S[a].erase(S[a].find({k.first, 1}));||| 73 S[b].erase(S[b].find({k.second, 0}));||| 74 S[a].insert({k.first, 0});||| 75 S[b].insert({k.second, 1});||| 76 }||| 77 p[lit] = go;||| 78 for (auto k : S[lit]) S[go].insert(k);||| 79 S[lit].clear();||| 80 }||| 81 if (i.first == 0) ans.erase(ans.begin());||| 82 ans.insert({i.first, now});||| 83 }||| 84 while (q--) {||| 85 int k;||| 86 cin >> k;||| 87 auto t = ans.upper_bound({k, 1e18});||| 88 t--;||| 89 cout << (*t).second << '\n';||| 90 }||| 91 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int maxn = 2e5 + 5;||| 5 int n, m, q;||| 6 int a[maxn], b[maxn];||| 7 int val[2 * maxn], p[2 * maxn];||| 8 multiset<pair<int, bool>> S[2 * maxn];||| 9 set<pair<int, ll>> ans;||| 10 int ata(int nd) {||| 11 if (p[nd] == nd) return nd;||| 12 return p[nd] = ata(p[nd]);||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(0);||| 17 cin >> n >> m >> q;||| 18 vector<pair<int, bool>> v;||| 19 for (int i = 1; i <= n; i++) {||| 20 cin >> a[i];||| 21 v.push_back({a[i], 0});||| 22 }||| 23 for (int i = 1; i <= m; i++) {||| 24 cin >> b[i];||| 25 v.push_back({b[i], 1});||| 26 }||| 27 sort(v.begin(), v.end());||| 28 map<int, vector<int>> seg;||| 29 ll now = 0;||| 30 for (int i = 0; i < (int)v.size(); i++) {||| 31 if (v[i].second == 0)||| 32 val[i] = v[i].first, now += v[i].first;||| 33 else||| 34 val[i] = 1e9;||| 35 S[i].insert({v[i].first, (v[i].second == 0)});||| 36 p[i] = i;||| 37 }||| 38 ans.insert({0, now});||| 39 for (int i = 1; i < (int)v.size(); i++)||| 40 seg[v[i].first - v[i - 1].first].push_back(i);||| 41 for (auto i : seg) {||| 42 for (auto j : i.second) {||| 43 int a = ata(j - 1);||| 44 int b = ata(j);||| 45 int go = a, lit = b;||| 46 if ((int)S[b].size() > (int)S[a].size()) go = b, lit = a;||| 47 auto cep = S[a].lower_bound({val[a], 1});||| 48 auto sag = S[b].lower_bound({val[b], 1});||| 49 vector<pair<int, int>> er;||| 50 while (cep != S[a].end() and sag != S[b].begin()) {||| 51 sag--;||| 52 er.push_back({(*cep).first, (*sag).first});||| 53 cep++;||| 54 }||| 55 if (sag != S[b].begin()) {||| 56 if (sag == S[b].end())||| 57 val[go] = 1e9;||| 58 else||| 59 val[go] = (*sag).first;||| 60 } else {||| 61 if (cep == S[a].end()) {||| 62 if (sag == S[b].end())||| 63 val[go] = 1e9;||| 64 else||| 65 val[go] = (*sag).first;||| 66 } else||| 67 val[go] = (*cep).first;||| 68 }||| 69 for (auto k : er) {||| 70 now -= k.first;||| 71 now += k.second;||| 72 S[a].erase(S[a].find({k.first, 1}));||| 73 S[b].erase(S[b].find({k.second, 0}));||| 74 S[a].insert({k.first, 0});||| 75 S[b].insert({k.second, 1});||| 76 }||| 77 p[lit] = go;||| 78 for (auto k : S[lit]) S[go].insert(k);||| 79 S[lit].clear();||| 80 }||| 81 if (i.first == 0) ans.erase(ans.begin());||| 82 ans.insert({i.first, now});||| 83 }||| 84 while (q--) {||| 85 int k;||| 86 cin >> k;||| 87 auto t = ans.upper_bound({k, 1e9});||| 88 t--;||| 89 cout << (*t).second << '\n';||| 90 }||| 91 }||| 	87 auto t = ans.upper_bound({k, 1e18});
138	2	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 4e5 + 100;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 long long ind[N], sz[N], mx[N], pref[N], cur = 0;||| 12 long long f(long long v) {||| 13 if (sz[v] == 0) return 0;||| 14 long long r = mx[v];||| 15 long long res = pref[r];||| 16 if (r - sz[v] >= 0) res -= pref[r - sz[v]];||| 17 return res;||| 18 }||| 19 long long fnd(long long x) {||| 20 if (x == ind[x]) return x;||| 21 return ind[x] = fnd(ind[x]);||| 22 }||| 23 void unt(long long x, long long y) {||| 24 x = fnd(x);||| 25 y = fnd(y);||| 26 if (x == y) return;||| 27 cur -= f(x);||| 28 cur -= f(y);||| 29 sz[x] += sz[y];||| 30 mx[x] = max(mx[x], mx[y]);||| 31 ind[y] = x;||| 32 cur += f(x);||| 33 }||| 34 int32_t main() {||| 35 ios_base::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long n, m, q;||| 39 cin >> n >> m >> q;||| 40 vector<pair<long long, long long>> v;||| 41 for (long long i = 0; i < n; ++i) {||| 42 long long x;||| 43 cin >> x;||| 44 v.push_back({x, 1});||| 45 cur += x;||| 46 }||| 47 for (long long i = 0; i < m; ++i) {||| 48 long long x;||| 49 cin >> x;||| 50 v.push_back({x, 0});||| 51 }||| 52 sort(v.begin(), v.end());||| 53 pref[0] = v[0].first;||| 54 for (long long i = 0; i < n + m; ++i) {||| 55 pref[i] = pref[i - 1] + v[i].first;||| 56 }||| 57 map<long long, vector<long long>> mp;||| 58 for (long long i = 0; i < n + m; ++i) {||| 59 if (i) {||| 60 mp[(v[i].first - v[i - 1].first)].push_back(i - 1);||| 61 }||| 62 ind[i] = i;||| 63 sz[i] = v[i].second;||| 64 mx[i] = i;||| 65 }||| 66 map<long long, long long> ans;||| 67 ans[0] = cur;||| 68 set<long long> st;||| 69 st.insert(0);||| 70 for (auto to : mp) {||| 71 for (auto x : to.second) {||| 72 unt(x, x + 1);||| 73 }||| 74 st.insert(to.first);||| 75 ans[to.first] = cur;||| 76 }||| 77 while (q--) {||| 78 long long k;||| 79 cin >> k;||| 80 auto it = st.lower_bound(k);||| 81 long long x;||| 82 if (it == st.end()) {||| 83 it--;||| 84 x = *it;||| 85 } else {||| 86 x = *it;||| 87 if (x > k) {||| 88 it--;||| 89 x = *it;||| 90 }||| 91 }||| 92 cout << ans[x] << '\n';||| 93 }||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 4e5 + 100;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 long long ind[N], sz[N], mx[N], pref[N], cur = 0;||| 12 long long f(long long v) {||| 13 if (sz[v] == 0) return 0;||| 14 long long r = mx[v];||| 15 long long res = pref[r];||| 16 if (r - sz[v]) res -= pref[r - sz[v]];||| 17 return res;||| 18 }||| 19 long long fnd(long long x) {||| 20 if (x == ind[x]) return x;||| 21 return ind[x] = fnd(ind[x]);||| 22 }||| 23 void unt(long long x, long long y) {||| 24 x = fnd(x);||| 25 y = fnd(y);||| 26 if (x == y) return;||| 27 cur -= f(x);||| 28 cur -= f(y);||| 29 sz[x] += sz[y];||| 30 mx[x] = max(mx[x], mx[y]);||| 31 ind[y] = x;||| 32 cur += f(x);||| 33 }||| 34 int32_t main() {||| 35 ios_base::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long n, m, q;||| 39 cin >> n >> m >> q;||| 40 vector<pair<long long, long long>> v;||| 41 for (long long i = 0; i < n; ++i) {||| 42 long long x;||| 43 cin >> x;||| 44 v.push_back({x, 1});||| 45 cur += x;||| 46 }||| 47 for (long long i = 0; i < m; ++i) {||| 48 long long x;||| 49 cin >> x;||| 50 v.push_back({x, 0});||| 51 }||| 52 sort(v.begin(), v.end());||| 53 pref[0] = v[0].first;||| 54 for (long long i = 0; i < n + m; ++i) {||| 55 pref[i] = pref[i - 1] + v[i].first;||| 56 }||| 57 map<long long, vector<long long>> mp;||| 58 for (long long i = 0; i < n + m; ++i) {||| 59 if (i) {||| 60 mp[(v[i].first - v[i - 1].first)].push_back(i - 1);||| 61 }||| 62 ind[i] = i;||| 63 sz[i] = v[i].second;||| 64 mx[i] = i;||| 65 }||| 66 map<long long, long long> ans;||| 67 ans[0] = cur;||| 68 set<long long> st;||| 69 st.insert(0);||| 70 for (auto to : mp) {||| 71 for (auto x : to.second) {||| 72 unt(x, x + 1);||| 73 }||| 74 st.insert(to.first);||| 75 ans[to.first] = cur;||| 76 }||| 77 while (q--) {||| 78 long long k;||| 79 cin >> k;||| 80 auto it = st.lower_bound(k);||| 81 long long x;||| 82 if (it == st.end()) {||| 83 it--;||| 84 x = *it;||| 85 } else {||| 86 x = *it;||| 87 if (x > k) {||| 88 it--;||| 89 x = *it;||| 90 }||| 91 }||| 92 cout << ans[x] << '\n';||| 93 }||| 94 return 0;||| 95 }||| "	16 if (r - sz[v] >= 0) res -= pref[r - sz[v]];
138	85	"1 #include <bits/stdc++.h>||| 2 const int N = 400005;||| 3 using namespace std;||| 4 int n, m, k, fa[N], cnt[N];||| 5 long long res, ans[N], sum[N];||| 6 pair<int, int> a[N], b[N], q[N];||| 7 int find(int first) {||| 8 return first == fa[first] ? first : fa[first] = find(fa[first]);||| 9 }||| 10 void merge(int first, int second) {||| 11 first = find(first);||| 12 second = find(second);||| 13 res -= sum[first] - sum[first - cnt[first]];||| 14 res -= sum[second] - sum[second - cnt[second]];||| 15 cnt[second] += cnt[first];||| 16 fa[first] = second;||| 17 res += sum[second] - sum[second - cnt[second]];||| 18 }||| 19 int main() {||| 20 scanf(""%d%d%d"", &n, &m, &k);||| 21 for (int i = 1; i <= n; ++i)||| 22 scanf(""%d"", &a[i].first), res += a[i].first, a[i].second = 1;||| 23 for (int i = n + 1; i <= n + m; ++i)||| 24 scanf(""%d"", &a[i].first), a[i].second = 0;||| 25 sort(a + 1, a + n + m + 1);||| 26 for (int i = 1; i <= n + m; ++i) {||| 27 fa[i] = i;||| 28 sum[i] = sum[i - 1] + a[i].first;||| 29 cnt[i] = a[i].second;||| 30 b[i] = make_pair(a[i].first - a[i - 1].first, i - 1);||| 31 }||| 32 for (int i = 1; i <= k; ++i) scanf(""%d"", &q[i].first), q[i].second = i;||| 33 sort(q + 1, q + k + 1);||| 34 sort(b + 1, b + n + m + 1);||| 35 int nw = 0;||| 36 for (int i = 1; i <= k; ++i) {||| 37 while (nw < n + m && b[nw + 1].first <= q[i].first) {||| 38 ++nw;||| 39 merge(b[nw].second, b[nw].second + 1);||| 40 }||| 41 ans[q[i].second] = res;||| 42 }||| 43 for (int i = 1; i <= k; ++i) printf(""%lld\n"", ans[i]);||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 const int N = 400005;||| 3 using namespace std;||| 4 int n, m, k, fa[N], cnt[N];||| 5 long long res, ans[N], sum[N];||| 6 pair<int, int> a[N], b[N], q[N];||| 7 int find(int first) {||| 8 return first == fa[first] ? first : fa[first] = find(fa[first]);||| 9 }||| 10 void merge(int first, int second) {||| 11 first = find(first);||| 12 second = find(second);||| 13 res -= sum[first] - sum[first - cnt[first]];||| 14 res -= sum[second] - sum[second - cnt[second]];||| 15 cnt[second] += cnt[first];||| 16 fa[first] = second;||| 17 res += sum[second] - sum[second - cnt[second]];||| 18 }||| 19 int main() {||| 20 scanf(""%d%d%d"", &n, &m, &k);||| 21 for (int i = 1; i <= n; ++i)||| 22 scanf(""%d"", &a[i].first), res += a[i].first, a[i].second = 1;||| 23 for (int i = n + 1; i <= n + m; ++i)||| 24 scanf(""%d"", &a[i].first), a[i].second = 0;||| 25 sort(a + 1, a + n + m + 1);||| 26 for (int i = 1; i <= n + m; ++i) {||| 27 fa[i] = i;||| 28 sum[i] = sum[i - 1] + a[i].first;||| 29 cnt[i] = a[i].second;||| 30 b[i] = make_pair(a[i].first - a[i - 1].first, i - 1);||| 31 }||| 32 for (int i = 1; i <= k; ++i) scanf(""%d"", &q[i].first), q[i].second = i;||| 33 sort(q + 1, q + k + 1);||| 34 sort(b + 1, b + n + m + 1);||| 35 int nw = 0;||| 36 for (int i = 1; i <= k; ++i) {||| 37 while (nw < n + m + 1 && b[nw + 1].first <= q[i].first) {||| 38 ++nw;||| 39 merge(b[nw].second, b[nw].second + 1);||| 40 }||| 41 ans[q[i].second] = res;||| 42 }||| 43 for (int i = 1; i <= k; ++i) printf(""%lld\n"", ans[i]);||| 44 return 0;||| 45 }||| "	37 while (nw < n + m && b[nw + 1].first <= q[i].first) {
138	58	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());||| 4 mt19937 rnf(2106);||| 5 const int N = 400005;||| 6 int n, m, qq;||| 7 pair<int, bool> a[N];||| 8 pair<int, int> b[N];||| 9 long long pr[N];||| 10 int p[N];||| 11 int l[N], r[N];||| 12 int q[N];||| 13 int first(int x) {||| 14 if (x == p[x]) return x;||| 15 return p[x] = first(p[x]);||| 16 }||| 17 void kpc(int x, int y) {||| 18 x = first(x);||| 19 y = first(y);||| 20 l[y] = min(l[y], l[x]);||| 21 r[y] = max(r[y], r[x]);||| 22 q[y] += q[x];||| 23 p[x] = y;||| 24 }||| 25 long long yans[N];||| 26 void solv() {||| 27 cin >> n >> m >> qq;||| 28 for (int i = 1; i <= n; ++i) {||| 29 cin >> a[i].first;||| 30 a[i].second = true;||| 31 }||| 32 for (int i = n + 1; i <= n + m; ++i) {||| 33 cin >> a[i].first;||| 34 a[i].second = false;||| 35 }||| 36 n += m;||| 37 sort(a + 1, a + n + 1);||| 38 for (int i = 1; i <= qq; ++i) {||| 39 cin >> b[i].first;||| 40 b[i].second = i;||| 41 }||| 42 vector<pair<int, int> > v;||| 43 for (int i = 1; i < n; ++i) {||| 44 v.push_back(make_pair(a[i + 1].first - a[i].first, i));||| 45 }||| 46 sort((v).begin(), (v).end());||| 47 sort(b + 1, b + qq + 1);||| 48 long long ans = 0;||| 49 for (int i = 1; i <= n; ++i) ans += a[i].first * a[i].second;||| 50 for (int i = 1; i <= n; ++i) pr[i] = pr[i - 1] + a[i].first;||| 51 for (int i = 1; i <= n; ++i) {||| 52 p[i] = i;||| 53 l[i] = r[i] = i;||| 54 q[i] = a[i].second;||| 55 }||| 56 int j = 0;||| 57 for (int i = 1; i <= qq; ++i) {||| 58 while (j < ((int)(v).size()) && v[j].first <= b[i].first) {||| 59 int x = v[j].second;||| 60 int y = v[j].second + 1;||| 61 ++j;||| 62 x = first(x);||| 63 y = first(y);||| 64 ans -= (pr[r[x]] - pr[r[x] - q[x]]);||| 65 ans -= (pr[r[y]] - pr[r[y] - q[y]]);||| 66 kpc(x, y);||| 67 x = first(x);||| 68 ans += (pr[r[x]] - pr[r[x] - q[x]]);||| 69 }||| 70 yans[b[i].second] = ans;||| 71 }||| 72 for (int i = 1; i <= qq; ++i) cout << yans[i] << ""\n"";||| 73 }||| 74 int main() {||| 75 ios_base::sync_with_stdio(false), cin.tie(0);||| 76 int tt = 1;||| 77 while (tt--) {||| 78 solv();||| 79 }||| 80 return 0;||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());||| 4 mt19937 rnf(2106);||| 5 const int N = 400005;||| 6 int n, m, qq;||| 7 pair<int, bool> a[N];||| 8 pair<int, int> b[N];||| 9 int pr[N];||| 10 int p[N];||| 11 int l[N], r[N];||| 12 int q[N];||| 13 int first(int x) {||| 14 if (x == p[x]) return x;||| 15 return p[x] = first(p[x]);||| 16 }||| 17 void kpc(int x, int y) {||| 18 x = first(x);||| 19 y = first(y);||| 20 l[y] = min(l[y], l[x]);||| 21 r[y] = max(r[y], r[x]);||| 22 q[y] += q[x];||| 23 p[x] = y;||| 24 }||| 25 long long yans[N];||| 26 void solv() {||| 27 cin >> n >> m >> qq;||| 28 for (int i = 1; i <= n; ++i) {||| 29 cin >> a[i].first;||| 30 a[i].second = true;||| 31 }||| 32 for (int i = n + 1; i <= n + m; ++i) {||| 33 cin >> a[i].first;||| 34 a[i].second = false;||| 35 }||| 36 n += m;||| 37 sort(a + 1, a + n + 1);||| 38 for (int i = 1; i <= qq; ++i) {||| 39 cin >> b[i].first;||| 40 b[i].second = i;||| 41 }||| 42 vector<pair<int, int> > v;||| 43 for (int i = 1; i < n; ++i) {||| 44 v.push_back(make_pair(a[i + 1].first - a[i].first, i));||| 45 }||| 46 sort((v).begin(), (v).end());||| 47 sort(b + 1, b + qq + 1);||| 48 long long ans = 0;||| 49 for (int i = 1; i <= n; ++i) ans += a[i].first * a[i].second;||| 50 for (int i = 1; i <= n; ++i) pr[i] = pr[i - 1] + a[i].first;||| 51 for (int i = 1; i <= n; ++i) {||| 52 p[i] = i;||| 53 l[i] = r[i] = i;||| 54 q[i] = a[i].second;||| 55 }||| 56 int j = 0;||| 57 for (int i = 1; i <= qq; ++i) {||| 58 while (j < ((int)(v).size()) && v[j].first <= b[i].first) {||| 59 int x = v[j].second;||| 60 int y = v[j].second + 1;||| 61 ++j;||| 62 x = first(x);||| 63 y = first(y);||| 64 ans -= (pr[r[x]] - pr[r[x] - q[x]]);||| 65 ans -= (pr[r[y]] - pr[r[y] - q[y]]);||| 66 kpc(x, y);||| 67 x = first(x);||| 68 ans += (pr[r[x]] - pr[r[x] - q[x]]);||| 69 }||| 70 yans[b[i].second] = ans;||| 71 }||| 72 for (int i = 1; i <= qq; ++i) cout << yans[i] << ""\n"";||| 73 }||| 74 int main() {||| 75 ios_base::sync_with_stdio(false), cin.tie(0);||| 76 int tt = 1;||| 77 while (tt--) {||| 78 solv();||| 79 }||| 80 return 0;||| 81 }||| "	9 long long pr[N];
139	166	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, s, d;||| 5 cin >> t;||| 6 while (t--) {||| 7 int count = 0;||| 8 string a;||| 9 cin >> a;||| 10 s = a.size();||| 11 d = s / 2;||| 12 if (s % 2 == 1) {||| 13 cout << ""no"" << endl;||| 14 } else {||| 15 for (int i = 0; i < d; i++) {||| 16 if (a[i] != a[i + d]) {||| 17 count = 1;||| 18 break;||| 19 }||| 20 }||| 21 if (count == 1)||| 22 cout << ""no"" << endl;||| 23 else||| 24 cout << ""yes"" << endl;||| 25 }||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, s, d;||| 5 cin >> t;||| 6 while (t--) {||| 7 int count = 0;||| 8 string a;||| 9 cin >> a;||| 10 s = a.size();||| 11 d = s / 2;||| 12 if (s % 2 == 1) {||| 13 cout << ""no1"" << endl;||| 14 } else {||| 15 for (int i = 0; i < d; i++) {||| 16 if (a[i] != a[i + d]) {||| 17 count = 1;||| 18 break;||| 19 }||| 20 }||| 21 if (count == 1)||| 22 cout << ""no"" << endl;||| 23 else||| 24 cout << ""yes"" << endl;||| 25 }||| 26 }||| 27 }||| "	"13 cout << ""no"" << endl;"
139	19	"1 #include <bits/stdc++.h>||| 2 int consider(char *s) {||| 3 int len = strlen(s);||| 4 if (len % 2 != 0) return 0;||| 5 int i = 0, j = len / 2;||| 6 while (j < len) {||| 7 if (s[i] != s[j]) return 0;||| 8 i++;||| 9 j++;||| 10 }||| 11 return 1;||| 12 }||| 13 void solution() {||| 14 int times;||| 15 scanf(""%d"", &times);||| 16 for (int t = 0; t < times; t++) {||| 17 char s[1000];||| 18 scanf(""%s"", s);||| 19 if (consider(s))||| 20 printf(""YES\n"");||| 21 else||| 22 printf(""NO\n"");||| 23 }||| 24 }||| 25 int main() {||| 26 solution();||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 int consider(char *s) {||| 3 int len = strlen(s);||| 4 if (len % 2 != 0) return 0;||| 5 int i = 0, j = len / 2;||| 6 while (j < len) {||| 7 if (s[i] != s[j]) return 0;||| 8 i++;||| 9 j++;||| 10 }||| 11 return 1;||| 12 }||| 13 void solution() {||| 14 int T;||| 15 scanf(""%s"", &T);||| 16 for (int t = 0; t < T; t++) {||| 17 char s[1000];||| 18 scanf(""%s"", s);||| 19 if (consider(s))||| 20 printf(""YES\n"");||| 21 else||| 22 printf(""NO\n"");||| 23 }||| 24 }||| 25 int main() {||| 26 solution();||| 27 return 0;||| 28 }||| "	14 int times;
139	255	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int t;||| 5 string s;||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 cin >> t;||| 11 for (int c = 1; c <= t; ++c) {||| 12 int flag = 0;||| 13 cin >> s;||| 14 if (s.length() % 2 != 0) {||| 15 cout << ""NO"" << endl;||| 16 } else {||| 17 for (int i = 0; i <= (s.length() / 2) - 1; ++i) {||| 18 if (s[i] != s[(s.length() / 2) + i]) {||| 19 flag = 1;||| 20 }||| 21 }||| 22 if (flag == 0) {||| 23 cout << ""YES"" << endl;||| 24 } else {||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int t;||| 5 string s;||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 cin >> t;||| 11 for (int c = 1; c <= t; ++c) {||| 12 int flag = 0;||| 13 cin >> s;||| 14 if (s.length() % 2 != 0) {||| 15 cout << ""NO"" << endl;||| 16 } else {||| 17 for (int i = 0; i < (s.length() / 2) - 1; ++i) {||| 18 if (s[i] != s[(s.length() / 2) + i]) {||| 19 flag = 1;||| 20 }||| 21 }||| 22 if (flag == 0) {||| 23 cout << ""YES"" << endl;||| 24 } else {||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	17 for (int i = 0; i <= (s.length() / 2) - 1; ++i) {
139	260	"1 #include <bits/stdc++.h>||| 2 int main(void) {||| 3 int t, len, i, flag;||| 4 char c[102];||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 flag = 0;||| 8 scanf(""%s"", c);||| 9 len = strlen(c);||| 10 if (len % 2 == 0) {||| 11 flag = 1;||| 12 for (i = 0; i < (len / 2) && flag; i++)||| 13 if (c[i] != c[i + len / 2]) flag = 0;||| 14 }||| 15 if (flag)||| 16 printf(""YES\n"");||| 17 else||| 18 printf(""NO\n"");||| 19 }||| 20 return 0;||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 int main(void) {||| 3 int t, len, i, flag;||| 4 char c[102];||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 flag = 0;||| 8 scanf(""%s"", c);||| 9 len = strlen(c);||| 10 if (len % 2 == 0) {||| 11 flag = 1;||| 12 for (i = 0; i < (len / 2) && flag; i++)||| 13 if (c[i] != c[i + len / 2]) flag = 0;||| 14 }||| 15 if (flag)||| 16 printf(""YES"");||| 17 else||| 18 printf(""NO"");||| 19 }||| 20 return 0;||| 21 }||| "	"16 printf(""YES\n"");"
139	140	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << ' ' << H;||| 20 dbg_out(T...);||| 21 }||| 22 const int MAX_N = 1e5 + 5;||| 23 const long long MOD = 1e9 + 7;||| 24 const long long INF = 1e9;||| 25 const long double EPS = 1e-9;||| 26 void solve() {||| 27 string str;||| 28 cin >> str;||| 29 int len = ((int)str.size());||| 30 if (len & 1)||| 31 cout << ""NO"" << endl;||| 32 else {||| 33 for (int i = 0; i < len / 2; ++i) {||| 34 if (str[i] != str[i + len / 2]) {||| 35 cout << ""NO"" << endl;||| 36 return;||| 37 }||| 38 }||| 39 cout << ""YES"" << endl;||| 40 }||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 cout.tie(0);||| 46 int tc = 1;||| 47 cin >> tc;||| 48 for (int t = 1; t <= tc; t++) {||| 49 solve();||| 50 }||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename A, typename B>||| 4 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 5 return os << '(' << p.first << "", "" << p.second << ')';||| 6 }||| 7 template <typename T_container, typename T = typename enable_if<||| 8 !is_same<T_container, string>::value,||| 9 typename T_container::value_type>::type>||| 10 ostream &operator<<(ostream &os, const T_container &v) {||| 11 os << '{';||| 12 string sep;||| 13 for (const T &x : v) os << sep << x, sep = "", "";||| 14 return os << '}';||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << ' ' << H;||| 20 dbg_out(T...);||| 21 }||| 22 const int MAX_N = 1e5 + 5;||| 23 const long long MOD = 1e9 + 7;||| 24 const long long INF = 1e9;||| 25 const long double EPS = 1e-9;||| 26 void solve() {||| 27 string str;||| 28 cin >> str;||| 29 int len = ((int)str.size());||| 30 if (len & 1)||| 31 cout << ""NO"" << endl;||| 32 else {||| 33 for (int i = 0; i < len / 2; ++i) {||| 34 if (str[i] != str[i + len / 2]) {||| 35 cout << ""NO"" << endl;||| 36 break;||| 37 }||| 38 }||| 39 cout << ""YES"" << endl;||| 40 }||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 cout.tie(0);||| 46 int tc = 1;||| 47 cin >> tc;||| 48 for (int t = 1; t <= tc; t++) {||| 49 solve();||| 50 }||| 51 }||| "	36 return;
139	119	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""N0"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"24 cout << ""NO"" << endl;"
139	259	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""N0"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"24 cout << ""NO"" << endl;"
139	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n, j, i;||| 5 string str, str1, str2;||| 6 cin >> n;||| 7 for (i = 0; i < n; i++) {||| 8 cin >> str;||| 9 if (str.length() % 2 == 0) {||| 10 j = str.length() / 2;||| 11 str1 = str.substr(0, j);||| 12 str2 = str.substr(j, j);||| 13 if (str1 == str2) {||| 14 cout << ""YES"" << endl;||| 15 } else||| 16 cout << ""NO"" << endl;||| 17 } else {||| 18 cout << ""NO"" << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n, j, i;||| 5 string str, str1, str2;||| 6 cin >> n;||| 7 for (i = 0; i < n; i++) {||| 8 cin >> str;||| 9 if (str.length() % 2 == 0) {||| 10 j = str.length() / 2;||| 11 str1 = str.substr(0, j);||| 12 str2 = str.substr(0, j);||| 13 if (str1 == str2) {||| 14 cout << ""YES"" << endl;||| 15 } else||| 16 cout << ""NO"" << endl;||| 17 } else {||| 18 cout << ""NO"" << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	12 str2 = str.substr(j, j);
139	119	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string tes1 = """";||| 11 string tes2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 tes1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 tes2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (tes1 == tes2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""N0"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"10 string tes1 = """";"
139	259	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string tes1 = """";||| 11 string tes2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 tes1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 tes2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (tes1 == tes2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.size();||| 10 string test1 = """";||| 11 string test2 = """";||| 12 for (int j = 0; j < n / 2; j++) {||| 13 test1 += s[j];||| 14 }||| 15 for (int k = n / 2; k < n; k++) {||| 16 test2 += s[k];||| 17 }||| 18 if (n % 2 != 0)||| 19 cout << ""NO"" << endl;||| 20 else {||| 21 if (test1 == test2) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""N0"" << endl;||| 25 }||| 26 }||| 27 }||| 28 return 0;||| 29 }||| "	"10 string tes1 = """";"
139	96	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int flag = 0;||| 10 int l = s.length();||| 11 for (int i = 0; i < l / 2; i++) {||| 12 if (s[i] != s[i + l / 2]) {||| 13 flag = 1;||| 14 break;||| 15 }||| 16 }||| 17 if (flag == 1 || l % 2 == 1)||| 18 cout << ""NO"" << endl;||| 19 else||| 20 cout << ""YES"" << endl;||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int flag = 0;||| 10 int l = s.length();||| 11 for (int i = 0; i < l / 2; i++) {||| 12 if (s[i] != s[i + l / 2]) {||| 13 flag = 1;||| 14 break;||| 15 }||| 16 }||| 17 if (flag == 1 || l % 2 == 1)||| 18 cout << ""N0"" << endl;||| 19 else||| 20 cout << ""YES"" << endl;||| 21 }||| 22 return 0;||| 23 }||| "	"18 cout << ""NO"" << endl;"
139	95	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.length() / 2 - 1;||| 10 int k = s.length() - 1;||| 11 int t = 0;||| 12 while (n >= 0 && k >= s.length() / 2) {||| 13 if (s[n] != s[k]) {||| 14 t = 1;||| 15 break;||| 16 }||| 17 n--;||| 18 k--;||| 19 }||| 20 if (t || s.length() % 2)||| 21 cout << ""NO"" << endl;||| 22 else||| 23 cout << ""YES"" << endl;||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 int n = s.length() / 2 - 1;||| 10 int k = s.length() - 1;||| 11 int t = 0;||| 12 while (n > 0 && k > s.length() / 2) {||| 13 if (s[n] != s[k]) {||| 14 t = 1;||| 15 break;||| 16 }||| 17 n--;||| 18 k--;||| 19 }||| 20 if (t || s.length() % 2)||| 21 cout << ""NO"" << endl;||| 22 else||| 23 cout << ""YES"" << endl;||| 24 }||| 25 return 0;||| 26 }||| "	12 while (n >= 0 && k >= s.length() / 2) {
140	245	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long power(long long x, unsigned long long y) {||| 8 long long res = 1;||| 9 while (y > 0) {||| 10 if (y & 1) res = res * x;||| 11 y = y >> 1;||| 12 x = x * x;||| 13 }||| 14 return res;||| 15 }||| 16 long long one(long long x, long long y) {||| 17 long long s = (x + 1) / power(2, y);||| 18 if (s % 2 == 0) {||| 19 return s / 2 * power(2, y);||| 20 } else {||| 21 return (s / 2 * power(2, y)) + ((x + 1) % power(2, y));||| 22 }||| 23 }||| 24 signed main() {||| 25 ios::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 long long n;||| 32 cin >> n;||| 33 set<long long> s;||| 34 long long x = sqrt(n);||| 35 for (long long i = 1; i <= x; i++) {||| 36 if (i * i <= n) {||| 37 s.insert(i * i);||| 38 }||| 39 if (i * i * i <= n) {||| 40 s.insert(i * i * i);||| 41 }||| 42 }||| 43 cout << s.size() << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) return a;||| 5 return gcd(b, a % b);||| 6 }||| 7 long long power(long long x, unsigned long long y) {||| 8 long long res = 1;||| 9 while (y > 0) {||| 10 if (y & 1) res = res * x;||| 11 y = y >> 1;||| 12 x = x * x;||| 13 }||| 14 return res;||| 15 }||| 16 long long one(long long x, long long y) {||| 17 long long s = (x + 1) / power(2, y);||| 18 if (s % 2 == 0) {||| 19 return s / 2 * power(2, y);||| 20 } else {||| 21 return (s / 2 * power(2, y)) + ((x + 1) % power(2, y));||| 22 }||| 23 }||| 24 signed main() {||| 25 ios::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 long long n;||| 32 cin >> n;||| 33 set<long long> s;||| 34 long long x = sqrt(n);||| 35 for (long long i = 0; i < x; i++) {||| 36 if (i * i <= n) {||| 37 s.insert(i * i);||| 38 }||| 39 if (i * i * i <= n) {||| 40 s.insert(i * i * i);||| 41 }||| 42 }||| 43 cout << s.size() << endl;||| 44 }||| 45 }||| 	35 for (long long i = 1; i <= x; i++) {
141	23	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 void solve() {||| 5 long long a, s, tempa, temp2;||| 6 cin >> a >> s;||| 7 if (a == s) {||| 8 cout << ""0"";||| 9 return;||| 10 }||| 11 tempa = a;||| 12 temp2 = s;||| 13 vector<int> num1, sum;||| 14 while (tempa > 0) {||| 15 num1.push_back(tempa % 10);||| 16 tempa = tempa / 10;||| 17 }||| 18 while (temp2 > 0) {||| 19 sum.push_back(temp2 % 10);||| 20 temp2 = temp2 / 10;||| 21 }||| 22 int c = num1.size();||| 23 if (num1.size() < sum.size()) {||| 24 for (int i = 0; i < sum.size() - num1.size(); i++) num1.push_back(0);||| 25 }||| 26 vector<long long> ans;||| 27 int k = 0;||| 28 for (int i = 0; i < c; i++) {||| 29 if (k >= sum.size()) {||| 30 cout << ""-1"";||| 31 return;||| 32 }||| 33 if (num1[i] <= sum[k]) {||| 34 ans.push_back(sum[k] - num1[i]);||| 35 k++;||| 36 } else {||| 37 if (k + 1 >= sum.size()) {||| 38 cout << ""-1"";||| 39 return;||| 40 }||| 41 int x = (sum[k + 1] * 10 + sum[k]);||| 42 if (x - num1[i] > 9) {||| 43 cout << ""-1"";||| 44 return;||| 45 }||| 46 ans.push_back(x - num1[i]);||| 47 k += 2;||| 48 }||| 49 }||| 50 if (k < sum.size()) {||| 51 for (int i = k; i < sum.size(); i++) {||| 52 ans.push_back(sum[i]);||| 53 }||| 54 }||| 55 reverse(ans.begin(), ans.end());||| 56 int itr = 0;||| 57 for (int i = 0; i < ans.size(); i++) {||| 58 if (ans[i] != 0) {||| 59 itr = i;||| 60 break;||| 61 }||| 62 }||| 63 for (int i = 0; i < ans.size(); i++) {||| 64 if (ans[i] < 0) {||| 65 cout << ""-1"";||| 66 return;||| 67 }||| 68 }||| 69 long long num = 0;||| 70 for (int i = itr; i < ans.size(); i++) {||| 71 num = num * 10 + ans[i];||| 72 }||| 73 if (num > s) {||| 74 cout << ""-1"";||| 75 return;||| 76 }||| 77 for (int i = itr; i < ans.size(); i++) cout << ans[i];||| 78 }||| 79 int main() {||| 80 ios::sync_with_stdio(0);||| 81 cin.tie(0);||| 82 cout.tie(0);||| 83 int t = 1;||| 84 cin >> t;||| 85 while (t--) {||| 86 solve();||| 87 cout << ""\n"";||| 88 }||| 89 return 0;||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 void solve() {||| 5 long long a, s, tempa, temp2;||| 6 cin >> a >> s;||| 7 if (a == s) {||| 8 cout << ""0"";||| 9 return;||| 10 }||| 11 tempa = a;||| 12 temp2 = s;||| 13 vector<int> num1, sum;||| 14 while (tempa > 0) {||| 15 num1.push_back(tempa % 10);||| 16 tempa = tempa / 10;||| 17 }||| 18 while (temp2 > 0) {||| 19 sum.push_back(temp2 % 10);||| 20 temp2 = temp2 / 10;||| 21 }||| 22 int c = num1.size();||| 23 if (num1.size() < sum.size()) {||| 24 for (int i = 0; i < sum.size() - num1.size(); i++) num1.push_back(0);||| 25 }||| 26 vector<long long> ans;||| 27 int k = 0;||| 28 for (int i = 0; i < c; i++) {||| 29 if (k >= sum.size()) {||| 30 cout << ""-1"";||| 31 return;||| 32 }||| 33 if (num1[i] <= sum[k]) {||| 34 ans.push_back(sum[k] - num1[i]);||| 35 k++;||| 36 } else {||| 37 if (k + 1 >= sum.size()) {||| 38 cout << ""-1"";||| 39 return;||| 40 }||| 41 int x = (sum[k + 1] * 10 + sum[k]);||| 42 if (x - num1[i] > 9) {||| 43 cout << ""-1"";||| 44 return;||| 45 }||| 46 ans.push_back(x - num1[i]);||| 47 k += 2;||| 48 }||| 49 }||| 50 if (k < sum.size()) {||| 51 for (int i = c; i < sum.size(); i++) {||| 52 ans.push_back(sum[i]);||| 53 }||| 54 }||| 55 reverse(ans.begin(), ans.end());||| 56 int itr = 0;||| 57 for (int i = 0; i < ans.size(); i++) {||| 58 if (ans[i] != 0) {||| 59 itr = i;||| 60 break;||| 61 }||| 62 }||| 63 for (int i = 0; i < ans.size(); i++) {||| 64 if (ans[i] < 0) {||| 65 cout << ""-1"";||| 66 return;||| 67 }||| 68 }||| 69 long long num = 0;||| 70 for (int i = itr; i < ans.size(); i++) {||| 71 num = num * 10 + ans[i];||| 72 }||| 73 if (num > s) {||| 74 cout << ""-1"";||| 75 return;||| 76 }||| 77 for (int i = itr; i < ans.size(); i++) cout << ans[i];||| 78 }||| 79 int main() {||| 80 ios::sync_with_stdio(0);||| 81 cin.tie(0);||| 82 cout.tie(0);||| 83 int t = 1;||| 84 cin >> t;||| 85 while (t--) {||| 86 solve();||| 87 cout << ""\n"";||| 88 }||| 89 return 0;||| 90 }||| "	51 for (int i = k; i < sum.size(); i++) {
141	163	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> v;||| 4 vector<long long int> ss;||| 5 vector<long long int> aa;||| 6 int main() {||| 7 long long int t;||| 8 cin >> t;||| 9 while (t > 0) {||| 10 v.clear();||| 11 ss.clear();||| 12 aa.clear();||| 13 string a, s;||| 14 cin >> a >> s;||| 15 for (long long int i = a.length() - 1; i >= 0; i--) {||| 16 aa.push_back(a[i] - '0');||| 17 }||| 18 for (long long int i = s.length() - 1; i >= 0; i--) {||| 19 ss.push_back(s[i] - '0');||| 20 }||| 21 long long int flg = 0;||| 22 long long int i = 0, j = 0;||| 23 while (i < aa.size()) {||| 24 if (j >= ss.size()) {||| 25 flg = 1;||| 26 break;||| 27 }||| 28 if (ss[j] < aa[i]) {||| 29 if (j + 1 >= ss.size()) {||| 30 flg = 1;||| 31 break;||| 32 }||| 33 long long int q = (ss[j + 1] * 10) + ss[j];||| 34 long long int num = q - aa[i];||| 35 if (num > 9 or num < 0) {||| 36 flg = 1;||| 37 break;||| 38 } else {||| 39 v.push_back(num);||| 40 }||| 41 j = j + 2;||| 42 } else {||| 43 v.push_back(ss[j] - aa[i]);||| 44 j++;||| 45 }||| 46 i++;||| 47 }||| 48 if (flg) {||| 49 cout << ""-1"" << endl;||| 50 } else {||| 51 long long int ans = 0;||| 52 if (j < ss.size()) {||| 53 for (long long int i = j; i < ss.size(); i++) {||| 54 v.push_back(ss[i]);||| 55 }||| 56 }||| 57 long long int i = v.size() - 1;||| 58 while (v[i] == 0) {||| 59 i--;||| 60 }||| 61 long long int c = 0;||| 62 for (long long int j = i; j >= 0; j--) {||| 63 cout << v[j];||| 64 c++;||| 65 }||| 66 if (c == 0) {||| 67 cout << 0;||| 68 }||| 69 cout << endl;||| 70 }||| 71 t--;||| 72 }||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> v;||| 4 vector<long long int> ss;||| 5 vector<long long int> aa;||| 6 int main() {||| 7 long long int t;||| 8 cin >> t;||| 9 while (t > 0) {||| 10 v.clear();||| 11 ss.clear();||| 12 aa.clear();||| 13 string a, s;||| 14 cin >> a >> s;||| 15 for (long long int i = a.length() - 1; i >= 0; i--) {||| 16 aa.push_back(a[i] - '0');||| 17 }||| 18 for (long long int i = s.length() - 1; i >= 0; i--) {||| 19 ss.push_back(s[i] - '0');||| 20 }||| 21 long long int flg = 0;||| 22 long long int i = 0, j = 0;||| 23 while (i < aa.size()) {||| 24 if (j >= ss.size()) {||| 25 flg = 1;||| 26 break;||| 27 }||| 28 if (ss[j] < aa[i]) {||| 29 if (j + 1 >= ss.size()) {||| 30 flg = 1;||| 31 break;||| 32 }||| 33 long long int q = (ss[j + 1] * 10) + ss[j];||| 34 long long int num = q - aa[i];||| 35 if (num > 9 and num >= 0) {||| 36 flg = 1;||| 37 break;||| 38 } else {||| 39 v.push_back(num);||| 40 }||| 41 j = j + 2;||| 42 } else {||| 43 v.push_back(ss[j] - aa[i]);||| 44 j++;||| 45 }||| 46 i++;||| 47 }||| 48 if (flg) {||| 49 cout << ""-1"" << endl;||| 50 } else {||| 51 long long int ans = 0;||| 52 if (j < ss.size()) {||| 53 for (long long int i = j; i < ss.size(); i++) {||| 54 v.push_back(ss[i]);||| 55 }||| 56 }||| 57 long long int i = v.size() - 1;||| 58 while (v[i] == 0) {||| 59 i--;||| 60 }||| 61 long long int c = 0;||| 62 for (long long int j = i; j >= 0; j--) {||| 63 cout << v[j];||| 64 c++;||| 65 }||| 66 if (c == 0) {||| 67 cout << 0;||| 68 }||| 69 cout << endl;||| 70 }||| 71 t--;||| 72 }||| 73 }||| "	35 if (num > 9 or num < 0) {
141	188	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> v;||| 4 vector<long long int> ss;||| 5 vector<long long int> aa;||| 6 int main() {||| 7 long long int t;||| 8 cin >> t;||| 9 while (t > 0) {||| 10 v.clear();||| 11 ss.clear();||| 12 aa.clear();||| 13 string a, s;||| 14 cin >> a >> s;||| 15 for (long long int i = a.length() - 1; i >= 0; i--) {||| 16 aa.push_back(a[i] - '0');||| 17 }||| 18 for (long long int i = s.length() - 1; i >= 0; i--) {||| 19 ss.push_back(s[i] - '0');||| 20 }||| 21 long long int flg = 0;||| 22 long long int i = 0, j = 0;||| 23 while (i < aa.size()) {||| 24 if (j >= ss.size()) {||| 25 flg = 1;||| 26 break;||| 27 }||| 28 if (ss[j] < aa[i]) {||| 29 if (j + 1 >= ss.size()) {||| 30 flg = 1;||| 31 break;||| 32 }||| 33 long long int q = (ss[j + 1] * 10) + ss[j];||| 34 long long int num = q - aa[i];||| 35 if (num > 9 or num < 0) {||| 36 flg = 1;||| 37 break;||| 38 } else {||| 39 v.push_back(num);||| 40 }||| 41 j = j + 2;||| 42 } else {||| 43 v.push_back(ss[j] - aa[i]);||| 44 j++;||| 45 }||| 46 i++;||| 47 }||| 48 if (flg) {||| 49 cout << ""-1"" << endl;||| 50 } else {||| 51 long long int ans = 0;||| 52 if (j < ss.size()) {||| 53 for (long long int i = j; i < ss.size(); i++) {||| 54 v.push_back(ss[i]);||| 55 }||| 56 }||| 57 long long int i = v.size() - 1;||| 58 while (v[i] == 0) {||| 59 i--;||| 60 }||| 61 long long int c = 0;||| 62 for (long long int j = i; j >= 0; j--) {||| 63 cout << v[j];||| 64 c++;||| 65 }||| 66 if (c == 0) {||| 67 cout << 0;||| 68 }||| 69 cout << endl;||| 70 }||| 71 t--;||| 72 }||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> v;||| 4 vector<long long int> ss;||| 5 vector<long long int> aa;||| 6 int main() {||| 7 long long int t;||| 8 cin >> t;||| 9 while (t > 0) {||| 10 v.clear();||| 11 ss.clear();||| 12 aa.clear();||| 13 string a, s;||| 14 cin >> a >> s;||| 15 for (long long int i = a.length() - 1; i >= 0; i--) {||| 16 aa.push_back(a[i] - '0');||| 17 }||| 18 for (long long int i = s.length() - 1; i >= 0; i--) {||| 19 ss.push_back(s[i] - '0');||| 20 }||| 21 long long int flg = 0;||| 22 long long int i = 0, j = 0;||| 23 while (i < aa.size()) {||| 24 if (j >= ss.size()) {||| 25 flg = 1;||| 26 break;||| 27 }||| 28 if (ss[j] < aa[i]) {||| 29 if (j + 1 >= ss.size()) {||| 30 flg = 1;||| 31 break;||| 32 }||| 33 long long int q = (ss[j + 1] * 10) + ss[j];||| 34 long long int num = q - aa[i];||| 35 if (num > 9 and num < 0) {||| 36 flg = 1;||| 37 break;||| 38 } else {||| 39 v.push_back(num);||| 40 }||| 41 j = j + 2;||| 42 } else {||| 43 v.push_back(ss[j] - aa[i]);||| 44 j++;||| 45 }||| 46 i++;||| 47 }||| 48 if (flg) {||| 49 cout << ""-1"" << endl;||| 50 } else {||| 51 long long int ans = 0;||| 52 if (j < ss.size()) {||| 53 for (long long int i = j; i < ss.size(); i++) {||| 54 v.push_back(ss[i]);||| 55 }||| 56 }||| 57 long long int i = v.size() - 1;||| 58 while (v[i] == 0) {||| 59 i--;||| 60 }||| 61 long long int c = 0;||| 62 for (long long int j = i; j >= 0; j--) {||| 63 cout << v[j];||| 64 c++;||| 65 }||| 66 if (c == 0) {||| 67 cout << 0;||| 68 }||| 69 cout << endl;||| 70 }||| 71 t--;||| 72 }||| 73 }||| "	35 if (num > 9 or num < 0) {
141	74	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long m = 1e9 + 7;||| 4 void __print(int x) { cerr << x; }||| 5 void __print(long x) { cerr << x; }||| 6 void __print(long long x) { cerr << x; }||| 7 void __print(unsigned x) { cerr << x; }||| 8 void __print(unsigned long x) { cerr << x; }||| 9 void __print(unsigned long long x) { cerr << x; }||| 10 void __print(long double x) { cerr << x; }||| 11 void __print(char x) { cerr << '\'' << x << '\''; }||| 12 void __print(const char *x) { cerr << '\""' << x << '\""'; }||| 13 void __print(const string &x) { cerr << '\""' << x << '\""'; }||| 14 template <typename T, typename V>||| 15 void __print(const pair<T, V> &x) {||| 16 cerr << '{';||| 17 __print(x.first);||| 18 cerr << ',';||| 19 __print(x.second);||| 20 cerr << '}';||| 21 }||| 22 template <typename T>||| 23 void __print(const T &x) {||| 24 int f = 0;||| 25 cerr << '{';||| 26 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 27 cerr << ""}"";||| 28 }||| 29 void _print() { cerr << ""]\n""; }||| 30 template <typename T, typename... V>||| 31 void _print(T t, V... v) {||| 32 __print(t);||| 33 if (sizeof...(v)) cerr << "", "";||| 34 _print(v...);||| 35 }||| 36 void solve() {||| 37 string a, s;||| 38 cin >> a >> s;||| 39 string b = """";||| 40 while (!s.empty() || !a.empty()) {||| 41 if (s.empty()) {||| 42 b = ""-1"";||| 43 break;||| 44 } else if (a.empty()) {||| 45 b = s + b;||| 46 break;||| 47 } else if (a.back() <= s.back()) {||| 48 b = to_string(s.back() - a.back()) + b;||| 49 s.pop_back();||| 50 a.pop_back();||| 51 } else {||| 52 b = to_string(10 + s.back() - a.back()) + b;||| 53 s.pop_back();||| 54 a.pop_back();||| 55 if (s.empty() || s.back() != '1') {||| 56 b = ""-1"";||| 57 break;||| 58 }||| 59 s.pop_back();||| 60 }||| 61 }||| 62 while (b[0] == '0') {||| 63 b = b.substr(1);||| 64 }||| 65 cout << b << ""\n"";||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 cout.tie(NULL);||| 71 ;||| 72 int t = 1;||| 73 cin >> t;||| 74 while (t--) {||| 75 solve();||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long m = 1e9 + 7;||| 4 void __print(int x) { cerr << x; }||| 5 void __print(long x) { cerr << x; }||| 6 void __print(long long x) { cerr << x; }||| 7 void __print(unsigned x) { cerr << x; }||| 8 void __print(unsigned long x) { cerr << x; }||| 9 void __print(unsigned long long x) { cerr << x; }||| 10 void __print(long double x) { cerr << x; }||| 11 void __print(char x) { cerr << '\'' << x << '\''; }||| 12 void __print(const char *x) { cerr << '\""' << x << '\""'; }||| 13 void __print(const string &x) { cerr << '\""' << x << '\""'; }||| 14 template <typename T, typename V>||| 15 void __print(const pair<T, V> &x) {||| 16 cerr << '{';||| 17 __print(x.first);||| 18 cerr << ',';||| 19 __print(x.second);||| 20 cerr << '}';||| 21 }||| 22 template <typename T>||| 23 void __print(const T &x) {||| 24 int f = 0;||| 25 cerr << '{';||| 26 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 27 cerr << ""}"";||| 28 }||| 29 void _print() { cerr << ""]\n""; }||| 30 template <typename T, typename... V>||| 31 void _print(T t, V... v) {||| 32 __print(t);||| 33 if (sizeof...(v)) cerr << "", "";||| 34 _print(v...);||| 35 }||| 36 void solve() {||| 37 string a, s;||| 38 cin >> a >> s;||| 39 string b = """";||| 40 while (!s.empty() || !a.empty()) {||| 41 if (s.empty()) {||| 42 b = ""-1"";||| 43 break;||| 44 } else if (a.empty()) {||| 45 b = s;||| 46 break;||| 47 } else if (a.back() <= s.back()) {||| 48 b = to_string(s.back() - a.back()) + b;||| 49 s.pop_back();||| 50 a.pop_back();||| 51 } else {||| 52 b = to_string(10 + s.back() - a.back()) + b;||| 53 s.pop_back();||| 54 a.pop_back();||| 55 if (s.empty() || s.back() != '1') {||| 56 b = ""-1"";||| 57 break;||| 58 }||| 59 s.pop_back();||| 60 }||| 61 }||| 62 while (b[0] == '0') {||| 63 b = b.substr(1);||| 64 }||| 65 cout << b << ""\n"";||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 cout.tie(NULL);||| 71 ;||| 72 int t = 1;||| 73 cin >> t;||| 74 while (t--) {||| 75 solve();||| 76 }||| 77 return 0;||| 78 }||| "	45 b = s + b;
141	375	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e18;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 long long int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 string a, s;||| 12 cin >> a >> s;||| 13 vector<long long int> v;||| 14 long long int x = s.length() - 1, flag = 1;||| 15 for (int i = a.length() - 1; i >= 0; i--) {||| 16 if (x < 0) {||| 17 flag = 0;||| 18 break;||| 19 }||| 20 if (s[x] >= a[i])||| 21 v.push_back(s[x] - a[i]), x--;||| 22 else {||| 23 if (x > 0 && s[x - 1] == '1')||| 24 v.push_back(10 + s[x] - a[i]), x -= 2;||| 25 else {||| 26 flag = 0;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (x >= 0) {||| 32 for (int i = x; i >= 0; i--) {||| 33 v.push_back(s[i] - '0');||| 34 }||| 35 }||| 36 if (flag == 0)||| 37 cout << ""-1\n"";||| 38 else {||| 39 long long int p = 0;||| 40 reverse(v.begin(), v.end());||| 41 for (auto i : v) {||| 42 if (i != 0) p = 1;||| 43 if (p == 1) cout << i;||| 44 }||| 45 cout << endl;||| 46 }||| 47 }||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1e18;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 long long int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 string a, s;||| 12 cin >> a >> s;||| 13 vector<long long int> v;||| 14 long long int x = s.length() - 1, flag = 1;||| 15 for (int i = a.length() - 1; i >= 0; i--) {||| 16 if (x < 0) {||| 17 flag = 0;||| 18 break;||| 19 }||| 20 if (s[x] >= a[i])||| 21 v.push_back(s[x] - a[i]), x--;||| 22 else {||| 23 if (x > 0 && s[x - 1] == '1')||| 24 v.push_back(10 + s[x] - a[i]), x -= 2;||| 25 else {||| 26 flag = 0;||| 27 break;||| 28 }||| 29 }||| 30 }||| 31 if (x >= 0) {||| 32 for (int i = x; i >= 0; i--) {||| 33 v.push_back(s[x] - '0');||| 34 }||| 35 }||| 36 if (flag == 0)||| 37 cout << ""-1\n"";||| 38 else {||| 39 long long int p = 0;||| 40 reverse(v.begin(), v.end());||| 41 for (auto i : v) {||| 42 if (i != 0) p = 1;||| 43 if (p == 1) cout << i;||| 44 }||| 45 cout << endl;||| 46 }||| 47 }||| 48 }||| "	33 v.push_back(s[i] - '0');
142	53	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int m, n;||| 8 scanf(""%d %d"", &m, &n);||| 9 int happyness[m][n];||| 10 for (int i = 0; i < m; ++i) {||| 11 for (int j = 0; j < n; ++j) {||| 12 cin >> happyness[i][j];||| 13 }||| 14 }||| 15 if (m == 1) {||| 16 int min = happyness[0][0];||| 17 for (int i = 1; i < n; ++i) {||| 18 if (happyness[0][i] < min) min = happyness[0][i];||| 19 }||| 20 cout << min << endl;||| 21 } else {||| 22 int special_row = 0, ans1 = 0, ans2 = 0, k = 0, column1 = 0, column2 = 1;||| 23 for (int i = 0; i < m; ++i) {||| 24 int max, second_max, max_column, second_max_column;||| 25 if (happyness[i][0] >= happyness[i][1]) {||| 26 max = happyness[i][0], second_max = happyness[i][1];||| 27 max_column = 0, second_max_column = 1;||| 28 } else {||| 29 second_max = happyness[i][0], max = happyness[i][1];||| 30 max_column = 1, second_max_column = 0;||| 31 }||| 32 if (n > 2) {||| 33 for (int j = 2; j < n; ++j) {||| 34 if (happyness[i][j] > max) {||| 35 second_max = max, max = happyness[i][j];||| 36 second_max_column = max_column, max_column = j;||| 37 } else if (happyness[i][j] > second_max && happyness[i][j] <= max) {||| 38 second_max = happyness[i][j];||| 39 second_max_column = j;||| 40 }||| 41 }||| 42 }||| 43 if (second_max > ans1) {||| 44 ans1 = second_max, column1 = second_max_column, column2 = max_column;||| 45 }||| 46 }||| 47 if (n > 2 && m > 1) {||| 48 int columnmax[n - 2];||| 49 for (int i = 0; i < n; ++i) {||| 50 if (i != column1 && i != column2) {||| 51 int j = 0;||| 52 columnmax[k] = happyness[j][i];||| 53 for (j = 1; j < m; ++j) {||| 54 if (happyness[j][i] > columnmax[k]) {||| 55 columnmax[k] = happyness[j][i];||| 56 }||| 57 }||| 58 ++k;||| 59 }||| 60 }||| 61 ans2 = columnmax[0];||| 62 for (int i = 0; i < n - 2; ++i) {||| 63 if (columnmax[i] < ans2) ans2 = columnmax[i];||| 64 }||| 65 if (ans2 <= ans1)||| 66 cout << ans2 << endl;||| 67 else||| 68 cout << ans1 << endl;||| 69 } else||| 70 cout << ans1 << endl;||| 71 }||| 72 }||| 73 return 0;||| 74 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int m, n;||| 8 scanf(""%d %d"", &m, &n);||| 9 int happyness[m][n];||| 10 for (int i = 0; i < m; ++i) {||| 11 for (int j = 0; j < n; ++j) {||| 12 cin >> happyness[i][j];||| 13 }||| 14 }||| 15 if (m == 1) {||| 16 int min = happyness[0][0];||| 17 for (int i = 1; i < n; ++i) {||| 18 if (happyness[0][i] < min) min = happyness[0][i];||| 19 }||| 20 cout << min << endl;||| 21 } else {||| 22 int special_row = 0, ans1 = 0, ans2 = 0, k = 0, column1 = 0, column2 = 1;||| 23 for (int i = 0; i < m; ++i) {||| 24 int max, second_max, max_column, second_max_column;||| 25 if (happyness[i][0] >= happyness[i][1]) {||| 26 max = happyness[i][0], second_max = happyness[i][1];||| 27 max_column = 0, second_max_column = 1;||| 28 } else {||| 29 second_max = happyness[i][0], max = happyness[i][1];||| 30 max_column = 1, second_max_column = 0;||| 31 }||| 32 if (n > 2) {||| 33 for (int j = 2; j < n; ++j) {||| 34 if (happyness[i][j] > max) {||| 35 second_max = max, max = happyness[i][j];||| 36 second_max_column = max_column, max_column = j;||| 37 } else if (happyness[i][j] > second_max && happyness[i][j] <= max) {||| 38 second_max = happyness[i][j];||| 39 second_max_column = j;||| 40 }||| 41 }||| 42 }||| 43 if (second_max > ans1) {||| 44 ans1 = second_max, column1 = second_max_column, column2 = max_column;||| 45 }||| 46 }||| 47 if (n > 2 && m > 1) {||| 48 int columnmax[n - 2];||| 49 for (int i = 0; i < n; ++i) {||| 50 if (i != column1 && i != column2) {||| 51 int j = 0;||| 52 columnmax[k] = happyness[i][j];||| 53 for (j = 1; j < m; ++j) {||| 54 if (happyness[j][i] > columnmax[k]) {||| 55 columnmax[k] = happyness[j][i];||| 56 }||| 57 }||| 58 ++k;||| 59 }||| 60 }||| 61 ans2 = columnmax[0];||| 62 for (int i = 0; i < n - 2; ++i) {||| 63 if (columnmax[i] < ans2) ans2 = columnmax[i];||| 64 }||| 65 if (ans2 <= ans1)||| 66 cout << ans2 << endl;||| 67 else||| 68 cout << ans1 << endl;||| 69 } else||| 70 cout << ans1 << endl;||| 71 }||| 72 }||| 73 return 0;||| 74 }||| "	52 columnmax[k] = happyness[j][i];
142	130	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int m, n;||| 4 bool possible(vector<vector<unsigned long long>>& data, long long h) {||| 5 vector<bool> vld(n);||| 6 bool pair = false;||| 7 for (int i = 0; i < m; i++) {||| 8 int c = 0;||| 9 for (int j = 0; j < n; j++) {||| 10 if (data[i][j] >= h) {||| 11 vld[j] = true;||| 12 c++;||| 13 }||| 14 }||| 15 if (c > 1) {||| 16 pair = true;||| 17 }||| 18 }||| 19 if (!pair && n > 1) {||| 20 return false;||| 21 } else {||| 22 return std::all_of(vld.begin(), vld.end(), [](bool x) { return x; });||| 23 }||| 24 }||| 25 long long max_possible(vector<vector<unsigned long long>>& data,||| 26 unsigned long long mx) {||| 27 long long l = 0, r = mx + 1;||| 28 while (l < r) {||| 29 long long mid = (l + r) / 2;||| 30 if (possible(data, mid)) {||| 31 l = mid + 1;||| 32 } else {||| 33 r = mid;||| 34 }||| 35 }||| 36 return l - 1;||| 37 }||| 38 int main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 cin >> m >> n;||| 46 vector<vector<unsigned long long>> data(m, vector<unsigned long long>(n));||| 47 unsigned long long mx = 0;||| 48 for (int i = 0; i < m; i++) {||| 49 for (int j = 0; j < n; j++) {||| 50 cin >> data[i][j];||| 51 mx = max(mx, data[i][j]);||| 52 }||| 53 }||| 54 long long res = max_possible(data, mx);||| 55 cout << res << endl;||| 56 }||| 57 return 0;||| 58 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int m, n;||| 4 bool possible(vector<vector<unsigned long long>>& data, long long h) {||| 5 vector<bool> vld(n);||| 6 bool pair = false;||| 7 for (int i = 0; i < m; i++) {||| 8 int c = 0;||| 9 for (int j = 0; j < n; j++) {||| 10 if (data[i][j] >= h) {||| 11 vld[j] = true;||| 12 c++;||| 13 }||| 14 }||| 15 if (c > 1) {||| 16 pair = true;||| 17 }||| 18 }||| 19 if (!pair && n > 1) {||| 20 return false;||| 21 } else {||| 22 return std::all_of(vld.begin(), vld.end(), [](bool x) { return x; });||| 23 }||| 24 }||| 25 long long max_possible(vector<vector<unsigned long long>>& data,||| 26 unsigned long long mx) {||| 27 long long l = 0, r = mx;||| 28 while (l < r) {||| 29 long long mid = (l + r) / 2;||| 30 if (possible(data, mid)) {||| 31 l = mid + 1;||| 32 } else {||| 33 r = mid;||| 34 }||| 35 }||| 36 return l - 1;||| 37 }||| 38 int main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) {||| 45 cin >> m >> n;||| 46 vector<vector<unsigned long long>> data(m, vector<unsigned long long>(n));||| 47 unsigned long long mx = 0;||| 48 for (int i = 0; i < m; i++) {||| 49 for (int j = 0; j < n; j++) {||| 50 cin >> data[i][j];||| 51 mx = max(mx, data[i][j]);||| 52 }||| 53 }||| 54 long long res = max_possible(data, mx);||| 55 cout << res << endl;||| 56 }||| 57 return 0;||| 58 }||| 	27 long long l = 0, r = mx + 1;
142	41	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int i, j, mod = 1e9 + 7;||| 4 long long int power(long long int x, long long int y, long long int mod) {||| 5 x = x % mod;||| 6 long long int res = 1;||| 7 while (y) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y >> 1;||| 10 x = (x * x) % mod;||| 11 }||| 12 return res % mod;||| 13 }||| 14 long long int modInverse(long long int n, long long int p) {||| 15 return power(n, p - 2, p);||| 16 }||| 17 long long int ncr(long long int n, long long int r, long long int p) {||| 18 if (n < r) return 0;||| 19 if (r == 0) return 1;||| 20 unsigned long long fac[n + 1];||| 21 fac[0] = 1;||| 22 for (int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 23 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 24 p;||| 25 }||| 26 long long int fact(long long int n) {||| 27 if (n == 0) return 1;||| 28 return n * fact(n - 1);||| 29 }||| 30 long long int nCr(long long int n, long long int r) {||| 31 if (r == 2)||| 32 return (n * (n - 1)) / 2;||| 33 else||| 34 return (n * (n - 1) * (n - 2)) / 6;||| 35 }||| 36 bool isPos(vector<vector<long long int>> &arr1, long long int mid) {||| 37 long long int m = arr1.size(), n = arr1[0].size();||| 38 long long int total = 0, extra = 0;||| 39 set<long long int> sel;||| 40 for (i = 0; i < n; i++) {||| 41 total = 0;||| 42 for (j = 0; j < m; j++) {||| 43 if (arr1[j][i] >= mid) {||| 44 total = 1;||| 45 if (sel.count(j)) extra = 1;||| 46 sel.insert(j);||| 47 }||| 48 }||| 49 if (!total) break;||| 50 }||| 51 return total && extra;||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(false);||| 55 cin.tie(nullptr);||| 56 cout.tie(nullptr);||| 57 long long int t;||| 58 cin >> t;||| 59 while (t--) {||| 60 long long int m, n;||| 61 cin >> m >> n;||| 62 vector<vector<long long int>> arr(m, vector<long long int>(n));||| 63 for (i = 0; i < m; i++) {||| 64 for (j = 0; j < n; j++) cin >> arr[i][j];||| 65 }||| 66 long long int strt = 1, end = 1e9, ans = -1;||| 67 while (strt <= end) {||| 68 long long int mid = strt + (end - strt) / 2;||| 69 if (isPos(arr, mid)) {||| 70 ans = mid;||| 71 strt = mid + 1;||| 72 } else||| 73 end = mid - 1;||| 74 }||| 75 cout << ans << endl;||| 76 }||| 77 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int i, j, mod = 1e9 + 7;||| 4 long long int power(long long int x, long long int y, long long int mod) {||| 5 x = x % mod;||| 6 long long int res = 1;||| 7 while (y) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y >> 1;||| 10 x = (x * x) % mod;||| 11 }||| 12 return res % mod;||| 13 }||| 14 long long int modInverse(long long int n, long long int p) {||| 15 return power(n, p - 2, p);||| 16 }||| 17 long long int ncr(long long int n, long long int r, long long int p) {||| 18 if (n < r) return 0;||| 19 if (r == 0) return 1;||| 20 unsigned long long fac[n + 1];||| 21 fac[0] = 1;||| 22 for (int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 23 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 24 p;||| 25 }||| 26 long long int fact(long long int n) {||| 27 if (n == 0) return 1;||| 28 return n * fact(n - 1);||| 29 }||| 30 long long int nCr(long long int n, long long int r) {||| 31 if (r == 2)||| 32 return (n * (n - 1)) / 2;||| 33 else||| 34 return (n * (n - 1) * (n - 2)) / 6;||| 35 }||| 36 bool isPos(vector<vector<long long int>> &arr1, long long int mid) {||| 37 long long int m = arr1.size(), n = arr1[0].size();||| 38 long long int total = 0, extra = 0;||| 39 set<long long int> sel;||| 40 for (i = 0; i < n; i++) {||| 41 total = 0;||| 42 for (j = 0; j < m; j++) {||| 43 if (arr1[j][i] >= mid) {||| 44 total = 1;||| 45 if (sel.count(j)) extra = 1;||| 46 sel.insert(j);||| 47 }||| 48 }||| 49 if (!total) break;||| 50 }||| 51 return total && extra;||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(false);||| 55 cin.tie(nullptr);||| 56 cout.tie(nullptr);||| 57 long long int t;||| 58 cin >> t;||| 59 while (t--) {||| 60 long long int m, n;||| 61 cin >> m >> n;||| 62 vector<vector<long long int>> arr(m, vector<long long int>(n));||| 63 for (i = 0; i < m; i++) {||| 64 for (j = 0; j < n; j++) cin >> arr[i][j];||| 65 }||| 66 long long int strt = 1, end = 100000, ans = -1;||| 67 while (strt <= end) {||| 68 long long int mid = strt + (end - strt) / 2;||| 69 if (isPos(arr, mid)) {||| 70 ans = mid;||| 71 strt = mid + 1;||| 72 } else||| 73 end = mid - 1;||| 74 }||| 75 cout << ans << endl;||| 76 }||| 77 }||| 	66 long long int strt = 1, end = 1e9, ans = -1;
142	174	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 uint32_t solve(size_t m, size_t n, vector<uint32_t>& data) {||| 4 vector<bool> used;||| 5 used.resize(m);||| 6 bool simple = false;||| 7 uint32_t simple_score = ~0u;||| 8 for (size_t i = 0; i < n; ++i) {||| 9 uint32_t best = 0;||| 10 for (size_t j = 0; j < m; ++j) {||| 11 best = std::max(best, data[n * j + i]);||| 12 }||| 13 for (size_t j = 0; j < m; ++j) {||| 14 if (best == data[n * j + i]) {||| 15 simple = simple || used[j];||| 16 used[j] = true;||| 17 }||| 18 }||| 19 simple_score = std::min(simple_score, best);||| 20 }||| 21 if (simple) {||| 22 return simple_score;||| 23 }||| 24 uint32_t bestscore = 0;||| 25 for (size_t j = 0; j + 1 < n; ++j) {||| 26 for (size_t i = j + 1; i < n; ++i) {||| 27 uint32_t pair_score = 0;||| 28 for (size_t k = 0; k < m; ++k) {||| 29 pair_score =||| 30 std::max(pair_score, std::min(data[n * k + j], data[n * k + i]));||| 31 }||| 32 bestscore = std::max(std::min(pair_score, simple_score), bestscore);||| 33 }||| 34 }||| 35 return bestscore;||| 36 }||| 37 int main() {||| 38 ios::sync_with_stdio(false);||| 39 cin.tie(nullptr);||| 40 size_t nn;||| 41 cin >> nn;||| 42 std::vector<uint32_t> data;||| 43 for (size_t i = 0; i < nn; ++i) {||| 44 size_t m, n;||| 45 cin >> m >> n;||| 46 data.resize(m * n);||| 47 for (auto& x : data) {||| 48 cin >> x;||| 49 }||| 50 cout << solve(m, n, data) << endl;||| 51 }||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 uint32_t solve(size_t m, size_t n, vector<uint32_t>& data) {||| 4 vector<bool> used;||| 5 used.resize(m);||| 6 bool simple = false;||| 7 uint32_t simple_score = ~0u;||| 8 for (size_t i = 0; i < n; ++i) {||| 9 uint32_t best = 0;||| 10 for (size_t j = 0; j < m; ++j) {||| 11 best = std::max(best, data[n * j + i]);||| 12 }||| 13 for (size_t j = 0; j < m; ++j) {||| 14 if (best == data[n * j + i]) {||| 15 simple = simple || used[j];||| 16 used[j] = true;||| 17 }||| 18 }||| 19 simple_score = std::min(simple_score, best);||| 20 }||| 21 if (simple) {||| 22 return simple_score;||| 23 }||| 24 uint32_t bestscore = 0;||| 25 for (size_t j = 0; j + 1 < n; ++j) {||| 26 for (size_t i = j + 1; i < n; ++i) {||| 27 uint32_t pair_score = 0;||| 28 for (size_t k = 0; k < m; ++k) {||| 29 pair_score =||| 30 std::max(pair_score, std::min(data[n * k + j], data[n * k + i]));||| 31 }||| 32 bestscore = std::max(std::min(pair_score, simple_score), pair_score);||| 33 }||| 34 }||| 35 return bestscore;||| 36 }||| 37 int main() {||| 38 ios::sync_with_stdio(false);||| 39 cin.tie(nullptr);||| 40 size_t nn;||| 41 cin >> nn;||| 42 std::vector<uint32_t> data;||| 43 for (size_t i = 0; i < nn; ++i) {||| 44 size_t m, n;||| 45 cin >> m >> n;||| 46 data.resize(m * n);||| 47 for (auto& x : data) {||| 48 cin >> x;||| 49 }||| 50 cout << solve(m, n, data) << endl;||| 51 }||| 52 return 0;||| 53 }||| 	32 bestscore = std::max(std::min(pair_score, simple_score), bestscore);
142	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 string to_string(string s) { return '""' + s + '""'; }||| 5 string to_string(bool b) { return (b ? ""true"" : ""false""); }||| 6 string to_string(char c) {||| 7 string s(1, c);||| 8 return ""'"" + s + ""'"";||| 9 }||| 10 template <class T>||| 11 string to_string(vector<T> v) {||| 12 string s = ""{"";||| 13 bool first = true;||| 14 for (T x : v) {||| 15 if (!first) s += "", "";||| 16 s += to_string(x);||| 17 first = false;||| 18 }||| 19 s += ""}"";||| 20 return s;||| 21 }||| 22 template <class T>||| 23 string to_string(set<T> v) {||| 24 string s = ""{"";||| 25 bool first = true;||| 26 for (T x : v) {||| 27 if (!first) s += "", "";||| 28 s += to_string(x);||| 29 first = false;||| 30 }||| 31 s += ""}"";||| 32 return s;||| 33 }||| 34 template <class T>||| 35 string to_string(unordered_set<T> v) {||| 36 string s = ""{"";||| 37 bool first = true;||| 38 for (T x : v) {||| 39 if (!first) s += "", "";||| 40 s += to_string(x);||| 41 first = false;||| 42 }||| 43 s += ""}"";||| 44 return s;||| 45 }||| 46 template <class T>||| 47 string to_string(multiset<T> v) {||| 48 string s = ""{"";||| 49 bool first = true;||| 50 for (T x : v) {||| 51 if (!first) s += "", "";||| 52 s += to_string(x);||| 53 first = false;||| 54 }||| 55 s += ""}"";||| 56 return s;||| 57 }||| 58 template <class T1, class T2>||| 59 string to_string(pair<T1, T2> p) {||| 60 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 61 }||| 62 template <class T1, class T2>||| 63 string to_string(unordered_map<T1, T2> m) {||| 64 string s = ""{"";||| 65 bool first = true;||| 66 for (auto x : m) {||| 67 if (!first) s += "", "";||| 68 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 69 first = false;||| 70 }||| 71 s += ""}"";||| 72 return s;||| 73 }||| 74 template <class T1, class T2>||| 75 string to_string(map<T1, T2> m) {||| 76 string s = ""{"";||| 77 bool first = true;||| 78 for (auto x : m) {||| 79 if (!first) s += "", "";||| 80 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 81 first = false;||| 82 }||| 83 s += ""}"";||| 84 return s;||| 85 }||| 86 int m, n;||| 87 bool can_joy(vector<vector<int>> p, ll joy) {||| 88 bool flag1 = false;||| 89 for (int i = 0; i < m; i++) {||| 90 int found = 0;||| 91 for (int j = 0; j < n; j++) {||| 92 found += p[i][j] >= joy;||| 93 }||| 94 if (found >= 2) {||| 95 flag1 = true;||| 96 break;||| 97 }||| 98 }||| 99 if (!flag1) return false;||| 100 bool flag2;||| 101 for (int j = 0; j < n; j++) {||| 102 flag2 = false;||| 103 for (int i = 0; i < m; i++) {||| 104 flag2 |= p[i][j] >= joy;||| 105 }||| 106 if (!flag2) return false;||| 107 }||| 108 return true;||| 109 }||| 110 void solve() {||| 111 cin >> m >> n;||| 112 vector<vector<int>> p(m, vector<int>(n));||| 113 for (int i = 0; i < m; i++) {||| 114 for (int j = 0; j < n; j++) {||| 115 cin >> p[i][j];||| 116 }||| 117 }||| 118 ll l = 1, r = 1e9, mid;||| 119 while (l < r) {||| 120 ;||| 121 ;||| 122 mid = l + (r - l + 1) / 2;||| 123 bool b = can_joy(p, mid);||| 124 if (b)||| 125 l = mid;||| 126 else||| 127 r = mid - 1;||| 128 }||| 129 assert(l == r);||| 130 cout << l << ""\n"";||| 131 }||| 132 int main() {||| 133 ios::sync_with_stdio(0);||| 134 cin.tie(0);||| 135 cout.tie(0);||| 136 int t;||| 137 cin >> t;||| 138 while (t--) solve();||| 139 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 string to_string(string s) { return '""' + s + '""'; }||| 5 string to_string(bool b) { return (b ? ""true"" : ""false""); }||| 6 string to_string(char c) {||| 7 string s(1, c);||| 8 return ""'"" + s + ""'"";||| 9 }||| 10 template <class T>||| 11 string to_string(vector<T> v) {||| 12 string s = ""{"";||| 13 bool first = true;||| 14 for (T x : v) {||| 15 if (!first) s += "", "";||| 16 s += to_string(x);||| 17 first = false;||| 18 }||| 19 s += ""}"";||| 20 return s;||| 21 }||| 22 template <class T>||| 23 string to_string(set<T> v) {||| 24 string s = ""{"";||| 25 bool first = true;||| 26 for (T x : v) {||| 27 if (!first) s += "", "";||| 28 s += to_string(x);||| 29 first = false;||| 30 }||| 31 s += ""}"";||| 32 return s;||| 33 }||| 34 template <class T>||| 35 string to_string(unordered_set<T> v) {||| 36 string s = ""{"";||| 37 bool first = true;||| 38 for (T x : v) {||| 39 if (!first) s += "", "";||| 40 s += to_string(x);||| 41 first = false;||| 42 }||| 43 s += ""}"";||| 44 return s;||| 45 }||| 46 template <class T>||| 47 string to_string(multiset<T> v) {||| 48 string s = ""{"";||| 49 bool first = true;||| 50 for (T x : v) {||| 51 if (!first) s += "", "";||| 52 s += to_string(x);||| 53 first = false;||| 54 }||| 55 s += ""}"";||| 56 return s;||| 57 }||| 58 template <class T1, class T2>||| 59 string to_string(pair<T1, T2> p) {||| 60 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 61 }||| 62 template <class T1, class T2>||| 63 string to_string(unordered_map<T1, T2> m) {||| 64 string s = ""{"";||| 65 bool first = true;||| 66 for (auto x : m) {||| 67 if (!first) s += "", "";||| 68 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 69 first = false;||| 70 }||| 71 s += ""}"";||| 72 return s;||| 73 }||| 74 template <class T1, class T2>||| 75 string to_string(map<T1, T2> m) {||| 76 string s = ""{"";||| 77 bool first = true;||| 78 for (auto x : m) {||| 79 if (!first) s += "", "";||| 80 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 81 first = false;||| 82 }||| 83 s += ""}"";||| 84 return s;||| 85 }||| 86 int m, n;||| 87 bool can_joy(vector<vector<int>> p, ll joy) {||| 88 bool flag1 = false;||| 89 for (int i = 0; i < m; i++) {||| 90 int found = 0;||| 91 for (int j = 0; j < n; j++) {||| 92 found += p[i][j] >= joy;||| 93 }||| 94 if (found >= 2) {||| 95 flag1 = true;||| 96 break;||| 97 }||| 98 }||| 99 if (!flag1) return false;||| 100 bool flag2;||| 101 for (int j = 0; j < n; j++) {||| 102 flag2 = false;||| 103 for (int i = 0; i < m; i++) {||| 104 flag2 |= p[i][j] >= joy;||| 105 }||| 106 if (!flag2) return false;||| 107 }||| 108 return true;||| 109 }||| 110 void solve() {||| 111 cin >> m >> n;||| 112 vector<vector<int>> p(m, vector<int>(n));||| 113 for (int i = 0; i < m; i++) {||| 114 for (int j = 0; j < n; j++) {||| 115 cin >> p[i][j];||| 116 }||| 117 }||| 118 ll l = 2, r = 1e14, mid;||| 119 while (l < r) {||| 120 ;||| 121 ;||| 122 mid = l + (r - l + 1) / 2;||| 123 bool b = can_joy(p, mid);||| 124 if (b)||| 125 l = mid;||| 126 else||| 127 r = mid - 1;||| 128 }||| 129 assert(l == r);||| 130 cout << l << ""\n"";||| 131 }||| 132 int main() {||| 133 ios::sync_with_stdio(0);||| 134 cin.tie(0);||| 135 cout.tie(0);||| 136 int t;||| 137 cin >> t;||| 138 while (t--) solve();||| 139 }||| "	118 ll l = 1, r = 1e9, mid;
142	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 string to_string(string s) { return '""' + s + '""'; }||| 5 string to_string(bool b) { return (b ? ""true"" : ""false""); }||| 6 string to_string(char c) {||| 7 string s(1, c);||| 8 return ""'"" + s + ""'"";||| 9 }||| 10 template <class T>||| 11 string to_string(vector<T> v) {||| 12 string s = ""{"";||| 13 bool first = true;||| 14 for (T x : v) {||| 15 if (!first) s += "", "";||| 16 s += to_string(x);||| 17 first = false;||| 18 }||| 19 s += ""}"";||| 20 return s;||| 21 }||| 22 template <class T>||| 23 string to_string(set<T> v) {||| 24 string s = ""{"";||| 25 bool first = true;||| 26 for (T x : v) {||| 27 if (!first) s += "", "";||| 28 s += to_string(x);||| 29 first = false;||| 30 }||| 31 s += ""}"";||| 32 return s;||| 33 }||| 34 template <class T>||| 35 string to_string(unordered_set<T> v) {||| 36 string s = ""{"";||| 37 bool first = true;||| 38 for (T x : v) {||| 39 if (!first) s += "", "";||| 40 s += to_string(x);||| 41 first = false;||| 42 }||| 43 s += ""}"";||| 44 return s;||| 45 }||| 46 template <class T>||| 47 string to_string(multiset<T> v) {||| 48 string s = ""{"";||| 49 bool first = true;||| 50 for (T x : v) {||| 51 if (!first) s += "", "";||| 52 s += to_string(x);||| 53 first = false;||| 54 }||| 55 s += ""}"";||| 56 return s;||| 57 }||| 58 template <class T1, class T2>||| 59 string to_string(pair<T1, T2> p) {||| 60 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 61 }||| 62 template <class T1, class T2>||| 63 string to_string(unordered_map<T1, T2> m) {||| 64 string s = ""{"";||| 65 bool first = true;||| 66 for (auto x : m) {||| 67 if (!first) s += "", "";||| 68 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 69 first = false;||| 70 }||| 71 s += ""}"";||| 72 return s;||| 73 }||| 74 template <class T1, class T2>||| 75 string to_string(map<T1, T2> m) {||| 76 string s = ""{"";||| 77 bool first = true;||| 78 for (auto x : m) {||| 79 if (!first) s += "", "";||| 80 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 81 first = false;||| 82 }||| 83 s += ""}"";||| 84 return s;||| 85 }||| 86 int m, n;||| 87 bool can_joy(vector<vector<int>> p, ll joy) {||| 88 bool flag1 = false;||| 89 for (int i = 0; i < m; i++) {||| 90 int found = 0;||| 91 for (int j = 0; j < n; j++) {||| 92 found += p[i][j] >= joy;||| 93 }||| 94 if (found >= 2) {||| 95 flag1 = true;||| 96 break;||| 97 }||| 98 }||| 99 if (!flag1) return false;||| 100 bool flag2;||| 101 for (int j = 0; j < n; j++) {||| 102 flag2 = false;||| 103 for (int i = 0; i < m; i++) {||| 104 flag2 |= p[i][j] >= joy;||| 105 }||| 106 if (!flag2) return false;||| 107 }||| 108 return true;||| 109 }||| 110 void solve() {||| 111 cin >> m >> n;||| 112 vector<vector<int>> p(m, vector<int>(n));||| 113 for (int i = 0; i < m; i++) {||| 114 for (int j = 0; j < n; j++) {||| 115 cin >> p[i][j];||| 116 }||| 117 }||| 118 ll l = 1, r = 1e14, mid;||| 119 while (l < r) {||| 120 ;||| 121 ;||| 122 mid = l + (r - l + 1) / 2;||| 123 bool b = can_joy(p, mid);||| 124 if (b)||| 125 l = mid;||| 126 else||| 127 r = mid - 1;||| 128 }||| 129 assert(l == r);||| 130 cout << l << ""\n"";||| 131 }||| 132 int main() {||| 133 ios::sync_with_stdio(0);||| 134 cin.tie(0);||| 135 cout.tie(0);||| 136 int t;||| 137 cin >> t;||| 138 while (t--) solve();||| 139 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 string to_string(string s) { return '""' + s + '""'; }||| 5 string to_string(bool b) { return (b ? ""true"" : ""false""); }||| 6 string to_string(char c) {||| 7 string s(1, c);||| 8 return ""'"" + s + ""'"";||| 9 }||| 10 template <class T>||| 11 string to_string(vector<T> v) {||| 12 string s = ""{"";||| 13 bool first = true;||| 14 for (T x : v) {||| 15 if (!first) s += "", "";||| 16 s += to_string(x);||| 17 first = false;||| 18 }||| 19 s += ""}"";||| 20 return s;||| 21 }||| 22 template <class T>||| 23 string to_string(set<T> v) {||| 24 string s = ""{"";||| 25 bool first = true;||| 26 for (T x : v) {||| 27 if (!first) s += "", "";||| 28 s += to_string(x);||| 29 first = false;||| 30 }||| 31 s += ""}"";||| 32 return s;||| 33 }||| 34 template <class T>||| 35 string to_string(unordered_set<T> v) {||| 36 string s = ""{"";||| 37 bool first = true;||| 38 for (T x : v) {||| 39 if (!first) s += "", "";||| 40 s += to_string(x);||| 41 first = false;||| 42 }||| 43 s += ""}"";||| 44 return s;||| 45 }||| 46 template <class T>||| 47 string to_string(multiset<T> v) {||| 48 string s = ""{"";||| 49 bool first = true;||| 50 for (T x : v) {||| 51 if (!first) s += "", "";||| 52 s += to_string(x);||| 53 first = false;||| 54 }||| 55 s += ""}"";||| 56 return s;||| 57 }||| 58 template <class T1, class T2>||| 59 string to_string(pair<T1, T2> p) {||| 60 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 61 }||| 62 template <class T1, class T2>||| 63 string to_string(unordered_map<T1, T2> m) {||| 64 string s = ""{"";||| 65 bool first = true;||| 66 for (auto x : m) {||| 67 if (!first) s += "", "";||| 68 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 69 first = false;||| 70 }||| 71 s += ""}"";||| 72 return s;||| 73 }||| 74 template <class T1, class T2>||| 75 string to_string(map<T1, T2> m) {||| 76 string s = ""{"";||| 77 bool first = true;||| 78 for (auto x : m) {||| 79 if (!first) s += "", "";||| 80 s += ""("" + to_string(x.first) + "" -> "" + to_string(x.second) + "")"";||| 81 first = false;||| 82 }||| 83 s += ""}"";||| 84 return s;||| 85 }||| 86 int m, n;||| 87 bool can_joy(vector<vector<int>> p, ll joy) {||| 88 bool flag1 = false;||| 89 for (int i = 0; i < m; i++) {||| 90 int found = 0;||| 91 for (int j = 0; j < n; j++) {||| 92 found += p[i][j] >= joy;||| 93 }||| 94 if (found >= 2) {||| 95 flag1 = true;||| 96 break;||| 97 }||| 98 }||| 99 if (!flag1) return false;||| 100 bool flag2;||| 101 for (int j = 0; j < n; j++) {||| 102 flag2 = false;||| 103 for (int i = 0; i < m; i++) {||| 104 flag2 |= p[i][j] >= joy;||| 105 }||| 106 if (!flag2) return false;||| 107 }||| 108 return true;||| 109 }||| 110 void solve() {||| 111 cin >> m >> n;||| 112 vector<vector<int>> p(m, vector<int>(n));||| 113 for (int i = 0; i < m; i++) {||| 114 for (int j = 0; j < n; j++) {||| 115 cin >> p[i][j];||| 116 }||| 117 }||| 118 ll l = 2, r = 1e14, mid;||| 119 while (l < r) {||| 120 ;||| 121 ;||| 122 mid = l + (r - l + 1) / 2;||| 123 bool b = can_joy(p, mid);||| 124 if (b)||| 125 l = mid;||| 126 else||| 127 r = mid - 1;||| 128 }||| 129 assert(l == r);||| 130 cout << l << ""\n"";||| 131 }||| 132 int main() {||| 133 ios::sync_with_stdio(0);||| 134 cin.tie(0);||| 135 cout.tie(0);||| 136 int t;||| 137 cin >> t;||| 138 while (t--) solve();||| 139 }||| "	118 ll l = 1, r = 1e14, mid;
143	173	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n, m, l, r;||| 5 cin >> t;||| 6 while (t--) {||| 7 map<int, int> mm;||| 8 cin >> n;||| 9 m = n;||| 10 while (m--) {||| 11 cin >> l;||| 12 mm[l]++;||| 13 }||| 14 long long sum = 0, noba = 0, ind = 1;||| 15 for (int i = 0; i <= n; i++) {||| 16 if (ind) {||| 17 cout << sum + mm[i] << "" "";||| 18 if (mm[i] == 0) {||| 19 while (mm[noba] == 1) {||| 20 if (noba == 0) break;||| 21 noba--;||| 22 }||| 23 if (mm[noba] <= 1)||| 24 ind = 0;||| 25 else {||| 26 sum += i - noba;||| 27 mm[i]++;||| 28 mm[noba]--;||| 29 }||| 30 } else||| 31 noba = i;||| 32 } else||| 33 cout << ""-1  "";||| 34 }||| 35 cout << endl;||| 36 }||| 37 return 0;||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n, m, l, r;||| 5 cin >> t;||| 6 while (t--) {||| 7 map<int, int> mm;||| 8 cin >> n;||| 9 m = n;||| 10 while (m--) {||| 11 cin >> l;||| 12 mm[l]++;||| 13 }||| 14 int sum = 0, noba = 0, ind = 1;||| 15 for (int i = 0; i <= n; i++) {||| 16 if (ind) {||| 17 cout << sum + mm[i] << "" "";||| 18 if (mm[i] == 0) {||| 19 while (mm[noba] == 1) {||| 20 if (noba == 0) break;||| 21 noba--;||| 22 }||| 23 if (mm[noba] <= 1)||| 24 ind = 0;||| 25 else {||| 26 sum += i - noba;||| 27 mm[i]++;||| 28 mm[noba]--;||| 29 }||| 30 } else||| 31 noba = i;||| 32 } else||| 33 cout << ""-1  "";||| 34 }||| 35 cout << endl;||| 36 }||| 37 return 0;||| 38 }||| "	14 long long sum = 0, noba = 0, ind = 1;
143	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 const int MOD = 998244353;||| 5 int t, n, a[N];||| 6 long long ans[N];||| 7 int freq[N];||| 8 stack<int> st;||| 9 int main() {||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 while (!st.empty()) st.pop();||| 13 scanf(""%d"", &n);||| 14 for (int i = 0; i <= n + 1; i++) {||| 15 ans[i] = -1;||| 16 freq[i] = 0;||| 17 }||| 18 ans[0] = freq[0];||| 19 for (int i = 0; i < n; i++) {||| 20 scanf(""%d"", &a[i]);||| 21 freq[a[i]]++;||| 22 }||| 23 ans[0] = freq[0];||| 24 sort(a, a + n);||| 25 long long cur = 0;||| 26 int j = 0;||| 27 for (int i = 0; i < n; i++) {||| 28 if (a[i] > i) break;||| 29 while (j < n && a[j] <= i) {||| 30 j++;||| 31 st.push(i);||| 32 }||| 33 int z = st.top();||| 34 st.pop();||| 35 cur += (i - z);||| 36 ans[i + 1] = cur + freq[i + 1];||| 37 }||| 38 for (int i = 0; i <= n; i++) {||| 39 printf(""%lld "", ans[i]);||| 40 }||| 41 puts("""");||| 42 }||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 const int MOD = 998244353;||| 5 int t, n, a[N];||| 6 long long ans[N];||| 7 int freq[N];||| 8 stack<int> st;||| 9 int main() {||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 while (!st.empty()) st.pop();||| 13 scanf(""%d"", &n);||| 14 for (int i = 0; i <= n + 1; i++) {||| 15 ans[i] = -1;||| 16 freq[i] = 0;||| 17 }||| 18 ans[0] = freq[0];||| 19 for (int i = 0; i < n; i++) {||| 20 scanf(""%d"", &a[i]);||| 21 freq[a[i]]++;||| 22 }||| 23 ans[0] = freq[0];||| 24 sort(a, a + n);||| 25 long long cur = 0;||| 26 int j = 0;||| 27 for (int i = 0; i < n; i++) {||| 28 if (a[i] > i) break;||| 29 while (j < n && a[j] <= i) {||| 30 j++;||| 31 st.push(i);||| 32 }||| 33 int z = st.top();||| 34 st.pop();||| 35 cur += (i - z);||| 36 ans[i + 1] = cur + freq[i + 1];||| 37 }||| 38 for (int i = 0; i <= n; i++) {||| 39 printf(""%d "", ans[i]);||| 40 }||| 41 puts("""");||| 42 }||| 43 return 0;||| 44 }||| "	"39 printf(""%lld "", ans[i]);"
143	125	"1 #include <bits/stdc++.h>||| 2 const char nl = '\n';||| 3 using namespace std;||| 4 const long long INF = 1e18;||| 5 const long long MOD = 1e9 + 7;||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> a(n);||| 10 map<int, int> m;||| 11 for (int i = 0; i < n; i++) {||| 12 cin >> a[i];||| 13 m[a[i]]++;||| 14 }||| 15 long long sum = 0;||| 16 vector<long long> ans(n + 1, -1);||| 17 vector<int> ex;||| 18 sort(a.begin(), a.end());||| 19 for (int i = 0; i < n + 1; i++) {||| 20 if (i > 0 && !m.count(i - 1)) {||| 21 if (ex.empty()) {||| 22 break;||| 23 }||| 24 sum += i - 1 - ex.back();||| 25 ex.pop_back();||| 26 }||| 27 while (i > 0 && m.count(i - 1) && m[i - 1] > 1) {||| 28 m[i - 1]--;||| 29 ex.push_back(i - 1);||| 30 }||| 31 ans[i] = sum + (m.count(i) ? m[i] : 0);||| 32 }||| 33 for (int i = 0; i < n + 1; i++) {||| 34 cout << ans[i] << "" "";||| 35 }||| 36 cout << nl;||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(false);||| 40 cin.tie(NULL);||| 41 long long t = 1;||| 42 cin >> t;||| 43 while (t--) {||| 44 solve();||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 const char nl = '\n';||| 3 using namespace std;||| 4 const long long INF = 1e18;||| 5 const long long MOD = 1e9 + 7;||| 6 void solve() {||| 7 int n;||| 8 cin >> n;||| 9 vector<int> a(n);||| 10 map<int, int> m;||| 11 for (int i = 0; i < n; i++) {||| 12 cin >> a[i];||| 13 m[a[i]]++;||| 14 }||| 15 long long sum = 0;||| 16 vector<int> ans(n + 1, -1);||| 17 vector<int> ex;||| 18 sort(a.begin(), a.end());||| 19 for (int i = 0; i < n + 1; i++) {||| 20 if (i > 0 && !m.count(i - 1)) {||| 21 if (ex.empty()) {||| 22 break;||| 23 }||| 24 sum += i - 1 - ex.back();||| 25 ex.pop_back();||| 26 }||| 27 while (i > 0 && m.count(i - 1) && m[i - 1] > 1) {||| 28 m[i - 1]--;||| 29 ex.push_back(i - 1);||| 30 }||| 31 ans[i] = sum + (m.count(i) ? m[i] : 0);||| 32 }||| 33 for (int i = 0; i < n + 1; i++) {||| 34 cout << ans[i] << "" "";||| 35 }||| 36 cout << nl;||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(false);||| 40 cin.tie(NULL);||| 41 long long t = 1;||| 42 cin >> t;||| 43 while (t--) {||| 44 solve();||| 45 }||| 46 return 0;||| 47 }||| "	16 vector<long long> ans(n + 1, -1);
144	17	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, k;||| 5 cin >> n >> m >> k;||| 6 int a = n % m;||| 7 int b = m - a;||| 8 int c = n / m + 1;||| 9 int d = n / m;||| 10 int pos1 = 0;||| 11 int pos2 = a * c;||| 12 for (int z = 0; z < k; z++) {||| 13 for (int i = 0; i < a; i++) {||| 14 cout << c << "" "";||| 15 for (int j = pos1 + i * c; j < pos1 + i * c + c; j++)||| 16 cout << (j % n) + 1 << "" "";||| 17 cout << ""\n"";||| 18 }||| 19 for (int i = 0; i < b; i++) {||| 20 cout << d << "" "";||| 21 for (int j = pos2 + i * d; j < pos2 + i * d + d; j++)||| 22 cout << (j % n) + 1 << "" "";||| 23 cout << ""\n"";||| 24 }||| 25 pos1 = (pos1 + a * c) % n;||| 26 pos2 = (pos1 + a * c) % n;||| 27 }||| 28 cout << ""\n"";||| 29 }||| 30 int main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 int tt;||| 34 cin >> tt;||| 35 while (tt--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, k;||| 5 cin >> n >> m >> k;||| 6 int a = n % m;||| 7 int b = n - a;||| 8 int c = n / m + 1;||| 9 int d = n / m;||| 10 int pos1 = 0;||| 11 int pos2 = a * c;||| 12 for (int z = 0; z < m; z++) {||| 13 for (int i = 0; i < a; i++) {||| 14 cout << c << "" "";||| 15 for (int j = pos1 + i * c; j < pos1 + i * c + c; j++)||| 16 cout << (j % n) + 1 << "" "";||| 17 cout << ""\n"";||| 18 }||| 19 for (int i = 0; i < b; i++) {||| 20 cout << d << "" "";||| 21 for (int j = pos2 + i * d; j < pos2 + i * d + d; j++)||| 22 cout << (j % n) + 1 << "" "";||| 23 cout << ""\n"";||| 24 }||| 25 pos1 = (pos1 + a * c) % n;||| 26 pos2 = (pos1 + a * c) % n;||| 27 }||| 28 cout << ""\n"";||| 29 }||| 30 int main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 int tt;||| 34 cin >> tt;||| 35 while (tt--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	7 int b = m - a;
144	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename U>||| 4 static inline void amn(T &x, U y) {||| 5 if (y < x) x = y;||| 6 }||| 7 template <typename T, typename U>||| 8 static inline void amx(T &x, U y) {||| 9 if (x < y) x = y;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const long long INF = 1e18;||| 13 const long long N = 5e5 + 5;||| 14 long long top(long long x, long long y) {||| 15 long long f = x / y;||| 16 if (x % y) f++;||| 17 return f;||| 18 }||| 19 bool cmp(pair<long long, long long> &a, pair<long long, long long> &b) {||| 20 return a.first < b.first;||| 21 }||| 22 void solve() {||| 23 long long n, m, x;||| 24 cin >> n >> m >> x;||| 25 vector<pair<long long, long long> > v;||| 26 for (long long i = 1; i <= n; i++) {||| 27 v.push_back({0, i});||| 28 }||| 29 long long sa = top(n, m), sb = n / m;||| 30 long long A = (n % m) * sa;||| 31 for (long long i = 1; i <= x; i++) {||| 32 for (long long j = 0; j < A; j++) {||| 33 v[j].first++;||| 34 }||| 35 for (long long j = 0; j < A; j += sa) {||| 36 cout << sa;||| 37 for (long long k = j; k < j + sa; k++) {||| 38 cout << "" "" << v[k].second;||| 39 }||| 40 cout << endl;||| 41 }||| 42 for (long long j = A; j < n; j += sb) {||| 43 cout << sb;||| 44 for (long long k = j; k < j + sb; k++) {||| 45 cout << "" "" << v[k].second;||| 46 }||| 47 cout << endl;||| 48 }||| 49 sort(v.begin(), v.end(), cmp);||| 50 }||| 51 cout << endl;||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 long long test_case = 1;||| 58 cin >> test_case;||| 59 while (test_case--) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename U>||| 4 static inline void amn(T &x, U y) {||| 5 if (y < x) x = y;||| 6 }||| 7 template <typename T, typename U>||| 8 static inline void amx(T &x, U y) {||| 9 if (x < y) x = y;||| 10 }||| 11 const long long MOD = 1e9 + 7;||| 12 const long long INF = 1e18;||| 13 const long long N = 5e5 + 5;||| 14 long long top(long long x, long long y) {||| 15 long long f = x / y;||| 16 if (x % y) f++;||| 17 return f;||| 18 }||| 19 bool cmp(pair<long long, long long> &a, pair<long long, long long> &b) {||| 20 return a.first < b.first;||| 21 }||| 22 void solve() {||| 23 long long n, m, x;||| 24 cin >> n >> m >> x;||| 25 vector<pair<long long, long long> > v;||| 26 for (long long i = 1; i <= n; i++) {||| 27 v.push_back({0, i});||| 28 }||| 29 long long sa = top(n, m), sb = n / m;||| 30 long long A = (n % m) * sa;||| 31 for (long long i = 1; i <= x; i++) {||| 32 for (long long j = 0; j < A; j++) {||| 33 v[i].first++;||| 34 }||| 35 for (long long j = 0; j < A; j += sa) {||| 36 cout << sa;||| 37 for (long long k = j; k < j + sa; k++) {||| 38 cout << "" "" << v[k].second;||| 39 }||| 40 cout << endl;||| 41 }||| 42 for (long long j = A; j < n; j += sb) {||| 43 cout << sb;||| 44 for (long long k = j; k < j + sb; k++) {||| 45 cout << "" "" << v[k].second;||| 46 }||| 47 cout << endl;||| 48 }||| 49 sort(v.begin(), v.end(), cmp);||| 50 }||| 51 cout << endl;||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 long long test_case = 1;||| 58 cin >> test_case;||| 59 while (test_case--) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| "	33 v[j].first++;
144	40	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 1e9;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 int32_t main() {||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 long long t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long n, m, k;||| 19 cin >> n >> m >> k;||| 20 if (n % m == 0) {||| 21 while (k--) {||| 22 long long d = n / m;||| 23 for (long long i = 0; i < n / d; ++i) {||| 24 cout << d << ' ';||| 25 for (long long j = i * d; j < (i + 1) * d; ++j) cout << j + 1 << ' ';||| 26 cout << '\n';||| 27 }||| 28 }||| 29 continue;||| 30 }||| 31 vector<long long> v(n), cnt(n);||| 32 long long g1 = n / m, g2 = n / m + 1;||| 33 long long k1 = (m - n % m) * g1;||| 34 for (long long i = 0; i < n; ++i) {||| 35 v[i] = i;||| 36 if (i < k1)||| 37 cnt[i] = 0;||| 38 else||| 39 cnt[i] = 1;||| 40 }||| 41 while (k--) {||| 42 bool ok = 1;||| 43 for (long long i = 0; i < n; ++i) {||| 44 if (i == k1) {||| 45 ok = 0;||| 46 }||| 47 if (ok && i % g1 == 0) cout << '\n' << g1 << ' ';||| 48 if (!ok && (i - k1) % g2 == 0) cout << '\n' << g2 << ' ';||| 49 cout << v[i] + 1 << ' ';||| 50 }||| 51 cout << '\n';||| 52 vector<pair<long long, long long> > a;||| 53 for (long long i = 0; i < n; ++i) a.push_back({cnt[i], i});||| 54 sort(a.rbegin(), a.rend());||| 55 for (long long i = 0; i < n; ++i) {||| 56 v[i] = a[i].second;||| 57 if (i >= k1) cnt[v[i]]++;||| 58 }||| 59 }||| 60 }||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 const long long N = 1e9;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long inf = 2e9;||| 7 const long double eps = 1e-12;||| 8 const long double EPS = 1e-10;||| 9 long long rx[] = {1, -1, 0, 0};||| 10 long long ry[] = {0, 0, 1, -1};||| 11 int32_t main() {||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 long long t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long n, m, k;||| 19 cin >> n >> m >> k;||| 20 if (n % m == 0) {||| 21 while (k--) {||| 22 long long d = n / m;||| 23 for (long long i = 0; i < d; ++i) {||| 24 cout << d << ' ';||| 25 for (long long j = i * d; j < (i + 1) * d; ++j) cout << j + 1 << ' ';||| 26 cout << '\n';||| 27 }||| 28 }||| 29 continue;||| 30 }||| 31 vector<long long> v(n), cnt(n);||| 32 long long g1 = n / m, g2 = n / m + 1;||| 33 long long k1 = (m - n % m) * g1;||| 34 for (long long i = 0; i < n; ++i) {||| 35 v[i] = i;||| 36 if (i < k1)||| 37 cnt[i] = 0;||| 38 else||| 39 cnt[i] = 1;||| 40 }||| 41 while (k--) {||| 42 bool ok = 1;||| 43 for (long long i = 0; i < n; ++i) {||| 44 if (i == k1) {||| 45 ok = 0;||| 46 }||| 47 if (ok && i % g1 == 0) cout << '\n' << g1 << ' ';||| 48 if (!ok && (i - k1) % g2 == 0) cout << '\n' << g2 << ' ';||| 49 cout << v[i] + 1 << ' ';||| 50 }||| 51 cout << '\n';||| 52 vector<pair<long long, long long> > a;||| 53 for (long long i = 0; i < n; ++i) a.push_back({cnt[i], i});||| 54 sort(a.rbegin(), a.rend());||| 55 for (long long i = 0; i < n; ++i) {||| 56 v[i] = a[i].second;||| 57 if (i >= k1) cnt[v[i]]++;||| 58 }||| 59 }||| 60 }||| 61 return 0;||| 62 }||| "	23 for (long long i = 0; i < n / d; ++i) {
144	37	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int n, k, m;||| 8 scanf(""%d %d %d"", &n, &m, &k);||| 9 vector<int> ar(n + 1, 0);||| 10 deque<int> q;||| 11 for (int i = 1; i <= n; i++) {||| 12 ar[i] = i;||| 13 q.push_back(i);||| 14 }||| 15 if (n % m == 0) {||| 16 for (int i = 1; i <= k; i++) {||| 17 int block = n / m, cnt = 0;||| 18 for (int j = 1; j <= n; j++) {||| 19 if (cnt == 0) {||| 20 printf(""%d "", block);||| 21 }||| 22 printf(""%d "", ar[j]);||| 23 cnt++;||| 24 if (cnt == block) {||| 25 printf(""\n"");||| 26 cnt = 0;||| 27 }||| 28 }||| 29 }||| 30 } else {||| 31 for (int i = 1; i <= k; i++) {||| 32 int block = n / m, cnt = 0, extra = n % m, j = 1;||| 33 for (j = 1; j <= n; j++) {||| 34 if (extra == 0) break;||| 35 if (cnt == 0) {||| 36 printf(""%d "", block + 1);||| 37 }||| 38 printf(""%d "", ar[j]);||| 39 cnt++;||| 40 if (cnt == block + 1) {||| 41 extra--;||| 42 cnt = 0;||| 43 printf(""\n"");||| 44 }||| 45 }||| 46 for (; j <= n; j++) {||| 47 if (cnt == 0) {||| 48 printf(""%d "", block);||| 49 }||| 50 printf(""%d "", ar[j]);||| 51 cnt++;||| 52 if (cnt == block) {||| 53 printf(""\n"");||| 54 cnt = 0;||| 55 }||| 56 }||| 57 for (int r = 1; r <= n % m; r++) {||| 58 for (int j = 0; j <= block; j++) {||| 59 int x = q.back();||| 60 q.pop_back();||| 61 q.push_front(x);||| 62 }||| 63 }||| 64 int idx = 1;||| 65 for (auto p : q) {||| 66 ar[idx++] = p;||| 67 }||| 68 }||| 69 }||| 70 printf(""\n"");||| 71 }||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int n, k, m;||| 8 scanf(""%d %d %d"", &n, &m, &k);||| 9 vector<int> ar(n + 1, 0);||| 10 deque<int> q;||| 11 for (int i = 1; i <= n; i++) {||| 12 ar[i] = i;||| 13 q.push_back(i);||| 14 }||| 15 if (n % m == 0) {||| 16 for (int i = 1; i <= k; i++) {||| 17 int block = n / m, cnt = 0;||| 18 for (int j = 1; j <= n; j++) {||| 19 if (cnt == 0) {||| 20 printf(""%d "", block);||| 21 }||| 22 printf(""%d "", ar[j]);||| 23 cnt++;||| 24 if (cnt == block) {||| 25 printf(""\n"");||| 26 cnt = 0;||| 27 }||| 28 }||| 29 }||| 30 } else {||| 31 for (int i = 1; i <= k; i++) {||| 32 int block = n / m, cnt = 0, extra = n % m, j = 1;||| 33 for (j = 1; j <= n; j++) {||| 34 if (extra == 0) break;||| 35 if (cnt == 0) {||| 36 printf(""%d "", block + 1);||| 37 }||| 38 printf(""%d "", ar[j]);||| 39 cnt++;||| 40 if (cnt == block + 1) {||| 41 extra--;||| 42 cnt = 0;||| 43 printf(""\n"");||| 44 }||| 45 }||| 46 for (; j <= n; j++) {||| 47 if (cnt == 0) {||| 48 printf(""%d "", block);||| 49 }||| 50 printf(""%d "", ar[j]);||| 51 cnt++;||| 52 if (cnt == block) {||| 53 printf(""\n"");||| 54 cnt = 0;||| 55 }||| 56 }||| 57 for (int r = 1; r <= n % m; r++) {||| 58 for (int j = 0; j < block; j++) {||| 59 int x = q.back();||| 60 q.pop_back();||| 61 q.push_front(x);||| 62 }||| 63 }||| 64 int idx = 1;||| 65 for (auto p : q) {||| 66 ar[idx++] = p;||| 67 }||| 68 }||| 69 }||| 70 printf(""\n"");||| 71 }||| 72 }||| "	58 for (int j = 0; j <= block; j++) {
144	136	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long calc(long long x) { return x * (x + 1) / 2; }||| 5 int mex(set<int> &st) {||| 6 int ret = 0;||| 7 while (st.count(ret)) ret++;||| 8 return ret;||| 9 }||| 10 int main() {||| 11 ios_base::sync_with_stdio(0);||| 12 cin.tie(0);||| 13 int tt;||| 14 cin >> tt;||| 15 while (tt--) {||| 16 int n, m, k;||| 17 cin >> n >> m >> k;||| 18 int md = n % m;||| 19 vector<vector<bool> > a(k, vector<bool>(n + 1, false));||| 20 int cur = 1;||| 21 for (int i = 0; i < k; i++) {||| 22 for (int j = 0; j < n - (n % m) * (n / m + 1); j++) {||| 23 a[i][cur] = 1;||| 24 cur++;||| 25 if (cur == n + 1) cur = 1;||| 26 }||| 27 }||| 28 vector<int> v, v2;||| 29 for (int i = 0; i < k; i++) {||| 30 v.clear();||| 31 v2.clear();||| 32 for (int j = 1; j <= n; j++) {||| 33 if (a[i][j] == 0) {||| 34 v2.push_back(j);||| 35 } else||| 36 v.push_back(j);||| 37 }||| 38 for (int i = 0; i < (int)v.size(); i += n / m) {||| 39 cout << n / m << ' ';||| 40 for (int j = i; j < i + n / m; j++) cout << v[j] << ' ';||| 41 cout << '\n';||| 42 }||| 43 for (int i = 0; i < (int)v2.size(); i += +n / m + 1) {||| 44 cout << n / m + 1 << ' ';||| 45 for (int j = i; j < i + n / m + 1; j++) cout << v2[j] << ' ';||| 46 cout << '\n';||| 47 }||| 48 }||| 49 cout << '\n';||| 50 }||| 51 return 0;||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long calc(long long x) { return x * (x + 1) / 2; }||| 5 int mex(set<int> &st) {||| 6 int ret = 0;||| 7 while (st.count(ret)) ret++;||| 8 return ret;||| 9 }||| 10 int main() {||| 11 ios_base::sync_with_stdio(0);||| 12 cin.tie(0);||| 13 int tt;||| 14 cin >> tt;||| 15 while (tt--) {||| 16 int n, m, k;||| 17 cin >> n >> m >> k;||| 18 int md = n % m;||| 19 vector<vector<bool> > a(k, vector<bool>(n + 1, false));||| 20 int cur = 1;||| 21 for (int i = 0; i < k; i++) {||| 22 for (int j = 0; j < n - (n % m) * (n / m + 1); j++) {||| 23 a[i][cur] = 1;||| 24 cur++;||| 25 if (cur == n + 1) cur = 1;||| 26 }||| 27 }||| 28 vector<int> v, v2;||| 29 for (int i = 0; i < k; i++) {||| 30 v.clear();||| 31 v2.clear();||| 32 for (int j = 1; j <= n; j++) {||| 33 if (a[i][j] == 0) {||| 34 v2.push_back(j);||| 35 } else||| 36 v.push_back(j);||| 37 }||| 38 for (int i = 0; i < (int)v.size(); i += n / m) {||| 39 cout << n / m << ' ';||| 40 for (int j = i; j < n / m; j++) cout << v[j] << ' ';||| 41 cout << '\n';||| 42 }||| 43 for (int i = 0; i < (int)v2.size(); i += +n / m + 1) {||| 44 cout << n / m + 1 << ' ';||| 45 for (int j = i; j < i + n / m + 1; j++) cout << v2[j] << ' ';||| 46 cout << '\n';||| 47 }||| 48 }||| 49 cout << '\n';||| 50 }||| 51 return 0;||| 52 }||| 	40 for (int j = i; j < i + n / m; j++) cout << v[j] << ' ';
144	134	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n, m, k;||| 9 cin >> n >> m >> k;||| 10 int md = n % m;||| 11 int flr = n / m, cl = (n + m - 1) / m;||| 12 int ix = 0;||| 13 for (int i = 0; i < k; i++) {||| 14 int cur = ix;||| 15 for (int j = 0; j < md; j++) {||| 16 cout << cl << ' ';||| 17 for (int l = 0; l < cl; l++) {||| 18 cout << cur + 1 << ' ';||| 19 cur += 1;||| 20 cur %= n;||| 21 }||| 22 cout << '\n';||| 23 }||| 24 for (int j = 0; j < m - md; j++) {||| 25 cout << flr << ' ';||| 26 for (int l = 0; l < flr; l++) {||| 27 cout << cur + 1 << ' ';||| 28 cur += 1;||| 29 cur %= n;||| 30 }||| 31 cout << '\n';||| 32 }||| 33 ix += md * cl;||| 34 ix %= n;||| 35 }||| 36 cout << '\n';||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n, m, k;||| 9 cin >> n >> m >> k;||| 10 int md = n % m;||| 11 int flr = n / m, cl = (n + m - 1) / m;||| 12 int ix = 0;||| 13 for (int i = 0; i < k; i++) {||| 14 int cur = ix;||| 15 for (int j = 0; j < md; j++) {||| 16 cout << cl << ' ';||| 17 for (int l = 0; l < cl; l++) {||| 18 cout << cur + 1 << ' ';||| 19 cur += 1;||| 20 cur %= n;||| 21 }||| 22 cout << '\n';||| 23 }||| 24 for (int j = 0; j < flr - md; j++) {||| 25 cout << flr << ' ';||| 26 for (int l = 0; l < flr; l++) {||| 27 cout << cur + 1 << ' ';||| 28 cur += 1;||| 29 cur %= n;||| 30 }||| 31 cout << '\n';||| 32 }||| 33 ix += md * cl;||| 34 ix %= n;||| 35 }||| 36 cout << '\n';||| 37 }||| 38 return 0;||| 39 }||| 	24 for (int j = 0; j < m - md; j++) {
145	117	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 7;||| 4 const int MOD = 1e9 + 7;||| 5 int n, k, t[N];||| 6 int fa[N], w[N];||| 7 void init(int n) {||| 8 for (int i = 1; i <= n; i++) fa[i] = i, w[i] = t[i];||| 9 }||| 10 int find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }||| 11 void merge(int x, int y) {||| 12 int fx = find(x), fy = find(y);||| 13 if (fx != fy) {||| 14 w[fy] = min(w[fy], w[fx]);||| 15 fa[fx] = fy;||| 16 }||| 17 }||| 18 void solve() {||| 19 cin >> n >> k;||| 20 map<int, vector<pair<int, int>>> mpx, mpy;||| 21 for (int i = 1, x, y; i <= n; i++) {||| 22 cin >> x >> y >> t[i];||| 23 mpx[x].push_back({y, i});||| 24 mpy[y].push_back({x, i});||| 25 }||| 26 init(n);||| 27 for (auto mp : {mpx, mpy}) {||| 28 for (auto tt : mp) {||| 29 vector<pair<int, int>> ve = tt.second;||| 30 sort(ve.begin(), ve.end());||| 31 for (int i = 1; i < ve.size(); i++) {||| 32 if (ve[i].first - ve[i - 1].first <= k) {||| 33 merge(ve[i].second, ve[i - 1].second);||| 34 }||| 35 }||| 36 }||| 37 }||| 38 set<int> se;||| 39 vector<int> ve;||| 40 for (int i = 1; i <= n; i++) {||| 41 se.insert(find(i));||| 42 }||| 43 for (auto i : se) {||| 44 ve.push_back(w[i]);||| 45 }||| 46 int ans = ve.size() - 1;||| 47 sort(ve.begin(), ve.end());||| 48 for (int i = 0; i < ve.size(); i++) {||| 49 ans = min(ans, max(ve[i], (int)ve.size() - 2 - i));||| 50 }||| 51 cout << ans << ""\n"";||| 52 }||| 53 int main() {||| 54 ios::sync_with_stdio(false);||| 55 int T = 1;||| 56 cin >> T;||| 57 while (T--) {||| 58 solve();||| 59 }||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 7;||| 4 const int MOD = 1e9 + 7;||| 5 int n, k, t[N];||| 6 int fa[N], w[N];||| 7 void init(int n) {||| 8 for (int i = 1; i <= n; i++) fa[i] = i, w[i] = t[i];||| 9 }||| 10 int find(int x) { return x == fa[x] ? x : fa[x] = find(fa[x]); }||| 11 void merge(int x, int y) {||| 12 int fx = find(x), fy = find(y);||| 13 if (fx != fy) {||| 14 w[fy] = min(w[fy], w[fx]);||| 15 fa[fx] = fy;||| 16 }||| 17 }||| 18 void solve() {||| 19 cin >> n >> k;||| 20 map<int, vector<pair<int, int>>> mpx, mpy;||| 21 for (int i = 1, x, y; i <= n; i++) {||| 22 cin >> x >> y >> t[i];||| 23 mpx[x].push_back({y, i});||| 24 mpy[y].push_back({x, i});||| 25 }||| 26 init(n);||| 27 for (auto mp : {mpx, mpy}) {||| 28 for (auto tt : mp) {||| 29 vector<pair<int, int>> ve = tt.second;||| 30 sort(ve.begin(), ve.end());||| 31 for (int i = 1; i < ve.size(); i++) {||| 32 if (ve[i].first - ve[i - 1].first <= k) {||| 33 merge(ve[i].second, ve[i - 1].second);||| 34 }||| 35 }||| 36 }||| 37 }||| 38 set<int> se;||| 39 vector<int> ve;||| 40 for (int i = 1; i <= n; i++) {||| 41 se.insert(find(i));||| 42 }||| 43 for (auto i : se) {||| 44 ve.push_back(w[i]);||| 45 }||| 46 int ans = ve.size() - 1;||| 47 sort(ve.begin(), ve.end());||| 48 for (int i = 0; i < ve.size(); i++) {||| 49 ans = min(ans, max(ve[i], (int)ve.size() - 1 - i));||| 50 }||| 51 cout << ans << ""\n"";||| 52 }||| 53 int main() {||| 54 ios::sync_with_stdio(false);||| 55 int T = 1;||| 56 cin >> T;||| 57 while (T--) {||| 58 solve();||| 59 }||| 60 }||| "	49 ans = min(ans, max(ve[i], (int)ve.size() - 2 - i));
145	102	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double PI = acos(-1);||| 4 const int INF = INT_MAX;||| 5 const long long LLINF = 1000000000000000000LL;||| 6 const long long MAX = 200005;||| 7 const long long MOD = 998244353;||| 8 struct DSU {||| 9 int N;||| 10 int parent[MAX], member[MAX];||| 11 DSU(int n) {||| 12 N = n;||| 13 for (int i = 0; i < N; i++) {||| 14 parent[i] = -1;||| 15 member[i] = 1;||| 16 }||| 17 }||| 18 int findRoot(int n) {||| 19 if (parent[n] == -1) {||| 20 return n;||| 21 }||| 22 return parent[n] = findRoot(parent[n]);||| 23 }||| 24 void makeUnion(int r1, int r2) {||| 25 r1 = findRoot(r1);||| 26 r2 = findRoot(r2);||| 27 if (r1 == r2) {||| 28 return;||| 29 }||| 30 if (member[r1] < member[r2]) {||| 31 swap(r1, r2);||| 32 }||| 33 parent[r2] = r1;||| 34 member[r1] += member[r2];||| 35 }||| 36 };||| 37 struct mine {||| 38 long long x, y, n;||| 39 mine() { x = y = n = 0; }||| 40 mine(long long _x, long long _y, long long _n) : x(_x), y(_y), n(_n){};||| 41 };||| 42 bool cmpx(mine& left, mine& right) {||| 43 if (left.x == right.x) {||| 44 return left.y < right.y;||| 45 }||| 46 return left.x < right.x;||| 47 }||| 48 bool cmpy(mine& left, mine& right) {||| 49 if (left.y == right.y) {||| 50 return left.x < right.x;||| 51 }||| 52 return left.y < right.y;||| 53 }||| 54 void solve() {||| 55 long long N, K;||| 56 cin >> N >> K;||| 57 vector<mine> A(N);||| 58 vector<long long> T(N);||| 59 DSU U(N);||| 60 for (int i = 0; i < N; i++) {||| 61 cin >> A[i].x >> A[i].y >> T[i];||| 62 A[i].n = i;||| 63 }||| 64 sort(A.begin(), A.end(), cmpx);||| 65 for (int i = 0; i < N - 1; i++) {||| 66 if (A[i].x == A[i + 1].x && A[i + 1].y - A[i].y <= K) {||| 67 U.makeUnion(A[i].n, A[i + 1].n);||| 68 }||| 69 }||| 70 sort(A.begin(), A.end(), cmpy);||| 71 for (int i = 0; i < N - 1; i++) {||| 72 if (A[i].y == A[i + 1].y && A[i + 1].x - A[i].x <= K) {||| 73 U.makeUnion(A[i].n, A[i + 1].n);||| 74 }||| 75 }||| 76 vector<long long> idx(N), C(N);||| 77 long long m = 0;||| 78 for (int i = 0; i < N; i++) {||| 79 C[i] = LLINF;||| 80 if (U.parent[i] == -1) {||| 81 idx[i] = m;||| 82 ++m;||| 83 }||| 84 }||| 85 for (int i = 0; i < N; i++) {||| 86 long long r = U.findRoot(i);||| 87 C[idx[r]] = min(C[idx[r]], T[i]);||| 88 }||| 89 sort(C.begin(), C.begin() + m);||| 90 reverse(C.begin(), C.begin() + m);||| 91 long long ans = 0;||| 92 for (long long i = 0; i < m; i++) {||| 93 ans = max(ans, min(C[i], i));||| 94 }||| 95 cout << ans << ""\n"";||| 96 }||| 97 int main() {||| 98 std::ios_base::sync_with_stdio(false);||| 99 cin.tie(NULL);||| 100 cout.tie(NULL);||| 101 ;||| 102 int tc;||| 103 cin >> tc;||| 104 while (tc--) {||| 105 solve();||| 106 }||| 107 return 0;||| 108 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double PI = acos(-1);||| 4 const int INF = INT_MAX;||| 5 const long long LLINF = 1000000000000000000LL;||| 6 const long long MAX = 200005;||| 7 const long long MOD = 998244353;||| 8 struct DSU {||| 9 int N;||| 10 int parent[MAX], member[MAX];||| 11 DSU(int n) {||| 12 N = n;||| 13 for (int i = 0; i < N; i++) {||| 14 parent[i] = -1;||| 15 member[i] = 1;||| 16 }||| 17 }||| 18 int findRoot(int n) {||| 19 if (parent[n] == -1) {||| 20 return n;||| 21 }||| 22 return parent[n] = findRoot(parent[n]);||| 23 }||| 24 void makeUnion(int r1, int r2) {||| 25 r1 = findRoot(r1);||| 26 r2 = findRoot(r2);||| 27 if (r1 == r2) {||| 28 return;||| 29 }||| 30 if (member[r1] < member[r2]) {||| 31 swap(r1, r2);||| 32 }||| 33 parent[r2] = r1;||| 34 member[r1] += member[r2];||| 35 }||| 36 };||| 37 struct mine {||| 38 long long x, y, n;||| 39 mine() { x = y = n = 0; }||| 40 mine(long long _x, long long _y, long long _n) : x(_x), y(_y), n(_n){};||| 41 };||| 42 bool cmpx(mine& left, mine& right) {||| 43 if (left.x == right.x) {||| 44 return left.y < right.y;||| 45 }||| 46 return left.x < right.x;||| 47 }||| 48 bool cmpy(mine& left, mine& right) {||| 49 if (left.y == right.y) {||| 50 return left.x < right.x;||| 51 }||| 52 return left.y < right.y;||| 53 }||| 54 void solve() {||| 55 long long N, K;||| 56 cin >> N >> K;||| 57 vector<mine> A(N);||| 58 vector<long long> T(N);||| 59 DSU U(N);||| 60 for (int i = 0; i < N; i++) {||| 61 cin >> A[i].x >> A[i].y >> T[i];||| 62 A[i].n = i;||| 63 }||| 64 sort(A.begin(), A.end(), cmpx);||| 65 for (int i = 0; i < N - 1; i++) {||| 66 if (A[i].x == A[i + 1].x && A[i + 1].y - A[i].y <= K) {||| 67 U.makeUnion(A[i].n, A[i + 1].n);||| 68 }||| 69 }||| 70 sort(A.begin(), A.end(), cmpy);||| 71 for (int i = 0; i < N - 1; i++) {||| 72 if (A[i].y == A[i + 1].y && A[i + 1].x - A[i].x <= K) {||| 73 U.makeUnion(A[i].n, A[i + 1].n);||| 74 }||| 75 }||| 76 vector<long long> idx(N), C(N);||| 77 long long m = 0;||| 78 for (int i = 0; i < N; i++) {||| 79 C[i] = LLINF;||| 80 if (U.parent[i] == -1) {||| 81 idx[m] = i;||| 82 ++m;||| 83 }||| 84 }||| 85 for (int i = 0; i < N; i++) {||| 86 long long r = U.findRoot(i);||| 87 C[idx[r]] = min(C[idx[r]], T[i]);||| 88 }||| 89 sort(C.begin(), C.begin() + m);||| 90 reverse(C.begin(), C.begin() + m);||| 91 long long ans = 0;||| 92 for (long long i = 0; i < m; i++) {||| 93 ans = max(ans, min(C[i], i));||| 94 }||| 95 cout << ans << ""\n"";||| 96 }||| 97 int main() {||| 98 std::ios_base::sync_with_stdio(false);||| 99 cin.tie(NULL);||| 100 cout.tie(NULL);||| 101 ;||| 102 int tc;||| 103 cin >> tc;||| 104 while (tc--) {||| 105 solve();||| 106 }||| 107 return 0;||| 108 }||| "	81 idx[i] = m;
145	47	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int k;||| 4 map<int, vector<int>> mx;||| 5 map<int, vector<int>> my;||| 6 map<pair<int, int>, bool> used;||| 7 map<pair<int, int>, int> time_of;||| 8 int dfs(int x, int y) {||| 9 used[{x, y}] = true;||| 10 int _min_ = time_of[{x, y}];||| 11 auto i = lower_bound(mx[x].begin(), mx[x].end(), y);||| 12 auto j = lower_bound(my[y].begin(), my[y].end(), x);||| 13 if (++i != mx[x].end() && !used[{x, *i}] && abs(*i - y) <= k) {||| 14 _min_ = min(_min_, dfs(x, *i));||| 15 }||| 16 --i;||| 17 if (i != mx[x].begin() && !used[{x, *(--i)}] && abs(*i - y) <= k) {||| 18 _min_ = min(_min_, dfs(x, *i));||| 19 }||| 20 if (++j != my[y].end() && !used[{*j, y}] && abs(*j - x) <= k) {||| 21 _min_ = min(_min_, dfs(*j, y));||| 22 }||| 23 --j;||| 24 if (j != my[y].begin() && !used[{*(--j), y}] && abs(*j - x) <= k) {||| 25 _min_ = min(_min_, dfs(*j, y));||| 26 }||| 27 return _min_;||| 28 }||| 29 void solve() {||| 30 mx.clear();||| 31 my.clear();||| 32 used.clear();||| 33 int n;||| 34 cin >> n >> k;||| 35 vector<pair<int, int>> a(n);||| 36 int x, y, timer;||| 37 for (int i = 0; i < n; ++i) {||| 38 cin >> x >> y >> timer;||| 39 a[i] = {x, y};||| 40 time_of[{x, y}] = timer;||| 41 mx[x].push_back(y);||| 42 my[y].push_back(x);||| 43 }||| 44 vector<int> res;||| 45 for (auto now : mx) {||| 46 sort(mx[now.first].begin(), mx[now.first].end());||| 47 }||| 48 for (auto now : my) {||| 49 sort(my[now.first].begin(), my[now.first].end());||| 50 }||| 51 for (auto now : a) {||| 52 if (!used[now]) {||| 53 res.push_back(dfs(now.first, now.second));||| 54 }||| 55 }||| 56 sort(res.begin(), res.end(), greater<int>());||| 57 deque<int> times_;||| 58 for (int i = 0; i < res.size(); i++) {||| 59 times_.push_back(res[i]);||| 60 }||| 61 int timeCount = 0;||| 62 while (!times_.empty()) {||| 63 if (times_.front() > timeCount) times_.pop_front();||| 64 while (!times_.empty() && times_.back() == timeCount) {||| 65 times_.pop_back();||| 66 }||| 67 timeCount++;||| 68 }||| 69 cout << timeCount - 1 << endl;||| 70 }||| 71 int main() {||| 72 ios_base::sync_with_stdio(0);||| 73 cin.tie(nullptr);||| 74 cout.tie(nullptr);||| 75 int tests;||| 76 cin >> tests;||| 77 for (int tt = 0; tt < int(tests); tt++) {||| 78 solve();||| 79 }||| 80 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int k;||| 4 map<int, vector<int>> mx;||| 5 map<int, vector<int>> my;||| 6 map<pair<int, int>, bool> used;||| 7 map<pair<int, int>, int> time_of;||| 8 int dfs(int x, int y) {||| 9 used[{x, y}] = true;||| 10 int _min_ = time_of[{x, y}];||| 11 auto i = lower_bound(mx[x].begin(), mx[x].end(), y);||| 12 auto j = lower_bound(my[y].begin(), my[y].end(), x);||| 13 if (++i != mx[x].end() && !used[{x, *i}] && abs(*i - y) <= k) {||| 14 _min_ = min(_min_, dfs(x, *i));||| 15 }||| 16 --i;||| 17 if (i != mx[x].begin() && !used[{x, *(--i)}] && abs(*i - y) <= k) {||| 18 _min_ = min(_min_, dfs(x, *i));||| 19 }||| 20 if (++j != my[y].end() && !used[{*j, y}] && abs(*j - x) <= k) {||| 21 _min_ = min(_min_, dfs(*j, y));||| 22 }||| 23 --j;||| 24 if (j != my[y].begin() && !used[{*(--j), y}] && abs(*j - x) <= k) {||| 25 _min_ = min(_min_, dfs(*j, y));||| 26 }||| 27 return _min_;||| 28 }||| 29 void solve() {||| 30 mx.clear();||| 31 my.clear();||| 32 used.clear();||| 33 int n;||| 34 cin >> n >> k;||| 35 vector<pair<int, int>> a(n);||| 36 int x, y, timer;||| 37 for (int i = 0; i < n; ++i) {||| 38 cin >> x >> y >> timer;||| 39 a[i] = {x, y};||| 40 time_of[{x, y}] = timer;||| 41 mx[x].push_back(y);||| 42 my[y].push_back(x);||| 43 }||| 44 vector<int> res;||| 45 for (auto now : mx) {||| 46 sort(mx[now.first].begin(), mx[now.first].end());||| 47 }||| 48 for (auto now : my) {||| 49 sort(my[now.first].begin(), my[now.first].end());||| 50 }||| 51 for (auto now : a) {||| 52 if (!used[now]) {||| 53 res.push_back(dfs(now.first, now.second));||| 54 }||| 55 }||| 56 sort(res.begin(), res.end(), greater<int>());||| 57 deque<int> times_;||| 58 for (int i = 0; i < res.size(); i++) {||| 59 times_.push_back(res[i]);||| 60 }||| 61 int timeCount = 0;||| 62 while (!times_.empty()) {||| 63 if (times_.front() > timeCount) times_.pop_front();||| 64 while (!times_.empty() || times_.back() == timeCount) {||| 65 times_.pop_back();||| 66 }||| 67 timeCount++;||| 68 }||| 69 cout << timeCount - 1 << endl;||| 70 }||| 71 int main() {||| 72 ios_base::sync_with_stdio(0);||| 73 cin.tie(nullptr);||| 74 cout.tie(nullptr);||| 75 int tests;||| 76 cin >> tests;||| 77 for (int tt = 0; tt < int(tests); tt++) {||| 78 solve();||| 79 }||| 80 }||| 	64 while (!times_.empty() && times_.back() == timeCount) {
146	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005];||| 4 void change(long long x) {||| 5 long long k = x;||| 6 for (long long i = 1; i < 150; i++) k = pre[k];||| 7 for (long long i = 1, k2 = ne[x]; i <= 150; i++) {||| 8 ne300[k] = k2;||| 9 pre300[k2] = k;||| 10 k = ne[k];||| 11 k2 = ne[k2];||| 12 }||| 13 return;||| 14 }||| 15 int main() {||| 16 long long n, q;||| 17 scanf(""%lld%lld"", &n, &q);||| 18 for (long long i = 1; i <= n; i++) {||| 19 scanf(""%lld"", &ne[i]);||| 20 pre[ne[i]] = i;||| 21 }||| 22 for (long long i = 1; i <= n; i++)||| 23 for (long long j = 1, k = i; j <= 150; j++)||| 24 k = ne[k], ne300[i] = k, pre300[k] = i;||| 25 while (q--) {||| 26 long long op, x, y;||| 27 scanf(""%lld%lld%lld"", &op, &x, &y);||| 28 if (op == 1) {||| 29 swap(ne[x], ne[y]);||| 30 pre[ne[y]] = y, pre[ne[x]] = x;||| 31 change(x), change(y);||| 32 } else {||| 33 while (y >= 150) x = ne300[x], y -= 150;||| 34 while (y--) x = ne[x];||| 35 printf(""%lld\n"", x);||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005];||| 4 void change(long long x) {||| 5 long long k = x;||| 6 for (long long i = 1; i < 150; i++) k = pre[k];||| 7 for (long long i = 1, k2 = ne[x]; i < 150; i++) {||| 8 ne300[k] = k2;||| 9 pre300[k2] = k;||| 10 k = ne[k];||| 11 k2 = ne[k2];||| 12 }||| 13 return;||| 14 }||| 15 int main() {||| 16 long long n, q;||| 17 scanf(""%lld%lld"", &n, &q);||| 18 for (long long i = 1; i <= n; i++) {||| 19 scanf(""%lld"", &ne[i]);||| 20 pre[ne[i]] = i;||| 21 }||| 22 for (long long i = 1; i <= n; i++)||| 23 for (long long j = 1, k = i; j <= 150; j++)||| 24 k = ne[k], ne300[i] = k, pre300[k] = i;||| 25 while (q--) {||| 26 long long op, x, y;||| 27 scanf(""%lld%lld%lld"", &op, &x, &y);||| 28 if (op == 1) {||| 29 swap(ne[x], ne[y]);||| 30 pre[ne[y]] = y, pre[ne[x]] = x;||| 31 change(x), change(y);||| 32 } else {||| 33 while (y >= 150) x = ne300[x], y -= 150;||| 34 while (y--) x = ne[x];||| 35 printf(""%lld\n"", x);||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	7 for (long long i = 1, k2 = ne[x]; i <= 150; i++) {
146	18	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, k, n, m, t, x, y, z;||| 4 int l[100500], r[100500], l300[100500], r300[100500], k2;||| 5 void work(int x) {||| 6 for (i = 1, k = x; i < 150; i++) k = l[k];||| 7 k2 = r[x];||| 8 for (i = 1; i <= 150; i++) {||| 9 r300[k] = k2;||| 10 l300[k2] = k;||| 11 k = r[k];||| 12 k2 = r[k2];||| 13 }||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0);||| 17 cin >> n >> t;||| 18 for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i;||| 19 for (i = 1; i <= n; i++) {||| 20 for (j = 1, k = i; j <= 150; j++) k = r[k];||| 21 r300[i] = k;||| 22 l300[k] = i;||| 23 }||| 24 while (t--) {||| 25 cin >> x >> y >> z;||| 26 if (x == 1) {||| 27 swap(r[y], r[z]);||| 28 l[r[y]] = y;||| 29 l[r[z]] = z;||| 30 work(y);||| 31 work(z);||| 32 } else {||| 33 while (z > 150) y = r300[y], z -= 150;||| 34 while (z) y = r[y], z--;||| 35 cout << y << '\n';||| 36 }||| 37 }||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, k, n, m, t, x, y, z;||| 4 int l[100500], r[100500], l300[100500], r300[100500], k2;||| 5 void work(int x) {||| 6 for (i = 1, k = y; i < 150; i++) k = l[k];||| 7 k2 = r[y];||| 8 for (i = 1; i <= 150; i++) {||| 9 r300[k] = k2;||| 10 l300[k2] = k;||| 11 k = r[k];||| 12 k2 = r[k2];||| 13 }||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0);||| 17 cin >> n >> t;||| 18 for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i;||| 19 for (i = 1; i <= n; i++) {||| 20 for (j = 1, k = i; j <= 150; j++) k = r[k];||| 21 r300[i] = k;||| 22 l300[k] = i;||| 23 }||| 24 while (t--) {||| 25 cin >> x >> y >> z;||| 26 if (x == 1) {||| 27 swap(r[y], r[z]);||| 28 l[r[y]] = y;||| 29 l[r[z]] = z;||| 30 work(y);||| 31 work(z);||| 32 } else {||| 33 while (z > 150) y = r300[y], z -= 150;||| 34 while (z) y = r[y], z--;||| 35 cout << y << '\n';||| 36 }||| 37 }||| 38 }||| 	6 for (i = 1, k = x; i < 150; i++) k = l[k];
146	74	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, k, n, m, t, x, y, z;||| 4 int l[100500], r[100500], l300[100500], r300[100500], k2;||| 5 void work(int x) {||| 6 for (i = 1, k = x; i < 150; i++) k = l[k];||| 7 k2 = r[x];||| 8 for (i = 1; i <= 150; i++) {||| 9 r300[k] = k2;||| 10 l300[k2] = k;||| 11 k = r[k];||| 12 k2 = r[k2];||| 13 }||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0);||| 17 cin >> n >> t;||| 18 for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i;||| 19 for (i = 1; i <= n; i++) {||| 20 for (j = 1, k = i; j <= 150; j++) k = r[k];||| 21 r300[i] = k;||| 22 l300[k] = i;||| 23 }||| 24 while (t--) {||| 25 cin >> x >> y >> z;||| 26 if (x == 1) {||| 27 swap(r[y], r[z]);||| 28 l[r[y]] = y;||| 29 l[r[z]] = z;||| 30 work(y);||| 31 work(z);||| 32 } else {||| 33 while (z > 150) y = r300[y], z -= 150;||| 34 while (z) y = r[y], z--;||| 35 cout << y << '\n';||| 36 }||| 37 }||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int i, j, k, n, m, t, x, y, z;||| 4 int l[100500], r[100500], l300[100500], r300[100500], k2;||| 5 void work(int x) {||| 6 for (i = 1, k = y; i < 150; i++) k = l[k];||| 7 k2 = r[x];||| 8 for (i = 1; i <= 150; i++) {||| 9 r300[k] = k2;||| 10 l300[k2] = k;||| 11 k = r[k];||| 12 k2 = r[k2];||| 13 }||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0);||| 17 cin >> n >> t;||| 18 for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i;||| 19 for (i = 1; i <= n; i++) {||| 20 for (j = 1, k = i; j <= 150; j++) k = r[k];||| 21 r300[i] = k;||| 22 l300[k] = i;||| 23 }||| 24 while (t--) {||| 25 cin >> x >> y >> z;||| 26 if (x == 1) {||| 27 swap(r[y], r[z]);||| 28 l[r[y]] = y;||| 29 l[r[z]] = z;||| 30 work(y);||| 31 work(z);||| 32 } else {||| 33 while (z > 150) y = r300[y], z -= 150;||| 34 while (z) y = r[y], z--;||| 35 cout << y << '\n';||| 36 }||| 37 }||| 38 }||| 	6 for (i = 1, k = x; i < 150; i++) k = l[k];
146	24	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void minn(T& a, T b) {||| 5 if (a > b) a = b;||| 6 }||| 7 template <class T>||| 8 void maxx(T& a, T b) {||| 9 if (a < b) a = b;||| 10 }||| 11 void debug() { return; }||| 12 template <class H, class... T>||| 13 void debug(H a, T... b) {||| 14 cerr << a;||| 15 debug(b...);||| 16 }||| 17 void is() { return; }||| 18 template <class H, class... T>||| 19 void is(H& a, T&... b) {||| 20 cin >> a;||| 21 is(b...);||| 22 }||| 23 void os() { return; }||| 24 template <class H, class... T>||| 25 void os(H a, T... b) {||| 26 cout << a;||| 27 os(b...);||| 28 }||| 29 const int mod = 1e9 + 7;||| 30 const int N = 2e5 + 5;||| 31 int n, q;||| 32 int nx[N], pr[N], nx100[N];||| 33 void sw(int x, int y) {||| 34 swap(nx[x], nx[y]);||| 35 pr[nx[x]] = x;||| 36 pr[nx[y]] = y;||| 37 int k = x;||| 38 for (int i = 1; i < 100; i++) k = pr[k];||| 39 for (int i = 1; i <= 100; i++) {||| 40 nx100[k] = nx[x];||| 41 x = nx[x];||| 42 k = nx[k];||| 43 }||| 44 k = y;||| 45 for (int i = 1; i < 100; i++) k = pr[k];||| 46 for (int i = 1; i <= 100; i++) {||| 47 nx100[k] = nx[y];||| 48 y = nx[y];||| 49 k = nx[k];||| 50 }||| 51 }||| 52 void solve() {||| 53 is(n, q);||| 54 for (int i = 1; i <= n; i++) {||| 55 is(nx[i]);||| 56 pr[nx[i]] = i;||| 57 }||| 58 for (int i = 1; i <= n; i++) {||| 59 int k = i;||| 60 for (int j = 1; j <= 100; j++) {||| 61 k = nx[k];||| 62 }||| 63 nx100[i] = k;||| 64 }||| 65 while (q--) {||| 66 int t, x, y;||| 67 is(t, x, y);||| 68 if (t == 2) {||| 69 int k = x;||| 70 while (y >= 100) {||| 71 y -= 100;||| 72 k = nx100[k];||| 73 }||| 74 while (y--) k = nx[k];||| 75 os(k, '\n');||| 76 } else {||| 77 sw(x, y);||| 78 }||| 79 }||| 80 }||| 81 signed main() {||| 82 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 83 int T = 1;||| 84 while (T--) {||| 85 solve();||| 86 }||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void minn(T& a, T b) {||| 5 if (a > b) a = b;||| 6 }||| 7 template <class T>||| 8 void maxx(T& a, T b) {||| 9 if (a < b) a = b;||| 10 }||| 11 void debug() { return; }||| 12 template <class H, class... T>||| 13 void debug(H a, T... b) {||| 14 cerr << a;||| 15 debug(b...);||| 16 }||| 17 void is() { return; }||| 18 template <class H, class... T>||| 19 void is(H& a, T&... b) {||| 20 cin >> a;||| 21 is(b...);||| 22 }||| 23 void os() { return; }||| 24 template <class H, class... T>||| 25 void os(H a, T... b) {||| 26 cout << a;||| 27 os(b...);||| 28 }||| 29 const int mod = 1e9 + 7;||| 30 const int N = 2e5 + 5;||| 31 int n, q;||| 32 int nx[N], pr[N], nx100[N];||| 33 void sw(int x, int y) {||| 34 swap(nx[x], nx[y]);||| 35 pr[nx[x]] = x;||| 36 pr[nx[y]] = y;||| 37 int k = x;||| 38 for (int i = 1; i <= 100; i++) k = pr[k];||| 39 for (int i = 1; i <= 100; i++) {||| 40 nx100[k] = nx[x];||| 41 x = nx[x];||| 42 k = nx[k];||| 43 }||| 44 k = y;||| 45 for (int i = 1; i <= 100; i++) k = pr[k];||| 46 for (int i = 1; i <= 100; i++) {||| 47 nx100[k] = nx[y];||| 48 y = nx[y];||| 49 k = nx[k];||| 50 }||| 51 }||| 52 void solve() {||| 53 is(n, q);||| 54 for (int i = 1; i <= n; i++) {||| 55 is(nx[i]);||| 56 pr[nx[i]] = i;||| 57 }||| 58 for (int i = 1; i <= n; i++) {||| 59 int k = i;||| 60 for (int j = 1; j <= 100; j++) {||| 61 k = nx[k];||| 62 }||| 63 nx100[i] = k;||| 64 }||| 65 while (q--) {||| 66 int t, x, y;||| 67 is(t, x, y);||| 68 if (t == 2) {||| 69 int k = x;||| 70 while (y >= 100) {||| 71 y -= 100;||| 72 k = nx100[k];||| 73 }||| 74 while (y--) k = nx[k];||| 75 os(k, '\n');||| 76 } else {||| 77 sw(x, y);||| 78 }||| 79 }||| 80 }||| 81 signed main() {||| 82 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 83 int T = 1;||| 84 while (T--) {||| 85 solve();||| 86 }||| 87 }||| 	38 for (int i = 1; i < 100; i++) k = pr[k];
146	86	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 using ld = long double;||| 6 template <typename T1, typename T2>||| 7 inline void chkmin(T1& x, const T2& y) {||| 8 if (y < x) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void chkmax(T1& x, const T2& y) {||| 12 if (x < y) x = y;||| 13 }||| 14 const int N = 1e5 + 10;||| 15 const int B = 300;||| 16 struct Node {||| 17 int next_node;||| 18 int prev_node;||| 19 int jump;||| 20 };||| 21 int n, q;||| 22 Node nodes[N];||| 23 int find_jump(int v) {||| 24 for (int i = 0; i < B; ++i) {||| 25 v = nodes[v].next_node;||| 26 }||| 27 return v;||| 28 }||| 29 void build() {||| 30 for (int i = 0; i < n; ++i) {||| 31 nodes[i].jump = find_jump(i);||| 32 }||| 33 }||| 34 void print() {||| 35 for (int i = 0; i < n; ++i) {||| 36 cerr << i << "" "" << nodes[i].next_node << "" "" << nodes[i].prev_node << endl;||| 37 }||| 38 }||| 39 void relax_jumps(int v) {||| 40 int jump = v;||| 41 for (int i = 0; i < B; ++i) {||| 42 v = nodes[v].prev_node;||| 43 }||| 44 for (int i = 0; i <= B; ++i) {||| 45 nodes[v].jump = jump;||| 46 v = nodes[v].next_node;||| 47 jump = nodes[jump].next_node;||| 48 }||| 49 }||| 50 void upd(int i, int j) {||| 51 int next_i = nodes[i].next_node;||| 52 int next_j = nodes[j].next_node;||| 53 nodes[i].next_node = next_j;||| 54 nodes[j].next_node = next_i;||| 55 nodes[next_i].prev_node = j;||| 56 nodes[next_j].prev_node = i;||| 57 relax_jumps(i);||| 58 relax_jumps(j);||| 59 }||| 60 int getAns(int v, int k) {||| 61 while (k) {||| 62 if (k >= B) {||| 63 v = nodes[v].jump;||| 64 k -= B;||| 65 } else {||| 66 v = nodes[v].next_node;||| 67 --k;||| 68 }||| 69 }||| 70 return v;||| 71 }||| 72 signed main() {||| 73 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 74 cout.precision(20), cout.setf(ios::fixed);||| 75 cin >> n >> q;||| 76 for (int i = 0; i < n; ++i) {||| 77 cin >> nodes[i].next_node;||| 78 --nodes[i].next_node;||| 79 nodes[nodes[i].next_node].prev_node = i;||| 80 }||| 81 build();||| 82 while (q--) {||| 83 int t;||| 84 cin >> t;||| 85 if (t == 1) {||| 86 int i, j;||| 87 cin >> i >> j;||| 88 --i;||| 89 --j;||| 90 upd(i, j);||| 91 } else if (t == 2) {||| 92 int v, k;||| 93 cin >> v >> k;||| 94 --v;||| 95 cout << getAns(v, k) + 1 << '\n';||| 96 } else {||| 97 assert(false);||| 98 }||| 99 }||| 100 return 0;||| 101 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 using ld = long double;||| 6 template <typename T1, typename T2>||| 7 inline void chkmin(T1& x, const T2& y) {||| 8 if (y < x) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void chkmax(T1& x, const T2& y) {||| 12 if (x < y) x = y;||| 13 }||| 14 const int N = 1e5 + 10;||| 15 const int B = 300;||| 16 struct Node {||| 17 int next_node;||| 18 int prev_node;||| 19 int jump;||| 20 };||| 21 int n, q;||| 22 Node nodes[N];||| 23 int find_jump(int v) {||| 24 for (int i = 0; i < B; ++i) {||| 25 v = nodes[v].next_node;||| 26 }||| 27 return v;||| 28 }||| 29 void build() {||| 30 for (int i = 0; i < n; ++i) {||| 31 nodes[i].jump = find_jump(i);||| 32 }||| 33 }||| 34 void print() {||| 35 for (int i = 0; i < n; ++i) {||| 36 cerr << i << "" "" << nodes[i].next_node << "" "" << nodes[i].prev_node << endl;||| 37 }||| 38 }||| 39 void relax_jumps(int v) {||| 40 int jump = v;||| 41 for (int i = 0; i < B; ++i) {||| 42 v = nodes[v].prev_node;||| 43 }||| 44 for (int i = 0; i < B; ++i) {||| 45 nodes[v].jump = jump;||| 46 v = nodes[v].next_node;||| 47 jump = nodes[jump].next_node;||| 48 }||| 49 }||| 50 void upd(int i, int j) {||| 51 int next_i = nodes[i].next_node;||| 52 int next_j = nodes[j].next_node;||| 53 nodes[i].next_node = next_j;||| 54 nodes[j].next_node = next_i;||| 55 nodes[next_i].prev_node = j;||| 56 nodes[next_j].prev_node = i;||| 57 relax_jumps(i);||| 58 relax_jumps(j);||| 59 }||| 60 int getAns(int v, int k) {||| 61 while (k) {||| 62 if (k >= B) {||| 63 v = nodes[v].jump;||| 64 k -= B;||| 65 } else {||| 66 v = nodes[v].next_node;||| 67 --k;||| 68 }||| 69 }||| 70 return v;||| 71 }||| 72 signed main() {||| 73 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 74 cout.precision(20), cout.setf(ios::fixed);||| 75 cin >> n >> q;||| 76 for (int i = 0; i < n; ++i) {||| 77 cin >> nodes[i].next_node;||| 78 --nodes[i].next_node;||| 79 nodes[nodes[i].next_node].prev_node = i;||| 80 }||| 81 build();||| 82 while (q--) {||| 83 int t;||| 84 cin >> t;||| 85 if (t == 1) {||| 86 int i, j;||| 87 cin >> i >> j;||| 88 --i;||| 89 --j;||| 90 upd(i, j);||| 91 } else if (t == 2) {||| 92 int v, k;||| 93 cin >> v >> k;||| 94 --v;||| 95 cout << getAns(v, k) + 1 << '\n';||| 96 } else {||| 97 assert(false);||| 98 }||| 99 }||| 100 return 0;||| 101 }||| "	44 for (int i = 0; i <= B; ++i) {
146	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005];||| 4 void change(long long x) {||| 5 long long k = x;||| 6 for (long long i = 1; i < 300; i++) k = pre[k];||| 7 for (long long i = 1, k2 = ne[x]; i <= 300; i++) {||| 8 ne300[k] = k2;||| 9 pre300[k2] = k;||| 10 k = ne[k];||| 11 k2 = ne[k2];||| 12 }||| 13 return;||| 14 }||| 15 int main() {||| 16 long long n, q;||| 17 scanf(""%lld%lld"", &n, &q);||| 18 for (long long i = 1; i <= n; i++) {||| 19 scanf(""%lld"", &ne[i]);||| 20 pre[ne[i]] = i;||| 21 }||| 22 for (long long i = 1; i <= n; i++)||| 23 for (long long j = 1, k = i; j <= 300; j++)||| 24 k = ne[k], ne300[i] = k, pre300[k] = i;||| 25 while (q--) {||| 26 long long op, x, y;||| 27 scanf(""%lld%lld%lld"", &op, &x, &y);||| 28 if (op == 1) {||| 29 swap(ne[x], ne[y]);||| 30 pre[ne[y]] = y, pre[ne[x]] = x;||| 31 change(x), change(y);||| 32 } else {||| 33 while (y >= 300) x = ne300[x], y -= 300;||| 34 while (y--) x = ne[x];||| 35 printf(""%lld\n"", x);||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005];||| 4 void change(long long x) {||| 5 long long k = x;||| 6 for (long long i = 1; i < 150; i++) k = pre[k];||| 7 for (long long i = 1, k2 = ne[x]; i < 150; i++) {||| 8 ne300[k] = k2;||| 9 pre300[k2] = k;||| 10 k = ne[k];||| 11 k2 = ne[k2];||| 12 }||| 13 return;||| 14 }||| 15 int main() {||| 16 long long n, q;||| 17 scanf(""%lld%lld"", &n, &q);||| 18 for (long long i = 1; i <= n; i++) {||| 19 scanf(""%lld"", &ne[i]);||| 20 pre[ne[i]] = i;||| 21 }||| 22 for (long long i = 1; i <= n; i++)||| 23 for (long long j = 1, k = i; j <= 150; j++)||| 24 k = ne[k], ne300[i] = k, pre300[k] = i;||| 25 while (q--) {||| 26 long long op, x, y;||| 27 scanf(""%lld%lld%lld"", &op, &x, &y);||| 28 if (op == 1) {||| 29 swap(ne[x], ne[y]);||| 30 pre[ne[y]] = y, pre[ne[x]] = x;||| 31 change(x), change(y);||| 32 } else {||| 33 while (y >= 150) x = ne300[x], y -= 150;||| 34 while (y--) x = ne[x];||| 35 printf(""%lld\n"", x);||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	6 for (long long i = 1; i < 300; i++) k = pre[k];
146	37	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int jump = 300;||| 4 const int MX = 1e5 + 5;||| 5 int p[MX], ip[MX], nxt[MX];||| 6 void overwrite(int pos, int finish, int turns) {||| 7 if (turns == 0) {||| 8 return;||| 9 }||| 10 nxt[pos] = finish;||| 11 overwrite(ip[pos], ip[finish], turns - 1);||| 12 }||| 13 void update(int pos) {||| 14 int finish = pos;||| 15 for (int i = 0; i < jump; i++) {||| 16 finish = p[finish];||| 17 }||| 18 overwrite(pos, finish, jump + 5);||| 19 }||| 20 void runswap(int x, int y) {||| 21 ip[p[x]] = y;||| 22 ip[p[y]] = x;||| 23 swap(p[x], p[y]);||| 24 update(p[x]);||| 25 update(p[y]);||| 26 }||| 27 int main() {||| 28 int n, q;||| 29 cin >> n >> q;||| 30 for (int i = 0; i < n; i++) {||| 31 cin >> p[i];||| 32 --p[i];||| 33 ip[p[i]] = i;||| 34 }||| 35 for (int i = 0; i < n; i++) {||| 36 runswap(i, i);||| 37 }||| 38 for (int j = 0; j < q; j++) {||| 39 int v;||| 40 cin >> v;||| 41 if (v == 1) {||| 42 int x, y;||| 43 cin >> x >> y;||| 44 --x;||| 45 --y;||| 46 runswap(x, y);||| 47 } else {||| 48 int i, k;||| 49 cin >> i >> k;||| 50 --i;||| 51 while (k >= jump) {||| 52 k -= jump;||| 53 i = nxt[i];||| 54 }||| 55 while (k > 0) {||| 56 i = p[i];||| 57 k--;||| 58 }||| 59 cout << i + 1 << endl;||| 60 }||| 61 }||| 62 return 0;||| 63 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int jump = 300;||| 4 const int MX = 1e5 + 5;||| 5 int p[MX], ip[MX], nxt[MX];||| 6 void overwrite(int pos, int finish, int turns) {||| 7 if (turns == 0) {||| 8 return;||| 9 }||| 10 nxt[pos] = finish;||| 11 overwrite(ip[pos], ip[finish], turns - 1);||| 12 }||| 13 void update(int pos) {||| 14 int finish = pos;||| 15 for (int i = 0; i < jump; i++) {||| 16 finish = p[finish];||| 17 }||| 18 overwrite(pos, finish, jump);||| 19 }||| 20 void runswap(int x, int y) {||| 21 ip[p[x]] = y;||| 22 ip[p[y]] = x;||| 23 swap(p[x], p[y]);||| 24 update(p[x]);||| 25 update(p[y]);||| 26 }||| 27 int main() {||| 28 int n, q;||| 29 cin >> n >> q;||| 30 for (int i = 0; i < n; i++) {||| 31 cin >> p[i];||| 32 --p[i];||| 33 ip[p[i]] = i;||| 34 }||| 35 for (int i = 0; i < n; i++) {||| 36 runswap(i, i);||| 37 }||| 38 for (int j = 0; j < q; j++) {||| 39 int v;||| 40 cin >> v;||| 41 if (v == 1) {||| 42 int x, y;||| 43 cin >> x >> y;||| 44 --x;||| 45 --y;||| 46 runswap(x, y);||| 47 } else {||| 48 int i, k;||| 49 cin >> i >> k;||| 50 --i;||| 51 while (k >= jump) {||| 52 k -= jump;||| 53 i = nxt[i];||| 54 }||| 55 while (k > 0) {||| 56 i = p[i];||| 57 k--;||| 58 }||| 59 cout << i + 1 << endl;||| 60 }||| 61 }||| 62 return 0;||| 63 }||| 	18 overwrite(pos, finish, jump + 5);
147	155	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 long long n = s.size();||| 10 long long count = 0;||| 11 for (long long i = 0; i < n; i++) {||| 12 if (s[i] == 'N') {||| 13 count++;||| 14 }||| 15 }||| 16 if (count == 1)||| 17 cout << ""NO"" << endl;||| 18 else||| 19 cout << ""YES"" << endl;||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 string s;||| 8 cin >> s;||| 9 long long n = s.size();||| 10 long long count = 0;||| 11 for (long long i = 0; i < n; i++) {||| 12 if (s[i] == 'N') {||| 13 count++;||| 14 }||| 15 }||| 16 if (count == 1)||| 17 cout << ""YES"" << endl;||| 18 else||| 19 cout << ""NO"" << endl;||| 20 }||| 21 return 0;||| 22 }||| "	"17 cout << ""NO"" << endl;"
147	117	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int c = 0;||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.length(); i++) {||| 11 if (s[i] == 'N') c++;||| 12 }||| 13 if (c != 1)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int c = 0;||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.length(); i++) {||| 11 if (s[i] == 'N') c++;||| 12 }||| 13 if (c > 1)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	13 if (c != 1)
147	173	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int c = 0;||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.length(); i++) {||| 11 if (s[i] == 'N') c++;||| 12 }||| 13 if (c != 1)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int c = 0;||| 8 string s;||| 9 cin >> s;||| 10 for (int i = 0; i < s.length(); i++) {||| 11 if (s[i] != 'N') c++;||| 12 }||| 13 if (c > 1)||| 14 cout << ""YES"" << endl;||| 15 else||| 16 cout << ""NO"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	11 if (s[i] == 'N') c++;
157	118	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 998244353;||| 4 const long long int inf = 1e18;||| 5 const long long int N = 5000;||| 6 long long int factorialNumInverse[N + 1];||| 7 long long int naturalNumInverse[N + 1];||| 8 long long int fact[N + 1];||| 9 void InverseofNumber(long long int p) {||| 10 naturalNumInverse[0] = naturalNumInverse[1] = 1;||| 11 for (long long int i = 2; i <= N; i++)||| 12 naturalNumInverse[i] = naturalNumInverse[p % i] * (p - p / i) % p;||| 13 }||| 14 void InverseofFactorial(long long int p) {||| 15 factorialNumInverse[0] = factorialNumInverse[1] = 1;||| 16 for (long long int i = 2; i <= N; i++)||| 17 factorialNumInverse[i] =||| 18 (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p;||| 19 }||| 20 void factorial(long long int p) {||| 21 fact[0] = 1;||| 22 for (long long int i = 1; i <= N; i++) {||| 23 fact[i] = (fact[i - 1] * i) % p;||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 cout.tie(NULL);||| 30 long long int p = mod;||| 31 InverseofNumber(p);||| 32 InverseofFactorial(p);||| 33 factorial(p);||| 34 long long int n, k;||| 35 string s;||| 36 cin >> n >> k >> s;||| 37 long long int l = 0, r = 0;||| 38 vector<long long int> a;||| 39 for (long long int i = 0; i < n; i++) {||| 40 if (s[i] == '1') a.push_back(i);||| 41 }||| 42 if (a.size() < k || k == 0) {||| 43 cout << 1 << ""\n"";||| 44 return 0;||| 45 }||| 46 r = (a.size() == k ? n - 1 : a[k] - 1);||| 47 long long int ans =||| 48 (fact[r - l + 1] *||| 49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 50 mod;||| 51 long long int pl = l, pr = r;||| 52 bool done = 0;||| 53 long long int g = k;||| 54 while (g < a.size()) {||| 55 pr = r;||| 56 pl = l;||| 57 l = a[g - k] + 1;||| 58 r = (g + 1 == a.size() ? n - 1 : a[g + 1] - 1);||| 59 long long int t1 =||| 60 (fact[r - l + 1] *||| 61 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 62 mod;||| 63 long long int x = pr - l + 1;||| 64 long long int t2 = (fact[x] * (factorialNumInverse[k - 1] *||| 65 factorialNumInverse[x - k + 1] % mod)) %||| 66 mod;||| 67 ans = (ans + t1 - t2 + mod) % mod;||| 68 g++;||| 69 }||| 70 cout << ans << ""\n"";||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 998244353;||| 4 const long long int inf = 1e18;||| 5 const long long int N = 5000;||| 6 long long int factorialNumInverse[N + 1];||| 7 long long int naturalNumInverse[N + 1];||| 8 long long int fact[N + 1];||| 9 void InverseofNumber(long long int p) {||| 10 naturalNumInverse[0] = naturalNumInverse[1] = 1;||| 11 for (long long int i = 2; i <= N; i++)||| 12 naturalNumInverse[i] = naturalNumInverse[p % i] * (p - p / i) % p;||| 13 }||| 14 void InverseofFactorial(long long int p) {||| 15 factorialNumInverse[0] = factorialNumInverse[1] = 1;||| 16 for (long long int i = 2; i <= N; i++)||| 17 factorialNumInverse[i] =||| 18 (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p;||| 19 }||| 20 void factorial(long long int p) {||| 21 fact[0] = 1;||| 22 for (long long int i = 1; i <= N; i++) {||| 23 fact[i] = (fact[i - 1] * i) % p;||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 cout.tie(NULL);||| 30 long long int p = mod;||| 31 InverseofNumber(p);||| 32 InverseofFactorial(p);||| 33 factorial(p);||| 34 long long int n, k;||| 35 string s;||| 36 cin >> n >> k >> s;||| 37 long long int l = 0, r = 0;||| 38 vector<long long int> a;||| 39 for (long long int i = 0; i < n; i++) {||| 40 if (s[i] == '1') a.push_back(i);||| 41 }||| 42 if (a.size() < k || k == 0) {||| 43 cout << 1 << ""\n"";||| 44 return 0;||| 45 }||| 46 r = (a.size() == k ? n - 1 : a[k] - 1);||| 47 long long int ans =||| 48 (fact[r - l + 1] *||| 49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k]) % mod) %||| 50 mod;||| 51 long long int pl = l, pr = r;||| 52 bool done = 0;||| 53 long long int g = k;||| 54 while (g < a.size()) {||| 55 pr = r;||| 56 pl = l;||| 57 l = a[g - k] + 1;||| 58 r = (g + 1 == a.size() ? n - 1 : a[g + 1] - 1);||| 59 long long int t1 =||| 60 (fact[r - l + 1] *||| 61 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 62 mod;||| 63 long long int x = pr - l + 1;||| 64 long long int t2 = (fact[x] * (factorialNumInverse[k - 1] *||| 65 factorialNumInverse[x - k + 1] % mod)) %||| 66 mod;||| 67 ans = (ans + t1 - t2 + mod) % mod;||| 68 g++;||| 69 }||| 70 cout << ans << ""\n"";||| 71 return 0;||| 72 }||| "	49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %
157	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 const int mod = 998244353;||| 5 void bmod(int &x) { x -= mod, x += x >> 31 & mod; }||| 6 int norm(int x) { return x < 0 ? x + mod : x; }||| 7 void Add(int &x, int y) { x += y - mod, x += x >> 31 & mod; }||| 8 void Sub(int &x, int y) { x -= y, x += x >> 31 & mod; }||| 9 int inv(int x, int k = mod - 2) {||| 10 int r = 1;||| 11 while (k) {||| 12 if (k & 1) r = (long long)x * r % mod;||| 13 x = (long long)x * x % mod;||| 14 k >>= 1;||| 15 }||| 16 return r;||| 17 }||| 18 const int Flen = N;||| 19 int fact[Flen], infact[Flen];||| 20 void preF(int n = Flen - 1) {||| 21 fact[0] = 1;||| 22 for (int i = 1; i <= n; ++i) fact[i] = (long long)fact[i - 1] * i % mod;||| 23 infact[n] = inv(fact[n]);||| 24 for (int i = n; i; --i) infact[i - 1] = (long long)infact[i] * i % mod;||| 25 }||| 26 int C(int x, int y) {||| 27 return y < 0 || x < y||| 28 ? 0||| 29 : (long long)fact[x] * infact[y] % mod * infact[x - y] % mod;||| 30 }||| 31 int n, m;||| 32 char str[N];||| 33 int f[N], s[N];||| 34 int main() {||| 35 preF();||| 36 scanf(""%d%d%s"", &n, &m, str + 1);||| 37 if (!m) return puts(""1""), 0;||| 38 f[0] = 1;||| 39 for (int i = 1; i <= n; ++i) {||| 40 s[i] = s[i - 1] + (str[i] -= 48);||| 41 }||| 42 for (int i = 1, j = 0; i <= n; ++i) {||| 43 f[i] = f[i - 1];||| 44 if (str[i]) {||| 45 while (j < i && s[i] - s[j] > m) ++j;||| 46 if (s[i] - s[j] != m) continue;||| 47 if (s[j])||| 48 Add(f[i], C(i - j - 1, m));||| 49 else||| 50 Add(f[i], C(i - j, m) - 1);||| 51 } else {||| 52 if (s[i] - s[j] != m) continue;||| 53 Add(f[i], C(i - j - 1, m - 1));||| 54 }||| 55 }||| 56 printf(""%d\n"", f[n]);||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 const int mod = 998244353;||| 5 void bmod(int &x) { x -= mod, x += x >> 31 & mod; }||| 6 int norm(int x) { return x < 0 ? x + mod : x; }||| 7 void Add(int &x, int y) { x += y - mod, x += x >> 31 & mod; }||| 8 void Sub(int &x, int y) { x -= y, x += x >> 31 & mod; }||| 9 int inv(int x, int k = mod - 2) {||| 10 int r = 1;||| 11 while (k) {||| 12 if (k & 1) r = (long long)x * r % mod;||| 13 x = (long long)x * x % mod;||| 14 k >>= 1;||| 15 }||| 16 return r;||| 17 }||| 18 const int Flen = N;||| 19 int fact[Flen], infact[Flen];||| 20 void preF(int n = Flen - 1) {||| 21 fact[0] = 1;||| 22 for (int i = 1; i <= n; ++i) fact[i] = (long long)fact[i - 1] * i % mod;||| 23 infact[n] = inv(fact[n]);||| 24 for (int i = n; i; --i) infact[i - 1] = (long long)infact[i] * i % mod;||| 25 }||| 26 int C(int x, int y) {||| 27 return y < 0 || x < y||| 28 ? 0||| 29 : (long long)fact[x] * infact[y] % mod * infact[x - y] % mod;||| 30 }||| 31 int n, m;||| 32 char str[N];||| 33 int f[N], s[N];||| 34 int main() {||| 35 preF();||| 36 scanf(""%d%d%s"", &n, &m, str + 1);||| 37 if (!m) return puts(""1""), 0;||| 38 f[0] = 1;||| 39 for (int i = 1; i <= n; ++i) {||| 40 s[i] = s[i - 1] + (str[i] -= 48);||| 41 }||| 42 for (int i = 1, j = 0; i <= n; ++i) {||| 43 f[i] = f[i - 1];||| 44 if (str[i]) {||| 45 while (j < i && s[i] - s[j] > m) ++j;||| 46 if (s[i] - s[j] != m) continue;||| 47 if (s[j])||| 48 Add(f[i], C(i - j - 1, m));||| 49 else||| 50 Add(f[i], C(i - j, m));||| 51 } else {||| 52 if (s[i] - s[j] != m) continue;||| 53 Add(f[i], C(i - j - 1, m - 1));||| 54 }||| 55 }||| 56 printf(""%d\n"", f[n]);||| 57 return 0;||| 58 }||| "	50 Add(f[i], C(i - j, m) - 1);
158	6	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""popcnt"")||| 4 using namespace std;||| 5 mt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());||| 6 const long long N = 1e6 + 100;||| 7 const long long mod = 998244353;||| 8 const long long big = 1e17;||| 9 long long t, n, m;||| 10 string a[N];||| 11 pair<long long, long long> c[N];||| 12 int x[N], d[N], e[N];||| 13 int main() {||| 14 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n >> m;||| 18 for (int i = 0; i < n; i++) cin >> x[i];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long ans = -1e10;||| 21 for (int j = 0; j < (1 << n); j++) {||| 22 for (int i = 0; i < m; i++) c[i] = make_pair(0, i), d[i] = 0;||| 23 long long sum = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if ((1 << i) & j) {||| 26 sum += x[i];||| 27 for (int k = 0; k < m; k++) {||| 28 if (a[i][k] == '1') c[k].first--;||| 29 }||| 30 } else {||| 31 sum -= x[i];||| 32 for (int k = 0; k < m; k++)||| 33 if (a[i][k] == '1') c[k].first++;||| 34 }||| 35 }||| 36 sort(c, c + m);||| 37 for (int i = 0; i < m; i++)||| 38 d[c[i].second] = i + 1, sum = sum + c[i].first * (i + 1);||| 39 bool t = 1;||| 40 for (int i = 0; i < n; i++) {||| 41 long long sum2 = 0;||| 42 for (int k = 0; k < m; k++)||| 43 if (a[i][k] == '1') sum2 += d[k];||| 44 if (((1 << i) & j) && sum2 > x[i]) t = 0;||| 45 if ((!((1 << i) & j)) && sum2 < x[i]) t = 0;||| 46 }||| 47 if (t && (sum > ans)) {||| 48 ans = sum;||| 49 for (int j = 0; j < m; j++) e[j] = d[j];||| 50 }||| 51 }||| 52 for (int i = 0; i < m; i++) cout << e[i] << "" "";||| 53 cout << '\n';||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""popcnt"")||| 4 using namespace std;||| 5 mt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());||| 6 const long long N = 1e6 + 100;||| 7 const long long mod = 998244353;||| 8 const long long big = 1e17;||| 9 long long t, n, m;||| 10 string a[N];||| 11 pair<long long, long long> c[N];||| 12 int x[N], d[N], e[N];||| 13 int main() {||| 14 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n >> m;||| 18 for (int i = 0; i < n; i++) cin >> x[i];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long ans = -1e10;||| 21 for (int j = 0; j < (1 << n); j++) {||| 22 for (int i = 0; i < m; i++) c[i] = make_pair(0, i), d[i] = 0;||| 23 long long sum = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if ((1 << i) & j) {||| 26 sum += x[i];||| 27 for (int k = 0; k < m; k++) {||| 28 if (a[i][k] == '1') c[k].first--;||| 29 }||| 30 } else {||| 31 sum -= x[i];||| 32 for (int k = 0; k < m; k++)||| 33 if (a[i][k] == '1') c[k].first++;||| 34 }||| 35 }||| 36 sort(c, c + m);||| 37 for (int i = 0; i < m; i++)||| 38 d[c[i].second] = i + 1, sum = sum + c[i].first * (i + 1);||| 39 bool t = 1;||| 40 for (int i = 0; i < n; i++) {||| 41 long long sum2 = 0;||| 42 for (int k = 0; k < m; k++)||| 43 if (a[i][k]) sum2 += d[k];||| 44 if (((1 << i) & j) && sum2 > x[i]) t = 0;||| 45 if ((!((1 << i) & j)) && sum2 < x[i]) t = 0;||| 46 }||| 47 if (t && (sum > ans)) {||| 48 ans = sum;||| 49 for (int j = 0; j < m; j++) e[j] = d[j];||| 50 }||| 51 }||| 52 for (int i = 0; i < m; i++) cout << e[i] << "" "";||| 53 cout << '\n';||| 54 }||| 55 }||| "	43 if (a[i][k] == '1') sum2 += d[k];
158	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e4 + 10;||| 4 const int MOD = 998244353;||| 5 int x[11], p[MAX], q[MAX], ret[MAX];||| 6 char s[11][MAX];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n, m;||| 12 scanf(""%d%d"", &n, &m);||| 13 for (int i = 0; i < n; i++) scanf(""%d"", x + i);||| 14 for (int i = 0; i < n; i++) scanf(""%s"", s[i] + 1);||| 15 long long ans = 0;||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 for (int j = 1; j <= m; j++) p[j] = 0;||| 18 for (int j = 1; j <= m; j++) q[j] = j;||| 19 long long sum = 0;||| 20 for (int j = 0; j < n; j++) {||| 21 int tag = ((1 << j) & i) ? 1 : -1;||| 22 sum -= tag * x[j];||| 23 for (int k = 1; k <= m; k++) {||| 24 if (s[j][k] == '0') continue;||| 25 p[k] += tag;||| 26 }||| 27 }||| 28 sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; });||| 29 for (int j = 1; j <= m; j++) sum += p[q[j]] * j;||| 30 if (sum >= ans) {||| 31 ans = sum;||| 32 for (int j = 1; j <= m; j++) ret[q[j]] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) printf(""%d "", ret[i]);||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e4 + 10;||| 4 const int MOD = 998244353;||| 5 int x[11], p[MAX], q[MAX], ret[MAX];||| 6 char s[11][MAX];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n, m;||| 12 scanf(""%d%d"", &n, &m);||| 13 for (int i = 0; i < n; i++) scanf(""%d"", x + i);||| 14 for (int i = 0; i < n; i++) scanf(""%s"", s[i] + 1);||| 15 long long ans = 0;||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 for (int j = 1; j <= m; j++) p[j] = 0;||| 18 for (int j = 1; j <= m; j++) q[j] = j;||| 19 long long sum = 0;||| 20 for (int j = 0; j < n; j++) {||| 21 int tag = ((1 << j) & i) ? 1 : -1;||| 22 sum -= tag * x[j];||| 23 for (int k = 1; k <= m; k++) {||| 24 if (s[j][k] == '0') continue;||| 25 p[k] += tag;||| 26 }||| 27 }||| 28 sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; });||| 29 for (int j = 1; j <= m; j++) sum += p[q[j]] * j;||| 30 if (sum > ans) {||| 31 ans = sum;||| 32 for (int j = 1; j <= m; j++) ret[q[j]] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) printf(""%d "", ret[i]);||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| "	30 if (sum >= ans) {
158	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[10], c[10005];||| 4 char b[10][10005];||| 5 vector<int> g[10];||| 6 int id[10005];||| 7 bool cmp(int i1, int i2) { return c[i1] < c[i2]; }||| 8 int p[10005], p2[10005];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &m);||| 14 for (int i = 0; i < n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 scanf(""\n%s"", b[i] + 1);||| 19 g[i].clear();||| 20 for (int j = 1; j <= m; j++) {||| 21 if (b[i][j] == '1') {||| 22 g[i].push_back(j);||| 23 }||| 24 }||| 25 }||| 26 long long ans = 0;||| 27 for (int i = 1; i <= m; i++) id[i] = i;||| 28 for (int i = 0; i < (1 << n); i++) {||| 29 memset(c, 0, sizeof(c));||| 30 for (int j = 0; j < n; j++) {||| 31 for (int k : g[j]) {||| 32 if (i & (1 << j))||| 33 c[k]++;||| 34 else||| 35 c[k]--;||| 36 }||| 37 }||| 38 sort(id + 1, id + 1 + m, cmp);||| 39 for (int j = 1; j <= m; j++) {||| 40 p[id[j]] = j;||| 41 }||| 42 long long sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 int h = 0;||| 45 for (int k : g[j]) {||| 46 h += p[k];||| 47 }||| 48 sum += abs(a[j] - h);||| 49 }||| 50 if (sum >= ans) {||| 51 ans = sum;||| 52 for (int j = 1; j <= m; j++) {||| 53 p2[j] = p[j];||| 54 }||| 55 }||| 56 }||| 57 for (int i = 1; i <= m; i++) {||| 58 printf(""%d "", p2[i]);||| 59 }||| 60 printf(""\n"");||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[10], c[1005];||| 4 char b[10][1005];||| 5 vector<int> g[10];||| 6 int id[1005];||| 7 bool cmp(int i1, int i2) { return c[i1] < c[i2]; }||| 8 int p[1005], p2[1005];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &m);||| 14 for (int i = 0; i < n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 scanf(""\n%s"", b[i] + 1);||| 19 g[i].clear();||| 20 for (int j = 1; j <= m; j++) {||| 21 if (b[i][j] == '1') {||| 22 g[i].push_back(j);||| 23 }||| 24 }||| 25 }||| 26 long long ans = 0;||| 27 for (int i = 1; i <= m; i++) id[i] = i;||| 28 for (int i = 0; i < (1 << n); i++) {||| 29 memset(c, 0, sizeof(c));||| 30 for (int j = 0; j < n; j++) {||| 31 for (int k : g[j]) {||| 32 if (i & (1 << j))||| 33 c[k]++;||| 34 else||| 35 c[k]--;||| 36 }||| 37 }||| 38 sort(id + 1, id + 1 + m, cmp);||| 39 for (int j = 1; j <= m; j++) {||| 40 p[id[j]] = j;||| 41 }||| 42 long long sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 int h = 0;||| 45 for (int k : g[j]) {||| 46 h += p[k];||| 47 }||| 48 sum += abs(a[i] - h);||| 49 }||| 50 if (sum >= ans) {||| 51 ans = sum;||| 52 for (int j = 1; j <= m; j++) {||| 53 p2[j] = p[j];||| 54 }||| 55 }||| 56 }||| 57 for (int i = 1; i <= m; i++) {||| 58 printf(""%d "", p2[i]);||| 59 }||| 60 printf(""\n"");||| 61 }||| 62 return 0;||| 63 }||| "	3 int n, m, a[10], c[10005];
158	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int e[11];||| 4 vector<int> score(10010);||| 5 vector<int> ans;||| 6 string s[11];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> e[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i];||| 12 int up = 1 << n;||| 13 int mx = -1;||| 14 vector<pair<int, int> > ev(m + 1);||| 15 for (int i = 0; i < up; i++) {||| 16 for (int j = 1; j <= m; j++) {||| 17 ev[j].first = 0;||| 18 ev[j].second = j;||| 19 }||| 20 for (int j = 1; j <= n; j++)||| 21 for (int k = 1; k <= m; k++) {||| 22 if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1;||| 23 }||| 24 int sum = 0;||| 25 for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j];||| 26 sort(ev.begin() + 1, ev.end());||| 27 for (int j = 1; j <= m; j++) {||| 28 score[ev[j].second] = j;||| 29 sum += j * ev[j].first;||| 30 }||| 31 if (mx < sum) {||| 32 mx = sum;||| 33 ans = score;||| 34 }||| 35 }||| 36 for (int i = 1; i <= m; i++) cout << ans[i] << "" \n""[i == m];||| 37 }||| 38 signed main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) solve();||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int e[11];||| 4 vector<int> score(10010);||| 5 vector<int> ans;||| 6 string s[11];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> e[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i];||| 12 int up = 1 << n;||| 13 int mx = 0;||| 14 vector<pair<int, int> > ev(m + 1);||| 15 for (int i = 0; i < up; i++) {||| 16 for (int j = 1; j <= m; j++) {||| 17 ev[j].first = 0;||| 18 ev[j].second = j;||| 19 }||| 20 for (int j = 1; j <= n; j++)||| 21 for (int k = 1; k <= m; k++) {||| 22 if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1;||| 23 }||| 24 int sum = 0;||| 25 for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j];||| 26 sort(ev.begin() + 1, ev.end());||| 27 for (int j = 1; j <= m; j++) {||| 28 score[ev[j].second] = j;||| 29 sum += j * ev[j].first;||| 30 }||| 31 if (mx < sum) {||| 32 mx = sum;||| 33 ans = score;||| 34 }||| 35 }||| 36 for (int i = 1; i <= m; i++) cout << ans[i] << "" \n""[i == m];||| 37 }||| 38 signed main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) solve();||| 45 return 0;||| 46 }||| "	13 int mx = -1;
158	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10, M = 2 * N, mod = 998244353;||| 4 int first[N];||| 5 string s[N];||| 6 int ans[N];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> first[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i], s[i] = "" "" + s[i];||| 12 long long res = -1, tmp;||| 13 for (int k = 0; k < (1 << n); k++) {||| 14 tmp = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 int r = 1;||| 17 if (k >> i & 1) r = -1;||| 18 tmp += r * first[i + 1];||| 19 }||| 20 vector<pair<int, int> > num;||| 21 for (int i = 1; i <= m; i++) {||| 22 int tmp = 0;||| 23 for (int j = 0; j < n; j++) {||| 24 int r = -1;||| 25 if (k >> j & 1) r = 1;||| 26 tmp += (s[j + 1][i] - '0') * r;||| 27 }||| 28 num.push_back({tmp, i});||| 29 }||| 30 sort((num).begin(), (num).end());||| 31 for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i;||| 32 if (res < tmp) {||| 33 res = tmp;||| 34 for (int i = 0; i < m; i++) {||| 35 auto &[val, id] = num[i];||| 36 ans[id] = i + 1;||| 37 }||| 38 }||| 39 }||| 40 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 41 cout << '\n';||| 42 }||| 43 int main() {||| 44 ios::sync_with_stdio(0), cin.tie(0);||| 45 cout.precision(2), cout.setf(ios::fixed);||| 46 int t;||| 47 cin >> t;||| 48 while (t--) solve();||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10, M = 2 * N, mod = 998244353;||| 4 int first[N];||| 5 string s[N];||| 6 int ans[N];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> first[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i], s[i] = "" "" + s[i];||| 12 long long res = 0, tmp;||| 13 for (int k = 0; k < (1 << n); k++) {||| 14 tmp = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 int r = 1;||| 17 if (k >> i & 1) r = -1;||| 18 tmp += r * first[i + 1];||| 19 }||| 20 vector<pair<int, int> > num;||| 21 for (int i = 1; i <= m; i++) {||| 22 int tmp = 0;||| 23 for (int j = 0; j < n; j++) {||| 24 int r = -1;||| 25 if (k >> j & 1) r = 1;||| 26 tmp += (s[j + 1][i] - '0') * r;||| 27 }||| 28 num.push_back({tmp, i});||| 29 }||| 30 sort((num).begin(), (num).end());||| 31 for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i;||| 32 if (res < tmp) {||| 33 res = tmp;||| 34 for (int i = 0; i < m; i++) {||| 35 auto &[val, id] = num[i];||| 36 ans[id] = i + 1;||| 37 }||| 38 }||| 39 }||| 40 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 41 cout << '\n';||| 42 }||| 43 int main() {||| 44 ios::sync_with_stdio(0), cin.tie(0);||| 45 cout.precision(2), cout.setf(ios::fixed);||| 46 int t;||| 47 cin >> t;||| 48 while (t--) solve();||| 49 return 0;||| 50 }||| "	12 long long res = -1, tmp;
158	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<int64_t> &a);||| 4 void read(vector<string> &a);||| 5 void read(vector<vector<int64_t>> &a);||| 6 void read(vector<pair<int64_t, int64_t>> &a);||| 7 void solve() {||| 8 int64_t n, m;||| 9 cin >> n >> m;||| 10 vector<int64_t> exp(n);||| 11 read(exp);||| 12 vector<string> mat(n);||| 13 read(mat);||| 14 int64_t best = 0;||| 15 vector<int64_t> ret;||| 16 for (int64_t x = 0; x < (1 << n); x++) {||| 17 string b = std::bitset<32>(x).to_string();||| 18 reverse(b.begin(), b.end());||| 19 vector<pair<int64_t, int64_t>> order(m);||| 20 for (int64_t i = 0; i < m; i++) {||| 21 int64_t temp = 0;||| 22 for (int64_t j = 0; j < n; j++) {||| 23 if (b[j] == '1')||| 24 temp += (mat[j][i] - '0');||| 25 else||| 26 temp -= (mat[j][i] - '0');||| 27 }||| 28 order[i] = {temp, i};||| 29 }||| 30 sort(order.begin(), order.end());||| 31 reverse(order.begin(), order.end());||| 32 int64_t ans = 0;||| 33 for (int64_t i = 0; i < n; i++) {||| 34 if (b[i] == '0')||| 35 ans += exp[i];||| 36 else||| 37 ans -= exp[i];||| 38 }||| 39 int64_t tog = m;||| 40 vector<int64_t> haha(m);||| 41 for (auto x : order) {||| 42 ans += (x.first) * (tog);||| 43 haha[x.second] = tog;||| 44 tog--;||| 45 }||| 46 if (ans >= best) {||| 47 best = ans;||| 48 ret = haha;||| 49 }||| 50 }||| 51 for (int64_t i : ret) cout << i << "" "";||| 52 cout << endl;||| 53 }||| 54 int32_t main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int64_t t = 1;||| 58 cin >> t;||| 59 for (int64_t tt = 1; tt <= t; tt++) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| 64 void read(vector<int64_t> &a) {||| 65 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 66 }||| 67 void read(vector<string> &a) {||| 68 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 69 }||| 70 void read(vector<vector<int64_t>> &a) {||| 71 for (int64_t i = 0; i < a.size(); i++)||| 72 for (int64_t j = 0; j < a[i].size(); j++) cin >> a[i][j];||| 73 }||| 74 void read(vector<pair<int64_t, int64_t>> &a) {||| 75 for (int64_t i = 0; i < a.size(); i++) cin >> a[i].first >> a[i].second;||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<int64_t> &a);||| 4 void read(vector<string> &a);||| 5 void read(vector<vector<int64_t>> &a);||| 6 void read(vector<pair<int64_t, int64_t>> &a);||| 7 void solve() {||| 8 int64_t n, m;||| 9 cin >> n >> m;||| 10 vector<int64_t> exp(n);||| 11 read(exp);||| 12 vector<string> mat(n);||| 13 read(mat);||| 14 int64_t best = 0;||| 15 vector<int64_t> ret;||| 16 for (int64_t x = 0; x < (1 << n); x++) {||| 17 string b = std::bitset<32>(x).to_string();||| 18 reverse(b.begin(), b.end());||| 19 vector<pair<int64_t, int64_t>> order(m);||| 20 for (int64_t i = 0; i < m; i++) {||| 21 int64_t temp = 0;||| 22 for (int64_t j = 0; j < n; j++) {||| 23 if (b[j] == '1')||| 24 temp += (mat[j][i] - '0');||| 25 else||| 26 temp -= (mat[j][i] - '0');||| 27 }||| 28 order[i] = {temp, i};||| 29 }||| 30 sort(order.begin(), order.end());||| 31 reverse(order.begin(), order.end());||| 32 int64_t ans = 0;||| 33 for (int64_t i = 0; i < n; i++) {||| 34 if (b[i] == '0')||| 35 ans += exp[i];||| 36 else||| 37 ans -= exp[i];||| 38 }||| 39 int64_t tog = m;||| 40 vector<int64_t> haha(m);||| 41 for (auto x : order) {||| 42 ans += (x.first) * (tog);||| 43 haha[x.second] = tog;||| 44 tog--;||| 45 }||| 46 if (ans > best) {||| 47 best = ans;||| 48 ret = haha;||| 49 }||| 50 }||| 51 for (int64_t i : ret) cout << i << "" "";||| 52 cout << endl;||| 53 }||| 54 int32_t main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int64_t t = 1;||| 58 cin >> t;||| 59 for (int64_t tt = 1; tt <= t; tt++) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| 64 void read(vector<int64_t> &a) {||| 65 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 66 }||| 67 void read(vector<string> &a) {||| 68 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 69 }||| 70 void read(vector<vector<int64_t>> &a) {||| 71 for (int64_t i = 0; i < a.size(); i++)||| 72 for (int64_t j = 0; j < a[i].size(); j++) cin >> a[i][j];||| 73 }||| 74 void read(vector<pair<int64_t, int64_t>> &a) {||| 75 for (int64_t i = 0; i < a.size(); i++) cin >> a[i].first >> a[i].second;||| 76 }||| "	46 if (ans >= best) {
158	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 int x[19];||| 23 char s[19][maxn];||| 24 int ans[maxn];||| 25 pair<int, int> val[maxn];||| 26 bool cmp(pair<int, int> A, pair<int, int> B) { return A.second < B.second; }||| 27 int main() {||| 28 int _;||| 29 scanf(""%d"", &_);||| 30 while (_--) {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &x[i]);||| 34 for (int i = 0; i < n; i++) {||| 35 scanf(""%s"", s[i]);||| 36 }||| 37 int v = -1;||| 38 for (int i = 0; i < (1 << n); i++) {||| 39 int res = 0;||| 40 for (int j = 0; j < n; j++) {||| 41 if (i >> j & 1)||| 42 res += x[j];||| 43 else||| 44 res -= x[j];||| 45 }||| 46 for (int k = 0; k < m; k++) {||| 47 val[k].first = 0;||| 48 val[k].second = k;||| 49 }||| 50 for (int j = 0; j < n; j++) {||| 51 for (int k = 0; k < m; k++) {||| 52 if (s[j][k] == '1') {||| 53 if (i >> j & 1)||| 54 val[k].first--;||| 55 else||| 56 val[k].first++;||| 57 }||| 58 }||| 59 }||| 60 sort(val, val + m);||| 61 for (int j = 0; j < m; j++) {||| 62 res += (j + 1) * val[j].first;||| 63 }||| 64 if (res > v) {||| 65 v = res;||| 66 for (int j = 0; j < m; j++) {||| 67 ans[val[j].second] = j + 1;||| 68 }||| 69 }||| 70 }||| 71 for (int i = 0; i < m; i++) {||| 72 printf(""%d "", ans[i]);||| 73 }||| 74 printf(""\n"");||| 75 }||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 int x[19];||| 23 char s[19][maxn];||| 24 int ans[maxn];||| 25 pair<int, int> val[maxn];||| 26 bool cmp(pair<int, int> A, pair<int, int> B) { return A.second < B.second; }||| 27 int main() {||| 28 int _;||| 29 scanf(""%d"", &_);||| 30 while (_--) {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &x[i]);||| 34 for (int i = 0; i < n; i++) {||| 35 scanf(""%s"", s[i]);||| 36 }||| 37 int v = 0;||| 38 for (int i = 0; i < (1 << n); i++) {||| 39 int res = 0;||| 40 for (int j = 0; j < n; j++) {||| 41 if (i >> j & 1)||| 42 res += x[j];||| 43 else||| 44 res -= x[j];||| 45 }||| 46 for (int k = 0; k < m; k++) {||| 47 val[k].first = 0;||| 48 val[k].second = k;||| 49 }||| 50 for (int j = 0; j < n; j++) {||| 51 for (int k = 0; k < m; k++) {||| 52 if (s[j][k] == '1') {||| 53 if (i >> j & 1)||| 54 val[k].first--;||| 55 else||| 56 val[k].first++;||| 57 }||| 58 }||| 59 }||| 60 sort(val, val + m);||| 61 for (int j = 0; j < m; j++) {||| 62 res += (j + 1) * val[j].first;||| 63 }||| 64 if (res > v) {||| 65 v = res;||| 66 for (int j = 0; j < m; j++) {||| 67 ans[val[j].second] = j + 1;||| 68 }||| 69 }||| 70 }||| 71 for (int i = 0; i < m; i++) {||| 72 printf(""%d "", ans[i]);||| 73 }||| 74 printf(""\n"");||| 75 }||| 76 }||| "	37 int v = -1;
158	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int x[n];||| 10 for (int i = 0; i < n; i++) cin >> x[i];||| 11 string s[n];||| 12 for (int i = 0; i < n; i++) cin >> s[i];||| 13 int ans[m], score = -1;||| 14 for (int i = 0; i < (1 << n); i++) {||| 15 vector<pair<int, int> > vt;||| 16 for (int j = 0; j < m; j++) {||| 17 int cnt = 0;||| 18 for (int k = 0; k < n; k++) {||| 19 if (s[k][j] == '1') {||| 20 if (i & (1 << k))||| 21 cnt++;||| 22 else||| 23 cnt--;||| 24 }||| 25 }||| 26 vt.push_back(make_pair(cnt, j));||| 27 }||| 28 sort(vt.begin(), vt.end());||| 29 int temp[m], curr_score = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 int idx = vt[j].second;||| 32 temp[idx] = j + 1;||| 33 }||| 34 for (int j = 0; j < n; j++) {||| 35 int sum = 0;||| 36 for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k];||| 37 curr_score += abs(sum - x[j]);||| 38 }||| 39 if (curr_score > score) {||| 40 score = curr_score;||| 41 for (int j = 0; j < m; j++) ans[j] = temp[j];||| 42 }||| 43 }||| 44 for (int i = 0; i < m; i++) cout << ans[i] << ' ';||| 45 cout << '\n';||| 46 }||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int x[n];||| 10 for (int i = 0; i < n; i++) cin >> x[i];||| 11 string s[n];||| 12 for (int i = 0; i < n; i++) cin >> s[i];||| 13 int ans[m], score = 0;||| 14 for (int i = 0; i < (1 << n); i++) {||| 15 vector<pair<int, int> > vt;||| 16 for (int j = 0; j < m; j++) {||| 17 int cnt = 0;||| 18 for (int k = 0; k < n; k++) {||| 19 if (s[k][j] == '1') {||| 20 if (i & (1 << k))||| 21 cnt++;||| 22 else||| 23 cnt--;||| 24 }||| 25 }||| 26 vt.push_back(make_pair(cnt, j));||| 27 }||| 28 sort(vt.begin(), vt.end());||| 29 int temp[m], curr_score = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 int idx = vt[j].second;||| 32 temp[idx] = j + 1;||| 33 }||| 34 for (int j = 0; j < n; j++) {||| 35 int sum = 0;||| 36 for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k];||| 37 curr_score += abs(sum - x[j]);||| 38 }||| 39 if (curr_score > score) {||| 40 score = curr_score;||| 41 for (int j = 0; j < m; j++) ans[j] = temp[j];||| 42 }||| 43 }||| 44 for (int i = 0; i < m; i++) cout << ans[i] << ' ';||| 45 cout << '\n';||| 46 }||| 47 }||| 	13 int ans[m], score = -1;
158	33	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXM];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXN];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXN];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	9 int p[MAXM];
158	112	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXM];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXN];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	20 static int id[MAXM];
158	30	"1 #include <bits/stdc++.h>||| 2 std::mt19937 rng(||| 3 (unsigned int)std::chrono::steady_clock::now().time_since_epoch().count());||| 4 using namespace std;||| 5 void solve(int ttt) {||| 6 long long int n, m;||| 7 cin >> n >> m;||| 8 vector<long long int> x(n);||| 9 for (long long int i = 0; i < n; i++) cin >> x[i];||| 10 vector<vector<int> > a(n, vector<int>(m));||| 11 for (long long int i = 0; i < n; i++) {||| 12 string s;||| 13 cin >> s;||| 14 for (long long int j = 0; j < m; j++) {||| 15 if (s[j] == '1')||| 16 a[i][j] = 1;||| 17 else||| 18 a[i][j] = 0;||| 19 }||| 20 }||| 21 long long int res = LLONG_MIN;||| 22 vector<long long int> perm;||| 23 for (int msk = 0; msk < (1 << n); msk++) {||| 24 vector<int> coeff(m, 0);||| 25 long long int curVal = 0;||| 26 for (long long int i = 0; i < n; i++) {||| 27 if (msk & (1 << i)) {||| 28 curVal += x[i];||| 29 for (long long int j = 0; j < m; j++) {||| 30 if (a[i][j]) coeff[j]--;||| 31 }||| 32 } else {||| 33 curVal -= x[i];||| 34 for (long long int j = 0; j < m; j++) {||| 35 if (a[i][j]) coeff[j]++;||| 36 }||| 37 }||| 38 }||| 39 vector<int> ind(m);||| 40 iota(ind.begin(), ind.end(), 0);||| 41 sort(ind.begin(), ind.end(),||| 42 [&](int i, int j) { return coeff[i] < coeff[j]; });||| 43 long long int c = 1;||| 44 for (auto i : ind) {||| 45 curVal += c * coeff[i];||| 46 c++;||| 47 }||| 48 if (res < curVal) {||| 49 res = curVal;||| 50 vector<long long int> tmp(m);||| 51 for (long long int i = 0; i < m; i++) {||| 52 tmp[ind[i]] = i + 1;||| 53 }||| 54 swap(perm, tmp);||| 55 }||| 56 }||| 57 for (long long int i = 0; i < m; i++) {||| 58 cout << perm[i] << "" "";||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 int main() {||| 63 ios::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 int ttt;||| 66 ttt = 1;||| 67 cin >> ttt;||| 68 for (long long int i = 0; i < ttt; i++) solve(i);||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 std::mt19937 rng(||| 3 (unsigned int)std::chrono::steady_clock::now().time_since_epoch().count());||| 4 using namespace std;||| 5 void solve(int ttt) {||| 6 long long int n, m;||| 7 cin >> n >> m;||| 8 vector<long long int> x(n);||| 9 for (long long int i = 0; i < n; i++) cin >> x[i];||| 10 vector<vector<int> > a(n, vector<int>(m));||| 11 for (long long int i = 0; i < n; i++) {||| 12 string s;||| 13 cin >> s;||| 14 for (long long int j = 0; j < m; j++) {||| 15 if (s[j] == '1')||| 16 a[i][j] = 1;||| 17 else||| 18 a[i][j] = 0;||| 19 }||| 20 }||| 21 long long int res = LLONG_MIN;||| 22 vector<long long int> perm;||| 23 for (int msk = 0; msk < (1 << n); msk++) {||| 24 vector<int> coeff(m, 0);||| 25 long long int curVal = 0;||| 26 for (long long int i = 0; i < n; i++) {||| 27 if (msk & (1 << i)) {||| 28 curVal += x[i];||| 29 for (long long int j = 0; j < m; j++) {||| 30 if (a[i][j]) coeff[j]++;||| 31 }||| 32 } else {||| 33 curVal -= x[i];||| 34 for (long long int j = 0; j < m; j++) {||| 35 if (a[i][j]) coeff[j]--;||| 36 }||| 37 }||| 38 }||| 39 vector<int> ind(m);||| 40 iota(ind.begin(), ind.end(), 0);||| 41 sort(ind.begin(), ind.end(),||| 42 [&](int i, int j) { return coeff[i] < coeff[j]; });||| 43 long long int c = 1;||| 44 for (auto i : ind) {||| 45 curVal += c * coeff[i];||| 46 c++;||| 47 }||| 48 if (res < curVal) {||| 49 res = curVal;||| 50 vector<long long int> tmp(m);||| 51 for (long long int i = 0; i < m; i++) {||| 52 tmp[ind[i]] = i + 1;||| 53 }||| 54 swap(perm, tmp);||| 55 }||| 56 }||| 57 for (long long int i = 0; i < m; i++) {||| 58 cout << perm[i] << "" "";||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 int main() {||| 63 ios::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 int ttt;||| 66 ttt = 1;||| 67 cin >> ttt;||| 68 for (long long int i = 0; i < ttt; i++) solve(i);||| 69 }||| "	30 if (a[i][j]) coeff[j]--;
158	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10, M = 1e4 + 10;||| 4 int n, m, first[N], s[M][N], coef[M], ord[M], res[M];||| 5 void solve() {||| 6 cin >> n >> m;||| 7 for (int i = 0; i < n; i++) cin >> first[i];||| 8 for (int i = 0; i < n; i++) {||| 9 string b;||| 10 cin >> b;||| 11 for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0';||| 12 }||| 13 int ans = -1;||| 14 for (int i = 0; i < 1 << n; i++) {||| 15 int sum = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (i >> j & 1)||| 18 sum += first[j];||| 19 else||| 20 sum -= first[j];||| 21 }||| 22 for (int j = 1; j <= m; j++) {||| 23 coef[j] = 0;||| 24 for (int k = 0; k < n; k++) {||| 25 if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1;||| 26 }||| 27 ord[j] = j;||| 28 }||| 29 sort(ord + 1, ord + m + 1,||| 30 [&](int first, int second) { return coef[first] < coef[second]; });||| 31 for (int j = 1; j <= m; j++) sum += j * coef[ord[j]];||| 32 if (ans < sum) {||| 33 for (int j = 1; j <= m; j++) res[ord[j]] = j;||| 34 ans = sum;||| 35 }||| 36 }||| 37 for (int i = 1; i <= m; i++) cout << res[i] << "" "";||| 38 cout << endl;||| 39 return;||| 40 }||| 41 int main() {||| 42 int t;||| 43 for (cin >> t; t--; solve())||| 44 ;||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10, M = 1e4 + 10;||| 4 int n, m, first[N], s[M][N], coef[M], ord[M], res[M];||| 5 void solve() {||| 6 cin >> n >> m;||| 7 for (int i = 0; i < n; i++) cin >> first[i];||| 8 for (int i = 0; i < n; i++) {||| 9 string b;||| 10 cin >> b;||| 11 for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0';||| 12 }||| 13 int ans = 0;||| 14 for (int i = 0; i < 1 << n; i++) {||| 15 int sum = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (i >> j & 1)||| 18 sum += first[j];||| 19 else||| 20 sum -= first[j];||| 21 }||| 22 for (int j = 1; j <= m; j++) {||| 23 coef[j] = 0;||| 24 for (int k = 0; k < n; k++) {||| 25 if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1;||| 26 }||| 27 ord[j] = j;||| 28 }||| 29 sort(ord + 1, ord + m + 1,||| 30 [&](int first, int second) { return coef[first] < coef[second]; });||| 31 for (int j = 1; j <= m; j++) sum += j * coef[ord[j]];||| 32 if (ans < sum) {||| 33 for (int j = 1; j <= m; j++) res[ord[j]] = j;||| 34 ans = sum;||| 35 }||| 36 }||| 37 for (int i = 1; i <= m; i++) cout << res[i] << "" "";||| 38 cout << endl;||| 39 return;||| 40 }||| 41 int main() {||| 42 int t;||| 43 for (cin >> t; t--; solve())||| 44 ;||| 45 return 0;||| 46 }||| "	13 int ans = -1;
158	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n, m;||| 11 cin >> n >> m;||| 12 vector<long long> a(n);||| 13 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i];||| 14 vector<string> s(n);||| 15 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i];||| 16 long long maxi = 0;||| 17 vector<long long> res(m);||| 18 for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) {||| 19 vector<pair<long long, long long>> c(m);||| 20 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 21 long long p = 1;||| 22 if (i & (1ll << j)) p = -1;||| 23 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) {||| 24 if (s[j][ii] == '1') c[ii].first += p;||| 25 }||| 26 }||| 27 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii;||| 28 sort(c.begin(), c.end());||| 29 long long val = 0;||| 30 for (int ii = 0, ggdem = m; ii < ggdem; ++ii)||| 31 val += (ii + 1) * c[ii].first;||| 32 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 33 if (i & (1ll << j))||| 34 val += a[j];||| 35 else||| 36 val -= a[j];||| 37 }||| 38 if (val >= maxi) {||| 39 maxi = val;||| 40 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii;||| 41 }||| 42 }||| 43 for (auto i : res) cout << i + 1 << "" "";||| 44 cout << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n, m;||| 11 cin >> n >> m;||| 12 vector<long long> a(n);||| 13 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i];||| 14 vector<string> s(n);||| 15 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i];||| 16 long long maxi = 0;||| 17 vector<long long> res(m);||| 18 for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) {||| 19 vector<pair<long long, long long>> c(m);||| 20 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 21 long long p = 1;||| 22 if (i & (1ll << j)) p = -1;||| 23 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) {||| 24 if (s[j][ii] == '1') c[ii].first += p;||| 25 }||| 26 }||| 27 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii;||| 28 sort(c.begin(), c.end());||| 29 long long val = 0;||| 30 for (int ii = 0, ggdem = m; ii < ggdem; ++ii)||| 31 val += (ii + 1) * c[ii].first;||| 32 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 33 if (i & (1ll << j))||| 34 val += a[j];||| 35 else||| 36 val -= a[j];||| 37 }||| 38 if (val > maxi) {||| 39 maxi = val;||| 40 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii;||| 41 }||| 42 }||| 43 for (auto i : res) cout << i + 1 << "" "";||| 44 cout << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	38 if (val >= maxi) {
158	125	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 static int xx[10], ans[10000];||| 8 static char s[10][10000 + 1];||| 9 int n, m, ansv;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) scanf(""%d"", &xx[i]);||| 12 for (int i = 0; i < n; i++) scanf(""%s"", s[i]);||| 13 ansv = -1;||| 14 memset(ans, 0, m * sizeof *ans);||| 15 for (int b = 0; b < 1 << n; b++) {||| 16 static int kk[10000];||| 17 int sum = 0, cnt;||| 18 vector<int> ii(m);||| 19 for (int i = 0; i < n; i++)||| 20 if (b >> i & 1)||| 21 sum += xx[i];||| 22 else||| 23 sum -= xx[i];||| 24 for (int h = 0; h < m; h++) {||| 25 int k = 0;||| 26 for (int i = 0; i < n; i++)||| 27 if (s[i][h] == '1') {||| 28 if (b >> i & 1)||| 29 k--;||| 30 else||| 31 k++;||| 32 }||| 33 kk[h] = k, ii[h] = h;||| 34 }||| 35 sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; });||| 36 cnt = 1;||| 37 for (int h : ii) sum += kk[h] * cnt++;||| 38 if (sum > ansv) {||| 39 ansv = sum;||| 40 cnt = 1;||| 41 for (int h : ii) {||| 42 ans[h] = cnt++;||| 43 }||| 44 }||| 45 }||| 46 for (int h = 0; h < m; h++) printf(""%d "", ans[h]);||| 47 printf(""\n"");||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 static int xx[10], ans[10000];||| 8 static char s[10][10000 + 1];||| 9 int n, m, ansv;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) scanf(""%d"", &xx[i]);||| 12 for (int i = 0; i < n; i++) scanf(""%s"", s[i]);||| 13 ansv = 0;||| 14 memset(ans, 0, m * sizeof *ans);||| 15 for (int b = 0; b < 1 << n; b++) {||| 16 static int kk[10000];||| 17 int sum = 0, cnt;||| 18 vector<int> ii(m);||| 19 for (int i = 0; i < n; i++)||| 20 if (b >> i & 1)||| 21 sum += xx[i];||| 22 else||| 23 sum -= xx[i];||| 24 for (int h = 0; h < m; h++) {||| 25 int k = 0;||| 26 for (int i = 0; i < n; i++)||| 27 if (s[i][h] == '1') {||| 28 if (b >> i & 1)||| 29 k--;||| 30 else||| 31 k++;||| 32 }||| 33 kk[h] = k, ii[h] = h;||| 34 }||| 35 sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; });||| 36 cnt = 1;||| 37 for (int h : ii) sum += kk[h] * cnt++;||| 38 if (sum > ansv) {||| 39 ansv = sum;||| 40 cnt = 1;||| 41 for (int h : ii) {||| 42 ans[h] = cnt++;||| 43 }||| 44 }||| 45 }||| 46 for (int h = 0; h < m; h++) printf(""%d "", ans[h]);||| 47 printf(""\n"");||| 48 }||| 49 return 0;||| 50 }||| "	13 ansv = -1;
158	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long int MOD = 998244353;||| 4 constexpr double EPS = 1e-8;||| 5 long long int N, M, K, T, H, W, L, R;||| 6 void Solve() {||| 7 cin >> N >> M;||| 8 vector<int> v(N);||| 9 for (int i = 0; i < N; i++) {||| 10 cin >> v[i];||| 11 }||| 12 vector<string> s(N);||| 13 for (auto& i : s) cin >> i;||| 14 int score = -1;||| 15 vector<int> ans(M);||| 16 for (int i = 0; i < 1 << N; i++) {||| 17 vector<int> sum(N);||| 18 vector<int> point(M);||| 19 int csum = 0;||| 20 vector<pair<int, int>> vp;||| 21 for (int j = 0; j < M; j++) {||| 22 int n = 0;||| 23 for (int k = 0; k < N; k++) {||| 24 if (s[k][j] == '1') {||| 25 if (i >> k & 1) {||| 26 n++;||| 27 } else {||| 28 n--;||| 29 }||| 30 }||| 31 }||| 32 vp.push_back({n, j});||| 33 }||| 34 sort(vp.begin(), vp.end());||| 35 for (int j = 0; j < vp.size(); j++) {||| 36 point[vp[j].second] = j + 1;||| 37 }||| 38 for (int j = 0; j < N; j++) {||| 39 for (int k = 0; k < M; k++) {||| 40 if (s[j][k] == '1') {||| 41 sum[j] += point[k];||| 42 }||| 43 }||| 44 }||| 45 for (int j = 0; j < N; j++) {||| 46 csum += abs(v[j] - sum[j]);||| 47 }||| 48 if (csum > score) {||| 49 score = csum;||| 50 ans = point;||| 51 }||| 52 }||| 53 for (auto i : ans) cout << i << "" "";||| 54 cout << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(0);||| 59 T = 1;||| 60 cin >> T;||| 61 while (T--) {||| 62 Solve();||| 63 }||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long int MOD = 998244353;||| 4 constexpr double EPS = 1e-8;||| 5 long long int N, M, K, T, H, W, L, R;||| 6 void Solve() {||| 7 cin >> N >> M;||| 8 vector<int> v(N);||| 9 for (int i = 0; i < N; i++) {||| 10 cin >> v[i];||| 11 }||| 12 vector<string> s(N);||| 13 for (auto& i : s) cin >> i;||| 14 int score = 0;||| 15 vector<int> ans(M);||| 16 for (int i = 0; i < 1 << N; i++) {||| 17 vector<int> sum(N);||| 18 vector<int> point(M);||| 19 int csum = 0;||| 20 vector<pair<int, int>> vp;||| 21 for (int j = 0; j < M; j++) {||| 22 int n = 0;||| 23 for (int k = 0; k < N; k++) {||| 24 if (s[k][j] == '1') {||| 25 if (i >> k & 1) {||| 26 n++;||| 27 } else {||| 28 n--;||| 29 }||| 30 }||| 31 }||| 32 vp.push_back({n, j});||| 33 }||| 34 sort(vp.begin(), vp.end());||| 35 for (int j = 0; j < vp.size(); j++) {||| 36 point[vp[j].second] = j + 1;||| 37 }||| 38 for (int j = 0; j < N; j++) {||| 39 for (int k = 0; k < M; k++) {||| 40 if (s[j][k] == '1') {||| 41 sum[j] += point[k];||| 42 }||| 43 }||| 44 }||| 45 for (int j = 0; j < N; j++) {||| 46 csum += abs(v[j] - sum[j]);||| 47 }||| 48 if (csum > score) {||| 49 score = csum;||| 50 ans = point;||| 51 }||| 52 }||| 53 for (auto i : ans) cout << i << "" "";||| 54 cout << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(0);||| 59 T = 1;||| 60 cin >> T;||| 61 while (T--) {||| 62 Solve();||| 63 }||| 64 }||| "	14 int score = -1;
158	32	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m;||| 10 cin >> n >> m;||| 11 vector<long long> x(n);||| 12 for (long long i = 0; i < n; ++i) {||| 13 cin >> x[i];||| 14 }||| 15 vector<string> s(n);||| 16 for (long long i = 0; i < n; ++i) {||| 17 cin >> s[i];||| 18 }||| 19 vector<vector<long long>> gr(1 << n);||| 20 for (long long j = 0; j < m; ++j) {||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 sum = (sum << 1) + s[i][j] - '0';||| 24 }||| 25 gr[sum].push_back(j);||| 26 }||| 27 vector<vector<long long>> srt;||| 28 for (long long i = 0; i < (1 << n); ++i) {||| 29 if ((long long)gr[i].size()) {||| 30 srt.push_back(gr[i]);||| 31 }||| 32 }||| 33 vector<long long> col(m);||| 34 for (long long i = 0; i < (long long)srt.size(); ++i) {||| 35 for (auto& j : srt[i]) {||| 36 col[j] = i;||| 37 }||| 38 }||| 39 vector<vector<long long>> uses(n);||| 40 for (long long i = 0; i < n; ++i) {||| 41 for (long long j = 0; j < m; ++j) {||| 42 if (s[i][j] == '1') {||| 43 uses[i].push_back(col[j]);||| 44 }||| 45 }||| 46 sort(uses[i].begin(), uses[i].end());||| 47 uses[i].erase(unique(uses[i].begin(), uses[i].end()), uses[i].end());||| 48 }||| 49 long long ans = 0;||| 50 vector<long long> vans;||| 51 for (long long i = 0; i < (1 << n); ++i) {||| 52 long long sum = 0;||| 53 vector<long long> gcnt((long long)srt.size());||| 54 for (long long j = 0; j < n; ++j) {||| 55 if (i & (1 << j)) {||| 56 sum += x[j];||| 57 for (auto& x : uses[j]) {||| 58 --gcnt[x];||| 59 }||| 60 } else {||| 61 sum -= x[j];||| 62 for (auto& x : uses[j]) {||| 63 ++gcnt[x];||| 64 }||| 65 }||| 66 }||| 67 vector<vector<long long>> gsrt;||| 68 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 69 gsrt.push_back({gcnt[h], (long long)srt[h].size(), h});||| 70 }||| 71 sort(gsrt.begin(), gsrt.end());||| 72 long long l = 1;||| 73 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 74 long long r = l + (long long)gsrt[h][1] - 1;||| 75 sum += (r + l) * (r - l + 1) / 2 * gsrt[h][0];||| 76 l = r + 1;||| 77 }||| 78 if (sum >= ans) {||| 79 ans = sum;||| 80 vans.clear();||| 81 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 82 vans.push_back(gsrt[h][2]);||| 83 }||| 84 }||| 85 }||| 86 vector<long long> out(m);||| 87 long long l = 1;||| 88 for (auto& i : vans) {||| 89 for (auto& j : srt[i]) {||| 90 out[j] = l++;||| 91 }||| 92 }||| 93 for (long long i = 0; i < m; ++i) {||| 94 cout << out[i] << ' ';||| 95 }||| 96 cout << '\n';||| 97 }||| 98 return 0;||| 99 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m;||| 10 cin >> n >> m;||| 11 vector<long long> x(n);||| 12 for (long long i = 0; i < n; ++i) {||| 13 cin >> x[i];||| 14 }||| 15 vector<string> s(n);||| 16 for (long long i = 0; i < n; ++i) {||| 17 cin >> s[i];||| 18 }||| 19 vector<vector<long long>> gr(1 << n);||| 20 for (long long j = 0; j < m; ++j) {||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 sum = (sum << 1) + s[i][j] - '0';||| 24 }||| 25 gr[sum].push_back(j);||| 26 }||| 27 vector<vector<long long>> srt;||| 28 for (long long i = 0; i < (1 << n); ++i) {||| 29 if ((long long)gr[i].size()) {||| 30 srt.push_back(gr[i]);||| 31 }||| 32 }||| 33 vector<long long> col(m);||| 34 for (long long i = 0; i < (long long)srt.size(); ++i) {||| 35 for (auto& j : srt[i]) {||| 36 col[j] = i;||| 37 }||| 38 }||| 39 vector<vector<long long>> uses(n);||| 40 for (long long i = 0; i < n; ++i) {||| 41 for (long long j = 0; j < m; ++j) {||| 42 if (s[i][j] == '1') {||| 43 uses[i].push_back(col[j]);||| 44 }||| 45 }||| 46 sort(uses[i].begin(), uses[i].end());||| 47 uses[i].erase(unique(uses[i].begin(), uses[i].end()), uses[i].end());||| 48 }||| 49 long long ans = 0;||| 50 vector<long long> vans;||| 51 for (long long i = 0; i < (1 << n); ++i) {||| 52 long long sum = 0;||| 53 vector<long long> gcnt((long long)srt.size());||| 54 for (long long j = 0; j < n; ++j) {||| 55 if (i & (1 << j)) {||| 56 sum += x[j];||| 57 for (auto& x : uses[j]) {||| 58 --gcnt[x];||| 59 }||| 60 } else {||| 61 sum -= x[j];||| 62 for (auto& x : uses[j]) {||| 63 ++gcnt[x];||| 64 }||| 65 }||| 66 }||| 67 vector<vector<long long>> gsrt;||| 68 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 69 gsrt.push_back({gcnt[h], (long long)srt[h].size(), h});||| 70 }||| 71 sort(gsrt.begin(), gsrt.end());||| 72 long long l = 1;||| 73 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 74 long long r = l + (long long)gsrt[h][1] - 1;||| 75 sum += (r + l) * (r - l + 1) / 2 * gsrt[h][0];||| 76 l = r + 1;||| 77 }||| 78 if (sum > ans) {||| 79 ans = sum;||| 80 vans.clear();||| 81 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 82 vans.push_back(gsrt[h][2]);||| 83 }||| 84 }||| 85 }||| 86 vector<long long> out(m);||| 87 long long l = 1;||| 88 for (auto& i : vans) {||| 89 for (auto& j : srt[i]) {||| 90 out[j] = l++;||| 91 }||| 92 }||| 93 for (long long i = 0; i < m; ++i) {||| 94 cout << out[i] << ' ';||| 95 }||| 96 cout << '\n';||| 97 }||| 98 return 0;||| 99 }||| 	78 if (sum >= ans) {
158	48	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 vector<int> x(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> x[i];||| 14 }||| 15 vector<vector<int>> a(n, vector<int>(m));||| 16 for (int i = 0; i < n; i++) {||| 17 string s;||| 18 cin >> s;||| 19 for (int j = 0; j < m; j++) {||| 20 a[i][j] = (s[j] == '1');||| 21 }||| 22 }||| 23 const long long inf = (long long)2e18L;||| 24 long long res = -inf, msk = 0;||| 25 for (int i = 0; i < (1 << n); i++) {||| 26 long long z = 0;||| 27 for (int j = 0; j < n; j++) {||| 28 if ((1 << j) & i) {||| 29 z -= x[j];||| 30 } else {||| 31 z += x[j];||| 32 }||| 33 }||| 34 long long ans = z;||| 35 vector<int> cnt(m, 0);||| 36 for (int j = 0; j < n; j++) {||| 37 if ((1 << j) & i) {||| 38 for (int k = 0; k < m; k++) {||| 39 if (a[j][k]) {||| 40 cnt[k] += 1;||| 41 }||| 42 }||| 43 } else {||| 44 for (int k = 0; k < m; k++) {||| 45 if (a[j][k]) {||| 46 cnt[k] -= 1;||| 47 }||| 48 }||| 49 }||| 50 }||| 51 sort(cnt.begin(), cnt.end());||| 52 for (int j = 0; j < m; j++) {||| 53 ans += cnt[j] * 1LL * (j + 1);||| 54 }||| 55 if (ans > res) {||| 56 res = ans;||| 57 msk = i;||| 58 }||| 59 }||| 60 {||| 61 vector<pair<int, int>> cnt(m);||| 62 for (int i = 0; i < m; i++) {||| 63 cnt[i].first = 0;||| 64 cnt[i].second = i;||| 65 }||| 66 for (int j = 0; j < n; j++) {||| 67 if ((1 << j) & msk) {||| 68 for (int k = 0; k < m; k++) {||| 69 if (a[j][k]) {||| 70 cnt[k].first += 1;||| 71 }||| 72 }||| 73 } else {||| 74 for (int k = 0; k < m; k++) {||| 75 if (a[j][k]) {||| 76 cnt[k].first -= 1;||| 77 }||| 78 }||| 79 }||| 80 }||| 81 sort(cnt.begin(), cnt.end());||| 82 vector<int> p(m);||| 83 for (int j = 0; j < m; j++) {||| 84 p[cnt[j].second] = j + 1;||| 85 }||| 86 for (const auto& xx : p) {||| 87 cout << xx << "" "";||| 88 }||| 89 cout << '\n';||| 90 }||| 91 }||| 92 return 0;||| 93 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 vector<int> x(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> x[i];||| 14 }||| 15 vector<vector<int>> a(n, vector<int>(m));||| 16 for (int i = 0; i < n; i++) {||| 17 string s;||| 18 cin >> s;||| 19 for (int j = 0; j < m; j++) {||| 20 a[i][j] = (s[j] == '1');||| 21 }||| 22 }||| 23 const long long inf = (long long)2e18L;||| 24 long long res = -inf, msk = 0;||| 25 for (int i = 0; i < (1 << n); i++) {||| 26 long long z = 0;||| 27 for (int j = 0; j < n; j++) {||| 28 if ((1 << j) & i) {||| 29 z -= x[j];||| 30 } else {||| 31 z += x[j];||| 32 }||| 33 }||| 34 long long ans = z;||| 35 vector<int> cnt(m, 0);||| 36 for (int j = 0; j < n; j++) {||| 37 if ((1 << j) & i) {||| 38 for (int k = 0; k < m; k++) {||| 39 if (a[j][k]) {||| 40 cnt[k] += 1;||| 41 }||| 42 }||| 43 } else {||| 44 for (int k = 0; k < m; k++) {||| 45 if (a[j][k]) {||| 46 cnt[k] -= 1;||| 47 }||| 48 }||| 49 }||| 50 }||| 51 sort(cnt.begin(), cnt.end());||| 52 for (int j = 0; j < m; j++) {||| 53 ans += cnt[j] * 1LL * (j + 1);||| 54 }||| 55 if (ans > res) {||| 56 ans = res;||| 57 msk = i;||| 58 }||| 59 }||| 60 {||| 61 vector<pair<int, int>> cnt(m);||| 62 for (int i = 0; i < m; i++) {||| 63 cnt[i].first = 0;||| 64 cnt[i].second = i;||| 65 }||| 66 for (int j = 0; j < n; j++) {||| 67 if ((1 << j) & msk) {||| 68 for (int k = 0; k < m; k++) {||| 69 if (a[j][k]) {||| 70 cnt[k].first += 1;||| 71 }||| 72 }||| 73 } else {||| 74 for (int k = 0; k < m; k++) {||| 75 if (a[j][k]) {||| 76 cnt[k].first -= 1;||| 77 }||| 78 }||| 79 }||| 80 }||| 81 sort(cnt.begin(), cnt.end());||| 82 vector<int> p(m);||| 83 for (int j = 0; j < m; j++) {||| 84 p[cnt[j].second] = j + 1;||| 85 }||| 86 for (const auto& xx : p) {||| 87 cout << xx << "" "";||| 88 }||| 89 cout << '\n';||| 90 }||| 91 }||| 92 return 0;||| 93 }||| "	56 res = ans;
158	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char s[10][10001];||| 4 int X[10];||| 5 pair<int, vector<int>> Calculate(int n, int m, int mask) {||| 6 vector<pair<int, int>> v(m);||| 7 for (int k = 0; k < m; ++k) {||| 8 int c = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (s[i][k] == '0') {||| 11 continue;||| 12 }||| 13 c += ((mask & (1 << i)) != 0) ? 1 : -1;||| 14 }||| 15 v[k] = {c, k};||| 16 }||| 17 int ans = 0;||| 18 for (int i = 0; i < n; ++i) {||| 19 int c = ((mask & (1 << i)) != 0) ? -1 : 1;||| 20 ans += c * X[i];||| 21 }||| 22 vector<int> p(m);||| 23 sort(v.begin(), v.end());||| 24 for (int k = 0; k < m; ++k) {||| 25 ans += v[k].first * (k + 1);||| 26 p[v[k].second] = k + 1;||| 27 }||| 28 return {ans, p};||| 29 }||| 30 void Solve() {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d"", &X[i]);||| 35 }||| 36 for (int i = 0; i < n; ++i) {||| 37 scanf(""%s"", s[i]);||| 38 }||| 39 pair<int, vector<int>> ans = {INT_MIN, vector<int>()};||| 40 for (int mask = 0; mask < (1 << n); ++mask) {||| 41 ans = max(ans, Calculate(n, m, mask));||| 42 }||| 43 auto [_, p] = ans;||| 44 for (int pi : p) {||| 45 printf(""%d "", pi);||| 46 }||| 47 printf(""\n"");||| 48 }||| 49 int main() {||| 50 int t;||| 51 scanf(""%d"", &t);||| 52 while (t--) {||| 53 Solve();||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char s[10][10001];||| 4 int X[10];||| 5 pair<int, vector<int>> Calculate(int n, int m, int mask) {||| 6 vector<pair<int, int>> v(m);||| 7 for (int k = 0; k < m; ++k) {||| 8 int c = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (s[i][k] == '0') {||| 11 continue;||| 12 }||| 13 c += ((mask & (1 << i)) != 0) ? 1 : -1;||| 14 }||| 15 v[k] = {c, k};||| 16 }||| 17 int ans = 0;||| 18 for (int i = 0; i < n; ++i) {||| 19 int c = ((mask & (1 << i)) != 0) ? -1 : 1;||| 20 ans += c * X[i];||| 21 }||| 22 vector<int> p(m);||| 23 sort(v.begin(), v.end());||| 24 for (int k = 0; k < m; ++k) {||| 25 ans += v[k].first * (k + 1);||| 26 p[v[k].second] = k + 1;||| 27 }||| 28 return {ans, p};||| 29 }||| 30 void Solve() {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 1; i <= n; ++i) {||| 34 scanf(""%d"", &X[i]);||| 35 }||| 36 for (int i = 0; i < n; ++i) {||| 37 scanf(""%s"", s[i]);||| 38 }||| 39 pair<int, vector<int>> ans = {INT_MIN, vector<int>()};||| 40 for (int mask = 0; mask < (1 << n); ++mask) {||| 41 ans = max(ans, Calculate(n, m, mask));||| 42 }||| 43 auto [_, p] = ans;||| 44 for (int pi : p) {||| 45 printf(""%d "", pi);||| 46 }||| 47 printf(""\n"");||| 48 }||| 49 int main() {||| 50 int t;||| 51 scanf(""%d"", &t);||| 52 while (t--) {||| 53 Solve();||| 54 }||| 55 return 0;||| 56 }||| "	33 for (int i = 0; i < n; ++i) {
158	57	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 const int M = 1e4 + 5;||| 5 int t, n, m, a[N], sum, f, ans[M], res;||| 6 char s[N][M];||| 7 pair<int, int> c[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n >> m;||| 13 res = -1;||| 14 for (int i = 1; i <= n; i++) cin >> a[i];||| 15 for (int i = 1; i <= n; i++) cin >> (s[i] + 1);||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 sum = 0;||| 18 for (int j = 1; j <= m; j++) c[j] = {0, j};||| 19 for (int j = 1; j <= n; j++) {||| 20 if ((i >> (j - 1)) & 1)||| 21 f = 1;||| 22 else||| 23 f = -1;||| 24 sum += f * a[j];||| 25 for (int k = 1; k <= m; k++)||| 26 if (s[j][k] == '1') c[k].first -= f;||| 27 }||| 28 sort(c + 1, c + m + 1);||| 29 for (int j = 1; j <= m; j++) sum += j * c[j].first;||| 30 if (sum > res) {||| 31 res = sum;||| 32 for (int j = 1; j <= m; j++) ans[c[j].second] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 const int M = 1e4 + 5;||| 5 int t, n, m, a[N], sum, f, ans[N], res;||| 6 char s[N][M];||| 7 pair<int, int> c[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n >> m;||| 13 res = -1;||| 14 for (int i = 1; i <= n; i++) cin >> a[i];||| 15 for (int i = 1; i <= n; i++) cin >> (s[i] + 1);||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 sum = 0;||| 18 for (int j = 1; j <= m; j++) c[j] = {0, j};||| 19 for (int j = 1; j <= n; j++) {||| 20 if ((i >> (j - 1)) & 1)||| 21 f = 1;||| 22 else||| 23 f = -1;||| 24 sum += f * a[j];||| 25 for (int k = 1; k <= m; k++)||| 26 if (s[j][k] == '1') c[k].first -= f;||| 27 }||| 28 sort(c + 1, c + m + 1);||| 29 for (int j = 1; j <= m; j++) sum += j * c[j].first;||| 30 if (sum > res) {||| 31 res = sum;||| 32 for (int j = 1; j <= m; j++) ans[c[j].second] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| 	5 int t, n, m, a[N], sum, f, ans[M], res;
158	49	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 12;||| 4 const int M = 10005;||| 5 const int lim = 200000;||| 6 const int inf = 1e9;||| 7 int T;||| 8 int n, m;||| 9 int x[N];||| 10 char s[N][M];||| 11 int cnt[M];||| 12 int b[M];||| 13 int ans[M];||| 14 bool cmp(int i, int j) { return cnt[i] < cnt[j]; }||| 15 int main() {||| 16 scanf(""%d"", &T);||| 17 while (T--) {||| 18 scanf(""%d%d"", &n, &m);||| 19 for (int i = 0; i <= n - 1; ++i) scanf(""%d"", &x[i]);||| 20 for (int i = 0; i <= n - 1; ++i) scanf(""%s"", s[i]);||| 21 int ret = -inf;||| 22 for (int mask = 0; mask <= (1 << n) - 1; ++mask) {||| 23 for (int j = 0; j <= m - 1; ++j) cnt[j] = 0;||| 24 for (int i = 0; i <= n - 1; ++i) {||| 25 for (int j = 0; j <= m - 1; ++j) {||| 26 if (s[i][j] == '1') {||| 27 if (mask & (1 << i))||| 28 ++cnt[j];||| 29 else||| 30 --cnt[j];||| 31 }||| 32 }||| 33 }||| 34 for (int j = 0; j <= m - 1; ++j) b[j] = j;||| 35 sort(b, b + m, cmp);||| 36 int tmp = 0;||| 37 for (int i = 0; i <= n - 1; ++i) {||| 38 int r = 0;||| 39 for (int j = 0; j <= m - 1; ++j) {||| 40 if (s[i][b[j]] == '1') {||| 41 r += j + 1;||| 42 }||| 43 }||| 44 if (mask & (1 << i))||| 45 tmp += r - x[i];||| 46 else||| 47 tmp -= r - x[i];||| 48 }||| 49 if (tmp > ret) {||| 50 ret = tmp;||| 51 for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1;||| 52 }||| 53 }||| 54 for (int j = 0; j <= m - 1; ++j) printf(""%d "", ans[j]);||| 55 printf(""\n"");||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 12;||| 4 const int M = 10005;||| 5 const int lim = 200000;||| 6 const int inf = 1e9;||| 7 int T;||| 8 int n, m;||| 9 int x[N];||| 10 char s[N][M];||| 11 int cnt[M];||| 12 int b[M];||| 13 int ans[M];||| 14 bool cmp(int i, int j) { return cnt[i] < cnt[j]; }||| 15 int main() {||| 16 scanf(""%d"", &T);||| 17 while (T--) {||| 18 scanf(""%d%d"", &n, &m);||| 19 for (int i = 0; i <= n - 1; ++i) scanf(""%d"", &x[i]);||| 20 for (int i = 0; i <= n - 1; ++i) scanf(""%s"", s[i]);||| 21 int ret = 0;||| 22 for (int mask = 0; mask <= (1 << n) - 1; ++mask) {||| 23 for (int j = 0; j <= m - 1; ++j) cnt[j] = 0;||| 24 for (int i = 0; i <= n - 1; ++i) {||| 25 for (int j = 0; j <= m - 1; ++j) {||| 26 if (s[i][j] == '1') {||| 27 if (mask & (1 << i))||| 28 ++cnt[j];||| 29 else||| 30 --cnt[j];||| 31 }||| 32 }||| 33 }||| 34 for (int j = 0; j <= m - 1; ++j) b[j] = j;||| 35 sort(b, b + m, cmp);||| 36 int tmp = 0;||| 37 for (int i = 0; i <= n - 1; ++i) {||| 38 int r = 0;||| 39 for (int j = 0; j <= m - 1; ++j) {||| 40 if (s[i][b[j]] == '1') {||| 41 r += j + 1;||| 42 }||| 43 }||| 44 if (mask & (1 << i))||| 45 tmp += r - x[i];||| 46 else||| 47 tmp -= r - x[i];||| 48 }||| 49 if (tmp > ret) {||| 50 ret = tmp;||| 51 for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1;||| 52 }||| 53 }||| 54 for (int j = 0; j <= m - 1; ++j) printf(""%d "", ans[j]);||| 55 printf(""\n"");||| 56 }||| 57 return 0;||| 58 }||| "	21 int ret = -inf;
158	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, n, m;||| 4 int x[15];||| 5 char s[15][10005];||| 6 int v[10005], cnt[25], tmp[25];||| 7 int P[10005];||| 8 int ans;||| 9 void dfs(int p, int sum) {||| 10 if (p == n + 1) {||| 11 int cur = m, res = sum;||| 12 for (int i = 20; i >= 0; i--) {||| 13 res += (i - 10) * (cur * 2 - cnt[i] + 1) * cnt[i] / 2;||| 14 cur -= cnt[i];||| 15 }||| 16 tmp[0] = cnt[0];||| 17 for (int i = 1; i <= 20; i++) tmp[i] = tmp[i - 1] + cnt[i];||| 18 if (ans <= res) {||| 19 ans = res;||| 20 for (int i = 1; i <= m; i++) {||| 21 P[i] = tmp[v[i] + 10]--;||| 22 }||| 23 }||| 24 return;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 if (s[p][i] == '1') {||| 28 cnt[v[i] + 10]--;||| 29 v[i]++;||| 30 cnt[v[i] + 10]++;||| 31 }||| 32 }||| 33 dfs(p + 1, sum - x[p]);||| 34 for (int i = 1; i <= m; i++) {||| 35 if (s[p][i] == '1') {||| 36 cnt[v[i] + 10]--;||| 37 v[i] -= 2;||| 38 cnt[v[i] + 10]++;||| 39 }||| 40 }||| 41 dfs(p + 1, sum + x[p]);||| 42 for (int i = 1; i <= m; i++) {||| 43 if (s[p][i] == '1') {||| 44 cnt[v[i] + 10]--;||| 45 v[i]++;||| 46 cnt[v[i] + 10]++;||| 47 }||| 48 }||| 49 }||| 50 void solve() {||| 51 scanf(""%d%d"", &n, &m);||| 52 for (int i = 1; i <= n; i++) scanf(""%d"", &x[i]);||| 53 for (int i = 1; i <= n; i++) {||| 54 scanf(""%s"", &s[i][1]);||| 55 }||| 56 for (int i = 1; i <= m; i++) v[i] = 0;||| 57 for (int i = 0; i <= 20; i++) cnt[i] = 0;||| 58 cnt[10] = m;||| 59 ans = 0;||| 60 dfs(1, 0);||| 61 for (int i = 1; i <= m; i++) printf(""%d "", P[i]);||| 62 printf(""\n"");||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &T);||| 66 while (T--) solve();||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, n, m;||| 4 int x[15];||| 5 char s[15][10005];||| 6 int v[10005], cnt[25], tmp[25];||| 7 int P[10005];||| 8 int ans;||| 9 void dfs(int p, int sum) {||| 10 if (p == n + 1) {||| 11 int cur = m, res = sum;||| 12 for (int i = 20; i >= 0; i--) {||| 13 res += (i - 10) * (cur * 2 - cnt[i] + 1) * cnt[i] / 2;||| 14 cur -= cnt[i];||| 15 }||| 16 tmp[0] = cnt[0];||| 17 for (int i = 1; i <= 20; i++) tmp[i] = tmp[i - 1] + cnt[i];||| 18 if (ans < res) {||| 19 ans = res;||| 20 for (int i = 1; i <= m; i++) {||| 21 P[i] = tmp[v[i] + 10]--;||| 22 }||| 23 }||| 24 return;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 if (s[p][i] == '1') {||| 28 cnt[v[i] + 10]--;||| 29 v[i]++;||| 30 cnt[v[i] + 10]++;||| 31 }||| 32 }||| 33 dfs(p + 1, sum - x[p]);||| 34 for (int i = 1; i <= m; i++) {||| 35 if (s[p][i] == '1') {||| 36 cnt[v[i] + 10]--;||| 37 v[i] -= 2;||| 38 cnt[v[i] + 10]++;||| 39 }||| 40 }||| 41 dfs(p + 1, sum + x[p]);||| 42 for (int i = 1; i <= m; i++) {||| 43 if (s[p][i] == '1') {||| 44 cnt[v[i] + 10]--;||| 45 v[i]++;||| 46 cnt[v[i] + 10]++;||| 47 }||| 48 }||| 49 }||| 50 void solve() {||| 51 scanf(""%d%d"", &n, &m);||| 52 for (int i = 1; i <= n; i++) scanf(""%d"", &x[i]);||| 53 for (int i = 1; i <= n; i++) {||| 54 scanf(""%s"", &s[i][1]);||| 55 }||| 56 for (int i = 1; i <= m; i++) v[i] = 0;||| 57 for (int i = 0; i <= 20; i++) cnt[i] = 0;||| 58 cnt[10] = m;||| 59 ans = 0;||| 60 dfs(1, 0);||| 61 for (int i = 1; i <= m; i++) printf(""%d "", P[i]);||| 62 printf(""\n"");||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &T);||| 66 while (T--) solve();||| 67 return 0;||| 68 }||| "	18 if (ans <= res) {
158	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c > '9' || c < '0') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') {||| 11 ans = (ans << 1) + (ans << 3) + c - '0';||| 12 c = getchar();||| 13 }||| 14 return ans * f;||| 15 }||| 16 inline void write(int x) {||| 17 if (x < 0) putchar('-'), x = -x;||| 18 if (x / 10) write(x / 10);||| 19 putchar((char)(x % 10) + '0');||| 20 }||| 21 template <typename T>||| 22 inline T Abs(T a) {||| 23 return a > 0 ? a : -a;||| 24 };||| 25 template <typename T, typename TT>||| 26 inline T Min(T a, TT b) {||| 27 return a < b ? a : b;||| 28 }||| 29 template <typename T, typename TT>||| 30 inline T Max(T a, TT b) {||| 31 return a < b ? b : a;||| 32 }||| 33 const int N = 1e4 + 5;||| 34 int t, n, m, a[N], c[N], ans;||| 35 char s[15][N];||| 36 pair<int, int> b[N];||| 37 signed main() {||| 38 t = read();||| 39 while (t--) {||| 40 n = read();||| 41 m = read();||| 42 for (int i = 1; i <= n; ++i) a[i] = read();||| 43 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 44 ans = -1e9;||| 45 for (int i = 0; i < (1 << n); ++i) {||| 46 for (int j = 1; j <= m; ++j) {||| 47 b[j] = make_pair(0, j);||| 48 for (int k = 1; k <= n; ++k)||| 49 if (s[k][j] == '1') {||| 50 if ((i >> (k - 1)) & 1)||| 51 b[j].first++;||| 52 else||| 53 b[j].first--;||| 54 }||| 55 }||| 56 sort(b + 1, b + 1 + m);||| 57 int tmp = 0;||| 58 for (int j = 1; j <= n; ++j)||| 59 if ((i >> (j - 1)) & 1)||| 60 tmp -= a[j];||| 61 else||| 62 tmp += a[j];||| 63 for (int j = 1; j <= m; ++j) tmp += j * b[j].first;||| 64 if (tmp > ans) {||| 65 ans = tmp;||| 66 for (int j = 1; j <= m; ++j) c[b[j].second] = j;||| 67 }||| 68 }||| 69 for (int i = 1; i <= m; ++i) write(c[i]), putchar(' ');||| 70 puts("""");||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c > '9' || c < '0') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') {||| 11 ans = (ans << 1) + (ans << 3) + c - '0';||| 12 c = getchar();||| 13 }||| 14 return ans * f;||| 15 }||| 16 inline void write(int x) {||| 17 if (x < 0) putchar('-'), x = -x;||| 18 if (x / 10) write(x / 10);||| 19 putchar((char)(x % 10) + '0');||| 20 }||| 21 template <typename T>||| 22 inline T Abs(T a) {||| 23 return a > 0 ? a : -a;||| 24 };||| 25 template <typename T, typename TT>||| 26 inline T Min(T a, TT b) {||| 27 return a < b ? a : b;||| 28 }||| 29 template <typename T, typename TT>||| 30 inline T Max(T a, TT b) {||| 31 return a < b ? b : a;||| 32 }||| 33 const int N = 1e4 + 5;||| 34 int t, n, m, a[N], c[N], ans;||| 35 char s[15][N];||| 36 pair<int, int> b[N];||| 37 signed main() {||| 38 t = read();||| 39 while (t--) {||| 40 n = read();||| 41 m = read();||| 42 for (int i = 1; i <= n; ++i) a[i] = read();||| 43 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 44 ans = -1e9;||| 45 for (int i = 0; i < (1 << n); ++i) {||| 46 for (int j = 1; j <= m; ++j) {||| 47 b[j] = make_pair(0, j);||| 48 for (int k = 1; k <= n; ++k)||| 49 if (s[k][j] == '1') {||| 50 if ((i >> (k - 1)) & 1)||| 51 b[j].first++;||| 52 else||| 53 b[j].first--;||| 54 }||| 55 }||| 56 sort(b + 1, b + 1 + m);||| 57 int tmp = 0;||| 58 for (int j = 1; j <= n; ++j)||| 59 if ((i >> (j - 1)) & 1)||| 60 tmp -= a[j];||| 61 else||| 62 tmp += a[j];||| 63 for (int j = 1; j <= m; ++j) tmp += i * b[j].first;||| 64 if (tmp > ans) {||| 65 ans = tmp;||| 66 for (int j = 1; j <= m; ++j) c[b[j].second] = j;||| 67 }||| 68 }||| 69 for (int i = 1; i <= m; ++i) write(c[i]), putchar(' ');||| 70 puts("""");||| 71 }||| 72 return 0;||| 73 }||| "	63 for (int j = 1; j <= m; ++j) tmp += j * b[j].first;
159	48	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 1;||| 4 const long long infll = 1e18 + 1;||| 5 const int mod = 998244353;||| 6 mt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());||| 7 template <typename T>||| 8 bool chmin(T &a, T b) {||| 9 if (a > b) {||| 10 a = b;||| 11 return true;||| 12 }||| 13 return false;||| 14 }||| 15 template <typename T>||| 16 bool chmax(T &a, T b) {||| 17 if (a < b) {||| 18 a = b;||| 19 return true;||| 20 }||| 21 return false;||| 22 }||| 23 struct smth {||| 24 int x;||| 25 };||| 26 const int maxn = 1e6 + 1;||| 27 int p[maxn];||| 28 long long h[maxn];||| 29 void solve() {||| 30 int n;||| 31 cin >> n;||| 32 vector<long long> f(n + 1);||| 33 f[0] = 0;||| 34 long long s = 0;||| 35 map<long long, int> mp;||| 36 for (int i = 1; i <= n; i++) {||| 37 f[i] = f[i - 1] ^ h[i];||| 38 mp[f[i]] = i;||| 39 s ^= f[i];||| 40 }||| 41 if (s == 0) {||| 42 cout << n << '\n';||| 43 for (int i = 1; i <= n; i++) {||| 44 cout << i << ' ';||| 45 }||| 46 return;||| 47 }||| 48 if (mp.count(s)) {||| 49 cout << n - 1 << '\n';||| 50 for (int j = 1; j <= n; j++) {||| 51 if (mp[s] != j) {||| 52 cout << j << ' ';||| 53 }||| 54 }||| 55 return;||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 if (mp.count(s ^ f[i]) && mp[s ^ f[i]] != i) {||| 59 cout << n - 2 << '\n';||| 60 for (int j = 1; j <= n; j++) {||| 61 if (mp[s ^ f[i]] != j && i != j) {||| 62 cout << j << ' ';||| 63 }||| 64 }||| 65 return;||| 66 }||| 67 }||| 68 cout << n - 3 << '\n';||| 69 for (int i = 1; i <= n; i++) {||| 70 if (i != 2 && i != n && i != (n - 1) / 2) {||| 71 cout << i << ' ';||| 72 }||| 73 }||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(false);||| 77 cin.tie(0), cout.tie(0);||| 78 int t;||| 79 t = 1;||| 80 int cnt = 0;||| 81 for (int i = 2; i < maxn; i++) {||| 82 if (p[i] == 0) {||| 83 cnt++;||| 84 for (int j = i; j < maxn; j += i) {||| 85 chmax(p[j], i);||| 86 }||| 87 }||| 88 }||| 89 p[1] = 0;||| 90 set<long long> gen;||| 91 while (gen.size() != cnt) {||| 92 gen.insert(rnd());||| 93 }||| 94 for (int i = 2; i < maxn; i++) {||| 95 if (p[i] == i) {||| 96 h[i] = *gen.begin();||| 97 gen.erase(gen.begin());||| 98 } else {||| 99 h[i] = h[i / p[i]] ^ h[p[i]];||| 100 }||| 101 }||| 102 while (t--) {||| 103 solve();||| 104 }||| 105 return 0;||| 106 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 1;||| 4 const long long infll = 1e18 + 1;||| 5 const int mod = 998244353;||| 6 mt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());||| 7 template <typename T>||| 8 bool chmin(T &a, T b) {||| 9 if (a > b) {||| 10 a = b;||| 11 return true;||| 12 }||| 13 return false;||| 14 }||| 15 template <typename T>||| 16 bool chmax(T &a, T b) {||| 17 if (a < b) {||| 18 a = b;||| 19 return true;||| 20 }||| 21 return false;||| 22 }||| 23 struct smth {||| 24 int x;||| 25 };||| 26 const int maxn = 1e6 + 1;||| 27 int p[maxn];||| 28 long long h[maxn];||| 29 void solve() {||| 30 int n;||| 31 cin >> n;||| 32 vector<long long> f(n + 1);||| 33 f[0] = 0;||| 34 long long s = 0;||| 35 map<long long, int> mp;||| 36 for (int i = 1; i <= n; i++) {||| 37 f[i] = f[i - 1] ^ h[i];||| 38 mp[f[i]] = i;||| 39 s ^= f[i];||| 40 }||| 41 if (s == 0) {||| 42 cout << n << '\n';||| 43 for (int i = 1; i <= n; i++) {||| 44 cout << i << ' ';||| 45 }||| 46 return;||| 47 }||| 48 if (mp.count(s)) {||| 49 cout << n - 1 << '\n';||| 50 for (int j = 1; j <= n; j++) {||| 51 if (mp[s] != j) {||| 52 cout << j << ' ';||| 53 }||| 54 }||| 55 return;||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 if (mp.count(s ^ f[i]) && mp[s ^ f[i]] != i) {||| 59 cout << n - 2 << '\n';||| 60 for (int j = 1; j <= n; j++) {||| 61 if (mp[s ^ f[i]] != j && i != j) {||| 62 cout << j << ' ';||| 63 }||| 64 }||| 65 return;||| 66 }||| 67 }||| 68 cout << n - 3 << '\n';||| 69 for (int i = 1; i <= n; i++) {||| 70 if (i != 2 && i != n && i != (n - 1) / 2) {||| 71 cout << i << ' ';||| 72 }||| 73 }||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(false);||| 77 cin.tie(0), cout.tie(0);||| 78 int t;||| 79 t = 1;||| 80 int cnt = 0;||| 81 for (int i = 2; i < maxn; i++) {||| 82 if (p[i] == 0) {||| 83 cnt++;||| 84 for (int j = i; j < maxn; j += i) {||| 85 chmax(p[j], i);||| 86 }||| 87 }||| 88 }||| 89 p[1] = 0;||| 90 set<int> gen;||| 91 while (gen.size() != cnt) {||| 92 gen.insert(rnd());||| 93 }||| 94 for (int i = 2; i < maxn; i++) {||| 95 if (p[i] == i) {||| 96 h[i] = *gen.begin();||| 97 gen.erase(gen.begin());||| 98 } else {||| 99 h[i] = h[i / p[i]] ^ h[p[i]];||| 100 }||| 101 }||| 102 while (t--) {||| 103 solve();||| 104 }||| 105 return 0;||| 106 }||| 	90 set<long long> gen;
159	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ull = unsigned long long;||| 4 const int N = 1e6 + 5;||| 5 mt19937_64 rnd(time(0));||| 6 int n, K, flag[N], pr[N], cnt;||| 7 ull H[N], sum;||| 8 unordered_map<ull, int> pos;||| 9 int main() {||| 10 scanf(""%d"", &n);||| 11 K = n >> 1;||| 12 flag[0] = flag[1] = 1, H[1] = 0;||| 13 for (int i = 2; i <= n; i++) {||| 14 if (!flag[i]) pr[++cnt] = i, H[i] = rnd();||| 15 for (int j = 1; j <= cnt && i * pr[j] <= n; j++) {||| 16 flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]];||| 17 if (i % pr[j] == 0) break;||| 18 }||| 19 }||| 20 for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i];||| 21 if (sum == 0) {||| 22 printf(""%d\n"", n);||| 23 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 24 return 0;||| 25 }||| 26 for (int i = 1; i <= n; i++)||| 27 if (H[i] == sum) {||| 28 printf(""%d\n"", n - 1);||| 29 for (int j = 1; j <= n; j++)||| 30 if (j != i) printf(""%d "", j);||| 31 return 0;||| 32 }||| 33 for (int i = 1; i <= n; i++) {||| 34 if (pos.count(sum ^ H[i])) {||| 35 int p = pos[sum ^ H[i]];||| 36 printf(""%d\n"", n - 2);||| 37 for (int j = 1; j <= n; j++)||| 38 if (j != i && j != p) printf(""%d "", j);||| 39 return 0;||| 40 }||| 41 pos[H[i]] = i;||| 42 }||| 43 printf(""%d\n"", n - 3);||| 44 for (int i = 1; i <= n; i++)||| 45 if (i != 2 && i != K && i != n) printf(""%d "", i);||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using uint = unsigned int;||| 4 const int N = 1e6 + 5;||| 5 mt19937 rnd(time(0));||| 6 int n, K, flag[N], pr[N], cnt;||| 7 uint H[N], sum;||| 8 unordered_map<uint, int> pos;||| 9 int main() {||| 10 scanf(""%d"", &n);||| 11 K = n >> 1;||| 12 flag[0] = flag[1] = 1, H[1] = 0;||| 13 for (int i = 2; i <= n; i++) {||| 14 if (!flag[i]) pr[++cnt] = i, H[i] = rnd();||| 15 for (int j = 1; j <= cnt && i * pr[j] <= n; j++) {||| 16 flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]];||| 17 if (i % pr[j] == 0) break;||| 18 }||| 19 }||| 20 for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i];||| 21 if (sum == 0) {||| 22 printf(""%d\n"", n);||| 23 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 24 return 0;||| 25 }||| 26 for (int i = 1; i <= n; i++)||| 27 if (H[i] == sum) {||| 28 printf(""%d\n"", n - 1);||| 29 for (int j = 1; j <= n; j++)||| 30 if (j != i) printf(""%d "", j);||| 31 return 0;||| 32 }||| 33 for (int i = 1; i <= n; i++) {||| 34 if (pos.count(sum ^ H[i])) {||| 35 int p = pos[sum ^ H[i]];||| 36 printf(""%d\n"", n - 2);||| 37 for (int j = 1; j <= n; j++)||| 38 if (j != i && j != p) printf(""%d "", j);||| 39 return 0;||| 40 }||| 41 pos[H[i]] = i;||| 42 }||| 43 printf(""%d\n"", n - 3);||| 44 for (int i = 1; i <= n; i++)||| 45 if (i != 2 && i != K && i != n) printf(""%d "", i);||| 46 return 0;||| 47 }||| "	3 using ull = unsigned long long;
159	36	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 2;||| 4 int lpf[N];||| 5 long long val[N];||| 6 long long val1[N];||| 7 long long val2[N];||| 8 int use[N];||| 9 int n;||| 10 void finish() {||| 11 cout << accumulate(use + 1, use + n + 1, 0) << '\n';||| 12 for (int i = 1; i <= n; i++) {||| 13 if (use[i]) cout << i << ' ';||| 14 }||| 15 cout << '\n';||| 16 exit(0);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 mt19937_64 rng(||| 22 (long long)chrono::steady_clock::now().time_since_epoch().count());||| 23 for (int i = 1; i < N; i++) {||| 24 lpf[i] = i;||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 if (lpf[i] == i) {||| 28 val[i] = rng();||| 29 for (int j = 2 * i; j < N; j += i) {||| 30 lpf[j] = i;||| 31 }||| 32 } else {||| 33 val[i] = val[lpf[i]] ^ val[i / lpf[i]];||| 34 }||| 35 }||| 36 for (int i = 1; i < N; i++) {||| 37 val1[i] = val1[i - 1] ^ val[i];||| 38 val2[i] = val2[i - 1] ^ val1[i];||| 39 }||| 40 cin >> n;||| 41 for (int i = 1; i <= n; i++) use[i] = 1;||| 42 long long x = val2[n];||| 43 if (!x) finish();||| 44 for (int i = 1; i <= n; i++) {||| 45 if (val1[i] == x) {||| 46 use[i] = 0;||| 47 finish();||| 48 }||| 49 }||| 50 unordered_map<long long, int> m;||| 51 for (int i = 1; i <= n; i++) {||| 52 if (m.count(val1[i] ^ x)) {||| 53 use[i] = 0;||| 54 use[m[val1[i] ^ x]] = 0;||| 55 finish();||| 56 }||| 57 m[val1[i]] = i;||| 58 }||| 59 assert(n % 4 == 3);||| 60 use[n] = 0;||| 61 use[n / 2] = 0;||| 62 use[2] = 0;||| 63 finish();||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 2;||| 4 int lpf[N];||| 5 long long val[N];||| 6 long long val1[N];||| 7 long long val2[N];||| 8 int use[N];||| 9 int n;||| 10 void finish() {||| 11 cout << accumulate(use + 1, use + n + 1, 0) << '\n';||| 12 for (int i = 1; i <= n; i++) {||| 13 if (use[i]) cout << i << ' ';||| 14 }||| 15 cout << '\n';||| 16 exit(0);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 mt19937_64 rng(||| 22 (long long)chrono::steady_clock::now().time_since_epoch().count());||| 23 for (int i = 1; i < N; i++) {||| 24 lpf[i] = i;||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 if (lpf[i] == i) {||| 28 val[i] = rng();||| 29 for (int j = 2 * i; j < N; j += i) {||| 30 lpf[j] = i;||| 31 }||| 32 } else {||| 33 val[i] = val[lpf[i]] ^ val[i / lpf[i]];||| 34 }||| 35 }||| 36 for (int i = 1; i < N; i++) {||| 37 val1[i] = val1[i - 1] ^ val[i];||| 38 val2[i] = val2[i - 1] ^ val1[i];||| 39 }||| 40 cin >> n;||| 41 for (int i = 1; i <= n; i++) use[i] = 1;||| 42 long long x = val2[n];||| 43 if (!x) finish();||| 44 for (int i = 1; i <= n; i++) {||| 45 if (val1[i] == x) {||| 46 use[i] = 0;||| 47 finish();||| 48 }||| 49 }||| 50 unordered_map<int, int> m;||| 51 for (int i = 1; i <= n; i++) {||| 52 if (m.count(val1[i] ^ x)) {||| 53 use[i] = 0;||| 54 use[m[val1[i] ^ x]] = 0;||| 55 finish();||| 56 }||| 57 m[val1[i]] = i;||| 58 }||| 59 assert(n % 4 == 3);||| 60 use[n] = 0;||| 61 use[n / 2] = 0;||| 62 use[2] = 0;||| 63 finish();||| 64 }||| 	50 unordered_map<long long, int> m;
160	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void intext() {}||| 64 bool isPrime(int n) {||| 65 if (n == 1) return false;||| 66 if (n == 2) return true;||| 67 for (int i = 2; i * i <= n; i++) {||| 68 if (n % i == 0) return false;||| 69 }||| 70 return true;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 74 intext();||| 75 long long t = 1;||| 76 cin >> t;||| 77 while (t--) {||| 78 long long n, m, rb, cb, rd, cd;||| 79 cin >> n >> m >> rb >> cb >> rd >> cd;||| 80 long long x1 = 1;||| 81 long long x2 = 1;||| 82 long long cnt = 0;||| 83 while (rb != rd && cb != cd) {||| 84 if (rb + x1 > n || rb + x2 < 1) {||| 85 x1 = -1 * x1;||| 86 }||| 87 if (cb + x2 > m || cb + x2 < 1) {||| 88 x2 = -1 * x2;||| 89 }||| 90 rb += x1;||| 91 cb += x2;||| 92 cnt++;||| 93 }||| 94 cout << cnt << endl;||| 95 }||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void intext() {}||| 64 bool isPrime(int n) {||| 65 if (n == 1) return false;||| 66 if (n == 2) return true;||| 67 for (int i = 2; i * i <= n; i++) {||| 68 if (n % i == 0) return false;||| 69 }||| 70 return true;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 74 intext();||| 75 long long t = 1;||| 76 cin >> t;||| 77 while (t--) {||| 78 long long n, m, rb, cb, rd, cd;||| 79 cin >> n >> m >> rb >> cb >> rd >> cd;||| 80 long long x1 = 1;||| 81 long long x2 = 1;||| 82 long long cnt = 0;||| 83 while (rb != rd && cb != cd) {||| 84 if (rb + x1 > m || rb + x2 < 1) {||| 85 x1 = -1 * x1;||| 86 }||| 87 if (cb + x2 > n || cb + x2 < 1) {||| 88 x2 = -1 * x2;||| 89 }||| 90 rb += x1;||| 91 cb += x2;||| 92 cnt++;||| 93 }||| 94 cout << cnt << endl;||| 95 }||| 96 }||| "	84 if (rb + x1 > n || rb + x2 < 1) {
160	66	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int row, column, r_row, r_column, f_row, f_column;||| 8 int dr = 1, dc = 1;||| 9 cin >> row >> column >> r_row >> r_column >> f_row >> f_column;||| 10 int count;||| 11 count = 0;||| 12 while (f_row != r_row && f_column != r_column) {||| 13 if (r_row + dr > row || r_row + dr < 1) {||| 14 dr *= (-1);||| 15 }||| 16 if (r_column + dc > column || r_column + dc < 1) {||| 17 dc *= (-1);||| 18 }||| 19 r_column += dc;||| 20 r_row += dr;||| 21 count++;||| 22 }||| 23 cout << count << endl;||| 24 }||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int row, column, r_row, r_column, f_row, f_column;||| 8 int dr = 1, dc = 1;||| 9 cin >> row >> column >> r_row >> r_column >> f_row >> f_column;||| 10 int count;||| 11 count = 0;||| 12 while (f_row != r_row && f_column != r_column) {||| 13 if (r_row + dr > row || r_row + dr < 1) {||| 14 dr *= (-1);||| 15 }||| 16 if (r_column + dr > column || r_column + dr < 1) {||| 17 dc *= (-1);||| 18 }||| 19 r_column += dc;||| 20 r_row += dr;||| 21 count++;||| 22 }||| 23 cout << count << endl;||| 24 }||| 25 }||| 	16 if (r_column + dc > column || r_column + dc < 1) {
160	135	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int rb, cb, rd, cd;||| 10 cin >> rb >> cb >> rd >> cd;||| 11 int x1, x2;||| 12 if (rb <= rd) {||| 13 x1 = rd - rb;||| 14 } else if (rb > rd) {||| 15 x1 = 2 * (n)-rb - rd;||| 16 }||| 17 if (cb <= cd) {||| 18 x2 = cd - cb;||| 19 } else if (cb > cd) {||| 20 x2 = 2 * (m)-cb - cd;||| 21 }||| 22 if (x1 < x2) {||| 23 cout << x1 << endl;||| 24 } else||| 25 cout << x2 << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int rb, cb, rd, cd;||| 10 cin >> rb >> cb >> rd >> cd;||| 11 int x1, x2;||| 12 if (rb <= rd) {||| 13 x1 = rd - rb;||| 14 } else if (rb > rd) {||| 15 x1 = 2 * (n)-rb - rd;||| 16 }||| 17 if (cb <= cd) {||| 18 x2 = cd - cb;||| 19 } else if (cb > cd) {||| 20 x2 = 2 * (m)-rb - rd;||| 21 }||| 22 if (x1 < x2) {||| 23 cout << x1 << endl;||| 24 } else||| 25 cout << x2 << endl;||| 26 }||| 27 return 0;||| 28 }||| 	20 x2 = 2 * (m)-cb - cd;
160	94	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int f;||| 5 cin >> f;||| 6 int r, c;||| 7 int rl, cl;||| 8 int ra, ca;||| 9 for (int i = 0; i < f; i++) {||| 10 int tr = 0, tc = 0;||| 11 cin >> r >> c;||| 12 cin >> rl >> cl;||| 13 cin >> ra >> ca;||| 14 if (cl == ca) tc = 0;||| 15 if (rl == ra)||| 16 tr = 0;||| 17 else if (rl < ra)||| 18 tr = ra - rl;||| 19 else||| 20 tr = (r - rl) + (r - ra);||| 21 if (cl == ca)||| 22 tc = 0;||| 23 else if (cl < ca)||| 24 tc = ca - cl;||| 25 else||| 26 tc = (c - cl) + (c - ca);||| 27 if (tr >= tc)||| 28 cout << tc;||| 29 else||| 30 cout << tr;||| 31 cout << endl;||| 32 }||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int f;||| 5 cin >> f;||| 6 int r, c;||| 7 int rl, cl;||| 8 int ra, ca;||| 9 for (int i = 0; i < f; i++) {||| 10 int tr = 0, tc = 0;||| 11 cin >> r >> c;||| 12 cin >> rl >> cl;||| 13 cin >> ra >> ca;||| 14 if (cl == ca) tc = 0;||| 15 if (cl == ra)||| 16 tr = 0;||| 17 else if (rl < ra)||| 18 tr = ra - rl;||| 19 else||| 20 tr = (r - rl) + (r - ra);||| 21 if (cl == ca)||| 22 tc = 0;||| 23 else if (cl < ca)||| 24 tc = ca - cl;||| 25 else||| 26 tc = (c - cl) + (c - ca);||| 27 if (tr >= tc)||| 28 cout << tc;||| 29 else||| 30 cout << tr;||| 31 cout << endl;||| 32 }||| 33 return 0;||| 34 }||| 	15 if (rl == ra)
160	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 scanf(""%d%d%d%d%d%d"", &n, &m, &rb, &cb, &rd, &cd);||| 6 int ans = 0;||| 7 int dr = 1, dc = 1;||| 8 while (rb != rd && cb != cd) {||| 9 if (rb + dr < 1 || rb + dr > n) dr *= -1;||| 10 if (cb + dc < 1 || cb + dc > m) dc *= -1;||| 11 rb += dr;||| 12 cb += dc;||| 13 ans++;||| 14 }||| 15 printf(""%d\n"", ans);||| 16 }||| 17 int main() {||| 18 int t;||| 19 scanf(""%d"", &t);||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 scanf(""%d%d%d%d%d%d"", &m, &n, &rb, &cb, &rd, &cd);||| 6 int ans = 0;||| 7 int dr = 1, dc = 1;||| 8 while (rb != rd && cb != cd) {||| 9 if (rb + dr < 1 || rb + dr > n) dr *= -1;||| 10 if (cb + dc < 1 || cb + dc > m) dc *= -1;||| 11 rb += dr;||| 12 cb += dc;||| 13 ans++;||| 14 }||| 15 printf(""%d\n"", ans);||| 16 }||| 17 int main() {||| 18 int t;||| 19 scanf(""%d"", &t);||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 }||| "	"5 scanf(""%d%d%d%d%d%d"", &n, &m, &rb, &cb, &rd, &cd);"
160	278	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long inf = 1000000007;||| 4 double pi = acos(-1);||| 5 long long p(long long a, long long b) {||| 6 long long ans = 1;||| 7 if (a < 0) a += inf;||| 8 while (b) {||| 9 if (b % 2 == 1) {||| 10 ans = ((ans % inf) * (a % inf)) % inf;||| 11 }||| 12 a = ((a % inf) * (a % inf)) % inf;||| 13 if (a < 0) a += inf;||| 14 b /= 2;||| 15 }||| 16 return ans;||| 17 }||| 18 long long lis(vector<long long>& arr) {||| 19 vector<long long> temp;||| 20 for (auto i : arr) {||| 21 if (temp.empty() || i > temp.back())||| 22 temp.push_back(i);||| 23 else {||| 24 auto it = lower_bound(temp.begin(), temp.end(), i);||| 25 *it = i;||| 26 }||| 27 }||| 28 return temp.size();||| 29 }||| 30 signed main() {||| 31 ios::sync_with_stdio(0);||| 32 cin.tie(0);||| 33 cout.tie(0);||| 34 long long t = 1;||| 35 cin >> t;||| 36 for (long long tt = 1; tt <= t; tt++) {||| 37 long long n, m, r1, c1, r2, c2;||| 38 cin >> n >> m >> r1 >> c1 >> r2 >> c2;||| 39 long long ans = 1e9;||| 40 if (r1 <= r2) {||| 41 ans = min(ans, r2 - r1);||| 42 } else {||| 43 ans = min(ans, r1 - r2 + 2 * (n - r1));||| 44 }||| 45 if (c1 <= c2) {||| 46 ans = min(ans, c2 - c1);||| 47 } else {||| 48 ans = min(ans, c1 - c2 + 2 * (m - c1));||| 49 }||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long inf = 1000000007;||| 4 double pi = acos(-1);||| 5 long long p(long long a, long long b) {||| 6 long long ans = 1;||| 7 if (a < 0) a += inf;||| 8 while (b) {||| 9 if (b % 2 == 1) {||| 10 ans = ((ans % inf) * (a % inf)) % inf;||| 11 }||| 12 a = ((a % inf) * (a % inf)) % inf;||| 13 if (a < 0) a += inf;||| 14 b /= 2;||| 15 }||| 16 return ans;||| 17 }||| 18 long long lis(vector<long long>& arr) {||| 19 vector<long long> temp;||| 20 for (auto i : arr) {||| 21 if (temp.empty() || i > temp.back())||| 22 temp.push_back(i);||| 23 else {||| 24 auto it = lower_bound(temp.begin(), temp.end(), i);||| 25 *it = i;||| 26 }||| 27 }||| 28 return temp.size();||| 29 }||| 30 signed main() {||| 31 ios::sync_with_stdio(0);||| 32 cin.tie(0);||| 33 cout.tie(0);||| 34 long long t = 1;||| 35 cin >> t;||| 36 for (long long tt = 1; tt <= t; tt++) {||| 37 long long n, m, r1, c1, r2, c2;||| 38 cin >> n >> m >> r1 >> c1 >> r2 >> c2;||| 39 long long ans = 1e9;||| 40 if (r1 <= r2) {||| 41 ans = min(ans, r2 - r1);||| 42 } else {||| 43 ans = min(ans, r1 - r2 + 2 * (n - r1));||| 44 }||| 45 if (c1 <= 2) {||| 46 ans = min(ans, c2 - c1);||| 47 } else {||| 48 ans = min(ans, c1 - c2 + 2 * (m - c1));||| 49 }||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	45 if (c1 <= c2) {
160	122	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e17;||| 4 const long long sz = 2e5 + 5;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 long long t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1;||| 13 cin >> r >> c >> rb >> cb >> rd >> cd;||| 14 long long time = 0;||| 15 while (true) {||| 16 if (cb == cd || rb == rd) {||| 17 break;||| 18 } else {||| 19 if (rb + mv1 > r || rb + mv1 <= 0) {||| 20 mv1 *= -1;||| 21 }||| 22 if (cb + mv2 > c || cb + mv2 <= 0) {||| 23 mv2 *= -1;||| 24 }||| 25 rb += mv1;||| 26 cb += mv2;||| 27 }||| 28 time++;||| 29 }||| 30 cout << time << endl;||| 31 }||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e17;||| 4 const long long sz = 2e5 + 5;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 long long t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1;||| 13 cin >> r >> c >> rb >> cb >> rd >> cd;||| 14 long long time = 0;||| 15 while (true) {||| 16 if (cb == cd || rb == rd) {||| 17 break;||| 18 } else {||| 19 if (rb + mv1 > r || rb + mv1 <= 0) {||| 20 mv1 *= -1;||| 21 } else if (cb + mv2 > c || cb + mv2 <= 0) {||| 22 mv2 *= -1;||| 23 }||| 24 rb += mv1;||| 25 cb += mv2;||| 26 }||| 27 time++;||| 28 }||| 29 cout << time << endl;||| 30 }||| 31 }||| 	21 }
160	96	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 cin >> n >> m >> rb >> cb >> rd >> cd;||| 6 int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd));||| 7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd));||| 8 int ans = min(x, y);||| 9 cout << ans << endl;||| 10 }||| 11 int main() {||| 12 int t;||| 13 cin >> t;||| 14 while (t--) solve();||| 15 return 0;||| 16 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 cin >> n >> m >> rb >> cb >> rd >> cd;||| 6 int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd));||| 7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - n) + abs(n - cd));||| 8 int ans = min(x, y);||| 9 cout << ans << endl;||| 10 }||| 11 int main() {||| 12 int t;||| 13 cin >> t;||| 14 while (t--) solve();||| 15 return 0;||| 16 }||| 	7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd));
160	248	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 while ((rb != rd) && (cb != cd)) {||| 10 ans++;||| 11 if (flag1)||| 12 rb++;||| 13 else||| 14 rb--;||| 15 if (rb > n) {||| 16 rb -= 2;||| 17 flag1 = 0;||| 18 }||| 19 if (rb < 1) {||| 20 rb += 2;||| 21 flag1 = 1;||| 22 }||| 23 if (flag2)||| 24 cb++;||| 25 else||| 26 cb--;||| 27 if (cb > m) {||| 28 cb -= 2;||| 29 flag2 = 0;||| 30 }||| 31 if (cb < 1) {||| 32 cb += 2;||| 33 flag1 = 1;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 while ((rb != rd) && (cb != cd)) {||| 10 ans++;||| 11 if (flag1)||| 12 rb++;||| 13 else||| 14 rb--;||| 15 if (rb > n) {||| 16 rb -= 2;||| 17 flag1 = 0;||| 18 }||| 19 if (rb < 1) {||| 20 rb += 2;||| 21 flag1 = 1;||| 22 }||| 23 if (flag2)||| 24 cb++;||| 25 else||| 26 cb--;||| 27 if (cb > n) {||| 28 cb -= 2;||| 29 flag2 = 0;||| 30 }||| 31 if (cb < 1) {||| 32 cb += 2;||| 33 flag1 = 1;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| 	27 if (cb > m) {
160	132	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T& x) {||| 5 x = 0;||| 6 bool f = 0;||| 7 char ch = (char)getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = 1;||| 10 ch = (char)getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + (ch & 15);||| 14 ch = (char)getchar();||| 15 }||| 16 if (f) x = -x;||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) x = -x, putchar('-');||| 21 static int st[45];||| 22 int top = 0;||| 23 do {||| 24 st[top++] = x % 10;||| 25 x /= 10;||| 26 } while (x);||| 27 while (top) putchar(st[--top] + '0');||| 28 putchar('\n');||| 29 }||| 30 const long double pi = acos(-1.0);||| 31 const long double eps = (double)1e-7;||| 32 const long long mod = 1e9 + 7;||| 33 const int maxn = 1505;||| 34 const int maxm = 5005;||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 ;||| 39 int T;||| 40 cin >> T;||| 41 while (T--) {||| 42 int n, m, a1, b1, a2, b2;||| 43 cin >> n >> m >> a1 >> b1 >> a2 >> b2;||| 44 int dx = 1, dy = 1;||| 45 int ans = 0;||| 46 while (a1 != a2 && b1 != b2) {||| 47 if (a1 + dx < 1 || a1 + dx > n) dx = -dx;||| 48 if (b1 + dy < 1 || b1 + dy > m) dy = -dy;||| 49 a1 += dx;||| 50 b1 += dy;||| 51 ans++;||| 52 }||| 53 cout << ans << ""\n"";||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T& x) {||| 5 x = 0;||| 6 bool f = 0;||| 7 char ch = (char)getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = 1;||| 10 ch = (char)getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + (ch & 15);||| 14 ch = (char)getchar();||| 15 }||| 16 if (f) x = -x;||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) x = -x, putchar('-');||| 21 static int st[45];||| 22 int top = 0;||| 23 do {||| 24 st[top++] = x % 10;||| 25 x /= 10;||| 26 } while (x);||| 27 while (top) putchar(st[--top] + '0');||| 28 putchar('\n');||| 29 }||| 30 const long double pi = acos(-1.0);||| 31 const long double eps = (double)1e-7;||| 32 const long long mod = 1e9 + 7;||| 33 const int maxn = 1505;||| 34 const int maxm = 5005;||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 ;||| 39 int T;||| 40 cin >> T;||| 41 while (T--) {||| 42 int n, m, a1, b1, a2, b2;||| 43 cin >> n >> m >> a1 >> b1 >> a2 >> b2;||| 44 int dx = 1, dy = 1;||| 45 int ans = 0;||| 46 while (a1 != a2 && b1 != b2) {||| 47 if (a1 + dx < 1 || a1 + dx > n) dx = -dx;||| 48 if (b1 + dx < 1 || b1 + dx > m) dy = -dy;||| 49 a1 += dx;||| 50 b1 += dy;||| 51 ans++;||| 52 }||| 53 cout << ans << ""\n"";||| 54 }||| 55 }||| "	48 if (b1 + dy < 1 || b1 + dy > m) dy = -dy;
160	232	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void go() {||| 4 long long n, m, xr, yr, xd, yd;||| 5 cin >> n >> m >> xr >> yr >> xd >> yd;||| 6 long long dirx = 1, diry = 1;||| 7 long long ans = 0;||| 8 while (true) {||| 9 if (xr == xd || yr == yd) {||| 10 break;||| 11 }||| 12 xr += dirx;||| 13 yr += diry;||| 14 if (xr > n) {||| 15 dirx = -1;||| 16 xr = n - 1;||| 17 }||| 18 if (yr > m) {||| 19 diry = -1;||| 20 yr = m - 1;||| 21 }||| 22 if (xr < 1) {||| 23 xr = 2;||| 24 dirx = 1;||| 25 }||| 26 if (yr < 1) {||| 27 yr = 2;||| 28 diry = 1;||| 29 }||| 30 ans++;||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 int32_t main() {||| 35 ios::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long t;||| 39 t = 1;||| 40 cin >> t;||| 41 while (t--) {||| 42 go();||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void go() {||| 4 long long n, m, xr, yr, xd, yd;||| 5 cin >> n >> m >> xr >> yr >> xd >> yd;||| 6 long long dirx = 1, diry = 1;||| 7 long long ans = 0;||| 8 while (true) {||| 9 if (xr == xd || yr == yd) {||| 10 break;||| 11 }||| 12 xr += dirx;||| 13 yr += diry;||| 14 if (xr > xd) {||| 15 dirx = -1;||| 16 xr = n - 1;||| 17 }||| 18 if (yr > m) {||| 19 diry = -1;||| 20 yr = m - 1;||| 21 }||| 22 if (xr < 1) {||| 23 xr = 2;||| 24 dirx = 1;||| 25 }||| 26 if (yr < 1) {||| 27 yr = 2;||| 28 diry = 1;||| 29 }||| 30 ans++;||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 int32_t main() {||| 35 ios::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long t;||| 39 t = 1;||| 40 cin >> t;||| 41 while (t--) {||| 42 go();||| 43 }||| 44 return 0;||| 45 }||| "	14 if (xr > n) {
160	133	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, cb, rd, cd;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 int ans;||| 10 if (rd - rb >= 0)||| 11 ans = rd - rb;||| 12 else||| 13 ans = 2 * n - (rd + rb);||| 14 if (cd - cb >= 0)||| 15 ans = min(ans, cd - cb);||| 16 else||| 17 ans = min(ans, 2 * m - (cd + cb));||| 18 cout << ans << endl;||| 19 }||| 20 return 0;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, cb, rd, cd;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 int ans;||| 10 if (rd - rb >= 0)||| 11 ans = rd - rb;||| 12 else||| 13 ans = 2 * n - (rd + rb);||| 14 if (cd - cb >= 0)||| 15 ans = min(ans, cd - cb);||| 16 else||| 17 ans = min(ans, 2 * m - (rd + rb));||| 18 cout << ans << endl;||| 19 }||| 20 return 0;||| 21 }||| 	17 ans = min(ans, 2 * m - (cd + cb));
160	261	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 int main() {||| 6 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n, m, a, b, c, d;||| 11 cin >> n >> m >> a >> b >> c >> d;||| 12 int ans = INF;||| 13 if (a <= c) ans = min(ans, c - a);||| 14 if (b <= d) ans = min(ans, d - b);||| 15 if (a > c) ans = min(ans, (n - a) + (n - c));||| 16 if (b > d) ans = min(ans, (m - b) + (m - d));||| 17 cout << ans << '\n';||| 18 }||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 int main() {||| 6 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n, m, a, b, c, d;||| 11 cin >> n >> m >> a >> b >> c >> d;||| 12 int ans = INF;||| 13 if (a <= c) ans = min(ans, c - a);||| 14 if (b <= d) ans = min(ans, d - b);||| 15 if (a > c) ans = min(ans, (n - a) + (n - c));||| 16 if (b > c) ans = min(ans, (m - b) + (m - d));||| 17 cout << ans << '\n';||| 18 }||| 19 }||| 	16 if (b > d) ans = min(ans, (m - b) + (m - d));
161	200	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};||| 4 int dy[] = {0, 1, 0, -1, -1, 1, -1, 1};||| 5 int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2};||| 6 int ky[] = {1, 2, 2, 1, -1, -2, -2, -1};||| 7 bool com(pair<int, int> a, pair<int, int> b) {||| 8 return abs(a.first - a.second) < abs(b.first - b.second);||| 9 }||| 10 void solved() {||| 11 int n, x, y;||| 12 cin >> n;||| 13 vector<pair<int, int> > v;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> x >> y;||| 16 v.push_back({x, y});||| 17 }||| 18 sort(v.begin(), v.end(), com);||| 19 int ar[n + 1];||| 20 memset(ar, 0, sizeof(ar));||| 21 for (auto it : v) {||| 22 int a = it.first, b = it.second;||| 23 if (ar[a] == 0) {||| 24 cout << a << ' ' << b << ' ' << a << endl;||| 25 ar[a] = 1;||| 26 } else if (ar[b] == 0) {||| 27 cout << a << ' ' << b << ' ' << b << endl;||| 28 ar[b] = 1;||| 29 } else {||| 30 for (int i = a; i <= b; i++) {||| 31 if (ar[i] == 0) {||| 32 cout << a << ' ' << b << ' ' << i << endl;||| 33 ar[i] = 1;||| 34 break;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 }||| 40 int main() {||| 41 long long int tc;||| 42 cin >> tc;||| 43 while (tc--) {||| 44 solved();||| 45 }||| 46 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};||| 4 int dy[] = {0, 1, 0, -1, -1, 1, -1, 1};||| 5 int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2};||| 6 int ky[] = {1, 2, 2, 1, -1, -2, -2, -1};||| 7 bool com(pair<int, int> a, pair<int, int> b) {||| 8 return abs(a.first - a.second) < abs(b.first - b.second);||| 9 }||| 10 void solved() {||| 11 int n, x, y;||| 12 cin >> n;||| 13 vector<pair<int, int> > v;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> x >> y;||| 16 v.push_back({x, y});||| 17 }||| 18 sort(v.begin(), v.end(), com);||| 19 int ar[n + 1];||| 20 memset(ar, 0, sizeof(ar));||| 21 for (auto it : v) {||| 22 int a = it.first, b = it.second;||| 23 if (ar[a] == 0) {||| 24 cout << a << ' ' << b << ' ' << a << endl;||| 25 ar[a] = 1;||| 26 } else if (ar[b] == 0) {||| 27 cout << a << ' ' << b << ' ' << b << endl;||| 28 ar[b] = 1;||| 29 } else {||| 30 for (int i = 1; i <= n; i++) {||| 31 if (ar[i] == 0) {||| 32 cout << a << ' ' << b << ' ' << i << endl;||| 33 ar[i] = 1;||| 34 break;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 }||| 40 int main() {||| 41 long long int tc;||| 42 cin >> tc;||| 43 while (tc--) {||| 44 solved();||| 45 }||| 46 }||| 	30 for (int i = a; i <= b; i++) {
161	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, v[1010];||| 4 struct node {||| 5 int l, r, d;||| 6 } a[1010];||| 7 bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 memset(v, 0, sizeof(v));||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r;||| 14 sort(a + 1, a + 1 + n, cmp);||| 15 for (int i = 1; i <= n; i++) {||| 16 for (int j = a[i].l; j <= a[i].r; j++) {||| 17 if (v[j] == 0) {||| 18 a[i].d = j;||| 19 v[j] = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 for (int i = 1; i <= n; i++)||| 25 cout << a[i].l << "" "" << a[i].r << "" "" << a[i].d << endl;||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, v[1010];||| 4 struct node {||| 5 int l, r, d;||| 6 } a[1010];||| 7 bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 memset(v, 0, sizeof(v));||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r;||| 14 sort(a + 1, a + 1 + n, cmp);||| 15 for (int i = 1; i <= n; i++) {||| 16 for (int j = a[i].l; j <= a[i].r; i++) {||| 17 if (v[j] == 0) {||| 18 a[i].d = j;||| 19 v[j] = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 for (int i = 1; i <= n; i++)||| 25 cout << a[i].l << "" "" << a[i].r << "" "" << a[i].d << endl;||| 26 }||| 27 }||| "	16 for (int j = a[i].l; j <= a[i].r; j++) {
162	127	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long h[N], n;||| 5 bool check(long long k) {||| 6 vector<long long> a(h, h + n);||| 7 for (int i = n - 1; i > 1; i--) {||| 8 if (a[i] < k) return false;||| 9 int d = min(h[i], a[i] - k) / 3;||| 10 a[i - 1] += d;||| 11 a[i - 2] += d;||| 12 a[i - 2] += d;||| 13 }||| 14 return a[0] >= k && a[1] >= k;||| 15 }||| 16 void solve() {||| 17 cin >> n;||| 18 long long MAX = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 cin >> h[i];||| 21 MAX = max(MAX, h[i]);||| 22 }||| 23 long long l = 0;||| 24 long long r = 1e9 + 1;||| 25 while (r - l > 1) {||| 26 long long mid = (r + l) / 2;||| 27 check(mid) ? l = mid : r = mid;||| 28 }||| 29 cout << l << ""\n"";||| 30 }||| 31 int main() {||| 32 std::ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) solve();||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long h[N], n;||| 5 bool check(long long k) {||| 6 vector<long long> a(h, h + n);||| 7 for (int i = n - 1; i > 1; i--) {||| 8 if (a[i] < k) return false;||| 9 int d = min(h[i], a[i]) / 3;||| 10 a[i - 1] += d;||| 11 a[i - 2] += d;||| 12 a[i - 2] += d;||| 13 }||| 14 return a[0] >= k && a[1] >= k;||| 15 }||| 16 void solve() {||| 17 cin >> n;||| 18 long long MAX = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 cin >> h[i];||| 21 MAX = max(MAX, h[i]);||| 22 }||| 23 long long l = 0;||| 24 long long r = 1e9 + 1;||| 25 while (r - l > 1) {||| 26 long long mid = (r + l) / 2;||| 27 check(mid) ? l = mid : r = mid;||| 28 }||| 29 cout << l << ""\n"";||| 30 }||| 31 int main() {||| 32 std::ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) solve();||| 38 return 0;||| 39 }||| "	9 int d = min(h[i], a[i] - k) / 3;
162	18	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k, mod = 1e9 + 7, ans, a[200011];||| 4 string s, s2;||| 5 bool flag, vis[2000111];||| 6 vector<long long> v, tmp;||| 7 bool okD(long long d, long long mid, long long i) {||| 8 return tmp[i] - 3 * d >= mid;||| 9 }||| 10 bool ok(long long mid) {||| 11 tmp = v;||| 12 for (long long i = n - 1; i >= 2; i--) {||| 13 long long d = tmp[i] - mid;||| 14 d = min(v[i], d);||| 15 if (d < 0) return false;||| 16 d /= 3;||| 17 tmp[i] -= d * 3;||| 18 tmp[i - 1] += d;||| 19 tmp[i - 2] += 2 * d;||| 20 }||| 21 long long ret = 1e9;||| 22 for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]);||| 23 return ret >= mid;||| 24 }||| 25 int32_t main() {||| 26 ios_base::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n;||| 32 v.resize(n);||| 33 for (long long i = 0; i < n; i++) cin >> v[i];||| 34 long long L = 1, R = 1e9;||| 35 while (L <= R) {||| 36 long long mid = (L + R + 1) / 2;||| 37 if (ok(mid))||| 38 ans = mid, L = mid + 1;||| 39 else||| 40 R = mid - 1;||| 41 }||| 42 cout << ans << '\n';||| 43 }||| 44 return 0;||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k, mod = 1e9 + 7, ans, a[200011];||| 4 string s, s2;||| 5 bool flag, vis[2000111];||| 6 vector<long long> v, tmp;||| 7 bool okD(long long d, long long mid, long long i) {||| 8 return tmp[i] - 3 * d >= mid;||| 9 }||| 10 bool ok(long long mid) {||| 11 tmp = v;||| 12 for (long long i = n - 1; i >= 2; i--) {||| 13 long long d = tmp[i] - mid;||| 14 d = min(v[i], d);||| 15 if (d < 0) return false;||| 16 d /= 3;||| 17 tmp[i] -= d * 3;||| 18 tmp[i - 1] += d;||| 19 tmp[i - 2] += 2 * d;||| 20 }||| 21 long long ret = 1e9;||| 22 for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]);||| 23 return ret >= mid;||| 24 }||| 25 int32_t main() {||| 26 ios_base::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n;||| 32 v.resize(n);||| 33 for (long long i = 0; i < n; i++) cin >> v[i];||| 34 long long L = 1, R = 10;||| 35 while (L <= R) {||| 36 long long mid = (L + R + 1) / 2;||| 37 if (ok(mid))||| 38 ans = mid, L = mid + 1;||| 39 else||| 40 R = mid - 1;||| 41 }||| 42 cout << ans << '\n';||| 43 }||| 44 return 0;||| 45 }||| 	34 long long L = 1, R = 1e9;
162	171	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int a[MAXN];||| 5 int b[MAXN];||| 6 int c[MAXN];||| 7 int n;||| 8 bool check(int x) {||| 9 for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0;||| 10 for (int i = n; i >= 3; i--) {||| 11 if (b[i] + c[i] < x) return false;||| 12 int now = x - c[i];||| 13 if (now <= 0) {||| 14 int res = b[i] / 3;||| 15 b[i] -= res * 3;||| 16 c[i - 2] += 2 * res;||| 17 c[i - 1] += res;||| 18 } else {||| 19 int res = (b[i] - now) / 3;||| 20 b[i] -= res * 3;||| 21 c[i - 2] += 2 * res;||| 22 c[i - 1] += res;||| 23 }||| 24 }||| 25 if (b[1] + c[1] < x || b[2] + c[2] < x) return false;||| 26 return true;||| 27 }||| 28 int main() {||| 29 std::ios::sync_with_stdio(false);||| 30 int _;||| 31 cin >> _;||| 32 while (_--) {||| 33 cin >> n;||| 34 for (int i = 1; i <= n; i++) cin >> a[i];||| 35 int l = 1, r = 1e9;||| 36 while (l <= r) {||| 37 int mid = l + r >> 1;||| 38 if (check(mid)) {||| 39 l = mid + 1;||| 40 } else||| 41 r = mid - 1;||| 42 }||| 43 cout << r << '\n';||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int a[MAXN];||| 5 int b[MAXN];||| 6 int c[MAXN];||| 7 int n;||| 8 bool check(int x) {||| 9 for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0;||| 10 for (int i = n; i >= 3; i--) {||| 11 if (b[i] + c[i] < x) return false;||| 12 int now = x - c[i];||| 13 if (now <= 0) {||| 14 int res = b[i] / 3;||| 15 b[i] -= res * 3;||| 16 c[i - 2] += 2 * res;||| 17 c[i - 1] += res;||| 18 } else {||| 19 int res = (b[i] - now) / 3;||| 20 b[i] -= res * 3;||| 21 c[i - 2] += 2 * res;||| 22 c[i - 1] += res;||| 23 }||| 24 }||| 25 if (b[1] + c[1] < x || b[2] + c[2] < x) return false;||| 26 return true;||| 27 }||| 28 int main() {||| 29 std::ios::sync_with_stdio(false);||| 30 int _;||| 31 cin >> _;||| 32 while (_--) {||| 33 cin >> n;||| 34 for (int i = 1; i <= n; i++) cin >> a[i];||| 35 int l = 1, r = 10;||| 36 while (l <= r) {||| 37 int mid = l + r >> 1;||| 38 if (check(mid)) {||| 39 l = mid + 1;||| 40 } else||| 41 r = mid - 1;||| 42 }||| 43 cout << r << '\n';||| 44 }||| 45 }||| 	35 int l = 1, r = 1e9;
163	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1000000007;||| 4 inline int qp(long long a, long long b) {||| 5 long long ans = 1;||| 6 for (; b;) {||| 7 if (b & 1) ans = ans * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0), cout.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 for (; t--;) {||| 19 int n, m, bx, by, dx, dy;||| 20 long long p;||| 21 cin >> n >> m >> bx >> by >> dx >> dy >> p;||| 22 int cx = -1, cy = -1;||| 23 long long u = 0, d = 1;||| 24 p = (1 - p * qp(100, mod - 2) % mod + mod) % mod;||| 25 for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) {||| 26 if (bx + cx == 0 || bx + cx > n) cx = -cx;||| 27 if (by + cy == 0 || by + cy > m) cy = -cy;||| 28 bx += cx;||| 29 by += cy;||| 30 u = (u + 1) % mod;||| 31 if (bx == dx || by == dy) {||| 32 u = u * p % mod;||| 33 d = d * p % mod;||| 34 }||| 35 }||| 36 d = (1 - d + mod) % mod;||| 37 cout << u * qp(d, mod - 2) % mod << '\n';||| 38 }||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1000000009;||| 4 inline int qp(long long a, long long b) {||| 5 long long ans = 1;||| 6 for (; b;) {||| 7 if (b & 1) ans = ans * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0), cout.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 for (; t--;) {||| 19 int n, m, bx, by, dx, dy;||| 20 long long p;||| 21 cin >> n >> m >> bx >> by >> dx >> dy >> p;||| 22 int cx = 1, cy = 1;||| 23 long long u = 0, d = 1;||| 24 p = (1 - p * qp(100, mod - 2) % mod + mod) % mod;||| 25 for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) {||| 26 if (bx + cx == 0 || bx + cx > n) cx = -cx;||| 27 if (by + cy == 0 || by + cy > m) cy = -cy;||| 28 bx += cx;||| 29 by += cy;||| 30 u = (u + 1) % mod;||| 31 if (bx == dx || by == dy) {||| 32 u = u * p % mod;||| 33 d = d * p % mod;||| 34 }||| 35 }||| 36 d = (1 - d + mod) % mod;||| 37 cout << u * qp(d, mod - 2) % mod << '\n';||| 38 }||| 39 }||| 	3 const int mod = 1000000007;
163	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long n, m, a, b, c, d, p;||| 5 long long add(long long first, long long second) {||| 6 return (first + second) % MOD;||| 7 }||| 8 long long sub(long long first, long long second) {||| 9 return add(first, MOD - second);||| 10 }||| 11 long long mul(long long first, long long second) {||| 12 return first * second % MOD;||| 13 }||| 14 long long binpow(long long first, long long second) {||| 15 if (second == 0) return 1;||| 16 if (second % 2) return mul(first, binpow(first, second - 1));||| 17 long long z = binpow(first, second / 2);||| 18 return mul(z, z);||| 19 }||| 20 long long inv(long long first) { return binpow(first, MOD - 2); }||| 21 long long divide(long long first, long long second) {||| 22 return mul(first, inv(second));||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n >> m >> a >> b >> c >> d >> p;||| 32 long long first = a, second = b;||| 33 long long ans = 0, dr = 1, dc = 1;||| 34 vector<long long> v;||| 35 while (ans == 0 || first != a || second != b ||||| 36 (first > 1 && first < n && dr != 1) ||||| 37 (second > 1 && second < m && dc != 1)) {||| 38 if (a == c || b == d) v.push_back(ans);||| 39 if (a == n) dr = -1;||| 40 if (a == 1) dr = 1;||| 41 if (b == m) dc = -1;||| 42 if (b == 1) dc = 1;||| 43 a += dr;||| 44 b += dc;||| 45 ans++;||| 46 }||| 47 p = divide(p, 100);||| 48 long long ans2 = 0;||| 49 for (long long i = 0; i < v.size(); i++) {||| 50 long long A = v[i];||| 51 long long P = mul(p, binpow(sub(1, p), i));||| 52 long long Q = binpow(sub(1, p), v.size());||| 53 long long S = ans;||| 54 ans2 = add(ans2, add(divide(mul(A, P), sub(1, Q)),||| 55 divide(mul(S, mul(P, Q)), binpow(sub(1, Q), 2))));||| 56 }||| 57 cout << ans2 << ""\n"";||| 58 }||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long n, m, a, b, c, d, p;||| 5 long long add(long long first, long long second) {||| 6 return (first + second) % MOD;||| 7 }||| 8 long long sub(long long first, long long second) {||| 9 return add(first, MOD - second);||| 10 }||| 11 long long mul(long long first, long long second) {||| 12 return first * second % MOD;||| 13 }||| 14 long long binpow(long long first, long long second) {||| 15 if (second == 0) return 1;||| 16 if (second % 2) return mul(first, binpow(first, second - 1));||| 17 long long z = binpow(first, second / 2);||| 18 return mul(z, z);||| 19 }||| 20 long long inv(long long first) { return binpow(first, MOD - 2); }||| 21 long long divide(long long first, long long second) {||| 22 return mul(first, inv(second));||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n >> m >> a >> b >> c >> d >> p;||| 32 long long first = a, second = b;||| 33 long long ans = 0, dr = 1, dc = 1;||| 34 vector<long long> v;||| 35 while (ans == 0 || first != a || second != b ||||| 36 (first > 1 && first < n && dr != 1) ||||| 37 (second > 1 && second < n && dc != 1)) {||| 38 if (a == c || b == d) v.push_back(ans);||| 39 if (a == n) dr = -1;||| 40 if (a == 1) dr = 1;||| 41 if (b == m) dc = -1;||| 42 if (b == 1) dc = 1;||| 43 a += dr;||| 44 b += dc;||| 45 ans++;||| 46 }||| 47 p = divide(p, 100);||| 48 long long ans2 = 0;||| 49 for (long long i = 0; i < v.size(); i++) {||| 50 long long A = v[i];||| 51 long long P = mul(p, binpow(sub(1, p), i));||| 52 long long Q = binpow(sub(1, p), v.size());||| 53 long long S = ans;||| 54 ans2 = add(ans2, add(divide(mul(A, P), sub(1, Q)),||| 55 divide(mul(S, mul(P, Q)), binpow(sub(1, Q), 2))));||| 56 }||| 57 cout << ans2 << ""\n"";||| 58 }||| 59 }||| "	37 (second > 1 && second < m && dc != 1)) {
163	81	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long ksm(long long a, long long b, long long mod) {||| 5 long long c = 1;||| 6 while (b) {||| 7 if (b & 1) c = c * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return c;||| 12 }||| 13 long long inv(int x) { return ksm(x, mod - 2, mod); }||| 14 int t, n, m, len, p, sx, sy, tx, ty, dx, dy;||| 15 int main() {||| 16 cin >> t;||| 17 while (t--) {||| 18 cin >> n >> m >> sx >> sy >> tx >> ty >> p;||| 19 long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod,||| 20 p2 = p * inv(100), P;||| 21 dx = dy = 1;||| 22 len = 0;||| 23 if (sx == tx || sy == ty)||| 24 P = p1;||| 25 else||| 26 P = 1;||| 27 int tot = 0;||| 28 for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) {||| 29 if (sx + dx > n || sx + dx < 1) dx = -dx;||| 30 if (sy + dy > m || sy + dy < 1) dy = -dy;||| 31 sx += dx, sy += dy, len = (len + 1) % mod;||| 32 if (sx == tx || sy == ty) {||| 33 tot++;||| 34 ans = (ans + P * len % mod) % mod;||| 35 P = p1 * P % mod;||| 36 len = 0;||| 37 }||| 38 }||| 39 if (sx == tx || sy == ty)||| 40 P = P * inv(p1) % mod;||| 41 else||| 42 ans = (ans + len * P % mod) % mod;||| 43 cout << (ans * inv((1 - P + mod) % mod)) % mod << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long ksm(long long a, long long b, long long mod) {||| 5 long long c = 1;||| 6 while (b) {||| 7 if (b & 1) c = c * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return c;||| 12 }||| 13 long long inv(int x) { return ksm(x, mod - 2, mod); }||| 14 int t, n, m, len, p, sx, sy, tx, ty, dx, dy;||| 15 int main() {||| 16 cin >> t;||| 17 while (t--) {||| 18 cin >> n >> m >> sx >> sy >> tx >> ty >> p;||| 19 long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod,||| 20 p2 = p * inv(100), P;||| 21 dx = dy = 1;||| 22 len = 0;||| 23 if (sx == tx || sy == ty)||| 24 P = p1;||| 25 else||| 26 P = 1;||| 27 int tot = 0;||| 28 for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) {||| 29 if (sx + dx > n || sx + dx < 1) dx = -dx;||| 30 if (sy + dy > m || sy + dy < 1) dy = -dy;||| 31 sx += dx, sy += dy, len = (len + 1) % mod;||| 32 if (sx == tx || sy == ty) {||| 33 tot++;||| 34 ans = (ans + P * len % mod) % mod;||| 35 P = p1 * P % mod;||| 36 len = 0;||| 37 }||| 38 }||| 39 if (sx == ty || sy == ty)||| 40 P = P * inv(p1) % mod;||| 41 else||| 42 ans = (ans + len * P % mod) % mod;||| 43 cout << (ans * inv((1 - P + mod) % mod)) % mod << endl;||| 44 }||| 45 }||| 	39 if (sx == tx || sy == ty)
164	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)2e5 + 50, LOGN = 17;||| 4 const int INF = (int)1e9;||| 5 int n, k;||| 6 int ord[N], in[N], tim = 0;||| 7 char las[N];||| 8 int lc[N], rc[N];||| 9 int res[N];||| 10 string str;||| 11 void dfs(int v) {||| 12 if (lc[v] != -1) dfs(lc[v]);||| 13 ord[tim] = v;||| 14 in[v] = tim++;||| 15 if (rc[v] != -1) dfs(rc[v]);||| 16 }||| 17 void solve(int v, int& rem) {||| 18 int la = -1;||| 19 int cur = v;||| 20 for (int i = 0; i < (rem); ++i) {||| 21 if (cur == -1) break;||| 22 if (las[cur] != ' ' && las[cur] > str[cur]) {||| 23 la = i;||| 24 }||| 25 cur = lc[cur];||| 26 }||| 27 cur = v;||| 28 vector<int> vs;||| 29 for (int i = 0; i < (la + 1); ++i) {||| 30 res[cur] = 1;||| 31 rem--;||| 32 vs.push_back(cur);||| 33 cur = lc[cur];||| 34 }||| 35 while (!vs.empty()) {||| 36 if (rc[vs.back()] != -1) solve(rc[vs.back()], rem);||| 37 vs.pop_back();||| 38 }||| 39 }||| 40 void print_ans(int v) {||| 41 if (lc[v] != -1) print_ans(lc[v]);||| 42 cout << str[v];||| 43 if (res[v]) cout << str[v];||| 44 if (rc[v] != -1) print_ans(rc[v]);||| 45 }||| 46 int pos[256];||| 47 int main() {||| 48 ios::sync_with_stdio(false);||| 49 cin.tie(NULL);||| 50 cin >> n >> k;||| 51 cin >> str;||| 52 for (int i = 0; i < (n); ++i) {||| 53 cin >> lc[i] >> rc[i];||| 54 lc[i]--, rc[i]--;||| 55 }||| 56 dfs(0);||| 57 fill(pos, pos + 256, INF);||| 58 for (int i = n - 1; i >= 0; i--) {||| 59 pos[str[ord[i]]] = i;||| 60 char f = ' ';||| 61 for (char c = 'a'; c <= 'z'; c++) {||| 62 if (c != str[ord[i]] && pos[f] > pos[c]) f = c;||| 63 }||| 64 las[ord[i]] = f;||| 65 }||| 66 solve(0, k);||| 67 assert(k >= 0);||| 68 print_ans(0);||| 69 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)2e5 + 50, LOGN = 17;||| 4 const int INF = (int)1e9;||| 5 int n, k;||| 6 int ord[N], in[N], tim = 0;||| 7 char las[N];||| 8 int lc[N], rc[N];||| 9 int res[N];||| 10 string str;||| 11 void dfs(int v) {||| 12 if (lc[v] != -1) dfs(lc[v]);||| 13 ord[tim] = v;||| 14 in[v] = tim++;||| 15 if (rc[v] != -1) dfs(rc[v]);||| 16 }||| 17 void solve(int v, int& rem) {||| 18 int la = -1;||| 19 int cur = v;||| 20 for (int i = 0; i < (rem); ++i) {||| 21 if (cur == -1) break;||| 22 if (las[cur] != ' ' && las[cur] > str[cur]) {||| 23 la = i;||| 24 }||| 25 cur = lc[v];||| 26 }||| 27 cur = v;||| 28 vector<int> vs;||| 29 for (int i = 0; i < (la + 1); ++i) {||| 30 res[cur] = 1;||| 31 rem--;||| 32 vs.push_back(cur);||| 33 cur = lc[cur];||| 34 }||| 35 while (!vs.empty()) {||| 36 if (rc[vs.back()] != -1) solve(rc[vs.back()], rem);||| 37 vs.pop_back();||| 38 }||| 39 }||| 40 void print_ans(int v) {||| 41 if (lc[v] != -1) print_ans(lc[v]);||| 42 cout << str[v];||| 43 if (res[v]) cout << str[v];||| 44 if (rc[v] != -1) print_ans(rc[v]);||| 45 }||| 46 int pos[256];||| 47 int main() {||| 48 ios::sync_with_stdio(false);||| 49 cin.tie(NULL);||| 50 cin >> n >> k;||| 51 cin >> str;||| 52 for (int i = 0; i < (n); ++i) {||| 53 cin >> lc[i] >> rc[i];||| 54 lc[i]--, rc[i]--;||| 55 }||| 56 dfs(0);||| 57 fill(pos, pos + 256, INF);||| 58 for (int i = n - 1; i >= 0; i--) {||| 59 pos[str[ord[i]]] = i;||| 60 char f = ' ';||| 61 for (char c = 'a'; c <= 'z'; c++) {||| 62 if (c != str[ord[i]] && pos[f] > pos[c]) f = c;||| 63 }||| 64 las[ord[i]] = f;||| 65 }||| 66 solve(0, k);||| 67 assert(k >= 0);||| 68 print_ans(0);||| 69 }||| 	25 cur = lc[cur];
164	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 2e5 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 mt19937 rnd(||| 20 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 21 template <typename T>||| 22 bool chkmin(T &x, T y) {||| 23 return y < x ? x = y, 1 : 0;||| 24 }||| 25 template <typename T>||| 26 bool chkmax(T &x, T y) {||| 27 return y > x ? x = y, 1 : 0;||| 28 }||| 29 int n, k;||| 30 string s;||| 31 int lc[N], rc[N];||| 32 int ord[N];||| 33 int idx[N];||| 34 int p = 0;||| 35 int flag[N];||| 36 void dfs1(int u) {||| 37 if (lc[u]) dfs1(lc[u]);||| 38 ord[++p] = u;||| 39 idx[u] = p;||| 40 if (rc[u]) dfs1(rc[u]);||| 41 }||| 42 int rep[N];||| 43 int dfs2(int u, int k) {||| 44 if (k == 0) return 0;||| 45 int cost = 0;||| 46 if (lc[u]) cost += dfs2(lc[u], k - 1);||| 47 if (flag[u] || cost) {||| 48 rep[u] = 1, cost++;||| 49 if (rc[u]) cost += dfs2(rc[u], k - cost);||| 50 }||| 51 return cost;||| 52 }||| 53 void main0() {||| 54 cin >> n >> k >> s;||| 55 s = ""$"" + s;||| 56 for (int i = 1; i <= n; ++i) {||| 57 cin >> lc[i] >> rc[i];||| 58 }||| 59 dfs1(1);||| 60 flag[ord[n]] = 0;||| 61 for (int i = n - 1; i >= 1; --i) {||| 62 int cur = ord[i];||| 63 int nxt = ord[i + 1];||| 64 flag[cur] = (s[cur] == s[nxt] ? flag[nxt] : s[cur] < s[nxt]);||| 65 }||| 66 dfs2(1, k);||| 67 for (int i = 1; i <= n; ++i) {||| 68 for (int j = 1; j <= rep[ord[i]] + 1; ++j) {||| 69 cout << s[ord[i]];||| 70 }||| 71 }||| 72 cout << endl;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 2e5 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 mt19937 rnd(||| 20 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 21 template <typename T>||| 22 bool chkmin(T &x, T y) {||| 23 return y < x ? x = y, 1 : 0;||| 24 }||| 25 template <typename T>||| 26 bool chkmax(T &x, T y) {||| 27 return y > x ? x = y, 1 : 0;||| 28 }||| 29 int n, k;||| 30 string s;||| 31 int lc[N], rc[N];||| 32 char ord[N];||| 33 int idx[N];||| 34 int p = 0;||| 35 int flag[N];||| 36 void dfs1(int u) {||| 37 if (lc[u]) dfs1(lc[u]);||| 38 ord[++p] = u;||| 39 idx[u] = p;||| 40 if (rc[u]) dfs1(rc[u]);||| 41 }||| 42 int rep[N];||| 43 int dfs2(int u, int k) {||| 44 if (k == 0) return 0;||| 45 int cost = 0;||| 46 if (lc[u]) cost += dfs2(lc[u], k - cost);||| 47 if (flag[u] || cost) {||| 48 rep[u] = 1, cost++;||| 49 if (rc[u]) cost += dfs2(rc[u], k - cost);||| 50 }||| 51 return cost;||| 52 }||| 53 void main0() {||| 54 cin >> n >> k >> s;||| 55 s = ""$"" + s;||| 56 for (int i = 1; i <= n; ++i) {||| 57 cin >> lc[i] >> rc[i];||| 58 }||| 59 dfs1(1);||| 60 flag[ord[n]] = 0;||| 61 for (int i = n - 1; i >= 1; --i) {||| 62 int cur = ord[i];||| 63 int nxt = ord[i + 1];||| 64 flag[cur] = (s[cur] == s[nxt] ? flag[nxt] : s[cur] < s[nxt]);||| 65 }||| 66 dfs2(1, k);||| 67 for (int i = 1; i <= n; ++i) {||| 68 for (int j = 1; j <= rep[ord[i]] + 1; ++j) {||| 69 cout << s[ord[i]];||| 70 }||| 71 }||| 72 cout << endl;||| 73 }||| "	32 int ord[N];
164	28	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 cin.tie(0)->sync_with_stdio(0);||| 5 long long n, k;||| 6 string s;||| 7 cin >> n >> k >> s;||| 8 vector<long long> l(n), r(n), val(n), d(n, 0), in;||| 9 for (long long i = 0; i < n; i++) {||| 10 cin >> l[i] >> r[i];||| 11 --l[i], --r[i];||| 12 }||| 13 function<void(long long)> dfs = [&](long long v) {||| 14 if (v == -1) return;||| 15 dfs(l[v]);||| 16 in.push_back(v);||| 17 dfs(r[v]);||| 18 };||| 19 dfs(0);||| 20 val[in.back()] = 0;||| 21 for (long long i = n - 2; i >= 0; i--) {||| 22 if (s[in[i]] == s[in[i + 1]])||| 23 val[in[i]] = val[in[i + 1]];||| 24 else if (s[in[i]] < s[in[i + 1]])||| 25 val[in[i]] = 1;||| 26 else||| 27 val[in[i]] = -1;||| 28 }||| 29 function<long long(long long, long long)> dfs2 = [&](long long v,||| 30 long long t) {||| 31 if (v == -1 or t == 0) return 0ll;||| 32 long long x = dfs2(l[v], t - 1);||| 33 if (val[v] == 1 or x) x++;||| 34 if (x) d[v] = 1;||| 35 long long rem = t - x;||| 36 if (!d[v]) rem = 0;||| 37 x += dfs2(r[v], rem);||| 38 return x;||| 39 };||| 40 dfs2(0, k);||| 41 for (auto i : in) {||| 42 cout << s[i];||| 43 if (d[i]) cout << s[i];||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 cin.tie(0)->sync_with_stdio(0);||| 5 long long n, k;||| 6 string s;||| 7 cin >> n >> k >> s;||| 8 vector<long long> l(n), r(n), val(n), d(n, 0), in;||| 9 for (long long i = 0; i < n; i++) {||| 10 cin >> l[i] >> r[i];||| 11 --l[i], --r[i];||| 12 }||| 13 function<void(long long)> dfs = [&](long long v) {||| 14 if (v == -1) return;||| 15 dfs(l[v]);||| 16 in.push_back(v);||| 17 dfs(r[v]);||| 18 };||| 19 dfs(0);||| 20 val[in.back()] = 0;||| 21 for (long long i = n - 2; i >= 0; i--) {||| 22 if (s[in[i]] == s[in[i + 1]])||| 23 val[in[i]] = val[in[i + 1]];||| 24 else if (s[in[i]] < s[in[i + 1]])||| 25 val[in[i]] = 1;||| 26 else||| 27 val[in[i]] = -1;||| 28 }||| 29 function<long long(long long, long long)> dfs2 = [&](long long v,||| 30 long long t) {||| 31 if (v == -1 or t == 0) return 0ll;||| 32 long long x = dfs2(l[v], t - 1);||| 33 if (val[v] == 1 or x) x++;||| 34 if (x) d[v] = 1;||| 35 long long rem = t - x;||| 36 if (!d[v]) rem = 0;||| 37 dfs2(r[v], rem);||| 38 return x;||| 39 };||| 40 dfs2(0, k);||| 41 for (auto i : in) {||| 42 cout << s[i];||| 43 if (d[i]) cout << s[i];||| 44 }||| 45 }||| 	37 x += dfs2(r[v], rem);
148	228	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 vector<int> x_0;||| 9 vector<int> y_w;||| 10 vector<int> x_h;||| 11 vector<int> y_0;||| 12 long long a, b, c, d;||| 13 int u;||| 14 int k, w, h;||| 15 while (t--) {||| 16 cin >> w >> h;||| 17 cin >> k;||| 18 while (k--) {||| 19 cin >> u;||| 20 x_0.push_back(u);||| 21 }||| 22 a = x_0[x_0.size() - 1] - x_0[0];||| 23 cin >> k;||| 24 while (k--) {||| 25 cin >> u;||| 26 x_h.push_back(u);||| 27 }||| 28 c = x_h[x_h.size() - 1] - x_h[0];||| 29 cin >> k;||| 30 while (k--) {||| 31 cin >> u;||| 32 y_0.push_back(u);||| 33 }||| 34 d = y_0[y_0.size() - 1] - y_0[0];||| 35 cin >> k;||| 36 while (k--) {||| 37 cin >> u;||| 38 y_w.push_back(u);||| 39 }||| 40 b = y_w[y_w.size() - 1] - y_w[0];||| 41 a = (a > c) ? a : c;||| 42 a = a * h;||| 43 b = (b > d) ? b : d;||| 44 b = b * w;||| 45 a = (a > b) ? a : b;||| 46 cout << a << ""\n"";||| 47 x_0.clear();||| 48 y_0.clear();||| 49 x_h.clear();||| 50 y_w.clear();||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 vector<int> x_0;||| 9 vector<int> y_w;||| 10 vector<int> x_h;||| 11 vector<int> y_0;||| 12 int a, b, c, d;||| 13 int u;||| 14 int k, w, h;||| 15 while (t--) {||| 16 cin >> w >> h;||| 17 cin >> k;||| 18 while (k--) {||| 19 cin >> u;||| 20 x_0.push_back(u);||| 21 }||| 22 a = x_0[x_0.size() - 1] - x_0[0];||| 23 cin >> k;||| 24 while (k--) {||| 25 cin >> u;||| 26 x_h.push_back(u);||| 27 }||| 28 c = x_h[x_h.size() - 1] - x_h[0];||| 29 cin >> k;||| 30 while (k--) {||| 31 cin >> u;||| 32 y_0.push_back(u);||| 33 }||| 34 d = y_0[y_0.size() - 1] - y_0[0];||| 35 cin >> k;||| 36 while (k--) {||| 37 cin >> u;||| 38 y_w.push_back(u);||| 39 }||| 40 b = y_w[y_w.size() - 1] - y_w[0];||| 41 a = (a > c) ? a : c;||| 42 a = a * h;||| 43 b = (b > d) ? b : d;||| 44 b = b * w;||| 45 a = (a > b) ? a : b;||| 46 cout << a << ""\n"";||| 47 x_0.clear();||| 48 y_0.clear();||| 49 x_h.clear();||| 50 y_w.clear();||| 51 }||| 52 return 0;||| 53 }||| "	12 long long a, b, c, d;
148	188	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long int w, k;||| 11 cin >> w >> k;||| 12 int x, x1;||| 13 cin >> x;||| 14 vector<int> a(x);||| 15 for (int i = 0; i < x; i++) cin >> a[i];||| 16 cin >> x1;||| 17 vector<int> b(x1);||| 18 for (int i = 0; i < x1; i++) cin >> b[i];||| 19 int mx;||| 20 mx = max(a[x - 1] - a[0], b[x1 - 1] - b[0]);||| 21 int y, y1;||| 22 cin >> y;||| 23 vector<int> c(y);||| 24 for (int i = 0; i < y; i++) cin >> c[i];||| 25 cin >> y1;||| 26 vector<int> d(y1);||| 27 for (int i = 0; i < y1; i++) cin >> d[i];||| 28 int mx1;||| 29 mx1 = max(c[y - 1] - c[0], d[y1 - 1] - d[0]);||| 30 if (mx * k > mx1 * w)||| 31 cout << mx * k << endl;||| 32 else||| 33 cout << mx1 * w << endl;||| 34 }||| 35 return 0;||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long int w, k;||| 11 cin >> w >> k;||| 12 int x, x1;||| 13 cin >> x;||| 14 vector<int> a(x);||| 15 for (int i = 0; i < x; i++) cin >> a[i];||| 16 cin >> x1;||| 17 vector<int> b(x1);||| 18 for (int i = 0; i < x1; i++) cin >> b[i];||| 19 int mx;||| 20 mx = max(a[x - 1] - a[0], b[x1 - 1] - b[0]);||| 21 int y, y1;||| 22 cin >> y;||| 23 vector<int> c(y);||| 24 for (int i = 0; i < y; i++) cin >> c[i];||| 25 cin >> y1;||| 26 vector<int> d(y1);||| 27 for (int i = 0; i < y1; i++) cin >> d[i];||| 28 int mx1;||| 29 mx1 = max(c[y - 1] - c[0], c[y1 - 1] - c[0]);||| 30 if (mx * k > mx1 * w)||| 31 cout << mx * k << endl;||| 32 else||| 33 cout << mx1 * w << endl;||| 34 }||| 35 return 0;||| 36 }||| 	29 mx1 = max(c[y - 1] - c[0], d[y1 - 1] - d[0]);
148	206	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long w, o;||| 10 cin >> w >> o;||| 11 int h1, h2, v1, v2, d1, d2, d3, d4;||| 12 cin >> h1;||| 13 vector<int> h(h1);||| 14 for (int i = 0; i < h1; i++) {||| 15 cin >> h[i];||| 16 }||| 17 d1 = h.back() - h.front();||| 18 cin >> h2;||| 19 vector<int> hh(h2);||| 20 for (int i = 0; i < h2; i++) {||| 21 cin >> hh[i];||| 22 }||| 23 d2 = hh.back() - hh.front();||| 24 cin >> v1;||| 25 vector<int> v(v1);||| 26 for (int i = 0; i < v1; i++) {||| 27 cin >> v[i];||| 28 }||| 29 d3 = v.back() - v.front();||| 30 cin >> v2;||| 31 vector<int> vv(v2);||| 32 for (int i = 0; i < v2; i++) {||| 33 cin >> vv[i];||| 34 }||| 35 d4 = vv.back() - vv.front();||| 36 long long ans1 = max(d1, d2) * o, ans2 = max(d3, d4) * w;||| 37 cout << max(ans1, ans2) << ""\n"";||| 38 }||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int w, o;||| 10 cin >> w >> o;||| 11 int h1, h2, v1, v2, d1, d2, d3, d4;||| 12 cin >> h1;||| 13 vector<int> h(h1);||| 14 for (int i = 0; i < h1; i++) {||| 15 cin >> h[i];||| 16 }||| 17 d1 = h.back() - h.front();||| 18 cin >> h2;||| 19 vector<int> hh(h2);||| 20 for (int i = 0; i < h2; i++) {||| 21 cin >> hh[i];||| 22 }||| 23 d2 = hh.back() - hh.front();||| 24 cin >> v1;||| 25 vector<int> v(v1);||| 26 for (int i = 0; i < v1; i++) {||| 27 cin >> v[i];||| 28 }||| 29 d3 = v.back() - v.front();||| 30 cin >> v2;||| 31 vector<int> vv(v2);||| 32 for (int i = 0; i < v2; i++) {||| 33 cin >> vv[i];||| 34 }||| 35 d4 = vv.back() - vv.front();||| 36 long long ans1 = max(d1, d2) * o, ans2 = max(d3, d4) * w;||| 37 cout << max(ans1, ans2) << ""\n"";||| 38 }||| 39 return 0;||| 40 }||| "	9 long long w, o;
148	151	"1 #include <bits/stdc++.h>||| 2 const long long INF = (1ll) * 1e18;||| 3 using namespace std;||| 4 void test_case() {||| 5 long long w, h;||| 6 cin >> w >> h;||| 7 long long s1 = 0, s2 = 0, s3 = 0, s4 = 0;||| 8 long long k, a;||| 9 cin >> k;||| 10 for (int j = 0; j < k; j++) {||| 11 cin >> a;||| 12 if (j == 0)||| 13 s1 -= a;||| 14 else if (j == k - 1)||| 15 s1 += a;||| 16 }||| 17 cin >> k;||| 18 for (int j = 0; j < k; j++) {||| 19 cin >> a;||| 20 if (j == 0)||| 21 s2 -= a;||| 22 else if (j == k - 1)||| 23 s2 += a;||| 24 }||| 25 cin >> k;||| 26 for (int j = 0; j < k; j++) {||| 27 cin >> a;||| 28 if (j == 0)||| 29 s3 -= a;||| 30 else if (j == k - 1)||| 31 s3 += a;||| 32 }||| 33 cin >> k;||| 34 for (int j = 0; j < k; j++) {||| 35 cin >> a;||| 36 if (j == 0)||| 37 s4 -= a;||| 38 else if (j == k - 1)||| 39 s4 += a;||| 40 }||| 41 cout << max(max(s1 * h, s2 * h), max(s3 * w, s4 * w));||| 42 }||| 43 int main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(NULL);||| 46 cout.tie(NULL);||| 47 auto start = chrono::high_resolution_clock::now();||| 48 int testno = 1;||| 49 cin >> testno;||| 50 for (int i = 1; i <= testno; i++) {||| 51 test_case();||| 52 cout << '\n';||| 53 }||| 54 auto end = chrono::high_resolution_clock::now();||| 55 double time_taken =||| 56 chrono::duration_cast<chrono::nanoseconds>(end - start).count();||| 57 time_taken *= 1e-9;||| 58 cerr << fixed << time_taken << setprecision(9) << "" sec"" << endl;||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long INF = (1ll) * 1e18;||| 3 using namespace std;||| 4 void test_case() {||| 5 long long w, h;||| 6 cin >> w >> h;||| 7 long long s1 = 0, s2 = 0, s3 = 0, s4 = 0;||| 8 long long k, a;||| 9 cin >> k;||| 10 for (int j = 0; j < k; j++) {||| 11 cin >> a;||| 12 if (j == 0)||| 13 s1 -= a;||| 14 else if (j == k - 1)||| 15 s1 += a;||| 16 }||| 17 cin >> k;||| 18 for (int j = 0; j < k; j++) {||| 19 cin >> a;||| 20 if (j == 0)||| 21 s2 -= a;||| 22 else if (j == k - 1)||| 23 s2 += a;||| 24 }||| 25 cin >> k;||| 26 for (int j = 0; j < k; j++) {||| 27 cin >> a;||| 28 if (j == 0)||| 29 s3 -= a;||| 30 else if (j == k - 1)||| 31 s3 += a;||| 32 }||| 33 cin >> k;||| 34 for (int j = 0; j < k; j++) {||| 35 cin >> a;||| 36 if (j == 0)||| 37 s4 -= a;||| 38 else if (j == k - 1)||| 39 s4 += a;||| 40 }||| 41 cout << max(max(s1 * h, s2 * h), max(s3 * w, s4 * h));||| 42 }||| 43 int main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(NULL);||| 46 cout.tie(NULL);||| 47 auto start = chrono::high_resolution_clock::now();||| 48 int testno = 1;||| 49 cin >> testno;||| 50 for (int i = 1; i <= testno; i++) {||| 51 test_case();||| 52 cout << '\n';||| 53 }||| 54 auto end = chrono::high_resolution_clock::now();||| 55 double time_taken =||| 56 chrono::duration_cast<chrono::nanoseconds>(end - start).count();||| 57 time_taken *= 1e-9;||| 58 cerr << fixed << time_taken << setprecision(9) << "" sec"" << endl;||| 59 return 0;||| 60 }||| "	41 cout << max(max(s1 * h, s2 * h), max(s3 * w, s4 * w));
148	160	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void my_dbg() { cout << endl; }||| 4 template <typename Arg, typename... Args>||| 5 void my_dbg(Arg A, Args... B) {||| 6 cout << ' ' << A;||| 7 my_dbg(B...);||| 8 }||| 9 long long inv(long long i) {||| 10 if (i == 1) return 1;||| 11 return (1000000007 - ((1000000007 / i) * inv(1000000007 % i)) % 1000000007) %||| 12 1000000007;||| 13 }||| 14 long long modmul(long long a, long long b) {||| 15 a = a % 1000000007;||| 16 b = b % 1000000007;||| 17 return (((a * b) % 1000000007) + 1000000007) % 1000000007;||| 18 }||| 19 long long modadd(long long a, long long b) {||| 20 a = a % 1000000007;||| 21 b = b % 1000000007;||| 22 return (((a + b) % 1000000007) + 1000000007) % 1000000007;||| 23 }||| 24 long long gcd(long long a, long long b) {||| 25 if (b == 0) return a;||| 26 return gcd(b, a % b);||| 27 }||| 28 long long ceil_div(long long a, long long b) {||| 29 return a % b == 0 ? a / b : a / b + 1;||| 30 }||| 31 long long power(long long a, long long b) {||| 32 a %= 1000000007;||| 33 long long res = 1;||| 34 while (b > 0) {||| 35 if (b & 1) res = res * a % 1000000007;||| 36 a = a * a % 1000000007;||| 37 b >>= 1;||| 38 }||| 39 return res;||| 40 }||| 41 const long long maxN = 1e6 + 5;||| 42 vector<bool> is_prime(maxN + 1, true);||| 43 void sieve() {||| 44 is_prime[0] = is_prime[1] = false;||| 45 for (long long i = 2; i * i <= maxN; i++) {||| 46 if (is_prime[i]) {||| 47 for (long long j = i * i; j <= maxN; j += i) is_prime[j] = false;||| 48 }||| 49 }||| 50 }||| 51 int32_t main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 long long t;||| 55 cin >> t;||| 56 while (t--) {||| 57 long long n, m;||| 58 cin >> n >> m;||| 59 long long a, b, c, d;||| 60 cin >> a;||| 61 vector<long long> v1(a);||| 62 for (long long i = 0; i < a; i++) cin >> v1[i];||| 63 cin >> b;||| 64 vector<long long> v2(b);||| 65 for (long long i = 0; i < b; i++) cin >> v2[i];||| 66 cin >> c;||| 67 vector<long long> v3(c);||| 68 for (long long i = 0; i < c; i++) cin >> v3[i];||| 69 cin >> d;||| 70 vector<long long> v4(d);||| 71 for (long long i = 0; i < d; i++) cin >> v4[i];||| 72 sort(v1.begin(), v1.end());||| 73 sort(v2.begin(), v2.end());||| 74 sort(v3.begin(), v3.end());||| 75 sort(v4.begin(), v4.end());||| 76 long long ans = max({(v1[a - 1] - v1[0]) * m, (v2[b - 1] - v2[0]) * m,||| 77 (v3[c - 1] - v3[0]) * n, (v4[d - 1] - v4[0]) * n});||| 78 cout << ans << endl;||| 79 }||| 80 return 0;||| 81 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void my_dbg() { cout << endl; }||| 4 template <typename Arg, typename... Args>||| 5 void my_dbg(Arg A, Args... B) {||| 6 cout << ' ' << A;||| 7 my_dbg(B...);||| 8 }||| 9 long long inv(long long i) {||| 10 if (i == 1) return 1;||| 11 return (1000000007 - ((1000000007 / i) * inv(1000000007 % i)) % 1000000007) %||| 12 1000000007;||| 13 }||| 14 long long modmul(long long a, long long b) {||| 15 a = a % 1000000007;||| 16 b = b % 1000000007;||| 17 return (((a * b) % 1000000007) + 1000000007) % 1000000007;||| 18 }||| 19 long long modadd(long long a, long long b) {||| 20 a = a % 1000000007;||| 21 b = b % 1000000007;||| 22 return (((a + b) % 1000000007) + 1000000007) % 1000000007;||| 23 }||| 24 long long gcd(long long a, long long b) {||| 25 if (b == 0) return a;||| 26 return gcd(b, a % b);||| 27 }||| 28 long long ceil_div(long long a, long long b) {||| 29 return a % b == 0 ? a / b : a / b + 1;||| 30 }||| 31 long long power(long long a, long long b) {||| 32 a %= 1000000007;||| 33 long long res = 1;||| 34 while (b > 0) {||| 35 if (b & 1) res = res * a % 1000000007;||| 36 a = a * a % 1000000007;||| 37 b >>= 1;||| 38 }||| 39 return res;||| 40 }||| 41 const long long maxN = 1e6 + 5;||| 42 vector<bool> is_prime(maxN + 1, true);||| 43 void sieve() {||| 44 is_prime[0] = is_prime[1] = false;||| 45 for (long long i = 2; i * i <= maxN; i++) {||| 46 if (is_prime[i]) {||| 47 for (long long j = i * i; j <= maxN; j += i) is_prime[j] = false;||| 48 }||| 49 }||| 50 }||| 51 int32_t main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 long long t;||| 55 cin >> t;||| 56 while (t--) {||| 57 long long n, m;||| 58 cin >> n >> m;||| 59 long long a, b, c, d;||| 60 cin >> a;||| 61 vector<long long> v1(a);||| 62 for (long long i = 0; i < a; i++) cin >> v1[i];||| 63 cin >> b;||| 64 vector<long long> v2(b);||| 65 for (long long i = 0; i < b; i++) cin >> v2[i];||| 66 cin >> c;||| 67 vector<long long> v3(c);||| 68 for (long long i = 0; i < c; i++) cin >> v3[i];||| 69 cin >> d;||| 70 vector<long long> v4(d);||| 71 for (long long i = 0; i < d; i++) cin >> v4[i];||| 72 sort(v1.begin(), v1.end());||| 73 sort(v2.begin(), v2.end());||| 74 sort(v3.begin(), v3.end());||| 75 sort(v4.begin(), v4.end());||| 76 long long ans = max({(v1[a - 1] - v1[0]) * m, (v2[b - 1] - v2[0]) * m,||| 77 (v3[c - 1] - v3[0]) * n, (v4[d - 1], v4[0]) * n});||| 78 cout << ans << endl;||| 79 }||| 80 return 0;||| 81 }||| 	77 (v3[c - 1] - v3[0]) * n, (v4[d - 1] - v4[0]) * n});
148	133	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int w, h, k, j, g, area = 0;||| 5 long long int t, i;||| 6 cin >> t;||| 7 for (i = 1; i <= t; i++) {||| 8 long long int max1 = 0, max2 = 0, max3 = 0, max4 = 0, min1 = 10000000,||| 9 min2 = 10000000, min3 = 10000000, min4 = 10000000;||| 10 area = 0;||| 11 cin >> w >> h;||| 12 cin >> k;||| 13 for (j = 1; j <= k; j++) {||| 14 cin >> g;||| 15 min1 = min(min1, g);||| 16 max1 = max(max1, g);||| 17 }||| 18 area = max(area, (max1 - min1) * h);||| 19 cin >> k;||| 20 for (j = 1; j <= k; j++) {||| 21 cin >> g;||| 22 min2 = min(min2, g);||| 23 max2 = max(max2, g);||| 24 }||| 25 area = max(area, (max2 - min2) * h);||| 26 cin >> k;||| 27 for (j = 1; j <= k; j++) {||| 28 cin >> g;||| 29 min3 = min(min3, g);||| 30 max3 = max(max3, g);||| 31 }||| 32 area = max(area, (max3 - min3) * w);||| 33 cin >> k;||| 34 for (j = 1; j <= k; j++) {||| 35 cin >> g;||| 36 min4 = min(min4, g);||| 37 max4 = max(max4, g);||| 38 }||| 39 area = max(area, (max4 - min4) * w);||| 40 cout << area << endl;||| 41 }||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int w, h, k, j, g, area = 0;||| 5 long long int t, i;||| 6 cin >> t;||| 7 for (i = 1; i <= t; i++) {||| 8 long long int max1 = 0, max2 = 0, max3 = 0, max4 = 0, min1 = 10000000,||| 9 min2 = 10000000, min3 = 10000000, min4 = 10000000;||| 10 area = 0;||| 11 cin >> w >> h;||| 12 cin >> k;||| 13 for (j = 1; j <= k; j++) {||| 14 cin >> g;||| 15 min1 = min(min1, g);||| 16 max1 = max(max1, g);||| 17 }||| 18 area = max(area, (max1 - min1) * h);||| 19 cin >> k;||| 20 for (j = 1; j <= k; j++) {||| 21 cin >> g;||| 22 min2 = min(min2, g);||| 23 max2 = max(max2, g);||| 24 }||| 25 area = max(area, (max2 - min2) * h);||| 26 cin >> k;||| 27 for (j = 1; j <= k; j++) {||| 28 cin >> g;||| 29 min3 = min(min3, g);||| 30 max3 = max(max3, g);||| 31 }||| 32 area = max(area, (max3 - min3) * w);||| 33 cin >> k;||| 34 for (j = 1; j <= k; j++) {||| 35 cin >> g;||| 36 min1 = min(min4, g);||| 37 max1 = max(max4, g);||| 38 }||| 39 area = max(area, (max4 - min4) * w);||| 40 cout << area << endl;||| 41 }||| 42 }||| 	36 min4 = min(min4, g);
149	317	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string s;||| 4 int n, k, t, cnt[2001];||| 5 unsigned long long x;||| 6 int main() {||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n >> k >> x;||| 10 cin >> s;||| 11 string news = """";||| 12 int len = -1;||| 13 for (int i = 0; i < n; i++) {||| 14 if (i == 0) {||| 15 news += s[i];||| 16 if (s[i] == '*') {||| 17 len++;||| 18 cnt[len] = k;||| 19 } else {||| 20 len++;||| 21 cnt[len] = 0;||| 22 }||| 23 } else {||| 24 if (s[i] == s[i - 1] && s[i] == '*') {||| 25 cnt[len] += k;||| 26 } else {||| 27 news += s[i];||| 28 if (s[i] == '*') {||| 29 len++;||| 30 cnt[len] = k;||| 31 } else {||| 32 len++;||| 33 cnt[len] = 0;||| 34 }||| 35 }||| 36 }||| 37 }||| 38 len = news.size();||| 39 unsigned long long tt = 1, vt = 0;||| 40 vector<unsigned long long> thutu;||| 41 thutu.push_back(1);||| 42 for (int i = len - 1; i >= 0; i--) {||| 43 unsigned long long prett = tt;||| 44 if (cnt[i] > 0) {||| 45 tt = tt * (cnt[i] + 1);||| 46 thutu.push_back(tt);||| 47 if (x / prett <= cnt[i]) {||| 48 vt = i;||| 49 break;||| 50 }||| 51 }||| 52 }||| 53 for (int i = 0; i < vt; i++) {||| 54 if (news[i] == 'a') {||| 55 cout << news[i];||| 56 }||| 57 }||| 58 if (thutu.size()) {||| 59 thutu.pop_back();||| 60 }||| 61 for (int i = vt; i < len; i++) {||| 62 if (news[i] == 'a') {||| 63 cout << news[i];||| 64 } else {||| 65 if (thutu.size()) {||| 66 unsigned long long giasu = thutu.back();||| 67 thutu.pop_back();||| 68 unsigned long long o = x / giasu;||| 69 if (x % giasu == 0) {||| 70 o--;||| 71 }||| 72 x -= o * giasu;||| 73 for (int j = 1; j <= o; j++) {||| 74 cout << 'b';||| 75 }||| 76 }||| 77 }||| 78 }||| 79 cout << ""\n"";||| 80 }||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string s;||| 4 int n, k, t, cnt[2001];||| 5 unsigned long long x;||| 6 int main() {||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n >> k >> x;||| 10 cin >> s;||| 11 string news = """";||| 12 int len = -1;||| 13 for (int i = 0; i < n; i++) {||| 14 if (i == 0) {||| 15 news += s[i];||| 16 if (s[i] == '*') {||| 17 len++;||| 18 cnt[len] = k;||| 19 } else {||| 20 len++;||| 21 cnt[len] = 0;||| 22 }||| 23 } else {||| 24 if (s[i] == s[i - 1] && s[i] == '*') {||| 25 cnt[len] += k;||| 26 } else {||| 27 news += s[i];||| 28 if (s[i] == '*') {||| 29 len++;||| 30 cnt[len] = k;||| 31 } else {||| 32 len++;||| 33 cnt[len] = 0;||| 34 }||| 35 }||| 36 }||| 37 }||| 38 len = news.size();||| 39 unsigned long long tt = 1, vt = 0;||| 40 vector<unsigned long long> thutu;||| 41 thutu.push_back(1);||| 42 for (int i = len - 1; i >= 0; i--) {||| 43 unsigned long long prett = tt;||| 44 if (cnt[i] > 0) {||| 45 tt = tt * (cnt[i] + 1);||| 46 thutu.push_back(tt);||| 47 if (x / prett <= cnt[i] + 1) {||| 48 vt = i;||| 49 break;||| 50 }||| 51 }||| 52 }||| 53 for (int i = 0; i < vt; i++) {||| 54 if (news[i] == 'a') {||| 55 cout << news[i];||| 56 }||| 57 }||| 58 if (thutu.size()) {||| 59 thutu.pop_back();||| 60 }||| 61 for (int i = vt; i < len; i++) {||| 62 if (news[i] == 'a') {||| 63 cout << news[i];||| 64 } else {||| 65 if (thutu.size()) {||| 66 unsigned long long giasu = thutu.back();||| 67 thutu.pop_back();||| 68 unsigned long long o = x / giasu;||| 69 if (x % giasu == 0) {||| 70 o--;||| 71 }||| 72 x -= o * giasu;||| 73 for (int j = 1; j <= o; j++) {||| 74 cout << 'b';||| 75 }||| 76 }||| 77 }||| 78 }||| 79 cout << ""\n"";||| 80 }||| 81 }||| "	47 if (x / prett <= cnt[i]) {
149	198	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1) <= 1e18))||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)
149	289	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1)) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)
149	198	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1) <= 1e18))||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)
149	289	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, k, x, tmp, f[2010], a[2010];||| 4 string s;||| 5 void solve() {||| 6 cin >> n >> x >> k >> s;||| 7 s = 'a' + s + 'a';||| 8 memset(f, 0, sizeof f);||| 9 f[n + 1] = 1;||| 10 for (long long i = n; i >= 0; i--) {||| 11 if (s[i] == 'a') {||| 12 for (long long j = i + 1; j <= n + 1; j++) {||| 13 if (s[j] == 'a') {||| 14 if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1)) <= 1e18)||| 15 f[i] = f[j] * ((j - i - 1) * x + 1);||| 16 else||| 17 f[i] = -1;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (s[i] == 'a') {||| 25 if (i != 0) cout << 'a';||| 26 for (long long j = i + 1; j <= n + 1; j++) {||| 27 if (s[j] == 'a') {||| 28 if (f[j] == -1) break;||| 29 long long num = (k - 1) / f[j];||| 30 for (long long o = 1; o <= num; o++) cout << 'b';||| 31 k = (k - 1) % f[j] + 1;||| 32 break;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << '\n';||| 38 }||| 39 signed main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 cout.tie(0);||| 43 long long _ = 1;||| 44 cin >> _;||| 45 while (_--) solve();||| 46 return 0;||| 47 }||| 	14 if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18)
149	131	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k, x;||| 5 cin >> n >> k >> x;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> num;||| 9 long long curr = 0;||| 10 for (auto i : s) {||| 11 if (i == '*') {||| 12 curr++;||| 13 } else {||| 14 if (curr != 0) {||| 15 num.push_back(curr * k + 1);||| 16 }||| 17 curr = 0;||| 18 }||| 19 }||| 20 if (curr != 0) {||| 21 num.push_back(curr * k + 1);||| 22 }||| 23 vector<long long> ans;||| 24 long long st = 1;||| 25 for (int i = 0; i < num.size(); i++) {||| 26 long double mul = 1;||| 27 for (int j = i + 1; j < num.size(); j++) mul *= num[j];||| 28 long long now;||| 29 if (mul + st - 1 >= x) {||| 30 now = 0;||| 31 } else {||| 32 now = (x - st) / (long long)mul;||| 33 st += now * mul;||| 34 }||| 35 ans.push_back(now);||| 36 }||| 37 long long u = 0;||| 38 string news = """";||| 39 long long check = 0;||| 40 long long i = 0;||| 41 while (i < n) {||| 42 if (s[i] == 'a') {||| 43 news += 'a';||| 44 i++;||| 45 } else {||| 46 for (int j = 0; j < ans[u]; j++) {||| 47 news += 'b';||| 48 }||| 49 u++;||| 50 while (s[i] == '*') {||| 51 i++;||| 52 }||| 53 }||| 54 }||| 55 cout << news << '\n';||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(0);||| 60 cout.tie(0);||| 61 long long t;||| 62 cin >> t;||| 63 while (t--) {||| 64 solve();||| 65 }||| 66 return 0;||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k, x;||| 5 cin >> n >> k >> x;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> num;||| 9 long long curr = 0;||| 10 for (auto i : s) {||| 11 if (i == '*') {||| 12 curr++;||| 13 } else {||| 14 if (curr != 0) {||| 15 num.push_back(curr * k + 1);||| 16 }||| 17 curr = 0;||| 18 }||| 19 }||| 20 if (curr != 0) {||| 21 num.push_back(curr * k + 1);||| 22 }||| 23 vector<long long> ans;||| 24 long long st = 1;||| 25 for (int i = 0; i < num.size(); i++) {||| 26 long double mul = 1;||| 27 for (int j = i + 1; j < num.size(); j++) mul *= num[j];||| 28 long long now;||| 29 if (mul + st >= x) {||| 30 now = 0;||| 31 } else {||| 32 now = (x - st) / (long long)mul;||| 33 st += now * mul;||| 34 }||| 35 ans.push_back(now);||| 36 }||| 37 long long u = 0;||| 38 string news = """";||| 39 long long check = 0;||| 40 long long i = 0;||| 41 while (i < n) {||| 42 if (s[i] == 'a') {||| 43 news += 'a';||| 44 i++;||| 45 } else {||| 46 for (int j = 0; j < ans[u]; j++) {||| 47 news += 'b';||| 48 }||| 49 u++;||| 50 while (s[i] == '*') {||| 51 i++;||| 52 }||| 53 }||| 54 }||| 55 cout << news << '\n';||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(0);||| 60 cout.tie(0);||| 61 long long t;||| 62 cin >> t;||| 63 while (t--) {||| 64 solve();||| 65 }||| 66 return 0;||| 67 }||| "	29 if (mul + st - 1 >= x) {
150	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1000000007;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 vector<int> arr(n);||| 8 for (int i = 0; i < n; ++i) cin >> arr[i];||| 9 sort(arr.begin(), arr.end());||| 10 set<int> s;||| 11 for (int num : arr) s.insert(num);||| 12 if (n == 1)||| 13 cout << arr[0] / 3 + (arr[0] % 3 == 0 ? 0 : 1) << endl;||| 14 else {||| 15 if (arr[0] == 1) {||| 16 if (arr[1] == 2) {||| 17 if (arr[n - 1] % 3 == 0)||| 18 cout << arr[n - 1] / 3 + 1 << endl;||| 19 else||| 20 cout << arr[n - 1] / 3 + 2 << endl;||| 21 } else {||| 22 bool two = false;||| 23 for (int num : arr)||| 24 if (num % 3 == 2) {||| 25 two = true;||| 26 break;||| 27 }||| 28 if (two && arr[n - 1] % 3 == 0)||| 29 cout << arr[n - 1] / 3 + 1 << endl;||| 30 else if (two)||| 31 cout << arr[n - 1] / 3 + 2 << endl;||| 32 else||| 33 cout << arr[n - 1] / 3 + 1 << endl;||| 34 }||| 35 } else {||| 36 set<int> mods;||| 37 for (int num : arr)||| 38 if (num % 3) mods.insert(num % 3);||| 39 if (mods.size() == 0)||| 40 cout << arr[n - 1] / 3 << endl;||| 41 else if (mods.size() == 1)||| 42 cout << arr[n - 1] / 3 + 1 << endl;||| 43 else if ((!s.count(arr[n - 1] / 3 * 3) && arr[n - 1] % 3 == 1) ||||| 44 arr[n - 1] % 3 == 0)||| 45 cout << arr[n - 1] / 3 + 1 << endl;||| 46 else||| 47 cout << arr[n - 1] / 3 + 2 << endl;||| 48 }||| 49 }||| 50 }||| 51 int main() {||| 52 int t;||| 53 cin >> t;||| 54 for (int i = 0; i < t; ++i) solve();||| 55 return 0;||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1000000007;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 vector<int> arr(n);||| 8 for (int i = 0; i < n; ++i) cin >> arr[i];||| 9 sort(arr.begin(), arr.end());||| 10 set<int> s;||| 11 for (int num : arr) s.insert(num);||| 12 if (n == 1)||| 13 cout << arr[0] / 3 + (arr[0] % 3 == 0 ? 0 : 1) << endl;||| 14 else {||| 15 if (arr[0] == 1) {||| 16 if (arr[1] == 2) {||| 17 if (arr[n - 1] % 3 == 0)||| 18 cout << arr[n - 1] / 3 + 1 << endl;||| 19 else||| 20 cout << arr[n - 1] / 3 + 2 << endl;||| 21 } else {||| 22 bool two = false;||| 23 for (int num : arr)||| 24 if (num % 3 == 2) {||| 25 two = true;||| 26 break;||| 27 }||| 28 if (two && arr[n - 1] % 3 == 0)||| 29 cout << arr[n - 1] / 3 + 1 << endl;||| 30 else if (two)||| 31 cout << arr[n - 1] / 3 + 2 << endl;||| 32 else||| 33 cout << arr[n - 1] / 3 + 1 << endl;||| 34 }||| 35 } else {||| 36 set<int> mods;||| 37 for (int num : arr)||| 38 if (num % 3) mods.insert(num % 3);||| 39 if (mods.size() == 0)||| 40 cout << arr[n - 1] / 3 << endl;||| 41 else if (mods.size() == 1)||| 42 cout << arr[n - 1] / 3 + 1 << endl;||| 43 else if ((!s.count(arr[n - 1] / 3) && arr[n - 1] % 3 == 1) ||||| 44 arr[n - 1] % 3 == 0)||| 45 cout << arr[n - 1] / 3 + 1 << endl;||| 46 else||| 47 cout << arr[n - 1] / 3 + 2 << endl;||| 48 }||| 49 }||| 50 }||| 51 int main() {||| 52 int t;||| 53 cin >> t;||| 54 for (int i = 0; i < t; ++i) solve();||| 55 return 0;||| 56 }||| 	43 else if ((!s.count(arr[n - 1] / 3 * 3) && arr[n - 1] % 3 == 1) ||
150	121	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char ch[1010000];||| 4 long long x[1010000];||| 5 long long g[10];||| 6 vector<long long> vt, ans;||| 7 signed main() {||| 8 long long T, n, m, cnt, num, k;||| 9 scanf(""%lld"", &T);||| 10 while (T--) {||| 11 scanf(""%lld"", &n);||| 12 long long mmax = 0;||| 13 for (long long i = 1; i <= n; i++) {||| 14 scanf(""%lld"", &x[i]);||| 15 g[x[i] % 3]++;||| 16 mmax = max(x[i], mmax);||| 17 }||| 18 if (mmax == 1) {||| 19 printf(""1\n"");||| 20 continue;||| 21 } else if (mmax == 2) {||| 22 long long flag = 0;||| 23 for (long long i = 1; i <= n; i++) {||| 24 if (x[i] == 1) {||| 25 flag = 1;||| 26 }||| 27 }||| 28 if (flag) {||| 29 printf(""2\n"");||| 30 } else {||| 31 printf(""1\n"");||| 32 }||| 33 continue;||| 34 } else if (mmax == 3) {||| 35 long long flag = 0;||| 36 for (long long i = 1; i <= n; i++) {||| 37 if (x[i] != 3) {||| 38 flag = 1;||| 39 }||| 40 }||| 41 if (flag) {||| 42 printf(""2\n"");||| 43 } else {||| 44 printf(""1\n"");||| 45 }||| 46 continue;||| 47 }||| 48 long long t = mmax % 3;||| 49 long long cnt = (mmax + 2) / 3;||| 50 if (t == 0) {||| 51 long long flag = 0;||| 52 for (long long i = 1; i <= n; i++) {||| 53 if (x[i] % 3 != 0) {||| 54 flag = 1;||| 55 break;||| 56 }||| 57 }||| 58 if (flag) {||| 59 cnt++;||| 60 }||| 61 } else if (t == 1) {||| 62 long long flag = 0;||| 63 for (long long i = 1; i <= n; i++) {||| 64 if (x[i] % 3 == 2) {||| 65 flag = 1;||| 66 break;||| 67 }||| 68 }||| 69 if (flag) {||| 70 for (long long i = 1; i <= n; i++) {||| 71 if (x[i] == 1 || x[i] == mmax - 1) {||| 72 flag = 0;||| 73 break;||| 74 }||| 75 }||| 76 if (flag == 0) {||| 77 cnt++;||| 78 }||| 79 }||| 80 } else if (t == 2) {||| 81 long long flag = 0;||| 82 for (long long i = 1; i <= n; i++) {||| 83 if (x[i] % 3 == 1) {||| 84 flag = 1;||| 85 break;||| 86 }||| 87 }||| 88 if (flag) {||| 89 cnt++;||| 90 }||| 91 }||| 92 printf(""%lld\n"", cnt);||| 93 }||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char ch[1010000];||| 4 long long x[1010000];||| 5 long long g[10];||| 6 vector<long long> vt, ans;||| 7 signed main() {||| 8 long long T, n, m, cnt, num, k;||| 9 scanf(""%lld"", &T);||| 10 while (T--) {||| 11 scanf(""%lld"", &n);||| 12 long long mmax = 0;||| 13 for (long long i = 1; i <= n; i++) {||| 14 scanf(""%lld"", &x[i]);||| 15 g[x[i] % 3]++;||| 16 mmax = max(x[i], mmax);||| 17 }||| 18 if (mmax == 1) {||| 19 printf(""1\n"");||| 20 continue;||| 21 } else if (mmax == 2) {||| 22 long long flag = 0;||| 23 for (long long i = 1; i <= n; i++) {||| 24 if (x[i] == 1) {||| 25 flag = 1;||| 26 }||| 27 }||| 28 if (flag) {||| 29 printf(""2\n"");||| 30 } else {||| 31 printf(""1\n"");||| 32 }||| 33 continue;||| 34 } else if (mmax == 3) {||| 35 long long flag = 0;||| 36 for (long long i = 1; i <= n; i++) {||| 37 if (x[i] != 3) {||| 38 flag = 1;||| 39 }||| 40 }||| 41 if (flag) {||| 42 printf(""2\n"");||| 43 } else {||| 44 printf(""1\n"");||| 45 }||| 46 continue;||| 47 }||| 48 long long t = mmax % 3;||| 49 long long cnt = (mmax + 2) / 3;||| 50 if (t == 0) {||| 51 long long flag = 0;||| 52 for (long long i = 1; i <= n; i++) {||| 53 if (x[i] % 3 != 0) {||| 54 flag = 1;||| 55 break;||| 56 }||| 57 }||| 58 if (flag) {||| 59 cnt++;||| 60 }||| 61 } else if (t == 1) {||| 62 long long flag = 0;||| 63 for (long long i = 1; i <= n; i++) {||| 64 if (x[i] % 3 == 2) {||| 65 flag = 1;||| 66 break;||| 67 }||| 68 }||| 69 if (flag) {||| 70 for (long long i = 1; i <= n; i++) {||| 71 if (x[i] == 1 || x[i] == mmax - 1) {||| 72 flag = 0;||| 73 break;||| 74 }||| 75 }||| 76 if (flag == 0) {||| 77 cnt++;||| 78 }||| 79 }||| 80 } else if (t == 2) {||| 81 long long flag = 0;||| 82 for (long long i = 1; i <= n; i++) {||| 83 if (x[i] % 3 != 2) {||| 84 flag = 1;||| 85 break;||| 86 }||| 87 }||| 88 if (flag) {||| 89 cnt++;||| 90 }||| 91 }||| 92 printf(""%lld\n"", cnt);||| 93 }||| 94 return 0;||| 95 }||| "	83 if (x[i] % 3 == 1) {
150	9	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int tests;||| 5 cin >> tests;||| 6 for (int idk = 0; idk < tests; idk++) {||| 7 long long n;||| 8 cin >> n;||| 9 long long a[n], one = 0, md1 = 0, md2 = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 if (a[i] == 1) one = 1;||| 13 if (a[i] % 3 == 1) md1 = 1;||| 14 if (a[i] % 3 == 2) md2 = 1;||| 15 }||| 16 std::sort(a, a + n);||| 17 int dif1 = 0;||| 18 for (int i = 0; i < n; i++)||| 19 if (a[n - 1] - a[i] == 1) dif1 = 1;||| 20 long long ans[4];||| 21 ans[1] = 0;||| 22 ans[2] = 0;||| 23 if (md1) ans[1] = 1;||| 24 if (md2) ans[2] = 1;||| 25 if ((md1) && (md2) && (one == 0) && (a[n - 1] % 3 == 1) && (dif1 == 0)) {||| 26 ans[1] = 0;||| 27 ans[2] = 2;||| 28 }||| 29 long long dif = ans[1] + ans[2] * 2;||| 30 ans[3] = 0;||| 31 for (int i = 0; i < n; i++) {||| 32 ans[3] = max(ans[3], (a[i] + 2 - dif) / 3);||| 33 }||| 34 cout << ans[1] + ans[2] + ans[3] << endl;||| 35 }||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int tests;||| 5 cin >> tests;||| 6 for (int idk = 0; idk < tests; idk++) {||| 7 long long n;||| 8 cin >> n;||| 9 long long a[n], one = 0, md1 = 0, md2 = 0;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 if (a[i] == 1) one = 1;||| 13 if (a[i] % 3 == 1) md1 = 1;||| 14 if (a[i] % 3 == 2) md2 = 1;||| 15 }||| 16 std::sort(a, a + n);||| 17 int dif1 = 0;||| 18 for (int i = 0; i < n; i++)||| 19 if (a[n - 1] - a[i] == 1) dif1 = 1;||| 20 long long ans[4];||| 21 ans[1] = 0;||| 22 ans[2] = 0;||| 23 if (md1) ans[1] = 1;||| 24 if (md2) ans[2] = 1;||| 25 if ((md1) && (md2) && (one == 0) && (a[n - 1] % 3 == 1) && (dif1 = 0)) {||| 26 ans[1] = 0;||| 27 ans[2] = 2;||| 28 }||| 29 long long dif = ans[1] + ans[2] * 2;||| 30 ans[3] = 0;||| 31 for (int i = 0; i < n; i++) {||| 32 ans[3] = max(ans[3], (a[i] + 2 - dif) / 3);||| 33 }||| 34 cout << ans[1] + ans[2] + ans[3] << endl;||| 35 }||| 36 }||| 	25 if ((md1) && (md2) && (one == 0) && (a[n - 1] % 3 == 1) && (dif1 == 0)) {
150	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int getCases() {||| 5 int cases = -1;||| 6 enum InputType : int {||| 7 SingleInput = 1,||| 8 MultipleInput = 2,||| 9 NotSet = 0,||| 10 };||| 11 InputType inputType = MultipleInput;||| 12 if (inputType == SingleInput) {||| 13 cases = 1;||| 14 } else if (inputType == MultipleInput) {||| 15 scanf(""%d"", &cases);||| 16 } else {||| 17 assert(false && ""fix the function"");||| 18 }||| 19 return cases;||| 20 }||| 21 int n;||| 22 int ar[105];||| 23 int big;||| 24 void Input() {||| 25 big = 0;||| 26 scanf(""%d"", &n);||| 27 for (int i = 0; i < n; ++i) {||| 28 scanf(""%d"", &ar[i]);||| 29 big = max(big, ar[i]);||| 30 }||| 31 }||| 32 int main() {||| 33 int cases = getCases();||| 34 while (cases--) {||| 35 Input();||| 36 int ans = INT_MAX;||| 37 for (int a = 0; a <= 3; ++a) {||| 38 for (int b = 0; b <= 3; ++b) {||| 39 int c = (big - a - 2 * b + 2) / 3;||| 40 int good = true;||| 41 for (int i = 0; i < n; ++i) {||| 42 int r = ceil((double)ar[i] / 3.0);||| 43 if (ar[i] % 3 == 0) {||| 44 if (c >= r) {||| 45 } else if (c >= r - 1 && ((a >= 1 && b >= 1) || a >= 3)) {||| 46 } else {||| 47 good = false;||| 48 }||| 49 } else if (ar[i] % 3 == 1) {||| 50 if (c >= r - 1 && a >= 1) {||| 51 } else if (ar[i] > 3 && c >= r - 2 && b >= 2) {||| 52 } else {||| 53 good = false;||| 54 }||| 55 } else if (ar[i] % 3 == 2) {||| 56 if (c >= r - 1 && (a >= 2 || b >= 1)) {||| 57 } else {||| 58 good = false;||| 59 }||| 60 }||| 61 }||| 62 if (good) {||| 63 ans = min(ans, a + b + c);||| 64 }||| 65 }||| 66 }||| 67 printf(""%d\n"", ans);||| 68 }||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int getCases() {||| 5 int cases = -1;||| 6 enum InputType : int {||| 7 SingleInput = 1,||| 8 MultipleInput = 2,||| 9 NotSet = 0,||| 10 };||| 11 InputType inputType = MultipleInput;||| 12 if (inputType == SingleInput) {||| 13 cases = 1;||| 14 } else if (inputType == MultipleInput) {||| 15 scanf(""%d"", &cases);||| 16 } else {||| 17 assert(false && ""fix the function"");||| 18 }||| 19 return cases;||| 20 }||| 21 int n;||| 22 int ar[105];||| 23 int big;||| 24 void Input() {||| 25 big = 0;||| 26 scanf(""%d"", &n);||| 27 for (int i = 0; i < n; ++i) {||| 28 scanf(""%d"", &ar[i]);||| 29 big = max(big, ar[i]);||| 30 }||| 31 }||| 32 int main() {||| 33 int cases = getCases();||| 34 while (cases--) {||| 35 Input();||| 36 int ans = INT_MAX;||| 37 for (int a = 0; a <= 3; ++a) {||| 38 for (int b = 0; b <= 3; ++b) {||| 39 int c = (big - a - 2 * b) / 3;||| 40 int good = true;||| 41 for (int i = 0; i < n; ++i) {||| 42 int r = ceil((double)ar[i] / 3.0);||| 43 if (ar[i] % 3 == 0) {||| 44 if (c >= r) {||| 45 } else if (c >= r - 1 && ((a >= 1 && b >= 1) || a >= 3)) {||| 46 } else {||| 47 good = false;||| 48 }||| 49 } else if (ar[i] % 3 == 1) {||| 50 if (c >= r - 1 && a >= 1) {||| 51 } else if (ar[i] > 3 && c >= r - 2 && b >= 2) {||| 52 } else {||| 53 good = false;||| 54 }||| 55 } else if (ar[i] % 3 == 2) {||| 56 if (c >= r - 1 && (a >= 2 || b >= 1)) {||| 57 } else {||| 58 good = false;||| 59 }||| 60 }||| 61 }||| 62 if (good) {||| 63 ans = min(ans, a + b + c);||| 64 }||| 65 }||| 66 }||| 67 printf(""%d\n"", ans);||| 68 }||| 69 }||| "	39 int c = (big - a - 2 * b + 2) / 3;
151	154	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 t = 1;||| 8 while (t--) {||| 9 long long q;||| 10 vector<vector<long long>> vec;||| 11 vector<long long> actual(500007);||| 12 for (long long i = 1; i <= 500005; i++) {||| 13 actual[i] = i;||| 14 }||| 15 vector<long long> ans;||| 16 cin >> q;||| 17 long long n = q;||| 18 while (q--) {||| 19 long long x;||| 20 cin >> x;||| 21 if (x == 1) {||| 22 long long y;||| 23 cin >> y;||| 24 vec.push_back({x, y});||| 25 } else {||| 26 long long y1, z1;||| 27 cin >> y1 >> z1;||| 28 vec.push_back({x, y1, z1});||| 29 }||| 30 }||| 31 for (long long i = n - 1; i >= 0; i--) {||| 32 if (vec[i][0] == 1) {||| 33 ans.push_back(actual[vec[i][1]]);||| 34 } else {||| 35 actual[vec[i][1]] = actual[vec[i][2]];||| 36 }||| 37 }||| 38 reverse(ans.begin(), ans.end());||| 39 for (auto x : ans) {||| 40 cout << x << "" "";||| 41 }||| 42 cout << endl;||| 43 }||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 t = 1;||| 8 while (t--) {||| 9 long long q;||| 10 vector<vector<long long>> vec;||| 11 vector<long long> actual(500001);||| 12 for (long long i = 1; i < 500000; i++) {||| 13 actual[i] = i;||| 14 }||| 15 vector<long long> ans;||| 16 cin >> q;||| 17 long long n = q;||| 18 while (q--) {||| 19 long long x;||| 20 cin >> x;||| 21 if (x == 1) {||| 22 long long y;||| 23 cin >> y;||| 24 vec.push_back({x, y});||| 25 } else {||| 26 long long y1, z1;||| 27 cin >> y1 >> z1;||| 28 vec.push_back({x, y1, z1});||| 29 }||| 30 }||| 31 for (long long i = n - 1; i >= 0; i--) {||| 32 if (vec[i][0] == 1) {||| 33 ans.push_back(actual[vec[i][1]]);||| 34 } else {||| 35 actual[vec[i][1]] = actual[vec[i][2]];||| 36 }||| 37 }||| 38 reverse(ans.begin(), ans.end());||| 39 for (auto x : ans) {||| 40 cout << x << "" "";||| 41 }||| 42 cout << endl;||| 43 }||| 44 }||| "	11 vector<long long> actual(500007);
152	43	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> v;||| 7 vector<long long> ans(n, 0);||| 8 for (long long i = 0; i < n; i++) {||| 9 long long x;||| 10 cin >> x;||| 11 v.push_back(x);||| 12 }||| 13 vector<pair<long long, long long> > p[2];||| 14 p[0].push_back(pair<long long, long long>(-1, LLONG_MIN));||| 15 p[1].push_back(pair<long long, long long>(-1, LLONG_MIN));||| 16 for (long long i = 1; i < n; i++) {||| 17 long long x = v[i];||| 18 long long y = -1 * v[i];||| 19 pair<long long, long long> a = p[0][i - 1];||| 20 pair<long long, long long> b = p[1][i - 1];||| 21 pair<long long, long long> a0(2, LLONG_MAX);||| 22 pair<long long, long long> a1(2, LLONG_MAX);||| 23 if (a.first != 2) {||| 24 if (v[i - 1] < x) {||| 25 if (a0.second > a.second) {||| 26 a0 = pair<long long, long long>(0, a.second);||| 27 }||| 28 }||| 29 if (a.second < x) {||| 30 if (a0.second > v[i - 1]) {||| 31 a0 = pair<long long, long long>(0, v[i - 1]);||| 32 }||| 33 }||| 34 if (v[i - 1] < y) {||| 35 if (a1.second > a.second) {||| 36 a1 = pair<long long, long long>(0, a.second);||| 37 }||| 38 }||| 39 if (a.second < y) {||| 40 if (a1.second > v[i - 1]) {||| 41 a1 = pair<long long, long long>(0, v[i - 1]);||| 42 }||| 43 }||| 44 }||| 45 if (b.first != 2) {||| 46 if (-1 * v[i - 1] < x) {||| 47 if (a0.second > b.second) {||| 48 a0 = pair<long long, long long>(1, b.second);||| 49 }||| 50 }||| 51 if (b.second < x) {||| 52 if (a0.second > -1 * v[i - 1]) {||| 53 a0 = pair<long long, long long>(1, -1 * v[i - 1]);||| 54 }||| 55 }||| 56 if (-1 * v[i - 1] < y) {||| 57 if (a1.second > b.second) {||| 58 a1 = pair<long long, long long>(1, b.second);||| 59 }||| 60 }||| 61 if (b.second < y) {||| 62 if (a1.second > -1 * v[i - 1]) {||| 63 a1 = pair<long long, long long>(1, -1 * v[i - 1]);||| 64 }||| 65 }||| 66 }||| 67 p[0].push_back(a0);||| 68 p[1].push_back(a1);||| 69 }||| 70 if (p[0][n - 1].first != 2) {||| 71 ans[n - 1] = v[n - 1];||| 72 long long c = 0;||| 73 for (int i = n - 2; i >= 0; i--) {||| 74 c = p[c][i + 1].first;||| 75 if (c == 0) {||| 76 ans[i] = v[i];||| 77 } else {||| 78 ans[i] = -1 * v[i];||| 79 }||| 80 }||| 81 } else if (p[1][n - 1].first != 2) {||| 82 ans[n - 1] = -1 * v[n - 1];||| 83 long long c = 1;||| 84 for (int i = n - 2; i >= 0; i--) {||| 85 c = p[c][i + 1].first;||| 86 if (c == 0) {||| 87 ans[i] = v[i];||| 88 } else {||| 89 ans[i] = -1 * v[i];||| 90 }||| 91 }||| 92 } else {||| 93 cout << ""NO\n"";||| 94 return;||| 95 }||| 96 cout << ""YES\n"";||| 97 for (long long i = 0; i < n; i++) {||| 98 cout << ans[i] << "" "";||| 99 }||| 100 cout << ""\n"";||| 101 }||| 102 int main() {||| 103 int n;||| 104 cin >> n;||| 105 while (n--) {||| 106 solve();||| 107 }||| 108 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> v;||| 7 vector<long long> ans(n, 0);||| 8 for (long long i = 0; i < n; i++) {||| 9 long long x;||| 10 cin >> x;||| 11 v.push_back(x);||| 12 }||| 13 vector<pair<long long, long long> > p[2];||| 14 p[0].push_back(pair<long long, long long>(-1, LLONG_MIN));||| 15 p[1].push_back(pair<long long, long long>(-1, LLONG_MIN));||| 16 for (long long i = 1; i < n; i++) {||| 17 long long x = v[i];||| 18 long long y = -1 * v[i];||| 19 pair<long long, long long> a = p[0][i - 1];||| 20 pair<long long, long long> b = p[1][i - 1];||| 21 pair<long long, long long> a0(2, LLONG_MAX);||| 22 pair<long long, long long> a1(2, LLONG_MAX);||| 23 if (a.first != 2) {||| 24 if (v[i - 1] < x) {||| 25 if (a0.second > a.second) {||| 26 a0 = pair<long long, long long>(0, a.second);||| 27 }||| 28 }||| 29 if (a.second < x) {||| 30 if (a0.second > v[i - 1]) {||| 31 a0 = pair<long long, long long>(0, v[i - 1]);||| 32 }||| 33 }||| 34 if (v[i - 1] < y) {||| 35 if (a1.second > a.second) {||| 36 a1 = pair<long long, long long>(0, a.second);||| 37 }||| 38 }||| 39 if (a.second < y) {||| 40 if (a1.second > v[i - 1]) {||| 41 a1 = pair<long long, long long>(0, v[i - 1]);||| 42 }||| 43 }||| 44 }||| 45 if (b.first != 2) {||| 46 if (-1 * v[i - 1] < x) {||| 47 if (a0.second > b.second) {||| 48 a0 = pair<long long, long long>(1, b.second);||| 49 }||| 50 }||| 51 if (a.second < x) {||| 52 if (a0.second > -1 * v[i - 1]) {||| 53 a0 = pair<long long, long long>(1, -1 * v[i - 1]);||| 54 }||| 55 }||| 56 if (-1 * v[i - 1] < y) {||| 57 if (a1.second > b.second) {||| 58 a1 = pair<long long, long long>(1, b.second);||| 59 }||| 60 }||| 61 if (a.second < y) {||| 62 if (a1.second > -1 * v[i - 1]) {||| 63 a1 = pair<long long, long long>(1, -1 * v[i - 1]);||| 64 }||| 65 }||| 66 }||| 67 p[0].push_back(a0);||| 68 p[1].push_back(a1);||| 69 }||| 70 if (p[0][n - 1].first != 2) {||| 71 ans[n - 1] = v[n - 1];||| 72 long long c = 0;||| 73 for (int i = n - 2; i >= 0; i--) {||| 74 c = p[c][i + 1].first;||| 75 if (c == 0) {||| 76 ans[i] = v[i];||| 77 } else {||| 78 ans[i] = -1 * v[i];||| 79 }||| 80 }||| 81 } else if (p[1][n - 1].first != 2) {||| 82 ans[n - 1] = -1 * v[n - 1];||| 83 long long c = 1;||| 84 for (int i = n - 2; i >= 0; i--) {||| 85 c = p[c][i + 1].first;||| 86 if (c == 0) {||| 87 ans[i] = v[i];||| 88 } else {||| 89 ans[i] = -1 * v[i];||| 90 }||| 91 }||| 92 } else {||| 93 cout << ""NO\n"";||| 94 return;||| 95 }||| 96 cout << ""YES\n"";||| 97 for (long long i = 0; i < n; i++) {||| 98 cout << ans[i] << "" "";||| 99 }||| 100 cout << ""\n"";||| 101 }||| 102 int main() {||| 103 int n;||| 104 cin >> n;||| 105 while (n--) {||| 106 solve();||| 107 }||| 108 }||| "	51 if (b.second < x) {
152	53	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int p[1000005], dp[1000005][2][2], n;||| 4 struct Node {||| 5 int i, j, k;||| 6 } last[1000005][2][2];||| 7 void Min(int &a, int b, Node c, Node &d) {||| 8 if (a > b) a = b, d = c;||| 9 }||| 10 void Main() {||| 11 scanf(""%d"", &n);||| 12 for (int i = 1; i <= n; ++i) scanf(""%d"", &p[i]);||| 13 for (int i = 0; i <= n; ++i)||| 14 for (int j = 0; j < 2; ++j)||| 15 for (int k = 0; k < 2; ++k) dp[i][j][k] = (int)1e9;||| 16 dp[1][0][0] = -(int)1e9;||| 17 dp[1][0][1] = -(int)1e9;||| 18 for (int i = 1; i < n; ++i)||| 19 for (int j = 0; j < 2; ++j)||| 20 for (int k = 0; k < 2; ++k) {||| 21 int a, b;||| 22 if (j == 0) a = (k == 0 ? -p[i] : p[i]), b = dp[i][j][k];||| 23 if (j == 1) a = dp[i][j][k], b = (k == 0 ? -p[i] : p[i]);||| 24 if (p[i + 1] > a)||| 25 Min(dp[i + 1][0][1], b, (Node){i, j, k}, last[i + 1][0][1]);||| 26 else if (p[i + 1] > b)||| 27 Min(dp[i + 1][1][1], a, (Node){i, j, k}, last[i + 1][1][1]);||| 28 if (-p[i + 1] > a)||| 29 Min(dp[i + 1][0][0], b, (Node){i, j, k}, last[i + 1][0][0]);||| 30 else if (-p[i + 1] > b)||| 31 Min(dp[i + 1][1][0], a, (Node){i, j, k}, last[i + 1][1][0]);||| 32 }||| 33 int nj = -1, nk = -1;||| 34 for (int j = 0; j < 2; ++j)||| 35 for (int k = 0; k < 2; ++k)||| 36 if (dp[n][j][k] < (int)1e9) {||| 37 nj = j;||| 38 nk = k;||| 39 }||| 40 if (nj == -1) {||| 41 puts(""NO"");||| 42 return;||| 43 }||| 44 for (int i = n; i >= 1; --i) {||| 45 if (!nk) p[i] = -p[i];||| 46 int aj = last[i][nj][nk].j, ak = last[i][nj][nk].k;||| 47 nj = aj;||| 48 nk = ak;||| 49 }||| 50 puts(""YES"");||| 51 for (int i = 1; i <= n; ++i) printf(""%d%c"", p[i], (i == n ? '\n' : ' '));||| 52 }||| 53 int main() {||| 54 int T;||| 55 scanf(""%d"", &T);||| 56 for (; T--;) Main();||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int p[1000005], dp[1000005][2][2], n;||| 4 struct Node {||| 5 int i, j, k;||| 6 } last[1000005][2][2];||| 7 void Min(int &a, int b, Node c, Node &d) {||| 8 if (a > b) a = b, d = c;||| 9 }||| 10 void Main() {||| 11 scanf(""%d"", &n);||| 12 for (int i = 1; i <= n; ++i) scanf(""%d"", &p[i]);||| 13 for (int i = 0; i <= n; ++i)||| 14 for (int j = 0; j < 2; ++j)||| 15 for (int k = 0; k < 2; ++k) dp[i][j][k] = (int)1e9;||| 16 dp[1][0][0] = -(int)1e9;||| 17 dp[1][0][1] = -(int)1e9;||| 18 for (int i = 1; i < n; ++i)||| 19 for (int j = 0; j < 2; ++j)||| 20 for (int k = 0; k < 2; ++k) {||| 21 int a, b;||| 22 if (j == 0) a = (k == 0 ? -p[i] : p[i]), b = dp[i][j][k];||| 23 if (j == 1) a = dp[i][j][k], b = (k == 0 ? -p[i] : p[i]);||| 24 if (p[i + 1] > a)||| 25 Min(dp[i + 1][0][1], b, (Node){i, j, k}, last[i + 1][0][1]);||| 26 else if (p[i + 1] > b)||| 27 Min(dp[i + 1][1][1], a, (Node){i, j, k}, last[i + 1][1][1]);||| 28 if (-p[i + 1] > a)||| 29 Min(dp[i + 1][0][0], b, (Node){i, j, k}, last[i + 1][0][0]);||| 30 else if (-p[i + 1] > b)||| 31 Min(dp[i + 1][1][0], a, (Node){i, j, k}, last[i + 1][1][0]);||| 32 }||| 33 int nj = -1, nk = -1;||| 34 for (int j = 0; j < 2; ++j)||| 35 for (int k = 0; k < 2; ++k)||| 36 if (dp[n][j][k] < (int)1e9) {||| 37 nj = j;||| 38 nk = k;||| 39 }||| 40 if (nj == -1) {||| 41 puts(""NO"");||| 42 return;||| 43 }||| 44 for (int i = n; i >= 1; --i) {||| 45 if (!nk) p[i] = -p[i];||| 46 int aj = last[i][nj][nk].k, ak = last[i][nj][nk].k;||| 47 nj = aj;||| 48 nk = ak;||| 49 }||| 50 puts(""YES"");||| 51 for (int i = 1; i <= n; ++i) printf(""%d%c"", p[i], (i == n ? '\n' : ' '));||| 52 }||| 53 int main() {||| 54 int T;||| 55 scanf(""%d"", &T);||| 56 for (; T--;) Main();||| 57 }||| "	46 int aj = last[i][nj][nk].j, ak = last[i][nj][nk].k;
152	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n + 1, 0);||| 12 for (int i = 1; i <= n; i++) cin >> a[i];||| 13 const int inf = (1 << 30);||| 14 vector<array<int, 2>> dp(n + 1, {inf, inf});||| 15 vector<array<int, 2>> p(n + 1, {-1, -1});||| 16 dp[1] = {-inf, -inf};||| 17 auto upd = [&](int i, int j, int lim, int u) {||| 18 if (lim < dp[i][j]) {||| 19 dp[i][j] = lim;||| 20 p[i][j] = u;||| 21 }||| 22 };||| 23 for (int i = 1; i < n; i++) {||| 24 for (int j = 0; j < 2; j++) {||| 25 if (dp[i][j] == inf) continue;||| 26 int x = (j ? -a[i] : a[i]);||| 27 for (int k = 0; k < 2; k++) {||| 28 int y = (k ? -a[i + 1] : a[i + 1]);||| 29 if (x < y) upd(i + 1, k, dp[i][j], j);||| 30 if (dp[i][j] < y) upd(i + 1, k, x, j);||| 31 }||| 32 }||| 33 }||| 34 if (dp[n][0] != inf) {||| 35 int s = 0;||| 36 cout << ""YES\n"";||| 37 vector<int> res(n + 1, 0);||| 38 for (int i = n; i >= 1; i--) {||| 39 res[i] = (s ? -a[i] : a[i]);||| 40 s = p[i][s];||| 41 }||| 42 for (int i = 1; i <= n; i++) cout << res[i] << "" \n""[i == n];||| 43 } else||| 44 cout << ""NO\n"";||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n + 1, 0);||| 12 for (int i = 1; i <= n; i++) cin >> a[i];||| 13 const int inf = (1 << 30);||| 14 vector<array<int, 2>> dp(n + 1, {inf, inf});||| 15 vector<array<int, 2>> p(n + 1, {-1, -1});||| 16 dp[1] = {-inf, -inf};||| 17 auto upd = [&](int i, int j, int lim, int u) {||| 18 if (lim < dp[i][j]) {||| 19 dp[i][j] = lim;||| 20 p[i][j] = u;||| 21 }||| 22 };||| 23 for (int i = 1; i < n; i++) {||| 24 for (int j = 0; j < 2; j++) {||| 25 if (dp[i][j] == inf) continue;||| 26 int x = (j ? -a[i] : a[i]);||| 27 for (int k = 0; k < 2; k++) {||| 28 int y = (k ? -a[i + 1] : a[i + 1]);||| 29 if (x < y) upd(i + 1, k, dp[i][j], j);||| 30 if (dp[i][j] < y) upd(i + 1, k, y, j);||| 31 }||| 32 }||| 33 }||| 34 if (dp[n][0] != inf) {||| 35 int s = 0;||| 36 cout << ""YES\n"";||| 37 vector<int> res(n + 1, 0);||| 38 for (int i = n; i >= 1; i--) {||| 39 res[i] = (s ? -a[i] : a[i]);||| 40 s = p[i][s];||| 41 }||| 42 for (int i = 1; i <= n; i++) cout << res[i] << "" \n""[i == n];||| 43 } else||| 44 cout << ""NO\n"";||| 45 }||| 46 return 0;||| 47 }||| "	30 if (dp[i][j] < y) upd(i + 1, k, x, j);
152	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1000010, INF = 0x3f3f3f3f;||| 4 int n;||| 5 int p[N], a[N];||| 6 int f[N][2], pre[N][2];||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 int _;||| 11 cin >> _;||| 12 while (_--) {||| 13 cin >> n;||| 14 for (int i = 1; i <= n; i++) cin >> p[i];||| 15 f[1][0] = f[1][1] = -INF;||| 16 for (int i = 2; i <= n; i++) {||| 17 f[i][0] = f[i][1] = INF;||| 18 if (p[i] > f[i - 1][0]) {||| 19 if (f[i][0] > p[i - 1]) {||| 20 f[i][0] = p[i - 1];||| 21 pre[i][0] = 0;||| 22 }||| 23 }||| 24 if (p[i] > p[i - 1]) {||| 25 if (f[i][0] > f[i - 1][0]) {||| 26 f[i][0] = f[i - 1][0];||| 27 pre[i][0] = 0;||| 28 }||| 29 }||| 30 if (p[i] > f[i - 1][1]) {||| 31 if (f[i][0] > -p[i - 1]) {||| 32 f[i][0] = -p[i - 1];||| 33 pre[i][0] = 1;||| 34 }||| 35 }||| 36 if (p[i] > -p[i - 1]) {||| 37 if (f[i][0] > f[i - 1][1]) {||| 38 f[i][0] = f[i - 1][1];||| 39 pre[i][0] = 1;||| 40 }||| 41 }||| 42 if (-p[i] > f[i - 1][0]) {||| 43 if (f[i][1] > p[i - 1]) {||| 44 f[i][1] = p[i - 1];||| 45 pre[i][1] = 0;||| 46 }||| 47 }||| 48 if (-p[i] > p[i - 1]) {||| 49 if (f[i][1] > f[i - 1][0]) {||| 50 f[i][1] = f[i - 1][0];||| 51 pre[i][1] = 0;||| 52 }||| 53 }||| 54 if (-p[i] > f[i - 1][1]) {||| 55 if (f[i][1] > -p[i - 1]) {||| 56 f[i][1] = -p[i - 1];||| 57 pre[i][1] = 1;||| 58 }||| 59 }||| 60 if (-p[i] > -p[i - 1]) {||| 61 if (f[i][1] > f[i - 1][1]) {||| 62 f[i][1] = f[i - 1][1];||| 63 pre[i][1] = 1;||| 64 }||| 65 }||| 66 }||| 67 if (f[n][0] == INF && f[n][1] == INF)||| 68 cout << ""NO"" << endl;||| 69 else {||| 70 int ed = f[n][0] != INF ? 0 : 1;||| 71 for (int i = n; i >= 1; i--) {||| 72 a[i] = ed == 0 ? p[i] : -p[i];||| 73 ed = pre[i][ed];||| 74 }||| 75 cout << ""YES"" << endl;||| 76 for (int i = 1; i <= n; i++) cout << a[i] << ' ';||| 77 cout << endl;||| 78 }||| 79 }||| 80 return 0;||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1000010, INF = 0x3f3f3f3f;||| 4 int n;||| 5 int p[N], a[N];||| 6 int f[N][2], pre[N][2];||| 7 int main() {||| 8 ios::sync_with_stdio(false);||| 9 cin.tie(0);||| 10 int _;||| 11 cin >> _;||| 12 while (_--) {||| 13 cin >> n;||| 14 for (int i = 1; i <= n; i++) cin >> p[i];||| 15 f[1][0] = f[1][1] = -INF;||| 16 for (int i = 2; i <= n; i++) {||| 17 f[i][0] = f[i][1] = INF;||| 18 if (p[i] > f[i - 1][0]) {||| 19 if (f[i][0] > p[i - 1]) {||| 20 f[i][0] = p[i - 1];||| 21 pre[i][0] = 0;||| 22 }||| 23 }||| 24 if (p[i] > p[i - 1]) {||| 25 if (f[i][0] > f[i - 1][0]) {||| 26 f[i][0] = f[i - 1][0];||| 27 pre[i][0] = 0;||| 28 }||| 29 }||| 30 if (p[i] > f[i - 1][1]) {||| 31 if (f[i][0] > -p[i - 1]) {||| 32 f[i][0] = -p[i - 1];||| 33 pre[i][0] = 1;||| 34 }||| 35 }||| 36 if (p[i] > -p[i - 1]) {||| 37 if (f[i][0] > f[i - 1][1]) {||| 38 f[i][0] = f[i - 1][1];||| 39 pre[i][0] = 1;||| 40 }||| 41 }||| 42 if (-p[i] > f[i - 1][0]) {||| 43 if (f[i][1] > p[i - 1]) {||| 44 f[i][1] = p[i - 1];||| 45 pre[i][1] = 0;||| 46 }||| 47 }||| 48 if (-p[i] > p[i - 1]) {||| 49 if (f[i][1] > f[i - 1][0]) {||| 50 f[i][1] = f[i - 1][0];||| 51 pre[i][1] = 0;||| 52 }||| 53 }||| 54 if (-p[i] > f[i - 1][1]) {||| 55 if (f[i][1] > -p[i - 1]) {||| 56 f[i][1] = -p[i - 1];||| 57 pre[i][1] = 1;||| 58 }||| 59 }||| 60 if (-p[i] > -p[i - 1]) {||| 61 if (f[i][1] > f[i - 1][1]) {||| 62 f[i][1] = f[i - 1][1];||| 63 pre[i][1] = 1;||| 64 }||| 65 }||| 66 }||| 67 if (f[n][0] == INF && f[n][1] == INF)||| 68 cout << ""NO"" << endl;||| 69 else {||| 70 int ed = f[n][0] != INF ? 0 : 1;||| 71 for (int i = n; i >= 1; i--) {||| 72 a[i] = ed == 0 ? p[i] : -p[i];||| 73 ed = pre[n][ed];||| 74 }||| 75 cout << ""YES"" << endl;||| 76 for (int i = 1; i <= n; i++) cout << a[i] << ' ';||| 77 cout << endl;||| 78 }||| 79 }||| 80 return 0;||| 81 }||| "	73 ed = pre[i][ed];
152	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 int n, a[N], p[N << 1], f[N << 1];||| 5 void solve() {||| 6 scanf(""%d"", &n);||| 7 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 8 for (int i = 1; i < 2 * n; i++) p[i] = -1, f[i] = n + 1;||| 9 f[0] = f[1] = -n;||| 10 for (int i = 1; i <= n - 1; i++)||| 11 for (int x = 0; x <= 1; x++)||| 12 for (int y = 0; y <= 1; y++) {||| 13 int v[2] = {f[i * 2 - 2 + y], a[i - 1] * (2 * y - 1)};||| 14 for (int j = 0; j <= 1; j++)||| 15 if (v[j] <= a[i] * (2 * x - 1) && v[!j] < f[i * 2 + x])||| 16 f[i * 2 + x] = v[!j], p[i * 2 + x] = i * 2 - 2 + y;||| 17 }||| 18 if (f[2 * n - 1] <= n) {||| 19 puts(""YES"");||| 20 for (int i = n - 1, x = 2 * n - 1; ~i; i--, x = p[x])||| 21 if (!(x & 1)) a[i] *= -1;||| 22 for (int i = 0; i < n; i++) printf(""%d "", a[i]);||| 23 puts("""");||| 24 } else {||| 25 puts(""NO"");||| 26 }||| 27 }||| 28 int main() {||| 29 int T;||| 30 scanf(""%d"", &T);||| 31 while (T--) solve();||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 int n, a[N], p[N << 1], f[N << 1];||| 5 void solve() {||| 6 scanf(""%d"", &n);||| 7 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 8 for (int i = 1; i < 2 * n; i++) p[i] = -1, f[i] = n + 1;||| 9 f[0] = f[1] = -n;||| 10 for (int i = 1; i <= n - 1; i++)||| 11 for (int x = 0; x <= 1; x++)||| 12 for (int y = 0; y <= 1; y++) {||| 13 int v[2] = {f[i * 2 - 2 + y], a[i - 1] * (2 * y - 1)};||| 14 for (int j = 0; j <= 1; j++)||| 15 if (v[j] <= a[i] * (2 * x - 1) && v[!j] < f[i * 2 + x])||| 16 f[i * 2 + x] = v[!j], p[i * 2 + x] = i * 2 - 2 + y;||| 17 }||| 18 if (f[2 * n - 1] <= n) {||| 19 puts(""YES"");||| 20 for (int i = n - 1, x = 2 * n - 1; ~i; i--, x = p[x])||| 21 if (!(x & 1)) a[i] *= -1;||| 22 for (int i = 1; i <= n; i++) printf(""%d "", a[i]);||| 23 puts("""");||| 24 } else {||| 25 puts(""NO"");||| 26 }||| 27 }||| 28 int main() {||| 29 int T;||| 30 scanf(""%d"", &T);||| 31 while (T--) solve();||| 32 return 0;||| 33 }||| "	"22 for (int i = 0; i < n; i++) printf(""%d "", a[i]);"
152	36	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 template <class T>||| 6 bool uin(T& a, const T& b) {||| 7 return a > b ? a = b, true : false;||| 8 }||| 9 template <class T>||| 10 bool uax(T& a, const T& b) {||| 11 return a < b ? a = b, true : false;||| 12 }||| 13 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 14 constexpr int inf = 1e9;||| 15 void solve() {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> p(n);||| 19 for (auto& x : p) cin >> x;||| 20 p.insert(begin(p), -inf);||| 21 vector<array<int, 2>> dp(n + 1);||| 22 vector<array<bool, 2>> par(n + 1);||| 23 fill(begin(dp[0]), end(dp[0]), -inf);||| 24 for (int i = 1; i <= n; ++i) {||| 25 auto& nxt = dp[i];||| 26 auto& pre = dp[i - 1];||| 27 fill(begin(nxt), end(nxt), inf);||| 28 for (int x = -p[i], j = 0; j < 2; ++j, x = -x) {||| 29 if (x > -p[i - 1] && uin(nxt[j], pre[0])) par[i][j] = 0;||| 30 if (x > pre[0] && uin(nxt[j], -p[i - 1])) par[i][j] = 0;||| 31 if (x > +p[i - 1] && uin(nxt[j], pre[1])) par[i][j] = 1;||| 32 if (x > pre[1] && uin(nxt[j], +p[i - 1])) par[i][j] = 1;||| 33 }||| 34 }||| 35 if (min(dp[n][0], dp[n][1]) > n) {||| 36 cout << ""NO\n"";||| 37 return;||| 38 }||| 39 cout << ""YES\n"";||| 40 vector<int> res;||| 41 for (int i = n, state = dp[n][0] <= n ? 0 : 1; i > 0; --i) {||| 42 if (state)||| 43 res.push_back(+p[i]);||| 44 else||| 45 res.push_back(-p[i]);||| 46 state = par[i][state];||| 47 }||| 48 reverse(begin(res), end(res));||| 49 for (auto x : res) cout << x << ' ';||| 50 cout << '\n';||| 51 }||| 52 signed main() {||| 53 ios::sync_with_stdio(false);||| 54 cin.tie(nullptr);||| 55 int t;||| 56 cin >> t;||| 57 while (t--) solve();||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 template <class T>||| 6 bool uin(T& a, const T& b) {||| 7 return a > b ? a = b, true : false;||| 8 }||| 9 template <class T>||| 10 bool uax(T& a, const T& b) {||| 11 return a < b ? a = b, true : false;||| 12 }||| 13 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 14 constexpr int inf = 1e9;||| 15 void solve() {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> p(n);||| 19 for (auto& x : p) cin >> x;||| 20 p.insert(begin(p), -inf);||| 21 vector<array<int, 2>> dp(n + 1);||| 22 vector<array<bool, 2>> par(n + 1);||| 23 fill(begin(dp[0]), end(dp[0]), -inf);||| 24 for (int i = 1; i <= n; ++i) {||| 25 auto& nxt = dp[i];||| 26 auto& pre = dp[i - 1];||| 27 fill(begin(nxt), end(nxt), inf);||| 28 for (int x = -p[i], j = 0; j < 2; ++j, x = -x) {||| 29 if (x > -p[i - 1] && uin(nxt[j], pre[0])) par[i][j] = 0;||| 30 if (x > pre[0] && uin(nxt[j], -p[i - 1])) par[i][j] = 0;||| 31 if (x > +p[i - 1] && uin(nxt[j], pre[1])) par[i][j] = 0;||| 32 if (x > pre[1] && uin(nxt[j], +p[i - 1])) par[i][j] = 1;||| 33 }||| 34 }||| 35 if (min(dp[n][0], dp[n][1]) > n) {||| 36 cout << ""NO\n"";||| 37 return;||| 38 }||| 39 cout << ""YES\n"";||| 40 vector<int> res;||| 41 for (int i = n, state = dp[n][0] <= n ? 0 : 1; i > 0; --i) {||| 42 if (state)||| 43 res.push_back(+p[i]);||| 44 else||| 45 res.push_back(-p[i]);||| 46 state = par[i][state];||| 47 }||| 48 reverse(begin(res), end(res));||| 49 for (auto x : res) cout << x << ' ';||| 50 cout << '\n';||| 51 }||| 52 signed main() {||| 53 ios::sync_with_stdio(false);||| 54 cin.tie(nullptr);||| 55 int t;||| 56 cin >> t;||| 57 while (t--) solve();||| 58 }||| "	31 if (x > +p[i - 1] && uin(nxt[j], pre[1])) par[i][j] = 1;
152	72	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream &operator>>(istream &in, vector<T> &v) {||| 5 for (auto &x : v) in >> x;||| 6 return in;||| 7 }||| 8 template <typename T>||| 9 ostream &operator<<(ostream &out, vector<T> &v) {||| 10 for (auto &x : v) out << x << "" "";||| 11 return out;||| 12 }||| 13 template <typename Iterable>||| 14 void prnv(const Iterable &iterable, ostream &out = cout) {||| 15 if (iterable.begin() == iterable.end()) {||| 16 out << '\n';||| 17 return;||| 18 }||| 19 auto x = iterable.begin();||| 20 out << *x;||| 21 for (++x; x != iterable.end(); ++x) out << ' ' << *x;||| 22 out << '\n';||| 23 }||| 24 void prn(char en = '\n') { cout << en; }||| 25 template <typename T, typename... Args>||| 26 void prn(T x, Args... args) {||| 27 cout << x << "" "";||| 28 prn(args...);||| 29 }||| 30 void dbg() { cerr << '\n'; }||| 31 template <typename T, typename... Args>||| 32 void dbg(T x, Args... args) {}||| 33 const int N = (int)1e6 + 5;||| 34 int dp[2][N], v[2][N];||| 35 void solve() {||| 36 int n;||| 37 cin >> n;||| 38 for (int i = 0; i < n; ++i) {||| 39 cin >> v[0][i];||| 40 v[1][i] = -v[0][i];||| 41 }||| 42 dp[0][0] = dp[1][0] = -N;||| 43 for (int i = 1; i < n; ++i) {||| 44 for (int j = 0; j < 2; ++j) {||| 45 dp[j][i] = N;||| 46 for (int k = 0; k < 2; ++k) {||| 47 if (v[j][i] >= v[k][i - 1]) {||| 48 dp[j][i] = min(dp[j][i], dp[k][i - 1]);||| 49 }||| 50 if (v[j][i] >= dp[k][i - 1]) {||| 51 dp[j][i] = min(dp[j][i], v[k][i - 1]);||| 52 }||| 53 }||| 54 }||| 55 }||| 56 if (dp[0][n - 1] >= N && dp[1][n - 1] >= N) {||| 57 cout << ""NO\n"";||| 58 return;||| 59 }||| 60 cout << ""YES\n"";||| 61 vector<int> ret;||| 62 int j = 0;||| 63 if (dp[j][n - 1] >= N) j = 1;||| 64 ret.push_back(v[j][n - 1]);||| 65 for (int i = n - 1; i > 0; --i) {||| 66 if (v[j][i] >= v[j ^ 1][i - 1] && dp[j][i] == dp[j ^ 1][i - 1]) {||| 67 j ^= 1;||| 68 }||| 69 if (v[j][i] >= dp[j ^ 1][i - 1] && dp[j][i] == v[j ^ 1][i - 1]) {||| 70 j ^= 1;||| 71 }||| 72 ret.push_back(v[j][i - 1]);||| 73 }||| 74 reverse(ret.begin(), ret.end());||| 75 cout << ret << '\n';||| 76 }||| 77 int main() {||| 78 ios_base::sync_with_stdio(false);||| 79 cin.tie(NULL);||| 80 cout << fixed << setprecision(10);||| 81 int t = 1;||| 82 cin >> t;||| 83 while (t--) {||| 84 solve();||| 85 }||| 86 return 0;||| 87 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream &operator>>(istream &in, vector<T> &v) {||| 5 for (auto &x : v) in >> x;||| 6 return in;||| 7 }||| 8 template <typename T>||| 9 ostream &operator<<(ostream &out, vector<T> &v) {||| 10 for (auto &x : v) out << x << "" "";||| 11 return out;||| 12 }||| 13 template <typename Iterable>||| 14 void prnv(const Iterable &iterable, ostream &out = cout) {||| 15 if (iterable.begin() == iterable.end()) {||| 16 out << '\n';||| 17 return;||| 18 }||| 19 auto x = iterable.begin();||| 20 out << *x;||| 21 for (++x; x != iterable.end(); ++x) out << ' ' << *x;||| 22 out << '\n';||| 23 }||| 24 void prn(char en = '\n') { cout << en; }||| 25 template <typename T, typename... Args>||| 26 void prn(T x, Args... args) {||| 27 cout << x << "" "";||| 28 prn(args...);||| 29 }||| 30 void dbg() { cerr << '\n'; }||| 31 template <typename T, typename... Args>||| 32 void dbg(T x, Args... args) {}||| 33 const int N = (int)1e6 + 5;||| 34 int dp[2][N], v[2][N];||| 35 void solve() {||| 36 int n;||| 37 cin >> n;||| 38 for (int i = 0; i < n; ++i) {||| 39 cin >> v[0][i];||| 40 v[1][i] = -v[0][i];||| 41 }||| 42 dp[0][0] = dp[1][0] = -N;||| 43 for (int i = 1; i < n; ++i) {||| 44 for (int j = 0; j < 2; ++j) {||| 45 dp[j][i] = N;||| 46 for (int k = 0; k < 2; ++k) {||| 47 if (v[j][i] >= v[k][i - 1]) {||| 48 dp[j][i] = min(dp[j][i], dp[k][i - 1]);||| 49 }||| 50 if (v[j][i] >= dp[k][i - 1]) {||| 51 dp[j][i] = min(dp[j][i], v[k][i - 1]);||| 52 }||| 53 }||| 54 }||| 55 }||| 56 if (dp[0][n - 1] >= N || dp[1][n - 1] >= N) {||| 57 cout << ""NO\n"";||| 58 return;||| 59 }||| 60 cout << ""YES\n"";||| 61 vector<int> ret;||| 62 int j = 0;||| 63 if (dp[j][n - 1] >= N) j = 1;||| 64 ret.push_back(v[j][n - 1]);||| 65 for (int i = n - 1; i > 0; --i) {||| 66 if (v[j][i] >= v[j ^ 1][i - 1] && dp[j][i] == dp[j ^ 1][i - 1]) {||| 67 j ^= 1;||| 68 }||| 69 if (v[j][i] >= dp[j ^ 1][i - 1] && dp[j][i] == v[j ^ 1][i - 1]) {||| 70 j ^= 1;||| 71 }||| 72 ret.push_back(v[j][i - 1]);||| 73 }||| 74 reverse(ret.begin(), ret.end());||| 75 cout << ret << '\n';||| 76 }||| 77 int main() {||| 78 ios_base::sync_with_stdio(false);||| 79 cin.tie(NULL);||| 80 cout << fixed << setprecision(10);||| 81 int t = 1;||| 82 cin >> t;||| 83 while (t--) {||| 84 solve();||| 85 }||| 86 return 0;||| 87 }||| "	56 if (dp[0][n - 1] >= N && dp[1][n - 1] >= N) {
152	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1000000;||| 4 int t, n;||| 5 int p[N];||| 6 pair<int, bool> dp[N][2], dp2[N][2];||| 7 int ans[N];||| 8 void go(int i, bool b) {||| 9 if (i < 0) return;||| 10 ans[i] = b ? -p[i] : p[i];||| 11 go(i - 1, dp[i][b].second);||| 12 }||| 13 int main() {||| 14 cin.tie(0)->sync_with_stdio(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n;||| 18 cin >> p[0];||| 19 dp[0][0] = dp[0][1] = {-1e9, 0};||| 20 if (n == 1) {||| 21 cout << ""YES\n1\n"";||| 22 continue;||| 23 }||| 24 for (int i = 1; i < n; i++) {||| 25 cin >> p[i];||| 26 for (int it = 0; it < 2; it++) {||| 27 dp[i][it] =||| 28 min({make_pair(p[i] > p[i - 1] ? dp[i - 1][0].first : n + 1, 0),||| 29 make_pair(p[i] > -p[i - 1] ? dp[i - 1][1].first : n + 1, 1),||| 30 make_pair(p[i] > dp[i - 1][0].first ? p[i - 1] : n + 1, 0),||| 31 make_pair(p[i] > dp[i - 1][1].first ? -p[i - 1] : n + 1, 1)});||| 32 p[i] = -p[i];||| 33 }||| 34 }||| 35 if (dp[n - 1][0].first == dp[n - 1][1].first &&||| 36 dp[n - 1][0].first == n + 1) {||| 37 cout << ""NO\n"";||| 38 continue;||| 39 }||| 40 cout << ""YES\n"";||| 41 if (dp[n - 1][0].first < 1e9)||| 42 go(n - 1, 0);||| 43 else if (dp[n - 1][1].first < 1e9)||| 44 go(n - 1, 1);||| 45 for (int i = 0; i < n; i++) cout << ans[i] << "" "";||| 46 cout << ""\n"";||| 47 }||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1000000;||| 4 int t, n;||| 5 int p[N];||| 6 pair<int, bool> dp[N][2], dp2[N][2];||| 7 int ans[N];||| 8 void go(int i, bool b) {||| 9 if (i < 0) return;||| 10 ans[i] = b ? -p[i] : p[i];||| 11 go(i - 1, dp[i][b].second);||| 12 }||| 13 int main() {||| 14 cin.tie(0)->sync_with_stdio(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n;||| 18 cin >> p[0];||| 19 dp[0][0] = dp[0][1] = {-1e9, 0};||| 20 if (n == 1) {||| 21 cout << ""YES\n1"";||| 22 continue;||| 23 }||| 24 for (int i = 1; i < n; i++) {||| 25 cin >> p[i];||| 26 for (int it = 0; it < 2; it++) {||| 27 dp[i][it] =||| 28 min({make_pair(p[i] > p[i - 1] ? dp[i - 1][0].first : n + 1, 0),||| 29 make_pair(p[i] > -p[i - 1] ? dp[i - 1][1].first : n + 1, 1),||| 30 make_pair(p[i] > dp[i - 1][0].first ? p[i - 1] : n + 1, 0),||| 31 make_pair(p[i] > dp[i - 1][1].first ? -p[i - 1] : n + 1, 1)});||| 32 p[i] = -p[i];||| 33 }||| 34 }||| 35 if (dp[n - 1][0].first == dp[n - 1][1].first &&||| 36 dp[n - 1][0].first == n + 1) {||| 37 cout << ""NO\n"";||| 38 continue;||| 39 }||| 40 cout << ""YES\n"";||| 41 if (dp[n - 1][0].first < 1e9)||| 42 go(n - 1, 0);||| 43 else if (dp[n - 1][1].first < 1e9)||| 44 go(n - 1, 1);||| 45 for (int i = 0; i < n; i++) cout << ans[i] << "" "";||| 46 cout << ""\n"";||| 47 }||| 48 }||| "	"21 cout << ""YES\n1\n"";"
152	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 7, inf = 1e9;||| 4 int n, dp[N][2], w[N][2], lst[N][2], a[N], ns[N];||| 5 void Main() {||| 6 cin >> n;||| 7 for (int i = (1); i <= (n); i++) cin >> a[i], w[i][0] = a[i], w[i][1] = -a[i];||| 8 for (int i = (0); i <= (n); i++) dp[i][0] = dp[i][1] = inf;||| 9 w[0][0] = w[0][1] = -inf;||| 10 dp[0][0] = dp[0][1] = -inf;||| 11 for (int i = (1); i <= (n); i++) {||| 12 for (int a = (0); a <= (1); a++)||| 13 for (int b = (0); b <= (1); b++)||| 14 if (w[i][a] > w[i - 1][b] && dp[i][a] > dp[i - 1][b])||| 15 dp[i][a] = dp[i - 1][b], lst[i][a] = b;||| 16 for (int a = (0); a <= (1); a++)||| 17 for (int b = (0); b <= (1); b++)||| 18 if (w[i][a] > dp[i - 1][b] && dp[i][a] > w[i - 1][b])||| 19 dp[i][a] = w[i - 1][b], lst[i][a] = b;||| 20 }||| 21 if (dp[n][0] == inf && dp[n][1] == inf)||| 22 cout << ""NO\n"";||| 23 else {||| 24 cout << ""YES\n"";||| 25 int o = dp[n][0] == inf ? 1 : 0;||| 26 for (int i = (n); i >= (1); i--) ns[i] = w[i][o], o = lst[i][o];||| 27 for (int i = (1); i <= (n); i++) cout << ns[i] << ' ';||| 28 cout << '\n';||| 29 }||| 30 }||| 31 int main() {||| 32 ios ::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) Main();||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 7, inf = 1e9;||| 4 int n, dp[N][2], w[N][2], lst[N][2], a[N], ns[N];||| 5 void Main() {||| 6 cin >> n;||| 7 for (int i = (1); i <= (n); i++) cin >> a[i], w[i][0] = a[i], w[i][1] = -a[i];||| 8 for (int i = (0); i <= (n); i++) dp[i][0] = dp[i][1] = inf;||| 9 w[0][0] = w[0][1] = -inf;||| 10 dp[0][0] = dp[0][1] = -inf;||| 11 for (int i = (1); i <= (n); i++) {||| 12 for (int a = (0); a <= (1); a++)||| 13 for (int b = (0); b <= (1); b++)||| 14 if (w[i][a] > w[i - 1][b] && dp[i][a] > dp[i - 1][b])||| 15 dp[i][a] = dp[i - 1][b], lst[i][a] = b;||| 16 for (int a = (0); a <= (1); a++)||| 17 for (int b = (0); b <= (1); b++)||| 18 if (w[i][a] > dp[i - 1][b] && dp[i][a] > w[i - 1][b])||| 19 dp[i][a] = w[i - 1][b], lst[i][a] = b;||| 20 }||| 21 if (dp[n][0] == inf || dp[n][1] == inf)||| 22 cout << ""NO\n"";||| 23 else {||| 24 cout << ""YES\n"";||| 25 int o = dp[n][0] == inf ? 1 : 0;||| 26 for (int i = (n); i >= (1); i--) ns[i] = w[i][o], o = lst[i][o];||| 27 for (int i = (1); i <= (n); i++) cout << ns[i] << ' ';||| 28 cout << '\n';||| 29 }||| 30 }||| 31 int main() {||| 32 ios ::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 cout.tie(0);||| 35 int t;||| 36 cin >> t;||| 37 while (t--) Main();||| 38 return 0;||| 39 }||| "	21 if (dp[n][0] == inf && dp[n][1] == inf)
152	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n + 1, 0);||| 12 for (int i = 1; i <= n; i++) cin >> a[i];||| 13 const int inf = (1 << 30);||| 14 vector<array<int, 2>> dp(n + 1, {inf, inf});||| 15 vector<array<int, 2>> p(n + 1, {-1, -1});||| 16 dp[1] = {-inf, -inf};||| 17 auto upd = [&](int i, int j, int lim, int u) {||| 18 if (lim < dp[i][j]) {||| 19 dp[i][j] = lim;||| 20 p[i][j] = u;||| 21 }||| 22 };||| 23 for (int i = 1; i < n; i++) {||| 24 for (int j = 0; j < 2; j++) {||| 25 if (dp[i][j] == inf) continue;||| 26 int x = (j ? -a[i] : a[i]);||| 27 for (int k = 0; k < 2; k++) {||| 28 int y = (k ? -a[i + 1] : a[i + 1]);||| 29 if (x < y) upd(i + 1, k, dp[i][j], j);||| 30 if (dp[i][j] < y) upd(i + 1, k, x, j);||| 31 }||| 32 }||| 33 }||| 34 if (dp[n][0] != inf) {||| 35 int s = 0;||| 36 cout << ""YES\n"";||| 37 vector<int> res(n + 1, 0);||| 38 for (int i = n; i >= 1; i--) {||| 39 res[i] = (s ? -a[i] : a[i]);||| 40 s = p[i][s];||| 41 }||| 42 for (int i = 1; i <= n; i++) cout << res[i] << "" \n""[i == n];||| 43 } else||| 44 cout << ""NO\n"";||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n + 1, 0);||| 12 for (int i = 1; i <= n; i++) cin >> a[i];||| 13 const int inf = (1 << 30);||| 14 vector<array<int, 2>> dp(n + 1, {inf, inf});||| 15 vector<array<int, 2>> p(n + 1, {-1, -1});||| 16 dp[1] = {-inf, -inf};||| 17 auto upd = [&](int i, int j, int lim, int u) {||| 18 if (lim < dp[i][j]) {||| 19 dp[i][j] = lim;||| 20 p[i][j] = u;||| 21 }||| 22 };||| 23 for (int i = 1; i < n; i++) {||| 24 for (int j = 0; j < 2; j++) {||| 25 if (dp[i][j] == inf) continue;||| 26 int x = (j ? -a[i] : a[i]);||| 27 for (int k = 0; k < 2; k++) {||| 28 int y = (k ? -a[i + 1] : a[i + 1]);||| 29 if (x < y) upd(i + 1, k, dp[i][j], j);||| 30 if (dp[i][j] < y) upd(i + 1, k, y, j);||| 31 }||| 32 }||| 33 }||| 34 if (dp[n][0] != inf) {||| 35 int s = 0;||| 36 cout << ""YES\n"";||| 37 vector<int> res(n + 1, 0);||| 38 for (int i = n; i >= 1; i--) {||| 39 res[i] = (s ? -a[i] : a[i]);||| 40 s = p[i][s];||| 41 }||| 42 for (int i = 1; i <= n; i++) cout << res[i] << "" \n""[i == n];||| 43 } else||| 44 cout << ""NO\n"";||| 45 }||| 46 return 0;||| 47 }||| "	30 if (dp[i][j] < y) upd(i + 1, k, x, j);
153	84	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 23;||| 4 const int mod = 998244353;||| 5 const int INF = 0x3f3f3f3f;||| 6 const long long llINF = 0x3f3f3f3f3f3f3f3f;||| 7 long long make_compiler_happy() { return INF ^ 3 ^ maxn ^ mod ^ llINF; }||| 8 long long fpow(long long a, long long b) {||| 9 long long res = 1;||| 10 a %= mod;||| 11 assert(b >= 0);||| 12 for (; b; b >>= 1) {||| 13 if (b & 1) res = res * a % mod;||| 14 a = a * a % mod;||| 15 }||| 16 return res;||| 17 }||| 18 long long inv(long long x) { return fpow(x, mod - 2); }||| 19 mt19937 gen(chrono::high_resolution_clock::now().time_since_epoch().count());||| 20 int cnt[1 << maxn];||| 21 int g[1 << maxn];||| 22 string str[maxn];||| 23 int main() {||| 24 ios::sync_with_stdio(0), cin.tie(0);||| 25 int n;||| 26 cin >> n;||| 27 for (int i = 0; i < (n); i++) cin >> str[i];||| 28 g[0] = 1;||| 29 for (int i = 0; i < (1 << n); i++) g[i] = mod - g[i & (i - 1)];||| 30 g[0] = 0;||| 31 for (char c = 'a'; c <= 'z'; c++) {||| 32 memset(cnt, 0, sizeof(cnt[0]) * (1 << n));||| 33 for (int i = 0; i < (n); i++)||| 34 for (char t : str[i])||| 35 if (t == c) cnt[1 << i]++;||| 36 for (int s = 0; s < (1 << n); s++) {||| 37 int t = s & -s;||| 38 if (t != s) cnt[s] = min(cnt[t], cnt[s ^ t]);||| 39 g[s] = (long long)g[s] * (cnt[s] + 1) % mod;||| 40 }||| 41 }||| 42 for (int i = 0; i < (n); i++)||| 43 for (int s = 0; s < (1 << n); s++)||| 44 if (s & (1 << i)) g[s] = (g[s] + g[s ^ (1 << i)]) % mod;||| 45 long long ans = 0;||| 46 for (int s = 0; s < (1 << n); s++) {||| 47 long long t = 0, ss = 0;||| 48 for (int i = 0; i < (n); i++) {||| 49 if (s & (1 << i)) {||| 50 ss += i + 1;||| 51 t++;||| 52 }||| 53 }||| 54 ans ^= g[s] * ss * t;||| 55 }||| 56 cout << ans << '\n';||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 23;||| 4 const int mod = 998244353;||| 5 const int INF = 0x3f3f3f3f;||| 6 const long long llINF = 0x3f3f3f3f3f3f3f3f;||| 7 long long make_compiler_happy() { return INF ^ 3 ^ maxn ^ mod ^ llINF; }||| 8 long long fpow(long long a, long long b) {||| 9 long long res = 1;||| 10 a %= mod;||| 11 assert(b >= 0);||| 12 for (; b; b >>= 1) {||| 13 if (b & 1) res = res * a % mod;||| 14 a = a * a % mod;||| 15 }||| 16 return res;||| 17 }||| 18 long long inv(long long x) { return fpow(x, mod - 2); }||| 19 mt19937 gen(chrono::high_resolution_clock::now().time_since_epoch().count());||| 20 int cnt[1 << maxn];||| 21 int g[1 << maxn];||| 22 string str[maxn];||| 23 int main() {||| 24 ios::sync_with_stdio(0), cin.tie(0);||| 25 int n;||| 26 cin >> n;||| 27 for (int i = 0; i < (n); i++) cin >> str[i];||| 28 g[0] = 1;||| 29 for (int i = 0; i < (1 << n); i++) g[i] = -g[i & (i - 1)];||| 30 g[0] = 0;||| 31 for (char c = 'a'; c <= 'z'; c++) {||| 32 memset(cnt, 0, sizeof(cnt[0]) * (1 << n));||| 33 for (int i = 0; i < (n); i++)||| 34 for (char t : str[i])||| 35 if (t == c) cnt[1 << i]++;||| 36 for (int s = 0; s < (1 << n); s++) {||| 37 int t = s & -s;||| 38 if (t != s) cnt[s] = min(cnt[t], cnt[s ^ t]);||| 39 g[s] = (long long)g[s] * (cnt[s] + 1) % mod;||| 40 }||| 41 }||| 42 for (int i = 0; i < (n); i++)||| 43 for (int s = 0; s < (1 << n); s++)||| 44 if (s & (1 << i)) g[s] = (g[s] + g[s ^ (1 << i)]) % mod;||| 45 long long ans = 0;||| 46 for (int s = 0; s < (1 << n); s++) {||| 47 long long t = 0, ss = 0;||| 48 for (int i = 0; i < (n); i++) {||| 49 if (s & (1 << i)) {||| 50 ss += i + 1;||| 51 t++;||| 52 }||| 53 }||| 54 ans ^= g[s] * ss * t;||| 55 }||| 56 cout << ans << '\n';||| 57 }||| 	29 for (int i = 0; i < (1 << n); i++) g[i] = mod - g[i & (i - 1)];
153	56	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long dp[1 << 23];||| 4 string a[1005];||| 5 int cnt[26][26];||| 6 long long n;||| 7 const long long MOD = 998244353;||| 8 void solve() {||| 9 cin >> n;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 for (auto c : a[i]) cnt[i][c - 'a']++;||| 13 }||| 14 for (int i = 1; i < (1 << n); i++) {||| 15 dp[i] = 1;||| 16 for (int z = 0; z < 26; z++) {||| 17 int x = 1e9;||| 18 for (int k = 0; k < n; k++)||| 19 if (i & (1 << k)) {||| 20 x = min(x, cnt[k][z] + 1);||| 21 }||| 22 dp[i] = (dp[i] * x) % MOD;||| 23 }||| 24 if (__builtin_popcount(i) % 2 == 0) dp[i] = MOD - dp[i];||| 25 }||| 26 for (int k = 0; k < n; k++)||| 27 for (int i = 0; i < (1 << n); i++) {||| 28 if ((i & (1 << k))) {||| 29 dp[i] += dp[i ^ (1 << k)];||| 30 if (dp[i] >= MOD) dp[i] -= MOD;||| 31 }||| 32 }||| 33 long long ans = 0;||| 34 for (int i = 0; i < (1 << n); i++) {||| 35 long long v = 0;||| 36 long long bit = 0;||| 37 for (int k = 0; k < n; k++)||| 38 if (i & (1 << k)) v += k + 1, bit++;||| 39 ;||| 40 v *= bit;||| 41 ans ^= v * dp[i];||| 42 }||| 43 cout << ans;||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 solve();||| 49 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long dp[1 << 23];||| 4 string a[1005];||| 5 int cnt[26][26];||| 6 long long n;||| 7 const long long MOD = 998244353;||| 8 void solve() {||| 9 cin >> n;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i];||| 12 for (auto c : a[i]) cnt[i][c - 'a']++;||| 13 }||| 14 for (int i = 1; i < (1 << n); i++) {||| 15 dp[i] = 1;||| 16 for (int z = 0; z < 26; z++) {||| 17 int x = 1e9;||| 18 for (int k = 0; k < n; k++)||| 19 if (i & (1 << k)) {||| 20 x = min(x, cnt[k][z] + 1);||| 21 }||| 22 dp[i] = (dp[i] * x) % MOD;||| 23 }||| 24 if (__builtin_popcount(i) % 2 == 0) dp[i] = MOD - dp[i];||| 25 }||| 26 for (int k = 0; k < n; k++)||| 27 for (int i = 0; i < (1 << n); i++) {||| 28 if ((i & (1 << k))) {||| 29 dp[i] += dp[i ^ (1 << i)];||| 30 if (dp[i] >= MOD) dp[i] -= MOD;||| 31 }||| 32 }||| 33 long long ans = 0;||| 34 for (int i = 0; i < (1 << n); i++) {||| 35 long long v = 0;||| 36 long long bit = 0;||| 37 for (int k = 0; k < n; k++)||| 38 if (i & (1 << k)) v += k + 1, bit++;||| 39 ;||| 40 v *= bit;||| 41 ans ^= v * dp[i];||| 42 }||| 43 cout << ans;||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 solve();||| 49 }||| 	29 dp[i] += dp[i ^ (1 << k)];
153	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int n;||| 7 cin >> n;||| 8 vector<array<int, 26>> a(n);||| 9 for (int i = 0; i < n; i++) {||| 10 string str;||| 11 cin >> str;||| 12 for (int j = 0; j < 26; j++) {||| 13 a[i][j] = 0;||| 14 }||| 15 for (int j = 0; j < str.size(); j++) {||| 16 int ch = (int)(str[j] - 'a');||| 17 a[i][ch]++;||| 18 }||| 19 }||| 20 long long mod = 998244353;||| 21 vector<long long> f(1 << n);||| 22 for (int i = 1; i < (1 << n); i++) {||| 23 array<int, 26> ar{};||| 24 for (int j = 0; j < 26; j++) {||| 25 ar[j] = mod;||| 26 }||| 27 for (int j = 0; j < n; j++) {||| 28 if ((i >> j) & 1) {||| 29 for (int k = 0; k < 26; k++) {||| 30 ar[k] = min(ar[k], a[j][k]);||| 31 }||| 32 }||| 33 }||| 34 long long v = 1;||| 35 for (int j = 0; j < 26; j++) {||| 36 v = v * (ar[j] + 1) % mod;||| 37 }||| 38 if (__builtin_popcount(i) & 1) {||| 39 f[i] = v;||| 40 } else {||| 41 f[i] = mod - v;||| 42 }||| 43 }||| 44 vector<long long> g = f;||| 45 for (int i = 0; i < n; i++) {||| 46 for (int j = 0; j < (1 << n); j++) {||| 47 if ((j >> i) & 1) {||| 48 g[j] = (g[j] + g[j ^ (1 << i)]) % mod;||| 49 }||| 50 }||| 51 }||| 52 long long res = 0;||| 53 for (int i = 0; i < (1 << n); i++) {||| 54 long long coef = 0;||| 55 for (int j = 0; j < n; j++) {||| 56 if ((i >> j) & 1) {||| 57 coef += j + 1;||| 58 }||| 59 }||| 60 coef *= __builtin_popcount(i);||| 61 res ^= (coef * g[i]);||| 62 }||| 63 cout << res << ""\n"";||| 64 return 0;||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int n;||| 7 cin >> n;||| 8 vector<array<int, 26>> a(n);||| 9 for (int i = 0; i < n; i++) {||| 10 string str;||| 11 cin >> str;||| 12 for (int j = 0; j < 26; j++) {||| 13 a[i][j] = 0;||| 14 }||| 15 for (int j = 0; j < str.size(); j++) {||| 16 int ch = (int)(str[j] - 'a');||| 17 a[i][ch]++;||| 18 }||| 19 }||| 20 long long mod = 998244353;||| 21 vector<long long> f(1 << n);||| 22 for (int i = 1; i < (1 << n); i++) {||| 23 array<int, 26> ar{};||| 24 for (int j = 0; j < 26; j++) {||| 25 ar[j] = mod;||| 26 }||| 27 for (int j = 0; j < n; j++) {||| 28 if ((i >> j) & 1) {||| 29 for (int k = 0; k < 26; k++) {||| 30 ar[k] = min(ar[k], a[j][k]);||| 31 }||| 32 }||| 33 }||| 34 long long v = 1;||| 35 for (int j = 0; j < 26; j++) {||| 36 v = v * (ar[j] + 1) % mod;||| 37 }||| 38 if (__builtin_popcount(i) & 1) {||| 39 f[i] = v;||| 40 } else {||| 41 f[i] = -v;||| 42 }||| 43 }||| 44 vector<long long> g = f;||| 45 for (int i = 0; i < n; i++) {||| 46 for (int j = 0; j < (1 << n); j++) {||| 47 if ((j >> i) & 1) {||| 48 g[j] = (g[j] + g[j ^ (1 << i)]) % mod;||| 49 }||| 50 }||| 51 }||| 52 long long res = 0;||| 53 for (int i = 0; i < (1 << n); i++) {||| 54 long long coef = 0;||| 55 for (int j = 0; j < n; j++) {||| 56 if ((i >> j) & 1) {||| 57 coef += j + 1;||| 58 }||| 59 }||| 60 coef *= __builtin_popcount(i);||| 61 res ^= (coef * g[i]);||| 62 }||| 63 cout << res << ""\n"";||| 64 return 0;||| 65 }||| "	41 f[i] = mod - v;
153	37	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ans[(1 << 23)], val[(1 << 23)];||| 4 long long n;||| 5 long long qtd[23][26] = {0};||| 6 void build(long long ind, string second) {||| 7 long long i = 0;||| 8 for (long long a = 0; a < 26; a++) {||| 9 while (i < second.size() && second[i] == (char)(a + 'a'))||| 10 i++, qtd[ind][a]++;||| 11 }||| 12 }||| 13 void solve(long long a) {||| 14 vector<pair<long long, long long> > ord;||| 15 for (long long i = 0; i < n; i++) ord.push_back({-qtd[i][a], i});||| 16 sort(begin(ord), end(ord));||| 17 vector<long long> mask, aux;||| 18 mask.push_back(0);||| 19 for (auto x : ord) {||| 20 aux.clear();||| 21 x.first *= -1;||| 22 for (auto y : mask) {||| 23 aux.push_back(y | (1 << x.second));||| 24 val[y | (1 << x.second)] =||| 25 val[y | (1 << x.second)] * (1 + x.first) % 998244353;||| 26 }||| 27 for (auto y : aux) mask.push_back(y);||| 28 }||| 29 }||| 30 signed main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 cin >> n;||| 35 for (long long i = 0; i < (1 << n); i++) val[i] = 1;||| 36 string second;||| 37 for (long long i = 0; i < n; i++) cin >> second, build(i, second);||| 38 for (long long i = 0; i < 26; i++) solve(i);||| 39 for (long long i = 0; i < (1 << n); ++i) {||| 40 if (__builtin_parity(i))||| 41 ans[i] = val[i];||| 42 else||| 43 ans[i] = 998244353 - val[i];||| 44 }||| 45 ans[0] = 0;||| 46 for (long long i = 0; i < n; ++i)||| 47 for (long long mask = 0; mask < (1 << n); ++mask) {||| 48 if (mask & (1 << i)) {||| 49 ans[mask] = (ans[mask] + ans[mask ^ (1 << i)]) % 998244353;||| 50 }||| 51 }||| 52 ans[0] = 1;||| 53 long long resp = 0;||| 54 for (long long i = 0; i < (1 << n); i++) {||| 55 long long sum = 0, tot = 0;||| 56 for (long long j = 0; j < n; j++)||| 57 if ((i & (1 << j)) != 0) sum += j + 1, tot++;||| 58 ans[i] = ans[i] * tot * sum;||| 59 resp ^= ans[i];||| 60 }||| 61 cout << resp << endl;||| 62 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ans[(1 << 23)], val[(1 << 23)];||| 4 long long n;||| 5 long long qtd[23][26] = {0};||| 6 void build(long long ind, string second) {||| 7 long long i = 0;||| 8 for (long long a = 0; a < 26; a++) {||| 9 while (i < second.size() && second[i] == (char)(a + 'a'))||| 10 i++, qtd[ind][a]++;||| 11 }||| 12 }||| 13 void solve(long long a) {||| 14 vector<pair<long long, long long> > ord;||| 15 for (long long i = 0; i < n; i++) ord.push_back({-qtd[i][a], i});||| 16 sort(begin(ord), end(ord));||| 17 vector<long long> mask, aux;||| 18 mask.push_back(0);||| 19 for (auto x : ord) {||| 20 aux.clear();||| 21 x.first *= -1;||| 22 for (auto y : mask) {||| 23 aux.push_back(y | (1 << x.second));||| 24 val[y | (1 << x.second)] =||| 25 val[y | (1 << x.second)] * (1 + x.first) % 998244353;||| 26 }||| 27 for (auto y : aux) mask.push_back(y);||| 28 }||| 29 }||| 30 signed main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 cin >> n;||| 35 for (long long i = 0; i < (1 << n); i++) val[i] = 1;||| 36 string second;||| 37 for (long long i = 0; i < n; i++) cin >> second, build(i, second);||| 38 for (long long i = 0; i < 26; i++) solve(i);||| 39 for (long long i = 0; i < (1 << n); ++i) {||| 40 if (__builtin_parity(i))||| 41 ans[i] = val[i];||| 42 else||| 43 ans[i] = -val[i];||| 44 }||| 45 ans[0] = 0;||| 46 for (long long i = 0; i < n; ++i)||| 47 for (long long mask = 0; mask < (1 << n); ++mask) {||| 48 if (mask & (1 << i)) {||| 49 ans[mask] = (ans[mask] + ans[mask ^ (1 << i)]) % 998244353;||| 50 }||| 51 }||| 52 ans[0] = 1;||| 53 long long resp = 0;||| 54 for (long long i = 0; i < (1 << n); i++) {||| 55 long long sum = 0, tot = 0;||| 56 for (long long j = 0; j < n; j++)||| 57 if ((i & (1 << j)) != 0) sum += j + 1, tot++;||| 58 ans[i] = ans[i] * tot * sum;||| 59 resp ^= ans[i];||| 60 }||| 61 cout << resp << endl;||| 62 }||| 	43 ans[i] = 998244353 - val[i];
153	26	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0, ch = getchar();||| 5 while (!isdigit(ch)) f = ch == '-', ch = getchar();||| 6 while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();||| 7 return (1 - 2 * f) * x;||| 8 }||| 9 inline void writebit(int x, int len) {||| 10 for (int i = (len - 1); i >= (0); i--) {||| 11 printf(""%d"", (x >> i) & 1);||| 12 }||| 13 }||| 14 const int N = 24, L = 2e4 + 10, M = 1 << 23, K = 26, mod = 998244353, inf = 1e9;||| 15 int n, a[N][K], f[M];||| 16 char s[L];||| 17 int main() {||| 18 n = read();||| 19 for (int i = (1); i <= (n); i++) {||| 20 scanf(""%s"", s + 1);||| 21 int l = strlen(s + 1);||| 22 for (int j = (1); j <= (l); j++) a[i][s[j] - 'a']++;||| 23 }||| 24 for (int i = (1); i <= ((1 << n) - 1); i++) {||| 25 f[i] = -1;||| 26 for (int j = (1); j <= (n); j++)||| 27 if ((i >> j - 1) & 1) f[i] = -f[i];||| 28 for (int j = (0); j <= (K - 1); j++) {||| 29 int tmp = inf;||| 30 for (int k = (1); k <= (n); k++)||| 31 if ((i >> k - 1) & 1) (tmp = ((tmp) < (a[k][j]) ? (tmp) : (a[k][j])));||| 32 (f[i] = (1ll * (f[i]) * (tmp + 1) % mod));||| 33 }||| 34 }||| 35 for (int i = (1); i <= (n); i++) {||| 36 for (int j = (1); j <= ((1 << n) - 1); j++) {||| 37 if ((j >> i - 1) & 1) {||| 38 (f[j] = (((f[j]) + (f[j - (1 << i - 1)])) % mod));||| 39 }||| 40 }||| 41 }||| 42 long long ans = 0;||| 43 for (int i = (1); i <= ((1 << n) - 1); i++) {||| 44 long long k = 0, sum = 0;||| 45 for (int j = (1); j <= (n); j++)||| 46 if ((i >> j - 1) & 1) k++, sum += j;||| 47 ans ^= k * sum * (((f[i]) % mod + mod) % mod);||| 48 }||| 49 printf(""%lld\n"", ans);||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int x = 0, f = 0, ch = getchar();||| 5 while (!isdigit(ch)) f = ch == '-', ch = getchar();||| 6 while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();||| 7 return (1 - 2 * f) * x;||| 8 }||| 9 inline void writebit(int x, int len) {||| 10 for (int i = (len - 1); i >= (0); i--) {||| 11 printf(""%d"", (x >> i) & 1);||| 12 }||| 13 }||| 14 const int N = 24, L = 2e4 + 10, M = 1 << 23, K = 26, mod = 998244353, inf = 1e9;||| 15 int n, a[N][K], f[M];||| 16 char s[L];||| 17 int main() {||| 18 n = read();||| 19 for (int i = (1); i <= (n); i++) {||| 20 scanf(""%s"", s + 1);||| 21 int l = strlen(s + 1);||| 22 for (int j = (1); j <= (l); j++) a[i][s[j] - 'a']++;||| 23 }||| 24 for (int i = (1); i <= ((1 << n) - 1); i++) {||| 25 f[i] = -1;||| 26 for (int j = (1); j <= (n); j++)||| 27 if ((i >> j - 1) & 1) f[i] = f[i];||| 28 for (int j = (0); j <= (K - 1); j++) {||| 29 int tmp = inf;||| 30 for (int k = (1); k <= (n); k++)||| 31 if ((i >> k - 1) & 1) (tmp = ((tmp) < (a[k][j]) ? (tmp) : (a[k][j])));||| 32 (f[i] = (1ll * (f[i]) * (tmp + 1) % mod));||| 33 }||| 34 }||| 35 for (int i = (1); i <= (n); i++) {||| 36 for (int j = (1); j <= ((1 << n) - 1); j++) {||| 37 if ((j >> i - 1) & 1) {||| 38 (f[j] = (((f[j]) + (f[j - (1 << i - 1)])) % mod));||| 39 }||| 40 }||| 41 }||| 42 long long ans = 0;||| 43 for (int i = (1); i <= ((1 << n) - 1); i++) {||| 44 long long k = 0, sum = 0;||| 45 for (int j = (1); j <= (n); j++)||| 46 if ((i >> j - 1) & 1) k++, sum += j;||| 47 ans ^= k * sum * (((f[i]) % mod + mod) % mod);||| 48 }||| 49 printf(""%lld\n"", ans);||| 50 }||| "	27 if ((i >> j - 1) & 1) f[i] = -f[i];
154	283	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dizi[3];||| 4 int solve(int x, int y, int z) {||| 5 set<int> s;||| 6 s.insert(x);||| 7 s.insert(y);||| 8 s.insert(z);||| 9 dizi[0] = x;||| 10 dizi[1] = y;||| 11 dizi[2] = z;||| 12 if (s.size() == 3) {||| 13 int mx = 0;||| 14 for (int i = 0; i < 2; i++) {||| 15 if (dizi[mx] < dizi[i + 1]) {||| 16 mx = i + 1;||| 17 }||| 18 }||| 19 int a = dizi[0] + dizi[1] + dizi[2];||| 20 if (dizi[mx] * 2 == a) {||| 21 cout << ""yes"";||| 22 } else {||| 23 cout << ""no"";||| 24 }||| 25 } else if (s.size() == 2) {||| 26 int farkli;||| 27 if (x == y)||| 28 farkli = z;||| 29 else if (x == z)||| 30 farkli = y;||| 31 else||| 32 farkli = x;||| 33 if (farkli % 2 == 0) {||| 34 cout << ""yes"";||| 35 } else {||| 36 cout << ""no"";||| 37 }||| 38 } else {||| 39 if (x % 2 == 0)||| 40 cout << ""yes"";||| 41 else||| 42 cout << ""no"";||| 43 }||| 44 cout << endl;||| 45 return 0;||| 46 }||| 47 int main() {||| 48 int n, a, b, c;||| 49 cin >> n;||| 50 for (int i = 0; i < n; i++) {||| 51 cin >> a >> b >> c;||| 52 solve(a, b, c);||| 53 }||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dizi[3];||| 4 int solve(int x, int y, int z) {||| 5 set<int> s;||| 6 s.insert(x);||| 7 s.insert(y);||| 8 s.insert(z);||| 9 dizi[0] = x;||| 10 dizi[1] = y;||| 11 dizi[2] = z;||| 12 if (s.size() == 3) {||| 13 int mx = 0;||| 14 for (int i = 0; i < 2; i++) {||| 15 if (dizi[mx] < dizi[i + 1]) {||| 16 mx = i + 1;||| 17 }||| 18 }||| 19 int a = dizi[0] + dizi[1] + dizi[2];||| 20 if (dizi[mx] * 2 == a) {||| 21 cout << ""yes"";||| 22 } else {||| 23 cout << ""no"";||| 24 }||| 25 } else if (s.size() == 2) {||| 26 int farkli;||| 27 if (x == y)||| 28 farkli = z;||| 29 else if (x == z)||| 30 farkli = y;||| 31 else||| 32 farkli = z;||| 33 if (farkli % 2 == 0) {||| 34 cout << ""yes"";||| 35 } else {||| 36 cout << ""no"";||| 37 }||| 38 } else {||| 39 if (x % 2 == 0)||| 40 cout << ""yes"";||| 41 else||| 42 cout << ""no"";||| 43 }||| 44 cout << endl;||| 45 return 0;||| 46 }||| 47 int main() {||| 48 int n, a, b, c;||| 49 cin >> n;||| 50 for (int i = 0; i < n; i++) {||| 51 cin >> a >> b >> c;||| 52 solve(a, b, c);||| 53 }||| 54 }||| "	32 farkli = x;
154	179	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, a, b, c, i, m;||| 5 t = a = b = c = i = m = 0;||| 6 cin >> t;||| 7 if (t <= 10000) {||| 8 for (i = 1; i <= t; i++) {||| 9 cin >> a >> b >> c;||| 10 if (a >= 1 && a <= 100000000 && b >= 1 && b <= 100000000 && c >= 1 &&||| 11 c <= 100000000) {||| 12 m = max(max(a, b), c);||| 13 if (a + b == m || b + c == m || c + a == m)||| 14 printf(""Yes\n"");||| 15 else if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) ||||| 16 (c == a && b % 2 == 0))||| 17 printf(""Yes\n"");||| 18 else||| 19 printf(""No\n"");||| 20 }||| 21 }||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, a, b, c, i, m;||| 5 t = a = b = c = i = m = 0;||| 6 cin >> t;||| 7 if (t <= 10000) {||| 8 for (i = 1; i <= t; i++) {||| 9 cin >> a >> b >> c;||| 10 if (a >= 1 && a <= 100000000 && b >= 1 && b <= 100000000 && c >= 1 &&||| 11 c <= 100000000) {||| 12 m = max(max(a, b), c);||| 13 if (a + b == m || b + c == m || c + a == m)||| 14 printf(""Yes\n"");||| 15 else if ((a == b && c % 2 == 0) ||||| 16 (b == c && a % 2 == 0) && (c == a && b % 2 == 0))||| 17 printf(""Yes\n"");||| 18 else||| 19 printf(""No\n"");||| 20 }||| 21 }||| 22 }||| 23 return 0;||| 24 }||| "	15 else if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) ||
154	214	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int l1, l2, l3;||| 8 cin >> l1 >> l2 >> l3;||| 9 if (l1 + l3 == l2 || l1 + l2 == l3 || l2 + l3 == l1)||| 10 cout << ""YES"" << endl;||| 11 else if ((l1 == l2 && l3 % 2 == 0) || (l2 == l3 && l1 % 2 == 0) ||||| 12 (l1 == l3 && l2 % 2 == 0))||| 13 cout << ""YES"" << endl;||| 14 else||| 15 cout << ""NO"" << endl;||| 16 }||| 17 return 0;||| 18 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int l1, l2, l3;||| 8 cin >> l1 >> l2 >> l3;||| 9 if (l1 + l3 == l2 || l1 + l2 == l3 || l2 + l3 == l1)||| 10 cout << ""YES"" << endl;||| 11 else if ((l1 == l2 && l3 % 2 == 0) || (l2 == l3 && l1 % 2 == 0) ||||| 12 (l1 == l3 && l2 % 2 == 0))||| 13 cout << ""YES"" << endl;||| 14 else||| 15 cout << ""NO"" << endl;||| 16 return 0;||| 17 }||| 18 }||| "	16 
154	117	"1 #include <bits/stdc++.h>||| 2 const long double eps = 1e-9;||| 3 const long long mod = 1e9 + 7, ll_max = 1e18;||| 4 const int MX = 2e5 + 10, int_max = 0x3f3f3f3f;||| 5 using namespace std;||| 6 template <class T>||| 7 void read(T &x) {||| 8 cin >> x;||| 9 }||| 10 template <class H, class T>||| 11 void read(pair<H, T> &p) {||| 12 cin >> p.first >> p.second;||| 13 }||| 14 template <class T, size_t S>||| 15 void read(array<T, S> &a) {||| 16 for (T &i : a) read(i);||| 17 }||| 18 template <class T>||| 19 void read(vector<T> &v) {||| 20 for (T &i : v) read(i);||| 21 }||| 22 template <class H, class... T>||| 23 void read(H &h, T &...t) {||| 24 read(h);||| 25 read(t...);||| 26 }||| 27 template <class H, class T>||| 28 ostream &operator<<(ostream &o, pair<H, T> &p) {||| 29 o << p.first << "" "" << p.second;||| 30 return o;||| 31 }||| 32 template <class T, size_t S>||| 33 ostream &operator<<(ostream &o, array<T, S> &a) {||| 34 string s;||| 35 for (T i : a) o << s << i, s = "" "";||| 36 return o;||| 37 }||| 38 template <class T>||| 39 ostream &operator<<(ostream &o, vector<T> &v) {||| 40 string s;||| 41 for (T i : v) o << s << i, s = "" "";||| 42 return o;||| 43 }||| 44 template <class T>||| 45 void write(T x) {||| 46 cout << x;||| 47 }||| 48 template <class H, class... T>||| 49 void write(const H &h, const T &...t) {||| 50 write(h);||| 51 write(t...);||| 52 }||| 53 void print() { write('\n'); }||| 54 template <class H, class... T>||| 55 void print(const H &h, const T &...t) {||| 56 write(h);||| 57 if (sizeof...(t)) write(' ');||| 58 print(t...);||| 59 }||| 60 template <typename T>||| 61 void ckmin(T &a, const T &b) {||| 62 a = min(a, b);||| 63 }||| 64 template <typename T>||| 65 void ckmax(T &a, const T &b) {||| 66 a = max(a, b);||| 67 }||| 68 int solve(int a, int b, int c) {||| 69 if (a % 2 && b % 2 && c % 2) return 0;||| 70 if (a + b == c || b + c == a || c + a == b) return 1;||| 71 if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) ||||| 72 (c == a && b % 2 == 0))||| 73 return 1;||| 74 return 0;||| 75 }||| 76 void solve() {||| 77 int a, b, c;||| 78 read(a, b, c);||| 79 print(solve(a, b, c) ? ""YES"" : ""NO"");||| 80 }||| 81 int main() {||| 82 cin.tie(0)->sync_with_stdio(0);||| 83 int T = 1;||| 84 cin >> T;||| 85 while (T--) {||| 86 solve();||| 87 }||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 const long double eps = 1e-9;||| 3 const long long mod = 1e9 + 7, ll_max = 1e18;||| 4 const int MX = 2e5 + 10, int_max = 0x3f3f3f3f;||| 5 using namespace std;||| 6 template <class T>||| 7 void read(T &x) {||| 8 cin >> x;||| 9 }||| 10 template <class H, class T>||| 11 void read(pair<H, T> &p) {||| 12 cin >> p.first >> p.second;||| 13 }||| 14 template <class T, size_t S>||| 15 void read(array<T, S> &a) {||| 16 for (T &i : a) read(i);||| 17 }||| 18 template <class T>||| 19 void read(vector<T> &v) {||| 20 for (T &i : v) read(i);||| 21 }||| 22 template <class H, class... T>||| 23 void read(H &h, T &...t) {||| 24 read(h);||| 25 read(t...);||| 26 }||| 27 template <class H, class T>||| 28 ostream &operator<<(ostream &o, pair<H, T> &p) {||| 29 o << p.first << "" "" << p.second;||| 30 return o;||| 31 }||| 32 template <class T, size_t S>||| 33 ostream &operator<<(ostream &o, array<T, S> &a) {||| 34 string s;||| 35 for (T i : a) o << s << i, s = "" "";||| 36 return o;||| 37 }||| 38 template <class T>||| 39 ostream &operator<<(ostream &o, vector<T> &v) {||| 40 string s;||| 41 for (T i : v) o << s << i, s = "" "";||| 42 return o;||| 43 }||| 44 template <class T>||| 45 void write(T x) {||| 46 cout << x;||| 47 }||| 48 template <class H, class... T>||| 49 void write(const H &h, const T &...t) {||| 50 write(h);||| 51 write(t...);||| 52 }||| 53 void print() { write('\n'); }||| 54 template <class H, class... T>||| 55 void print(const H &h, const T &...t) {||| 56 write(h);||| 57 if (sizeof...(t)) write(' ');||| 58 print(t...);||| 59 }||| 60 template <typename T>||| 61 void ckmin(T &a, const T &b) {||| 62 a = min(a, b);||| 63 }||| 64 template <typename T>||| 65 void ckmax(T &a, const T &b) {||| 66 a = max(a, b);||| 67 }||| 68 int solve(int a, int b, int c) {||| 69 if (a % 2 && b % 2 && c % 2) return 0;||| 70 if (a + b == c || b + c == a || c + a == b) return 1;||| 71 if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) ||||| 72 (c == a && b % 2 == 2))||| 73 return 1;||| 74 return 0;||| 75 }||| 76 void solve() {||| 77 int a, b, c;||| 78 read(a, b, c);||| 79 print(solve(a, b, c) ? ""YES"" : ""NO"");||| 80 }||| 81 int main() {||| 82 cin.tie(0)->sync_with_stdio(0);||| 83 int T = 1;||| 84 cin >> T;||| 85 while (T--) {||| 86 solve();||| 87 }||| 88 return 0;||| 89 }||| "	72 (c == a && b % 2 == 0))
154	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 1000000007;||| 4 const int N = 150000;||| 5 int main() {||| 6 ios_base ::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int a, b, c;||| 12 cin >> a >> b >> c;||| 13 if (a == b + c || c == a + b || b == a + c) {||| 14 cout << ""YES""||| 15 << ""\n"";||| 16 } else if (((a == b) && (c % 2 == 0)) || ((b == c) && (a % 2 == 0)) ||||| 17 ((c == a) && (b % 2 == 0))) {||| 18 cout << ""YES""||| 19 << ""\n"";||| 20 } else {||| 21 cout << ""NO""||| 22 << ""\n"";||| 23 }||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 1000000007;||| 4 const int N = 150000;||| 5 int main() {||| 6 ios_base ::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int a, b, c;||| 12 cin >> a >> b >> c;||| 13 if (a == b + c || c == a + b || c == a + b) {||| 14 cout << ""YES""||| 15 << ""\n"";||| 16 } else if (((a == b) && (c % 2 == 0)) || ((b == c) && (a % 2 == 0)) ||||| 17 ((c == a) && (b % 2 == 0))) {||| 18 cout << ""YES""||| 19 << ""\n"";||| 20 } else {||| 21 cout << ""NO""||| 22 << ""\n"";||| 23 }||| 24 }||| 25 return 0;||| 26 }||| "	13 if (a == b + c || c == a + b || b == a + c) {
154	40	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool simple(int a, int b, int c) {||| 4 if (a == b && c % 2 == 0) return true;||| 5 if (c == b && a % 2 == 0) return true;||| 6 if (a == c && b % 2 == 0) return true;||| 7 return false;||| 8 }||| 9 bool tryBreaK(int a, int b, int c) {||| 10 if (abs(a - b) == c) return true;||| 11 if (abs(b - c) == a) return true;||| 12 if (abs(a - c) == b) return true;||| 13 return false;||| 14 }||| 15 int main() {||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 int a, b, c;||| 20 cin >> a >> b >> c;||| 21 if (simple(a, b, c) || tryBreaK(a, b, c)) {||| 22 cout << ""YES"" << endl;||| 23 continue;||| 24 }||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool simple(int a, int b, int c) {||| 4 if (a == b && c % 2 == 0) return true;||| 5 if (c == b && a % 2 == 0) return true;||| 6 if (a == c && b % 2 == 0) return true;||| 7 return false;||| 8 }||| 9 bool tryBreaK(int a, int b, int c) {||| 10 if (abs(a - b) == c) return true;||| 11 if (abs(b - c) == a) return true;||| 12 if (abs(a - c) == b) return true;||| 13 return false;||| 14 }||| 15 int main() {||| 16 int t;||| 17 cin >> t;||| 18 while (t--) {||| 19 int a, b, c;||| 20 cin >> a >> b >> c;||| 21 if (simple(a, b, c) || tryBreaK(a, b, c)) {||| 22 cout << ""YES"" << endl;||| 23 break;||| 24 }||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| "	23 continue;
155	142	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 string s;||| 9 cin >> s;||| 10 vector<long long> x;||| 11 vector<long long> y;||| 12 for (int i = 0; i < s.size(); i++) {||| 13 if (s[i] == '0')||| 14 x.push_back(a[i]);||| 15 else||| 16 y.push_back(a[i]);||| 17 }||| 18 long long cnt = 1;||| 19 map<long long, long long> mp;||| 20 sort(x.begin(), x.end());||| 21 sort(y.begin(), y.end());||| 22 for (int i = 0; i < x.size(); i++) mp[x[i]] = cnt, cnt++;||| 23 for (int i = 0; i < y.size(); i++) mp[y[i]] = cnt, cnt++;||| 24 for (auto i : a) cout << mp[i] << "" "";||| 25 cout << ""\n"";||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(0);||| 29 cin.tie(NULL);||| 30 cout.tie(0);||| 31 long long t;||| 32 cin >> t;||| 33 while (t--) solve();||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> a(n);||| 7 for (auto &i : a) cin >> i;||| 8 string s;||| 9 cin >> s;||| 10 vector<long long> x;||| 11 vector<long long> y;||| 12 for (int i = 0; i < s.size(); i++) {||| 13 if (s[i] == '0')||| 14 x.push_back(a[i]);||| 15 else||| 16 y.push_back(a[i]);||| 17 }||| 18 long long cnt = 1;||| 19 map<long long, long long> mp;||| 20 sort(x.begin(), x.end());||| 21 sort(y.begin(), y.end());||| 22 for (int i = 0; i < x.size(); i++) mp[x[i]] = cnt, cnt++;||| 23 for (int i = 0; i < x.size(); i++) mp[y[i]] = cnt, cnt++;||| 24 for (auto i : a) cout << mp[i] << "" "";||| 25 cout << ""\n"";||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(0);||| 29 cin.tie(NULL);||| 30 cout.tie(0);||| 31 long long t;||| 32 cin >> t;||| 33 while (t--) solve();||| 34 }||| "	23 for (int i = 0; i < y.size(); i++) mp[y[i]] = cnt, cnt++;
155	222	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 4e6 + 20;||| 4 const long long M = 1e7 + 20;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long Inf = 1e18;||| 7 const long double eps = 1e-7;||| 8 const long long dx[] = {1, 0, -1, 0};||| 9 const long long dy[] = {0, 1, 0, -1};||| 10 long long n, m, x, a[N], Ans[N], y, z, q, k, timer, tt = 1;||| 11 void Solve() {||| 12 for (long long i = 0; i <= n + 1; ++i) Ans[i] = 0;||| 13 long long cnt = 0;||| 14 string s;||| 15 scanf(""%lld"", &n);||| 16 for (long long i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 17 cin >> s;||| 18 vector<pair<long long, long long> > Vec1, Vec2;||| 19 for (long long i = 0; i < s.size(); ++i)||| 20 if (s[i] == '1') {||| 21 ++cnt;||| 22 Vec1.push_back({a[i + 1], i + 1});||| 23 } else||| 24 Vec2.push_back({a[i + 1], i + 1});||| 25 sort(Vec1.begin(), Vec1.end());||| 26 sort(Vec2.begin(), Vec2.end());||| 27 long long G = n - cnt + 1;||| 28 for (auto x : Vec1) Ans[x.second] = G++;||| 29 G = 1;||| 30 for (auto x : Vec2) Ans[x.second] = G++;||| 31 for (long long i = 1; i <= n; ++i) cout << Ans[i] << "" \n""[i == n];||| 32 }||| 33 int main() {||| 34 scanf(""%lld"", &tt);||| 35 while (tt--) {||| 36 ++timer;||| 37 Solve();||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 4e6 + 20;||| 4 const long long M = 1e7 + 20;||| 5 const long long MOD = 1e9 + 7;||| 6 const long long Inf = 1e18;||| 7 const long double eps = 1e-7;||| 8 const long long dx[] = {1, 0, -1, 0};||| 9 const long long dy[] = {0, 1, 0, -1};||| 10 long long n, m, x, a[N], Ans[N], y, z, q, k, timer, tt = 1;||| 11 void Solve() {||| 12 for (long long i = 0; i <= n + 1; ++i) Ans[i] = 0;||| 13 long long cnt = 0;||| 14 string s;||| 15 scanf(""%lld"", &n);||| 16 for (long long i = 1; i <= n; ++i) scanf(""%lld"", &a[i]);||| 17 cin >> s;||| 18 vector<pair<long long, long long> > Vec1, Vec2;||| 19 for (long long i = 0; i < s.size(); ++i)||| 20 if (s[i] == '1') {||| 21 ++cnt;||| 22 Vec1.push_back({a[i + 1], i + 1});||| 23 } else||| 24 Vec2.push_back({a[i + 1], i + 1});||| 25 sort(Vec1.begin(), Vec1.end());||| 26 sort(Vec2.begin(), Vec2.end());||| 27 long long G = cnt + 1;||| 28 for (auto x : Vec1) Ans[x.second] = G++;||| 29 G = 1;||| 30 for (auto x : Vec2) Ans[x.second] = G++;||| 31 for (long long i = 1; i <= n; ++i) cout << Ans[i] << "" \n""[i == n];||| 32 }||| 33 int main() {||| 34 scanf(""%lld"", &tt);||| 35 while (tt--) {||| 36 ++timer;||| 37 Solve();||| 38 }||| 39 }||| "	27 long long G = n - cnt + 1;
155	220	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int t;||| 5 struct node {||| 6 int a, b;||| 7 bool operator<(const node& rhs) const { return a < rhs.a; }||| 8 } p0[N], p1[N];||| 9 int main() {||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 int n, p[N], q[N];||| 13 char c[N];||| 14 scanf(""%d"", &n);||| 15 for (int i = 1; i <= n; i++) scanf(""%d"", p + i);||| 16 scanf(""%s"", c + 1);||| 17 int cnt0 = 0, cnt1 = 0;||| 18 for (int i = 1; i <= n; i++) {||| 19 if (c[i] == '0')||| 20 p0[++cnt0].a = p[i], p0[cnt0].b = i;||| 21 else||| 22 p1[++cnt1].a = p[i], p1[cnt1].b = i;||| 23 }||| 24 sort(p0 + 1, p0 + 1 + cnt0);||| 25 sort(p1 + 1, p1 + 1 + cnt1);||| 26 for (int i = 1; i <= cnt0; i++) q[p0[i].b] = i;||| 27 for (int i = 1; i <= cnt1; i++) q[p1[i].b] = i + cnt0;||| 28 for (int i = 1; i <= n; i++) printf(""%d "", q[i]);||| 29 printf(""\n"");||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200005;||| 4 int t;||| 5 struct node {||| 6 int a, b;||| 7 bool operator<(const node& rhs) const { return a < rhs.a; }||| 8 } p0[N], p1[N];||| 9 int main() {||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 int n, p[N], q[N];||| 13 char c[N];||| 14 scanf(""%d"", &n);||| 15 for (int i = 1; i <= n; i++) scanf(""%d"", p + i);||| 16 scanf(""%s"", c + 1);||| 17 int cnt0 = 0, cnt1 = 0;||| 18 for (int i = 1; i <= n; i++) {||| 19 if (c[i] == '0')||| 20 p0[cnt0].a = p[i], p0[cnt0].b = i;||| 21 else||| 22 p1[cnt1].a = p[i], p1[cnt1].b = i;||| 23 }||| 24 sort(p0 + 1, p0 + 1 + cnt0);||| 25 sort(p1 + 1, p1 + 1 + cnt1);||| 26 for (int i = 1; i <= cnt0; i++) q[p0[i].b] = i;||| 27 for (int i = 1; i <= cnt1; i++) q[p1[i].b] = i + cnt0;||| 28 for (int i = 1; i <= n; i++) printf(""%d "", q[i]);||| 29 printf(""\n"");||| 30 }||| 31 return 0;||| 32 }||| "	20 p0[++cnt0].a = p[i], p0[cnt0].b = i;
156	11	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2 * 1e5 + 10;||| 4 long long min(long long a, long long b) { return a > b ? b : a; }||| 5 long long fun(long long a, long long b) {||| 6 long double A = a;||| 7 long double B = b;||| 8 long double c = A / B;||| 9 if (c >= 0)||| 10 return long long(c);||| 11 else {||| 12 if (c == long long(c))||| 13 return long long(c);||| 14 else||| 15 return long long(c - 1);||| 16 }||| 17 }||| 18 long long a[maxn];||| 19 int main() {||| 20 int t;||| 21 cin >> t;||| 22 while (t--) {||| 23 long long n, k;||| 24 cin >> n >> k;||| 25 long long sum = 0;||| 26 for (int i = 0; i < n; i++) {||| 27 cin >> a[i];||| 28 sum += a[i];||| 29 }||| 30 if (sum <= k) {||| 31 cout << 0 << endl;||| 32 continue;||| 33 }||| 34 sort(a, a + n);||| 35 long long cur = 0;||| 36 long long ans = sum - k;||| 37 for (int i = n - 1; i > 0; i--) {||| 38 cur += a[i];||| 39 long long tmp = sum - cur + 1ll * (n - i) * a[0];||| 40 long long ax = (tmp <= k) ? 0 : (tmp - k - 1) / (n - i + 1) + 1;||| 41 ans = min(ans, ax + (n - i));||| 42 }||| 43 cout << ans << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2 * 1e5 + 10;||| 4 long long min(long long a, long long b) { return a > b ? b : a; }||| 5 long long fun(long long a, long long b) {||| 6 long double A = a;||| 7 long double B = b;||| 8 long double c = A / B;||| 9 if (c >= 0)||| 10 return long long(c);||| 11 else {||| 12 if (c == long long(c))||| 13 return long long(c);||| 14 else||| 15 return long long(c - 1);||| 16 }||| 17 }||| 18 long long a[maxn];||| 19 int main() {||| 20 int t;||| 21 cin >> t;||| 22 while (t--) {||| 23 long long n, k;||| 24 cin >> n >> k;||| 25 long long sum = 0;||| 26 for (int i = 0; i < n; i++) {||| 27 cin >> a[i];||| 28 sum += a[i];||| 29 }||| 30 if (sum <= k) {||| 31 cout << 0 << endl;||| 32 continue;||| 33 }||| 34 sort(a, a + n);||| 35 long long cur = 0;||| 36 long long ans = sum - k;||| 37 for (int i = n - 1; i > 0; i--) {||| 38 cur += a[i];||| 39 long long tmp = sum - cur + 1ll * (n - i) * a[1];||| 40 long long ax = (tmp <= k) ? 0 : (tmp - k - 1) / (n - i + 1) + 1;||| 41 ans = min(ans, ax + (n - i));||| 42 }||| 43 cout << ans << endl;||| 44 }||| 45 }||| 	39 long long tmp = sum - cur + 1ll * (n - i) * a[0];
156	18	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 using LL = long long;||| 5 LL a[N];||| 6 LL sum[N];||| 7 int main() {||| 8 int T;||| 9 scanf(""%d"", &T);||| 10 while (T--) {||| 11 int n;||| 12 LL k;||| 13 scanf(""%d%lld"", &n, &k);||| 14 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 15 sort(a + 1, a + n + 1);||| 16 for (int i = 1; i <= n; i++) sum[i] = sum[i - 1] + a[i];||| 17 LL ans = -1;||| 18 for (LL i = 0; i <= n - 1; i++) {||| 19 LL x = ceil((double)(i * a[1] + sum[n - i] - k) / (double)(i + 1));||| 20 if (x < 0) x = 0;||| 21 if (ans == -1)||| 22 ans = x + i;||| 23 else||| 24 ans = min(ans, x + i);||| 25 }||| 26 printf(""%lld\n"", ans);||| 27 }||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 using LL = long long;||| 5 int a[N];||| 6 LL sum[N];||| 7 int main() {||| 8 int T;||| 9 scanf(""%d"", &T);||| 10 while (T--) {||| 11 int n;||| 12 LL k;||| 13 scanf(""%d%lld"", &n, &k);||| 14 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 15 sort(a + 1, a + n + 1);||| 16 for (int i = 1; i <= n; i++) sum[i] = sum[i - 1] + a[i];||| 17 LL ans = -1;||| 18 for (int i = 0; i <= n - 1; i++) {||| 19 LL x = ceil((double)(i * a[1] + sum[n - i] - k) / (double)(i + 1));||| 20 if (x < 0) x = 0;||| 21 if (ans == -1)||| 22 ans = x + i;||| 23 else||| 24 ans = min(ans, x + i);||| 25 }||| 26 printf(""%lld\n"", ans);||| 27 }||| 28 }||| "	5 LL a[N];
156	571	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200100;||| 4 long long a[N];||| 5 void solve() {||| 6 long long n, k;||| 7 double t;||| 8 scanf(""%lld%lld"", &n, &k);||| 9 for (int i = 0; i < n; i++) scanf(""%lld"", &a[i]);||| 10 sort(a, a + n);||| 11 long long ans = a[0] + n - 1;||| 12 for (int i = 0; i < n; i++) {||| 13 if (i) k -= a[i];||| 14 t = k;||| 15 t = t / (n - i);||| 16 t = floor(t);||| 17 long long l = t;||| 18 ans = min(ans, max(0ll, a[0] - l) + n - i - 1);||| 19 }||| 20 printf(""%lld\n"", ans);||| 21 }||| 22 int main() {||| 23 int t;||| 24 for (scanf(""%d"", &t); t != 0; t--) solve();||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200100;||| 4 long long a[N];||| 5 void solve() {||| 6 long long n, k;||| 7 double t;||| 8 scanf(""%lld%lld"", &n, &k);||| 9 for (int i = 0; i < n; i++) scanf(""%lld"", &a[i]);||| 10 sort(a, a + n);||| 11 long long ans = a[0] + n - 1;||| 12 for (int i = 0; i < n; i++) {||| 13 if (i) k -= a[i];||| 14 t = k;||| 15 t = t / (n - i);||| 16 t = floor(t);||| 17 int l = t;||| 18 ans = min(ans, max(0ll, a[0] - l) + n - i - 1);||| 19 }||| 20 printf(""%lld\n"", ans);||| 21 }||| 22 int main() {||| 23 int t;||| 24 for (scanf(""%d"", &t); t != 0; t--) solve();||| 25 return 0;||| 26 }||| "	17 long long l = t;
156	447	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 10;||| 4 int T, n, arr[maxn];||| 5 long long k, sum, ans;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 sum = 0;||| 10 scanf(""%d%lld"", &n, &k);||| 11 for (int i = 0; i < n; i++) {||| 12 scanf(""%d"", &arr[i]);||| 13 sum += arr[i];||| 14 }||| 15 if (sum <= k) {||| 16 printf(""0\n"");||| 17 continue;||| 18 }||| 19 if (n == 1) {||| 20 printf(""%lld\n"", arr[0] - k);||| 21 continue;||| 22 }||| 23 sort(arr, arr + n, greater<int>());||| 24 for (int i = 0; i < n; i++) arr[i] -= arr[n - 1];||| 25 ans = sum - k;||| 26 for (int i = 0; i < n - 1; i++) {||| 27 sum -= arr[i];||| 28 if (sum <= k) {||| 29 ans = min(ans, i + 1ll);||| 30 break;||| 31 }||| 32 ans = min(ans, i + 1 + (sum - k + i + 1) / (i + 2));||| 33 }||| 34 printf(""%lld\n"", ans);||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 10;||| 4 int T, n, arr[maxn];||| 5 long long k, sum, ans;||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 sum = 0;||| 10 scanf(""%d%lld"", &n, &k);||| 11 for (int i = 0; i < n; i++) {||| 12 scanf(""%d"", &arr[i]);||| 13 sum += arr[i];||| 14 }||| 15 if (sum <= k) {||| 16 printf(""0\n"");||| 17 continue;||| 18 }||| 19 if (n == 1) {||| 20 printf(""%lld\n"", arr[0] - k);||| 21 continue;||| 22 }||| 23 sort(arr, arr + n, greater<int>());||| 24 for (int i = 0; i < n; i++) arr[i] -= arr[n - 1];||| 25 ans = sum - k;||| 26 for (int i = 0; i < n - 1; i++) {||| 27 sum -= arr[i];||| 28 if (sum <= k) {||| 29 ans = min(ans, i + 1ll);||| 30 }||| 31 ans = min(ans, i + 1 + (sum - k + i + 1) / (i + 2));||| 32 }||| 33 printf(""%lld\n"", ans);||| 34 }||| 35 return 0;||| 36 }||| "	30 break;
156	403	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 long long k;||| 6 cin >> n >> k;||| 7 vector<long long> a(n);||| 8 for (int i = 0; i < n; ++i) cin >> a[i];||| 9 sort(a.begin(), a.end());||| 10 reverse(a.begin() + 1, a.end());||| 11 for (int i = 1; i < n; ++i) a[i] += a[i - 1];||| 12 long long res = 1e18;||| 13 for (int i = 0; i < n; ++i) {||| 14 long long l = 0, r = 1e18, s = a[n - 1] - a[i];||| 15 while (l < r) {||| 16 long long mid = (l + r) >> 1;||| 17 __int128_t sum = a[0] - mid;||| 18 sum *= (i + 1);||| 19 if (sum + s <= k)||| 20 r = mid;||| 21 else||| 22 l = mid + 1;||| 23 }||| 24 res = min(res, l + i);||| 25 }||| 26 cout << res << endl;||| 27 }||| 28 int main() {||| 29 ios::sync_with_stdio(false);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 int t;||| 33 cin >> t;||| 34 while (t--) solve();||| 35 return 0;||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 long long k;||| 6 cin >> n >> k;||| 7 vector<int> a(n);||| 8 for (int i = 0; i < n; ++i) cin >> a[i];||| 9 sort(a.begin(), a.end());||| 10 reverse(a.begin() + 1, a.end());||| 11 for (int i = 1; i < n; ++i) a[i] += a[i - 1];||| 12 long long res = 1e18;||| 13 for (int i = 0; i < n; ++i) {||| 14 long long l = 0, r = 1e18, s = a[n - 1] - a[i];||| 15 while (l < r) {||| 16 long long mid = (l + r) >> 1;||| 17 __int128_t sum = a[0] - mid;||| 18 sum *= (i + 1);||| 19 if (sum + s <= k)||| 20 r = mid;||| 21 else||| 22 l = mid + 1;||| 23 }||| 24 res = min(res, l + i);||| 25 }||| 26 cout << res << endl;||| 27 }||| 28 int main() {||| 29 ios::sync_with_stdio(false);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 int t;||| 33 cin >> t;||| 34 while (t--) solve();||| 35 return 0;||| 36 }||| 	7 vector<long long> a(n);
156	180	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int t = 1;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long k;||| 13 cin >> k;||| 14 long long a[n], i;||| 15 long long sum = 0;||| 16 for (i = 0; i < n; i++) {||| 17 cin >> a[i];||| 18 sum += a[i];||| 19 }||| 20 sort(a, a + n);||| 21 long long c = 0;||| 22 for (i = 0; i < n; i++) {||| 23 if (a[i] == a[0]) c++;||| 24 }||| 25 long long ans = 1e12;||| 26 if (n == 1) {||| 27 if (a[0] > k)||| 28 ans = a[0] - k;||| 29 else||| 30 ans = 0;||| 31 cout << ans << ""\n"";||| 32 continue;||| 33 }||| 34 if (sum <= k) {||| 35 cout << 0 << ""\n"";||| 36 continue;||| 37 }||| 38 long long pre[n];||| 39 pre[0] = a[0];||| 40 for (i = 1; i < n; i++) {||| 41 pre[i] = pre[i - 1] + a[i];||| 42 }||| 43 for (i = 0; i <= n - 1; i++) {||| 44 sum = pre[n - i - 1] - pre[0];||| 45 long long d = k - sum;||| 46 d = floor((double)d / (i + 1));||| 47 if (d > a[0]) {||| 48 ans = min(ans, i);||| 49 continue;||| 50 }||| 51 long long move = a[0] - d;||| 52 move += i;||| 53 ans = min(ans, move);||| 54 }||| 55 cout << ans << ""\n"";||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int t = 1;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long k;||| 13 cin >> k;||| 14 long long a[n], i;||| 15 long long sum = 0;||| 16 for (i = 0; i < n; i++) {||| 17 cin >> a[i];||| 18 sum += a[i];||| 19 }||| 20 sort(a, a + n);||| 21 long long c = 0;||| 22 for (i = 0; i < n; i++) {||| 23 if (a[i] == a[0]) c++;||| 24 }||| 25 long long ans = 1e12;||| 26 if (n == 1) {||| 27 if (a[0] > k)||| 28 ans = a[0] - k;||| 29 else||| 30 ans = 0;||| 31 cout << ans << ""\n"";||| 32 continue;||| 33 }||| 34 if (sum <= k) {||| 35 cout << 0 << ""\n"";||| 36 continue;||| 37 }||| 38 long long pre[n];||| 39 pre[0] = a[0];||| 40 for (i = 1; i < n; i++) {||| 41 pre[i] = pre[i - 1] + a[i];||| 42 }||| 43 for (i = 0; i < n - 1; i++) {||| 44 sum = pre[n - i - 1] - pre[0];||| 45 long long d = k - sum;||| 46 d = floor((double)d / (i + 1));||| 47 if (d > a[0]) {||| 48 ans = min(ans, i);||| 49 continue;||| 50 }||| 51 long long move = a[0] - d;||| 52 move += i;||| 53 ans = min(ans, move);||| 54 }||| 55 cout << ans << ""\n"";||| 56 }||| 57 return 0;||| 58 }||| "	43 for (i = 0; i <= n - 1; i++) {
156	81	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi + n; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	49 for (int64_t cur = lo; cur <= hi + n; cur++) {
156	187	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi + n; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) <= -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi + n; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {
156	190	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi + n; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int64_t N = 1e5 + 5, mod = 1e9 + 7;||| 4 const int64_t N1 = 1e18;||| 5 void solve() {||| 6 int64_t n, m;||| 7 cin >> n >> m;||| 8 int64_t ans = 1e15;||| 9 vector<int64_t> z(n);||| 10 for (int64_t &it : z) {||| 11 cin >> it;||| 12 }||| 13 sort(z.begin(), z.end());||| 14 vector<int64_t> prf(n);||| 15 for (int64_t i = 0; i < n; i++) {||| 16 prf[i] = z[i];||| 17 if (i) {||| 18 prf[i] += prf[i - 1];||| 19 }||| 20 }||| 21 int64_t gh = prf.back();||| 22 auto plz = [&](int64_t x) {||| 23 int64_t lo = 0, hi = n - 1, mid, curans = 2e15;||| 24 while (lo <= hi) {||| 25 mid = (lo + hi) >> 1;||| 26 if (gh - (prf[n - 1] - prf[n - 1 - mid]) - z[0] + x + x * mid <= m) {||| 27 curans = mid;||| 28 hi = mid - 1;||| 29 } else {||| 30 lo = mid + 1;||| 31 }||| 32 }||| 33 return curans;||| 34 };||| 35 int64_t lo = 0, hi = 1e15;||| 36 while (hi - lo > 3) {||| 37 int64_t mid1 = lo + (hi - lo) / 3;||| 38 int64_t mid2 = hi - (hi - lo) / 3;||| 39 if (plz(z[0] - mid1) >= 2e15) {||| 40 lo = mid1;||| 41 continue;||| 42 }||| 43 if (-(mid1 + plz(z[0] - mid1)) < -(mid2 + plz(z[0] - mid2))) {||| 44 lo = mid1;||| 45 } else {||| 46 hi = mid2;||| 47 }||| 48 }||| 49 for (int64_t cur = lo; cur <= hi + 3; cur++) {||| 50 ans = min(ans, cur + plz(z[0] - cur));||| 51 }||| 52 cout << ans << ""\n"";||| 53 }||| 54 int32_t main() {||| 55 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 56 int64_t tq = 1;||| 57 cin >> tq;||| 58 for (; tq; tq--) {||| 59 solve();||| 60 }||| 61 }||| "	49 for (int64_t cur = lo; cur <= hi + n; cur++) {
156	234	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _cout(int x) { cout << x; }||| 4 void _cout(char x) { cout << x; }||| 5 void _cout(long long int x) { cout << x; }||| 6 void _cout(string x) { cout << x; }||| 7 void _cout(bool x) { cout << x; }||| 8 template <class T>||| 9 void _cout(vector<T> &arr) {||| 10 cout << ""[ "";||| 11 for (T item : arr) {||| 12 _cout(item);||| 13 cout << "" "";||| 14 }||| 15 cout << ""]"";||| 16 }||| 17 void init() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 }||| 22 void solve() {||| 23 int n;||| 24 long long int k;||| 25 cin >> n >> k;||| 26 vector<int> arr(n);||| 27 long long int sum = 0LL;||| 28 for (int i = 0; i < n; i++) {||| 29 cin >> arr[i];||| 30 sum += arr[i];||| 31 }||| 32 if (sum <= k) {||| 33 cout << 0 << ""\n"";||| 34 return;||| 35 }||| 36 if (n == 1) {||| 37 cout << (sum - k) << ""\n"";||| 38 return;||| 39 }||| 40 if (k + 1 == sum) {||| 41 cout << 1 << ""\n"";||| 42 return;||| 43 }||| 44 sort(arr.begin(), arr.end());||| 45 vector<long long int> sufSum(n);||| 46 sufSum[n - 1] = arr[n - 1];||| 47 for (int i = n - 2; i >= 0; i--) {||| 48 sufSum[i] = sufSum[i + 1] + arr[i];||| 49 }||| 50 long long int need = sum - k;||| 51 long long int ans = INT_MAX;||| 52 for (int i = n - 1; i > 0; i--) {||| 53 long long int bSum = sufSum[i];||| 54 long long int bC = n - i;||| 55 long long int preX = bSum - (arr[0] * bC);||| 56 if (preX >= need) {||| 57 ans = min(ans, (bC * 1LL));||| 58 continue;||| 59 }||| 60 long long int x =||| 61 max((need - bSum + (arr[0] * bC) + (bC + 1) - 1) / (bC + 1), 0LL);||| 62 ans = min(ans, (bC + x));||| 63 }||| 64 cout << ans << ""\n"";||| 65 }||| 66 int main(int argc, char const *argv[]) {||| 67 init();||| 68 int T;||| 69 cin >> T;||| 70 while (T--) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _cout(int x) { cout << x; }||| 4 void _cout(char x) { cout << x; }||| 5 void _cout(long long int x) { cout << x; }||| 6 void _cout(string x) { cout << x; }||| 7 void _cout(bool x) { cout << x; }||| 8 template <class T>||| 9 void _cout(vector<T> &arr) {||| 10 cout << ""[ "";||| 11 for (T item : arr) {||| 12 _cout(item);||| 13 cout << "" "";||| 14 }||| 15 cout << ""]"";||| 16 }||| 17 void init() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 }||| 22 void solve() {||| 23 int n;||| 24 long long int k;||| 25 cin >> n >> k;||| 26 vector<int> arr(n);||| 27 long long int sum = 0LL;||| 28 for (int i = 0; i < n; i++) {||| 29 cin >> arr[i];||| 30 sum += arr[i];||| 31 }||| 32 if (sum <= k) {||| 33 cout << 0 << ""\n"";||| 34 return;||| 35 }||| 36 if (n == 1) {||| 37 cout << (sum - k) << ""\n"";||| 38 return;||| 39 }||| 40 if (k + 1 == sum) {||| 41 cout << 1 << ""\n"";||| 42 return;||| 43 }||| 44 sort(arr.begin(), arr.end());||| 45 vector<long long int> sufSum(n);||| 46 sufSum[n - 1] = arr[n - 1];||| 47 for (int i = n - 2; i >= 0; i--) {||| 48 sufSum[i] = sufSum[i + 1] + arr[i];||| 49 }||| 50 long long int need = sum - k;||| 51 long long int ans = INT_MAX;||| 52 for (int i = n - 1; i > 0; i--) {||| 53 long long int bSum = sufSum[i];||| 54 int bC = n - i;||| 55 long long int preX = bSum - (arr[0] * bC);||| 56 if (preX >= need) {||| 57 ans = min(ans, (bC * 1LL));||| 58 continue;||| 59 }||| 60 long long int x =||| 61 max((need - bSum + (arr[0] * bC) + (bC + 1) - 1) / (bC + 1), 0LL);||| 62 ans = min(ans, (bC + x));||| 63 }||| 64 cout << ans << ""\n"";||| 65 }||| 66 int main(int argc, char const *argv[]) {||| 67 init();||| 68 int T;||| 69 cin >> T;||| 70 while (T--) {||| 71 solve();||| 72 }||| 73 return 0;||| 74 }||| "	54 long long int bC = n - i;
157	133	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 9, inf = 0x3f3f3f3f, mod = 998244353;||| 4 long long C[5010][5010];||| 5 void solve() {||| 6 for (int i = 0; i <= 5000; i++) {||| 7 C[i][0] = 1;||| 8 for (int j = 1; j <= i; j++) {||| 9 C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;||| 10 }||| 11 }||| 12 long long n, k;||| 13 scanf(""%lld%lld"", &n, &k);||| 14 string s;||| 15 cin >> s;||| 16 int lo = 0, ri = 0, cnt = 0, plo = -inf, pri = -inf;||| 17 long long ans = 0;||| 18 if (k == 0) {||| 19 printf(""1\n"");||| 20 return;||| 21 }||| 22 while (ri < n) {||| 23 if (s[ri] == '1') cnt++;||| 24 while (ri + 1 < n && s[ri + 1] == '0') ri++;||| 25 while (cnt > k) {||| 26 if (s[lo] == '1') cnt--;||| 27 lo++;||| 28 }||| 29 if (cnt == k) {||| 30 ans = (ans + C[ri - lo + 1][k]) % mod;||| 31 if (plo != -inf) {||| 32 ans = (ans - C[pri - lo + 1][k - 1] + mod) % mod;||| 33 }||| 34 plo = lo;||| 35 pri = ri;||| 36 }||| 37 ri++;||| 38 }||| 39 if (pri == -inf) {||| 40 printf(""1\n"");||| 41 return;||| 42 }||| 43 printf(""%lld\n"", (ans + mod) % mod);||| 44 }||| 45 int main() {||| 46 solve();||| 47 return 0;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 9, inf = 0x3f3f3f3f, mod = 998244353;||| 4 long long C[5010][5010];||| 5 void solve() {||| 6 for (int i = 0; i <= 5000; i++) {||| 7 C[i][0] = 1;||| 8 for (int j = 1; j <= i; j++) {||| 9 C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;||| 10 }||| 11 }||| 12 long long n, k;||| 13 scanf(""%lld%lld"", &n, &k);||| 14 string s;||| 15 cin >> s;||| 16 int lo = 0, ri = 0, cnt = 0, plo = -inf, pri = -inf;||| 17 long long ans = 0;||| 18 if (k == 0) {||| 19 printf(""0\n"");||| 20 return;||| 21 }||| 22 while (ri < n) {||| 23 if (s[ri] == '1') cnt++;||| 24 while (ri + 1 < n && s[ri + 1] == '0') ri++;||| 25 while (cnt > k) {||| 26 if (s[lo] == '1') cnt--, lo++;||| 27 }||| 28 if (cnt == k) {||| 29 ans = (ans + C[ri - lo + 1][k]) % mod;||| 30 if (plo != -inf) {||| 31 ans = (ans - C[pri - lo + 1][k - 1] + mod) % mod;||| 32 }||| 33 plo = lo;||| 34 pri = ri;||| 35 }||| 36 ri++;||| 37 }||| 38 if (pri == -inf) {||| 39 printf(""1\n"");||| 40 return;||| 41 }||| 42 printf(""%lld\n"", (ans + mod) % mod);||| 43 }||| 44 int main() {||| 45 solve();||| 46 return 0;||| 47 }||| "	"19 printf(""1\n"");"
157	118	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 998244353;||| 4 const long long int inf = 1e18;||| 5 const long long int N = 5000;||| 6 long long int factorialNumInverse[N + 1];||| 7 long long int naturalNumInverse[N + 1];||| 8 long long int fact[N + 1];||| 9 void InverseofNumber(long long int p) {||| 10 naturalNumInverse[0] = naturalNumInverse[1] = 1;||| 11 for (long long int i = 2; i <= N; i++)||| 12 naturalNumInverse[i] = naturalNumInverse[p % i] * (p - p / i) % p;||| 13 }||| 14 void InverseofFactorial(long long int p) {||| 15 factorialNumInverse[0] = factorialNumInverse[1] = 1;||| 16 for (long long int i = 2; i <= N; i++)||| 17 factorialNumInverse[i] =||| 18 (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p;||| 19 }||| 20 void factorial(long long int p) {||| 21 fact[0] = 1;||| 22 for (long long int i = 1; i <= N; i++) {||| 23 fact[i] = (fact[i - 1] * i) % p;||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 cout.tie(NULL);||| 30 long long int p = mod;||| 31 InverseofNumber(p);||| 32 InverseofFactorial(p);||| 33 factorial(p);||| 34 long long int n, k;||| 35 string s;||| 36 cin >> n >> k >> s;||| 37 long long int l = 0, r = 0;||| 38 vector<long long int> a;||| 39 for (long long int i = 0; i < n; i++) {||| 40 if (s[i] == '1') a.push_back(i);||| 41 }||| 42 if (a.size() < k || k == 0) {||| 43 cout << 1 << ""\n"";||| 44 return 0;||| 45 }||| 46 r = (a.size() == k ? n - 1 : a[k] - 1);||| 47 long long int ans =||| 48 (fact[r - l + 1] *||| 49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 50 mod;||| 51 long long int pl = l, pr = r;||| 52 bool done = 0;||| 53 long long int g = k;||| 54 while (g < a.size()) {||| 55 pr = r;||| 56 pl = l;||| 57 l = a[g - k] + 1;||| 58 r = (g + 1 == a.size() ? n - 1 : a[g + 1] - 1);||| 59 long long int t1 =||| 60 (fact[r - l + 1] *||| 61 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 62 mod;||| 63 long long int x = pr - l + 1;||| 64 long long int t2 = (fact[x] * (factorialNumInverse[k - 1] *||| 65 factorialNumInverse[x - k + 1] % mod)) %||| 66 mod;||| 67 ans = (ans + t1 - t2 + mod) % mod;||| 68 g++;||| 69 }||| 70 cout << ans << ""\n"";||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 998244353;||| 4 const long long int inf = 1e18;||| 5 const long long int N = 5000;||| 6 long long int factorialNumInverse[N + 1];||| 7 long long int naturalNumInverse[N + 1];||| 8 long long int fact[N + 1];||| 9 void InverseofNumber(long long int p) {||| 10 naturalNumInverse[0] = naturalNumInverse[1] = 1;||| 11 for (long long int i = 2; i <= N; i++)||| 12 naturalNumInverse[i] = naturalNumInverse[p % i] * (p - p / i) % p;||| 13 }||| 14 void InverseofFactorial(long long int p) {||| 15 factorialNumInverse[0] = factorialNumInverse[1] = 1;||| 16 for (long long int i = 2; i <= N; i++)||| 17 factorialNumInverse[i] =||| 18 (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p;||| 19 }||| 20 void factorial(long long int p) {||| 21 fact[0] = 1;||| 22 for (long long int i = 1; i <= N; i++) {||| 23 fact[i] = (fact[i - 1] * i) % p;||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(NULL);||| 29 cout.tie(NULL);||| 30 long long int p = mod;||| 31 InverseofNumber(p);||| 32 InverseofFactorial(p);||| 33 factorial(p);||| 34 long long int n, k;||| 35 string s;||| 36 cin >> n >> k >> s;||| 37 long long int l = 0, r = 0;||| 38 vector<long long int> a;||| 39 for (long long int i = 0; i < n; i++) {||| 40 if (s[i] == '1') a.push_back(i);||| 41 }||| 42 if (a.size() < k || k == 0) {||| 43 cout << 1 << ""\n"";||| 44 return 0;||| 45 }||| 46 r = (a.size() == k ? n - 1 : a[k] - 1);||| 47 long long int ans =||| 48 (fact[r - l + 1] *||| 49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k]) % mod) %||| 50 mod;||| 51 long long int pl = l, pr = r;||| 52 bool done = 0;||| 53 long long int g = k;||| 54 while (g < a.size()) {||| 55 pr = r;||| 56 pl = l;||| 57 l = a[g - k] + 1;||| 58 r = (g + 1 == a.size() ? n - 1 : a[g + 1] - 1);||| 59 long long int t1 =||| 60 (fact[r - l + 1] *||| 61 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %||| 62 mod;||| 63 long long int x = pr - l + 1;||| 64 long long int t2 = (fact[x] * (factorialNumInverse[k - 1] *||| 65 factorialNumInverse[x - k + 1] % mod)) %||| 66 mod;||| 67 ans = (ans + t1 - t2 + mod) % mod;||| 68 g++;||| 69 }||| 70 cout << ans << ""\n"";||| 71 return 0;||| 72 }||| "	49 (factorialNumInverse[k] * factorialNumInverse[r - l + 1 - k] % mod)) %
157	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 const int mod = 998244353;||| 5 void bmod(int &x) { x -= mod, x += x >> 31 & mod; }||| 6 int norm(int x) { return x < 0 ? x + mod : x; }||| 7 void Add(int &x, int y) { x += y - mod, x += x >> 31 & mod; }||| 8 void Sub(int &x, int y) { x -= y, x += x >> 31 & mod; }||| 9 int inv(int x, int k = mod - 2) {||| 10 int r = 1;||| 11 while (k) {||| 12 if (k & 1) r = (long long)x * r % mod;||| 13 x = (long long)x * x % mod;||| 14 k >>= 1;||| 15 }||| 16 return r;||| 17 }||| 18 const int Flen = N;||| 19 int fact[Flen], infact[Flen];||| 20 void preF(int n = Flen - 1) {||| 21 fact[0] = 1;||| 22 for (int i = 1; i <= n; ++i) fact[i] = (long long)fact[i - 1] * i % mod;||| 23 infact[n] = inv(fact[n]);||| 24 for (int i = n; i; --i) infact[i - 1] = (long long)infact[i] * i % mod;||| 25 }||| 26 int C(int x, int y) {||| 27 return y < 0 || x < y||| 28 ? 0||| 29 : (long long)fact[x] * infact[y] % mod * infact[x - y] % mod;||| 30 }||| 31 int n, m;||| 32 char str[N];||| 33 int f[N], s[N];||| 34 int main() {||| 35 preF();||| 36 scanf(""%d%d%s"", &n, &m, str + 1);||| 37 if (!m) return puts(""1""), 0;||| 38 f[0] = 1;||| 39 for (int i = 1; i <= n; ++i) {||| 40 s[i] = s[i - 1] + (str[i] -= 48);||| 41 }||| 42 for (int i = 1, j = 0; i <= n; ++i) {||| 43 f[i] = f[i - 1];||| 44 if (str[i]) {||| 45 while (j < i && s[i] - s[j] > m) ++j;||| 46 if (s[i] - s[j] != m) continue;||| 47 if (s[j])||| 48 Add(f[i], C(i - j - 1, m));||| 49 else||| 50 Add(f[i], C(i - j, m) - 1);||| 51 } else {||| 52 if (s[i] - s[j] != m) continue;||| 53 Add(f[i], C(i - j - 1, m - 1));||| 54 }||| 55 }||| 56 printf(""%d\n"", f[n]);||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 const int mod = 998244353;||| 5 void bmod(int &x) { x -= mod, x += x >> 31 & mod; }||| 6 int norm(int x) { return x < 0 ? x + mod : x; }||| 7 void Add(int &x, int y) { x += y - mod, x += x >> 31 & mod; }||| 8 void Sub(int &x, int y) { x -= y, x += x >> 31 & mod; }||| 9 int inv(int x, int k = mod - 2) {||| 10 int r = 1;||| 11 while (k) {||| 12 if (k & 1) r = (long long)x * r % mod;||| 13 x = (long long)x * x % mod;||| 14 k >>= 1;||| 15 }||| 16 return r;||| 17 }||| 18 const int Flen = N;||| 19 int fact[Flen], infact[Flen];||| 20 void preF(int n = Flen - 1) {||| 21 fact[0] = 1;||| 22 for (int i = 1; i <= n; ++i) fact[i] = (long long)fact[i - 1] * i % mod;||| 23 infact[n] = inv(fact[n]);||| 24 for (int i = n; i; --i) infact[i - 1] = (long long)infact[i] * i % mod;||| 25 }||| 26 int C(int x, int y) {||| 27 return y < 0 || x < y||| 28 ? 0||| 29 : (long long)fact[x] * infact[y] % mod * infact[x - y] % mod;||| 30 }||| 31 int n, m;||| 32 char str[N];||| 33 int f[N], s[N];||| 34 int main() {||| 35 preF();||| 36 scanf(""%d%d%s"", &n, &m, str + 1);||| 37 if (!m) return puts(""1""), 0;||| 38 f[0] = 1;||| 39 for (int i = 1; i <= n; ++i) {||| 40 s[i] = s[i - 1] + (str[i] -= 48);||| 41 }||| 42 for (int i = 1, j = 0; i <= n; ++i) {||| 43 f[i] = f[i - 1];||| 44 if (str[i]) {||| 45 while (j < i && s[i] - s[j] > m) ++j;||| 46 if (s[i] - s[j] != m) continue;||| 47 if (s[j])||| 48 Add(f[i], C(i - j - 1, m));||| 49 else||| 50 Add(f[i], C(i - j, m));||| 51 } else {||| 52 if (s[i] - s[j] != m) continue;||| 53 Add(f[i], C(i - j - 1, m - 1));||| 54 }||| 55 }||| 56 printf(""%d\n"", f[n]);||| 57 return 0;||| 58 }||| "	50 Add(f[i], C(i - j, m) - 1);
158	6	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""popcnt"")||| 4 using namespace std;||| 5 mt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());||| 6 const long long N = 1e6 + 100;||| 7 const long long mod = 998244353;||| 8 const long long big = 1e17;||| 9 long long t, n, m;||| 10 string a[N];||| 11 pair<long long, long long> c[N];||| 12 int x[N], d[N], e[N];||| 13 int main() {||| 14 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n >> m;||| 18 for (int i = 0; i < n; i++) cin >> x[i];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long ans = -1e10;||| 21 for (int j = 0; j < (1 << n); j++) {||| 22 for (int i = 0; i < m; i++) c[i] = make_pair(0, i), d[i] = 0;||| 23 long long sum = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if ((1 << i) & j) {||| 26 sum += x[i];||| 27 for (int k = 0; k < m; k++) {||| 28 if (a[i][k] == '1') c[k].first--;||| 29 }||| 30 } else {||| 31 sum -= x[i];||| 32 for (int k = 0; k < m; k++)||| 33 if (a[i][k] == '1') c[k].first++;||| 34 }||| 35 }||| 36 sort(c, c + m);||| 37 for (int i = 0; i < m; i++)||| 38 d[c[i].second] = i + 1, sum = sum + c[i].first * (i + 1);||| 39 bool t = 1;||| 40 for (int i = 0; i < n; i++) {||| 41 long long sum2 = 0;||| 42 for (int k = 0; k < m; k++)||| 43 if (a[i][k] == '1') sum2 += d[k];||| 44 if (((1 << i) & j) && sum2 > x[i]) t = 0;||| 45 if ((!((1 << i) & j)) && sum2 < x[i]) t = 0;||| 46 }||| 47 if (t && (sum > ans)) {||| 48 ans = sum;||| 49 for (int j = 0; j < m; j++) e[j] = d[j];||| 50 }||| 51 }||| 52 for (int i = 0; i < m; i++) cout << e[i] << "" "";||| 53 cout << '\n';||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""popcnt"")||| 4 using namespace std;||| 5 mt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());||| 6 const long long N = 1e6 + 100;||| 7 const long long mod = 998244353;||| 8 const long long big = 1e17;||| 9 long long t, n, m;||| 10 string a[N];||| 11 pair<long long, long long> c[N];||| 12 int x[N], d[N], e[N];||| 13 int main() {||| 14 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 15 cin >> t;||| 16 while (t--) {||| 17 cin >> n >> m;||| 18 for (int i = 0; i < n; i++) cin >> x[i];||| 19 for (int i = 0; i < n; i++) cin >> a[i];||| 20 long long ans = -1e10;||| 21 for (int j = 0; j < (1 << n); j++) {||| 22 for (int i = 0; i < m; i++) c[i] = make_pair(0, i), d[i] = 0;||| 23 long long sum = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if ((1 << i) & j) {||| 26 sum += x[i];||| 27 for (int k = 0; k < m; k++) {||| 28 if (a[i][k] == '1') c[k].first--;||| 29 }||| 30 } else {||| 31 sum -= x[i];||| 32 for (int k = 0; k < m; k++)||| 33 if (a[i][k] == '1') c[k].first++;||| 34 }||| 35 }||| 36 sort(c, c + m);||| 37 for (int i = 0; i < m; i++)||| 38 d[c[i].second] = i + 1, sum = sum + c[i].first * (i + 1);||| 39 bool t = 1;||| 40 for (int i = 0; i < n; i++) {||| 41 long long sum2 = 0;||| 42 for (int k = 0; k < m; k++)||| 43 if (a[i][k]) sum2 += d[k];||| 44 if (((1 << i) & j) && sum2 > x[i]) t = 0;||| 45 if ((!((1 << i) & j)) && sum2 < x[i]) t = 0;||| 46 }||| 47 if (t && (sum > ans)) {||| 48 ans = sum;||| 49 for (int j = 0; j < m; j++) e[j] = d[j];||| 50 }||| 51 }||| 52 for (int i = 0; i < m; i++) cout << e[i] << "" "";||| 53 cout << '\n';||| 54 }||| 55 }||| "	43 if (a[i][k] == '1') sum2 += d[k];
158	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e4 + 10;||| 4 const int MOD = 998244353;||| 5 int x[11], p[MAX], q[MAX], ret[MAX];||| 6 char s[11][MAX];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n, m;||| 12 scanf(""%d%d"", &n, &m);||| 13 for (int i = 0; i < n; i++) scanf(""%d"", x + i);||| 14 for (int i = 0; i < n; i++) scanf(""%s"", s[i] + 1);||| 15 long long ans = 0;||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 for (int j = 1; j <= m; j++) p[j] = 0;||| 18 for (int j = 1; j <= m; j++) q[j] = j;||| 19 long long sum = 0;||| 20 for (int j = 0; j < n; j++) {||| 21 int tag = ((1 << j) & i) ? 1 : -1;||| 22 sum -= tag * x[j];||| 23 for (int k = 1; k <= m; k++) {||| 24 if (s[j][k] == '0') continue;||| 25 p[k] += tag;||| 26 }||| 27 }||| 28 sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; });||| 29 for (int j = 1; j <= m; j++) sum += p[q[j]] * j;||| 30 if (sum >= ans) {||| 31 ans = sum;||| 32 for (int j = 1; j <= m; j++) ret[q[j]] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) printf(""%d "", ret[i]);||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e4 + 10;||| 4 const int MOD = 998244353;||| 5 int x[11], p[MAX], q[MAX], ret[MAX];||| 6 char s[11][MAX];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n, m;||| 12 scanf(""%d%d"", &n, &m);||| 13 for (int i = 0; i < n; i++) scanf(""%d"", x + i);||| 14 for (int i = 0; i < n; i++) scanf(""%s"", s[i] + 1);||| 15 long long ans = 0;||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 for (int j = 1; j <= m; j++) p[j] = 0;||| 18 for (int j = 1; j <= m; j++) q[j] = j;||| 19 long long sum = 0;||| 20 for (int j = 0; j < n; j++) {||| 21 int tag = ((1 << j) & i) ? 1 : -1;||| 22 sum -= tag * x[j];||| 23 for (int k = 1; k <= m; k++) {||| 24 if (s[j][k] == '0') continue;||| 25 p[k] += tag;||| 26 }||| 27 }||| 28 sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; });||| 29 for (int j = 1; j <= m; j++) sum += p[q[j]] * j;||| 30 if (sum > ans) {||| 31 ans = sum;||| 32 for (int j = 1; j <= m; j++) ret[q[j]] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) printf(""%d "", ret[i]);||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| "	30 if (sum >= ans) {
158	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[10], c[10005];||| 4 char b[10][10005];||| 5 vector<int> g[10];||| 6 int id[10005];||| 7 bool cmp(int i1, int i2) { return c[i1] < c[i2]; }||| 8 int p[10005], p2[10005];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &m);||| 14 for (int i = 0; i < n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 scanf(""\n%s"", b[i] + 1);||| 19 g[i].clear();||| 20 for (int j = 1; j <= m; j++) {||| 21 if (b[i][j] == '1') {||| 22 g[i].push_back(j);||| 23 }||| 24 }||| 25 }||| 26 long long ans = 0;||| 27 for (int i = 1; i <= m; i++) id[i] = i;||| 28 for (int i = 0; i < (1 << n); i++) {||| 29 memset(c, 0, sizeof(c));||| 30 for (int j = 0; j < n; j++) {||| 31 for (int k : g[j]) {||| 32 if (i & (1 << j))||| 33 c[k]++;||| 34 else||| 35 c[k]--;||| 36 }||| 37 }||| 38 sort(id + 1, id + 1 + m, cmp);||| 39 for (int j = 1; j <= m; j++) {||| 40 p[id[j]] = j;||| 41 }||| 42 long long sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 int h = 0;||| 45 for (int k : g[j]) {||| 46 h += p[k];||| 47 }||| 48 sum += abs(a[j] - h);||| 49 }||| 50 if (sum >= ans) {||| 51 ans = sum;||| 52 for (int j = 1; j <= m; j++) {||| 53 p2[j] = p[j];||| 54 }||| 55 }||| 56 }||| 57 for (int i = 1; i <= m; i++) {||| 58 printf(""%d "", p2[i]);||| 59 }||| 60 printf(""\n"");||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[10], c[1005];||| 4 char b[10][1005];||| 5 vector<int> g[10];||| 6 int id[1005];||| 7 bool cmp(int i1, int i2) { return c[i1] < c[i2]; }||| 8 int p[1005], p2[1005];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &m);||| 14 for (int i = 0; i < n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 scanf(""\n%s"", b[i] + 1);||| 19 g[i].clear();||| 20 for (int j = 1; j <= m; j++) {||| 21 if (b[i][j] == '1') {||| 22 g[i].push_back(j);||| 23 }||| 24 }||| 25 }||| 26 long long ans = 0;||| 27 for (int i = 1; i <= m; i++) id[i] = i;||| 28 for (int i = 0; i < (1 << n); i++) {||| 29 memset(c, 0, sizeof(c));||| 30 for (int j = 0; j < n; j++) {||| 31 for (int k : g[j]) {||| 32 if (i & (1 << j))||| 33 c[k]++;||| 34 else||| 35 c[k]--;||| 36 }||| 37 }||| 38 sort(id + 1, id + 1 + m, cmp);||| 39 for (int j = 1; j <= m; j++) {||| 40 p[id[j]] = j;||| 41 }||| 42 long long sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 int h = 0;||| 45 for (int k : g[j]) {||| 46 h += p[k];||| 47 }||| 48 sum += abs(a[i] - h);||| 49 }||| 50 if (sum >= ans) {||| 51 ans = sum;||| 52 for (int j = 1; j <= m; j++) {||| 53 p2[j] = p[j];||| 54 }||| 55 }||| 56 }||| 57 for (int i = 1; i <= m; i++) {||| 58 printf(""%d "", p2[i]);||| 59 }||| 60 printf(""\n"");||| 61 }||| 62 return 0;||| 63 }||| "	3 int n, m, a[10], c[10005];
158	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int e[11];||| 4 vector<int> score(10010);||| 5 vector<int> ans;||| 6 string s[11];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> e[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i];||| 12 int up = 1 << n;||| 13 int mx = -1;||| 14 vector<pair<int, int> > ev(m + 1);||| 15 for (int i = 0; i < up; i++) {||| 16 for (int j = 1; j <= m; j++) {||| 17 ev[j].first = 0;||| 18 ev[j].second = j;||| 19 }||| 20 for (int j = 1; j <= n; j++)||| 21 for (int k = 1; k <= m; k++) {||| 22 if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1;||| 23 }||| 24 int sum = 0;||| 25 for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j];||| 26 sort(ev.begin() + 1, ev.end());||| 27 for (int j = 1; j <= m; j++) {||| 28 score[ev[j].second] = j;||| 29 sum += j * ev[j].first;||| 30 }||| 31 if (mx < sum) {||| 32 mx = sum;||| 33 ans = score;||| 34 }||| 35 }||| 36 for (int i = 1; i <= m; i++) cout << ans[i] << "" \n""[i == m];||| 37 }||| 38 signed main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) solve();||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int e[11];||| 4 vector<int> score(10010);||| 5 vector<int> ans;||| 6 string s[11];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> e[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i];||| 12 int up = 1 << n;||| 13 int mx = 0;||| 14 vector<pair<int, int> > ev(m + 1);||| 15 for (int i = 0; i < up; i++) {||| 16 for (int j = 1; j <= m; j++) {||| 17 ev[j].first = 0;||| 18 ev[j].second = j;||| 19 }||| 20 for (int j = 1; j <= n; j++)||| 21 for (int k = 1; k <= m; k++) {||| 22 if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1;||| 23 }||| 24 int sum = 0;||| 25 for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j];||| 26 sort(ev.begin() + 1, ev.end());||| 27 for (int j = 1; j <= m; j++) {||| 28 score[ev[j].second] = j;||| 29 sum += j * ev[j].first;||| 30 }||| 31 if (mx < sum) {||| 32 mx = sum;||| 33 ans = score;||| 34 }||| 35 }||| 36 for (int i = 1; i <= m; i++) cout << ans[i] << "" \n""[i == m];||| 37 }||| 38 signed main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(nullptr);||| 41 cout.tie(nullptr);||| 42 int t;||| 43 cin >> t;||| 44 while (t--) solve();||| 45 return 0;||| 46 }||| "	13 int mx = -1;
158	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10, M = 2 * N, mod = 998244353;||| 4 int first[N];||| 5 string s[N];||| 6 int ans[N];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> first[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i], s[i] = "" "" + s[i];||| 12 long long res = -1, tmp;||| 13 for (int k = 0; k < (1 << n); k++) {||| 14 tmp = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 int r = 1;||| 17 if (k >> i & 1) r = -1;||| 18 tmp += r * first[i + 1];||| 19 }||| 20 vector<pair<int, int> > num;||| 21 for (int i = 1; i <= m; i++) {||| 22 int tmp = 0;||| 23 for (int j = 0; j < n; j++) {||| 24 int r = -1;||| 25 if (k >> j & 1) r = 1;||| 26 tmp += (s[j + 1][i] - '0') * r;||| 27 }||| 28 num.push_back({tmp, i});||| 29 }||| 30 sort((num).begin(), (num).end());||| 31 for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i;||| 32 if (res < tmp) {||| 33 res = tmp;||| 34 for (int i = 0; i < m; i++) {||| 35 auto &[val, id] = num[i];||| 36 ans[id] = i + 1;||| 37 }||| 38 }||| 39 }||| 40 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 41 cout << '\n';||| 42 }||| 43 int main() {||| 44 ios::sync_with_stdio(0), cin.tie(0);||| 45 cout.precision(2), cout.setf(ios::fixed);||| 46 int t;||| 47 cin >> t;||| 48 while (t--) solve();||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3e5 + 10, M = 2 * N, mod = 998244353;||| 4 int first[N];||| 5 string s[N];||| 6 int ans[N];||| 7 void solve() {||| 8 int n, m;||| 9 cin >> n >> m;||| 10 for (int i = 1; i <= n; i++) cin >> first[i];||| 11 for (int i = 1; i <= n; i++) cin >> s[i], s[i] = "" "" + s[i];||| 12 long long res = 0, tmp;||| 13 for (int k = 0; k < (1 << n); k++) {||| 14 tmp = 0;||| 15 for (int i = 0; i < n; i++) {||| 16 int r = 1;||| 17 if (k >> i & 1) r = -1;||| 18 tmp += r * first[i + 1];||| 19 }||| 20 vector<pair<int, int> > num;||| 21 for (int i = 1; i <= m; i++) {||| 22 int tmp = 0;||| 23 for (int j = 0; j < n; j++) {||| 24 int r = -1;||| 25 if (k >> j & 1) r = 1;||| 26 tmp += (s[j + 1][i] - '0') * r;||| 27 }||| 28 num.push_back({tmp, i});||| 29 }||| 30 sort((num).begin(), (num).end());||| 31 for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i;||| 32 if (res < tmp) {||| 33 res = tmp;||| 34 for (int i = 0; i < m; i++) {||| 35 auto &[val, id] = num[i];||| 36 ans[id] = i + 1;||| 37 }||| 38 }||| 39 }||| 40 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 41 cout << '\n';||| 42 }||| 43 int main() {||| 44 ios::sync_with_stdio(0), cin.tie(0);||| 45 cout.precision(2), cout.setf(ios::fixed);||| 46 int t;||| 47 cin >> t;||| 48 while (t--) solve();||| 49 return 0;||| 50 }||| "	12 long long res = -1, tmp;
158	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<int64_t> &a);||| 4 void read(vector<string> &a);||| 5 void read(vector<vector<int64_t>> &a);||| 6 void read(vector<pair<int64_t, int64_t>> &a);||| 7 void solve() {||| 8 int64_t n, m;||| 9 cin >> n >> m;||| 10 vector<int64_t> exp(n);||| 11 read(exp);||| 12 vector<string> mat(n);||| 13 read(mat);||| 14 int64_t best = 0;||| 15 vector<int64_t> ret;||| 16 for (int64_t x = 0; x < (1 << n); x++) {||| 17 string b = std::bitset<32>(x).to_string();||| 18 reverse(b.begin(), b.end());||| 19 vector<pair<int64_t, int64_t>> order(m);||| 20 for (int64_t i = 0; i < m; i++) {||| 21 int64_t temp = 0;||| 22 for (int64_t j = 0; j < n; j++) {||| 23 if (b[j] == '1')||| 24 temp += (mat[j][i] - '0');||| 25 else||| 26 temp -= (mat[j][i] - '0');||| 27 }||| 28 order[i] = {temp, i};||| 29 }||| 30 sort(order.begin(), order.end());||| 31 reverse(order.begin(), order.end());||| 32 int64_t ans = 0;||| 33 for (int64_t i = 0; i < n; i++) {||| 34 if (b[i] == '0')||| 35 ans += exp[i];||| 36 else||| 37 ans -= exp[i];||| 38 }||| 39 int64_t tog = m;||| 40 vector<int64_t> haha(m);||| 41 for (auto x : order) {||| 42 ans += (x.first) * (tog);||| 43 haha[x.second] = tog;||| 44 tog--;||| 45 }||| 46 if (ans >= best) {||| 47 best = ans;||| 48 ret = haha;||| 49 }||| 50 }||| 51 for (int64_t i : ret) cout << i << "" "";||| 52 cout << endl;||| 53 }||| 54 int32_t main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int64_t t = 1;||| 58 cin >> t;||| 59 for (int64_t tt = 1; tt <= t; tt++) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| 64 void read(vector<int64_t> &a) {||| 65 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 66 }||| 67 void read(vector<string> &a) {||| 68 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 69 }||| 70 void read(vector<vector<int64_t>> &a) {||| 71 for (int64_t i = 0; i < a.size(); i++)||| 72 for (int64_t j = 0; j < a[i].size(); j++) cin >> a[i][j];||| 73 }||| 74 void read(vector<pair<int64_t, int64_t>> &a) {||| 75 for (int64_t i = 0; i < a.size(); i++) cin >> a[i].first >> a[i].second;||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<int64_t> &a);||| 4 void read(vector<string> &a);||| 5 void read(vector<vector<int64_t>> &a);||| 6 void read(vector<pair<int64_t, int64_t>> &a);||| 7 void solve() {||| 8 int64_t n, m;||| 9 cin >> n >> m;||| 10 vector<int64_t> exp(n);||| 11 read(exp);||| 12 vector<string> mat(n);||| 13 read(mat);||| 14 int64_t best = 0;||| 15 vector<int64_t> ret;||| 16 for (int64_t x = 0; x < (1 << n); x++) {||| 17 string b = std::bitset<32>(x).to_string();||| 18 reverse(b.begin(), b.end());||| 19 vector<pair<int64_t, int64_t>> order(m);||| 20 for (int64_t i = 0; i < m; i++) {||| 21 int64_t temp = 0;||| 22 for (int64_t j = 0; j < n; j++) {||| 23 if (b[j] == '1')||| 24 temp += (mat[j][i] - '0');||| 25 else||| 26 temp -= (mat[j][i] - '0');||| 27 }||| 28 order[i] = {temp, i};||| 29 }||| 30 sort(order.begin(), order.end());||| 31 reverse(order.begin(), order.end());||| 32 int64_t ans = 0;||| 33 for (int64_t i = 0; i < n; i++) {||| 34 if (b[i] == '0')||| 35 ans += exp[i];||| 36 else||| 37 ans -= exp[i];||| 38 }||| 39 int64_t tog = m;||| 40 vector<int64_t> haha(m);||| 41 for (auto x : order) {||| 42 ans += (x.first) * (tog);||| 43 haha[x.second] = tog;||| 44 tog--;||| 45 }||| 46 if (ans > best) {||| 47 best = ans;||| 48 ret = haha;||| 49 }||| 50 }||| 51 for (int64_t i : ret) cout << i << "" "";||| 52 cout << endl;||| 53 }||| 54 int32_t main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 int64_t t = 1;||| 58 cin >> t;||| 59 for (int64_t tt = 1; tt <= t; tt++) {||| 60 solve();||| 61 }||| 62 return 0;||| 63 }||| 64 void read(vector<int64_t> &a) {||| 65 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 66 }||| 67 void read(vector<string> &a) {||| 68 for (int64_t i = 0; i < a.size(); i++) cin >> a[i];||| 69 }||| 70 void read(vector<vector<int64_t>> &a) {||| 71 for (int64_t i = 0; i < a.size(); i++)||| 72 for (int64_t j = 0; j < a[i].size(); j++) cin >> a[i][j];||| 73 }||| 74 void read(vector<pair<int64_t, int64_t>> &a) {||| 75 for (int64_t i = 0; i < a.size(); i++) cin >> a[i].first >> a[i].second;||| 76 }||| "	46 if (ans >= best) {
158	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 int x[19];||| 23 char s[19][maxn];||| 24 int ans[maxn];||| 25 pair<int, int> val[maxn];||| 26 bool cmp(pair<int, int> A, pair<int, int> B) { return A.second < B.second; }||| 27 int main() {||| 28 int _;||| 29 scanf(""%d"", &_);||| 30 while (_--) {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &x[i]);||| 34 for (int i = 0; i < n; i++) {||| 35 scanf(""%s"", s[i]);||| 36 }||| 37 int v = -1;||| 38 for (int i = 0; i < (1 << n); i++) {||| 39 int res = 0;||| 40 for (int j = 0; j < n; j++) {||| 41 if (i >> j & 1)||| 42 res += x[j];||| 43 else||| 44 res -= x[j];||| 45 }||| 46 for (int k = 0; k < m; k++) {||| 47 val[k].first = 0;||| 48 val[k].second = k;||| 49 }||| 50 for (int j = 0; j < n; j++) {||| 51 for (int k = 0; k < m; k++) {||| 52 if (s[j][k] == '1') {||| 53 if (i >> j & 1)||| 54 val[k].first--;||| 55 else||| 56 val[k].first++;||| 57 }||| 58 }||| 59 }||| 60 sort(val, val + m);||| 61 for (int j = 0; j < m; j++) {||| 62 res += (j + 1) * val[j].first;||| 63 }||| 64 if (res > v) {||| 65 v = res;||| 66 for (int j = 0; j < m; j++) {||| 67 ans[val[j].second] = j + 1;||| 68 }||| 69 }||| 70 }||| 71 for (int i = 0; i < m; i++) {||| 72 printf(""%d "", ans[i]);||| 73 }||| 74 printf(""\n"");||| 75 }||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e4 + 9;||| 4 const long long MOD = 1e9 + 7;||| 5 const int mod = 998244353;||| 6 inline long long qpow(long long b, long long e, long long m) {||| 7 long long a = 1;||| 8 for (; e; e >>= 1, b = b * b % m)||| 9 if (e & 1) a = a * b % m;||| 10 return a;||| 11 }||| 12 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 13 if (b == 0) {||| 14 x = 1, y = 0;||| 15 return a;||| 16 }||| 17 long long d = exgcd(b, a % b, x, y);||| 18 long long z = x;||| 19 x = y, y = z - y * (a / b);||| 20 return d;||| 21 }||| 22 int x[19];||| 23 char s[19][maxn];||| 24 int ans[maxn];||| 25 pair<int, int> val[maxn];||| 26 bool cmp(pair<int, int> A, pair<int, int> B) { return A.second < B.second; }||| 27 int main() {||| 28 int _;||| 29 scanf(""%d"", &_);||| 30 while (_--) {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &x[i]);||| 34 for (int i = 0; i < n; i++) {||| 35 scanf(""%s"", s[i]);||| 36 }||| 37 int v = 0;||| 38 for (int i = 0; i < (1 << n); i++) {||| 39 int res = 0;||| 40 for (int j = 0; j < n; j++) {||| 41 if (i >> j & 1)||| 42 res += x[j];||| 43 else||| 44 res -= x[j];||| 45 }||| 46 for (int k = 0; k < m; k++) {||| 47 val[k].first = 0;||| 48 val[k].second = k;||| 49 }||| 50 for (int j = 0; j < n; j++) {||| 51 for (int k = 0; k < m; k++) {||| 52 if (s[j][k] == '1') {||| 53 if (i >> j & 1)||| 54 val[k].first--;||| 55 else||| 56 val[k].first++;||| 57 }||| 58 }||| 59 }||| 60 sort(val, val + m);||| 61 for (int j = 0; j < m; j++) {||| 62 res += (j + 1) * val[j].first;||| 63 }||| 64 if (res > v) {||| 65 v = res;||| 66 for (int j = 0; j < m; j++) {||| 67 ans[val[j].second] = j + 1;||| 68 }||| 69 }||| 70 }||| 71 for (int i = 0; i < m; i++) {||| 72 printf(""%d "", ans[i]);||| 73 }||| 74 printf(""\n"");||| 75 }||| 76 }||| "	37 int v = -1;
158	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int x[n];||| 10 for (int i = 0; i < n; i++) cin >> x[i];||| 11 string s[n];||| 12 for (int i = 0; i < n; i++) cin >> s[i];||| 13 int ans[m], score = -1;||| 14 for (int i = 0; i < (1 << n); i++) {||| 15 vector<pair<int, int> > vt;||| 16 for (int j = 0; j < m; j++) {||| 17 int cnt = 0;||| 18 for (int k = 0; k < n; k++) {||| 19 if (s[k][j] == '1') {||| 20 if (i & (1 << k))||| 21 cnt++;||| 22 else||| 23 cnt--;||| 24 }||| 25 }||| 26 vt.push_back(make_pair(cnt, j));||| 27 }||| 28 sort(vt.begin(), vt.end());||| 29 int temp[m], curr_score = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 int idx = vt[j].second;||| 32 temp[idx] = j + 1;||| 33 }||| 34 for (int j = 0; j < n; j++) {||| 35 int sum = 0;||| 36 for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k];||| 37 curr_score += abs(sum - x[j]);||| 38 }||| 39 if (curr_score > score) {||| 40 score = curr_score;||| 41 for (int j = 0; j < m; j++) ans[j] = temp[j];||| 42 }||| 43 }||| 44 for (int i = 0; i < m; i++) cout << ans[i] << ' ';||| 45 cout << '\n';||| 46 }||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int x[n];||| 10 for (int i = 0; i < n; i++) cin >> x[i];||| 11 string s[n];||| 12 for (int i = 0; i < n; i++) cin >> s[i];||| 13 int ans[m], score = 0;||| 14 for (int i = 0; i < (1 << n); i++) {||| 15 vector<pair<int, int> > vt;||| 16 for (int j = 0; j < m; j++) {||| 17 int cnt = 0;||| 18 for (int k = 0; k < n; k++) {||| 19 if (s[k][j] == '1') {||| 20 if (i & (1 << k))||| 21 cnt++;||| 22 else||| 23 cnt--;||| 24 }||| 25 }||| 26 vt.push_back(make_pair(cnt, j));||| 27 }||| 28 sort(vt.begin(), vt.end());||| 29 int temp[m], curr_score = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 int idx = vt[j].second;||| 32 temp[idx] = j + 1;||| 33 }||| 34 for (int j = 0; j < n; j++) {||| 35 int sum = 0;||| 36 for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k];||| 37 curr_score += abs(sum - x[j]);||| 38 }||| 39 if (curr_score > score) {||| 40 score = curr_score;||| 41 for (int j = 0; j < m; j++) ans[j] = temp[j];||| 42 }||| 43 }||| 44 for (int i = 0; i < m; i++) cout << ans[i] << ' ';||| 45 cout << '\n';||| 46 }||| 47 }||| 	13 int ans[m], score = -1;
158	33	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXM];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXN];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXN];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	9 int p[MAXM];
158	112	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXM];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 10 + 5;||| 4 const int MAXM = 1e4 + 5;||| 5 const long long linf = 0x3f3f3f3f3f3f3f3f;||| 6 int n, m;||| 7 int a[MAXN];||| 8 char s[MAXN][MAXM];||| 9 int p[MAXM];||| 10 inline long long get_res(int mask) {||| 11 long long has = 0;||| 12 static int coef[MAXM];||| 13 memset(coef, 0, (m + 1) << 2);||| 14 for (int i = 1; i <= n; ++i) {||| 15 int t = (((mask) >> (i - 1)) & 1) ? 1 : -1;||| 16 has += -t * a[i];||| 17 for (int j = 1; j <= m; ++j)||| 18 if (s[i][j] == '1') coef[j] += t;||| 19 }||| 20 static int id[MAXN];||| 21 for (int i = 1; i <= m; ++i) id[i] = i;||| 22 sort(id + 1, id + m + 1, [](int x, int y) { return coef[x] < coef[y]; });||| 23 for (int i = 1; i <= m; ++i) p[id[i]] = i;||| 24 for (int i = 1; i <= m; ++i) has += coef[i] * p[i];||| 25 return has;||| 26 }||| 27 void solve(void) {||| 28 scanf(""%d%d"", &n, &m);||| 29 for (int i = 1; i <= n; ++i) scanf(""%d"", &a[i]);||| 30 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 31 int all = (1 << n) - 1;||| 32 long long ans = -linf;||| 33 int ansmask = -1;||| 34 for (int mask = 0; mask <= all; ++mask) {||| 35 long long cur = get_res(mask);||| 36 if (cur > ans) ans = cur, ansmask = mask;||| 37 }||| 38 get_res(ansmask);||| 39 for (int i = 1; i <= m; ++i) printf(""%d "", p[i]);||| 40 printf(""\n"");||| 41 }||| 42 int main(void) {||| 43 int T;||| 44 scanf(""%d"", &T);||| 45 while (T--) solve();||| 46 return 0;||| 47 }||| "	20 static int id[MAXM];
158	30	"1 #include <bits/stdc++.h>||| 2 std::mt19937 rng(||| 3 (unsigned int)std::chrono::steady_clock::now().time_since_epoch().count());||| 4 using namespace std;||| 5 void solve(int ttt) {||| 6 long long int n, m;||| 7 cin >> n >> m;||| 8 vector<long long int> x(n);||| 9 for (long long int i = 0; i < n; i++) cin >> x[i];||| 10 vector<vector<int> > a(n, vector<int>(m));||| 11 for (long long int i = 0; i < n; i++) {||| 12 string s;||| 13 cin >> s;||| 14 for (long long int j = 0; j < m; j++) {||| 15 if (s[j] == '1')||| 16 a[i][j] = 1;||| 17 else||| 18 a[i][j] = 0;||| 19 }||| 20 }||| 21 long long int res = LLONG_MIN;||| 22 vector<long long int> perm;||| 23 for (int msk = 0; msk < (1 << n); msk++) {||| 24 vector<int> coeff(m, 0);||| 25 long long int curVal = 0;||| 26 for (long long int i = 0; i < n; i++) {||| 27 if (msk & (1 << i)) {||| 28 curVal += x[i];||| 29 for (long long int j = 0; j < m; j++) {||| 30 if (a[i][j]) coeff[j]--;||| 31 }||| 32 } else {||| 33 curVal -= x[i];||| 34 for (long long int j = 0; j < m; j++) {||| 35 if (a[i][j]) coeff[j]++;||| 36 }||| 37 }||| 38 }||| 39 vector<int> ind(m);||| 40 iota(ind.begin(), ind.end(), 0);||| 41 sort(ind.begin(), ind.end(),||| 42 [&](int i, int j) { return coeff[i] < coeff[j]; });||| 43 long long int c = 1;||| 44 for (auto i : ind) {||| 45 curVal += c * coeff[i];||| 46 c++;||| 47 }||| 48 if (res < curVal) {||| 49 res = curVal;||| 50 vector<long long int> tmp(m);||| 51 for (long long int i = 0; i < m; i++) {||| 52 tmp[ind[i]] = i + 1;||| 53 }||| 54 swap(perm, tmp);||| 55 }||| 56 }||| 57 for (long long int i = 0; i < m; i++) {||| 58 cout << perm[i] << "" "";||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 int main() {||| 63 ios::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 int ttt;||| 66 ttt = 1;||| 67 cin >> ttt;||| 68 for (long long int i = 0; i < ttt; i++) solve(i);||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 std::mt19937 rng(||| 3 (unsigned int)std::chrono::steady_clock::now().time_since_epoch().count());||| 4 using namespace std;||| 5 void solve(int ttt) {||| 6 long long int n, m;||| 7 cin >> n >> m;||| 8 vector<long long int> x(n);||| 9 for (long long int i = 0; i < n; i++) cin >> x[i];||| 10 vector<vector<int> > a(n, vector<int>(m));||| 11 for (long long int i = 0; i < n; i++) {||| 12 string s;||| 13 cin >> s;||| 14 for (long long int j = 0; j < m; j++) {||| 15 if (s[j] == '1')||| 16 a[i][j] = 1;||| 17 else||| 18 a[i][j] = 0;||| 19 }||| 20 }||| 21 long long int res = LLONG_MIN;||| 22 vector<long long int> perm;||| 23 for (int msk = 0; msk < (1 << n); msk++) {||| 24 vector<int> coeff(m, 0);||| 25 long long int curVal = 0;||| 26 for (long long int i = 0; i < n; i++) {||| 27 if (msk & (1 << i)) {||| 28 curVal += x[i];||| 29 for (long long int j = 0; j < m; j++) {||| 30 if (a[i][j]) coeff[j]++;||| 31 }||| 32 } else {||| 33 curVal -= x[i];||| 34 for (long long int j = 0; j < m; j++) {||| 35 if (a[i][j]) coeff[j]--;||| 36 }||| 37 }||| 38 }||| 39 vector<int> ind(m);||| 40 iota(ind.begin(), ind.end(), 0);||| 41 sort(ind.begin(), ind.end(),||| 42 [&](int i, int j) { return coeff[i] < coeff[j]; });||| 43 long long int c = 1;||| 44 for (auto i : ind) {||| 45 curVal += c * coeff[i];||| 46 c++;||| 47 }||| 48 if (res < curVal) {||| 49 res = curVal;||| 50 vector<long long int> tmp(m);||| 51 for (long long int i = 0; i < m; i++) {||| 52 tmp[ind[i]] = i + 1;||| 53 }||| 54 swap(perm, tmp);||| 55 }||| 56 }||| 57 for (long long int i = 0; i < m; i++) {||| 58 cout << perm[i] << "" "";||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 int main() {||| 63 ios::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 int ttt;||| 66 ttt = 1;||| 67 cin >> ttt;||| 68 for (long long int i = 0; i < ttt; i++) solve(i);||| 69 }||| "	30 if (a[i][j]) coeff[j]--;
158	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10, M = 1e4 + 10;||| 4 int n, m, first[N], s[M][N], coef[M], ord[M], res[M];||| 5 void solve() {||| 6 cin >> n >> m;||| 7 for (int i = 0; i < n; i++) cin >> first[i];||| 8 for (int i = 0; i < n; i++) {||| 9 string b;||| 10 cin >> b;||| 11 for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0';||| 12 }||| 13 int ans = -1;||| 14 for (int i = 0; i < 1 << n; i++) {||| 15 int sum = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (i >> j & 1)||| 18 sum += first[j];||| 19 else||| 20 sum -= first[j];||| 21 }||| 22 for (int j = 1; j <= m; j++) {||| 23 coef[j] = 0;||| 24 for (int k = 0; k < n; k++) {||| 25 if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1;||| 26 }||| 27 ord[j] = j;||| 28 }||| 29 sort(ord + 1, ord + m + 1,||| 30 [&](int first, int second) { return coef[first] < coef[second]; });||| 31 for (int j = 1; j <= m; j++) sum += j * coef[ord[j]];||| 32 if (ans < sum) {||| 33 for (int j = 1; j <= m; j++) res[ord[j]] = j;||| 34 ans = sum;||| 35 }||| 36 }||| 37 for (int i = 1; i <= m; i++) cout << res[i] << "" "";||| 38 cout << endl;||| 39 return;||| 40 }||| 41 int main() {||| 42 int t;||| 43 for (cin >> t; t--; solve())||| 44 ;||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 10, M = 1e4 + 10;||| 4 int n, m, first[N], s[M][N], coef[M], ord[M], res[M];||| 5 void solve() {||| 6 cin >> n >> m;||| 7 for (int i = 0; i < n; i++) cin >> first[i];||| 8 for (int i = 0; i < n; i++) {||| 9 string b;||| 10 cin >> b;||| 11 for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0';||| 12 }||| 13 int ans = 0;||| 14 for (int i = 0; i < 1 << n; i++) {||| 15 int sum = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (i >> j & 1)||| 18 sum += first[j];||| 19 else||| 20 sum -= first[j];||| 21 }||| 22 for (int j = 1; j <= m; j++) {||| 23 coef[j] = 0;||| 24 for (int k = 0; k < n; k++) {||| 25 if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1;||| 26 }||| 27 ord[j] = j;||| 28 }||| 29 sort(ord + 1, ord + m + 1,||| 30 [&](int first, int second) { return coef[first] < coef[second]; });||| 31 for (int j = 1; j <= m; j++) sum += j * coef[ord[j]];||| 32 if (ans < sum) {||| 33 for (int j = 1; j <= m; j++) res[ord[j]] = j;||| 34 ans = sum;||| 35 }||| 36 }||| 37 for (int i = 1; i <= m; i++) cout << res[i] << "" "";||| 38 cout << endl;||| 39 return;||| 40 }||| 41 int main() {||| 42 int t;||| 43 for (cin >> t; t--; solve())||| 44 ;||| 45 return 0;||| 46 }||| "	13 int ans = -1;
158	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n, m;||| 11 cin >> n >> m;||| 12 vector<long long> a(n);||| 13 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i];||| 14 vector<string> s(n);||| 15 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i];||| 16 long long maxi = 0;||| 17 vector<long long> res(m);||| 18 for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) {||| 19 vector<pair<long long, long long>> c(m);||| 20 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 21 long long p = 1;||| 22 if (i & (1ll << j)) p = -1;||| 23 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) {||| 24 if (s[j][ii] == '1') c[ii].first += p;||| 25 }||| 26 }||| 27 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii;||| 28 sort(c.begin(), c.end());||| 29 long long val = 0;||| 30 for (int ii = 0, ggdem = m; ii < ggdem; ++ii)||| 31 val += (ii + 1) * c[ii].first;||| 32 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 33 if (i & (1ll << j))||| 34 val += a[j];||| 35 else||| 36 val -= a[j];||| 37 }||| 38 if (val >= maxi) {||| 39 maxi = val;||| 40 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii;||| 41 }||| 42 }||| 43 for (auto i : res) cout << i + 1 << "" "";||| 44 cout << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n, m;||| 11 cin >> n >> m;||| 12 vector<long long> a(n);||| 13 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i];||| 14 vector<string> s(n);||| 15 for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i];||| 16 long long maxi = 0;||| 17 vector<long long> res(m);||| 18 for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) {||| 19 vector<pair<long long, long long>> c(m);||| 20 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 21 long long p = 1;||| 22 if (i & (1ll << j)) p = -1;||| 23 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) {||| 24 if (s[j][ii] == '1') c[ii].first += p;||| 25 }||| 26 }||| 27 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii;||| 28 sort(c.begin(), c.end());||| 29 long long val = 0;||| 30 for (int ii = 0, ggdem = m; ii < ggdem; ++ii)||| 31 val += (ii + 1) * c[ii].first;||| 32 for (int j = 0, ggdem = n; j < ggdem; ++j) {||| 33 if (i & (1ll << j))||| 34 val += a[j];||| 35 else||| 36 val -= a[j];||| 37 }||| 38 if (val > maxi) {||| 39 maxi = val;||| 40 for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii;||| 41 }||| 42 }||| 43 for (auto i : res) cout << i + 1 << "" "";||| 44 cout << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	38 if (val >= maxi) {
158	125	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 static int xx[10], ans[10000];||| 8 static char s[10][10000 + 1];||| 9 int n, m, ansv;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) scanf(""%d"", &xx[i]);||| 12 for (int i = 0; i < n; i++) scanf(""%s"", s[i]);||| 13 ansv = -1;||| 14 memset(ans, 0, m * sizeof *ans);||| 15 for (int b = 0; b < 1 << n; b++) {||| 16 static int kk[10000];||| 17 int sum = 0, cnt;||| 18 vector<int> ii(m);||| 19 for (int i = 0; i < n; i++)||| 20 if (b >> i & 1)||| 21 sum += xx[i];||| 22 else||| 23 sum -= xx[i];||| 24 for (int h = 0; h < m; h++) {||| 25 int k = 0;||| 26 for (int i = 0; i < n; i++)||| 27 if (s[i][h] == '1') {||| 28 if (b >> i & 1)||| 29 k--;||| 30 else||| 31 k++;||| 32 }||| 33 kk[h] = k, ii[h] = h;||| 34 }||| 35 sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; });||| 36 cnt = 1;||| 37 for (int h : ii) sum += kk[h] * cnt++;||| 38 if (sum > ansv) {||| 39 ansv = sum;||| 40 cnt = 1;||| 41 for (int h : ii) {||| 42 ans[h] = cnt++;||| 43 }||| 44 }||| 45 }||| 46 for (int h = 0; h < m; h++) printf(""%d "", ans[h]);||| 47 printf(""\n"");||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 static int xx[10], ans[10000];||| 8 static char s[10][10000 + 1];||| 9 int n, m, ansv;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) scanf(""%d"", &xx[i]);||| 12 for (int i = 0; i < n; i++) scanf(""%s"", s[i]);||| 13 ansv = 0;||| 14 memset(ans, 0, m * sizeof *ans);||| 15 for (int b = 0; b < 1 << n; b++) {||| 16 static int kk[10000];||| 17 int sum = 0, cnt;||| 18 vector<int> ii(m);||| 19 for (int i = 0; i < n; i++)||| 20 if (b >> i & 1)||| 21 sum += xx[i];||| 22 else||| 23 sum -= xx[i];||| 24 for (int h = 0; h < m; h++) {||| 25 int k = 0;||| 26 for (int i = 0; i < n; i++)||| 27 if (s[i][h] == '1') {||| 28 if (b >> i & 1)||| 29 k--;||| 30 else||| 31 k++;||| 32 }||| 33 kk[h] = k, ii[h] = h;||| 34 }||| 35 sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; });||| 36 cnt = 1;||| 37 for (int h : ii) sum += kk[h] * cnt++;||| 38 if (sum > ansv) {||| 39 ansv = sum;||| 40 cnt = 1;||| 41 for (int h : ii) {||| 42 ans[h] = cnt++;||| 43 }||| 44 }||| 45 }||| 46 for (int h = 0; h < m; h++) printf(""%d "", ans[h]);||| 47 printf(""\n"");||| 48 }||| 49 return 0;||| 50 }||| "	13 ansv = -1;
158	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long int MOD = 998244353;||| 4 constexpr double EPS = 1e-8;||| 5 long long int N, M, K, T, H, W, L, R;||| 6 void Solve() {||| 7 cin >> N >> M;||| 8 vector<int> v(N);||| 9 for (int i = 0; i < N; i++) {||| 10 cin >> v[i];||| 11 }||| 12 vector<string> s(N);||| 13 for (auto& i : s) cin >> i;||| 14 int score = -1;||| 15 vector<int> ans(M);||| 16 for (int i = 0; i < 1 << N; i++) {||| 17 vector<int> sum(N);||| 18 vector<int> point(M);||| 19 int csum = 0;||| 20 vector<pair<int, int>> vp;||| 21 for (int j = 0; j < M; j++) {||| 22 int n = 0;||| 23 for (int k = 0; k < N; k++) {||| 24 if (s[k][j] == '1') {||| 25 if (i >> k & 1) {||| 26 n++;||| 27 } else {||| 28 n--;||| 29 }||| 30 }||| 31 }||| 32 vp.push_back({n, j});||| 33 }||| 34 sort(vp.begin(), vp.end());||| 35 for (int j = 0; j < vp.size(); j++) {||| 36 point[vp[j].second] = j + 1;||| 37 }||| 38 for (int j = 0; j < N; j++) {||| 39 for (int k = 0; k < M; k++) {||| 40 if (s[j][k] == '1') {||| 41 sum[j] += point[k];||| 42 }||| 43 }||| 44 }||| 45 for (int j = 0; j < N; j++) {||| 46 csum += abs(v[j] - sum[j]);||| 47 }||| 48 if (csum > score) {||| 49 score = csum;||| 50 ans = point;||| 51 }||| 52 }||| 53 for (auto i : ans) cout << i << "" "";||| 54 cout << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(0);||| 59 T = 1;||| 60 cin >> T;||| 61 while (T--) {||| 62 Solve();||| 63 }||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr long long int MOD = 998244353;||| 4 constexpr double EPS = 1e-8;||| 5 long long int N, M, K, T, H, W, L, R;||| 6 void Solve() {||| 7 cin >> N >> M;||| 8 vector<int> v(N);||| 9 for (int i = 0; i < N; i++) {||| 10 cin >> v[i];||| 11 }||| 12 vector<string> s(N);||| 13 for (auto& i : s) cin >> i;||| 14 int score = 0;||| 15 vector<int> ans(M);||| 16 for (int i = 0; i < 1 << N; i++) {||| 17 vector<int> sum(N);||| 18 vector<int> point(M);||| 19 int csum = 0;||| 20 vector<pair<int, int>> vp;||| 21 for (int j = 0; j < M; j++) {||| 22 int n = 0;||| 23 for (int k = 0; k < N; k++) {||| 24 if (s[k][j] == '1') {||| 25 if (i >> k & 1) {||| 26 n++;||| 27 } else {||| 28 n--;||| 29 }||| 30 }||| 31 }||| 32 vp.push_back({n, j});||| 33 }||| 34 sort(vp.begin(), vp.end());||| 35 for (int j = 0; j < vp.size(); j++) {||| 36 point[vp[j].second] = j + 1;||| 37 }||| 38 for (int j = 0; j < N; j++) {||| 39 for (int k = 0; k < M; k++) {||| 40 if (s[j][k] == '1') {||| 41 sum[j] += point[k];||| 42 }||| 43 }||| 44 }||| 45 for (int j = 0; j < N; j++) {||| 46 csum += abs(v[j] - sum[j]);||| 47 }||| 48 if (csum > score) {||| 49 score = csum;||| 50 ans = point;||| 51 }||| 52 }||| 53 for (auto i : ans) cout << i << "" "";||| 54 cout << endl;||| 55 }||| 56 int main() {||| 57 ios::sync_with_stdio(false);||| 58 cin.tie(0);||| 59 T = 1;||| 60 cin >> T;||| 61 while (T--) {||| 62 Solve();||| 63 }||| 64 }||| "	14 int score = -1;
158	32	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m;||| 10 cin >> n >> m;||| 11 vector<long long> x(n);||| 12 for (long long i = 0; i < n; ++i) {||| 13 cin >> x[i];||| 14 }||| 15 vector<string> s(n);||| 16 for (long long i = 0; i < n; ++i) {||| 17 cin >> s[i];||| 18 }||| 19 vector<vector<long long>> gr(1 << n);||| 20 for (long long j = 0; j < m; ++j) {||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 sum = (sum << 1) + s[i][j] - '0';||| 24 }||| 25 gr[sum].push_back(j);||| 26 }||| 27 vector<vector<long long>> srt;||| 28 for (long long i = 0; i < (1 << n); ++i) {||| 29 if ((long long)gr[i].size()) {||| 30 srt.push_back(gr[i]);||| 31 }||| 32 }||| 33 vector<long long> col(m);||| 34 for (long long i = 0; i < (long long)srt.size(); ++i) {||| 35 for (auto& j : srt[i]) {||| 36 col[j] = i;||| 37 }||| 38 }||| 39 vector<vector<long long>> uses(n);||| 40 for (long long i = 0; i < n; ++i) {||| 41 for (long long j = 0; j < m; ++j) {||| 42 if (s[i][j] == '1') {||| 43 uses[i].push_back(col[j]);||| 44 }||| 45 }||| 46 sort(uses[i].begin(), uses[i].end());||| 47 uses[i].erase(unique(uses[i].begin(), uses[i].end()), uses[i].end());||| 48 }||| 49 long long ans = 0;||| 50 vector<long long> vans;||| 51 for (long long i = 0; i < (1 << n); ++i) {||| 52 long long sum = 0;||| 53 vector<long long> gcnt((long long)srt.size());||| 54 for (long long j = 0; j < n; ++j) {||| 55 if (i & (1 << j)) {||| 56 sum += x[j];||| 57 for (auto& x : uses[j]) {||| 58 --gcnt[x];||| 59 }||| 60 } else {||| 61 sum -= x[j];||| 62 for (auto& x : uses[j]) {||| 63 ++gcnt[x];||| 64 }||| 65 }||| 66 }||| 67 vector<vector<long long>> gsrt;||| 68 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 69 gsrt.push_back({gcnt[h], (long long)srt[h].size(), h});||| 70 }||| 71 sort(gsrt.begin(), gsrt.end());||| 72 long long l = 1;||| 73 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 74 long long r = l + (long long)gsrt[h][1] - 1;||| 75 sum += (r + l) * (r - l + 1) / 2 * gsrt[h][0];||| 76 l = r + 1;||| 77 }||| 78 if (sum >= ans) {||| 79 ans = sum;||| 80 vans.clear();||| 81 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 82 vans.push_back(gsrt[h][2]);||| 83 }||| 84 }||| 85 }||| 86 vector<long long> out(m);||| 87 long long l = 1;||| 88 for (auto& i : vans) {||| 89 for (auto& j : srt[i]) {||| 90 out[j] = l++;||| 91 }||| 92 }||| 93 for (long long i = 0; i < m; ++i) {||| 94 cout << out[i] << ' ';||| 95 }||| 96 cout << '\n';||| 97 }||| 98 return 0;||| 99 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n, m;||| 10 cin >> n >> m;||| 11 vector<long long> x(n);||| 12 for (long long i = 0; i < n; ++i) {||| 13 cin >> x[i];||| 14 }||| 15 vector<string> s(n);||| 16 for (long long i = 0; i < n; ++i) {||| 17 cin >> s[i];||| 18 }||| 19 vector<vector<long long>> gr(1 << n);||| 20 for (long long j = 0; j < m; ++j) {||| 21 long long sum = 0;||| 22 for (long long i = 0; i < n; ++i) {||| 23 sum = (sum << 1) + s[i][j] - '0';||| 24 }||| 25 gr[sum].push_back(j);||| 26 }||| 27 vector<vector<long long>> srt;||| 28 for (long long i = 0; i < (1 << n); ++i) {||| 29 if ((long long)gr[i].size()) {||| 30 srt.push_back(gr[i]);||| 31 }||| 32 }||| 33 vector<long long> col(m);||| 34 for (long long i = 0; i < (long long)srt.size(); ++i) {||| 35 for (auto& j : srt[i]) {||| 36 col[j] = i;||| 37 }||| 38 }||| 39 vector<vector<long long>> uses(n);||| 40 for (long long i = 0; i < n; ++i) {||| 41 for (long long j = 0; j < m; ++j) {||| 42 if (s[i][j] == '1') {||| 43 uses[i].push_back(col[j]);||| 44 }||| 45 }||| 46 sort(uses[i].begin(), uses[i].end());||| 47 uses[i].erase(unique(uses[i].begin(), uses[i].end()), uses[i].end());||| 48 }||| 49 long long ans = 0;||| 50 vector<long long> vans;||| 51 for (long long i = 0; i < (1 << n); ++i) {||| 52 long long sum = 0;||| 53 vector<long long> gcnt((long long)srt.size());||| 54 for (long long j = 0; j < n; ++j) {||| 55 if (i & (1 << j)) {||| 56 sum += x[j];||| 57 for (auto& x : uses[j]) {||| 58 --gcnt[x];||| 59 }||| 60 } else {||| 61 sum -= x[j];||| 62 for (auto& x : uses[j]) {||| 63 ++gcnt[x];||| 64 }||| 65 }||| 66 }||| 67 vector<vector<long long>> gsrt;||| 68 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 69 gsrt.push_back({gcnt[h], (long long)srt[h].size(), h});||| 70 }||| 71 sort(gsrt.begin(), gsrt.end());||| 72 long long l = 1;||| 73 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 74 long long r = l + (long long)gsrt[h][1] - 1;||| 75 sum += (r + l) * (r - l + 1) / 2 * gsrt[h][0];||| 76 l = r + 1;||| 77 }||| 78 if (sum > ans) {||| 79 ans = sum;||| 80 vans.clear();||| 81 for (long long h = 0; h < (long long)srt.size(); ++h) {||| 82 vans.push_back(gsrt[h][2]);||| 83 }||| 84 }||| 85 }||| 86 vector<long long> out(m);||| 87 long long l = 1;||| 88 for (auto& i : vans) {||| 89 for (auto& j : srt[i]) {||| 90 out[j] = l++;||| 91 }||| 92 }||| 93 for (long long i = 0; i < m; ++i) {||| 94 cout << out[i] << ' ';||| 95 }||| 96 cout << '\n';||| 97 }||| 98 return 0;||| 99 }||| 	78 if (sum >= ans) {
158	48	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 vector<int> x(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> x[i];||| 14 }||| 15 vector<vector<int>> a(n, vector<int>(m));||| 16 for (int i = 0; i < n; i++) {||| 17 string s;||| 18 cin >> s;||| 19 for (int j = 0; j < m; j++) {||| 20 a[i][j] = (s[j] == '1');||| 21 }||| 22 }||| 23 const long long inf = (long long)2e18L;||| 24 long long res = -inf, msk = 0;||| 25 for (int i = 0; i < (1 << n); i++) {||| 26 long long z = 0;||| 27 for (int j = 0; j < n; j++) {||| 28 if ((1 << j) & i) {||| 29 z -= x[j];||| 30 } else {||| 31 z += x[j];||| 32 }||| 33 }||| 34 long long ans = z;||| 35 vector<int> cnt(m, 0);||| 36 for (int j = 0; j < n; j++) {||| 37 if ((1 << j) & i) {||| 38 for (int k = 0; k < m; k++) {||| 39 if (a[j][k]) {||| 40 cnt[k] += 1;||| 41 }||| 42 }||| 43 } else {||| 44 for (int k = 0; k < m; k++) {||| 45 if (a[j][k]) {||| 46 cnt[k] -= 1;||| 47 }||| 48 }||| 49 }||| 50 }||| 51 sort(cnt.begin(), cnt.end());||| 52 for (int j = 0; j < m; j++) {||| 53 ans += cnt[j] * 1LL * (j + 1);||| 54 }||| 55 if (ans > res) {||| 56 res = ans;||| 57 msk = i;||| 58 }||| 59 }||| 60 {||| 61 vector<pair<int, int>> cnt(m);||| 62 for (int i = 0; i < m; i++) {||| 63 cnt[i].first = 0;||| 64 cnt[i].second = i;||| 65 }||| 66 for (int j = 0; j < n; j++) {||| 67 if ((1 << j) & msk) {||| 68 for (int k = 0; k < m; k++) {||| 69 if (a[j][k]) {||| 70 cnt[k].first += 1;||| 71 }||| 72 }||| 73 } else {||| 74 for (int k = 0; k < m; k++) {||| 75 if (a[j][k]) {||| 76 cnt[k].first -= 1;||| 77 }||| 78 }||| 79 }||| 80 }||| 81 sort(cnt.begin(), cnt.end());||| 82 vector<int> p(m);||| 83 for (int j = 0; j < m; j++) {||| 84 p[cnt[j].second] = j + 1;||| 85 }||| 86 for (const auto& xx : p) {||| 87 cout << xx << "" "";||| 88 }||| 89 cout << '\n';||| 90 }||| 91 }||| 92 return 0;||| 93 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int tt;||| 7 cin >> tt;||| 8 while (tt--) {||| 9 int n, m;||| 10 cin >> n >> m;||| 11 vector<int> x(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> x[i];||| 14 }||| 15 vector<vector<int>> a(n, vector<int>(m));||| 16 for (int i = 0; i < n; i++) {||| 17 string s;||| 18 cin >> s;||| 19 for (int j = 0; j < m; j++) {||| 20 a[i][j] = (s[j] == '1');||| 21 }||| 22 }||| 23 const long long inf = (long long)2e18L;||| 24 long long res = -inf, msk = 0;||| 25 for (int i = 0; i < (1 << n); i++) {||| 26 long long z = 0;||| 27 for (int j = 0; j < n; j++) {||| 28 if ((1 << j) & i) {||| 29 z -= x[j];||| 30 } else {||| 31 z += x[j];||| 32 }||| 33 }||| 34 long long ans = z;||| 35 vector<int> cnt(m, 0);||| 36 for (int j = 0; j < n; j++) {||| 37 if ((1 << j) & i) {||| 38 for (int k = 0; k < m; k++) {||| 39 if (a[j][k]) {||| 40 cnt[k] += 1;||| 41 }||| 42 }||| 43 } else {||| 44 for (int k = 0; k < m; k++) {||| 45 if (a[j][k]) {||| 46 cnt[k] -= 1;||| 47 }||| 48 }||| 49 }||| 50 }||| 51 sort(cnt.begin(), cnt.end());||| 52 for (int j = 0; j < m; j++) {||| 53 ans += cnt[j] * 1LL * (j + 1);||| 54 }||| 55 if (ans > res) {||| 56 ans = res;||| 57 msk = i;||| 58 }||| 59 }||| 60 {||| 61 vector<pair<int, int>> cnt(m);||| 62 for (int i = 0; i < m; i++) {||| 63 cnt[i].first = 0;||| 64 cnt[i].second = i;||| 65 }||| 66 for (int j = 0; j < n; j++) {||| 67 if ((1 << j) & msk) {||| 68 for (int k = 0; k < m; k++) {||| 69 if (a[j][k]) {||| 70 cnt[k].first += 1;||| 71 }||| 72 }||| 73 } else {||| 74 for (int k = 0; k < m; k++) {||| 75 if (a[j][k]) {||| 76 cnt[k].first -= 1;||| 77 }||| 78 }||| 79 }||| 80 }||| 81 sort(cnt.begin(), cnt.end());||| 82 vector<int> p(m);||| 83 for (int j = 0; j < m; j++) {||| 84 p[cnt[j].second] = j + 1;||| 85 }||| 86 for (const auto& xx : p) {||| 87 cout << xx << "" "";||| 88 }||| 89 cout << '\n';||| 90 }||| 91 }||| 92 return 0;||| 93 }||| "	56 res = ans;
158	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char s[10][10001];||| 4 int X[10];||| 5 pair<int, vector<int>> Calculate(int n, int m, int mask) {||| 6 vector<pair<int, int>> v(m);||| 7 for (int k = 0; k < m; ++k) {||| 8 int c = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (s[i][k] == '0') {||| 11 continue;||| 12 }||| 13 c += ((mask & (1 << i)) != 0) ? 1 : -1;||| 14 }||| 15 v[k] = {c, k};||| 16 }||| 17 int ans = 0;||| 18 for (int i = 0; i < n; ++i) {||| 19 int c = ((mask & (1 << i)) != 0) ? -1 : 1;||| 20 ans += c * X[i];||| 21 }||| 22 vector<int> p(m);||| 23 sort(v.begin(), v.end());||| 24 for (int k = 0; k < m; ++k) {||| 25 ans += v[k].first * (k + 1);||| 26 p[v[k].second] = k + 1;||| 27 }||| 28 return {ans, p};||| 29 }||| 30 void Solve() {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 0; i < n; ++i) {||| 34 scanf(""%d"", &X[i]);||| 35 }||| 36 for (int i = 0; i < n; ++i) {||| 37 scanf(""%s"", s[i]);||| 38 }||| 39 pair<int, vector<int>> ans = {INT_MIN, vector<int>()};||| 40 for (int mask = 0; mask < (1 << n); ++mask) {||| 41 ans = max(ans, Calculate(n, m, mask));||| 42 }||| 43 auto [_, p] = ans;||| 44 for (int pi : p) {||| 45 printf(""%d "", pi);||| 46 }||| 47 printf(""\n"");||| 48 }||| 49 int main() {||| 50 int t;||| 51 scanf(""%d"", &t);||| 52 while (t--) {||| 53 Solve();||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char s[10][10001];||| 4 int X[10];||| 5 pair<int, vector<int>> Calculate(int n, int m, int mask) {||| 6 vector<pair<int, int>> v(m);||| 7 for (int k = 0; k < m; ++k) {||| 8 int c = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (s[i][k] == '0') {||| 11 continue;||| 12 }||| 13 c += ((mask & (1 << i)) != 0) ? 1 : -1;||| 14 }||| 15 v[k] = {c, k};||| 16 }||| 17 int ans = 0;||| 18 for (int i = 0; i < n; ++i) {||| 19 int c = ((mask & (1 << i)) != 0) ? -1 : 1;||| 20 ans += c * X[i];||| 21 }||| 22 vector<int> p(m);||| 23 sort(v.begin(), v.end());||| 24 for (int k = 0; k < m; ++k) {||| 25 ans += v[k].first * (k + 1);||| 26 p[v[k].second] = k + 1;||| 27 }||| 28 return {ans, p};||| 29 }||| 30 void Solve() {||| 31 int n, m;||| 32 scanf(""%d%d"", &n, &m);||| 33 for (int i = 1; i <= n; ++i) {||| 34 scanf(""%d"", &X[i]);||| 35 }||| 36 for (int i = 0; i < n; ++i) {||| 37 scanf(""%s"", s[i]);||| 38 }||| 39 pair<int, vector<int>> ans = {INT_MIN, vector<int>()};||| 40 for (int mask = 0; mask < (1 << n); ++mask) {||| 41 ans = max(ans, Calculate(n, m, mask));||| 42 }||| 43 auto [_, p] = ans;||| 44 for (int pi : p) {||| 45 printf(""%d "", pi);||| 46 }||| 47 printf(""\n"");||| 48 }||| 49 int main() {||| 50 int t;||| 51 scanf(""%d"", &t);||| 52 while (t--) {||| 53 Solve();||| 54 }||| 55 return 0;||| 56 }||| "	33 for (int i = 0; i < n; ++i) {
158	57	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 const int M = 1e4 + 5;||| 5 int t, n, m, a[N], sum, f, ans[M], res;||| 6 char s[N][M];||| 7 pair<int, int> c[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n >> m;||| 13 res = -1;||| 14 for (int i = 1; i <= n; i++) cin >> a[i];||| 15 for (int i = 1; i <= n; i++) cin >> (s[i] + 1);||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 sum = 0;||| 18 for (int j = 1; j <= m; j++) c[j] = {0, j};||| 19 for (int j = 1; j <= n; j++) {||| 20 if ((i >> (j - 1)) & 1)||| 21 f = 1;||| 22 else||| 23 f = -1;||| 24 sum += f * a[j];||| 25 for (int k = 1; k <= m; k++)||| 26 if (s[j][k] == '1') c[k].first -= f;||| 27 }||| 28 sort(c + 1, c + m + 1);||| 29 for (int j = 1; j <= m; j++) sum += j * c[j].first;||| 30 if (sum > res) {||| 31 res = sum;||| 32 for (int j = 1; j <= m; j++) ans[c[j].second] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15;||| 4 const int M = 1e4 + 5;||| 5 int t, n, m, a[N], sum, f, ans[N], res;||| 6 char s[N][M];||| 7 pair<int, int> c[M];||| 8 int main() {||| 9 ios::sync_with_stdio(false);||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n >> m;||| 13 res = -1;||| 14 for (int i = 1; i <= n; i++) cin >> a[i];||| 15 for (int i = 1; i <= n; i++) cin >> (s[i] + 1);||| 16 for (int i = 0; i < (1 << n); i++) {||| 17 sum = 0;||| 18 for (int j = 1; j <= m; j++) c[j] = {0, j};||| 19 for (int j = 1; j <= n; j++) {||| 20 if ((i >> (j - 1)) & 1)||| 21 f = 1;||| 22 else||| 23 f = -1;||| 24 sum += f * a[j];||| 25 for (int k = 1; k <= m; k++)||| 26 if (s[j][k] == '1') c[k].first -= f;||| 27 }||| 28 sort(c + 1, c + m + 1);||| 29 for (int j = 1; j <= m; j++) sum += j * c[j].first;||| 30 if (sum > res) {||| 31 res = sum;||| 32 for (int j = 1; j <= m; j++) ans[c[j].second] = j;||| 33 }||| 34 }||| 35 for (int i = 1; i <= m; i++) cout << ans[i] << ' ';||| 36 cout << endl;||| 37 }||| 38 return 0;||| 39 }||| 	5 int t, n, m, a[N], sum, f, ans[M], res;
158	49	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 12;||| 4 const int M = 10005;||| 5 const int lim = 200000;||| 6 const int inf = 1e9;||| 7 int T;||| 8 int n, m;||| 9 int x[N];||| 10 char s[N][M];||| 11 int cnt[M];||| 12 int b[M];||| 13 int ans[M];||| 14 bool cmp(int i, int j) { return cnt[i] < cnt[j]; }||| 15 int main() {||| 16 scanf(""%d"", &T);||| 17 while (T--) {||| 18 scanf(""%d%d"", &n, &m);||| 19 for (int i = 0; i <= n - 1; ++i) scanf(""%d"", &x[i]);||| 20 for (int i = 0; i <= n - 1; ++i) scanf(""%s"", s[i]);||| 21 int ret = -inf;||| 22 for (int mask = 0; mask <= (1 << n) - 1; ++mask) {||| 23 for (int j = 0; j <= m - 1; ++j) cnt[j] = 0;||| 24 for (int i = 0; i <= n - 1; ++i) {||| 25 for (int j = 0; j <= m - 1; ++j) {||| 26 if (s[i][j] == '1') {||| 27 if (mask & (1 << i))||| 28 ++cnt[j];||| 29 else||| 30 --cnt[j];||| 31 }||| 32 }||| 33 }||| 34 for (int j = 0; j <= m - 1; ++j) b[j] = j;||| 35 sort(b, b + m, cmp);||| 36 int tmp = 0;||| 37 for (int i = 0; i <= n - 1; ++i) {||| 38 int r = 0;||| 39 for (int j = 0; j <= m - 1; ++j) {||| 40 if (s[i][b[j]] == '1') {||| 41 r += j + 1;||| 42 }||| 43 }||| 44 if (mask & (1 << i))||| 45 tmp += r - x[i];||| 46 else||| 47 tmp -= r - x[i];||| 48 }||| 49 if (tmp > ret) {||| 50 ret = tmp;||| 51 for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1;||| 52 }||| 53 }||| 54 for (int j = 0; j <= m - 1; ++j) printf(""%d "", ans[j]);||| 55 printf(""\n"");||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 12;||| 4 const int M = 10005;||| 5 const int lim = 200000;||| 6 const int inf = 1e9;||| 7 int T;||| 8 int n, m;||| 9 int x[N];||| 10 char s[N][M];||| 11 int cnt[M];||| 12 int b[M];||| 13 int ans[M];||| 14 bool cmp(int i, int j) { return cnt[i] < cnt[j]; }||| 15 int main() {||| 16 scanf(""%d"", &T);||| 17 while (T--) {||| 18 scanf(""%d%d"", &n, &m);||| 19 for (int i = 0; i <= n - 1; ++i) scanf(""%d"", &x[i]);||| 20 for (int i = 0; i <= n - 1; ++i) scanf(""%s"", s[i]);||| 21 int ret = 0;||| 22 for (int mask = 0; mask <= (1 << n) - 1; ++mask) {||| 23 for (int j = 0; j <= m - 1; ++j) cnt[j] = 0;||| 24 for (int i = 0; i <= n - 1; ++i) {||| 25 for (int j = 0; j <= m - 1; ++j) {||| 26 if (s[i][j] == '1') {||| 27 if (mask & (1 << i))||| 28 ++cnt[j];||| 29 else||| 30 --cnt[j];||| 31 }||| 32 }||| 33 }||| 34 for (int j = 0; j <= m - 1; ++j) b[j] = j;||| 35 sort(b, b + m, cmp);||| 36 int tmp = 0;||| 37 for (int i = 0; i <= n - 1; ++i) {||| 38 int r = 0;||| 39 for (int j = 0; j <= m - 1; ++j) {||| 40 if (s[i][b[j]] == '1') {||| 41 r += j + 1;||| 42 }||| 43 }||| 44 if (mask & (1 << i))||| 45 tmp += r - x[i];||| 46 else||| 47 tmp -= r - x[i];||| 48 }||| 49 if (tmp > ret) {||| 50 ret = tmp;||| 51 for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1;||| 52 }||| 53 }||| 54 for (int j = 0; j <= m - 1; ++j) printf(""%d "", ans[j]);||| 55 printf(""\n"");||| 56 }||| 57 return 0;||| 58 }||| "	21 int ret = -inf;
158	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, n, m;||| 4 int x[15];||| 5 char s[15][10005];||| 6 int v[10005], cnt[25], tmp[25];||| 7 int P[10005];||| 8 int ans;||| 9 void dfs(int p, int sum) {||| 10 if (p == n + 1) {||| 11 int cur = m, res = sum;||| 12 for (int i = 20; i >= 0; i--) {||| 13 res += (i - 10) * (cur * 2 - cnt[i] + 1) * cnt[i] / 2;||| 14 cur -= cnt[i];||| 15 }||| 16 tmp[0] = cnt[0];||| 17 for (int i = 1; i <= 20; i++) tmp[i] = tmp[i - 1] + cnt[i];||| 18 if (ans <= res) {||| 19 ans = res;||| 20 for (int i = 1; i <= m; i++) {||| 21 P[i] = tmp[v[i] + 10]--;||| 22 }||| 23 }||| 24 return;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 if (s[p][i] == '1') {||| 28 cnt[v[i] + 10]--;||| 29 v[i]++;||| 30 cnt[v[i] + 10]++;||| 31 }||| 32 }||| 33 dfs(p + 1, sum - x[p]);||| 34 for (int i = 1; i <= m; i++) {||| 35 if (s[p][i] == '1') {||| 36 cnt[v[i] + 10]--;||| 37 v[i] -= 2;||| 38 cnt[v[i] + 10]++;||| 39 }||| 40 }||| 41 dfs(p + 1, sum + x[p]);||| 42 for (int i = 1; i <= m; i++) {||| 43 if (s[p][i] == '1') {||| 44 cnt[v[i] + 10]--;||| 45 v[i]++;||| 46 cnt[v[i] + 10]++;||| 47 }||| 48 }||| 49 }||| 50 void solve() {||| 51 scanf(""%d%d"", &n, &m);||| 52 for (int i = 1; i <= n; i++) scanf(""%d"", &x[i]);||| 53 for (int i = 1; i <= n; i++) {||| 54 scanf(""%s"", &s[i][1]);||| 55 }||| 56 for (int i = 1; i <= m; i++) v[i] = 0;||| 57 for (int i = 0; i <= 20; i++) cnt[i] = 0;||| 58 cnt[10] = m;||| 59 ans = 0;||| 60 dfs(1, 0);||| 61 for (int i = 1; i <= m; i++) printf(""%d "", P[i]);||| 62 printf(""\n"");||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &T);||| 66 while (T--) solve();||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, n, m;||| 4 int x[15];||| 5 char s[15][10005];||| 6 int v[10005], cnt[25], tmp[25];||| 7 int P[10005];||| 8 int ans;||| 9 void dfs(int p, int sum) {||| 10 if (p == n + 1) {||| 11 int cur = m, res = sum;||| 12 for (int i = 20; i >= 0; i--) {||| 13 res += (i - 10) * (cur * 2 - cnt[i] + 1) * cnt[i] / 2;||| 14 cur -= cnt[i];||| 15 }||| 16 tmp[0] = cnt[0];||| 17 for (int i = 1; i <= 20; i++) tmp[i] = tmp[i - 1] + cnt[i];||| 18 if (ans < res) {||| 19 ans = res;||| 20 for (int i = 1; i <= m; i++) {||| 21 P[i] = tmp[v[i] + 10]--;||| 22 }||| 23 }||| 24 return;||| 25 }||| 26 for (int i = 1; i <= m; i++) {||| 27 if (s[p][i] == '1') {||| 28 cnt[v[i] + 10]--;||| 29 v[i]++;||| 30 cnt[v[i] + 10]++;||| 31 }||| 32 }||| 33 dfs(p + 1, sum - x[p]);||| 34 for (int i = 1; i <= m; i++) {||| 35 if (s[p][i] == '1') {||| 36 cnt[v[i] + 10]--;||| 37 v[i] -= 2;||| 38 cnt[v[i] + 10]++;||| 39 }||| 40 }||| 41 dfs(p + 1, sum + x[p]);||| 42 for (int i = 1; i <= m; i++) {||| 43 if (s[p][i] == '1') {||| 44 cnt[v[i] + 10]--;||| 45 v[i]++;||| 46 cnt[v[i] + 10]++;||| 47 }||| 48 }||| 49 }||| 50 void solve() {||| 51 scanf(""%d%d"", &n, &m);||| 52 for (int i = 1; i <= n; i++) scanf(""%d"", &x[i]);||| 53 for (int i = 1; i <= n; i++) {||| 54 scanf(""%s"", &s[i][1]);||| 55 }||| 56 for (int i = 1; i <= m; i++) v[i] = 0;||| 57 for (int i = 0; i <= 20; i++) cnt[i] = 0;||| 58 cnt[10] = m;||| 59 ans = 0;||| 60 dfs(1, 0);||| 61 for (int i = 1; i <= m; i++) printf(""%d "", P[i]);||| 62 printf(""\n"");||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &T);||| 66 while (T--) solve();||| 67 return 0;||| 68 }||| "	18 if (ans <= res) {
158	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c > '9' || c < '0') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') {||| 11 ans = (ans << 1) + (ans << 3) + c - '0';||| 12 c = getchar();||| 13 }||| 14 return ans * f;||| 15 }||| 16 inline void write(int x) {||| 17 if (x < 0) putchar('-'), x = -x;||| 18 if (x / 10) write(x / 10);||| 19 putchar((char)(x % 10) + '0');||| 20 }||| 21 template <typename T>||| 22 inline T Abs(T a) {||| 23 return a > 0 ? a : -a;||| 24 };||| 25 template <typename T, typename TT>||| 26 inline T Min(T a, TT b) {||| 27 return a < b ? a : b;||| 28 }||| 29 template <typename T, typename TT>||| 30 inline T Max(T a, TT b) {||| 31 return a < b ? b : a;||| 32 }||| 33 const int N = 1e4 + 5;||| 34 int t, n, m, a[N], c[N], ans;||| 35 char s[15][N];||| 36 pair<int, int> b[N];||| 37 signed main() {||| 38 t = read();||| 39 while (t--) {||| 40 n = read();||| 41 m = read();||| 42 for (int i = 1; i <= n; ++i) a[i] = read();||| 43 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 44 ans = -1e9;||| 45 for (int i = 0; i < (1 << n); ++i) {||| 46 for (int j = 1; j <= m; ++j) {||| 47 b[j] = make_pair(0, j);||| 48 for (int k = 1; k <= n; ++k)||| 49 if (s[k][j] == '1') {||| 50 if ((i >> (k - 1)) & 1)||| 51 b[j].first++;||| 52 else||| 53 b[j].first--;||| 54 }||| 55 }||| 56 sort(b + 1, b + 1 + m);||| 57 int tmp = 0;||| 58 for (int j = 1; j <= n; ++j)||| 59 if ((i >> (j - 1)) & 1)||| 60 tmp -= a[j];||| 61 else||| 62 tmp += a[j];||| 63 for (int j = 1; j <= m; ++j) tmp += j * b[j].first;||| 64 if (tmp > ans) {||| 65 ans = tmp;||| 66 for (int j = 1; j <= m; ++j) c[b[j].second] = j;||| 67 }||| 68 }||| 69 for (int i = 1; i <= m; ++i) write(c[i]), putchar(' ');||| 70 puts("""");||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int ans = 0, f = 1;||| 5 char c = getchar();||| 6 while (c > '9' || c < '0') {||| 7 if (c == '-') f = -1;||| 8 c = getchar();||| 9 }||| 10 while (c >= '0' && c <= '9') {||| 11 ans = (ans << 1) + (ans << 3) + c - '0';||| 12 c = getchar();||| 13 }||| 14 return ans * f;||| 15 }||| 16 inline void write(int x) {||| 17 if (x < 0) putchar('-'), x = -x;||| 18 if (x / 10) write(x / 10);||| 19 putchar((char)(x % 10) + '0');||| 20 }||| 21 template <typename T>||| 22 inline T Abs(T a) {||| 23 return a > 0 ? a : -a;||| 24 };||| 25 template <typename T, typename TT>||| 26 inline T Min(T a, TT b) {||| 27 return a < b ? a : b;||| 28 }||| 29 template <typename T, typename TT>||| 30 inline T Max(T a, TT b) {||| 31 return a < b ? b : a;||| 32 }||| 33 const int N = 1e4 + 5;||| 34 int t, n, m, a[N], c[N], ans;||| 35 char s[15][N];||| 36 pair<int, int> b[N];||| 37 signed main() {||| 38 t = read();||| 39 while (t--) {||| 40 n = read();||| 41 m = read();||| 42 for (int i = 1; i <= n; ++i) a[i] = read();||| 43 for (int i = 1; i <= n; ++i) scanf(""%s"", s[i] + 1);||| 44 ans = -1e9;||| 45 for (int i = 0; i < (1 << n); ++i) {||| 46 for (int j = 1; j <= m; ++j) {||| 47 b[j] = make_pair(0, j);||| 48 for (int k = 1; k <= n; ++k)||| 49 if (s[k][j] == '1') {||| 50 if ((i >> (k - 1)) & 1)||| 51 b[j].first++;||| 52 else||| 53 b[j].first--;||| 54 }||| 55 }||| 56 sort(b + 1, b + 1 + m);||| 57 int tmp = 0;||| 58 for (int j = 1; j <= n; ++j)||| 59 if ((i >> (j - 1)) & 1)||| 60 tmp -= a[j];||| 61 else||| 62 tmp += a[j];||| 63 for (int j = 1; j <= m; ++j) tmp += i * b[j].first;||| 64 if (tmp > ans) {||| 65 ans = tmp;||| 66 for (int j = 1; j <= m; ++j) c[b[j].second] = j;||| 67 }||| 68 }||| 69 for (int i = 1; i <= m; ++i) write(c[i]), putchar(' ');||| 70 puts("""");||| 71 }||| 72 return 0;||| 73 }||| "	63 for (int j = 1; j <= m; ++j) tmp += j * b[j].first;
159	48	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 1;||| 4 const long long infll = 1e18 + 1;||| 5 const int mod = 998244353;||| 6 mt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());||| 7 template <typename T>||| 8 bool chmin(T &a, T b) {||| 9 if (a > b) {||| 10 a = b;||| 11 return true;||| 12 }||| 13 return false;||| 14 }||| 15 template <typename T>||| 16 bool chmax(T &a, T b) {||| 17 if (a < b) {||| 18 a = b;||| 19 return true;||| 20 }||| 21 return false;||| 22 }||| 23 struct smth {||| 24 int x;||| 25 };||| 26 const int maxn = 1e6 + 1;||| 27 int p[maxn];||| 28 long long h[maxn];||| 29 void solve() {||| 30 int n;||| 31 cin >> n;||| 32 vector<long long> f(n + 1);||| 33 f[0] = 0;||| 34 long long s = 0;||| 35 map<long long, int> mp;||| 36 for (int i = 1; i <= n; i++) {||| 37 f[i] = f[i - 1] ^ h[i];||| 38 mp[f[i]] = i;||| 39 s ^= f[i];||| 40 }||| 41 if (s == 0) {||| 42 cout << n << '\n';||| 43 for (int i = 1; i <= n; i++) {||| 44 cout << i << ' ';||| 45 }||| 46 return;||| 47 }||| 48 if (mp.count(s)) {||| 49 cout << n - 1 << '\n';||| 50 for (int j = 1; j <= n; j++) {||| 51 if (mp[s] != j) {||| 52 cout << j << ' ';||| 53 }||| 54 }||| 55 return;||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 if (mp.count(s ^ f[i]) && mp[s ^ f[i]] != i) {||| 59 cout << n - 2 << '\n';||| 60 for (int j = 1; j <= n; j++) {||| 61 if (mp[s ^ f[i]] != j && i != j) {||| 62 cout << j << ' ';||| 63 }||| 64 }||| 65 return;||| 66 }||| 67 }||| 68 cout << n - 3 << '\n';||| 69 for (int i = 1; i <= n; i++) {||| 70 if (i != 2 && i != n && i != (n - 1) / 2) {||| 71 cout << i << ' ';||| 72 }||| 73 }||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(false);||| 77 cin.tie(0), cout.tie(0);||| 78 int t;||| 79 t = 1;||| 80 int cnt = 0;||| 81 for (int i = 2; i < maxn; i++) {||| 82 if (p[i] == 0) {||| 83 cnt++;||| 84 for (int j = i; j < maxn; j += i) {||| 85 chmax(p[j], i);||| 86 }||| 87 }||| 88 }||| 89 p[1] = 0;||| 90 set<long long> gen;||| 91 while (gen.size() != cnt) {||| 92 gen.insert(rnd());||| 93 }||| 94 for (int i = 2; i < maxn; i++) {||| 95 if (p[i] == i) {||| 96 h[i] = *gen.begin();||| 97 gen.erase(gen.begin());||| 98 } else {||| 99 h[i] = h[i / p[i]] ^ h[p[i]];||| 100 }||| 101 }||| 102 while (t--) {||| 103 solve();||| 104 }||| 105 return 0;||| 106 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9 + 1;||| 4 const long long infll = 1e18 + 1;||| 5 const int mod = 998244353;||| 6 mt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());||| 7 template <typename T>||| 8 bool chmin(T &a, T b) {||| 9 if (a > b) {||| 10 a = b;||| 11 return true;||| 12 }||| 13 return false;||| 14 }||| 15 template <typename T>||| 16 bool chmax(T &a, T b) {||| 17 if (a < b) {||| 18 a = b;||| 19 return true;||| 20 }||| 21 return false;||| 22 }||| 23 struct smth {||| 24 int x;||| 25 };||| 26 const int maxn = 1e6 + 1;||| 27 int p[maxn];||| 28 long long h[maxn];||| 29 void solve() {||| 30 int n;||| 31 cin >> n;||| 32 vector<long long> f(n + 1);||| 33 f[0] = 0;||| 34 long long s = 0;||| 35 map<long long, int> mp;||| 36 for (int i = 1; i <= n; i++) {||| 37 f[i] = f[i - 1] ^ h[i];||| 38 mp[f[i]] = i;||| 39 s ^= f[i];||| 40 }||| 41 if (s == 0) {||| 42 cout << n << '\n';||| 43 for (int i = 1; i <= n; i++) {||| 44 cout << i << ' ';||| 45 }||| 46 return;||| 47 }||| 48 if (mp.count(s)) {||| 49 cout << n - 1 << '\n';||| 50 for (int j = 1; j <= n; j++) {||| 51 if (mp[s] != j) {||| 52 cout << j << ' ';||| 53 }||| 54 }||| 55 return;||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 if (mp.count(s ^ f[i]) && mp[s ^ f[i]] != i) {||| 59 cout << n - 2 << '\n';||| 60 for (int j = 1; j <= n; j++) {||| 61 if (mp[s ^ f[i]] != j && i != j) {||| 62 cout << j << ' ';||| 63 }||| 64 }||| 65 return;||| 66 }||| 67 }||| 68 cout << n - 3 << '\n';||| 69 for (int i = 1; i <= n; i++) {||| 70 if (i != 2 && i != n && i != (n - 1) / 2) {||| 71 cout << i << ' ';||| 72 }||| 73 }||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(false);||| 77 cin.tie(0), cout.tie(0);||| 78 int t;||| 79 t = 1;||| 80 int cnt = 0;||| 81 for (int i = 2; i < maxn; i++) {||| 82 if (p[i] == 0) {||| 83 cnt++;||| 84 for (int j = i; j < maxn; j += i) {||| 85 chmax(p[j], i);||| 86 }||| 87 }||| 88 }||| 89 p[1] = 0;||| 90 set<int> gen;||| 91 while (gen.size() != cnt) {||| 92 gen.insert(rnd());||| 93 }||| 94 for (int i = 2; i < maxn; i++) {||| 95 if (p[i] == i) {||| 96 h[i] = *gen.begin();||| 97 gen.erase(gen.begin());||| 98 } else {||| 99 h[i] = h[i / p[i]] ^ h[p[i]];||| 100 }||| 101 }||| 102 while (t--) {||| 103 solve();||| 104 }||| 105 return 0;||| 106 }||| 	90 set<long long> gen;
159	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ull = unsigned long long;||| 4 const int N = 1e6 + 5;||| 5 mt19937_64 rnd(time(0));||| 6 int n, K, flag[N], pr[N], cnt;||| 7 ull H[N], sum;||| 8 unordered_map<ull, int> pos;||| 9 int main() {||| 10 scanf(""%d"", &n);||| 11 K = n >> 1;||| 12 flag[0] = flag[1] = 1, H[1] = 0;||| 13 for (int i = 2; i <= n; i++) {||| 14 if (!flag[i]) pr[++cnt] = i, H[i] = rnd();||| 15 for (int j = 1; j <= cnt && i * pr[j] <= n; j++) {||| 16 flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]];||| 17 if (i % pr[j] == 0) break;||| 18 }||| 19 }||| 20 for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i];||| 21 if (sum == 0) {||| 22 printf(""%d\n"", n);||| 23 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 24 return 0;||| 25 }||| 26 for (int i = 1; i <= n; i++)||| 27 if (H[i] == sum) {||| 28 printf(""%d\n"", n - 1);||| 29 for (int j = 1; j <= n; j++)||| 30 if (j != i) printf(""%d "", j);||| 31 return 0;||| 32 }||| 33 for (int i = 1; i <= n; i++) {||| 34 if (pos.count(sum ^ H[i])) {||| 35 int p = pos[sum ^ H[i]];||| 36 printf(""%d\n"", n - 2);||| 37 for (int j = 1; j <= n; j++)||| 38 if (j != i && j != p) printf(""%d "", j);||| 39 return 0;||| 40 }||| 41 pos[H[i]] = i;||| 42 }||| 43 printf(""%d\n"", n - 3);||| 44 for (int i = 1; i <= n; i++)||| 45 if (i != 2 && i != K && i != n) printf(""%d "", i);||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using uint = unsigned int;||| 4 const int N = 1e6 + 5;||| 5 mt19937 rnd(time(0));||| 6 int n, K, flag[N], pr[N], cnt;||| 7 uint H[N], sum;||| 8 unordered_map<uint, int> pos;||| 9 int main() {||| 10 scanf(""%d"", &n);||| 11 K = n >> 1;||| 12 flag[0] = flag[1] = 1, H[1] = 0;||| 13 for (int i = 2; i <= n; i++) {||| 14 if (!flag[i]) pr[++cnt] = i, H[i] = rnd();||| 15 for (int j = 1; j <= cnt && i * pr[j] <= n; j++) {||| 16 flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]];||| 17 if (i % pr[j] == 0) break;||| 18 }||| 19 }||| 20 for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i];||| 21 if (sum == 0) {||| 22 printf(""%d\n"", n);||| 23 for (int i = 1; i <= n; i++) printf(""%d "", i);||| 24 return 0;||| 25 }||| 26 for (int i = 1; i <= n; i++)||| 27 if (H[i] == sum) {||| 28 printf(""%d\n"", n - 1);||| 29 for (int j = 1; j <= n; j++)||| 30 if (j != i) printf(""%d "", j);||| 31 return 0;||| 32 }||| 33 for (int i = 1; i <= n; i++) {||| 34 if (pos.count(sum ^ H[i])) {||| 35 int p = pos[sum ^ H[i]];||| 36 printf(""%d\n"", n - 2);||| 37 for (int j = 1; j <= n; j++)||| 38 if (j != i && j != p) printf(""%d "", j);||| 39 return 0;||| 40 }||| 41 pos[H[i]] = i;||| 42 }||| 43 printf(""%d\n"", n - 3);||| 44 for (int i = 1; i <= n; i++)||| 45 if (i != 2 && i != K && i != n) printf(""%d "", i);||| 46 return 0;||| 47 }||| "	3 using ull = unsigned long long;
159	36	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 2;||| 4 int lpf[N];||| 5 long long val[N];||| 6 long long val1[N];||| 7 long long val2[N];||| 8 int use[N];||| 9 int n;||| 10 void finish() {||| 11 cout << accumulate(use + 1, use + n + 1, 0) << '\n';||| 12 for (int i = 1; i <= n; i++) {||| 13 if (use[i]) cout << i << ' ';||| 14 }||| 15 cout << '\n';||| 16 exit(0);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 mt19937_64 rng(||| 22 (long long)chrono::steady_clock::now().time_since_epoch().count());||| 23 for (int i = 1; i < N; i++) {||| 24 lpf[i] = i;||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 if (lpf[i] == i) {||| 28 val[i] = rng();||| 29 for (int j = 2 * i; j < N; j += i) {||| 30 lpf[j] = i;||| 31 }||| 32 } else {||| 33 val[i] = val[lpf[i]] ^ val[i / lpf[i]];||| 34 }||| 35 }||| 36 for (int i = 1; i < N; i++) {||| 37 val1[i] = val1[i - 1] ^ val[i];||| 38 val2[i] = val2[i - 1] ^ val1[i];||| 39 }||| 40 cin >> n;||| 41 for (int i = 1; i <= n; i++) use[i] = 1;||| 42 long long x = val2[n];||| 43 if (!x) finish();||| 44 for (int i = 1; i <= n; i++) {||| 45 if (val1[i] == x) {||| 46 use[i] = 0;||| 47 finish();||| 48 }||| 49 }||| 50 unordered_map<long long, int> m;||| 51 for (int i = 1; i <= n; i++) {||| 52 if (m.count(val1[i] ^ x)) {||| 53 use[i] = 0;||| 54 use[m[val1[i] ^ x]] = 0;||| 55 finish();||| 56 }||| 57 m[val1[i]] = i;||| 58 }||| 59 assert(n % 4 == 3);||| 60 use[n] = 0;||| 61 use[n / 2] = 0;||| 62 use[2] = 0;||| 63 finish();||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 2;||| 4 int lpf[N];||| 5 long long val[N];||| 6 long long val1[N];||| 7 long long val2[N];||| 8 int use[N];||| 9 int n;||| 10 void finish() {||| 11 cout << accumulate(use + 1, use + n + 1, 0) << '\n';||| 12 for (int i = 1; i <= n; i++) {||| 13 if (use[i]) cout << i << ' ';||| 14 }||| 15 cout << '\n';||| 16 exit(0);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 mt19937_64 rng(||| 22 (long long)chrono::steady_clock::now().time_since_epoch().count());||| 23 for (int i = 1; i < N; i++) {||| 24 lpf[i] = i;||| 25 }||| 26 for (int i = 2; i < N; i++) {||| 27 if (lpf[i] == i) {||| 28 val[i] = rng();||| 29 for (int j = 2 * i; j < N; j += i) {||| 30 lpf[j] = i;||| 31 }||| 32 } else {||| 33 val[i] = val[lpf[i]] ^ val[i / lpf[i]];||| 34 }||| 35 }||| 36 for (int i = 1; i < N; i++) {||| 37 val1[i] = val1[i - 1] ^ val[i];||| 38 val2[i] = val2[i - 1] ^ val1[i];||| 39 }||| 40 cin >> n;||| 41 for (int i = 1; i <= n; i++) use[i] = 1;||| 42 long long x = val2[n];||| 43 if (!x) finish();||| 44 for (int i = 1; i <= n; i++) {||| 45 if (val1[i] == x) {||| 46 use[i] = 0;||| 47 finish();||| 48 }||| 49 }||| 50 unordered_map<int, int> m;||| 51 for (int i = 1; i <= n; i++) {||| 52 if (m.count(val1[i] ^ x)) {||| 53 use[i] = 0;||| 54 use[m[val1[i] ^ x]] = 0;||| 55 finish();||| 56 }||| 57 m[val1[i]] = i;||| 58 }||| 59 assert(n % 4 == 3);||| 60 use[n] = 0;||| 61 use[n / 2] = 0;||| 62 use[2] = 0;||| 63 finish();||| 64 }||| 	50 unordered_map<long long, int> m;
160	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void intext() {}||| 64 bool isPrime(int n) {||| 65 if (n == 1) return false;||| 66 if (n == 2) return true;||| 67 for (int i = 2; i * i <= n; i++) {||| 68 if (n % i == 0) return false;||| 69 }||| 70 return true;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 74 intext();||| 75 long long t = 1;||| 76 cin >> t;||| 77 while (t--) {||| 78 long long n, m, rb, cb, rd, cd;||| 79 cin >> n >> m >> rb >> cb >> rd >> cd;||| 80 long long x1 = 1;||| 81 long long x2 = 1;||| 82 long long cnt = 0;||| 83 while (rb != rd && cb != cd) {||| 84 if (rb + x1 > n || rb + x2 < 1) {||| 85 x1 = -1 * x1;||| 86 }||| 87 if (cb + x2 > m || cb + x2 < 1) {||| 88 x2 = -1 * x2;||| 89 }||| 90 rb += x1;||| 91 cb += x2;||| 92 cnt++;||| 93 }||| 94 cout << cnt << endl;||| 95 }||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(int t) { cerr << t; }||| 4 void _print(string t) { cerr << t; }||| 5 void _print(char t) { cerr << t; }||| 6 void _print(long double t) { cerr << t; }||| 7 void _print(double t) { cerr << t; }||| 8 void _print(unsigned long long t) { cerr << t; }||| 9 template <class T, class V>||| 10 void _print(pair<T, V> p);||| 11 template <class T>||| 12 void _print(vector<T> v);||| 13 template <class T>||| 14 void _print(set<T> v);||| 15 template <class T, class V>||| 16 void _print(map<T, V> v);||| 17 template <class T>||| 18 void _print(multiset<T> v);||| 19 template <class T, class V>||| 20 void _print(pair<T, V> p) {||| 21 cerr << ""{"";||| 22 _print(p.first);||| 23 cerr << "","";||| 24 _print(p.second);||| 25 cerr << ""}"";||| 26 }||| 27 template <class T>||| 28 void _print(vector<T> v) {||| 29 cerr << ""[ "";||| 30 for (T i : v) {||| 31 _print(i);||| 32 cerr << "" "";||| 33 }||| 34 cerr << ""]"";||| 35 }||| 36 template <class T>||| 37 void _print(set<T> v) {||| 38 cerr << ""[ "";||| 39 for (T i : v) {||| 40 _print(i);||| 41 cerr << "" "";||| 42 }||| 43 cerr << ""]"";||| 44 }||| 45 template <class T>||| 46 void _print(multiset<T> v) {||| 47 cerr << ""[ "";||| 48 for (T i : v) {||| 49 _print(i);||| 50 cerr << "" "";||| 51 }||| 52 cerr << ""]"";||| 53 }||| 54 template <class T, class V>||| 55 void _print(map<T, V> v) {||| 56 cerr << ""[ "";||| 57 for (auto i : v) {||| 58 _print(i);||| 59 cerr << "" "";||| 60 }||| 61 cerr << ""]"";||| 62 }||| 63 void intext() {}||| 64 bool isPrime(int n) {||| 65 if (n == 1) return false;||| 66 if (n == 2) return true;||| 67 for (int i = 2; i * i <= n; i++) {||| 68 if (n % i == 0) return false;||| 69 }||| 70 return true;||| 71 }||| 72 int main() {||| 73 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 74 intext();||| 75 long long t = 1;||| 76 cin >> t;||| 77 while (t--) {||| 78 long long n, m, rb, cb, rd, cd;||| 79 cin >> n >> m >> rb >> cb >> rd >> cd;||| 80 long long x1 = 1;||| 81 long long x2 = 1;||| 82 long long cnt = 0;||| 83 while (rb != rd && cb != cd) {||| 84 if (rb + x1 > m || rb + x2 < 1) {||| 85 x1 = -1 * x1;||| 86 }||| 87 if (cb + x2 > n || cb + x2 < 1) {||| 88 x2 = -1 * x2;||| 89 }||| 90 rb += x1;||| 91 cb += x2;||| 92 cnt++;||| 93 }||| 94 cout << cnt << endl;||| 95 }||| 96 }||| "	84 if (rb + x1 > n || rb + x2 < 1) {
160	66	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int row, column, r_row, r_column, f_row, f_column;||| 8 int dr = 1, dc = 1;||| 9 cin >> row >> column >> r_row >> r_column >> f_row >> f_column;||| 10 int count;||| 11 count = 0;||| 12 while (f_row != r_row && f_column != r_column) {||| 13 if (r_row + dr > row || r_row + dr < 1) {||| 14 dr *= (-1);||| 15 }||| 16 if (r_column + dc > column || r_column + dc < 1) {||| 17 dc *= (-1);||| 18 }||| 19 r_column += dc;||| 20 r_row += dr;||| 21 count++;||| 22 }||| 23 cout << count << endl;||| 24 }||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int row, column, r_row, r_column, f_row, f_column;||| 8 int dr = 1, dc = 1;||| 9 cin >> row >> column >> r_row >> r_column >> f_row >> f_column;||| 10 int count;||| 11 count = 0;||| 12 while (f_row != r_row && f_column != r_column) {||| 13 if (r_row + dr > row || r_row + dr < 1) {||| 14 dr *= (-1);||| 15 }||| 16 if (r_column + dr > column || r_column + dr < 1) {||| 17 dc *= (-1);||| 18 }||| 19 r_column += dc;||| 20 r_row += dr;||| 21 count++;||| 22 }||| 23 cout << count << endl;||| 24 }||| 25 }||| 	16 if (r_column + dc > column || r_column + dc < 1) {
160	135	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int rb, cb, rd, cd;||| 10 cin >> rb >> cb >> rd >> cd;||| 11 int x1, x2;||| 12 if (rb <= rd) {||| 13 x1 = rd - rb;||| 14 } else if (rb > rd) {||| 15 x1 = 2 * (n)-rb - rd;||| 16 }||| 17 if (cb <= cd) {||| 18 x2 = cd - cb;||| 19 } else if (cb > cd) {||| 20 x2 = 2 * (m)-cb - cd;||| 21 }||| 22 if (x1 < x2) {||| 23 cout << x1 << endl;||| 24 } else||| 25 cout << x2 << endl;||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m;||| 8 cin >> n >> m;||| 9 int rb, cb, rd, cd;||| 10 cin >> rb >> cb >> rd >> cd;||| 11 int x1, x2;||| 12 if (rb <= rd) {||| 13 x1 = rd - rb;||| 14 } else if (rb > rd) {||| 15 x1 = 2 * (n)-rb - rd;||| 16 }||| 17 if (cb <= cd) {||| 18 x2 = cd - cb;||| 19 } else if (cb > cd) {||| 20 x2 = 2 * (m)-rb - rd;||| 21 }||| 22 if (x1 < x2) {||| 23 cout << x1 << endl;||| 24 } else||| 25 cout << x2 << endl;||| 26 }||| 27 return 0;||| 28 }||| 	20 x2 = 2 * (m)-cb - cd;
160	94	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int f;||| 5 cin >> f;||| 6 int r, c;||| 7 int rl, cl;||| 8 int ra, ca;||| 9 for (int i = 0; i < f; i++) {||| 10 int tr = 0, tc = 0;||| 11 cin >> r >> c;||| 12 cin >> rl >> cl;||| 13 cin >> ra >> ca;||| 14 if (cl == ca) tc = 0;||| 15 if (rl == ra)||| 16 tr = 0;||| 17 else if (rl < ra)||| 18 tr = ra - rl;||| 19 else||| 20 tr = (r - rl) + (r - ra);||| 21 if (cl == ca)||| 22 tc = 0;||| 23 else if (cl < ca)||| 24 tc = ca - cl;||| 25 else||| 26 tc = (c - cl) + (c - ca);||| 27 if (tr >= tc)||| 28 cout << tc;||| 29 else||| 30 cout << tr;||| 31 cout << endl;||| 32 }||| 33 return 0;||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int f;||| 5 cin >> f;||| 6 int r, c;||| 7 int rl, cl;||| 8 int ra, ca;||| 9 for (int i = 0; i < f; i++) {||| 10 int tr = 0, tc = 0;||| 11 cin >> r >> c;||| 12 cin >> rl >> cl;||| 13 cin >> ra >> ca;||| 14 if (cl == ca) tc = 0;||| 15 if (cl == ra)||| 16 tr = 0;||| 17 else if (rl < ra)||| 18 tr = ra - rl;||| 19 else||| 20 tr = (r - rl) + (r - ra);||| 21 if (cl == ca)||| 22 tc = 0;||| 23 else if (cl < ca)||| 24 tc = ca - cl;||| 25 else||| 26 tc = (c - cl) + (c - ca);||| 27 if (tr >= tc)||| 28 cout << tc;||| 29 else||| 30 cout << tr;||| 31 cout << endl;||| 32 }||| 33 return 0;||| 34 }||| 	15 if (rl == ra)
160	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 scanf(""%d%d%d%d%d%d"", &n, &m, &rb, &cb, &rd, &cd);||| 6 int ans = 0;||| 7 int dr = 1, dc = 1;||| 8 while (rb != rd && cb != cd) {||| 9 if (rb + dr < 1 || rb + dr > n) dr *= -1;||| 10 if (cb + dc < 1 || cb + dc > m) dc *= -1;||| 11 rb += dr;||| 12 cb += dc;||| 13 ans++;||| 14 }||| 15 printf(""%d\n"", ans);||| 16 }||| 17 int main() {||| 18 int t;||| 19 scanf(""%d"", &t);||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 scanf(""%d%d%d%d%d%d"", &m, &n, &rb, &cb, &rd, &cd);||| 6 int ans = 0;||| 7 int dr = 1, dc = 1;||| 8 while (rb != rd && cb != cd) {||| 9 if (rb + dr < 1 || rb + dr > n) dr *= -1;||| 10 if (cb + dc < 1 || cb + dc > m) dc *= -1;||| 11 rb += dr;||| 12 cb += dc;||| 13 ans++;||| 14 }||| 15 printf(""%d\n"", ans);||| 16 }||| 17 int main() {||| 18 int t;||| 19 scanf(""%d"", &t);||| 20 while (t--) {||| 21 solve();||| 22 }||| 23 }||| "	"5 scanf(""%d%d%d%d%d%d"", &n, &m, &rb, &cb, &rd, &cd);"
160	278	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long inf = 1000000007;||| 4 double pi = acos(-1);||| 5 long long p(long long a, long long b) {||| 6 long long ans = 1;||| 7 if (a < 0) a += inf;||| 8 while (b) {||| 9 if (b % 2 == 1) {||| 10 ans = ((ans % inf) * (a % inf)) % inf;||| 11 }||| 12 a = ((a % inf) * (a % inf)) % inf;||| 13 if (a < 0) a += inf;||| 14 b /= 2;||| 15 }||| 16 return ans;||| 17 }||| 18 long long lis(vector<long long>& arr) {||| 19 vector<long long> temp;||| 20 for (auto i : arr) {||| 21 if (temp.empty() || i > temp.back())||| 22 temp.push_back(i);||| 23 else {||| 24 auto it = lower_bound(temp.begin(), temp.end(), i);||| 25 *it = i;||| 26 }||| 27 }||| 28 return temp.size();||| 29 }||| 30 signed main() {||| 31 ios::sync_with_stdio(0);||| 32 cin.tie(0);||| 33 cout.tie(0);||| 34 long long t = 1;||| 35 cin >> t;||| 36 for (long long tt = 1; tt <= t; tt++) {||| 37 long long n, m, r1, c1, r2, c2;||| 38 cin >> n >> m >> r1 >> c1 >> r2 >> c2;||| 39 long long ans = 1e9;||| 40 if (r1 <= r2) {||| 41 ans = min(ans, r2 - r1);||| 42 } else {||| 43 ans = min(ans, r1 - r2 + 2 * (n - r1));||| 44 }||| 45 if (c1 <= c2) {||| 46 ans = min(ans, c2 - c1);||| 47 } else {||| 48 ans = min(ans, c1 - c2 + 2 * (m - c1));||| 49 }||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long inf = 1000000007;||| 4 double pi = acos(-1);||| 5 long long p(long long a, long long b) {||| 6 long long ans = 1;||| 7 if (a < 0) a += inf;||| 8 while (b) {||| 9 if (b % 2 == 1) {||| 10 ans = ((ans % inf) * (a % inf)) % inf;||| 11 }||| 12 a = ((a % inf) * (a % inf)) % inf;||| 13 if (a < 0) a += inf;||| 14 b /= 2;||| 15 }||| 16 return ans;||| 17 }||| 18 long long lis(vector<long long>& arr) {||| 19 vector<long long> temp;||| 20 for (auto i : arr) {||| 21 if (temp.empty() || i > temp.back())||| 22 temp.push_back(i);||| 23 else {||| 24 auto it = lower_bound(temp.begin(), temp.end(), i);||| 25 *it = i;||| 26 }||| 27 }||| 28 return temp.size();||| 29 }||| 30 signed main() {||| 31 ios::sync_with_stdio(0);||| 32 cin.tie(0);||| 33 cout.tie(0);||| 34 long long t = 1;||| 35 cin >> t;||| 36 for (long long tt = 1; tt <= t; tt++) {||| 37 long long n, m, r1, c1, r2, c2;||| 38 cin >> n >> m >> r1 >> c1 >> r2 >> c2;||| 39 long long ans = 1e9;||| 40 if (r1 <= r2) {||| 41 ans = min(ans, r2 - r1);||| 42 } else {||| 43 ans = min(ans, r1 - r2 + 2 * (n - r1));||| 44 }||| 45 if (c1 <= 2) {||| 46 ans = min(ans, c2 - c1);||| 47 } else {||| 48 ans = min(ans, c1 - c2 + 2 * (m - c1));||| 49 }||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	45 if (c1 <= c2) {
160	122	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e17;||| 4 const long long sz = 2e5 + 5;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 long long t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1;||| 13 cin >> r >> c >> rb >> cb >> rd >> cd;||| 14 long long time = 0;||| 15 while (true) {||| 16 if (cb == cd || rb == rd) {||| 17 break;||| 18 } else {||| 19 if (rb + mv1 > r || rb + mv1 <= 0) {||| 20 mv1 *= -1;||| 21 }||| 22 if (cb + mv2 > c || cb + mv2 <= 0) {||| 23 mv2 *= -1;||| 24 }||| 25 rb += mv1;||| 26 cb += mv2;||| 27 }||| 28 time++;||| 29 }||| 30 cout << time << endl;||| 31 }||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e17;||| 4 const long long sz = 2e5 + 5;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(0);||| 7 cin.tie(0);||| 8 cout.tie(0);||| 9 long long t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1;||| 13 cin >> r >> c >> rb >> cb >> rd >> cd;||| 14 long long time = 0;||| 15 while (true) {||| 16 if (cb == cd || rb == rd) {||| 17 break;||| 18 } else {||| 19 if (rb + mv1 > r || rb + mv1 <= 0) {||| 20 mv1 *= -1;||| 21 } else if (cb + mv2 > c || cb + mv2 <= 0) {||| 22 mv2 *= -1;||| 23 }||| 24 rb += mv1;||| 25 cb += mv2;||| 26 }||| 27 time++;||| 28 }||| 29 cout << time << endl;||| 30 }||| 31 }||| 	21 }
160	96	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 cin >> n >> m >> rb >> cb >> rd >> cd;||| 6 int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd));||| 7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd));||| 8 int ans = min(x, y);||| 9 cout << ans << endl;||| 10 }||| 11 int main() {||| 12 int t;||| 13 cin >> t;||| 14 while (t--) solve();||| 15 return 0;||| 16 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m, rb, cb, rd, cd;||| 5 cin >> n >> m >> rb >> cb >> rd >> cd;||| 6 int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd));||| 7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - n) + abs(n - cd));||| 8 int ans = min(x, y);||| 9 cout << ans << endl;||| 10 }||| 11 int main() {||| 12 int t;||| 13 cin >> t;||| 14 while (t--) solve();||| 15 return 0;||| 16 }||| 	7 int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd));
160	248	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 while ((rb != rd) && (cb != cd)) {||| 10 ans++;||| 11 if (flag1)||| 12 rb++;||| 13 else||| 14 rb--;||| 15 if (rb > n) {||| 16 rb -= 2;||| 17 flag1 = 0;||| 18 }||| 19 if (rb < 1) {||| 20 rb += 2;||| 21 flag1 = 1;||| 22 }||| 23 if (flag2)||| 24 cb++;||| 25 else||| 26 cb--;||| 27 if (cb > m) {||| 28 cb -= 2;||| 29 flag2 = 0;||| 30 }||| 31 if (cb < 1) {||| 32 cb += 2;||| 33 flag1 = 1;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 while ((rb != rd) && (cb != cd)) {||| 10 ans++;||| 11 if (flag1)||| 12 rb++;||| 13 else||| 14 rb--;||| 15 if (rb > n) {||| 16 rb -= 2;||| 17 flag1 = 0;||| 18 }||| 19 if (rb < 1) {||| 20 rb += 2;||| 21 flag1 = 1;||| 22 }||| 23 if (flag2)||| 24 cb++;||| 25 else||| 26 cb--;||| 27 if (cb > n) {||| 28 cb -= 2;||| 29 flag2 = 0;||| 30 }||| 31 if (cb < 1) {||| 32 cb += 2;||| 33 flag1 = 1;||| 34 }||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| 	27 if (cb > m) {
160	132	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T& x) {||| 5 x = 0;||| 6 bool f = 0;||| 7 char ch = (char)getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = 1;||| 10 ch = (char)getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + (ch & 15);||| 14 ch = (char)getchar();||| 15 }||| 16 if (f) x = -x;||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) x = -x, putchar('-');||| 21 static int st[45];||| 22 int top = 0;||| 23 do {||| 24 st[top++] = x % 10;||| 25 x /= 10;||| 26 } while (x);||| 27 while (top) putchar(st[--top] + '0');||| 28 putchar('\n');||| 29 }||| 30 const long double pi = acos(-1.0);||| 31 const long double eps = (double)1e-7;||| 32 const long long mod = 1e9 + 7;||| 33 const int maxn = 1505;||| 34 const int maxm = 5005;||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 ;||| 39 int T;||| 40 cin >> T;||| 41 while (T--) {||| 42 int n, m, a1, b1, a2, b2;||| 43 cin >> n >> m >> a1 >> b1 >> a2 >> b2;||| 44 int dx = 1, dy = 1;||| 45 int ans = 0;||| 46 while (a1 != a2 && b1 != b2) {||| 47 if (a1 + dx < 1 || a1 + dx > n) dx = -dx;||| 48 if (b1 + dy < 1 || b1 + dy > m) dy = -dy;||| 49 a1 += dx;||| 50 b1 += dy;||| 51 ans++;||| 52 }||| 53 cout << ans << ""\n"";||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T& x) {||| 5 x = 0;||| 6 bool f = 0;||| 7 char ch = (char)getchar();||| 8 while (ch < '0' || ch > '9') {||| 9 if (ch == '-') f = 1;||| 10 ch = (char)getchar();||| 11 }||| 12 while (ch >= '0' && ch <= '9') {||| 13 x = x * 10 + (ch & 15);||| 14 ch = (char)getchar();||| 15 }||| 16 if (f) x = -x;||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) x = -x, putchar('-');||| 21 static int st[45];||| 22 int top = 0;||| 23 do {||| 24 st[top++] = x % 10;||| 25 x /= 10;||| 26 } while (x);||| 27 while (top) putchar(st[--top] + '0');||| 28 putchar('\n');||| 29 }||| 30 const long double pi = acos(-1.0);||| 31 const long double eps = (double)1e-7;||| 32 const long long mod = 1e9 + 7;||| 33 const int maxn = 1505;||| 34 const int maxm = 5005;||| 35 int main() {||| 36 ios::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 ;||| 39 int T;||| 40 cin >> T;||| 41 while (T--) {||| 42 int n, m, a1, b1, a2, b2;||| 43 cin >> n >> m >> a1 >> b1 >> a2 >> b2;||| 44 int dx = 1, dy = 1;||| 45 int ans = 0;||| 46 while (a1 != a2 && b1 != b2) {||| 47 if (a1 + dx < 1 || a1 + dx > n) dx = -dx;||| 48 if (b1 + dx < 1 || b1 + dx > m) dy = -dy;||| 49 a1 += dx;||| 50 b1 += dy;||| 51 ans++;||| 52 }||| 53 cout << ans << ""\n"";||| 54 }||| 55 }||| "	48 if (b1 + dy < 1 || b1 + dy > m) dy = -dy;
160	232	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void go() {||| 4 long long n, m, xr, yr, xd, yd;||| 5 cin >> n >> m >> xr >> yr >> xd >> yd;||| 6 long long dirx = 1, diry = 1;||| 7 long long ans = 0;||| 8 while (true) {||| 9 if (xr == xd || yr == yd) {||| 10 break;||| 11 }||| 12 xr += dirx;||| 13 yr += diry;||| 14 if (xr > n) {||| 15 dirx = -1;||| 16 xr = n - 1;||| 17 }||| 18 if (yr > m) {||| 19 diry = -1;||| 20 yr = m - 1;||| 21 }||| 22 if (xr < 1) {||| 23 xr = 2;||| 24 dirx = 1;||| 25 }||| 26 if (yr < 1) {||| 27 yr = 2;||| 28 diry = 1;||| 29 }||| 30 ans++;||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 int32_t main() {||| 35 ios::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long t;||| 39 t = 1;||| 40 cin >> t;||| 41 while (t--) {||| 42 go();||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void go() {||| 4 long long n, m, xr, yr, xd, yd;||| 5 cin >> n >> m >> xr >> yr >> xd >> yd;||| 6 long long dirx = 1, diry = 1;||| 7 long long ans = 0;||| 8 while (true) {||| 9 if (xr == xd || yr == yd) {||| 10 break;||| 11 }||| 12 xr += dirx;||| 13 yr += diry;||| 14 if (xr > xd) {||| 15 dirx = -1;||| 16 xr = n - 1;||| 17 }||| 18 if (yr > m) {||| 19 diry = -1;||| 20 yr = m - 1;||| 21 }||| 22 if (xr < 1) {||| 23 xr = 2;||| 24 dirx = 1;||| 25 }||| 26 if (yr < 1) {||| 27 yr = 2;||| 28 diry = 1;||| 29 }||| 30 ans++;||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 int32_t main() {||| 35 ios::sync_with_stdio(0);||| 36 cin.tie(0);||| 37 cout.tie(0);||| 38 long long t;||| 39 t = 1;||| 40 cin >> t;||| 41 while (t--) {||| 42 go();||| 43 }||| 44 return 0;||| 45 }||| "	14 if (xr > n) {
160	133	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, cb, rd, cd;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 int ans;||| 10 if (rd - rb >= 0)||| 11 ans = rd - rb;||| 12 else||| 13 ans = 2 * n - (rd + rb);||| 14 if (cd - cb >= 0)||| 15 ans = min(ans, cd - cb);||| 16 else||| 17 ans = min(ans, 2 * m - (cd + cb));||| 18 cout << ans << endl;||| 19 }||| 20 return 0;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, rb, cb, rd, cd;||| 8 cin >> n >> m >> rb >> cb >> rd >> cd;||| 9 int ans;||| 10 if (rd - rb >= 0)||| 11 ans = rd - rb;||| 12 else||| 13 ans = 2 * n - (rd + rb);||| 14 if (cd - cb >= 0)||| 15 ans = min(ans, cd - cb);||| 16 else||| 17 ans = min(ans, 2 * m - (rd + rb));||| 18 cout << ans << endl;||| 19 }||| 20 return 0;||| 21 }||| 	17 ans = min(ans, 2 * m - (cd + cb));
160	261	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 int main() {||| 6 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n, m, a, b, c, d;||| 11 cin >> n >> m >> a >> b >> c >> d;||| 12 int ans = INF;||| 13 if (a <= c) ans = min(ans, c - a);||| 14 if (b <= d) ans = min(ans, d - b);||| 15 if (a > c) ans = min(ans, (n - a) + (n - c));||| 16 if (b > d) ans = min(ans, (m - b) + (m - d));||| 17 cout << ans << '\n';||| 18 }||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int nax = 2 * (int)1e5 + 10;||| 4 const int INF = (int)1e9 + 47;||| 5 int main() {||| 6 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n, m, a, b, c, d;||| 11 cin >> n >> m >> a >> b >> c >> d;||| 12 int ans = INF;||| 13 if (a <= c) ans = min(ans, c - a);||| 14 if (b <= d) ans = min(ans, d - b);||| 15 if (a > c) ans = min(ans, (n - a) + (n - c));||| 16 if (b > c) ans = min(ans, (m - b) + (m - d));||| 17 cout << ans << '\n';||| 18 }||| 19 }||| 	16 if (b > d) ans = min(ans, (m - b) + (m - d));
161	200	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};||| 4 int dy[] = {0, 1, 0, -1, -1, 1, -1, 1};||| 5 int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2};||| 6 int ky[] = {1, 2, 2, 1, -1, -2, -2, -1};||| 7 bool com(pair<int, int> a, pair<int, int> b) {||| 8 return abs(a.first - a.second) < abs(b.first - b.second);||| 9 }||| 10 void solved() {||| 11 int n, x, y;||| 12 cin >> n;||| 13 vector<pair<int, int> > v;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> x >> y;||| 16 v.push_back({x, y});||| 17 }||| 18 sort(v.begin(), v.end(), com);||| 19 int ar[n + 1];||| 20 memset(ar, 0, sizeof(ar));||| 21 for (auto it : v) {||| 22 int a = it.first, b = it.second;||| 23 if (ar[a] == 0) {||| 24 cout << a << ' ' << b << ' ' << a << endl;||| 25 ar[a] = 1;||| 26 } else if (ar[b] == 0) {||| 27 cout << a << ' ' << b << ' ' << b << endl;||| 28 ar[b] = 1;||| 29 } else {||| 30 for (int i = a; i <= b; i++) {||| 31 if (ar[i] == 0) {||| 32 cout << a << ' ' << b << ' ' << i << endl;||| 33 ar[i] = 1;||| 34 break;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 }||| 40 int main() {||| 41 long long int tc;||| 42 cin >> tc;||| 43 while (tc--) {||| 44 solved();||| 45 }||| 46 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};||| 4 int dy[] = {0, 1, 0, -1, -1, 1, -1, 1};||| 5 int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2};||| 6 int ky[] = {1, 2, 2, 1, -1, -2, -2, -1};||| 7 bool com(pair<int, int> a, pair<int, int> b) {||| 8 return abs(a.first - a.second) < abs(b.first - b.second);||| 9 }||| 10 void solved() {||| 11 int n, x, y;||| 12 cin >> n;||| 13 vector<pair<int, int> > v;||| 14 for (int i = 0; i < n; i++) {||| 15 cin >> x >> y;||| 16 v.push_back({x, y});||| 17 }||| 18 sort(v.begin(), v.end(), com);||| 19 int ar[n + 1];||| 20 memset(ar, 0, sizeof(ar));||| 21 for (auto it : v) {||| 22 int a = it.first, b = it.second;||| 23 if (ar[a] == 0) {||| 24 cout << a << ' ' << b << ' ' << a << endl;||| 25 ar[a] = 1;||| 26 } else if (ar[b] == 0) {||| 27 cout << a << ' ' << b << ' ' << b << endl;||| 28 ar[b] = 1;||| 29 } else {||| 30 for (int i = 1; i <= n; i++) {||| 31 if (ar[i] == 0) {||| 32 cout << a << ' ' << b << ' ' << i << endl;||| 33 ar[i] = 1;||| 34 break;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 }||| 40 int main() {||| 41 long long int tc;||| 42 cin >> tc;||| 43 while (tc--) {||| 44 solved();||| 45 }||| 46 }||| 	30 for (int i = a; i <= b; i++) {
161	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, v[1010];||| 4 struct node {||| 5 int l, r, d;||| 6 } a[1010];||| 7 bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 memset(v, 0, sizeof(v));||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r;||| 14 sort(a + 1, a + 1 + n, cmp);||| 15 for (int i = 1; i <= n; i++) {||| 16 for (int j = a[i].l; j <= a[i].r; j++) {||| 17 if (v[j] == 0) {||| 18 a[i].d = j;||| 19 v[j] = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 for (int i = 1; i <= n; i++)||| 25 cout << a[i].l << "" "" << a[i].r << "" "" << a[i].d << endl;||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n, v[1010];||| 4 struct node {||| 5 int l, r, d;||| 6 } a[1010];||| 7 bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; }||| 8 int main() {||| 9 cin >> t;||| 10 while (t--) {||| 11 memset(v, 0, sizeof(v));||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r;||| 14 sort(a + 1, a + 1 + n, cmp);||| 15 for (int i = 1; i <= n; i++) {||| 16 for (int j = a[i].l; j <= a[i].r; i++) {||| 17 if (v[j] == 0) {||| 18 a[i].d = j;||| 19 v[j] = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 for (int i = 1; i <= n; i++)||| 25 cout << a[i].l << "" "" << a[i].r << "" "" << a[i].d << endl;||| 26 }||| 27 }||| "	16 for (int j = a[i].l; j <= a[i].r; j++) {
162	18	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k, mod = 1e9 + 7, ans, a[200011];||| 4 string s, s2;||| 5 bool flag, vis[2000111];||| 6 vector<long long> v, tmp;||| 7 bool okD(long long d, long long mid, long long i) {||| 8 return tmp[i] - 3 * d >= mid;||| 9 }||| 10 bool ok(long long mid) {||| 11 tmp = v;||| 12 for (long long i = n - 1; i >= 2; i--) {||| 13 long long d = tmp[i] - mid;||| 14 d = min(v[i], d);||| 15 if (d < 0) return false;||| 16 d /= 3;||| 17 tmp[i] -= d * 3;||| 18 tmp[i - 1] += d;||| 19 tmp[i - 2] += 2 * d;||| 20 }||| 21 long long ret = 1e9;||| 22 for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]);||| 23 return ret >= mid;||| 24 }||| 25 int32_t main() {||| 26 ios_base::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n;||| 32 v.resize(n);||| 33 for (long long i = 0; i < n; i++) cin >> v[i];||| 34 long long L = 1, R = 1e9;||| 35 while (L <= R) {||| 36 long long mid = (L + R + 1) / 2;||| 37 if (ok(mid))||| 38 ans = mid, L = mid + 1;||| 39 else||| 40 R = mid - 1;||| 41 }||| 42 cout << ans << '\n';||| 43 }||| 44 return 0;||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, m, k, mod = 1e9 + 7, ans, a[200011];||| 4 string s, s2;||| 5 bool flag, vis[2000111];||| 6 vector<long long> v, tmp;||| 7 bool okD(long long d, long long mid, long long i) {||| 8 return tmp[i] - 3 * d >= mid;||| 9 }||| 10 bool ok(long long mid) {||| 11 tmp = v;||| 12 for (long long i = n - 1; i >= 2; i--) {||| 13 long long d = tmp[i] - mid;||| 14 d = min(v[i], d);||| 15 if (d < 0) return false;||| 16 d /= 3;||| 17 tmp[i] -= d * 3;||| 18 tmp[i - 1] += d;||| 19 tmp[i - 2] += 2 * d;||| 20 }||| 21 long long ret = 1e9;||| 22 for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]);||| 23 return ret >= mid;||| 24 }||| 25 int32_t main() {||| 26 ios_base::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n;||| 32 v.resize(n);||| 33 for (long long i = 0; i < n; i++) cin >> v[i];||| 34 long long L = 1, R = 10;||| 35 while (L <= R) {||| 36 long long mid = (L + R + 1) / 2;||| 37 if (ok(mid))||| 38 ans = mid, L = mid + 1;||| 39 else||| 40 R = mid - 1;||| 41 }||| 42 cout << ans << '\n';||| 43 }||| 44 return 0;||| 45 }||| 	34 long long L = 1, R = 1e9;
162	171	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int a[MAXN];||| 5 int b[MAXN];||| 6 int c[MAXN];||| 7 int n;||| 8 bool check(int x) {||| 9 for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0;||| 10 for (int i = n; i >= 3; i--) {||| 11 if (b[i] + c[i] < x) return false;||| 12 int now = x - c[i];||| 13 if (now <= 0) {||| 14 int res = b[i] / 3;||| 15 b[i] -= res * 3;||| 16 c[i - 2] += 2 * res;||| 17 c[i - 1] += res;||| 18 } else {||| 19 int res = (b[i] - now) / 3;||| 20 b[i] -= res * 3;||| 21 c[i - 2] += 2 * res;||| 22 c[i - 1] += res;||| 23 }||| 24 }||| 25 if (b[1] + c[1] < x || b[2] + c[2] < x) return false;||| 26 return true;||| 27 }||| 28 int main() {||| 29 std::ios::sync_with_stdio(false);||| 30 int _;||| 31 cin >> _;||| 32 while (_--) {||| 33 cin >> n;||| 34 for (int i = 1; i <= n; i++) cin >> a[i];||| 35 int l = 1, r = 1e9;||| 36 while (l <= r) {||| 37 int mid = l + r >> 1;||| 38 if (check(mid)) {||| 39 l = mid + 1;||| 40 } else||| 41 r = mid - 1;||| 42 }||| 43 cout << r << '\n';||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 int a[MAXN];||| 5 int b[MAXN];||| 6 int c[MAXN];||| 7 int n;||| 8 bool check(int x) {||| 9 for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0;||| 10 for (int i = n; i >= 3; i--) {||| 11 if (b[i] + c[i] < x) return false;||| 12 int now = x - c[i];||| 13 if (now <= 0) {||| 14 int res = b[i] / 3;||| 15 b[i] -= res * 3;||| 16 c[i - 2] += 2 * res;||| 17 c[i - 1] += res;||| 18 } else {||| 19 int res = (b[i] - now) / 3;||| 20 b[i] -= res * 3;||| 21 c[i - 2] += 2 * res;||| 22 c[i - 1] += res;||| 23 }||| 24 }||| 25 if (b[1] + c[1] < x || b[2] + c[2] < x) return false;||| 26 return true;||| 27 }||| 28 int main() {||| 29 std::ios::sync_with_stdio(false);||| 30 int _;||| 31 cin >> _;||| 32 while (_--) {||| 33 cin >> n;||| 34 for (int i = 1; i <= n; i++) cin >> a[i];||| 35 int l = 1, r = 10;||| 36 while (l <= r) {||| 37 int mid = l + r >> 1;||| 38 if (check(mid)) {||| 39 l = mid + 1;||| 40 } else||| 41 r = mid - 1;||| 42 }||| 43 cout << r << '\n';||| 44 }||| 45 }||| 	35 int l = 1, r = 1e9;
163	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1000000007;||| 4 inline int qp(long long a, long long b) {||| 5 long long ans = 1;||| 6 for (; b;) {||| 7 if (b & 1) ans = ans * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0), cout.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 for (; t--;) {||| 19 int n, m, bx, by, dx, dy;||| 20 long long p;||| 21 cin >> n >> m >> bx >> by >> dx >> dy >> p;||| 22 int cx = -1, cy = -1;||| 23 long long u = 0, d = 1;||| 24 p = (1 - p * qp(100, mod - 2) % mod + mod) % mod;||| 25 for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) {||| 26 if (bx + cx == 0 || bx + cx > n) cx = -cx;||| 27 if (by + cy == 0 || by + cy > m) cy = -cy;||| 28 bx += cx;||| 29 by += cy;||| 30 u = (u + 1) % mod;||| 31 if (bx == dx || by == dy) {||| 32 u = u * p % mod;||| 33 d = d * p % mod;||| 34 }||| 35 }||| 36 d = (1 - d + mod) % mod;||| 37 cout << u * qp(d, mod - 2) % mod << '\n';||| 38 }||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1000000009;||| 4 inline int qp(long long a, long long b) {||| 5 long long ans = 1;||| 6 for (; b;) {||| 7 if (b & 1) ans = ans * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(0);||| 15 cin.tie(0), cout.tie(0);||| 16 int t;||| 17 cin >> t;||| 18 for (; t--;) {||| 19 int n, m, bx, by, dx, dy;||| 20 long long p;||| 21 cin >> n >> m >> bx >> by >> dx >> dy >> p;||| 22 int cx = 1, cy = 1;||| 23 long long u = 0, d = 1;||| 24 p = (1 - p * qp(100, mod - 2) % mod + mod) % mod;||| 25 for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) {||| 26 if (bx + cx == 0 || bx + cx > n) cx = -cx;||| 27 if (by + cy == 0 || by + cy > m) cy = -cy;||| 28 bx += cx;||| 29 by += cy;||| 30 u = (u + 1) % mod;||| 31 if (bx == dx || by == dy) {||| 32 u = u * p % mod;||| 33 d = d * p % mod;||| 34 }||| 35 }||| 36 d = (1 - d + mod) % mod;||| 37 cout << u * qp(d, mod - 2) % mod << '\n';||| 38 }||| 39 }||| 	3 const int mod = 1000000007;
163	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long n, m, a, b, c, d, p;||| 5 long long add(long long first, long long second) {||| 6 return (first + second) % MOD;||| 7 }||| 8 long long sub(long long first, long long second) {||| 9 return add(first, MOD - second);||| 10 }||| 11 long long mul(long long first, long long second) {||| 12 return first * second % MOD;||| 13 }||| 14 long long binpow(long long first, long long second) {||| 15 if (second == 0) return 1;||| 16 if (second % 2) return mul(first, binpow(first, second - 1));||| 17 long long z = binpow(first, second / 2);||| 18 return mul(z, z);||| 19 }||| 20 long long inv(long long first) { return binpow(first, MOD - 2); }||| 21 long long divide(long long first, long long second) {||| 22 return mul(first, inv(second));||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n >> m >> a >> b >> c >> d >> p;||| 32 long long first = a, second = b;||| 33 long long ans = 0, dr = 1, dc = 1;||| 34 vector<long long> v;||| 35 while (ans == 0 || first != a || second != b ||||| 36 (first > 1 && first < n && dr != 1) ||||| 37 (second > 1 && second < m && dc != 1)) {||| 38 if (a == c || b == d) v.push_back(ans);||| 39 if (a == n) dr = -1;||| 40 if (a == 1) dr = 1;||| 41 if (b == m) dc = -1;||| 42 if (b == 1) dc = 1;||| 43 a += dr;||| 44 b += dc;||| 45 ans++;||| 46 }||| 47 p = divide(p, 100);||| 48 long long ans2 = 0;||| 49 for (long long i = 0; i < v.size(); i++) {||| 50 long long A = v[i];||| 51 long long P = mul(p, binpow(sub(1, p), i));||| 52 long long Q = binpow(sub(1, p), v.size());||| 53 long long S = ans;||| 54 ans2 = add(ans2, add(divide(mul(A, P), sub(1, Q)),||| 55 divide(mul(S, mul(P, Q)), binpow(sub(1, Q), 2))));||| 56 }||| 57 cout << ans2 << ""\n"";||| 58 }||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 long long n, m, a, b, c, d, p;||| 5 long long add(long long first, long long second) {||| 6 return (first + second) % MOD;||| 7 }||| 8 long long sub(long long first, long long second) {||| 9 return add(first, MOD - second);||| 10 }||| 11 long long mul(long long first, long long second) {||| 12 return first * second % MOD;||| 13 }||| 14 long long binpow(long long first, long long second) {||| 15 if (second == 0) return 1;||| 16 if (second % 2) return mul(first, binpow(first, second - 1));||| 17 long long z = binpow(first, second / 2);||| 18 return mul(z, z);||| 19 }||| 20 long long inv(long long first) { return binpow(first, MOD - 2); }||| 21 long long divide(long long first, long long second) {||| 22 return mul(first, inv(second));||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(0);||| 26 cin.tie(0);||| 27 cout.tie(0);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 cin >> n >> m >> a >> b >> c >> d >> p;||| 32 long long first = a, second = b;||| 33 long long ans = 0, dr = 1, dc = 1;||| 34 vector<long long> v;||| 35 while (ans == 0 || first != a || second != b ||||| 36 (first > 1 && first < n && dr != 1) ||||| 37 (second > 1 && second < n && dc != 1)) {||| 38 if (a == c || b == d) v.push_back(ans);||| 39 if (a == n) dr = -1;||| 40 if (a == 1) dr = 1;||| 41 if (b == m) dc = -1;||| 42 if (b == 1) dc = 1;||| 43 a += dr;||| 44 b += dc;||| 45 ans++;||| 46 }||| 47 p = divide(p, 100);||| 48 long long ans2 = 0;||| 49 for (long long i = 0; i < v.size(); i++) {||| 50 long long A = v[i];||| 51 long long P = mul(p, binpow(sub(1, p), i));||| 52 long long Q = binpow(sub(1, p), v.size());||| 53 long long S = ans;||| 54 ans2 = add(ans2, add(divide(mul(A, P), sub(1, Q)),||| 55 divide(mul(S, mul(P, Q)), binpow(sub(1, Q), 2))));||| 56 }||| 57 cout << ans2 << ""\n"";||| 58 }||| 59 }||| "	37 (second > 1 && second < m && dc != 1)) {
163	81	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long ksm(long long a, long long b, long long mod) {||| 5 long long c = 1;||| 6 while (b) {||| 7 if (b & 1) c = c * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return c;||| 12 }||| 13 long long inv(int x) { return ksm(x, mod - 2, mod); }||| 14 int t, n, m, len, p, sx, sy, tx, ty, dx, dy;||| 15 int main() {||| 16 cin >> t;||| 17 while (t--) {||| 18 cin >> n >> m >> sx >> sy >> tx >> ty >> p;||| 19 long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod,||| 20 p2 = p * inv(100), P;||| 21 dx = dy = 1;||| 22 len = 0;||| 23 if (sx == tx || sy == ty)||| 24 P = p1;||| 25 else||| 26 P = 1;||| 27 int tot = 0;||| 28 for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) {||| 29 if (sx + dx > n || sx + dx < 1) dx = -dx;||| 30 if (sy + dy > m || sy + dy < 1) dy = -dy;||| 31 sx += dx, sy += dy, len = (len + 1) % mod;||| 32 if (sx == tx || sy == ty) {||| 33 tot++;||| 34 ans = (ans + P * len % mod) % mod;||| 35 P = p1 * P % mod;||| 36 len = 0;||| 37 }||| 38 }||| 39 if (sx == tx || sy == ty)||| 40 P = P * inv(p1) % mod;||| 41 else||| 42 ans = (ans + len * P % mod) % mod;||| 43 cout << (ans * inv((1 - P + mod) % mod)) % mod << endl;||| 44 }||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long ksm(long long a, long long b, long long mod) {||| 5 long long c = 1;||| 6 while (b) {||| 7 if (b & 1) c = c * a % mod;||| 8 b >>= 1;||| 9 a = a * a % mod;||| 10 }||| 11 return c;||| 12 }||| 13 long long inv(int x) { return ksm(x, mod - 2, mod); }||| 14 int t, n, m, len, p, sx, sy, tx, ty, dx, dy;||| 15 int main() {||| 16 cin >> t;||| 17 while (t--) {||| 18 cin >> n >> m >> sx >> sy >> tx >> ty >> p;||| 19 long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod,||| 20 p2 = p * inv(100), P;||| 21 dx = dy = 1;||| 22 len = 0;||| 23 if (sx == tx || sy == ty)||| 24 P = p1;||| 25 else||| 26 P = 1;||| 27 int tot = 0;||| 28 for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) {||| 29 if (sx + dx > n || sx + dx < 1) dx = -dx;||| 30 if (sy + dy > m || sy + dy < 1) dy = -dy;||| 31 sx += dx, sy += dy, len = (len + 1) % mod;||| 32 if (sx == tx || sy == ty) {||| 33 tot++;||| 34 ans = (ans + P * len % mod) % mod;||| 35 P = p1 * P % mod;||| 36 len = 0;||| 37 }||| 38 }||| 39 if (sx == ty || sy == ty)||| 40 P = P * inv(p1) % mod;||| 41 else||| 42 ans = (ans + len * P % mod) % mod;||| 43 cout << (ans * inv((1 - P + mod) % mod)) % mod << endl;||| 44 }||| 45 }||| 	39 if (sx == tx || sy == ty)
164	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)2e5 + 50, LOGN = 17;||| 4 const int INF = (int)1e9;||| 5 int n, k;||| 6 int ord[N], in[N], tim = 0;||| 7 char las[N];||| 8 int lc[N], rc[N];||| 9 int res[N];||| 10 string str;||| 11 void dfs(int v) {||| 12 if (lc[v] != -1) dfs(lc[v]);||| 13 ord[tim] = v;||| 14 in[v] = tim++;||| 15 if (rc[v] != -1) dfs(rc[v]);||| 16 }||| 17 void solve(int v, int& rem) {||| 18 int la = -1;||| 19 int cur = v;||| 20 for (int i = 0; i < (rem); ++i) {||| 21 if (cur == -1) break;||| 22 if (las[cur] != ' ' && las[cur] > str[cur]) {||| 23 la = i;||| 24 }||| 25 cur = lc[cur];||| 26 }||| 27 cur = v;||| 28 vector<int> vs;||| 29 for (int i = 0; i < (la + 1); ++i) {||| 30 res[cur] = 1;||| 31 rem--;||| 32 vs.push_back(cur);||| 33 cur = lc[cur];||| 34 }||| 35 while (!vs.empty()) {||| 36 if (rc[vs.back()] != -1) solve(rc[vs.back()], rem);||| 37 vs.pop_back();||| 38 }||| 39 }||| 40 void print_ans(int v) {||| 41 if (lc[v] != -1) print_ans(lc[v]);||| 42 cout << str[v];||| 43 if (res[v]) cout << str[v];||| 44 if (rc[v] != -1) print_ans(rc[v]);||| 45 }||| 46 int pos[256];||| 47 int main() {||| 48 ios::sync_with_stdio(false);||| 49 cin.tie(NULL);||| 50 cin >> n >> k;||| 51 cin >> str;||| 52 for (int i = 0; i < (n); ++i) {||| 53 cin >> lc[i] >> rc[i];||| 54 lc[i]--, rc[i]--;||| 55 }||| 56 dfs(0);||| 57 fill(pos, pos + 256, INF);||| 58 for (int i = n - 1; i >= 0; i--) {||| 59 pos[str[ord[i]]] = i;||| 60 char f = ' ';||| 61 for (char c = 'a'; c <= 'z'; c++) {||| 62 if (c != str[ord[i]] && pos[f] > pos[c]) f = c;||| 63 }||| 64 las[ord[i]] = f;||| 65 }||| 66 solve(0, k);||| 67 assert(k >= 0);||| 68 print_ans(0);||| 69 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = (int)2e5 + 50, LOGN = 17;||| 4 const int INF = (int)1e9;||| 5 int n, k;||| 6 int ord[N], in[N], tim = 0;||| 7 char las[N];||| 8 int lc[N], rc[N];||| 9 int res[N];||| 10 string str;||| 11 void dfs(int v) {||| 12 if (lc[v] != -1) dfs(lc[v]);||| 13 ord[tim] = v;||| 14 in[v] = tim++;||| 15 if (rc[v] != -1) dfs(rc[v]);||| 16 }||| 17 void solve(int v, int& rem) {||| 18 int la = -1;||| 19 int cur = v;||| 20 for (int i = 0; i < (rem); ++i) {||| 21 if (cur == -1) break;||| 22 if (las[cur] != ' ' && las[cur] > str[cur]) {||| 23 la = i;||| 24 }||| 25 cur = lc[v];||| 26 }||| 27 cur = v;||| 28 vector<int> vs;||| 29 for (int i = 0; i < (la + 1); ++i) {||| 30 res[cur] = 1;||| 31 rem--;||| 32 vs.push_back(cur);||| 33 cur = lc[cur];||| 34 }||| 35 while (!vs.empty()) {||| 36 if (rc[vs.back()] != -1) solve(rc[vs.back()], rem);||| 37 vs.pop_back();||| 38 }||| 39 }||| 40 void print_ans(int v) {||| 41 if (lc[v] != -1) print_ans(lc[v]);||| 42 cout << str[v];||| 43 if (res[v]) cout << str[v];||| 44 if (rc[v] != -1) print_ans(rc[v]);||| 45 }||| 46 int pos[256];||| 47 int main() {||| 48 ios::sync_with_stdio(false);||| 49 cin.tie(NULL);||| 50 cin >> n >> k;||| 51 cin >> str;||| 52 for (int i = 0; i < (n); ++i) {||| 53 cin >> lc[i] >> rc[i];||| 54 lc[i]--, rc[i]--;||| 55 }||| 56 dfs(0);||| 57 fill(pos, pos + 256, INF);||| 58 for (int i = n - 1; i >= 0; i--) {||| 59 pos[str[ord[i]]] = i;||| 60 char f = ' ';||| 61 for (char c = 'a'; c <= 'z'; c++) {||| 62 if (c != str[ord[i]] && pos[f] > pos[c]) f = c;||| 63 }||| 64 las[ord[i]] = f;||| 65 }||| 66 solve(0, k);||| 67 assert(k >= 0);||| 68 print_ans(0);||| 69 }||| 	25 cur = lc[cur];
164	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 2e5 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 mt19937 rnd(||| 20 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 21 template <typename T>||| 22 bool chkmin(T &x, T y) {||| 23 return y < x ? x = y, 1 : 0;||| 24 }||| 25 template <typename T>||| 26 bool chkmax(T &x, T y) {||| 27 return y > x ? x = y, 1 : 0;||| 28 }||| 29 int n, k;||| 30 string s;||| 31 int lc[N], rc[N];||| 32 int ord[N];||| 33 int idx[N];||| 34 int p = 0;||| 35 int flag[N];||| 36 void dfs1(int u) {||| 37 if (lc[u]) dfs1(lc[u]);||| 38 ord[++p] = u;||| 39 idx[u] = p;||| 40 if (rc[u]) dfs1(rc[u]);||| 41 }||| 42 int rep[N];||| 43 int dfs2(int u, int k) {||| 44 if (k == 0) return 0;||| 45 int cost = 0;||| 46 if (lc[u]) cost += dfs2(lc[u], k - 1);||| 47 if (flag[u] || cost) {||| 48 rep[u] = 1, cost++;||| 49 if (rc[u]) cost += dfs2(rc[u], k - cost);||| 50 }||| 51 return cost;||| 52 }||| 53 void main0() {||| 54 cin >> n >> k >> s;||| 55 s = ""$"" + s;||| 56 for (int i = 1; i <= n; ++i) {||| 57 cin >> lc[i] >> rc[i];||| 58 }||| 59 dfs1(1);||| 60 flag[ord[n]] = 0;||| 61 for (int i = n - 1; i >= 1; --i) {||| 62 int cur = ord[i];||| 63 int nxt = ord[i + 1];||| 64 flag[cur] = (s[cur] == s[nxt] ? flag[nxt] : s[cur] < s[nxt]);||| 65 }||| 66 dfs2(1, k);||| 67 for (int i = 1; i <= n; ++i) {||| 68 for (int j = 1; j <= rep[ord[i]] + 1; ++j) {||| 69 cout << s[ord[i]];||| 70 }||| 71 }||| 72 cout << endl;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 2e5 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 mt19937 rnd(||| 20 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 21 template <typename T>||| 22 bool chkmin(T &x, T y) {||| 23 return y < x ? x = y, 1 : 0;||| 24 }||| 25 template <typename T>||| 26 bool chkmax(T &x, T y) {||| 27 return y > x ? x = y, 1 : 0;||| 28 }||| 29 int n, k;||| 30 string s;||| 31 int lc[N], rc[N];||| 32 char ord[N];||| 33 int idx[N];||| 34 int p = 0;||| 35 int flag[N];||| 36 void dfs1(int u) {||| 37 if (lc[u]) dfs1(lc[u]);||| 38 ord[++p] = u;||| 39 idx[u] = p;||| 40 if (rc[u]) dfs1(rc[u]);||| 41 }||| 42 int rep[N];||| 43 int dfs2(int u, int k) {||| 44 if (k == 0) return 0;||| 45 int cost = 0;||| 46 if (lc[u]) cost += dfs2(lc[u], k - cost);||| 47 if (flag[u] || cost) {||| 48 rep[u] = 1, cost++;||| 49 if (rc[u]) cost += dfs2(rc[u], k - cost);||| 50 }||| 51 return cost;||| 52 }||| 53 void main0() {||| 54 cin >> n >> k >> s;||| 55 s = ""$"" + s;||| 56 for (int i = 1; i <= n; ++i) {||| 57 cin >> lc[i] >> rc[i];||| 58 }||| 59 dfs1(1);||| 60 flag[ord[n]] = 0;||| 61 for (int i = n - 1; i >= 1; --i) {||| 62 int cur = ord[i];||| 63 int nxt = ord[i + 1];||| 64 flag[cur] = (s[cur] == s[nxt] ? flag[nxt] : s[cur] < s[nxt]);||| 65 }||| 66 dfs2(1, k);||| 67 for (int i = 1; i <= n; ++i) {||| 68 for (int j = 1; j <= rep[ord[i]] + 1; ++j) {||| 69 cout << s[ord[i]];||| 70 }||| 71 }||| 72 cout << endl;||| 73 }||| "	32 int ord[N];
