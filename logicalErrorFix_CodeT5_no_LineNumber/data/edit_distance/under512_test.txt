PID	Correct_code	Incorrect_code
0	 #include <bits/stdc++.h> using namespace std; using LL = long long; constexpr int N = 1e5 + 5; int main() { cin.tie(nullptr)->sync_with_stdio(false); int n, m; cin >> n >> m; vector<string> in(n); for (auto& x : in) cin >> x; vector<int> order(n); iota(begin(order), end(order), 0); sort(begin(order), end(order), [&](int i, int j) { for (int k = 0; k < m; k++) { if (in[i][k] != in[i][j]) { if (k % 2 == 0) { return in[i][k] < in[j][k]; } else { return in[i][k] > in[j][k]; } } } return false; }); for (int i : order) cout << i + 1 << "\n"; }	 #include <bits/stdc++.h> using namespace std; using LL = long long; constexpr int N = 1e5 + 5; int main() { cin.tie(nullptr)->sync_with_stdio(false); int n, m; cin >> n >> m; vector<string> in(n); for (auto& x : in) cin >> x; vector<int> order(n); iota(begin(order), end(order), 0); sort(begin(order), end(order), [&](int i, int j) { for (int k = 0; k < m; k++) { if (in[i][k] != in[j][k]) { if (k % 2 == 0) { return in[i][k] < in[j][k]; } else { return in[i][k] > in[j][k]; } } } return false; }); for (int i : order) cout << i + 1 << "\n"; }
0	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 3; const int md = 1e9 + 7; const int inf = 1e9 + 3; int n, m; string a[N]; int b[N]; bool cmp(int x, int y) { for (int i = 0; i < m; ++i) { if (a[x][i] != a[y][i]) { if (i & 1) { return a[x][i] > a[i][i]; } else { return a[x][i] < a[y][i]; } } } return false; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m; for (int i = 1; i <= n; ++i) cin >> a[i], b[i] = i; sort(b + 1, b + n + 1, cmp); for (int i = 1; i <= n; ++i) cout << b[i] << ' '; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 3; const int md = 1e9 + 7; const int inf = 1e9 + 3; int n, m; string a[N]; int b[N]; bool cmp(int x, int y) { for (int i = 0; i < m; ++i) { if (a[x][i] != a[y][i]) { if (i & 1) { return a[x][i] > a[y][i]; } else { return a[x][i] < a[y][i]; } } } return false; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m; for (int i = 1; i <= n; ++i) cin >> a[i], b[i] = i; sort(b + 1, b + n + 1, cmp); for (int i = 1; i <= n; ++i) cout << b[i] << ' '; }
0	 #include <bits/stdc++.h> using namespace std; int t, n, m; pair<string, int> p[1000001]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { string s; cin >> s; for (int j = 1; j < m; j += 2) s[j] = 155 - s[j]; p[i] = {s, i}; } sort(p + 1, p + n + 1); for (int i = 0; i <= n; i++) cout << p[i].second << ' '; }	 #include <bits/stdc++.h> using namespace std; int t, n, m; pair<string, int> p[1000001]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { string s; cin >> s; for (int j = 1; j < m; j += 2) s[j] = 155 - s[j]; p[i] = {s, i}; } sort(p + 1, p + n + 1); for (int i = 1; i <= n; i++) cout << p[i].second << ' '; }
0	 #include <bits/stdc++.h> using namespace std; int t, n, m; pair<string, int> p[1000001]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { string s; cin >> s; for (int j = 1; j < m; j += 2) s[j] = 155 - s[j]; p[i] = {s, i}; } sort(p + 1, p + n + 1); for (int i = 1; i < n; i++) cout << p[i].second << ' '; }	 #include <bits/stdc++.h> using namespace std; int t, n, m; pair<string, int> p[1000001]; int main() { cin >> n >> m; for (int i = 1; i <= n; i++) { string s; cin >> s; for (int j = 1; j < m; j += 2) s[j] = 155 - s[j]; p[i] = {s, i}; } sort(p + 1, p + n + 1); for (int i = 1; i <= n; i++) cout << p[i].second << ' '; }
1	 #include <bits/stdc++.h> using namespace std; using LL = long long; struct P { int x, y; double dis() const { return hypot(x, y); } }; int main() { cin.tie(nullptr)->sync_with_stdio(false); int n, k; cin >> n >> k; vector<P> vp(n); double L = 0, R = 200000; for (auto& [x, y] : vp) { cin >> x >> y; if (x == 0 and y == 0) { k -= 1; x = 2 * R; } } double PI = acos(-1); for (int step = 0; step < 30; step += 1) { double M = (L + R) / 2; vector<pair<double, int>> sp; for (auto p : vp) { double cs = p.dis() / 2 / M; if (cs > 1) continue; double c = atan2(p.y, p.x); double t = acos(cs); double x = c - t, y = c + t; if (x <= -PI) { sp.push_back({x - 2 * PI, 1}); sp.push_back({PI, -1}); x = -PI; } if (y >= PI) { sp.push_back({-PI, 1}); sp.push_back({y - 2 * PI, -1}); y = PI; } sp.push_back({x, 1}); sp.push_back({y, -1}); } sort(sp.begin(), sp.end()); int p = 0, s = 0; for (auto [x, y] : sp) { s += y; p = max(p, s); } if (p >= k) R = M; else L = M; } cout << fixed << setprecision(20) << L; return 0; }	 #include <bits/stdc++.h> using namespace std; using LL = long long; struct P { int x, y; double dis() const { return hypot(x, y); } }; int main() { cin.tie(nullptr)->sync_with_stdio(false); int n, k; cin >> n >> k; vector<P> vp(n); double L = 0, R = 200000; for (auto& [x, y] : vp) { cin >> x >> y; if (x == 0 and y == 0) { k -= 1; x = 2 * R; } } double PI = acos(-1); for (int step = 0; step < 50; step += 1) { double M = (L + R) / 2; vector<pair<double, int>> sp; for (auto p : vp) { double cs = p.dis() / 2 / M; if (cs > 1) continue; double c = atan2(p.y, p.x); double t = acos(cs); double x = c - t, y = c + t; if (x <= -PI) { sp.push_back({x + 2 * PI, 1}); sp.push_back({PI, -1}); x = -PI; } if (y >= PI) { sp.push_back({-PI, 1}); sp.push_back({y - 2 * PI, -1}); y = PI; } sp.push_back({x, 1}); sp.push_back({y, -1}); } sort(sp.begin(), sp.end()); int p = 0, s = 0; for (auto [x, y] : sp) { s += y; p = max(p, s); } if (p >= k) R = M; else L = M; } cout << fixed << setprecision(20) << L; return 0; }
3	 #include <bits/stdc++.h> using namespace std; string s = ""; int n = 0, ans = 0; void check(string t) { int res = 1; string s2 = s; if (s2[n - 1] == 'X') { for (int i = 0; i < n; i++) if (s2[i] == 'X') s2[i] = t[1]; } else if (s2[n - 1] == '_') s2[n - 1] = t[1]; else if (s2[n - 1] != t[1]) return; if (s2[n - 2] == 'X') { for (int i = 0; i < n; i++) if (s2[i] == 'X') s2[i] = t[0]; } else if (s2[n - 2] == '_') s2[n - 2] = t[0]; else if (s2[n - 2] != t[0]) return; for (int i = 0; i < n - 2; i++) { if (s2[i] == '_') { if (i == 0) res *= 9; else res *= 10; } if (s2[i] == 'X') { if (i == 0) res *= 9; else res *= 10; for (int j = 0; j < n; j++) if (s2[i] == 'X') s2[i] = '?'; } } if (s2[0] == '0') return; ans += res; } int main() { cin >> s; n = s.length(); if (s.length() == 1) { if (s == "0" || s == "_" || s == "X") cout << 1; else cout << 0; return 0; } check("25"); check("50"); check("75"); check("00"); cout << ans; return 0; }	 #include <bits/stdc++.h> using namespace std; string s = ""; int n = 0, ans = 0; void check(string t) { int res = 1; string s2 = s; if (s2[n - 1] == 'X') { for (int i = 0; i < n; i++) if (s2[i] == 'X') s2[i] = t[1]; } else if (s2[n - 1] == '_') s2[n - 1] = t[1]; else if (s2[n - 1] != t[1]) return; if (s2[n - 2] == 'X') { for (int i = 0; i < n; i++) if (s2[i] == 'X') s2[i] = t[0]; } else if (s2[n - 2] == '_') s2[n - 2] = t[0]; else if (s2[n - 2] != t[0]) return; for (int i = 0; i < n - 2; i++) { if (s2[i] == '_') { if (i == 0) res *= 9; else res *= 10; } if (s2[i] == 'X') { if (i == 0) res *= 9; else res *= 10; for (int j = 0; j < n; j++) if (s2[j] == 'X') s2[j] = '?'; } } if (s2[0] == '0') return; ans += res; } int main() { cin >> s; n = s.length(); if (s.length() == 1) { if (s == "0" || s == "_" || s == "X") cout << 1; else cout << 0; return 0; } check("25"); check("50"); check("75"); check("00"); cout << ans; return 0; }
3	 #include <bits/stdc++.h> char s[10]; int len, ans; void dfs(int pos, int cur, int x) { if (pos == len) { if (cur % 25 == 0) ++ans; return; } if (pos && cur == 0) return; if (s[pos] == 'X') { if (x != -1) dfs(pos + 1, cur * 10 + x, x); else { for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i); } } else if (s[pos] == '_') { for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i); } else dfs(pos + 1, cur * 10 + (s[pos] ^ 48), x); } int main() { scanf("%s", s); len = strlen(s); dfs(0, 0, -1); printf("%d\n", ans); return 0; }	 #include <bits/stdc++.h> char s[10]; int len, ans; void dfs(int pos, int cur, int x) { if (pos == len) { if (cur % 25 == 0) ++ans; return; } if (pos && cur == 0) return; if (s[pos] == 'X') { if (x != -1) dfs(pos + 1, cur * 10 + x, x); else { for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, i); } } else if (s[pos] == '_') { for (int i = 0; i < 10; ++i) dfs(pos + 1, cur * 10 + i, x); } else dfs(pos + 1, cur * 10 + (s[pos] ^ 48), x); } int main() { scanf("%s", s); len = strlen(s); dfs(0, 0, -1); printf("%d\n", ans); return 0; }
9	 #include <bits/stdc++.h> using namespace std; long long n, m, k, a[1000 + 5][1000 + 5]; signed main() { scanf("%lld%lld%lld", &n, &m, &k); for (long long i = 1; i <= n; i++) for (long long j = 1; j <= m; j++) scanf("%lld", &a[i][j]); while (k--) { long long ci; scanf("%lld", &ci); long long nx = 1, ny = ci; while (nx != n) { long long x = nx, y = ny; if (a[x][y] == 1) nx = x, ny = y + 1; else if (a[x][y] == 2) nx = x + 1, ny = y; else if (a[x][y] == 3) nx = x, ny = y - 1; a[x][y] = 2; } a[nx][ny] = 2; printf("%lld ", ny); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, m, k, a[1000 + 5][1000 + 5]; signed main() { scanf("%lld%lld%lld", &n, &m, &k); for (long long i = 1; i <= n; i++) for (long long j = 1; j <= m; j++) scanf("%lld", &a[i][j]); while (k--) { long long ci; scanf("%lld", &ci); long long nx = 1, ny = ci; while (nx <= n) { long long x = nx, y = ny; if (a[x][y] == 1) nx = x, ny = y + 1; else if (a[x][y] == 2) nx = x + 1, ny = y; else if (a[x][y] == 3) nx = x, ny = y - 1; a[x][y] = 2; } a[nx][ny] = 2; printf("%lld ", ny); } return 0; }
9	 #include <bits/stdc++.h> int grid[1001][1001]; int start[100000]; int main(void) { int n, m, k; scanf("%d %d %d", &n, &m, &k); for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { scanf("%d", &grid[i][j]); } } for (int i = 0; i < k; i++) { scanf("%d", &start[i]); } for (int i = 0; i < k; i++) { int r = 1; int c = start[i]; while (r < n) { int rr, cc; switch (grid[r][c]) { case 1: rr = r; cc = c + 1; break; case 2: rr = r + 1; cc = c; break; case 3: rr = r; cc = c - 1; break; } grid[r][c] = 2; r = rr; c = cc; } printf("%d ", c); } }	 #include <bits/stdc++.h> int grid[1001][1001]; int start[100000]; int main(void) { int n, m, k; scanf("%d %d %d", &n, &m, &k); for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { scanf("%d", &grid[i][j]); } } for (int i = 0; i < k; i++) { scanf("%d", &start[i]); } for (int i = 0; i < k; i++) { int r = 1; int c = start[i]; while (r <= n) { int rr, cc; switch (grid[r][c]) { case 1: rr = r; cc = c + 1; break; case 2: rr = r + 1; cc = c; break; case 3: rr = r; cc = c - 1; break; } grid[r][c] = 2; r = rr; c = cc; } printf("%d ", c); } }
10	 #include <bits/stdc++.h> using namespace std; long long int power(long long int x, long long int y, long long int p) { long long int res = 1; x = x % p; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long int mod = 1000000007; signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long int ax, ay, bx, by; cin >> ax >> ay >> bx >> by; long long int zz = 1; if (ax == ay && bx == by) { zz = 0; } cout << power(k, n * m - r * c * zz, mod); }	 #include <bits/stdc++.h> using namespace std; long long int power(long long int x, long long int y, long long int p) { long long int res = 1; x = x % p; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long int mod = 1000000007; signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long int n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long int ax, ay, bx, by; cin >> ax >> ay >> bx >> by; long long int zz = 1; if (ax == bx && ay == by) { zz = 0; } cout << power(k, n * m - r * c * zz, mod); }
10	 #include <bits/stdc++.h> using namespace std; int n, m, k, res; const int mo = 1000000007; pair<int, int> a, b, c, d; int ksm(int x, long long y) { int ans = 1; while (y) { if (y & 1) ans = 1ll * ans * x % mo; x = 1ll * x * x % mo; y = y / 2; } return ans; } int main() { res = 1; scanf("%d%d%d%d%d", &n, &m, &k, &c.first, &c.second); scanf("%d%d%d%d", &a.first, &a.second, &b.first, &b.second); if (a > b) swap(a, b); int doit = 1; while (doit) { if (a == b) { res = 1ll * res * ksm(k, 1ll * n * m); break; } d = make_pair(0, 0); if (a.first + c.first - 1 >= d.first) { if (a.second <= b.second && a.second + c.second - 1 >= b.second) { d = make_pair(a.first + c.first - b.first, a.second + c.second - b.second); } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) { d = make_pair(a.first + c.first - b.first, b.second + c.second - a.second); b.second = a.second; a.second = a.second + c.second - d.second; } } res = 1ll * res * ksm(k, 1ll * n * m - 2ll * c.first * c.second + 1ll * d.first * d.second) % mo; n = c.first; m = c.second; c = d; if (c.first == 0) { doit = 0; res = 1ll * res * ksm(k, 1ll * n * m) % mo; } } printf("%d\n", res); }	 #include <bits/stdc++.h> using namespace std; int n, m, k, res; const int mo = 1000000007; pair<int, int> a, b, c, d; int ksm(int x, long long y) { int ans = 1; while (y) { if (y & 1) ans = 1ll * ans * x % mo; x = 1ll * x * x % mo; y = y / 2; } return ans; } int main() { res = 1; scanf("%d%d%d%d%d", &n, &m, &k, &c.first, &c.second); scanf("%d%d%d%d", &a.first, &a.second, &b.first, &b.second); if (a > b) swap(a, b); int doit = 1; while (doit) { if (a == b) { res = 1ll * res * ksm(k, 1ll * n * m); break; } d = make_pair(0, 0); if (a.first + c.first - 1 >= b.first) { if (a.second <= b.second && a.second + c.second - 1 >= b.second) { d = make_pair(a.first + c.first - b.first, a.second + c.second - b.second); } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) { d = make_pair(a.first + c.first - b.first, b.second + c.second - a.second); b.second = a.second; a.second = a.second + c.second - d.second; } } res = 1ll * res * ksm(k, 1ll * n * m - 2ll * c.first * c.second + 1ll * d.first * d.second) % mo; n = c.first; m = c.second; c = d; if (c.first == 0) { doit = 0; res = 1ll * res * ksm(k, 1ll * n * m) % mo; } } printf("%d\n", res); }
10	 #include <bits/stdc++.h> using namespace std; int n, m, k, res; const int mo = 1000000007; pair<int, int> a, b, c, d; int ksm(int x, long long y) { int ans = 1; while (y) { if (y & 1) ans = 1ll * ans * x % mo; x = 1ll * x * x % mo; y = y / 2; } return ans; } int main() { res = 1; scanf("%d%d%d%d%d", &n, &m, &k, &c.first, &c.second); scanf("%d%d%d%d", &a.first, &a.second, &b.first, &b.second); if (a > b) swap(a, b); int doit = 1; while (doit) { if (a == b) { res = 1ll * res * ksm(k, 1ll * n * m); break; } d = make_pair(0, 0); if (a.first + c.first - 1 >= d.first) { if (a.second <= b.second && a.second + c.second - 1 >= b.second) { d = make_pair(a.first + c.first - b.first, a.second + c.second - b.second); } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) { d = make_pair(a.first + c.first - b.first, b.second + c.second - a.second); b.second = a.second; a.second = a.second + c.second - d.second; } } res = 1ll * res * ksm(k, 1ll * n * m - 2ll * c.first * c.second + 1ll * d.first * d.second) % mo; n = c.first; m = c.second; c = d; if (c.first == 0) { doit = 0; res = 1ll * res * ksm(k, 1ll * n * m) % mo; } } printf("%lld\n", res); }	 #include <bits/stdc++.h> using namespace std; int n, m, k, res; const int mo = 1000000007; pair<int, int> a, b, c, d; int ksm(int x, long long y) { int ans = 1; while (y) { if (y & 1) ans = 1ll * ans * x % mo; x = 1ll * x * x % mo; y = y / 2; } return ans; } int main() { res = 1; scanf("%d%d%d%d%d", &n, &m, &k, &c.first, &c.second); scanf("%d%d%d%d", &a.first, &a.second, &b.first, &b.second); if (a > b) swap(a, b); int doit = 1; while (doit) { if (a == b) { res = 1ll * res * ksm(k, 1ll * n * m); break; } d = make_pair(0, 0); if (a.first + c.first - 1 >= b.first) { if (a.second <= b.second && a.second + c.second - 1 >= b.second) { d = make_pair(a.first + c.first - b.first, a.second + c.second - b.second); } else if (a.second >= b.second && b.second + c.second - 1 >= a.second) { d = make_pair(a.first + c.first - b.first, b.second + c.second - a.second); b.second = a.second; a.second = a.second + c.second - d.second; } } res = 1ll * res * ksm(k, 1ll * n * m - 2ll * c.first * c.second + 1ll * d.first * d.second) % mo; n = c.first; m = c.second; c = d; if (c.first == 0) { doit = 0; res = 1ll * res * ksm(k, 1ll * n * m) % mo; } } printf("%d\n", res); }
10	 #include <bits/stdc++.h> using namespace std; long long Fast(long long x, long long y) { long long ret = 1; while (y) { if (y & 1) ret = (ret * x) % 1000000007; x = (x * x) % 1000000007, y >>= 1; } return ret; } signed main() { long long n, m, r, c, ax, ay, bx, by, k; scanf("%lld%lld%lld%lld%lld", &n, &m, &k, &r, &c); scanf("%lld%lld%lld%lld", &ax, &ay, &bx, &by); if (ax == ay && bx == by) printf("%lld\n", Fast(k, n * m)); else printf("%lld\n", Fast(k, n * m - r * c)); return 0; }	 #include <bits/stdc++.h> using namespace std; long long Fast(long long x, long long y) { long long ret = 1; while (y) { if (y & 1) ret = (ret * x) % 1000000007; x = (x * x) % 1000000007, y >>= 1; } return ret; } signed main() { long long n, m, r, c, ax, ay, bx, by, k; scanf("%lld%lld%lld%lld%lld", &n, &m, &k, &r, &c); scanf("%lld%lld%lld%lld", &ax, &ay, &bx, &by); if (ax == bx && ay == by) printf("%lld\n", Fast(k, n * m)); else printf("%lld\n", Fast(k, n * m - r * c)); return 0; }
10	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e3 + 5, mum = 1e9 + 7; int Pow(int A, long long B) { int num = 1; while (B) { if (B & 1) num = 1LL * num * A % mum; A = 1LL * A * A % mum; B >>= 1; } return num; } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int n, m, k, r, c, ax, ay, bx, by; cin >> n >> m >> k >> r >> c >> ax >> ay >> bx >> by; cout << (ax == bx && bx == by ? Pow(k, 1LL * n * m) : Pow(k, 1LL * n * m - 1LL * r * c)) << '\n'; return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e3 + 5, mum = 1e9 + 7; int Pow(int A, long long B) { int num = 1; while (B) { if (B & 1) num = 1LL * num * A % mum; A = 1LL * A * A % mum; B >>= 1; } return num; } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int n, m, k, r, c, ax, ay, bx, by; cin >> n >> m >> k >> r >> c >> ax >> ay >> bx >> by; cout << (ax == bx && ay == by ? Pow(k, 1LL * n * m) : Pow(k, 1LL * n * m - 1LL * r * c)) << '\n'; return 0; }
10	 #include <bits/stdc++.h> using namespace std; long long solve(long long r, long long c, long long dr, long long dc) { if (dr == 0 && c == 0) { return r * c; } if (dr >= r || dc >= c) { return r * c; } if (r >= 2 * dr && c >= 2 * dc) return r * c - (r - dr) * (c - dc); return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c); } long long lgput(long long b, long long e, long long mod) { long long ret = 1; while (e) { if (e & 1) ret = (ret * b) % mod; b = (b * b) % mod; e /= 2; } return ret; } int32_t main() { long long n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long ax, bx, ay, by; cin >> ax >> ay >> bx >> by; long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay)); long long aria = n * m; aria -= 2 * r * c; long long dr = abs(bx - ax), dc = abs(by - ay); if (dr < r && dc < c) aria += (r - dr) * (c - dc); aria += ccrect; cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; long long solve(long long r, long long c, long long dr, long long dc) { if (dr == 0 && dc == 0) { return r * c; } if (dr >= r || dc >= c) { return r * c; } if (r >= 2 * dr || c >= 2 * dc) return r * c - (r - dr) * (c - dc); return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c); } long long lgput(long long b, long long e, long long mod) { long long ret = 1; while (e) { if (e & 1) ret = (ret * b) % mod; b = (b * b) % mod; e /= 2; } return ret; } int32_t main() { long long n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long ax, bx, ay, by; cin >> ax >> ay >> bx >> by; long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay)); long long aria = n * m; aria -= 2 * r * c; long long dr = abs(bx - ax), dc = abs(by - ay); if (dr < r && dc < c) aria += (r - dr) * (c - dc); aria += ccrect; cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl; return 0; }
10	 #include <bits/stdc++.h> using namespace std; long long solve(long long r, long long c, long long dr, long long dc) { if (dr == 0 && dc == 0) { return r * c; } if (dr >= r || dc >= c) { return r * c; } if (r >= 2 * dr && c >= 2 * dc) return r * c - (r - dr) * (c - dc); return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c); } long long lgput(long long b, long long e, long long mod) { long long ret = 1; while (e) { if (e & 1) ret = (ret * b) % mod; b = (b * b) % mod; e /= 2; } return ret; } int32_t main() { long long n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long ax, bx, ay, by; cin >> ax >> ay >> bx >> by; long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay)); long long aria = n * m; aria -= 2 * r * c; long long dr = abs(bx - ax), dc = abs(by - ay); if (dr < r && dc < c) aria += (r - dr) * (c - dc); aria += ccrect; cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; long long solve(long long r, long long c, long long dr, long long dc) { if (dr == 0 && dc == 0) { return r * c; } if (dr >= r || dc >= c) { return r * c; } if (r >= 2 * dr || c >= 2 * dc) return r * c - (r - dr) * (c - dc); return r * c - solve(r - dr, c - dc, 2 * dr - r, 2 * dc - c); } long long lgput(long long b, long long e, long long mod) { long long ret = 1; while (e) { if (e & 1) ret = (ret * b) % mod; b = (b * b) % mod; e /= 2; } return ret; } int32_t main() { long long n, m, k, r, c; cin >> n >> m >> k >> r >> c; long long ax, bx, ay, by; cin >> ax >> ay >> bx >> by; long long ccrect = solve(r, c, abs(bx - ax), abs(by - ay)); long long aria = n * m; aria -= 2 * r * c; long long dr = abs(bx - ax), dc = abs(by - ay); if (dr < r && dc < c) aria += (r - dr) * (c - dc); aria += ccrect; cout << lgput(k, aria, 1000 * 1000 * 1000 + 7) << endl; return 0; }
11	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int n, a[MAXN]; pair<int, int> ta[MAXN]; int seq[MAXN]; void solve() { cin >> n; for (int i = (1); i <= (n); ++i) cin >> a[i]; for (int i = (1); i <= (n); ++i) { ta[i].first = i - a[i]; ta[i].second = a[i]; } sort(ta + 1, ta + 1 + n, [](const pair<int, int> &lhs, const pair<int, int> &rhs) { return lhs.first < rhs.first || (lhs.first < rhs.first && lhs.second < rhs.second); }); int i = 1; while (i <= n && ta[i].first < 0) ++i; if (i > n) { cout << "0\n"; return; } int ans = 1; seq[1] = ta[i].second; for (++i; i <= n; ++i) { auto p = lower_bound(seq + 1, seq + 1 + ans, ta[i].second); *p = ta[i].second; ans = max(ans, int(p - seq)); } cout << ans << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int _; _ = 1; while (_--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int n, a[MAXN]; pair<int, int> ta[MAXN]; int seq[MAXN]; void solve() { cin >> n; for (int i = (1); i <= (n); ++i) cin >> a[i]; for (int i = (1); i <= (n); ++i) { ta[i].first = i - a[i]; ta[i].second = a[i]; } sort(ta + 1, ta + 1 + n, [](const pair<int, int> &lhs, const pair<int, int> &rhs) { return lhs.first < rhs.first || (lhs.first == rhs.first && lhs.second < rhs.second); }); int i = 1; while (i <= n && ta[i].first < 0) ++i; if (i > n) { cout << "0\n"; return; } int ans = 1; seq[1] = ta[i].second; for (++i; i <= n; ++i) { auto p = lower_bound(seq + 1, seq + 1 + ans, ta[i].second); *p = ta[i].second; ans = max(ans, int(p - seq)); } cout << ans << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int _; _ = 1; while (_--) { solve(); } return 0; }
11	 #include <bits/stdc++.h> template <class T> void read(T &a) { a = 0; char x = getchar(); bool f = 0; for (; x < '0' || x > '9'; x = getchar()) f |= x == '-'; for (; x >= '0' && x <= '9'; x = getchar()) a = (a << 3) + (a << 1) + x - '0'; if (f) a = -a; } template <class T, class... Args> void read(T &a, Args &...args) { read(a); read(args...); } using namespace std; const int N = 2e5 + 5; int n; int f[N], lim; pair<int, int> d[N]; bool cmp(pair<int, int> a, pair<int, int> b) { if (a.first ^ b.first) { return a.first < b.first; } return a.second < b.second; } int main() { read(n); for (int i = 1; i <= n; ++i) { read(d[i].first); d[i].second = i; } sort(d + 1, d + n + 1, cmp); int lim = 0; for (int i = 1; i <= n; ++i) { int c = d[i].second - d[i].first; if (c < 0) continue; if (lim == 0) { f[++lim] = c; continue; } if (c >= f[lim]) { f[++lim] = c; continue; } int l = 1, r = lim + 1; while (l < r - 1) { int mid = l + r >> 1; if (f[mid] <= c) { l = mid; } else { r = mid; } } if (f[l] > c) { f[l] = c; } else if (l != lim) { f[l + 1] = c; } } printf("%d\n", lim); return 0; }	 #include <bits/stdc++.h> template <class T> void read(T &a) { a = 0; char x = getchar(); bool f = 0; for (; x < '0' || x > '9'; x = getchar()) f |= x == '-'; for (; x >= '0' && x <= '9'; x = getchar()) a = (a << 3) + (a << 1) + x - '0'; if (f) a = -a; } template <class T, class... Args> void read(T &a, Args &...args) { read(a); read(args...); } using namespace std; const int N = 2e5 + 5; int n; int f[N], lim; pair<int, int> d[N]; bool cmp(pair<int, int> a, pair<int, int> b) { if (a.first ^ b.first) { return a.first < b.first; } return a.second > b.second; } int main() { read(n); for (int i = 1; i <= n; ++i) { read(d[i].first); d[i].second = i; } sort(d + 1, d + n + 1, cmp); int lim = 0; for (int i = 1; i <= n; ++i) { int c = d[i].second - d[i].first; if (c < 0) continue; if (lim == 0) { f[++lim] = c; continue; } if (c >= f[lim]) { f[++lim] = c; continue; } int l = 1, r = lim + 1; while (l < r - 1) { int mid = l + r >> 1; if (f[mid] <= c) { l = mid; } else { r = mid; } } if (f[l] > c) { f[l] = c; } else if (l != lim) { f[l + 1] = c; } } printf("%d\n", lim); return 0; }
12	 #include <bits/stdc++.h> using namespace std; long long n, m, ans; long long dis[2010][2010], c[2010][2010]; char s[2010][2010]; inline void solve(long long row, long long tl, long long tr, long long l, long long r) { if (l > r) return; long long mid = (l + r) >> 1; dis[row][mid] = 1000000000; long long t = tl; for (long long i = tl; i <= tr; i++) { long long val = c[row][i] + (i - mid) * (i - mid); if (val < dis[row][mid]) { dis[row][mid] = val; t = i; } } solve(row, tl, t, l, mid - 1); solve(row, t, tr, mid + 1, r); } signed main() { scanf("%lld%lld", &n, &m); for (long long i = 0; i <= n; i++) scanf("%s", s[i]); for (long long i = 0; i <= n; i++) { for (long long j = 0; j <= m; j++) c[i][j] = 1000000000; } for (long long j = 0; j <= m; j++) { long long res = 1000; for (long long i = 0; i <= n; i++) { if (s[i][j] == '1') res = i; c[i][j] = min(c[i][j], (i - res) * (i - res)); } res = 10000; for (long long i = n; ~i; i--) { if (s[i][j] == '1') res = i; c[i][j] = min(c[i][j], (i - res) * (i - res)); } } for (long long i = 0; i <= n; i++) { solve(i, 0, m, 0, m); for (long long j = 0; j <= m; j++) ans += dis[i][j]; } printf("%lld\n", ans); return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, m, ans; long long dis[2010][2010], c[2010][2010]; char s[2010][2010]; inline void solve(long long row, long long tl, long long tr, long long l, long long r) { if (l > r) return; long long mid = (l + r) >> 1; dis[row][mid] = 1000000000; long long t = tl; for (long long i = tl; i <= tr; i++) { long long val = c[row][i] + (i - mid) * (i - mid); if (val < dis[row][mid]) { dis[row][mid] = val; t = i; } } solve(row, tl, t, l, mid - 1); solve(row, t, tr, mid + 1, r); } signed main() { scanf("%lld%lld", &n, &m); for (long long i = 0; i <= n; i++) scanf("%s", s[i]); for (long long i = 0; i <= n; i++) { for (long long j = 0; j <= m; j++) c[i][j] = 1000000000; } for (long long j = 0; j <= m; j++) { long long res = 10000; for (long long i = 0; i <= n; i++) { if (s[i][j] == '1') res = i; c[i][j] = min(c[i][j], (i - res) * (i - res)); } res = 10000; for (long long i = n; ~i; i--) { if (s[i][j] == '1') res = i; c[i][j] = min(c[i][j], (i - res) * (i - res)); } } for (long long i = 0; i <= n; i++) { solve(i, 0, m, 0, m); for (long long j = 0; j <= m; j++) ans += dis[i][j]; } printf("%lld\n", ans); return 0; }
13	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { string sep; for (const T &x : v) os << sep << x, sep = " "; return os; } const int mxN = 1e5 + 1, oo = 1e9; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int a[3] = {}; for (int i = 0; i < 3; ++i) a[i] = count(begin(s), end(s), 'A' + i); int n = s.size(); cout << ((n % 2 == 0 and a[0] + a[2] <= a[1]) ? "Yes\n" : "No\n"); } }	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { string sep; for (const T &x : v) os << sep << x, sep = " "; return os; } const int mxN = 1e5 + 1, oo = 1e9; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int a[3] = {}; for (int i = 0; i < 3; ++i) a[i] = count(begin(s), end(s), 'A' + i); int n = s.size(); cout << ((n % 2 == 0 and a[0] + a[2] == a[1]) ? "Yes\n" : "No\n"); } }
13	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e5 + 2; inline void solve() { string s; cin >> s; long long a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); ++i) { if (s[i] == 'A') a++; if (s[i] == 'B') b++; if (s[i] == 'C') c++; } if (b >= (a + c)) return void(cout << "YES" << "\n"); return void(cout << "NO" << "\n"); } int main() { ios_base::sync_with_stdio(0); ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int tc = 1; cin >> tc; while (tc--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e5 + 2; inline void solve() { string s; cin >> s; long long a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); ++i) { if (s[i] == 'A') a++; if (s[i] == 'B') b++; if (s[i] == 'C') c++; } if (b == (a + c)) return void(cout << "YES" << "\n"); return void(cout << "NO" << "\n"); } int main() { ios_base::sync_with_stdio(0); ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; int tc = 1; cin >> tc; while (tc--) solve(); return 0; }
13	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { string s; cin >> s; long long int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if (b == c + a) cout << "YES\n"; else cout << "N0\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t; cin >> t; while (t--) { string s; cin >> s; long long int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if (b == c + a) cout << "YES\n"; else cout << "NO\n"; } return 0; }
13	 #include <bits/stdc++.h> template <typename T> auto getint() -> T { T ret = 0; char c; while ((c = getchar()) && !isspace(c)) { ret = ret * 10 + c - '0'; } return ret; } int main() { unsigned T = getint<unsigned>(), cntA, cntB, cntC; char c; while (T--) { cntA = cntB = cntC = 0; while ((c = getchar()) && !isspace(c)) { if (c == 'A') ++cntA; else if (c == 'B') ++cntB; else ++cntC; } printf("%s\n", ((cntA + cntC <= cntB) ? "YES" : "NO")); } }	 #include <bits/stdc++.h> template <typename T> auto getint() -> T { T ret = 0; char c; while ((c = getchar()) && !isspace(c)) { ret = ret * 10 + c - '0'; } return ret; } int main() { unsigned T = getint<unsigned>(), cntA, cntB, cntC; char c; while (T--) { cntA = cntB = cntC = 0; while ((c = getchar()) && !isspace(c)) { if (c == 'A') ++cntA; else if (c == 'B') ++cntB; else ++cntC; } printf("%s\n", ((cntA + cntC == cntB) ? "YES" : "NO")); } }
13	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 17; int q, a, b, c; void solve() { string s; cin >> s; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') { a++; } if (s[i] == 'B') { b++; } if (s[i] == 'C') { c++; } } if (b >= (a + c) && b >= a && b >= c) { cout << "YES\n"; } else cout << "NO\n"; a = 0; b = 0; c = 0; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 17; int q, a, b, c; void solve() { string s; cin >> s; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') { a++; } if (s[i] == 'B') { b++; } if (s[i] == 'C') { c++; } } if (b == (a + c) && b >= a && b >= c) { cout << "YES\n"; } else cout << "NO\n"; a = 0; b = 0; c = 0; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t = 1; cin >> t; while (t--) { solve(); } return 0; }
13	 #include <bits/stdc++.h> int main() { int t, i; scanf("%d", &t); while (t--) { char s[55]; int a = 0, b = 0, c = 0, l; scanf("%s", s); l = strlen(s); for (i = 0; i < l; i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if (a + c == b) { printf("YES\n"); } else printf("N0\n"); } return 0; }	 #include <bits/stdc++.h> int main() { int t, i; scanf("%d", &t); while (t--) { char s[55]; int a = 0, b = 0, c = 0, l; scanf("%s", s); l = strlen(s); for (i = 0; i < l; i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if (a + c == b) { printf("YES\n"); } else printf("NO\n"); } return 0; }
13	 #include <bits/stdc++.h> using namespace std; int n, i, j, da, db, dc; string a; int main() { cin >> n; for (i = 0; i < n; ++i) { cin >> a; da = 0; db = 0; dc = 0; for (j = 0; j < a.size(); ++j) { if (a[j] == 'A') ++da; if (a[j] == 'B') ++db; if (a[j] == 'C') ++dc; } if (da + dc == db) cout << "YES"; else cout << "NO"; } }	 #include <bits/stdc++.h> using namespace std; int n, i, j, da, db, dc; string a; int main() { cin >> n; for (i = 0; i < n; ++i) { cin >> a; da = 0; db = 0; dc = 0; for (j = 0; j < a.size(); ++j) { if (a[j] == 'A') ++da; if (a[j] == 'B') ++db; if (a[j] == 'C') ++dc; } if (da + dc == db) cout << "YES\n"; else cout << "NO\n"; } }
13	 #include <bits/stdc++.h> using namespace std; int main() { int T; string s; cin >> T; while (T-- > 0) { cin >> s; int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') { ++a; } else if (s[i] == 'B') { ++b; } else { ++c; } } if (a == 0 && b == c) { cout << "YES" << endl; continue; } if (a == b && c == 0) { cout << "YES" << endl; continue; } if (b = a + c) { cout << "YES" << endl; continue; } cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int T; string s; cin >> T; while (T-- > 0) { cin >> s; int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') { ++a; } else if (s[i] == 'B') { ++b; } else { ++c; } } if (a == 0 && b == c) { cout << "YES" << endl; continue; } if (a == b && c == 0) { cout << "YES" << endl; continue; } if (b == a + c) { cout << "YES" << endl; continue; } cout << "NO" << endl; } return 0; }
13	 #include <bits/stdc++.h> using namespace std; int cubeta[1000]; int main() { int t; cin >> t; while (t--) { string s; cin >> s; for (int i = 0; i < s.size(); i++) { cubeta[s[i]]++; } if (cubeta['A'] == 0) { if (cubeta['B'] == cubeta['C']) { cout << "YES\n"; } else { cout << "NO"; } } else if (cubeta['C'] == 0) { if (cubeta['B'] == cubeta['A']) { cout << "YES\n"; } else { cout << "NO"; } } else if (cubeta['B'] == 0) { cout << "NO\n"; } else { if (cubeta['A'] <= cubeta['B'] && cubeta['B'] - cubeta['A'] == cubeta['C']) { cout << "YES\n"; } else { cout << "NO\n"; } } cubeta['A'] = 0; cubeta['B'] = 0; cubeta['C'] = 0; } return 0; }	 #include <bits/stdc++.h> using namespace std; int cubeta[1000]; int main() { int t; cin >> t; while (t--) { string s; cin >> s; for (int i = 0; i < s.size(); i++) { cubeta[s[i]]++; } if (cubeta['A'] == 0) { if (cubeta['B'] == cubeta['C']) { cout << "YES\n"; } else { cout << "NO\n"; } } else if (cubeta['C'] == 0) { if (cubeta['B'] == cubeta['A']) { cout << "YES\n"; } else { cout << "NO\n"; } } else if (cubeta['B'] == 0) { cout << "NO\n"; } else { if (cubeta['A'] <= cubeta['B'] && cubeta['B'] - cubeta['A'] == cubeta['C']) { cout << "YES\n"; } else { cout << "NO\n"; } } cubeta['A'] = 0; cubeta['B'] = 0; cubeta['C'] = 0; } return 0; }
13	 #include <bits/stdc++.h> using namespace std; bool cat(string s) { int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if (abs(b - c) == a) return true; else return false; } int main() { string s; int x; cin >> x; for (int i = 0; i < x; i++) { cin >> s; if (cat(s)) cout << "YES" << endl; else cout << "NO" << endl; } }	 #include <bits/stdc++.h> using namespace std; bool cat(string s) { int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if ((b - c) == a) return true; else return false; } int main() { string s; int x; cin >> x; for (int i = 0; i < x; i++) { cin >> s; if (cat(s)) cout << "YES" << endl; else cout << "NO" << endl; } }
13	 #include <bits/stdc++.h> using namespace std; bool cat(string s) { int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'a') a++; else if (s[i] == 'b') b++; else c++; } if (abs(b - c) == a) return true; else return false; } int main() { string s; int x; cin >> x; for (int i = 0; i < x; i++) { cin >> s; if (cat(s)) cout << "YES" << endl; else cout << "NO" << endl; } }	 #include <bits/stdc++.h> using namespace std; bool cat(string s) { int a = 0, b = 0, c = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == 'A') a++; else if (s[i] == 'B') b++; else c++; } if ((b - c) == a) return true; else return false; } int main() { string s; int x; cin >> x; for (int i = 0; i < x; i++) { cin >> s; if (cat(s)) cout << "YES" << endl; else cout << "NO" << endl; } }
13	 #include <bits/stdc++.h> using namespace std; int test(string str) { int len = str.length(); int a = 0, b = 0, c = 0; for (int i = 0; i < len; i++) { if (str[i] == 'A') a += 1; else if (str[i] == 'B') b += 1; else if (str[i] == 'C') c += 1; } if (a == b && b - a == c) return 1; return 0; } int main() { int t; cin >> t; string s; while (t--) { cin >> s; if (test(s)) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int test(string str) { int len = str.length(); int a = 0, b = 0, c = 0; for (int i = 0; i < len; i++) { if (str[i] == 'A') a += 1; else if (str[i] == 'B') b += 1; else if (str[i] == 'C') c += 1; } if (a <= b && b - a == c) return 1; return 0; } int main() { int t; cin >> t; string s; while (t--) { cin >> s; if (test(s)) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
13	 #include <bits/stdc++.h> using namespace std; signed main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); int cnt = 0; for (int i = 0; i < n; i++) { cnt += s[i] == 'B'; } if (cnt + cnt >= n) cout << "YES\n"; else cout << "NO\n"; } }	 #include <bits/stdc++.h> using namespace std; signed main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); int cnt = 0; for (int i = 0; i < n; i++) { cnt += s[i] == 'B'; } if (cnt + cnt == n) cout << "YES\n"; else cout << "NO\n"; } }
13	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str; cin >> str; int a = 0, b = 0, c = 0; for (int i = 0; i < str.size(); i++) { if (str[i] == 'A') a++; else if (str[i] == 'B') b++; else c++; } if (a + c == b) cout << "YES"; else cout << "NO"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str; cin >> str; int a = 0, b = 0, c = 0; for (int i = 0; i < str.size(); i++) { if (str[i] == 'A') a++; else if (str[i] == 'B') b++; else c++; } if (a + c == b) cout << "YES\n"; else cout << "NO\n"; } return 0; }
13	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { char str[100]; scanf("%s", str); int a = 0, b = 0, c = 0; for (int i = 0; i < strlen(str); i++) { if (str[i] == 'A') { a++; } else if (str[i] == 'B') { b++; } else { c++; } } int d = a + c; if (d == b) { printf("YES"); } else printf("NO"); } return 0; }	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { char str[100]; scanf("%s", str); int a = 0, b = 0, c = 0; for (int i = 0; i < strlen(str); i++) { if (str[i] == 'A') { a++; } else if (str[i] == 'B') { b++; } else { c++; } } int d = a + c; if (d == b) { printf("YES\n"); } else printf("NO\n"); } return 0; }
13	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int l = s.length(), counta = 0, countb = 0, countc = 0, i; for (i = 0; i < l; i++) { if (s[i] == 'A') counta++; if (s[i] == 'B') countb++; if (s[i] == 'C') countc++; } if (countb >= counta + countc) cout << "YES" << "\n"; else cout << "NO" << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int l = s.length(), counta = 0, countb = 0, countc = 0, i; for (i = 0; i < l; i++) { if (s[i] == 'A') counta++; if (s[i] == 'B') countb++; if (s[i] == 'C') countc++; } if (countb == counta + countc) cout << "YES" << "\n"; else cout << "NO" << "\n"; } }
14	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { int n; cin >> n; int a[n]; vector<pair<pair<int, int>, int>> res; for (int i = 0; i < n; i++) cin >> a[i]; for (int i = 0; i < n; i++) { int m = a[i]; int ind = i; for (int j = i + 1; j < n; j++) { if (a[j] < a[i]) { m = a[j]; ind = j; } } if (i != ind) { int k = a[ind]; for (int j = ind; j > i; j--) { a[j] = a[j - 1]; } a[i] = k; res.push_back({{i + 1, ind + 1}, abs(ind - i)}); } } cout << res.size() << endl; for (auto x : res) { cout << x.first.first << " " << x.first.second << " " << x.second << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { int n; cin >> n; int a[n]; vector<pair<pair<int, int>, int>> res; for (int i = 0; i < n; i++) cin >> a[i]; for (int i = 0; i < n; i++) { int m = a[i]; int ind = i; for (int j = i + 1; j < n; j++) { if (a[j] < a[ind]) { m = a[j]; ind = j; } } if (i != ind) { int k = a[ind]; for (int j = ind; j > i; j--) { a[j] = a[j - 1]; } a[i] = k; res.push_back({{i + 1, ind + 1}, abs(ind - i)}); } } cout << res.size() << endl; for (auto x : res) { cout << x.first.first << " " << x.first.second << " " << x.second << endl; } } }
14	 #include <bits/stdc++.h> using namespace std; long long a[1000005]; long long tot; struct que { long long x, y, z; } t[1000005]; int main() { long long tt; scanf("%lld", &tt); while (tt--) { long long n; tot = 0; scanf("%lld", &n); for (long long i = 1; i <= n; i++) scanf("%lld", &a[i]); for (long long i = 1; i <= n; i++) { long long mi = i; for (long long j = i + 1; j <= n; j++) if (a[mi] > a[j]) mi = j; long long k = a[mi]; for (long long j = mi - 1; j >= i; j--) a[j + 1] = a[j]; a[i] = k; if (mi != i) t[++tot].x = i, t[++tot].y = mi, t[++tot].z = mi - i; } printf("%lld\n", tot); for (long long i = 1; i <= tot; i++) printf("%lld %lld %lld\n", t[i].x, t[i].y, t[i].z); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long a[1000005]; long long tot; struct que { long long x, y, z; } t[1000005]; int main() { long long tt; scanf("%lld", &tt); while (tt--) { long long n; tot = 0; scanf("%lld", &n); for (long long i = 1; i <= n; i++) scanf("%lld", &a[i]); for (long long i = 1; i <= n; i++) { long long mi = i; for (long long j = i + 1; j <= n; j++) if (a[mi] > a[j]) mi = j; long long k = a[mi]; for (long long j = mi - 1; j >= i; j--) a[j + 1] = a[j]; a[i] = k; if (mi != i) t[++tot].x = i, t[tot].y = mi, t[tot].z = mi - i; } printf("%lld\n", tot); for (long long i = 1; i <= tot; i++) printf("%lld %lld %lld\n", t[i].x, t[i].y, t[i].z); } return 0; }
15	 #include <bits/stdc++.h> using namespace std; int n, m, k; vector<vector<bool>> used; vector<vector<char>> a; void f(int i, int j) { if (a[i][j] == '.') { return; } int left = 0; int right = 0; while (i - right >= 0 && j + right < m && a[i - right][j + right] == '*') { right += 1; } while (j - left >= 0 && i - left >= 0 && a[i - left][j - left] == '*') { left += 1; } if (right - 1 >= k && left - 1 >= k) { int mi = min(right, left); for (int t = 0; t < mi; t++) { used[i - t][j + t] = true; used[i - t][j - t] = true; } } } void solution() { cin >> n >> m >> k; a.assign(n, vector<char>(m)); for (auto &line : a) { for (char &x : line) { cin >> x; } } used.assign(n, vector<bool>(m, false)); for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) { f(i, j); } } bool ok = true; for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if (a[i][j] == '*' && !used[i][j]) { ok = false; } } } cout << (ok ? "YES" : "NO") << endl; } int32_t main() { cin.tie(nullptr); ios_base::sync_with_stdio(false); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solution(); } return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m, k; vector<vector<bool>> used; vector<vector<char>> a; void f(int i, int j) { if (a[i][j] == '.') { return; } int left = 0; int right = 0; while (i - right >= 0 && j + right < m && a[i - right][j + right] == '*') { right += 1; } while (j - left >= 0 && i - left >= 0 && a[i - left][j - left] == '*') { left += 1; } if (right - 1 >= k && left - 1 >= k) { int mi = min(right, left); for (int t = 0; t < mi; t++) { used[i - t][j + t] = true; used[i - t][j - t] = true; } } } void solution() { cin >> n >> m >> k; a.assign(n, vector<char>(m)); for (auto &line : a) { for (char &x : line) { cin >> x; } } used.assign(n, vector<bool>(m, false)); for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) { f(i, j); } } bool ok = true; for (int i = 0; i < n; i++) { for (int j = 0; j < m; j++) { if (a[i][j] == '*' && !used[i][j]) { ok = false; } } } cout << (ok ? "YES" : "NO") << endl; } int32_t main() { cin.tie(nullptr); ios_base::sync_with_stdio(false); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solution(); } return 0; }
16	 #include <bits/stdc++.h> using namespace std; void print(vector<pair<int, int>> a) { for (auto x : a) { cout << x.first << " "; } cout << "\n"; } void solve() { int n; cin >> n; vector<pair<int, int>> aa(n); set<pair<int, int>> sp; for (int i = 0; i < n; i++) { cin >> aa[i].first; aa[i].second = i; if (aa[i].first > 0) sp.insert(aa[i]); } vector<pair<int, int>> ans; while (sp.size() > 1) { pair<int, int> a = *sp.begin(); pair<int, int> b = *sp.rbegin(); sp.erase(a); sp.erase(b); ans.push_back({a.second, b.second}); a.first--; b.first--; if (a.first > 0) sp.insert(a); if (b.first > 0) ; sp.insert(b); } cout << ans.size() << "\n"; for (int i = 0; i < ans.size(); i++) { cout << ans[i].first + 1 << " " << ans[i].second + 1 << "\n"; } } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void print(vector<pair<int, int>> a) { for (auto x : a) { cout << x.first << " "; } cout << "\n"; } void solve() { int n; cin >> n; vector<pair<int, int>> aa(n); set<pair<int, int>> sp; for (int i = 0; i < n; i++) { cin >> aa[i].first; aa[i].second = i; if (aa[i].first > 0) sp.insert(aa[i]); } vector<pair<int, int>> ans; while (sp.size() > 1) { pair<int, int> a = *sp.begin(); pair<int, int> b = *sp.rbegin(); sp.erase(a); sp.erase(b); ans.push_back({a.second, b.second}); a.first--; b.first--; if (a.first > 0) sp.insert(a); if (b.first > 0) sp.insert(b); } cout << ans.size() << "\n"; for (int i = 0; i < ans.size(); i++) { cout << ans[i].first + 1 << " " << ans[i].second + 1 << "\n"; } } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }
16	 #include <bits/stdc++.h> using namespace std; const int Nmax = 1e5 + 5; const int Mod = 666013; const int oo = 1e9 + 1; int T; int main() { cin >> T; while (T--) { int n; vector<pair<int, int> > v; cin >> n; int sum = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; sum += x; v.push_back({x, i}); } sort(v.begin(), v.end()); int mx = (*v.rbegin()).first; sum -= mx; if (mx >= sum) { cout << sum << "\n"; for (auto e : v) while (sum > 0 && e.first > 0) sum--, e.first--, cout << e.second << " " << (*v.rbegin()).second << "\n"; } else { int k = 0; pair<int, int> sol[Nmax]; for (int i = 0; i < v.size(); i++) if (v[i].first > 0) { while (sum - 2 >= mx && v[i].first > 0) { k++; sol[k] = {v[i].second, v[i + 1].second}; sum -= 2; v[i].first--; v[i + 1].first--; } } for (auto e : v) while ((sum > 0 || mx > 0) && e.first > 0) mx--, sum--, e.first--, k++, sol[k] = {e.second, (*v.rbegin()).second}; cout << k << "\n"; for (int i = 1; i <= k; i++) cout << sol[i].first << " " << sol[i].second << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int Nmax = 2e5 + 5; const int Mod = 666013; const int oo = 1e9 + 1; int T; int main() { cin >> T; while (T--) { int n; vector<pair<int, int> > v; cin >> n; int sum = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; sum += x; v.push_back({x, i}); } sort(v.begin(), v.end()); int mx = (*v.rbegin()).first; sum -= mx; if (mx >= sum) { cout << sum << "\n"; for (auto e : v) while (sum > 0 && e.first > 0) sum--, e.first--, cout << e.second << " " << (*v.rbegin()).second << "\n"; } else { int k = 0; pair<int, int> sol[Nmax]; for (int i = 0; i < v.size(); i++) if (v[i].first > 0) { while (sum - 2 >= mx && v[i].first > 0) { k++; sol[k] = {v[i].second, v[i + 1].second}; sum -= 2; v[i].first--; v[i + 1].first--; } } for (auto e : v) while ((sum > 0 && mx > 0) && e.first > 0) mx--, sum--, e.first--, k++, sol[k] = {e.second, (*v.rbegin()).second}; cout << k << "\n"; for (int i = 1; i <= k; i++) cout << sol[i].first << " " << sol[i].second << "\n"; } } return 0; }
16	 #include <bits/stdc++.h> const int maxn = 2e5 + 9; using namespace std; pair<int, int> rr; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); priority_queue<pair<int, int>> ss; for (int i = 0; i < n; i++) { scanf("%d", &rr.first); rr.second = i; ss.push(rr); } queue<pair<int, int>> qq; while (!ss.empty()) { pair<int, int> r1 = ss.top(); ss.pop(); pair<int, int> r2; if (!ss.empty()) { r2 = ss.top(); ss.pop(); } else { break; } while (r1.first > 0 && r2.first > 0) { r1.first--; r2.first--; qq.push({r1.second, r2.second}); } if (r1.first > 0) { ss.push(r1); } if (r2.first > 0) { ss.push(r2); } } printf("%d\n", qq.size()); while (!qq.empty()) { pair<int, int> rr = qq.front(); qq.pop(); printf("%d %d\n", rr.first + 1, rr.second + 1); } } }	 #include <bits/stdc++.h> const int maxn = 2e5 + 9; using namespace std; pair<int, int> rr; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); priority_queue<pair<int, int>> ss; for (int i = 0; i < n; i++) { scanf("%d", &rr.first); rr.second = i; ss.push(rr); } queue<pair<int, int>> qq; while (!ss.empty()) { pair<int, int> r1 = ss.top(); ss.pop(); pair<int, int> r2; if (!ss.empty()) { r2 = ss.top(); ss.pop(); } else { break; } if (r1.first > 0 && r2.first > 0) { r1.first--; r2.first--; qq.push({r1.second, r2.second}); } if (r1.first > 0) { ss.push(r1); } if (r2.first > 0) { ss.push(r2); } } printf("%d\n", qq.size()); while (!qq.empty()) { pair<int, int> rr = qq.front(); qq.pop(); printf("%d %d\n", rr.first + 1, rr.second + 1); } } }
16	 #include <bits/stdc++.h> using namespace std; const int Nmax = 1e5 + 5; const int Mod = 666013; const int oo = 1e9 + 1; int T; int main() { cin >> T; while (T--) { int n; vector<pair<int, int> > v; cin >> n; int sum = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; sum += x; v.push_back({x, i}); } sort(v.begin(), v.end()); int mx = (*v.rbegin()).first; sum -= mx; if (mx >= sum) { cout << sum << "\n"; for (auto e : v) while (sum > 0 && e.first > 0) sum--, e.first--, cout << e.second << " " << (*v.rbegin()).second << "\n"; } else { int k = 0; pair<int, int> sol[Nmax]; for (int i = 0; i < v.size(); i++) if (v[i].first > 0) { while (sum - 2 >= mx && v[i].first > 0) { k++; sol[k] = {v[i].second, v[i + 1].second}; sum -= 2; v[i].first--; v[i + 1].first--; } } for (auto e : v) while ((sum > 0 || mx > 0) && e.first > 0) mx--, sum--, e.first--, k++, sol[k] = {e.second, (*v.rbegin()).second}; cout << k << "\n"; for (int i = 1; i <= k; i++) cout << sol[i].first << " " << sol[i].second << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int Nmax = 1e5 + 5; const int Mod = 666013; const int oo = 1e9 + 1; int T; int main() { cin >> T; while (T--) { int n; vector<pair<int, int> > v; cin >> n; int sum = 0; for (int i = 1; i <= n; i++) { int x; cin >> x; sum += x; v.push_back({x, i}); } sort(v.begin(), v.end()); int mx = (*v.rbegin()).first; sum -= mx; if (mx >= sum) { cout << sum << "\n"; for (auto e : v) while (sum > 0 && e.first > 0) sum--, e.first--, cout << e.second << " " << (*v.rbegin()).second << "\n"; } else { int k = 0; pair<int, int> sol[Nmax]; for (int i = 0; i < v.size(); i++) if (v[i].first > 0) { while (sum - 2 >= mx && v[i].first > 0) { k++; sol[k] = {v[i].second, v[i + 1].second}; sum -= 2; v[i].first--; v[i + 1].first--; } } for (auto e : v) while ((sum > 0 && mx > 0) && e.first > 0) mx--, sum--, e.first--, k++, sol[k] = {e.second, (*v.rbegin()).second}; cout << k << "\n"; for (int i = 1; i <= k; i++) cout << sol[i].first << " " << sol[i].second << "\n"; } } return 0; }
17	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; long long a[N], tr[N], n; int lowbit(int x) { return x & -x; } int sum(int x) { long long res = 0; for (int i = x; i; i -= lowbit(i)) res += tr[i]; return res; } void add(int x, int c) { for (int i = x; i <= n; i += lowbit(i)) tr[i] += c; } void solve() { cin >> n; vector<int> q; for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); q.push_back(a[i]); } sort(q.begin(), q.end()); q.erase(unique(q.begin(), q.end()), q.end()); for (int i = 1; i <= n; i++) a[i] = lower_bound(q.begin(), q.end(), a[i]) - q.begin() + 1; for (int i = 1; i <= n; i++) tr[i] = 0; int res = 0; for (int i = 1; i <= n; i++) { int head = sum(a[i] - 1), tail = sum(n) - sum(a[i]); if (head <= tail) { res += head; add(a[i], 1); } else { res += tail; add(a[i], 1); } } cout << res << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; long long a[N], tr[N], n; int lowbit(int x) { return x & -x; } int sum(int x) { long long res = 0; for (int i = x; i; i -= lowbit(i)) res += tr[i]; return res; } void add(int x, int c) { for (int i = x; i <= n; i += lowbit(i)) tr[i] += c; } void solve() { cin >> n; vector<int> q; for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); q.push_back(a[i]); } sort(q.begin(), q.end()); q.erase(unique(q.begin(), q.end()), q.end()); for (int i = 1; i <= n; i++) a[i] = lower_bound(q.begin(), q.end(), a[i]) - q.begin() + 1; for (int i = 1; i <= n; i++) tr[i] = 0; long long res = 0; for (int i = 1; i <= n; i++) { int head = sum(a[i] - 1), tail = sum(n) - sum(a[i]); if (head <= tail) { res += head; add(a[i], 1); } else { res += tail; add(a[i], 1); } } cout << res << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }
17	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10, M = 1e5 + 29; int a[N], b[N]; int c[N]; int n; int cnt; void add(int x) { while (x <= cnt) { c[x] += 1; x += x & -x; } } int get(int x) { int ans = 0; while (x) { ans += c[x]; x -= x & -x; } return ans; } void solve() { cin >> n; for (int i = 1; i <= n; i++) { c[i] = 0; scanf("%d", &a[i]); b[i] = a[i]; } sort(b + 1, b + 1 + n); cnt = unique(b + 1, b + 1 + n) - b - 1; long long ans = 0; for (int i = 1; i <= n; i++) { int p = lower_bound(b + 1, b + 1 + n, a[i]) - b; int x = get(p - 1); int y = get(n) - get(p); ans += min(x, y); add(p); } cout << ans << endl; } int main() { int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10, M = 1e5 + 29; int a[N], b[N]; int c[N]; int n; int cnt; void add(int x) { while (x <= n) { c[x] += 1; x += x & -x; } } int get(int x) { int ans = 0; while (x) { ans += c[x]; x -= x & -x; } return ans; } void solve() { cin >> n; for (int i = 1; i <= n; i++) { c[i] = 0; scanf("%d", &a[i]); b[i] = a[i]; } sort(b + 1, b + 1 + n); cnt = unique(b + 1, b + 1 + n) - b - 1; long long ans = 0; for (int i = 1; i <= n; i++) { int p = lower_bound(b + 1, b + 1 + n, a[i]) - b; int x = get(p - 1); int y = get(n) - get(p); ans += min(x, y); add(p); } cout << ans << endl; } int main() { int t; cin >> t; while (t--) { solve(); } }
17	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10, M = 1e5 + 29; int a[N], b[N]; int c[N]; int n; int cnt; void add(int x) { while (x <= cnt) { c[x] += 1; x += x & -x; } } int get(int x) { int ans = 0; while (x) { ans += c[x]; x -= x & -x; } return ans; } void solve() { cin >> n; for (int i = 1; i <= n; i++) { c[i] = 0; scanf("%d", &a[i]); b[i] = a[i]; } sort(b + 1, b + 1 + n); cnt = unique(b + 1, b + 1 + n) - b - 1; long long ans = 0; for (int i = 1; i <= n; i++) { int p = lower_bound(b + 1, b + 1 + n, a[i]) - b; int x = get(p - 1); int y = get(cnt) - get(p); ans += min(x, y); add(p); } cout << ans << endl; } int main() { int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10, M = 1e5 + 29; int a[N], b[N]; int c[N]; int n; int cnt; void add(int x) { while (x <= n) { c[x] += 1; x += x & -x; } } int get(int x) { int ans = 0; while (x) { ans += c[x]; x -= x & -x; } return ans; } void solve() { cin >> n; for (int i = 1; i <= n; i++) { c[i] = 0; scanf("%d", &a[i]); b[i] = a[i]; } sort(b + 1, b + 1 + n); cnt = unique(b + 1, b + 1 + n) - b - 1; long long ans = 0; for (int i = 1; i <= n; i++) { int p = lower_bound(b + 1, b + 1 + n, a[i]) - b; int x = get(p - 1); int y = get(n) - get(p); ans += min(x, y); add(p); } cout << ans << endl; } int main() { int t; cin >> t; while (t--) { solve(); } }
17	 #include <bits/stdc++.h> using namespace std; template <typename T> inline T gcd(T a, T b) { return b ? gcd(b, a % b) : a; } template <typename T> inline T lowbit(T x) { return x & -x; } const long long N = 2e5 + 10; long long n; vector<long long> vec; long long tr[N]; long long a[N]; void modify(long long x) { for (long long i = x; i <= n; i += lowbit(i)) tr[i]++; } long long query(long long x) { long long res = 0; for (long long i = x; i >= 1; i -= lowbit(i)) res += tr[i]; return res; } void init() { for (long long i = 1; i <= n; ++i) tr[i] = 0; } void solve() { cin >> n; vec.clear(); init(); for (long long i = 1; i <= n; ++i) { long long x; scanf("%d", &x); a[i] = x; vec.push_back(x); } sort(vec.begin(), vec.end()); vec.erase(unique(vec.begin(), vec.end()), vec.end()); long long res = 0; for (long long i = 1; i <= n; ++i) { long long p = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin() + 1; long long x = query(p - 1); long long y = query(n) - query(p); res += min(x, y); modify(p); } cout << res << endl; } signed main() { long long _; cin >> _; while (_--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> inline T gcd(T a, T b) { return b ? gcd(b, a % b) : a; } template <typename T> inline T lowbit(T x) { return x & -x; } const long long N = 2e5 + 10; long long n; vector<long long> vec; long long tr[N]; long long a[N]; void modify(long long x) { for (long long i = x; i <= n; i += lowbit(i)) tr[i]++; } long long query(long long x) { long long res = 0; for (long long i = x; i >= 1; i -= lowbit(i)) res += tr[i]; return res; } void init() { for (long long i = 1; i <= n; ++i) tr[i] = 0; } void solve() { cin >> n; vec.clear(); init(); for (long long i = 1; i <= n; ++i) { long long x; scanf("%lld", &x); a[i] = x; vec.push_back(x); } sort(vec.begin(), vec.end()); vec.erase(unique(vec.begin(), vec.end()), vec.end()); long long res = 0; for (long long i = 1; i <= n; ++i) { long long p = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin() + 1ll; long long x = query(p - 1); long long y = query(n) - query(p); res += min(x, y); modify(p); } cout << res << endl; } signed main() { long long _; cin >> _; while (_--) solve(); return 0; }
17	 #include <bits/stdc++.h> using namespace std; template <typename T> istream& operator>>(istream& is, vector<T>& v) { for (auto& i : v) is >> i; return is; } const long long INF = 1e18; const long long MOD = 1e9 + 7; const int inf = 1e9; const int N = 2e5 + 10; bool flag; struct ftree { vector<int> a; ftree(int n) { a.resize(n + 1); } long long qu(int n) { long long res = 0; for (int i = n; i >= 0; i = (i + 1 & i) - 1) res += a[i]; return res; } long long qu(int l, int r) { return qu(r) - qu(l - 1); } void set(int x) { for (; x < (int)a.size(); x |= x + 1) a[x]++; } }; void solve() { int n; cin >> n; vector<int> a(n), rv; cin >> a; rv = a; map<int, int> mp; ftree ftr(n); sort(rv.begin(), rv.end()); rv.erase(unique(rv.begin(), rv.end()), rv.end()); for (int i = 0; i < n; i++) a[i] = lower_bound(rv.begin(), rv.end(), a[i]) - rv.begin(); int ans = 0; for (auto now : a) { int l = ftr.qu(0, now - 1), r = ftr.qu(now + 1, (int)rv.size()); ans += min(l, r); ftr.set(now); } cout << ans; } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cout << fixed << setprecision(12); int tt = 1; cin >> tt; while (tt--) { flag = 0; solve(); cout << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> istream& operator>>(istream& is, vector<T>& v) { for (auto& i : v) is >> i; return is; } const long long INF = 1e18; const long long MOD = 1e9 + 7; const int inf = 1e9; const int N = 2e5 + 10; bool flag; struct ftree { vector<int> a; ftree(int n) { a.resize(n + 1); } long long qu(int n) { long long res = 0; for (int i = n; i >= 0; i = (i + 1 & i) - 1) res += a[i]; return res; } long long qu(int l, int r) { return qu(r) - qu(l - 1); } void set(int x) { for (; x < (int)a.size(); x |= x + 1) a[x]++; } }; void solve() { int n; cin >> n; vector<int> a(n), rv; cin >> a; rv = a; map<int, int> mp; ftree ftr(n); sort(rv.begin(), rv.end()); rv.erase(unique(rv.begin(), rv.end()), rv.end()); for (int i = 0; i < n; i++) a[i] = lower_bound(rv.begin(), rv.end(), a[i]) - rv.begin(); long long ans = 0; for (auto now : a) { int l = ftr.qu(0, now - 1), r = ftr.qu(now + 1, (int)rv.size()); ans += min(l, r); ftr.set(now); } cout << ans; } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cout << fixed << setprecision(12); int tt = 1; cin >> tt; while (tt--) { flag = 0; solve(); cout << '\n'; } return 0; }
17	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 10; int tree[maxn], a[maxn], b[maxn], cnt; map<int, int> mp; map<int, int> cnt1; int n; int lowbit(int x) { return x & (-x); } void update(int x) { for (; x <= n; x += lowbit(x)) tree[x]++; } int query(int x) { int ans = 0; for (; x > 0; x -= lowbit(x)) ans += tree[x]; return ans; } void init() { for (int i = 0; i <= n; i++) tree[i] = 0; mp.clear(); cnt1.clear(); cnt = 0; } int main() { int t; scanf("%d", &t); while (t--) { scanf("%d", &n); init(); for (int i = 1; i <= n; i++) scanf("%d", &a[i]), b[i] = a[i]; long long ans = 0; sort(b + 1, b + 1 + n); for (int i = 1; i <= n; i++) if (!mp[b[i]]) mp[b[i]] = ++cnt; for (int i = 1; i <= n; i++) { int j = mp[a[i]]; update(j); cnt1[j]++; int pre = query(j); ans += min(i - pre, pre - tree[j]); } printf("%lld\n", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 10; int tree[maxn], a[maxn], b[maxn], cnt; map<int, int> mp; map<int, int> cnt1; int n; int lowbit(int x) { return x & (-x); } void update(int x) { for (; x <= n; x += lowbit(x)) tree[x]++; } int query(int x) { int ans = 0; for (; x > 0; x -= lowbit(x)) ans += tree[x]; return ans; } void init() { for (int i = 0; i <= n; i++) tree[i] = 0; mp.clear(); cnt1.clear(); cnt = 0; } int main() { int t; scanf("%d", &t); while (t--) { scanf("%d", &n); init(); for (int i = 1; i <= n; i++) scanf("%d", &a[i]), b[i] = a[i]; long long ans = 0; sort(b + 1, b + 1 + n); for (int i = 1; i <= n; i++) if (!mp[b[i]]) mp[b[i]] = ++cnt; for (int i = 1; i <= n; i++) { int j = mp[a[i]]; update(j); cnt1[j]++; int pre = query(j); ans += min(i - pre, pre - cnt1[j]); } printf("%lld\n", ans); } return 0; }
17	 #include <bits/stdc++.h> using namespace std; int st_size; vector<int> st; void modi(int p, int v) { for (st[p += st_size / 2] += v; p > 1; p >>= 1) st[p >> 1] = st[p] + st[p ^ 1]; } int sum(int l, int r) { int res = 0; for (l += st_size / 2, r += st_size / 2; l < r; l >>= 1, r >>= 1) { if (l & 1) res += st[l++]; if (r & 1) res += st[--r]; } return res; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n); for (auto &e : a) cin >> e; vector<int> b(n); for (int i = 0; i < n; i++) b[i] = a[i]; sort(b.begin(), b.end()); b.erase(unique(b.begin(), b.end()), b.end()); for (int i = 0; i < n; i++) a[i] = (int)(lower_bound(b.begin(), b.end(), a[i]) - b.begin()); int ts = 0; for (; (1 << ts) < n; ts++) ; ts++; st.clear(); st_size = 1 << ts; st.resize(st_size); int ans = 0; for (int i = 0; i < n; i++) { ans += min(sum(0, a[i]), sum(a[i] + 1, n)); modi(a[i], 1); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int st_size; vector<int> st; void modi(int p, int v) { for (st[p += st_size / 2] += v; p > 1; p >>= 1) st[p >> 1] = st[p] + st[p ^ 1]; } int sum(int l, int r) { int res = 0; for (l += st_size / 2, r += st_size / 2; l < r; l >>= 1, r >>= 1) { if (l & 1) res += st[l++]; if (r & 1) res += st[--r]; } return res; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n); for (auto &e : a) cin >> e; vector<int> b(n); for (int i = 0; i < n; i++) b[i] = a[i]; sort(b.begin(), b.end()); b.erase(unique(b.begin(), b.end()), b.end()); for (int i = 0; i < n; i++) a[i] = (int)(lower_bound(b.begin(), b.end(), a[i]) - b.begin()); int ts = 0; for (; (1 << ts) < n; ts++) ; ts++; st.clear(); st_size = 1 << ts; st.resize(st_size); long long ans = 0; for (int i = 0; i < n; i++) { ans += min(sum(0, a[i]), sum(a[i] + 1, n)); modi(a[i], 1); } cout << ans << endl; } }
18	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; const int INF = 10000000; void work() { int n, d; cin >> n >> d; vector<int> a(n, 0); vector<int> st(n, false); for (int i = 1; i <= n; i++) cin >> a[i - 1]; int res = 0; for (int i = 0; i < n; i++) { if (!st[i]) { st[i] = true; int v = i; vector<int> ans; ans.push_back(v); while (1) { int w = (v + d) % n; if (st[w]) break; st[w] = true; ans.push_back(w); v = w; } int cnt = ans.size(); vector<int> p; for (int j = 0; j < cnt; j++) { if (a[ans[j]] == 0) p.push_back(j); } int cnt2 = p.size(); if (p.empty()) { res = INF; } else { for (int j = 0; j < cnt2 - 1; j++) { res = max(res, p[i + 1] - p[i] - 1); } res = max(res, p[0] - p[cnt2 - 1] + cnt - 1); } } } if (res == INF) { cout << "-1\n"; } else cout << res << "\n"; } int main() { int T; scanf("%d", &T); for (int ca = 1; ca <= T; ++ca) { work(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 10; const int INF = 10000000; void work() { int n, d; cin >> n >> d; vector<int> a(n, 0); vector<int> st(n, false); for (int i = 1; i <= n; i++) cin >> a[i - 1]; int res = 0; for (int i = 0; i < n; i++) { if (!st[i]) { st[i] = true; int v = i; vector<int> ans; ans.push_back(v); while (1) { int w = (v + d) % n; if (st[w]) break; st[w] = true; ans.push_back(w); v = w; } int cnt = ans.size(); vector<int> p; for (int j = 0; j < cnt; j++) { if (a[ans[j]] == 0) p.push_back(j); } int cnt2 = p.size(); if (p.empty()) { res = INF; } else { for (int j = 0; j < cnt2 - 1; j++) { res = max(res, p[j + 1] - p[j] - 1); } res = max(res, p[0] - p[cnt2 - 1] + cnt - 1); } } } if (res == INF) { cout << "-1\n"; } else cout << res << "\n"; } int main() { int T; scanf("%d", &T); for (int ca = 1; ca <= T; ++ca) { work(); } return 0; }
18	 #include <bits/stdc++.h> #pragma GCC target("avx2") #pragma GCC optimization("O3") #pragma GCC optimization("unroll-loops") using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int z, T; cin >> T; for (z = 1; z <= T; z++) { long long int N, M; cin >> N >> M; long long int a, b, c, i, j, k, A[N], dp[N]; queue<long long int> q; bool x[N]; for (i = 0; i < N; i++) { x[i] = true; dp[N] = 1e10; cin >> A[i]; if (A[i] == 0) { x[i] = false; dp[i] = 0; q.push(i); } } while (q.size() != 0) { a = q.front(); x[a] = false; q.pop(); if (a - M >= 0) { if (x[a - M]) { dp[a - M] = dp[a] + 1; x[a - M] = false; q.push(a - M); } } else { b = N - (M - a); if (x[b]) { dp[b] = dp[a] + 1; x[b] = false; q.push(b); } } } a = 0; for (i = 0; i < N; i++) { a = max(a, dp[i]); } if (a >= 1e10) { cout << "-1\n"; } else { cout << a << "\n"; } } return 0; }	 #include <bits/stdc++.h> #pragma GCC target("avx2") #pragma GCC optimization("O3") #pragma GCC optimization("unroll-loops") using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int z, T; cin >> T; for (z = 1; z <= T; z++) { long long int N, M; cin >> N >> M; long long int a, b, c, i, j, k, A[N], dp[N]; queue<long long int> q; bool x[N]; for (i = 0; i < N; i++) { x[i] = true; dp[i] = 1e10; cin >> A[i]; if (A[i] == 0) { x[i] = false; dp[i] = 0; q.push(i); } } while (q.size() != 0) { a = q.front(); x[a] = false; q.pop(); if (a - M >= 0) { if (x[a - M]) { dp[a - M] = dp[a] + 1; x[a - M] = false; q.push(a - M); } } else { b = N - (M - a); if (x[b]) { dp[b] = dp[a] + 1; x[b] = false; q.push(b); } } } a = 0; for (i = 0; i < N; i++) { a = max(a, dp[i]); } if (a >= 1e10) { cout << "-1\n"; } else { cout << a << "\n"; } } return 0; }
18	 #include <bits/stdc++.h> using namespace std; int const N = 1e6 + 5; bitset<N> v, viz; int n, d; int next(int i) { return (i + n - d) % n; } int main() { ios_base::sync_with_stdio(false); cin.tie(0x0); cout.tie(0x0); int t; cin >> t; while (t--) { cin >> n >> d; int ones = 0; for (int i = 0; i < n; ++i) { int x; cin >> x; v[i] = x; if (v[i]) ++ones; viz[i] = 0; } if (!ones) { cout << "0\n"; return 0; } int best = -1; for (int i = 0; i < n; ++i) { if (v[i]) continue; if (!v[next(i)]) continue; int curr = next(i); int cnt = 1; viz[curr] = 1; while (v[next(curr)] && !viz[next(curr)]) { ++cnt; curr = next(curr); viz[curr] = 1; } ones -= cnt; best = max(best, cnt); } if (ones) cout << "-1\n"; else cout << best << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int const N = 1e6 + 5; bitset<N> v, viz; int n, d; int next(int i) { return (i + n - d) % n; } int main() { ios_base::sync_with_stdio(false); cin.tie(0x0); cout.tie(0x0); int t; cin >> t; while (t--) { cin >> n >> d; int ones = 0; for (int i = 0; i < n; ++i) { int x; cin >> x; v[i] = x; if (v[i]) ++ones; viz[i] = 0; } if (!ones) { cout << "0\n"; continue; } int best = -1; for (int i = 0; i < n; ++i) { if (v[i]) continue; if (!v[next(i)]) continue; int curr = next(i); int cnt = 1; viz[curr] = 1; while (v[next(curr)] && !viz[next(curr)]) { ++cnt; curr = next(curr); viz[curr] = 1; } ones -= cnt; best = max(best, cnt); } if (ones) cout << "-1\n"; else cout << best << '\n'; } return 0; }
19	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 10; int T, n; int a[maxn]; bool flag[maxn], tmp[maxn]; bool check(int x) { for (int i = 0; i < a[1]; i++) flag[i] = 1; for (int i = a[1]; i <= x; i++) flag[i] = 1; for (int i = 2; i <= n; i++) { for (int j = 0; j <= x; j++) tmp[j] = flag[j], flag[j] = 0; for (int j = 0; j <= x; j++) { if (tmp[j] && j + a[i] <= x) flag[j + a[i]] = 1; if (tmp[j] && j - a[i] >= 0) flag[j - a[i]] = 1; } } bool ret = 0; for (int i = 0; i <= x; i++) ret |= flag[i]; return ret; } int main() { scanf("%d", &T); while (T--) { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); int L = a[1], R = 3e3; while (L < R) { int mid = (L + R) >> 1; if (check(mid)) R = mid; else L = mid + 1; } printf("%d\n", L); } }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e4 + 10; int T, n; int a[maxn]; bool flag[maxn], tmp[maxn]; bool check(int x) { for (int i = 0; i < a[1]; i++) flag[i] = 0; for (int i = a[1]; i <= x; i++) flag[i] = 1; for (int i = 2; i <= n; i++) { for (int j = 0; j <= x; j++) tmp[j] = flag[j], flag[j] = 0; for (int j = 0; j <= x; j++) { if (tmp[j] && j + a[i] <= x) flag[j + a[i]] = 1; if (tmp[j] && j - a[i] >= 0) flag[j - a[i]] = 1; } } bool ret = 0; for (int i = 0; i <= x; i++) ret |= flag[i]; return ret; } int main() { scanf("%d", &T); while (T--) { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); int L = a[1], R = 3e3; while (L < R) { int mid = (L + R) >> 1; if (check(mid)) R = mid; else L = mid + 1; } printf("%d\n", L); } }
19	 #include <bits/stdc++.h> using namespace std; const int N = 1e4 + 5; const int INF = 1e9; const long long mod = 1e9 + 7; int n, arr[N], dp[N][2005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) { cin >> arr[i]; } for (int i = 0; i <= 2000; i++) dp[0][i] = i; for (int i = 1; i <= n; i++) { for (int j = 0; j <= 2000; j++) { dp[i][j] = INF; } for (int j = 0; j <= 2000; j++) { if (j >= arr[i]) { dp[i][j] = min(dp[i][j], dp[i - 1][j - arr[i]]); } else if (arr[i] + j <= 2000) { dp[i][j] = min(dp[i][j], dp[i - 1][j + arr[i]]); } dp[i][j] = max(dp[i][j], j); } } int ans = INF; for (int i = 0; i <= 2000; i++) { ans = min(ans, dp[n][i]); } cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e4 + 5; const int INF = 1e9; const long long mod = 1e9 + 7; int n, arr[N], dp[N][2005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) { cin >> arr[i]; } for (int i = 0; i <= 2000; i++) dp[0][i] = i; for (int i = 1; i <= n; i++) { for (int j = 0; j <= 2000; j++) { dp[i][j] = INF; } for (int j = 0; j <= 2000; j++) { if (j >= arr[i]) { dp[i][j] = min(dp[i][j], dp[i - 1][j - arr[i]]); } if (arr[i] + j <= 2000) { dp[i][j] = min(dp[i][j], dp[i - 1][j + arr[i]]); } dp[i][j] = max(dp[i][j], j); } } int ans = INF; for (int i = 0; i <= 2000; i++) { ans = min(ans, dp[n][i]); } cout << ans << '\n'; } }
19	 #include <bits/stdc++.h> using namespace std; const int N = 2e4 + 100, INF = 1e9 + 7; int kase, n, a[N], s[2100], t[2100]; bool check(int x) { for (int i = 0; i <= x; i++) s[i] = 1; for (int i = 1; i <= n; i++) { memset(t, 0, sizeof t); for (int j = a[i]; j <= x; j++) t[j - a[i]] = s[j]; for (int j = x - a[i]; j >= 0; j--) t[j + a[i]] = s[j]; for (int j = 0; j <= x; j++) s[j] = t[j]; } for (int i = 0; i <= x; i++) if (s[i]) return true; return false; } int main() { scanf("%d", &kase); while (kase--) { scanf("%d", &n); int max_ = 0; for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); max_ = max(max_, a[i]); } int l = max_, r = max_ * 2; while (l < r) { int m = (l + r) / 2; if (check(m)) r = m; else l = m + 1; } printf("%d\n", l); } }	 #include <bits/stdc++.h> using namespace std; const int N = 2e4 + 100, INF = 1e9 + 7; int kase, n, a[N], s[2100], t[2100]; bool check(int x) { for (int i = 0; i <= x; i++) s[i] = 1; for (int i = 1; i <= n; i++) { memset(t, 0, sizeof t); for (int j = a[i]; j <= x; j++) t[j - a[i]] = s[j]; for (int j = x - a[i]; j >= 0; j--) t[j + a[i]] |= s[j]; for (int j = 0; j <= x; j++) s[j] = t[j]; } for (int i = 0; i <= x; i++) if (s[i]) return true; return false; } int main() { scanf("%d", &kase); while (kase--) { scanf("%d", &n); int max_ = 0; for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); max_ = max(max_, a[i]); } int l = max_, r = max_ * 2; while (l < r) { int m = (l + r) / 2; if (check(m)) r = m; else l = m + 1; } printf("%d\n", l); } }
19	 #include <bits/stdc++.h> using namespace std; const int N = 2010; const int inf = 0x3f3f3f3f; int dp[10010][N], a[N]; int n, t; int main() { cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 0; i <= n; i++) for (int j = 0; j <= 2000; j++) dp[i][j] = inf; dp[0][0] = 1; for (int i = 1; i <= n; i++) for (int k = 0; k <= 2000; k++) { if (dp[i - 1][k] == inf) continue; if (k + a[i] <= 2000) dp[i][k + a[i]] = min(dp[i][k + a[i]], max(dp[i - 1][k], k + a[i])); if (k - a[i] >= 0) dp[i][k - a[i]] = min(dp[i][k - a[i]], dp[i - 1][k]); else dp[i][0] = min(dp[i][0], dp[i - 1][k] + a[i] - k); } int ans = 0x3f3f3f3f; for (int i = 0; i <= 2000; i++) ans = min(ans, dp[n][i]); cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; const int N = 10010; const int inf = 0x3f3f3f3f; int dp[10010][2010], a[N]; int n, t; int main() { cin >> t; while (t--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 0; i <= n; i++) for (int j = 0; j <= 2000; j++) dp[i][j] = inf; dp[0][0] = 1; for (int i = 1; i <= n; i++) for (int k = 0; k <= 2000; k++) { if (dp[i - 1][k] == inf) continue; if (k + a[i] <= 2000) dp[i][k + a[i]] = min(dp[i][k + a[i]], max(dp[i - 1][k], k + a[i])); if (k - a[i] >= 0) dp[i][k - a[i]] = min(dp[i][k - a[i]], dp[i - 1][k]); else dp[i][0] = min(dp[i][0], dp[i - 1][k] + a[i] - k); } int ans = 0x3f3f3f3f; for (int i = 0; i <= 2000; i++) ans = min(ans, dp[n][i]); cout << ans << endl; } }
19	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math") using namespace std; const int INF = 1e9; void solve() { int n; cin >> n; vector<int> a(n); for (int& i : a) cin >> i; const int mx = *max_element(a.begin(), a.end()) << 1; vector<int> dp(mx + 1, INF); dp[0] = 0; for (int i = 0; i < n; ++i) { vector<int> new_dp(mx + 1, INF); for (int j = 0; j <= mx; ++j) { if (dp[j] == INF) continue; new_dp[max(0, j - a[i])] = min(new_dp[max(0, j - a[i])], dp[j] + a[i]); if (j + a[i] <= mx) new_dp[j + a[i]] = min(dp[j + a[i]], max(dp[j] - a[i], 0)); } dp = new_dp; } int ans = INF; for (int i = 0; i <= mx; ++i) ans = min(ans, i + dp[i]); cout << ans << "\n"; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math") using namespace std; const int INF = 1e9; void solve() { int n; cin >> n; vector<int> a(n); for (int& i : a) cin >> i; const int mx = *max_element(a.begin(), a.end()) << 1; vector<int> dp(mx + 1, INF); dp[0] = 0; for (int i = 0; i < n; ++i) { vector<int> new_dp(mx + 1, INF); for (int j = 0; j <= mx; ++j) { if (dp[j] == INF) continue; new_dp[max(0, j - a[i])] = min(new_dp[max(0, j - a[i])], dp[j] + a[i]); if (j + a[i] <= mx) new_dp[j + a[i]] = min(new_dp[j + a[i]], max(dp[j] - a[i], 0)); } dp = new_dp; } int ans = INF; for (int i = 0; i <= mx; ++i) ans = min(ans, i + dp[i]); cout << ans << "\n"; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) solve(); return 0; }
19	 #include <bits/stdc++.h> using namespace std; const int N = 1e4 + 10; const int M = 2000 + 10; const int INF = 0x3f3f3f3f; int n; int a[M]; int f[N][M]; void solve() { scanf("%d", &n); for (int i = 1; i <= n; ++i) { scanf("%d", &a[i]); } for (int i = 1; i <= n; ++i) for (int j = 0; j <= 2000; ++j) f[i][j] = INF; f[1][a[1]] = a[1]; for (int i = 2; i <= n; ++i) { for (int l = 0; l <= 2000; ++l) { if (l <= a[i]) f[i][0] = min(f[i][0], f[i - 1][l] + (a[i] - l)); else f[i][l - a[i]] = min(f[i][l - a[i]], f[i - 1][l]); f[i][l + a[i]] = min(f[i][l + a[i]], max(f[i - 1][l], l + a[i])); } } int ans = INF; for (int j = 0; j <= 2000; ++j) ans = min(ans, f[n][j]); printf("%d\n", ans); } int main() { int T; scanf("%d", &T); while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e4 + 10; const int M = 2000 + 10; const int INF = 0x3f3f3f3f; int n; int a[N]; int f[N][M]; void solve() { scanf("%d", &n); for (int i = 1; i <= n; ++i) { scanf("%d", &a[i]); } for (int i = 1; i <= n; ++i) for (int j = 0; j <= 2000; ++j) f[i][j] = INF; f[1][a[1]] = a[1]; for (int i = 2; i <= n; ++i) { for (int l = 0; l <= 2000; ++l) { if (l <= a[i]) f[i][0] = min(f[i][0], f[i - 1][l] + (a[i] - l)); else f[i][l - a[i]] = min(f[i][l - a[i]], f[i - 1][l]); f[i][l + a[i]] = min(f[i][l + a[i]], max(f[i - 1][l], l + a[i])); } } int ans = INF; for (int j = 0; j <= 2000; ++j) ans = min(ans, f[n][j]); printf("%d\n", ans); } int main() { int T; scanf("%d", &T); while (T--) { solve(); } return 0; }
21	 #include <bits/stdc++.h> using namespace std; const int N = 100; long long f[N + 5][N + 5][N + 5]; long long fac[N + 5], C[N + 5][N + 5]; long long mod; long long dfs(int n, int m, int k) { if (n == 0) return k == 0; if (m == 1) return k == 1 ? fac[n] : 0; if (n == 1) return k == 0; if (2 * k > n + 1) return 0; if (m > n) return k == 0 ? fac[n] : 0; if (f[n][m][k] != -1) return f[n][m][k]; long long ans = 0; for (int i = 0; i < n; i++) for (int j = 0; j <= k; j++) ans = (ans + C[n - 1][i] * dfs(i, m - 1, j) % mod * dfs(n - i - 1, m - 1, k - j) % mod); return f[n][m][k] = ans; } int main() { memset(f, 0xff, sizeof(f)); int n, m, k; scanf("%d%d%d%lld", &n, &m, &k, &mod); for (int i = 0; i <= N; i++) C[i][0] = C[i][i] = 1; for (int i = 1; i <= N; i++) for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; fac[0] = fac[1] = 1; for (int i = 1; i <= N; i++) fac[i] = fac[i - 1] * i % mod; printf("%lld", dfs(n, m, k)); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 100; long long f[N + 5][N + 5][N + 5]; long long fac[N + 5], C[N + 5][N + 5]; long long mod; long long dfs(int n, int m, int k) { if (n == 0) return k == 0; if (m == 1) return k == 1 ? fac[n] : 0; if (n == 1) return k == 0; if (2 * k > n + 1) return 0; if (m > n) return k == 0 ? fac[n] : 0; if (f[n][m][k] != -1) return f[n][m][k]; long long ans = 0; for (int i = 0; i < n; i++) for (int j = 0; j <= k; j++) ans = (ans + C[n - 1][i] * dfs(i, m - 1, j) % mod * dfs(n - i - 1, m - 1, k - j) % mod) % mod; return f[n][m][k] = ans; } int main() { memset(f, 0xff, sizeof(f)); int n, m, k; scanf("%d%d%d%lld", &n, &m, &k, &mod); for (int i = 0; i <= N; i++) C[i][0] = C[i][i] = 1; for (int i = 1; i <= N; i++) for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; fac[0] = fac[1] = 1; for (int i = 1; i <= N; i++) fac[i] = fac[i - 1] * i % mod; printf("%lld", dfs(n, m, k)); return 0; }
21	 #include <bits/stdc++.h> using namespace std; const int N = 103; int n, P; int f[N][N][N], fc[N], C[N][N]; inline int add(const int &a, const int &b) { return a + b >= P ? a + b - P : a + b; } int cl(int i, int j, int k) { if (i == 0) return k == 0; if (j == 0) return k == 1 ? fc[i] : 0; if (i <= j) return k == 0 ? fc[i] : 0; if (j + k > i) return 0; register int &g = f[i][j][k]; if (g != -1) return g; g = 0; for (register int a = 0; a < i; a++) { register int h = 0; for (register int b = max(0, k + a - i + 1); b <= k && b <= a; b++) h = (h + 1ll * cl(i - a - 1, j - 1, k - b) * cl(a, j - 1, b)) % P; g = (g + 1ll * h * C[i - 1][a]) % P; } return g; } int main() { int m, k; scanf("%d%d%d%d", &n, &m, &k, &P); memset(f, -1, sizeof f); fc[0] = 1; for (register int i = 1; i <= n; i++) fc[i] = 1ll * fc[i - 1] * i % P; for (register int i = 0; i <= n; i++) for (register int j = 0; j <= i; j++) { if (j == 0) C[i][j] = 1; else C[i][j] = add(C[i - 1][j], C[i - 1][j - 1]); } printf("%d", cl(n, m + 1, k)); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 103; int n, P; int f[N][N][N], fc[N], C[N][N]; inline int add(const int &a, const int &b) { return a + b >= P ? a + b - P : a + b; } int cl(int i, int j, int k) { if (i == 0) return k == 0; if (j == 0) return k == 1 ? fc[i] : 0; if (i <= j) return k == 0 ? fc[i] : 0; if (j + k > i) return 0; register int &g = f[i][j][k]; if (g != -1) return g; g = 0; for (register int a = 0; a < i; a++) { register int h = 0; for (register int b = max(0, k + a - i + 1); b <= k && b <= a; b++) h = (h + 1ll * cl(i - a - 1, j - 1, k - b) * cl(a, j - 1, b)) % P; g = (g + 1ll * h * C[i - 1][a]) % P; } return g; } int main() { int m, k; scanf("%d%d%d%d", &n, &m, &k, &P); memset(f, -1, sizeof f); fc[0] = 1; for (register int i = 1; i <= n; i++) fc[i] = 1ll * fc[i - 1] * i % P; for (register int i = 0; i <= n; i++) for (register int j = 0; j <= i; j++) { if (j == 0) C[i][j] = 1; else C[i][j] = add(C[i - 1][j], C[i - 1][j - 1]); } printf("%d", cl(n, m - 1, k)); return 0; }
21	 #include <bits/stdc++.h> using namespace std; const long long N = 1e2 + 1e1 + 7; long long n, m, k, P; long long f[N][N][N], C[N][N]; void inc(long long &a, long long b) { a += b; a >= P ? a -= P : 0; } signed main() { scanf("%lld%lld%lld%lld", &n, &m, &k, &P); C[0][0] = 1; for (long long i = 1; i <= n; i++) { C[i][0] = 1; for (long long j = 1; j <= i; j++) C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % P; } for (long long i = 0; i <= n + 1; i++) f[0][0][i] = 1; for (long long d = n - m + 1; d >= 2; d--) for (long long l = 0; l < n; l++) for (long long lj = max(0ll, k + l - n); lj <= min(l, k); lj++) if (f[l][lj][d]) for (long long r = 0; r < n - l; r++) for (long long rj = max(0ll, k + l + r - n - lj); rj <= min(r, k - ((d - 1) == m) - lj); rj++) inc(f[l + r + 1][lj + rj + ((d - 1) == m)][d - 1], C[l + r][l] * f[l][lj][d] % P * f[r][rj][d] % P); printf("%lld\n", f[n][k][1]); }	 #include <bits/stdc++.h> using namespace std; const long long N = 1e2 + 1e1 + 7; long long n, m, k, P; long long f[N][N][N], C[N][N]; void inc(long long &a, long long b) { a += b; a >= P ? a -= P : 0; } signed main() { scanf("%lld%lld%lld%lld", &n, &m, &k, &P); C[0][0] = 1; for (long long i = 1; i <= n; i++) { C[i][0] = 1; for (long long j = 1; j <= i; j++) C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % P; } for (long long i = 0; i <= n + 1; i++) f[0][0][i] = 1; for (long long d = n + 1; d >= 2; d--) for (long long l = 0; l < n; l++) for (long long lj = max(0ll, k + l - n); lj <= min(l, k); lj++) if (f[l][lj][d]) for (long long r = 0; r < n - l; r++) for (long long rj = max(0ll, k + l + r - n - lj); rj <= min(r, k - ((d - 1) == m) - lj); rj++) inc(f[l + r + 1][lj + rj + ((d - 1) == m)][d - 1], C[l + r][l] * f[l][lj][d] % P * f[r][rj][d] % P); printf("%lld\n", f[n][k][1]); }
22	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char ch = getchar(); while (!isdigit(ch)) f ^= ch == '-', ch = getchar(); while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 450; int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7]; inline void work(int t) { int opt = read(), x = read(), r = a[x] + b[x]; if (opt == 1) { lst[x] = t; if (r <= M) for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++; else for (int i = t + a[x]; i <= m; i += r) { s[i]++; if (i + b[x] <= m) s[i + b[x]]--; } } else { int T = lst[x]; if (r <= M) for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--; else for (int i = T + a[x]; i <= m; i += r) { s[i]--; if (i + b[x] <= m) s[i + b[x]]++; if (i <= t && t < i + b[x]) ans--; } } ans += s[t]; int res = ans; for (int i = 1; i <= M; i++) res += sum[i][t % i]; printf("%d\n", res); } int main() { n = read(), m = read(); for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read(); for (int t = 1; t <= m; t++) work(t); return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char ch = getchar(); while (!isdigit(ch)) f ^= ch == '-', ch = getchar(); while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 450; int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7]; inline void work(int t) { int opt = read(), x = read(), r = a[x] + b[x]; if (opt == 1) { lst[x] = t; if (r <= M) for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++; else for (int i = t + a[x]; i <= m; i += r) { s[i]++; if (i + b[x] <= m) s[i + b[x]]--; } } else { int T = lst[x]; if (r <= M) for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--; else for (int i = T + a[x]; i <= m; i += r) { s[i]--; if (i + b[x] <= m) s[i + b[x]]++; if (i < t && t <= i + b[x]) ans--; } } ans += s[t]; int res = ans; for (int i = 1; i <= M; i++) res += sum[i][t % i]; printf("%d\n", res); } int main() { n = read(), m = read(); for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read(); for (int t = 1; t <= m; t++) work(t); return 0; }
22	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char ch = getchar(); while (!isdigit(ch)) f ^= ch == '-', ch = getchar(); while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 450; int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7]; inline void work(int t) { int opt = read(), x = read(), r = a[x] + b[x]; if (opt == 1) { lst[x] = t; if (r <= M) for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++; else for (int i = t + a[x]; i <= m; i += r) { s[i]++; if (i + b[x] <= m) s[i + b[x]]--; } } else { int T = lst[x]; if (r <= M) for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--; else for (int i = T + a[x]; i <= m; i += r) { s[i]--; if (i + b[x] <= m) s[i + b[x]]++; if (i < t && t < i + b[x]) ans--; } } ans += s[t]; int res = ans; for (int i = 1; i <= M; i++) res += sum[i][t % i]; printf("%d\n", res); } int main() { n = read(), m = read(); for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read(); for (int t = 1; t <= m; t++) work(t); return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { int f = 1, r = 0; char ch = getchar(); while (!isdigit(ch)) f ^= ch == '-', ch = getchar(); while (isdigit(ch)) r = (r << 1) + (r << 3) + (ch & 15), ch = getchar(); return f ? r : -r; } const int N = 2e5 + 7, M = 450; int n, m, ans, a[N], b[N], s[N], lst[N], sum[M + 7][M + 7]; inline void work(int t) { int opt = read(), x = read(), r = a[x] + b[x]; if (opt == 1) { lst[x] = t; if (r <= M) for (int i = t + a[x]; i < t + r; i++) sum[r][i % r]++; else for (int i = t + a[x]; i <= m; i += r) { s[i]++; if (i + b[x] <= m) s[i + b[x]]--; } } else { int T = lst[x]; if (r <= M) for (int i = T + a[x]; i < T + r; i++) sum[r][i % r]--; else for (int i = T + a[x]; i <= m; i += r) { s[i]--; if (i + b[x] <= m) s[i + b[x]]++; if (i < t && t <= i + b[x]) ans--; } } ans += s[t]; int res = ans; for (int i = 1; i <= M; i++) res += sum[i][t % i]; printf("%d\n", res); } int main() { n = read(), m = read(); for (int i = 1; i <= n; i++) a[i] = read(), b[i] = read(); for (int t = 1; t <= m; t++) work(t); return 0; }
23	 #include <bits/stdc++.h> using namespace std; const int N = 4010; int n, m, a[N], rt, tot, L[N], siz[N], R[N], ls[N], rs[N]; long long val[N], dp[N][N]; inline void build(int &p, int l, int r) { if (l > r) return; p = ++tot; int pos = l; for (int i = l; i <= r; ++i) if (a[i] < a[pos]) pos = i; val[p] = a[pos]; build(ls[p], l, pos - 1); build(rs[p], pos + 1, r); dp[p][0] = 0; dp[p][1] = m * val[p] - val[p]; siz[p] = 1; for (int i = siz[p]; i >= 0; --i) for (int j = 0; j <= siz[ls[p]]; ++j) dp[p][i + j] = max(dp[p][i + j], dp[p][i] + dp[ls[p]][j] - 2ll * i * j * val[p]); siz[p] += siz[ls[p]]; for (int i = siz[p]; i >= 0; --i) for (int j = 0; j <= siz[rs[p]]; ++j) dp[p][i + j] = max(dp[p][i + j], dp[p][i] + dp[rs[p]][j] - 2ll * i * j * val[p]); siz[p] += siz[rs[p]]; } int main() { memset(dp, -0x3f, sizeof(dp)); scanf("%d%d", &n, &m); for (int i = 1; i <= n; ++i) scanf("%d", &a[i]); build(rt, 1, n); printf("%d\n", dp[1][m]); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 4010; int n, m, a[N], rt, tot, L[N], siz[N], R[N], ls[N], rs[N]; long long val[N], dp[N][N]; inline void build(int &p, int l, int r) { if (l > r) return; p = ++tot; int pos = l; for (int i = l; i <= r; ++i) if (a[i] < a[pos]) pos = i; val[p] = a[pos]; build(ls[p], l, pos - 1); build(rs[p], pos + 1, r); dp[p][0] = 0; dp[p][1] = m * val[p] - val[p]; siz[p] = 1; for (int i = siz[p]; i >= 0; --i) for (int j = 0; j <= siz[ls[p]]; ++j) dp[p][i + j] = max(dp[p][i + j], dp[p][i] + dp[ls[p]][j] - 2ll * i * j * val[p]); siz[p] += siz[ls[p]]; for (int i = siz[p]; i >= 0; --i) for (int j = 0; j <= siz[rs[p]]; ++j) dp[p][i + j] = max(dp[p][i + j], dp[p][i] + dp[rs[p]][j] - 2ll * i * j * val[p]); siz[p] += siz[rs[p]]; } int main() { memset(dp, -0x3f, sizeof(dp)); scanf("%d%d", &n, &m); for (int i = 1; i <= n; ++i) scanf("%d", &a[i]); build(rt, 1, n); printf("%lld\n", dp[1][m]); return 0; }
23	 #include <bits/stdc++.h> using namespace std; const int N = 4e3 + 11; int n, m; long long a[N]; vector<pair<int, long long> > e[N]; void build(int l, int r, int fa) { if (l > r) return; int pos = l; for (int i = l + 1; i <= r; i++) if (a[i] < a[pos]) pos = i; e[fa].push_back(make_pair(pos, a[pos] - a[fa])); build(l, pos - 1, pos); build(pos + 1, r, pos); } int siz[N]; long long f[N][N], g[N]; void dfs(int w, int fa) { siz[w] = 1; for (pair<int, int> v : e[w]) { if (v.first == fa) continue; dfs(v.first, w); for (int i = 0; i <= siz[w] + siz[v.first]; i++) g[i] = 0; for (int i = 0; i <= siz[w]; i++) for (int j = 0; j <= siz[v.first]; j++) { g[i + j] = max(g[i + j], f[w][i] + f[v.first][j] + j * (m - j) * v.second); } siz[w] += siz[v.first]; for (int i = 0; i <= siz[w]; i++) f[w][i] = max(f[w][i], g[i]); } } int main() { ios::sync_with_stdio(false); cin >> n >> m; for (int i = 1; i <= n; i++) cin >> a[i]; build(1, n, 0); dfs(e[0][0].first, 0); cout << f[e[0][0].first][m] << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 4e3 + 11; int n, m; long long a[N]; vector<pair<int, long long> > e[N]; void build(int l, int r, int fa) { if (l > r) return; int pos = l; for (int i = l + 1; i <= r; i++) if (a[i] < a[pos]) pos = i; e[fa].push_back(make_pair(pos, a[pos] - a[fa])); build(l, pos - 1, pos); build(pos + 1, r, pos); } int siz[N]; long long f[N][N], g[N]; void dfs(int w, int fa) { siz[w] = 1; for (pair<int, long long> v : e[w]) { if (v.first == fa) continue; dfs(v.first, w); for (int i = 0; i <= siz[w] + siz[v.first]; i++) g[i] = 0; for (int i = 0; i <= siz[w]; i++) for (int j = 0; j <= siz[v.first]; j++) { g[i + j] = max(g[i + j], f[w][i] + f[v.first][j] + j * (m - j) * v.second); } siz[w] += siz[v.first]; for (int i = 0; i <= siz[w]; i++) f[w][i] = max(f[w][i], g[i]); } } int main() { ios::sync_with_stdio(false); cin >> n >> m; for (int i = 1; i <= n; i++) cin >> a[i]; build(1, n, 0); dfs(e[0][0].first, 0); cout << f[e[0][0].first][m] << endl; return 0; }
23	 #include <bits/stdc++.h> using namespace std; long long n, M; long long a[4000]; void calc(long long l, long long r, vector<long long> &res) { if (r < l) { res.push_back(0); return; } long long m = l; for (long long i = l + 1; i < r; ++i) if (a[i] < a[m]) m = i; vector<long long> res1, res2; calc(l, m - 1, res1); calc(m + 1, r, res2); res.resize(r - l + 2, -1e18); for (long long i = 0; i < (long long)res1.size(); ++i) for (long long j = 0; j < (long long)res2.size(); ++j) { res[i + j] = max(res[i + j], res1[i] + res2[j] - 2 * i * j * a[m]); res[i + j + 1] = max(res[i + j + 1], res1[i] + res2[j] - 2 * i * j * a[m] + (M - 1) * a[m] - 2 * (i + j) * a[m]); } } int32_t main() { cin >> n >> M; for (long long i = 0; i < n; ++i) cin >> a[i]; vector<long long> res; calc(0, n - 1, res); cout << res[M]; }	 #include <bits/stdc++.h> using namespace std; long long n, M; long long a[4000]; void calc(long long l, long long r, vector<long long> &res) { if (r < l) { res.push_back(0); return; } long long m = l; for (long long i = l + 1; i <= r; ++i) if (a[i] < a[m]) m = i; vector<long long> res1, res2; calc(l, m - 1, res1); calc(m + 1, r, res2); res.resize(r - l + 2, -1e18); for (long long i = 0; i < (long long)res1.size(); ++i) for (long long j = 0; j < (long long)res2.size(); ++j) { res[i + j] = max(res[i + j], res1[i] + res2[j] - 2 * i * j * a[m]); res[i + j + 1] = max(res[i + j + 1], res1[i] + res2[j] - 2 * i * j * a[m] + (M - 1) * a[m] - 2 * (i + j) * a[m]); } } int32_t main() { cin >> n >> M; for (long long i = 0; i < n; ++i) cin >> a[i]; vector<long long> res; calc(0, n - 1, res); cout << res[M]; }
26	 #include <bits/stdc++.h> using namespace std; int main() { long long modu = 1000000007; unsigned long long arr[100000]; arr[0] = 1; arr[1] = 1; for (long long i = 2; i < 100000; i++) { long long j = 2 * (i - 1); arr[i] = ((arr[i - 1] % modu) * ((j + 1) * (j + 2) % modu)) % modu; } int t; cin >> t; while (t--) { int n; cin >> n; cout << arr[n] << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long modu = 1000000007; unsigned long long arr[100000]; arr[0] = 1; arr[1] = 1; for (long long i = 2; i <= 100000; i++) { long long j = 2 * (i - 1); arr[i] = ((arr[i - 1] % modu) * ((j + 1) * (j + 2) % modu)) % modu; } int t; cin >> t; while (t--) { int n; cin >> n; cout << arr[n] << endl; } return 0; }
26	 #include <bits/stdc++.h> using namespace std; const long long N = 2e6 + 6; const long long P = 1e9 + 7; long long read() { long long an = 0, ff = 1; char c = getchar(); for (; c < '0' || c > '9'; c = getchar()) if (c == '-') ff = -1; for (; c >= '0' && c <= '9'; c = getchar()) an = (an << 3) + (an << 1) + c - '0'; return an * ff; } long long Add(long long a, long long b) { return a + b >= P ? a + b - P : a + b; } long long Sub(long long a, long long b) { return a - b < 0 ? a - b + P : a - b; } long long Mul(long long a, long long b) { long long res = 1ll * a * b; return res >= P ? res % P : res; } long long Pow(long long a, long long b) { long long res = 1; while (b) { if (b & 1) res = Mul(res, a); a = Mul(a, a); b >>= 1; } return res; } long long Inv(long long a) { return Pow(a, P - 2); } long long f[N]; signed main() { f[1] = f[0] = 1; for (long long i = 1; i <= 2e5; i++) f[i] = f[i - 1] * i % P; long long T = read(); while (T--) { long long x = read(); x *= 2; if (f[x - 1] * x < P) cout << f[x] / 2 << endl; else cout << f[x] * Inv(2) << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 2e6 + 6; const long long P = 1e9 + 7; long long read() { long long an = 0, ff = 1; char c = getchar(); for (; c < '0' || c > '9'; c = getchar()) if (c == '-') ff = -1; for (; c >= '0' && c <= '9'; c = getchar()) an = (an << 3) + (an << 1) + c - '0'; return an * ff; } long long Add(long long a, long long b) { return a + b >= P ? a + b - P : a + b; } long long Sub(long long a, long long b) { return a - b < 0 ? a - b + P : a - b; } long long Mul(long long a, long long b) { long long res = 1ll * a * b; return res >= P ? res % P : res; } long long Pow(long long a, long long b) { long long res = 1; while (b) { if (b & 1) res = Mul(res, a); a = Mul(a, a); b >>= 1; } return res; } long long Inv(long long a) { return Pow(a, P - 2); } long long f[N]; signed main() { f[1] = f[0] = 1; for (long long i = 1; i <= 2e5; i++) f[i] = f[i - 1] * i % P; long long T = read(); while (T--) { long long x = read(); x *= 2; if (f[x - 1] * x < P) cout << f[x] / 2 << endl; else cout << f[x] * Inv(2) % P << endl; } return 0; }
26	 #include <bits/stdc++.h> using namespace std; const int maxn = 3000; const int N = 1e6 + 7, M = N * 2; const int inf = 0x3f3f3f3f; const long long INF = 0xFFFFFFFFFF; const long long mod = 1e9 + 7; inline long long read(); void solve() { long long a; cin >> a; if (a == 1) { cout << 1 << '\n'; return; } if (a == 2) { cout << 12 << '\n'; } long long ans = 1; for (int i = a * 2; i >= 3; i--) { ans = ans * i % mod; } ans %= mod; cout << ans << '\n'; } int main() { int T = 1; T = read(); for (int cas = 1; cas <= T; cas++) { solve(); } return 0; } inline long long read() { char ch_read = getchar(); long long p_read = 1, data_read = 0; while (ch_read < '0' || ch_read > '9') { if (ch_read == '-') p_read = -1; ch_read = getchar(); } while (ch_read >= '0' && ch_read <= '9') { data_read = data_read * 10 + (ch_read ^ 48); ch_read = getchar(); } return p_read * data_read; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 3000; const int N = 1e6 + 7, M = N * 2; const int inf = 0x3f3f3f3f; const long long INF = 0xFFFFFFFFFF; const long long mod = 1e9 + 7; inline long long read(); void solve() { long long a; cin >> a; if (a == 1) { cout << 1 << '\n'; return; } if (a == 2) { cout << 12 << '\n'; return; } long long ans = 1; for (int i = a * 2; i >= 3; i--) { ans = ans * i % mod; } ans %= mod; cout << ans << '\n'; } int main() { int T = 1; T = read(); for (int cas = 1; cas <= T; cas++) { solve(); } return 0; } inline long long read() { char ch_read = getchar(); long long p_read = 1, data_read = 0; while (ch_read < '0' || ch_read > '9') { if (ch_read == '-') p_read = -1; ch_read = getchar(); } while (ch_read >= '0' && ch_read <= '9') { data_read = data_read * 10 + (ch_read ^ 48); ch_read = getchar(); } return p_read * data_read; }
26	 #include <bits/stdc++.h> using namespace std; int main() { long t; cin >> t; for (long x = 0; x < t; x++) { int n; cin >> n; int hold = 2 * n; long long ans = 1; if (hold == 2) cout << "2" << endl; else { for (int y = 3; y <= hold; y++) { ans *= y; ans %= 1000000007; } cout << ans << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long t; cin >> t; for (long x = 0; x < t; x++) { int n; cin >> n; int hold = 2 * n; long long ans = 1; if (hold == 2) cout << "1" << endl; else { for (int y = 3; y <= hold; y++) { ans *= y; ans %= 1000000007; } cout << ans << endl; } } return 0; }
26	 #include <bits/stdc++.h> using namespace std; long long ceildef(long long a, long long b) { return (long long)ceil(double(a) / (double)b); } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { long long n, m, i, j, a, b, ans = 1; cin >> n; if (n == 1) cout << "1\n"; else { for (i = 3; i <= 2 * n; i++) { ans = (ans * i) % 1000000007; } } cout << ans << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long ceildef(long long a, long long b) { return (long long)ceil(double(a) / (double)b); } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; int t; cin >> t; while (t--) { long long n, m, i, j, a, b, ans = 1; cin >> n; if (n == 1) cout << "1\n"; else { for (i = 3; i <= 2 * n; i++) { ans = (ans * i) % 1000000007; } cout << ans << "\n"; } } return 0; }
27	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, k; cin >> n >> m >> k; if (k < 2) cout << "NO\n"; else if (n == 1 && m == 0) cout << "YES\n"; else if (m < n - 1 || m > (n * (n - 1)) / 2) cout << "NO\n"; else { int d; if (m == (n * (n - 1)) / 2) d = 1; else d = 2; if (d < k - 1) cout << "YES\n"; else cout << "NO\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long n, m, k; cin >> n >> m >> k; if (k < 2) cout << "NO\n"; else if (n == 1 && m == 0) cout << "YES\n"; else if (m < n - 1 || m > (n * (n - 1)) / 2) cout << "NO\n"; else { int d; if (m == (n * (n - 1)) / 2) d = 1; else d = 2; if (d < k - 1) cout << "YES\n"; else cout << "NO\n"; } } return 0; }
27	 #include <bits/stdc++.h> using namespace std; long long A[200005]; long long mod = 1e9 + 7; long long inv2 = 5e8 + 4; void init() { A[0] = 1; for (long long i = 1; i <= 200000; i++) { A[i] = (A[i - 1] * i) % mod; } } signed main() { long long t; scanf("%lld", &t); long long n, m, k; while (t--) { scanf("%lld%lld%lld", &n, &m, &k); if (m > n * (n - 1) / 2) { cout << "No\n"; continue; } if (k == 0) { cout << "No\n"; continue; } if (n == 1) { cout << "Yes\n"; continue; } if (m < n - 1 || k <= 2) { cout << "No\n"; continue; } if (k > 3) { cout << "Yes\n"; continue; } if (m == n * (n - 1) / 2) { cout << "Yes\n"; } else cout << "No\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long A[200005]; long long mod = 1e9 + 7; long long inv2 = 5e8 + 4; void init() { A[0] = 1; for (long long i = 1; i <= 200000; i++) { A[i] = (A[i - 1] * i) % mod; } } signed main() { long long t; scanf("%lld", &t); long long n, m, k; while (t--) { scanf("%lld%lld%lld", &n, &m, &k); if (m > n * (n - 1) / 2) { cout << "No\n"; continue; } if (k <= 1) { cout << "No\n"; continue; } if (n == 1) { cout << "Yes\n"; continue; } if (m < n - 1 || k <= 2) { cout << "No\n"; continue; } if (k > 3) { cout << "Yes\n"; continue; } if (m == n * (n - 1) / 2) { cout << "Yes\n"; } else cout << "No\n"; } return 0; }
27	 #include <bits/stdc++.h> const int mod = 1e9 + 7; using namespace std; const int N = 2e5 + 9; int main() { int T; cin >> T; while (T--) { long long n, m, k; cin >> n >> m >> k; if (n == 1 && m == 0 && k >= 2) puts("YES"); else if (m < n - 1) puts("NO"); else if (n * (n - 1) / 2 < m) puts("NO"); else if (m >= n - 1 && n * (n - 1) / 2 > m) { if (k - 1 > 2) puts("NO"); else puts("NO"); } else if (m >= n - 1 && n * (n - 1) / 2 == m) { if (k - 1 > 1) puts("YES"); else puts("NO"); } } }	 #include <bits/stdc++.h> const int mod = 1e9 + 7; using namespace std; const int N = 2e5 + 9; int main() { int T; cin >> T; while (T--) { long long n, m, k; cin >> n >> m >> k; if (n == 1 && m == 0 && k >= 2) puts("YES"); else if (m < n - 1) puts("NO"); else if (n * (n - 1) / 2 < m) puts("NO"); else if (m >= n - 1 && n * (n - 1) / 2 > m) { if (k - 1 > 2) puts("YES"); else puts("NO"); } else if (m >= n - 1 && n * (n - 1) / 2 == m) { if (k - 1 > 1) puts("YES"); else puts("NO"); } } }
27	 #include <bits/stdc++.h> using namespace std; long long a[100005]; signed main() { for (long long i = 1; i <= 100002; i++) { a[i] = a[i - 1] + i; } long long t; scanf("%lld", &t); long long n, m, k; while (t--) { scanf("%lld %lld %lld", &n, &m, &k); if (n == 1) { if (k >= 2 && m <= a[n - 1]) printf("YES\n"); else printf("NO\n"); } else if (k <= 2) { printf("NO\n"); } else if (k == 3) { if (n > 100000 || m < a[n - 1] || m > a[n - 1]) printf("NO\n"); else printf("YES\n"); } else { if (m >= (n - 1) && (n > 100000 || m < a[n - 1])) printf("YES\n"); else printf("NO\n"); } } return 0; }	 #include <bits/stdc++.h> using namespace std; long long a[100005]; signed main() { for (long long i = 1; i <= 100002; i++) { a[i] = a[i - 1] + i; } long long t; scanf("%lld", &t); long long n, m, k; while (t--) { scanf("%lld %lld %lld", &n, &m, &k); if (n == 1) { if (k >= 2 && m <= a[n - 1]) printf("YES\n"); else printf("NO\n"); } else if (k <= 2) { printf("NO\n"); } else if (k == 3) { if (n > 100000 || m < a[n - 1] || m > a[n - 1]) printf("NO\n"); else printf("YES\n"); } else { if (m >= (n - 1) && (n > 100000 || m <= a[n - 1])) printf("YES\n"); else printf("NO\n"); } } return 0; }
27	 #include <bits/stdc++.h> using namespace std; const long long maxn = 1e6 + 10; const long long INF = 0x3f3f3f3f; const long long mod = 998244353; const double esp = 1e-7; signed main() { long long t; cin >> t; while (t--) { long long n, m, k; cin >> n >> m >> k; if ((n != 1 && m == 0) || (n != 1 && k == 2) || m < n - 1 || k == 1 || m > n * (n - 1) / 2) { cout << "NO" << '\n'; continue; } if (k == 3) { if (m == n * (n - 1) / 2) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else { cout << "YES" << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; const long long maxn = 1e6 + 10; const long long INF = 0x3f3f3f3f; const long long mod = 998244353; const double esp = 1e-7; signed main() { long long t; cin >> t; while (t--) { long long n, m, k; cin >> n >> m >> k; if ((n != 1 && m == 0) || (n != 1 && k == 2) || m < n - 1 || k < 2 || m > n * (n - 1) / 2) { cout << "NO" << '\n'; continue; } if (k == 3) { if (m == n * (n - 1) / 2) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else { cout << "YES" << '\n'; } } }
27	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n, m, k; cin >> n >> m >> k; k--; int d = 0; bool flag = false; int num = n * (n - 1) / 2; if (n > 1) { if (m == num) { d = 1; } else { d = 2; } } if (m >= n - 1 && m <= num) { if (d < k) { flag = true; } } if (flag) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n, m, k; cin >> n >> m >> k; k--; int d = 0; bool flag = false; long long num = n * (n - 1) / 2; if (n > 1) { if (m == num) { d = 1; } else { d = 2; } } if (m >= n - 1 && m <= num) { if (d < k) { flag = true; } } if (flag) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } return 0; }
27	 #include <bits/stdc++.h> using namespace std; long long n, m, k; int main() { int testcases; cin >> testcases; while (testcases-- > 0) { cin >> n >> m >> k; if (n == 1 && m == 0 && k >= 2) cout << "YES" << endl; else if (k >= 3 && m == n * (n - 1) / 2) cout << "YES" << endl; else if (k >= 4 && m > n - 1 && m < n * (n - 1) / 2) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, m, k; int main() { int testcases; cin >> testcases; while (testcases-- > 0) { cin >> n >> m >> k; if (n == 1 && m == 0 && k >= 2) cout << "YES" << endl; else if (k >= 3 && m == n * (n - 1) / 2) cout << "YES" << endl; else if (k >= 4 && m >= n - 1 && m < n * (n - 1) / 2) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
27	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int T; T = 1; cin >> T; while (T--) { int i, j, k, m, n, l, res = 0, ans = 0; cin >> n >> m >> k; k -= 2; if (m < n - 1) { cout << "NO" << '\n'; } else if (m > n * (n - 1) / 2) { cout << "NO" << '\n'; } else if (k == 0) { if (n == 1) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else if (k < 0) { cout << "NO" << '\n'; } else if (k == 1) { if (m == n * (n - 1) / 2) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else { cout << "YES" << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int T; T = 1; cin >> T; while (T--) { long long i, j, k, m, n, l, res = 0, ans = 0; cin >> n >> m >> k; k -= 2; if (m < n - 1) { cout << "NO" << '\n'; } else if (m > n * (n - 1) / 2) { cout << "NO" << '\n'; } else if (k == 0) { if (n == 1) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else if (k < 0) { cout << "NO" << '\n'; } else if (k == 1) { if (m == n * (n - 1) / 2) { cout << "YES" << '\n'; } else { cout << "NO" << '\n'; } } else { cout << "YES" << '\n'; } } }
27	 #include <bits/stdc++.h> using namespace std; int main() { long long n, m, i, j, k, t; long long p; scanf("%lld", &t); while (t--) { scanf("%lld%lld%lld", &n, &m, &k); if (m > (n - 1) * n / 2) printf("no\n"); else if (m < n - 1) printf("no\n"); else if (k > 3) printf("yes\n"); else if (k == 2) { if (n == 1) printf("yes\n"); else printf("no\n"); } else if (k == 3) { if (m >= n * (n - 1) / 2) printf("yes\n"); else printf("no\n"); } else if (k == 1) printf("no\n"); } }	 #include <bits/stdc++.h> using namespace std; int main() { long long n, m, i, j, k, t; long long p; scanf("%lld", &t); while (t--) { scanf("%lld%lld%lld", &n, &m, &k); if (m > (n - 1) * n / 2) printf("no\n"); else if (m < n - 1) printf("no\n"); else if (k > 3) printf("yes\n"); else if (k == 2) { if (n == 1) printf("yes\n"); else printf("no\n"); } else if (k == 3) { if (m >= n * (n - 1) / 2) printf("yes\n"); else printf("no\n"); } else if (k <= 1) printf("no\n"); } }
28	 #include <bits/stdc++.h> using namespace std; void solve() { int m, n, o, x, y, z, p, q, c = 0, l; scanf("%d %d %d", &m, &n, &o); if ((m + o) % 2 == 0) { printf("1\n"); } else { printf("0\n"); } } int main() { int t; scanf("%d", &t); for (int i = 1; i <= t; i++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int m, n, o, x, y, z, p, q, c = 0, l; scanf("%d %d %d", &m, &n, &o); if ((m + o) % 2 == 0) { printf("0\n"); } else { printf("1\n"); } } int main() { int t; scanf("%d", &t); for (int i = 1; i <= t; i++) { solve(); } return 0; }
28	 #include <bits/stdc++.h> using namespace std; int func(int a, int b, int c) { int diff; a = a % 2; b = b % 2; c = c % 2; if (a == 0 && b == 0 && c == 0) diff = 0; if (a == 0 && b == 0 && c == 1) diff = 0; if (a == 0 && b == 1 && c == 0) diff = 1; if (a == 0 && b == 1 && c == 1) diff = 1; if (a == 1 && b == 0 && c == 0) diff = 1; if (a == 1 && b == 0 && c == 1) diff = 0; if (a == 1 && b == 1 && c == 0) diff = 1; if (a == 1 && b == 1 && c == 1) diff = 0; return diff; } int main() { int t; cin >> t; while (t--) { int a, b, c; cin >> a >> b >> c; int diff = func(a, b, c); cout << diff << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int func(int a, int b, int c) { int diff; a = a % 2; b = b % 2; c = c % 2; if (a == 0 && b == 0 && c == 0) diff = 0; if (a == 0 && b == 0 && c == 1) diff = 1; if (a == 0 && b == 1 && c == 0) diff = 0; if (a == 0 && b == 1 && c == 1) diff = 1; if (a == 1 && b == 0 && c == 0) diff = 1; if (a == 1 && b == 0 && c == 1) diff = 0; if (a == 1 && b == 1 && c == 0) diff = 1; if (a == 1 && b == 1 && c == 1) diff = 0; return diff; } int main() { int t; cin >> t; while (t--) { int a, b, c; cin >> a >> b >> c; int diff = func(a, b, c); cout << diff << "\n"; } }
30	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int MAX = 2 * 1e5; void solve() { long long n; cin >> n; string s; cin >> s; string alpha = "abcdefghijklmnopqrstuvwxyz"; int ans = INT_MAX; for (long long i = 0; i < 26; i++) { int l = 0; int r = n - 1; int cnt = 0; bool flag = true; while (l <= r) { if (s[l] == s[r]) { l = l + 1; r = r - 1; } else { if (s[l] == s[i]) { l = l + 1; cnt++; } else if (s[r] == s[i]) { r = r - 1; cnt++; } else { flag = false; break; } } } if (flag) { ans = min(ans, cnt); } } if (ans == INT_MAX) cout << -1 << endl; else cout << ans << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int MAX = 2 * 1e5; void solve() { long long n; cin >> n; string s; cin >> s; string alpha = "abcdefghijklmnopqrstuvwxyz"; int ans = INT_MAX; for (long long i = 0; i < 26; i++) { int l = 0; int r = n - 1; int cnt = 0; bool flag = true; while (l <= r) { if (s[l] == s[r]) { l = l + 1; r = r - 1; } else { if (s[l] == alpha[i]) { l = l + 1; cnt++; } else if (s[r] == alpha[i]) { r = r - 1; cnt++; } else { flag = false; break; } } } if (flag) { ans = min(ans, cnt); } } if (ans == INT_MAX) cout << -1 << endl; else cout << ans << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }
30	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, ans = 1e9 + 7; string s; cin >> n >> s; bool flag = 1, f = 0; for (long long i = 0; i < n / 2; ++i) { if (s[i] != s[n - i - 1]) { flag = 0; break; } } if (flag) { cout << "0\n"; return; } for (long long i = 0; i < 26; ++i) { string tmp = ""; vector<long long> v, p; map<long long, long long> mp; flag = 0; for (long long j = 0; j < n; ++j) { if (s[j] == i + 'a') p.push_back(j); else tmp += s[j], v.push_back(j); } long long k = v.size(), cnt = p.size(); for (long long j = 0; j < k / 2; ++j) { if (tmp[j] != tmp[k - j - 1]) { flag = 1; break; } } if (flag) continue; for (long long x : p) { long long a = lower_bound(v.begin(), v.end(), x) - v.begin(); if (k % 2 && a == k / 2) { --cnt; continue; } if (a > k / 2) { a = k - a; if (mp[a]) { --mp[a]; cnt -= 2; } } else { ++mp[a]; } } ans = min(ans, cnt); f = 1; } if (f) cout << ans << '\n'; else cout << "-1\n"; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, ans = 1e9 + 7; string s; cin >> n >> s; bool flag = 1, f = 0; for (long long i = 0; i < n / 2; ++i) { if (s[i] != s[n - i - 1]) { flag = 0; break; } } if (flag) { cout << "0\n"; return; } for (long long i = 0; i < 26; ++i) { string tmp = ""; vector<long long> v, p; map<long long, long long> mp; flag = 0; for (long long j = 0; j < n; ++j) { if (s[j] == i + 'a') p.push_back(j); else tmp += s[j], v.push_back(j); } long long k = v.size(), cnt = p.size(); for (long long j = 0; j < k / 2; ++j) { if (tmp[j] != tmp[k - j - 1]) { flag = 1; break; } } if (flag) continue; for (long long x : p) { long long a = lower_bound(v.begin(), v.end(), x) - v.begin(); if (k % 2 == 0 && a == k / 2) { --cnt; continue; } if (a > k / 2) { a = k - a; if (mp[a]) { --mp[a]; cnt -= 2; } } else { ++mp[a]; } } ans = min(ans, cnt); f = 1; } if (f) cout << ans << '\n'; else cout << "-1\n"; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); }
30	 #include <bits/stdc++.h> using namespace std; int n; string s; int solve(char c) { int l = 0, r = n - 1; int ret = 0; while (l < r) { if (s[l] != s[r]) { if (s[l] == c) { l++; ret++; continue; } else if (s[r] == c) { r--; ret++; } else return -1; } l++; r--; } return ret; } int main(void) { ios::sync_with_stdio(false); int t; cin >> t; while (t--) { cin >> n >> s; int ans = n + 9; int temp; for (char c = 'a'; c <= 'z'; c++) { temp = solve(c); if (temp >= 0) ans = min(ans, temp); } if (ans > n) cout << -1 << endl; else cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int n; string s; int solve(char c) { int l = 0, r = n - 1; int ret = 0; while (l < r) { if (s[l] != s[r]) { if (s[l] == c) { l++; ret++; continue; } else if (s[r] == c) { r--; ret++; continue; } else return -1; } l++; r--; } return ret; } int main(void) { ios::sync_with_stdio(false); int t; cin >> t; while (t--) { cin >> n >> s; int ans = n + 9; int temp; for (char c = 'a'; c <= 'z'; c++) { temp = solve(c); if (temp >= 0) ans = min(ans, temp); } if (ans > n) cout << -1 << endl; else cout << ans << endl; } return 0; }
30	 #include <bits/stdc++.h> using namespace std; char A[100005]; int main() { int T; scanf("%d", &T); while (T--) { int n, ans = 1e9; scanf("%d", &n); scanf("%s", A + 1); for (int i = 0; i <= 26; i++) { int l = 1, r = n, key = 0; bool f = 1; while (l < r) { int a1, a2; a1 = a2 = 0; while (A[l] == i + 'a' - 1 && l <= r) l++, a1++; while (A[r] == i + 'a' - 1 && l <= r) r--, a2++; if (l >= r) break; key += abs(a1 - a2); if (A[l] != A[r]) { f = 0; break; } l++, r--; } if (f) { ans = min(ans, key); } } if (ans == 1e9) puts("-1"); else printf("%d\n", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; char A[100005]; int main() { int T; scanf("%d", &T); while (T--) { int n, ans = 1e9; scanf("%d", &n); scanf("%s", A + 1); for (int i = 0; i <= 26; i++) { int l = 1, r = n, key = 0; bool f = 1; while (l < r) { int a1, a2; a1 = a2 = 0; while (A[l] == i + 'a' - 1 && l <= r) l++, a1++; while (A[r] == i + 'a' - 1 && l <= r) r--, a2++; if (l > r) break; key += abs(a1 - a2); if (A[l] != A[r]) { f = 0; break; } l++, r--; } if (f) { ans = min(ans, key); } } if (ans == 1e9) puts("-1"); else printf("%d\n", ans); } return 0; }
30	 #include <bits/stdc++.h> using namespace std; int main() { char l; int s, e, t, n, ans, mn = 0, flag = 0; ; string str; cin >> t; for (int q = 0; q < t; q++) { cin >> n; cin >> str; mn = 100000; for (int i = 0; i < 26; i++) { ans = 0; l = 'a' + i; s = 0; e = n - 1; flag = 0; while (e - s > 1) { if (str[s] == str[e]) { s++; e--; } else if (str[s] == l) { s++; ans++; } else if (str[e] == l) { e--; ans++; } else { flag = 1; break; } } if (flag == 0) { if (ans < mn) { mn = ans; } } } if (mn != 100000) { cout << mn << "\n"; } else { cout << "-1\n"; } } }	 #include <bits/stdc++.h> using namespace std; int main() { char l; int s, e, t, n, ans, mn = 0, flag = 0; ; string str; cin >> t; for (int q = 0; q < t; q++) { cin >> n; cin >> str; mn = 100000; for (int i = 0; i < 26; i++) { ans = 0; l = 'a' + i; s = 0; e = n - 1; flag = 0; while (e - s > 0) { if (str[s] == str[e]) { s++; e--; } else if (str[s] == l) { s++; ans++; } else if (str[e] == l) { e--; ans++; } else { flag = 1; break; } } if (flag == 0) { if (ans < mn) { mn = ans; } } } if (mn != 100000) { cout << mn << "\n"; } else { cout << "-1\n"; } } }
30	 #include <bits/stdc++.h> using namespace std; inline int read() { int x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); } return x * f; } const int N = 1e5 + 10; const int inf = 1e9; int T; int n; char s[N]; int ans; int main() { T = read(); while (T--) { n = read(); int L = 1, R = n; scanf("%s", s + 1); while (s[L] == s[R]) { L++; R--; } if (L >= R) { printf("0\n"); continue; } ans = inf; char p = s[L]; int l = L + 1, r = R, tmp = 1; while (l < r) { if (s[l] == s[r]) { l++; r--; } else { if (s[l] == p) { l++; tmp++; } else if (s[r] == p) { r++; tmp++; } else { tmp = inf; break; } } } ans = min(ans, tmp); p = s[R]; l = L, r = R - 1, tmp = 1; while (l < r) { if (s[l] == s[r]) { l++; r--; } else { if (s[l] == p) { l++; tmp++; } else if (s[r] == p) { r++; tmp++; } else { tmp = inf; break; } } } ans = min(ans, tmp); printf("%d\n", ans == inf ? -1 : ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { int x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); } return x * f; } const int N = 1e5 + 10; const int inf = 1e9; int T; int n; char s[N]; int ans; int main() { T = read(); while (T--) { n = read(); int L = 1, R = n; scanf("%s", s + 1); while (s[L] == s[R]) { L++; R--; } if (L >= R) { printf("0\n"); continue; } ans = inf; char p = s[L]; int l = L + 1, r = R, tmp = 1; while (l < r) { if (s[l] == s[r]) { l++; r--; } else { if (s[l] == p) { l++; tmp++; } else if (s[r] == p) { r--; tmp++; } else { tmp = inf; break; } } } ans = min(ans, tmp); p = s[R]; l = L, r = R - 1, tmp = 1; while (l < r) { if (s[l] == s[r]) { l++; r--; } else { if (s[l] == p) { l++; tmp++; } else if (s[r] == p) { r--; tmp++; } else { tmp = inf; break; } } } ans = min(ans, tmp); printf("%d\n", ans == inf ? -1 : ans); } return 0; }
31	 #include <bits/stdc++.h> using namespace std; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long arr[n]; for (long long i = 0; i < n; i++) { cin >> arr[i]; } long long b[n]; if (n % 2 == 0) { for (long long i = 0; i < n - 1; i = i + 2) { b[i] = arr[i + 1]; b[i + 1] = -1 * arr[i]; } for (long long i = 0; i < n; i++) { cout << b[i] << " "; } cout << "\n"; } else { for (long long i = 3; i < n - 1; i = i + 2) { b[i] = arr[i + 1]; b[i + 1] = -1 * arr[i]; } if (arr[0] + arr[1] != 0) { cout << -arr[2] << " " << -arr[2] << " " << arr[0] + arr[1] << " "; } else if (arr[1] + arr[2] != 0) { cout << arr[1] + arr[2] << " " << -arr[0] << " " << -arr[0] << " "; } else { cout << -arr[1] << " " << arr[1] + arr[3] << " " << -arr[1] << " "; } for (long long i = 3; i < n; i++) { cout << b[i] << " "; } cout << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long arr[n]; for (long long i = 0; i < n; i++) { cin >> arr[i]; } long long b[n]; if (n % 2 == 0) { for (long long i = 0; i < n - 1; i = i + 2) { b[i] = arr[i + 1]; b[i + 1] = -1 * arr[i]; } for (long long i = 0; i < n; i++) { cout << b[i] << " "; } cout << "\n"; } else { for (long long i = 3; i < n - 1; i = i + 2) { b[i] = arr[i + 1]; b[i + 1] = -1 * arr[i]; } if (arr[0] + arr[1] != 0) { cout << -arr[2] << " " << -arr[2] << " " << arr[0] + arr[1] << " "; } else if (arr[1] + arr[2] != 0) { cout << arr[1] + arr[2] << " " << -arr[0] << " " << -arr[0] << " "; } else { cout << -arr[1] << " " << arr[0] + arr[2] << " " << -arr[1] << " "; } for (long long i = 3; i < n; i++) { cout << b[i] << " "; } cout << "\n"; } } return 0; }
31	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } if (n % 2 == 0) { for (long long i = 0; i < n; i += 2) { cout << -a[i + 1] << " " << -a[i] << " "; } cout << '\n'; return; } for (long long i = 0; i < n - 3; i += 2) { cout << -a[i + 1] << " " << -a[i] << " "; } if (a[n - 1] + a[n - 2] != 0) { cout << (a[n - 1] + a[n - 2]) << " " << -a[n - 3] << " " << -a[n - 3] << '\n'; return; } if (a[n - 3] + a[n - 2] != 0) { cout << -a[n - 1] << " " << -a[n - 1] << " " << (a[n - 3] + a[n - 2]) << '\n'; return; } if (a[n - 1] + a[n - 3] != 0) { cout << -a[n - 2] << " " << (a[n - 1] + a[n - 3]) << " " << -a[n - 2] << '\n'; return; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; for (long long i = 1; i <= t; i++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } if (n % 2 == 0) { for (long long i = 0; i < n; i += 2) { cout << -a[i + 1] << " " << a[i] << " "; } cout << '\n'; return; } for (long long i = 0; i < n - 3; i += 2) { cout << -a[i + 1] << " " << a[i] << " "; } if (a[n - 1] + a[n - 2] != 0) { cout << (a[n - 1] + a[n - 2]) << " " << -a[n - 3] << " " << -a[n - 3] << '\n'; return; } if (a[n - 3] + a[n - 2] != 0) { cout << -a[n - 1] << " " << -a[n - 1] << " " << (a[n - 3] + a[n - 2]) << '\n'; return; } if (a[n - 1] + a[n - 3] != 0) { cout << -a[n - 2] << " " << (a[n - 1] + a[n - 3]) << " " << -a[n - 2] << '\n'; return; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; for (long long i = 1; i <= t; i++) { solve(); } }
31	 #include <bits/stdc++.h> using namespace std; int n; int a[100010]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; if (n % 2 == 0) { for (int i = 1; i <= n; i++) { if (i % 2 == 0) cout << a[i - 1] << " "; else cout << -1 * a[i + 1] << " "; } cout << endl; } else { for (int i = 1; i + 3 <= n; i++) { if (i % 2 == 0) cout << a[i - 1] << " "; else cout << -1 * a[i + 1] << " "; } int x, y; if (a[n - 2] + a[n - 1] + a[n] == 0) { cout << 1 << " " << 1 << " " << 1 << endl; return; } if (a[n - 2] + a[n - 1] != 0) { x = a[n - 2] + a[n - 1]; y = a[n]; cout << y << " " << y << " " << " " << -1 * x << endl; } else if (a[n - 2] + a[n] != 0) { x = a[n - 1] + a[n]; y = a[n - 2]; cout << -1 * x << " " << y << " " << y << endl; } else { x = a[n - 2] + a[n]; y = a[n - 1]; cout << y << " " << -1 * x << " " << y << endl; } } } int main() { int T = 1; ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; int n; int a[100010]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; if (n % 2 == 0) { for (int i = 1; i <= n; i++) { if (i % 2 == 0) cout << a[i - 1] << " "; else cout << -1 * a[i + 1] << " "; } cout << endl; } else { for (int i = 1; i + 3 <= n; i++) { if (i % 2 == 0) cout << a[i - 1] << " "; else cout << -1 * a[i + 1] << " "; } int x, y; if (a[n - 2] + a[n - 1] + a[n] == 0) { cout << 1 << " " << 1 << " " << 1 << endl; return; } if (a[n - 2] + a[n - 1] != 0) { x = a[n - 2] + a[n - 1]; y = a[n]; cout << y << " " << y << " " << " " << -1 * x << endl; } else if (a[n - 1] + a[n] != 0) { x = a[n - 1] + a[n]; y = a[n - 2]; cout << -1 * x << " " << y << " " << y << endl; } else { x = a[n - 2] + a[n]; y = a[n - 1]; cout << y << " " << -1 * x << " " << y << endl; } } } int main() { int T = 1; ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) { solve(); } return 0; }
31	 #include <bits/stdc++.h> const int N = 1e5 + 5; const int mod = 1e9 + 7; const long long int int_max = 1e18; const long long int int_min = -1e18; const long double PI = acos(-1); using namespace std; void solve() { long long int n; cin >> n; long long int a[n + 2]; for (long long int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) { for (long long int i = 1; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; return; } if ((a[1] + a[2]) != 0) { cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' '; } else if (a[1] + a[3] != 0) { cout << a[2] << ' ' << -(a[1] + a[2]) << ' ' << a[3] << ' '; } else { cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' '; } for (long long int i = 4; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> const int N = 1e5 + 5; const int mod = 1e9 + 7; const long long int int_max = 1e18; const long long int int_min = -1e18; const long double PI = acos(-1); using namespace std; void solve() { long long int n; cin >> n; long long int a[n + 2]; for (long long int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) { for (long long int i = 1; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; return; } if ((a[1] + a[2]) != 0) { cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' '; } else if (a[1] + a[3] != 0) { cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' '; } else { cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' '; } for (long long int i = 4; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } }
31	 #include <bits/stdc++.h> const int N = 1e5 + 5; const int mod = 1e9 + 7; const long long int int_max = 1e18; const long long int int_min = -1e18; const long double PI = acos(-1); using namespace std; void solve() { long long int n; cin >> n; long long int a[n + 2]; for (long long int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) { for (long long int i = 1; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; return; } if ((a[1] + a[2]) != 0) { cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' '; } else if (a[1] + a[3] != 0) { cout << a[2] << ' ' << -(a[1] + a[2]) << ' ' << a[2] << ' '; } else { cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' '; } for (long long int i = 4; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> const int N = 1e5 + 5; const int mod = 1e9 + 7; const long long int int_max = 1e18; const long long int int_min = -1e18; const long double PI = acos(-1); using namespace std; void solve() { long long int n; cin >> n; long long int a[n + 2]; for (long long int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) { for (long long int i = 1; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; return; } if ((a[1] + a[2]) != 0) { cout << a[3] << ' ' << a[3] << ' ' << -(a[1] + a[2]) << ' '; } else if (a[1] + a[3] != 0) { cout << a[2] << ' ' << -(a[1] + a[3]) << ' ' << a[2] << ' '; } else { cout << -(a[2] + a[3]) << ' ' << a[1] << ' ' << a[1] << ' '; } for (long long int i = 4; i <= n; i++) { cout << -a[i + 1] << ' ' << a[i] << ' '; i++; } cout << '\n'; } int main() { ios::sync_with_stdio(false), cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } }
32	 #include <bits/stdc++.h> const int mod = 998244353; const int maxn = 2e5 + 5; const long long int INF = 1e18; using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tc; cin >> tc; while (tc--) { int n; cin >> n; vector<int> arr(n); vector<long long> prefix(n); for (int i = 0; i < n; i++) { cin >> arr[i]; if (i == 0) prefix[i] = arr[i]; else prefix[i] = prefix[i - 1] + arr[i]; } if (n == 1) { cout << "1\n"; continue; } int k = 0; while (k * (k + 1) <= 2 * n) k++; k--; vector<vector<long long> > dp(n + 2, vector<long long>(k + 1, -INF)); dp[n - 1][1] = arr[n - 1]; dp[n - 1][0] = 0; for (int i = n - 1; i >= 0; i--) { for (int j = 0; j <= k; j++) { if (j && i + j - 1 < n && prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0) < dp[i + j][j - 1]) dp[i][j] = max(dp[i][j], prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0)); dp[i][j] = max(dp[i][j], dp[i + 1][j]); } } int ans = 0; for (int j = 0; j <= k; j++) { if (dp[0][j] != -INF) ans = j; else break; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> const int mod = 998244353; const int maxn = 2e5 + 5; const long long int INF = 1e18; using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tc; cin >> tc; while (tc--) { int n; cin >> n; vector<int> arr(n); vector<long long> prefix(n); for (int i = 0; i < n; i++) { cin >> arr[i]; if (i == 0) prefix[i] = arr[i]; else prefix[i] = prefix[i - 1] + arr[i]; } if (n == 1) { cout << "1\n"; continue; } int k = 0; while (k * (k + 1) <= 2 * n) k++; k--; vector<vector<long long> > dp(n + 2, vector<long long>(k + 1, -INF)); dp[n - 1][1] = arr[n - 1]; dp[n - 1][0] = INF; for (int i = n - 1; i >= 0; i--) { for (int j = 0; j <= k; j++) { if (j && i + j - 1 < n && prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0) < dp[i + j][j - 1]) dp[i][j] = max(dp[i][j], prefix[i + j - 1] - (i - 1 >= 0 ? prefix[i - 1] : 0)); dp[i][j] = max(dp[i][j], dp[i + 1][j]); } } int ans = 0; for (int j = 0; j <= k; j++) { if (dp[0][j] != -INF) ans = j; else break; } cout << ans << '\n'; } return 0; }
41	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg <= k) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg < n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }
41	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg <= n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg < n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }
41	 #include <bits/stdc++.h> template <typename T> bool umin(T &a, const T &b) { return (a > b ? a = b, 1 : 0); } template <typename T> bool umax(T &a, const T &b) { return (a < b ? a = b, 1 : 0); } using namespace std; const int N = 1001; int n, k; int colors[N][N]; int diff = 0; void slv(vector<vector<int> > sts) { if ((int)(sts).size() == 1) return; int i = 0; diff++; vector<vector<int> > nw; while (i < (int)(sts).size()) { vector<int> current; int l = i, r = min((int)(sts).size(), i + k) - 1; for (int x = l; x <= r; ++x) { for (int y = l + 1; y <= r; ++y) { for (auto &a : sts[x]) { for (auto &b : sts[y]) { colors[a][b] = diff; } } } } for (int x = l; x <= r; ++x) { for (auto u : sts[x]) current.push_back(u); } nw.push_back(current); i = r + 1; } slv(nw); } signed main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); cin >> n >> k; vector<vector<int> > sts; for (int i = 0; i < n; ++i) { sts.push_back({i}); } slv(sts); cout << diff << endl; for (int i = 0; i < n; ++i) { for (int j = i + 1; j < n; ++j) { cout << colors[i][j] << ' '; } } return 0; }	 #include <bits/stdc++.h> template <typename T> bool umin(T &a, const T &b) { return (a > b ? a = b, 1 : 0); } template <typename T> bool umax(T &a, const T &b) { return (a < b ? a = b, 1 : 0); } using namespace std; const int N = 1001; int n, k; int colors[N][N]; int diff = 0; void slv(vector<vector<int> > sts) { if ((int)(sts).size() == 1) return; int i = 0; diff++; vector<vector<int> > nw; while (i < (int)(sts).size()) { vector<int> current; int l = i, r = min((int)(sts).size(), i + k) - 1; for (int x = l; x <= r; ++x) { for (int y = x + 1; y <= r; ++y) { for (auto &a : sts[x]) { for (auto &b : sts[y]) { colors[a][b] = diff; } } } } for (int x = l; x <= r; ++x) { for (auto u : sts[x]) current.push_back(u); } nw.push_back(current); i = r + 1; } slv(nw); } signed main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); cin >> n >> k; vector<vector<int> > sts; for (int i = 0; i < n; ++i) { sts.push_back({i}); } slv(sts); cout << diff << endl; for (int i = 0; i < n; ++i) { for (int j = i + 1; j < n; ++j) { cout << colors[i][j] << ' '; } } return 0; }
41	 #include <bits/stdc++.h> using namespace std; int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La; int main() { register int i, j; scanf("%d%d", &n, &k); now = 1; while (now <= n) { La = now; now *= k; cnt++; for (i = 1; i <= n; i++) { for (j = (i - 1) / La * La + La + 1; j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now) : (n)); j++) A[i][j] = cnt; } } printf("%d\n", cnt); for (i = 1; i <= n; i++) for (j = i + 1; j <= n; j++) printf("%d ", A[i][j]); }	 #include <bits/stdc++.h> using namespace std; int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La; int main() { register int i, j; scanf("%d%d", &n, &k); now = 1; while (now < n) { La = now; now *= k; cnt++; for (i = 1; i <= n; i++) { for (j = (i - 1) / La * La + La + 1; j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now) : (n)); j++) A[i][j] = cnt; } } printf("%d\n", cnt); for (i = 1; i <= n; i++) for (j = i + 1; j <= n; j++) printf("%d ", A[i][j]); }
41	 #include <bits/stdc++.h> using namespace std; int n, m, ans[1005][1005], cnt; int main() { scanf("%d%d", &n, &m); int s = 1; while (s <= n) { cnt++; s *= m; int res = 0; while (res < n) { for (int i = 1; i <= s && res + i <= n; i++) for (int j = i + 1; j <= s && res + j <= n; j++) if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt; res += s; } } printf("%d\n", cnt); for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) printf("%d ", ans[i][j]); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m, ans[1005][1005], cnt; int main() { scanf("%d%d", &n, &m); int s = 1; while (s < n) { cnt++; s *= m; int res = 0; while (res < n) { for (int i = 1; i <= s && res + i <= n; i++) for (int j = i + 1; j <= s && res + j <= n; j++) if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt; res += s; } } printf("%d\n", cnt); for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) printf("%d ", ans[i][j]); return 0; }
41	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using uint = unsigned int; using ull = unsigned long long; template <typename T> using pair2 = pair<T, T>; using pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); ll myRand(ll B) { return (ull)rng() % B; } clock_t startTime; double getCurrentTime() { return (double)(clock() - startTime) / CLOCKS_PER_SEC; } int main() { startTime = clock(); int n, k; scanf("%d%d", &n, &k); int pw = 1; int ans = 0; while (pw < n) { pw *= k; ans++; } printf("%d\n", ans); for (int i = 0; i < n; i++) for (int j = i + 1; j < n; j++) { int x = i, y = j, z = 1; while (x % k == y % k) { x /= k; y /= k; z++; } printf("%d ", z); } printf("\n"); return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using uint = unsigned int; using ull = unsigned long long; template <typename T> using pair2 = pair<T, T>; using pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); ll myRand(ll B) { return (ull)rng() % B; } clock_t startTime; double getCurrentTime() { return (double)(clock() - startTime) / CLOCKS_PER_SEC; } int main() { startTime = clock(); int n, k; scanf("%d%d", &n, &k); int pw = 1; int ans = 0; while (pw < n) { pw *= k; ans++; } printf("%d\n", ans); for (int i = 0; i < n; i++) for (int j = i + 1; j < n; j++) { int x = i, y = j, z = 1; while (x % k >= y % k) { x /= k; y /= k; z++; } printf("%d ", z); } printf("\n"); return 0; }
41	 #include <bits/stdc++.h> using namespace std; inline void out(int *a, int l, int r) { for (int i = l; i <= r; ++i) printf("%d ", *(a + i)); puts(""); } inline int read() { int x = 0, f = 1; char ch = getchar(); while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); } while (isdigit(ch)) { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); } return x * f; } long long pw[50]; signed main() { int n = read(), k = read(), c = 0, t = n; while (t) { t /= k; c++; } pw[0] = 1; for (int i = 1; i <= c + 1; ++i) pw[i] = pw[i - 1] * k; cout << c << endl; for (int i = 0; i <= n - 1; ++i) for (int j = i + 1; j <= n - 1; ++j) { for (int w = 1; w <= c; ++w) if (i / pw[w] == j / pw[w]) { printf("%d ", w); break; } } return 0; }	 #include <bits/stdc++.h> using namespace std; inline void out(int *a, int l, int r) { for (int i = l; i <= r; ++i) printf("%d ", *(a + i)); puts(""); } inline int read() { int x = 0, f = 1; char ch = getchar(); while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); } while (isdigit(ch)) { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); } return x * f; } long long pw[50]; signed main() { int n = read(), k = read(), c = 0, t = n - 1; while (t) { t /= k; c++; } pw[0] = 1; for (int i = 1; i <= c + 1; ++i) pw[i] = pw[i - 1] * k; cout << c << endl; for (int i = 0; i <= n - 1; ++i) for (int j = i + 1; j <= n - 1; ++j) { for (int w = 1; w <= c; ++w) if (i / pw[w] == j / pw[w]) { printf("%d ", w); break; } } return 0; }
42	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5, mod = 1e9 + 7; int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans; multiset<int> s; void M(int x, int y) { for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod; } int Q(int x) { int ret = 0; for (; x; x -= x & -x) (ret += t[x]) %= mod; return ret; } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d%d", &a[i], &b[i]), f[i] = i; sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; }); scanf("%d", &q); for (int i = 1; i <= q; i++) scanf("%d", &x), d[x] = 1, s.insert(b[x]); for (int i = 1; i <= n; i++) { x = f[i]; g[x] = !s.empty() && b[x] <= *s.rbegin(); if (d[x]) s.erase(s.find(b[x])); } for (int i = 1; i <= n; i++) x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod), (ans += dp[x]) %= mod; printf("%d\n", ans); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 4e5 + 5, mod = 1e9 + 7; int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans; multiset<int> s; void M(int x, int y) { for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod; } int Q(int x) { int ret = 0; for (; x; x -= x & -x) (ret += t[x]) %= mod; return ret; } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d%d", &a[i], &b[i]), f[i] = i; sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; }); scanf("%d", &q); for (int i = 1; i <= q; i++) scanf("%d", &x), d[x] = 1, s.insert(b[x]); for (int i = 1; i <= n; i++) { x = f[i]; g[x] = s.size() && b[x] <= *s.rbegin(); if (d[x]) s.erase(s.find(b[x])); } for (int i = 1; i <= n; i++) x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod), (ans += dp[x]) %= mod; printf("%d\n", ans); return 0; }
44	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e3 + 5; int n; char s[MAXN][MAXN]; int f[MAXN]; inline pair<int, int> get(int x, int y, int k) { if (x == 1) { if (y % 2) ++y; return make_pair(y, k); } if ((x + y) % 2) { int t = min(x - 1, y - 1); x -= t; y -= t; k ^= t & 1; } else { int t = min(x - 1, n - y); x -= t; y += t; k ^= t & 1; } if (x != 1) x = n - x + 1, y = n - y + 1; return get(x, y, k); } int main(void) { scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%s", s[i] + 1); if (n % 2) return printf("NONE"), 0; memset(f, -1, sizeof(f)); for (int i = 1; i <= n; ++i) for (int j = 1; j <= n; ++j) if (s[i][j] != '.') { pair<int, int> res = get(i, j, s[i][j] == 'G'); int y = res.first, k = res.second; if (f[y] == -1) f[y] = k; else if (f[y] != k) return printf("NONE"), 0; } for (int i = 2; i <= n; i += 2) if (f[i] == -1) return printf("MULTIPLE"), 0; printf("UNIQUE\n"); for (int i = 1; i <= n; ++i, putchar('\n')) for (int j = 1; j <= n; ++j) { pair<int, int> res = get(i, j, 0); int k = f[res.first] ^ res.second; putchar("GS"[k]); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e3 + 5; int n; char s[MAXN][MAXN]; int f[MAXN]; inline pair<int, int> get(int x, int y, int k) { if (x == 1) { if (y % 2) ++y; return make_pair(y, k); } if ((x + y) % 2) { int t = min(x - 1, y - 1); x -= t; y -= t; k ^= t & 1; } else { int t = min(x - 1, n - y); x -= t; y += t; k ^= t & 1; } if (x != 1) x = n - x + 1, y = n - y + 1; return get(x, y, k); } int main(void) { scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%s", s[i] + 1); if (n % 2) return printf("NONE"), 0; memset(f, -1, sizeof(f)); for (int i = 1; i <= n; ++i) for (int j = 1; j <= n; ++j) if (s[i][j] != '.') { pair<int, int> res = get(i, j, s[i][j] == 'G'); int y = res.first, k = res.second; if (f[y] == -1) f[y] = k; else if (f[y] != k) return printf("NONE"), 0; } for (int i = 2; i <= n; i += 2) if (f[i] == -1) return printf("MULTIPLE"), 0; printf("UNIQUE\n"); for (int i = 1; i <= n; ++i, putchar('\n')) for (int j = 1; j <= n; ++j) { pair<int, int> res = get(i, j, 0); int k = f[res.first] ^ res.second; putchar("SG"[k]); } return 0; }
45	 #include <bits/stdc++.h> using namespace std; int main() { int t, i = 0, c = 0; cin >> t; for (; i < t; i++) { c = 0; int n; cin >> n; int a[n]; for (int j = 0; j < n; j++) { cin >> a[j]; } if (a[0] == 1) c++; for (int k = 1; k < n; k++) { if (a[k] == 1 && a[k - 1] == 0) c++; else if (a[k] == 1 && a[k - 1] == 1) c = c + 5; else if (a[k] == 0 && a[k - 1] == 1) ; else if (a[k] == 0 && a[k - 1] == 0) { c = -1; break; } } cout << c << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t, i = 0, c = 0; cin >> t; for (; i < t; i++) { c = 1; int n; cin >> n; int a[n]; for (int j = 0; j < n; j++) { cin >> a[j]; } if (a[0] == 1) c++; for (int k = 1; k < n; k++) { if (a[k] == 1 && a[k - 1] == 0) c++; else if (a[k] == 1 && a[k - 1] == 1) c = c + 5; else if (a[k] == 0 && a[k - 1] == 1) ; else if (a[k] == 0 && a[k - 1] == 0) { c = -1; break; } } cout << c << endl; } }
45	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; int sum = 1; for (int i = 0; i < n; i++) { int a; cin >> a; v.push_back(a); } int count0 = 0, count1 = 0; for (int i = 0; i < n; i++) { if (v[i] == 1) { count1++; if (count1 == 2) { sum = sum + 4; } sum++; count0 = 0; } else if (v[i] == 0) { count0++; if (count0 == 2) { sum = -1; break; } count1 = 0; } } cout << sum << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; int sum = 1; for (int i = 0; i < n; i++) { int a; cin >> a; v.push_back(a); } int count0 = 0, count1 = 0; for (int i = 0; i < n; i++) { if (v[i] == 1) { count1++; if (count1 >= 2) { sum = sum + 4; } sum++; count0 = 0; } else if (v[i] == 0) { count0++; if (count0 == 2) { sum = -1; break; } count1 = 0; } } cout << sum << endl; } return 0; }
45	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e9 + 7; const long long MOD = 998244353; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long height = 1; int flag = 1; for (int i = 0; i < n; i++) { if (a[i] == 0 && a[i + 1] == 0) { flag = 0; break; } } if (flag) { if (a[0] == 1) { height += 1; } for (int i = 1; i < n; i++) { if (a[i - 1] == 1 && a[i] == 1) { height += 5; } else if (a[i] == 1) { height += 1; } } cout << height << "\n"; } else { cout << "-1\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e9 + 7; const long long MOD = 998244353; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long height = 1; int flag = 1; for (int i = 0; i < n - 1; i++) { if (a[i] == 0 && a[i + 1] == 0) { flag = 0; break; } } if (flag) { if (a[0] == 1) { height += 1; } for (int i = 1; i < n; i++) { if (a[i - 1] == 1 && a[i] == 1) { height += 5; } else if (a[i] == 1) { height += 1; } } cout << height << "\n"; } else { cout << "-1\n"; } } return 0; }
45	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n; int a[N]; void solve() { scanf("%d", &n); int now = 1; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); if (n == 1) { if (a[1] == 1) printf("2\n"); else printf("1\n"); return; } if (a[1] == 1) now++; for (int i = 2; i <= n; i++) { if (a[i] == 0 && a[i - 1] == 0) { now == -1; printf("%d\n", now); return; } if (a[i] == 0) continue; if (a[i] == 1 && a[i - 1] == 1) now += 5; else now++; } printf("%d\n", now); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n; int a[N]; void solve() { scanf("%d", &n); int now = 1; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); if (n == 1) { if (a[1] == 1) printf("2\n"); else printf("1\n"); return; } if (a[1] == 1) now++; for (int i = 2; i <= n; i++) { if (a[i] == 0 && a[i - 1] == 0) { now = -1; printf("%d\n", now); return; } if (a[i] == 0) continue; if (a[i] == 1 && a[i - 1] == 1) now += 5; else now++; } printf("%d\n", now); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } return 0; }
45	 #include <bits/stdc++.h> using namespace std; int n, t, v; int arr[100]; void cf() { cin >> n; v = 0; for (int i = 0; i < n; ++i) { cin >> arr[i]; } for (int i = 0; i < n - 1; ++i) { if (arr[i] == 0 && arr[i + 1] == 0) { cout << -1 << endl; v = 1; } } int ans = 1; if (v == 0) { ans += arr[0]; for (int i = 1; i < n; ++i) { if (arr[i] == 1) { ans += arr[i] + 4 * arr[i - 1]; } } cout << ans << endl; } } int main() { cin >> t; for (int z = 0; z < t; ++z) { cf(); } }	 #include <bits/stdc++.h> using namespace std; int n, t, v; int arr[100]; void cf() { cin >> n; v = 0; for (int i = 0; i < n; ++i) { cin >> arr[i]; } for (int i = 0; i < n - 1; ++i) { if (arr[i] == 0 && arr[i + 1] == 0) { cout << -1 << endl; v = 1; break; } } int ans = 1; if (v == 0) { ans += arr[0]; for (int i = 1; i < n; ++i) { if (arr[i] == 1) { ans += arr[i] + 4 * arr[i - 1]; } } cout << ans << endl; } } int main() { cin >> t; for (int z = 0; z < t; ++z) { cf(); } }
46	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long int count = 0, num = INT_MIN; long long int maxn = *max_element(a, a + n); if (a[n - 1] == maxn) { cout << "0"; } else { for (int i = n - 1; i >= 0; i--) { if (a[i] == maxn) { break; } else if (a[i] > num) { count++; num = a[i]; } } cout << count << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long int count = 0, num = INT_MIN; long long int maxn = *max_element(a, a + n); if (a[n - 1] == maxn) { cout << "0\n"; } else { for (int i = n - 1; i >= 0; i--) { if (a[i] == maxn) { break; } else if (a[i] > num) { count++; num = a[i]; } } cout << count << endl; } } }
46	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int a[n]; int itr, maxa = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] >= maxa) { maxa = a[i]; itr = i; } } int br = 0, maxbr = a[n - 1]; for (int i = n - 1; i > itr; i--) { if (maxbr <= a[i]) br++; maxbr = max(a[i], maxbr); } cout << br << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int a[n]; int itr, maxa = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] >= maxa) { maxa = a[i]; itr = i; } } int br = 0, maxbr = a[n - 1]; for (int i = n - 1; i >= itr; i--) { if (maxbr < a[i]) br++; maxbr = max(a[i], maxbr); } cout << br << "\n"; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200100]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } stable_sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } stable_sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; const int64_t longinf = LLONG_MAX - 100000; const long long inf = INT_MAX; long long pw(long long x, long long y, long long p = longinf) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); } long long cl(long long a, long long x) { return a % x == 0 ? a / x : a / x + 1; } void run_time_terror(long long case_no = 0) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } long long mx = -1; for (long long i = 0; i < n; ++i) { mx = max(mx, a[i]); } vector<long long> b; b.push_back(a[0]); for (long long i = 1; i < n; ++i) { while (b.size() and b.back() < a[i]) { b.pop_back(); } b.push_back(a[i]); } cout << b.size() - 1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0), cout.setf(ios::fixed); cout << setprecision(0); long long tt = 1; cin >> tt; for (long long case_no = 1; case_no <= tt; case_no++) { run_time_terror(case_no); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; const int64_t longinf = LLONG_MAX - 100000; const long long inf = INT_MAX; long long pw(long long x, long long y, long long p = longinf) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); } long long cl(long long a, long long x) { return a % x == 0 ? a / x : a / x + 1; } void run_time_terror(long long case_no = 0) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } long long mx = -1; for (long long i = 0; i < n; ++i) { mx = max(mx, a[i]); } vector<long long> b; b.push_back(a[0]); for (long long i = 1; i < n; ++i) { while (b.size() and b.back() <= a[i]) { b.pop_back(); } b.push_back(a[i]); } cout << b.size() - 1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0), cout.setf(ios::fixed); cout << setprecision(0); long long tt = 1; cin >> tt; for (long long case_no = 1; case_no <= tt; case_no++) { run_time_terror(case_no); } return 0; }
46	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, cnt = 0; cin >> n; int arr[n]; for (int(i) = (0); (i) < (n); ++(i)) { cin >> arr[i]; } long long x = arr[n - 1]; for (int i = n - 2; i >= 0; i--) { if (arr[i] > x) { cnt++; x = arr[i]; } if (i == 0) { cout << cnt; return; } } } int main() { long long t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, cnt = 0; cin >> n; int arr[n]; for (int(i) = (0); (i) < (n); ++(i)) { cin >> arr[i]; } long long x = arr[n - 1]; for (int i = n - 1; i >= 0; i--) { if (arr[i] > x) { cnt++; x = arr[i]; } if (i == 0) { cout << cnt; return; } } } int main() { long long t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }
47	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; ; long long int k; cin >> k; ; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> v, r; for (int i = 0; i < n; i++) { if (a[i] > 0) v.push_back(a[i]); else r.push_back(abs(a[i])); } sort(v.begin(), v.end()); sort(r.begin(), r.end()); int w = v.size(), y = r.size(); long long int ans = 0; int i = w - 1, i1 = y - 1; while (1) { if (i < 0) break; if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1])) ans += v[i]; else if (i == w - 1 && y == 0) ans += v[i]; else ans += 2 * v[i]; i = i - k; if (i < 0) break; } while (1) { if (i1 < 0) break; if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] < r[y - 1])) ans += r[i1]; else if (i1 == y - 1 && w == 0) ans += r[i1]; else ans += 2 * r[i1]; i1 = i1 - k; if (i1 < 0) break; } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; ; long long int k; cin >> k; ; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> v, r; for (int i = 0; i < n; i++) { if (a[i] > 0) v.push_back(a[i]); else r.push_back(abs(a[i])); } sort(v.begin(), v.end()); sort(r.begin(), r.end()); int w = v.size(), y = r.size(); long long int ans = 0; int i = w - 1, i1 = y - 1; while (1) { if (i < 0) break; if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1])) ans += v[i]; else if (i == w - 1 && y == 0) ans += v[i]; else ans += 2 * v[i]; i = i - k; if (i < 0) break; } while (1) { if (i1 < 0) break; if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1])) ans += r[i1]; else if (i1 == y - 1 && w == 0) ans += r[i1]; else ans += 2 * r[i1]; i1 = i1 - k; if (i1 < 0) break; } cout << ans << endl; } }
47	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 2 * 1e5 + 7; const int INF = 1e10 + 7; const int MOD = 1e9 + 7; const int LOG = 22; long long a[MAX_N]; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; for (int i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); vector<long long> v; long long ans = 0, p = 0; for (int i = 0; i < n; i++) { if (a[i] >= 0) { p = i; break; } } long long MIN = INF, MAX = 0; for (int i = 0; i < p; i += k) { MIN = INF; if (i + k - 1 >= p) { for (int j = i; j < p; j++) MIN = min(MIN, a[j]); } else { for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]); } v.push_back(abs(MIN)); } for (int i = n - 1; i >= p; i -= k) { MAX = 0; if (i - k + 1 < p) { for (int j = i; j >= p; j--) MAX = max(MAX, a[j]); } else { for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]); } v.push_back(MAX); } sort(v.begin(), v.end()); for (int x : v) ans += (2 * x); ans -= v[v.size() - 1]; cout << ans << '\n'; v.clear(); } }	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 2 * 1e5 + 7; const int INF = 1e10 + 7; const int MOD = 1e9 + 7; const int LOG = 22; long long a[MAX_N]; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; for (int i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); vector<long long> v; long long ans = 0, p = n; for (int i = 0; i < n; i++) { if (a[i] >= 0) { p = i; break; } } long long MIN = INF, MAX = 0; for (int i = 0; i < p; i += k) { MIN = INF; if (i + k - 1 >= p) { for (int j = i; j < p; j++) MIN = min(MIN, a[j]); } else { for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]); } v.push_back(abs(MIN)); } for (int i = n - 1; i >= p; i -= k) { MAX = 0; if (i - k + 1 < p) { for (int j = i; j >= p; j--) MAX = max(MAX, a[j]); } else { for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]); } v.push_back(MAX); } sort(v.begin(), v.end()); for (int x : v) ans += (2 * x); ans -= v[v.size() - 1]; cout << ans << '\n'; v.clear(); } }
47	 #include <bits/stdc++.h> using namespace std; const long long maxn = 5e5 + 5; vector<long long> a, b; long long solve() { a.clear(); b.clear(); long long n, m; cin >> n >> m; while (n--) { long long e; cin >> e; if (e > 0) a.push_back(e); else if (e < 0) b.push_back(-e); } a.push_back(0); b.push_back(0); sort(a.begin(), a.end(), greater<long long>()); sort(b.begin(), b.end(), greater<long long>()); long long ans = a[0] + b[0]; long long have = m - 1; for (long long i = 1; i < a.size(); ++i) { if (have == 0) { have = m; ans += 2 * a[i]; } have--; } have = m - 1; for (long long i = 1; i < b.size(); ++i) { if (have == 0) { have = m; ans += 2 * b[i]; } have--; } if (a[0] < b[0]) ans += a[0]; else ans += 2 * b[0]; return ans; } signed main() { ios::sync_with_stdio(false); long long t; cin >> t; while (t--) { cout << solve() << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long maxn = 5e5 + 5; vector<long long> a, b; long long solve() { a.clear(); b.clear(); long long n, m; cin >> n >> m; while (n--) { long long e; cin >> e; if (e > 0) a.push_back(e); else if (e < 0) b.push_back(-e); } a.push_back(0); b.push_back(0); sort(a.begin(), a.end(), greater<long long>()); sort(b.begin(), b.end(), greater<long long>()); long long ans = a[0] + b[0]; long long have = m - 1; for (long long i = 1; i < a.size(); ++i) { if (have == 0) { have = m; ans += 2 * a[i]; } have--; } have = m - 1; for (long long i = 1; i < b.size(); ++i) { if (have == 0) { have = m; ans += 2 * b[i]; } have--; } if (a[0] < b[0]) ans += a[0]; else ans += b[0]; return ans; } signed main() { ios::sync_with_stdio(false); long long t; cin >> t; while (t--) { cout << solve() << endl; } }
48	 #include <bits/stdc++.h> using namespace std; const int maxn = 500000 + 50; int T, n, h[maxn], f[maxn], tot, ti[maxn]; int ans, sum; int main() { scanf("%d", &T); for (int oo = 1; oo <= T; ++oo) { scanf("%d", &n); tot = 0; vector<bool> used(n); vector<set<int>> gi(n), ed(n); vector<int> seet; ans = 0, sum = 0; for (int i = 0; i < n; i++) f[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &h[i]); tot = max(tot, f[--h[i]]++); } for (int i = 0; i < n; ++i) ti[i] = h[i]; sort(h, h + n); for (int i = 0; i < n; i++) if (h[i] != ti[i]) gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i); function<void(int)> dfs = [&](int u) { ed[h[u]].erase(u); sum++; gi[ti[u]].erase(u); if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin()); }; for (int i : seet) if (gi[ti[i]].count(i)) { sum = 0; dfs(i); if (sum % 2 == 0) ++ans; } bool p = 1; if (tot > 1 || ans % 2 == 0) p = 0; if (!p) printf("YES\n"); else printf("NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 500000 + 50; int T, n, h[maxn], f[maxn], tot, ti[maxn]; int ans, sum; int main() { scanf("%d", &T); for (int oo = 1; oo <= T; ++oo) { scanf("%d", &n); tot = 0; vector<bool> used(n); vector<set<int>> gi(n), ed(n); vector<int> seet; ans = 0, sum = 0; for (int i = 0; i < n; i++) f[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &h[i]); tot = max(tot, ++f[--h[i]]); } for (int i = 0; i < n; ++i) ti[i] = h[i]; sort(h, h + n); for (int i = 0; i < n; i++) if (h[i] != ti[i]) gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i); function<void(int)> dfs = [&](int u) { ed[h[u]].erase(u); sum++; gi[ti[u]].erase(u); if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin()); }; for (int i : seet) if (gi[ti[i]].count(i)) { sum = 0; dfs(i); if (sum % 2 == 0) ++ans; } bool p = 1; if (tot > 1 || ans % 2 == 0) p = 0; if (!p) printf("YES\n"); else printf("NO\n"); } return 0; }
48	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e5 + 5; int d[maxn]; unordered_map<int, int> mp; struct node { int id; int va; }; vector<node> vec; bool cmp(node a, node b) { return a.va < b.va; } bool vis[maxn]; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { vec.clear(); mp.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { int x; cin >> x; mp[x]++; vis[i] = 0; vec.push_back({i, x}); } bool flag = false; for (auto i : mp) { if (i.second >= 2) { cout << "NO" << '\n'; ; flag = true; break; } } if (flag) continue; sort(vec.begin(), vec.end(), cmp); for (int i = 0; i < n; i++) { d[vec[i].id] = i + 1; } int cnt = 0; for (int i = 1; i <= n; i++) { if (vis[i]) continue; int to = i; vis[to] = true; to = d[to]; int ta = 1; while (to != i) { vis[to] = true; ta++; to = d[to]; } if (ta & 1) ; else cnt++; } cout << ((cnt & 1) ? "NO" : "YES") << '\n'; ; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e5 + 5; int d[maxn]; unordered_map<int, int> mp; struct node { int id; int va; }; vector<node> vec; bool cmp(node a, node b) { return a.va < b.va; } bool vis[maxn]; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { vec.clear(); mp.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { int x; cin >> x; mp[x]++; vis[i] = 0; vec.push_back({i, x}); } bool flag = false; for (auto i : mp) { if (i.second >= 2) { cout << "YES" << '\n'; ; flag = true; break; } } if (flag) continue; sort(vec.begin(), vec.end(), cmp); for (int i = 0; i < n; i++) { d[vec[i].id] = i + 1; } int cnt = 0; for (int i = 1; i <= n; i++) { if (vis[i]) continue; int to = i; vis[to] = true; to = d[to]; int ta = 1; while (to != i) { vis[to] = true; ta++; to = d[to]; } if (ta & 1) ; else cnt++; } cout << ((cnt & 1) ? "NO" : "YES") << '\n'; ; } return 0; }
48	 #include <bits/stdc++.h> using namespace std; const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007; long long q, n, a[NMX], A[NMX], kq; bool dd[NMX], YES; void update(long long x) { while (x > 0) { A[x]++; x -= ((x) & (-(x))); } } long long get(long long x) { long long res = 0; while (x < NMX) { res += A[x]; x += ((x) & (-(x))); } return res; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cin >> q; while (q--) { cin >> n; for (int i = 1; i <= (int)(n); i++) { cin >> a[i]; A[i] = 0; dd[i] = false; } YES = false; for (int i = 1; i <= (int)(n); i++) { if (dd[a[i]]) { cout << "YES\n"; YES = true; break; } dd[a[i]] = true; } if (YES) continue; kq = 0; for (int i = 1; i <= (int)(n); i++) { kq += get(a[i] + 1); update(a[i]); } cout << (kq % 2 == 0 ? "YES\n" : "NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007; long long q, n, a[NMX], A[NMX], kq; bool dd[NMX], YES; void update(long long x) { while (x > 0) { A[x]++; x -= ((x) & (-(x))); } } long long get(long long x) { long long res = 0; while (x <= n) { res += A[x]; x += ((x) & (-(x))); } return res; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cin >> q; while (q--) { cin >> n; for (int i = 1; i <= (int)(n); i++) { cin >> a[i]; A[i] = 0; dd[i] = false; } YES = false; for (int i = 1; i <= (int)(n); i++) { if (dd[a[i]]) { cout << "YES\n"; YES = true; break; } dd[a[i]] = true; } if (YES) continue; kq = 0; for (int i = 1; i <= (int)(n); i++) { kq += get(a[i] + 1); update(a[i]); } cout << (kq % 2 == 0 ? "YES\n" : "NO\n"); } return 0; }
33	 #include <bits/stdc++.h> using namespace std; const int MAXN = 1e5 + 10; bool dp[MAXN][601]; int n, a[MAXN], minv[601]; void solve() { cin >> n; for (int i = (1); i <= (n); ++i) cin >> a[i]; for (int i = (0); i <= (511); ++i) { minv[i] = 0x7f7f7f7f; } dp[0][0] = 1; minv[0] = -1; for (int i = (1); i <= (n); ++i) { for (int j = (0); j <= (16); ++j) if ((a[i] ^ j) <= 16) { dp[i][j] |= (dp[i - 1][j]); dp[i][j] |= (minv[a[i] ^ j] < a[i]); if ((minv[a[i] ^ j] < a[i])) minv[j] = min(minv[j], a[i]); } dp[i][a[i]] = 1; minv[a[i]] = min(minv[a[i]], a[i]); } int cnt = 0; for (int i = (0); i <= (511); ++i) cnt += (dp[n][i]); cout << cnt << '\n'; for (int i = (0); i <= (511); ++i) if (dp[n][i]) { cout << i << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int _; _ = 1; while (_--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 1e5 + 10; bool dp[MAXN][601]; int n, a[MAXN], minv[601]; void solve() { cin >> n; for (int i = (1); i <= (n); ++i) cin >> a[i]; for (int i = (0); i <= (511); ++i) { minv[i] = 0x7f7f7f7f; } dp[0][0] = 1; minv[0] = -1; for (int i = (1); i <= (n); ++i) { for (int j = (0); j <= (511); ++j) if ((a[i] ^ j) <= 511) { dp[i][j] |= (dp[i - 1][j]); dp[i][j] |= (minv[a[i] ^ j] < a[i]); if ((minv[a[i] ^ j] < a[i])) minv[j] = min(minv[j], a[i]); } dp[i][a[i]] = 1; minv[a[i]] = min(minv[a[i]], a[i]); } int cnt = 0; for (int i = (0); i <= (511); ++i) cnt += (dp[n][i]); cout << cnt << '\n'; for (int i = (0); i <= (511); ++i) if (dp[n][i]) { cout << i << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(0); int _; _ = 1; while (_--) { solve(); } return 0; }
33	 #include <bits/stdc++.h> long long bigmod(long long a, long long b) { if (b == 0) return 1; long long ret = bigmod(a, b / 2); return ret * ret % 1000000007 * (b % 2 ? a : 1) % 1000000007; } using namespace std; int n; int v[200010]; int dp[520], cp[520]; vector<int> A; int main() { ios::sync_with_stdio(false); cin.tie(0); cin >> n; for (int i = 1; i <= n; i++) cin >> v[i]; for (int i = 1; i <= 512; i++) cp[i] = 1e9; dp[0] = 1; for (int i = 1; i <= n; i++) { for (int h = 512; h >= 0; h--) { if (dp[h] == 1 && cp[h] < v[i] && cp[h ^ v[i]] > v[i]) { dp[h ^ v[i]] = 1; cp[h ^ v[i]] = v[i]; } } } for (int i = 0; i <= 500; i++) if (dp[i]) A.push_back(i); cout << A.size() << "\n"; for (auto i : A) cout << i << " "; }	 #include <bits/stdc++.h> long long bigmod(long long a, long long b) { if (b == 0) return 1; long long ret = bigmod(a, b / 2); return ret * ret % 1000000007 * (b % 2 ? a : 1) % 1000000007; } using namespace std; int n; int v[200010]; int dp[520], cp[520]; vector<int> A; int main() { ios::sync_with_stdio(false); cin.tie(0); cin >> n; for (int i = 1; i <= n; i++) cin >> v[i]; for (int i = 1; i <= 512; i++) cp[i] = 1e9; dp[0] = 1; for (int i = 1; i <= n; i++) { for (int h = 512; h >= 0; h--) { if (dp[h] == 1 && cp[h] < v[i] && cp[h ^ v[i]] > v[i]) { dp[h ^ v[i]] = 1; cp[h ^ v[i]] = v[i]; } } } for (int i = 0; i <= 512; i++) if (dp[i]) A.push_back(i); cout << A.size() << "\n"; for (auto i : A) cout << i << " "; }
33	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; long long ap[100005], bp[550][550]; vector<int> ve; int main() { int n; for (int i = 0; i <= 510; i++) bp[i][0] = 1; cin >> n; for (int i = 1; i <= n; i++) { cin >> ap[i]; if (ap[i] == 0) continue; for (int j = 0; j <= 500; j++) { if (!bp[ap[i]][j]) continue; if (bp[ap[i]][j ^ ap[i]]) continue; bp[ap[i]][j ^ ap[i]] = 1; for (int k = ap[i] + 1; k <= 500; k++) { bp[k][j ^ ap[i]] = 1; } } } int fl = 0; for (int i = 0; i <= 500; i++) { if (bp[500][i] == 1) { ve.push_back(i); } } int len = ve.size(); cout << len << endl; for (int i = 0; i < len; i++) { if (i != 0) cout << " "; cout << ve[i]; } cout << endl; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; long long ap[100005], bp[550][550]; vector<int> ve; int main() { int n; for (int i = 0; i <= 500; i++) bp[i][0] = 1; cin >> n; for (int i = 1; i <= n; i++) { cin >> ap[i]; if (ap[i] == 0) continue; for (int j = 0; j <= 512; j++) { if (!bp[ap[i]][j]) continue; if (bp[ap[i]][j ^ ap[i]]) continue; bp[ap[i]][j ^ ap[i]] = 1; for (int k = ap[i] + 1; k <= 512; k++) { bp[k][j ^ ap[i]] = 1; } } } int fl = 0; for (int i = 0; i <= 512; i++) { if (bp[500][i] == 1) { ve.push_back(i); } } int len = ve.size(); cout << len << endl; for (int i = 0; i < len; i++) { if (i != 0) cout << " "; cout << ve[i]; } cout << endl; }
34	 #include <bits/stdc++.h> using namespace std; vector<int> idxs[8192]; int dp[8192]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); memset(dp, 0x7f, sizeof(dp)); int n; cin >> n; for (int i = 0; i < n; i++) { int x; cin >> x; idxs[x].emplace_back(i); } dp[0] = -1; for (int i = 0; i < 8192; i++) { for (int j = 0; j < i; j++) { auto it = upper_bound(idxs[i].begin(), idxs[i].end(), dp[j]); if (it == idxs[i].end()) continue; dp[j ^ i] = min(dp[j ^ i], *it); } } int ans = 0; for (int i = 0; i < 8192; i++) { if (dp[i] != 0x7f7f7f7f) ++ans; } cout << ans << "\n"; for (int i = 0; i < 8192; i++) { if (dp[i] != 0x7f7f7f7f) cout << i << " "; } cout << "\n"; }	 #include <bits/stdc++.h> using namespace std; vector<int> idxs[8192]; int dp[8192]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); memset(dp, 0x7f, sizeof(dp)); int n; cin >> n; for (int i = 0; i < n; i++) { int x; cin >> x; idxs[x].emplace_back(i); } dp[0] = -1; for (int i = 0; i < 8192; i++) { for (int j = 0; j < 8192; j++) { auto it = upper_bound(idxs[i].begin(), idxs[i].end(), dp[j]); if (it == idxs[i].end()) continue; dp[j ^ i] = min(dp[j ^ i], *it); } } int ans = 0; for (int i = 0; i < 8192; i++) { if (dp[i] != 0x7f7f7f7f) ++ans; } cout << ans << "\n"; for (int i = 0; i < 8192; i++) { if (dp[i] != 0x7f7f7f7f) cout << i << " "; } cout << "\n"; }
34	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return x * f; } vector<int> g[10010]; int r[10010]; bool ans[10010]; const int M = 1 << 13 - 1; int main() { int n = read(); ans[0] = 1; for (register int i = 0; i <= M; ++i) g[i].push_back(0), r[i] = M; while (n--) { int x = read(); for (int y : g[x]) { int to = x ^ y; ans[to] = 1; for (register int i = x + 1; i <= r[to]; ++i) g[i].push_back(to); r[to] = min(r[to], x); } g[x] = {}; } int k = 0; for (register int i = 0; i <= M; ++i) k += ans[i]; printf("%d\n", k); for (register int i = 0; i <= M; ++i) if (ans[i]) printf("%d ", i); return 0; }	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return x * f; } vector<int> g[10010]; int r[10010]; bool ans[10010]; const int M = (1 << 13) - 1; int main() { int n = read(); ans[0] = 1; for (register int i = 0; i <= M; ++i) g[i].push_back(0), r[i] = M; while (n--) { int x = read(); for (int y : g[x]) { int to = x ^ y; ans[to] = 1; for (register int i = x + 1; i <= r[to]; ++i) g[i].push_back(to); r[to] = min(r[to], x); } g[x] = {}; } int k = 0; for (register int i = 0; i <= M; ++i) k += ans[i]; printf("%d\n", k); for (register int i = 0; i <= M; ++i) if (ans[i]) printf("%d ", i); return 0; }
34	 #include <bits/stdc++.h> using namespace std; const int N = 8192; const int maxn = 2e5 + 10; const int mod = 1e9 + 7; inline int read() { int x = 0, f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = (x << 1) + (x << 3) + c - '0'; c = getchar(); } return x * f; } vector<int> v[N]; int n, m, a[maxn], b[N], st[N], rec[N], ans; int main() { n = read(); ans = st[0] = 1; for (int i = 0; i < N; i++) v[i].push_back(0), rec[i] = N - 1; for (int i = 1; i <= n; i++) { a[i] = read(); for (auto x : v[a[i]]) { int u = x ^ a[i]; if (!st[u]) st[u] = 1, ++ans; if (a[i] <= rec[u]) { for (int j = a[i] + 1; j <= rec[u]; j++) v[j].push_back(u); rec[u] = a[i]; } } v[a[i]].clear(); } printf("%d\n", ans); for (int i = 0; i < N; i++) if (st[i]) printf("%d ", i); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 8192; const int maxn = 1e6 + 10; const int mod = 1e9 + 7; inline int read() { int x = 0, f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') { x = (x << 1) + (x << 3) + c - '0'; c = getchar(); } return x * f; } vector<int> v[N]; int n, m, a[maxn], b[N], st[N], rec[N], ans; int main() { n = read(); ans = st[0] = 1; for (int i = 0; i < N; i++) v[i].push_back(0), rec[i] = N - 1; for (int i = 1; i <= n; i++) { a[i] = read(); for (auto x : v[a[i]]) { int u = x ^ a[i]; if (!st[u]) st[u] = 1, ++ans; if (a[i] <= rec[u]) { for (int j = a[i] + 1; j <= rec[u]; j++) v[j].push_back(u); rec[u] = a[i] - 1; } } v[a[i]].clear(); } printf("%d\n", ans); for (int i = 0; i < N; i++) if (st[i]) printf("%d ", i); return 0; }
34	 #include <bits/stdc++.h> using namespace std; const int N = (int)1e6 + 50, M = 8200; int n, a[N]; vector<int> xs[M]; vector<pair<int, int> > ear; bool vis[M]; int main() { ios::sync_with_stdio(false); cin.tie(NULL); cin >> n; for (int i = 0; i < (n); ++i) cin >> a[i], xs[a[i]].push_back(i); ear.push_back({0, 0}); for (int v = 0; v < (M); ++v) { fill(vis, vis + M, 0); vector<pair<int, int> > gear; int c = 0; for (int i : xs[v]) { int r = c; while (r < (int)(ear).size() && ear[r].second < i) { if (!vis[ear[r].first]) { gear.push_back({ear[r]}); vis[ear[r].first] = true; } r++; } for (int j = c; j < r; j++) { int nxt = ear[j].first ^ v; if (!vis[nxt]) { gear.push_back({nxt, i}); vis[nxt] = true; } } c = r; } while (c < (int)(ear).size()) { if (!vis[ear[c].first]) { gear.push_back({ear[c]}); vis[ear[c].first] = true; } c++; } ear = gear; } sort(begin(ear), end(ear)); cout << (int)(ear).size() << '\n'; for (int i = 0; i < ((int)(ear).size()); ++i) cout << ear[i].first << " "; cout << endl; }	 #include <bits/stdc++.h> using namespace std; const int N = (int)1e6 + 50, M = 8200; int n, a[N]; vector<int> xs[M]; vector<pair<int, int> > ear; bool vis[M]; int main() { ios::sync_with_stdio(false); cin.tie(NULL); cin >> n; for (int i = 0; i < (n); ++i) cin >> a[i], xs[a[i]].push_back(i); ear.push_back({0, -1}); for (int v = 0; v < (M); ++v) { fill(vis, vis + M, 0); vector<pair<int, int> > gear; int c = 0; for (int i : xs[v]) { int r = c; while (r < (int)(ear).size() && ear[r].second < i) { if (!vis[ear[r].first]) { gear.push_back({ear[r]}); vis[ear[r].first] = true; } r++; } for (int j = c; j < r; j++) { int nxt = ear[j].first ^ v; if (!vis[nxt]) { gear.push_back({nxt, i}); vis[nxt] = true; } } c = r; } while (c < (int)(ear).size()) { if (!vis[ear[c].first]) { gear.push_back({ear[c]}); vis[ear[c].first] = true; } c++; } ear = gear; } sort(begin(ear), end(ear)); cout << (int)(ear).size() << '\n'; for (int i = 0; i < ((int)(ear).size()); ++i) cout << ear[i].first << " "; cout << endl; }
36	 #include <bits/stdc++.h> using namespace std; bool isPrime(int n) { for (int i = 2; i * i < n; i++) { if (n % i == 0) return false; } return true; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; long long test = 1; cin >> test; while (test--) { int n; cin >> n; int sum = 0; vector<int> arr(n); int index = -1; for (int i = 0; i < n; i++) { cin >> arr[i]; sum += arr[i]; if (arr[i] % 2) index = i; } int ans = n; if (isPrime(sum)) { sum -= arr[index]; arr[index] = -1; ans--; } cout << ans << "\n"; for (int i = 0; i < n; i++) { if (arr[i] != -1) { cout << i + 1 << " "; } } cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; bool isPrime(int n) { for (int i = 2; i * i <= n; i++) { if (n % i == 0) return false; } return true; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; long long test = 1; cin >> test; while (test--) { int n; cin >> n; int sum = 0; vector<int> arr(n); int index = -1; for (int i = 0; i < n; i++) { cin >> arr[i]; sum += arr[i]; if (arr[i] % 2) index = i; } int ans = n; if (isPrime(sum)) { sum -= arr[index]; arr[index] = -1; ans--; } cout << ans << "\n"; for (int i = 0; i < n; i++) { if (arr[i] != -1) { cout << i + 1 << " "; } } cout << "\n"; } }
36	 #include <bits/stdc++.h> using namespace std; long long prime(long long p) { if (p <= 1) { return 0; } for (long long i = 2; i < sqrt(p); ++i) { if (p % i == 0) { return 0; } } return 1; } void algo() { long long n = 0; cin >> n; vector<long long> v(n, 0); long long sum = 0; long long odd = -1; for (long long i = 0; i < n; ++i) { cin >> v[i]; sum += v[i]; if (v[i] % 2 != 0) { odd = i; } } if (!prime(sum)) { cout << n << endl; for (long long j = 0; j < n; ++j) { cout << j + 1 << " "; } } else { cout << n - 1 << endl; for (long long j = 0; j < n; ++j) { if (j != odd) { cout << j + 1 << " "; } } } cout << endl; } signed main() { long long t = 0; cin >> t; while (t--) { algo(); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long prime(long long p) { if (p <= 1) { return 0; } for (long long i = 2; i <= sqrt(p); ++i) { if (p % i == 0) { return 0; } } return 1; } void algo() { long long n = 0; cin >> n; vector<long long> v(n, 0); long long sum = 0; long long odd = -1; for (long long i = 0; i < n; ++i) { cin >> v[i]; sum += v[i]; if (v[i] % 2 != 0) { odd = i; } } if (!prime(sum)) { cout << n << endl; for (long long j = 0; j < n; ++j) { cout << j + 1 << " "; } } else { cout << n - 1 << endl; for (long long j = 0; j < n; ++j) { if (j != odd) { cout << j + 1 << " "; } } } cout << endl; } signed main() { long long t = 0; cin >> t; while (t--) { algo(); } return 0; }
36	 #include <bits/stdc++.h> using namespace std; const int MAXN = 205; const int MAXP = 20005; int t, n, cnt, sum; bool f; int a[MAXN]; int prime[MAXP]; int isPrime[MAXP]; inline int read() { int x = 0; char c = getchar(); while (c > '9' || c < '0') c = getchar(); while (c <= '9' && c >= '0') { x = x * 10 + c - '0'; c = getchar(); } return x; } void doGetPrime() { prime[++cnt] = 2; isPrime[2] = 1; for (int i = 3; i <= MAXP; i++) { f = true; for (int j = 1; j <= cnt; j++) { if (i % prime[j] == 0) { f = false; break; } } if (f) { prime[++cnt] = i; isPrime[i] = 1; } } } int main(void) { doGetPrime(); t = read(); for (int T = 1; T <= t; T++) { n = read(); sum = 0; for (int i = 1; i <= n; i++) { a[i] = read(); sum += a[i]; } if (!isPrime[sum]) { cout << n << endl; for (int i = 1; i <= n; i++) cout << i << " "; cout << endl; } else { for (int i = 1; i <= n; i++) { if (!isPrime[sum - a[i]]) { cout << n - 1 << endl; for (int j = 1; j <= n; j++) if (1 - j) cout << j << " "; cout << endl; break; } } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 205; const int MAXP = 20005; int t, n, cnt, sum; bool f; int a[MAXN]; int prime[MAXP]; int isPrime[MAXP]; inline int read() { int x = 0; char c = getchar(); while (c > '9' || c < '0') c = getchar(); while (c <= '9' && c >= '0') { x = x * 10 + c - '0'; c = getchar(); } return x; } void doGetPrime() { prime[++cnt] = 2; isPrime[2] = 1; for (int i = 3; i <= MAXP; i++) { f = true; for (int j = 1; j <= cnt; j++) { if (i % prime[j] == 0) { f = false; break; } } if (f) { prime[++cnt] = i; isPrime[i] = 1; } } } int main(void) { doGetPrime(); t = read(); for (int T = 1; T <= t; T++) { n = read(); sum = 0; for (int i = 1; i <= n; i++) { a[i] = read(); sum += a[i]; } if (!isPrime[sum]) { cout << n << endl; for (int i = 1; i <= n; i++) cout << i << " "; cout << endl; } else { for (int i = 1; i <= n; i++) { if (!isPrime[sum - a[i]]) { cout << n - 1 << endl; for (int j = 1; j <= n; j++) if (i - j) cout << j << " "; cout << endl; break; } } } } return 0; }
36	 #include <bits/stdc++.h> using namespace std; const long long inf = 1e18; const long long mod = 1e9 + 7; bool isComposite(int n) { if (n <= 1) return false; if (n <= 3) return false; if (n % 2 == 0 || n % 3 == 0) return true; for (int i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0) return true; return false; } void solve() { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) { cin >> v[i]; } int sum = accumulate(v.begin(), v.end(), 0); int temp; if (isComposite(sum)) { cout << n; cout << "\n"; for (int i = 0; i < n; i++) { cout << i + 1 << " "; } return; } else { cout << n - 1; cout << "\n"; for (int i = 0; i < n; i++) { if (!isComposite(sum - v[i])) { temp = v[i]; } } for (int i = 0; i < n; i++) { if (v[i] == temp) { continue; } cout << i + 1 << " "; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int tt; cin >> tt; for (int i = 0; i < tt; i++) { solve(); cout << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long inf = 1e18; const long long mod = 1e9 + 7; bool isComposite(int n) { if (n <= 1) return false; if (n <= 3) return false; if (n % 2 == 0 || n % 3 == 0) return true; for (int i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0) return true; return false; } void solve() { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) { cin >> v[i]; } int sum = accumulate(v.begin(), v.end(), 0); int temp; if (isComposite(sum)) { cout << n; cout << "\n"; for (int i = 0; i < n; i++) { cout << i + 1 << " "; } return; } else { cout << n - 1; cout << "\n"; for (int i = 0; i < n; i++) { if (isComposite(sum - v[i])) { temp = v[i]; } } for (int i = 0; i < n; i++) { if (v[i] == temp) { continue; } cout << i + 1 << " "; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int tt; cin >> tt; for (int i = 0; i < tt; i++) { solve(); cout << endl; } }
36	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; void SADIEM() { std::ios_base::sync_with_stdio(NULL); cin.tie(0); cout.tie(0); } bool iscomposite(int x) { if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) || (x != 5 && !(x % 3))) return true; for (int i = 7; i <= x / i; i++) if (!(x % i)) return true; return false; } int main() { int t; cin >> t; while (t--) { int n, sum = 0; cin >> n; vector<pair<int, int>> v(n); for (int i = 0; i < n && cin >> v[i].first; i++) v[i].second = i + 1, sum += v[i].first; if (iscomposite(sum)) { cout << n << "\n"; for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? " " : ""); } else { sort(v.begin(), v.end()); int idx = -1; for (int i = 0; i < n; i++) { if (iscomposite(sum - v[i].first)) { idx = i; break; } } cout << n - 1 << "\n"; for (int i = 0; i < n; i++) if (idx != i) cout << v[i].second << " "; } if (t) cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; void SADIEM() { std::ios_base::sync_with_stdio(NULL); cin.tie(0); cout.tie(0); } bool iscomposite(int x) { if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) || (x != 5 && !(x % 5))) return true; for (int i = 7; i <= x / i; i++) if (!(x % i)) return true; return false; } int main() { int t; cin >> t; while (t--) { int n, sum = 0; cin >> n; vector<pair<int, int>> v(n); for (int i = 0; i < n && cin >> v[i].first; i++) v[i].second = i + 1, sum += v[i].first; if (iscomposite(sum)) { cout << n << "\n"; for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? " " : ""); } else { sort(v.begin(), v.end()); int idx = -1; for (int i = 0; i < n; i++) { if (iscomposite(sum - v[i].first)) { idx = i; break; } } cout << n - 1 << "\n"; for (int i = 0; i < n; i++) if (idx != i) cout << v[i].second << " "; } if (t) cout << "\n"; } }
36	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; void SADIEM() { std::ios_base::sync_with_stdio(NULL); cin.tie(0); cout.tie(0); } bool iscomposite(int x) { if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) || (x != 5 && !(x % 3))) return true; for (int i = 7; i < x / i; i++) if (!(x % i)) return true; return false; } int main() { int t; cin >> t; while (t--) { int n, sum = 0; cin >> n; vector<pair<int, int>> v(n); for (int i = 0; i < n && cin >> v[i].first; i++) v[i].second = i + 1, sum += v[i].first; if (iscomposite(sum)) { cout << n << "\n"; for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? " " : ""); } else { sort(v.begin(), v.end()); int idx = -1; for (int i = 0; i < n; i++) { if (iscomposite(sum - v[i].first)) { idx = i; break; } } cout << n - 1 << "\n"; for (int i = 0; i < n; i++) if (idx != i) cout << v[i].second << " "; } if (t) cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; void SADIEM() { std::ios_base::sync_with_stdio(NULL); cin.tie(0); cout.tie(0); } bool iscomposite(int x) { if (x < 2 || (x != 2 && !(x & 1)) || (x != 3 && !(x % 3)) || (x != 5 && !(x % 5))) return true; for (int i = 7; i <= x / i; i++) if (!(x % i)) return true; return false; } int main() { int t; cin >> t; while (t--) { int n, sum = 0; cin >> n; vector<pair<int, int>> v(n); for (int i = 0; i < n && cin >> v[i].first; i++) v[i].second = i + 1, sum += v[i].first; if (iscomposite(sum)) { cout << n << "\n"; for (int i = 0; i < n; i++) cout << i + 1 << (i < n - 1 ? " " : ""); } else { sort(v.begin(), v.end()); int idx = -1; for (int i = 0; i < n; i++) { if (iscomposite(sum - v[i].first)) { idx = i; break; } } cout << n - 1 << "\n"; for (int i = 0; i < n; i++) if (idx != i) cout << v[i].second << " "; } if (t) cout << "\n"; } }
37	 #include <bits/stdc++.h> using namespace std; const long long maxn = 100010; const long long INF = 2147483647; long long t, n, m, x, y, z, cnt[maxn]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; for (int i = 1; i <= n; i++) cnt[i] = 0; for (int i = 1; i <= m; i++) { cin >> x >> y >> z; cnt[z]++; } for (int i = 1; i <= n; i++) { if (cnt[i] == 0) { for (int j = 1; j <= n; j++) { if (j == i) continue; cout << j << " " << i << endl; } break; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long maxn = 100010; const long long INF = 2147483647; long long t, n, m, x, y, z, cnt[maxn]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; for (int i = 1; i <= n; i++) cnt[i] = 0; for (int i = 1; i <= m; i++) { cin >> x >> y >> z; cnt[y]++; } for (int i = 1; i <= n; i++) { if (cnt[i] == 0) { for (int j = 1; j <= n; j++) { if (j == i) continue; cout << j << " " << i << endl; } break; } } } return 0; }
37	 #include <bits/stdc++.h> using namespace std; int a[100010]; int main() { int t; cin >> t; while (t--) { long long n, m; cin >> n >> m; for (int i = 1; i <= n; i++) a[i] = 1; while (m--) { int v, s, temp; cin >> v >> s >> temp; a[temp] = 0; } for (int i = 1; i <= n; i++) { if (a[i]) { for (int j = 1; j <= n; j++) { if (i != j) cout << i << " " << j << endl; } break; } } } }	 #include <bits/stdc++.h> using namespace std; int a[100010]; int main() { int t; cin >> t; while (t--) { long long n, m; cin >> n >> m; for (int i = 1; i <= n; i++) a[i] = 1; while (m--) { int v, s, temp; cin >> v >> s >> temp; a[s] = 0; } for (int i = 1; i <= n; i++) { if (a[i]) { for (int j = 1; j <= n; j++) { if (i != j) cout << i << " " << j << endl; } break; } } } }
37	 #include <bits/stdc++.h> using namespace std; signed main() { long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; long long find[n + 1]; memset(find, 0, sizeof(find)); for (long long i = 1; i <= n; i++) { long long a, b, c; cin >> a >> b >> c; find[b]++; } long long i; for (i = 1; i <= n; i++) { if (!find[i]) { break; } } for (long long j = 1; j <= n; j++) { if (j != i) { cout << i << " " << j << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; signed main() { long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; long long find[n + 1]; memset(find, 0, sizeof(find)); for (long long i = 1; i <= m; i++) { long long a, b, c; cin >> a >> b >> c; find[b]++; } long long i; for (i = 1; i <= n; i++) { if (!find[i]) { break; } } for (long long j = 1; j <= n; j++) { if (j != i) { cout << i << " " << j << endl; } } } return 0; }
37	 #include <bits/stdc++.h> using namespace std; bool notprime(int k) { if (k == 0 || k == 1 || k == 2) { return false; } int t = int(sqrt(k)) + 1; for (int i = 2; i <= t; i++) { if (k % i == 0 && i != k) { return true; } } return false; } pair<bool, vector<int>> isit(int k, int accum, vector<int> v) { vector<int> blankvector(0); if (k > v.size()) { return {false, blankvector}; } if (v.size() == k) { vector<int> answer; for (int i = 0; i < k; i++) { answer.push_back(i); } if (notprime(accum + accumulate(v.begin(), v.end(), 0))) { return {true, answer}; } else { return {false, blankvector}; } } else { int number = v[v.size() - 1]; int position = int(v.size() - 1); v.pop_back(); if (isit(k - 1, accum + number, v).first) { vector<int> answer = isit(k - 1, accum + number, v).second; answer.push_back(position); return {true, answer}; } if (isit(k, accum, v).first) { return {true, isit(k, accum, v).second}; } else { return {false, blankvector}; } } } int main() { int t; cin >> t; for (int i = 0; i < t; i++) { int n, m; cin >> n >> m; vector<int> v(n); for (int i = 0; i < m; i++) { int a, b, c; cin >> a >> b >> c; v[b]++; } for (int i = 0; i < n; i++) { if (v[i] == 0) { for (int j = 1; j <= n; j++) { if (j != i + 1) { cout << j << " " << i + 1 << endl; } } break; } } } }	 #include <bits/stdc++.h> using namespace std; bool notprime(int k) { if (k == 0 || k == 1 || k == 2) { return false; } int t = int(sqrt(k)) + 1; for (int i = 2; i <= t; i++) { if (k % i == 0 && i != k) { return true; } } return false; } pair<bool, vector<int>> isit(int k, int accum, vector<int> v) { vector<int> blankvector(0); if (k > v.size()) { return {false, blankvector}; } if (v.size() == k) { vector<int> answer; for (int i = 0; i < k; i++) { answer.push_back(i); } if (notprime(accum + accumulate(v.begin(), v.end(), 0))) { return {true, answer}; } else { return {false, blankvector}; } } else { int number = v[v.size() - 1]; int position = int(v.size() - 1); v.pop_back(); if (isit(k - 1, accum + number, v).first) { vector<int> answer = isit(k - 1, accum + number, v).second; answer.push_back(position); return {true, answer}; } if (isit(k, accum, v).first) { return {true, isit(k, accum, v).second}; } else { return {false, blankvector}; } } } int main() { int t; cin >> t; for (int i = 0; i < t; i++) { int n, m; cin >> n >> m; vector<int> v(n); for (int i = 0; i < m; i++) { int a, b, c; cin >> a >> b >> c; v[b - 1]++; } for (int i = 0; i < n; i++) { if (v[i] == 0) { for (int j = 1; j <= n; j++) { if (j != i + 1) { cout << j << " " << i + 1 << endl; } } break; } } } }
37	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; vector<int> v(n + 1, 0); int i; for (int i = 0; i < m; i++) { int a, b, c; cin >> a >> b >> c; v[b] = 1; } for (i = 1; i <= n; i++) if (!v[i]) break; for (int j = i; j <= n; j++) if (i != j) cout << i << " " << j << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; vector<int> v(n + 1, 0); int i; for (int i = 0; i < m; i++) { int a, b, c; cin >> a >> b >> c; v[b] = 1; } for (i = 1; i <= n; i++) if (!v[i]) break; for (int j = 1; j <= n; j++) if (i != j) cout << i << " " << j << endl; } return 0; }
37	 #include <bits/stdc++.h> using namespace std; bool mark[100005]; int main() { int t; scanf("%d", &t); while (t--) { int n, m; memset(mark, 0, sizeof(mark)); scanf("%d%d", &n, &m); for (int i = 1; i <= m; i++) { int a, b, c; scanf("%d%d%d", &a, &b, &c); mark[a] = 1; } int st = 1; for (int i = 1; i <= n; i++) { if (!mark[i]) { st = i; break; } } for (int i = 1; i <= n; i++) { if (i == st) continue; printf("%d %d\n", st, i); } } return 0; }	 #include <bits/stdc++.h> using namespace std; bool mark[100005]; int main() { int t; scanf("%d", &t); while (t--) { int n, m; memset(mark, 0, sizeof(mark)); scanf("%d%d", &n, &m); for (int i = 1; i <= m; i++) { int a, b, c; scanf("%d%d%d", &a, &b, &c); mark[b] = 1; } int st = 1; for (int i = 1; i <= n; i++) { if (!mark[i]) { st = i; break; } } for (int i = 1; i <= n; i++) { if (i == st) continue; printf("%d %d\n", st, i); } } return 0; }
38	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); int n, m; cin >> n >> m; vector<string> mp(n); for (int i = 0; i < n; i++) cin >> mp[i]; vector<int> bc; for (int i = 0; i < m - 1; i++) { for (int j = 1; j < n; j++) { if (mp[j][i] == 'X' && mp[j - 1][i + 1] == 'X') { bc.push_back(i); break; } } } bc.push_back(n + 1); int q; cin >> q; while (q--) { int li, ri; cin >> li >> ri; li--; ri--; int l = 0, r = bc.size() - 1; while (l != r) { int m = (l + r) / 2; if (li <= bc[m]) r = m; else l = m + 1; } if (bc[l] + 1 <= ri) cout << "NO\n"; else cout << "YES\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); int n, m; cin >> n >> m; vector<string> mp(n); for (int i = 0; i < n; i++) cin >> mp[i]; vector<int> bc; for (int i = 0; i < m - 1; i++) { for (int j = 1; j < n; j++) { if (mp[j][i] == 'X' && mp[j - 1][i + 1] == 'X') { bc.push_back(i); break; } } } bc.push_back(m + 1); int q; cin >> q; while (q--) { int li, ri; cin >> li >> ri; li--; ri--; int l = 0, r = bc.size() - 1; while (l != r) { int m = (l + r) / 2; if (li <= bc[m]) r = m; else l = m + 1; } if (bc[l] + 1 <= ri) cout << "NO\n"; else cout << "YES\n"; } return 0; }
39	 #include <bits/stdc++.h> using namespace std; bool com(pair<int, int> x, pair<int, int> y) { if (x.first == y.first) return x.second < y.second; return x.first < y.first; } long long int power(long long int x, long long int y) { long long int prod = 1; while (y) { if (y & 1) prod = (prod * x) % 1000000007; x = (x * x) % 1000000007; y /= 2; } return prod; } const int N = 2e5 + 7; int tc = 1; void solve() { int n; cin >> n; vector<int> ans(n + 1); ans[n] = n; for (int i = n; i > 1; i--) { cout << "? "; for (int j = 1; j < n; j++) { cout << 1 << " "; } cout << i << endl; int x; cin >> x; if (x == 0) continue; ans[n] = n + 1 - i; break; } for (int i = n - 1; i > 0; i--) { if (ans[n] == i) continue; cout << "? "; for (int j = 1; j < n; j++) { cout << n + 1 - i << " "; } cout << n + 1 - ans[n] << endl; int x; cin >> x; ans[x] = i; } cout << "! "; for (int i = 1; i <= n; i++) cout << ans[i] << " "; cout << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; bool com(pair<int, int> x, pair<int, int> y) { if (x.first == y.first) return x.second < y.second; return x.first < y.first; } long long int power(long long int x, long long int y) { long long int prod = 1; while (y) { if (y & 1) prod = (prod * x) % 1000000007; x = (x * x) % 1000000007; y /= 2; } return prod; } const int N = 2e5 + 7; int tc = 1; void solve() { int n; cin >> n; vector<int> ans(n + 1); ans[n] = n; for (int i = n; i > 1; i--) { cout << "? "; for (int j = 1; j < n; j++) { cout << 1 << " "; } cout << i << endl; int x; cin >> x; if (x == 0) continue; ans[n] = n + 1 - i; break; } for (int i = n; i > 0; i--) { if (ans[n] == i) continue; cout << "? "; for (int j = 1; j < n; j++) { cout << n + 1 - i << " "; } cout << n + 1 - ans[n] << endl; int x; cin >> x; ans[x] = i; } cout << "! "; for (int i = 1; i <= n; i++) cout << ans[i] << " "; cout << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t = 1; while (t--) solve(); return 0; }
39	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n, a[N], b[N], pos, lst[N], cnt, last, Last, ans[N]; bool vis[N]; int main() { ios::sync_with_stdio(0); cin >> n; for (int i = n; i >= 1; --i) { if (vis[i]) continue; cnt = 1; pos = i; while (pos) { cnt++; if (cnt == n + 1) { cout << "! "; for (int i = 1; i <= n; ++i) cout << i << " "; cout << endl; return 0; } Last = pos; cout << "? "; for (int j = 1; j < i; ++j) cout << cnt << " "; cout << 1 << " "; for (int j = i + 1; j <= n; ++j) cout << cnt << " "; cout << endl; cout.flush(); cin >> pos; if (pos == i) { lst[last] = pos; break; } else if (pos != 0) lst[pos] = Last; vis[pos] = 1; } last = i; } int tmp = 0; memset(vis, 0, sizeof(vis)); for (int i = 1; i <= n; ++i) vis[lst[i]] = 1; for (int i = 1; i <= n; ++i) if (!vis[i]) { tmp = i; break; } for (int i = 1; i <= n; ++i) ans[tmp] = i, tmp = lst[tmp]; cout << "! "; for (int i = 1; i <= n; ++i) cout << ans[i] << " "; cout << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n, a[N], b[N], pos, lst[N], cnt, last, Last, ans[N]; bool vis[N]; int main() { ios::sync_with_stdio(0); cin >> n; for (int i = n; i >= 1; --i) { if (vis[i]) continue; cnt = 1; pos = i; while (pos) { cnt++; if (cnt == n + 1) { cout << "! "; for (int i = 1; i <= n; ++i) cout << i << " "; cout << endl; return 0; } Last = pos; cout << "? "; for (int j = 1; j < i; ++j) cout << cnt << " "; cout << 1 << " "; for (int j = i + 1; j <= n; ++j) cout << cnt << " "; cout << endl; cout.flush(); cin >> pos; if (pos == i) { lst[last] = Last; break; } else if (pos != 0) lst[pos] = Last; vis[pos] = 1; } last = i; } int tmp = 0; memset(vis, 0, sizeof(vis)); for (int i = 1; i <= n; ++i) vis[lst[i]] = 1; for (int i = 1; i <= n; ++i) if (!vis[i]) { tmp = i; break; } for (int i = 1; i <= n; ++i) ans[tmp] = i, tmp = lst[tmp]; cout << "! "; for (int i = 1; i <= n; ++i) cout << ans[i] << " "; cout << endl; return 0; }
39	 #include <bits/stdc++.h> using namespace std; int query(vector<int>& v) { cout << "? "; for (auto& x : v) { cout << x << " "; } cout << endl; int a; cin >> a; return a; } void solve(int n) { int x = 1; vector<int> v(n, 1); for (int i = n; i >= 2; i--) { for (int j = 0; j < n - 1; j++) { v[j] = i; } int a = query(v); if (a == 0) continue; x = a; break; } vector<int> ans(n, -1); ans[n - 1] = x; for (int i = 0; i < n; i++) { v[i] = x; } for (int i = 1; i <= n; i++) { if (i == x) continue; v[n - 1] = i; int index = query(v); ans[index - 1] = i; } cout << "! "; for (auto& y : ans) { cout << y << " "; } cout << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; while (t--) { int n; cin >> n; solve(n); } }	 #include <bits/stdc++.h> using namespace std; int query(vector<int>& v) { cout << "? "; for (auto& x : v) { cout << x << " "; } cout << endl; int a; cin >> a; return a; } void solve(int n) { int x = 1; vector<int> v(n, 1); for (int i = n; i >= 2; i--) { for (int j = 0; j < n - 1; j++) { v[j] = i; } int a = query(v); if (a == 0) continue; x = i; break; } vector<int> ans(n, -1); ans[n - 1] = x; for (int i = 0; i < n; i++) { v[i] = x; } for (int i = 1; i <= n; i++) { if (i == x) continue; v[n - 1] = i; int index = query(v); ans[index - 1] = i; } cout << "! "; for (auto& y : ans) { cout << y << " "; } cout << endl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; while (t--) { int n; cin >> n; solve(n); } }
39	 #include <bits/stdc++.h> using namespace std; void run_case(int test) { int n; cin >> n; auto query = [&](vector<int> a) { cout << "? "; for (int e : a) cout << e << ' '; cout << endl; int res; cin >> res; return res - 1; }; vector<int> res(n); for (int i = n; i >= 1; i--) { vector<int> a(n); a[n - 1] = i; for (int j = 0; j + 1 < n; j++) a[i] = 1; int foo = query(a); if (foo == -1) continue; res.back() = n + 1 - i; break; } if (res.back() == 0) res.back() = n; for (int i = 1; i <= n; i++) { if (i == res.back()) continue; int to_n = n + 1 - i; vector<int> a(n, to_n); a.back() = n + 1 - res.back(); int id = query(a); assert(id != -1); res[id] = i; } cout << "! "; for (int e : res) cout << e << ' '; cout << endl; } int32_t main() { ios::sync_with_stdio(false); int tests = 1; for (int test = 1; test <= tests; test++) run_case(test); return 0; }	 #include <bits/stdc++.h> using namespace std; void run_case(int test) { int n; cin >> n; auto query = [&](vector<int> a) { cout << "? "; for (int e : a) cout << e << ' '; cout << endl; int res; cin >> res; return res - 1; }; vector<int> res(n); for (int i = n; i >= 1; i--) { vector<int> a(n); a[n - 1] = i; for (int j = 0; j + 1 < n; j++) a[j] = 1; int foo = query(a); if (foo == -1) continue; res.back() = n + 1 - i; break; } if (res.back() == 0) res.back() = n; for (int i = 1; i <= n; i++) { if (i == res.back()) continue; int to_n = n + 1 - i; vector<int> a(n, to_n); a.back() = n + 1 - res.back(); int id = query(a); assert(id != -1); res[id] = i; } cout << "! "; for (int e : res) cout << e << ' '; cout << endl; } int32_t main() { ios::sync_with_stdio(false); int tests = 1; for (int test = 1; test <= tests; test++) run_case(test); return 0; }
39	 #include <bits/stdc++.h> using namespace std; void solve() { int n, tmp; cin >> n; vector<int> a(n); bool ok = true; int cur = 1; for (int i = 0; i < 2 * n; ++i) { if (!ok && cur >= n) { break; } if (ok && cur >= n) { a[n - 1] = 1; cur = 1; ok = false; } if (ok) { cout << "? "; for (int i = 0; i < n - 1; ++i) { cout << 1 << ' '; } cout << 1 + cur << endl; cin >> tmp; if (tmp == 0) { a[n - 1] = n - i; cur = 1; ok = false; continue; } else { a[tmp - 1] = cur; } } else { cout << "? "; for (int i = 0; i < n - 1; ++i) { cout << 1 + cur << ' '; } cout << 1 << endl; cin >> tmp; if (tmp != 0) { a[tmp - 1] = -cur + 1; } } ++cur; } cout << "! "; for (int i = 0; i < n - 1; ++i) { cout << a[n - 1] + a[i] << ' '; } cout << a[n - 1] << endl; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int tc = 1; for (int t = 1; t <= tc; t++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, tmp; cin >> n; vector<int> a(n); bool ok = true; int cur = 1; for (int i = 0; i < 2 * n; ++i) { if (!ok && cur >= n) { break; } if (ok && cur >= n) { a[n - 1] = 1; cur = 1; ok = false; } if (ok) { cout << "? "; for (int i = 0; i < n - 1; ++i) { cout << 1 << ' '; } cout << 1 + cur << endl; cin >> tmp; if (tmp == 0) { a[n - 1] = n - i; cur = 1; ok = false; continue; } else { a[tmp - 1] = cur; } } else { cout << "? "; for (int i = 0; i < n - 1; ++i) { cout << 1 + cur << ' '; } cout << 1 << endl; cin >> tmp; if (tmp != 0) { a[tmp - 1] = -cur; } } ++cur; } cout << "! "; for (int i = 0; i < n - 1; ++i) { cout << a[n - 1] + a[i] << ' '; } cout << a[n - 1] << endl; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int tc = 1; for (int t = 1; t <= tc; t++) { solve(); } }
39	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; const long long INF = 1e18; long long ceel(long long a, long long b) { return ((a + b - 1ll) / b); } void solve() { long long n; cin >> n; string s; long long ans[n + 1]; long long flag = 0; long long x; long long idx = 1; while (idx < n) { cout << "? "; for (long long i = 0; i < n - 1; i++) cout << idx << ' '; cout << n << '\n'; cout.flush(); cin >> x; if (x) { break; } idx++; } ans[n] = idx; for (long long i = 1; i < n + 1; i++) { cout << '? '; for (long long i = 0; i < n - 1; i++) { cout << idx << " "; } cout << i << '\n'; cout.flush(); cin >> x; ans[x] = i; } cout << "! "; for (long long i = 0; i < n; i++) { cout << ans[i + 1] << " "; } cout << '\n'; cout.flush(); } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long t = 1; for (long long tc = 0; tc < t; tc++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; const long long INF = 1e18; long long ceel(long long a, long long b) { return ((a + b - 1ll) / b); } void solve() { long long n; cin >> n; string s; long long ans[n + 1]; long long flag = 0; long long x; long long idx = 1; while (idx < n) { cout << "? "; for (long long i = 0; i < n - 1; i++) cout << idx << ' '; cout << n << '\n'; cout.flush(); cin >> x; if (x) { break; } idx++; } ans[n] = idx; for (long long i = 1; i < n + 1; i++) { cout << "? "; for (long long i = 0; i < n - 1; i++) { cout << idx << " "; } cout << i << '\n'; cout.flush(); cin >> x; ans[x] = i; } cout << "! "; for (long long i = 0; i < n; i++) { cout << ans[i + 1] << " "; } cout << '\n'; cout.flush(); } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long t = 1; for (long long tc = 0; tc < t; tc++) { solve(); } return 0; }
39	 #include <bits/stdc++.h> using namespace std; const long long N = 1000004; const long long mod = 1000 * 1000 * 1000 + 7; const long long inf = 1000000000; long long n, m, k, z, t, ans, x, y, pat, a[N], b[N]; int main() { cin >> n; a[n - 1] = 1; for (int x = 2; x <= n; x++) { cout << "? "; for (int j = 1; j < n; ++j) cout << 1 << " "; cout << x << endl; cin >> k; if (k == 0) { a[n - 1] = n - x + 2; break; } } for (int i = 1; i <= n; ++i) { if (i == a[n - 1]) continue; cout << "? "; if (i < a[n - 1]) { for (int j = 1; j < n; ++j) cout << a[n - 1] - i << " "; cout << 1 << endl; } else { for (int j = 1; j < n; ++j) cout << 1 << " "; cout << i - a[n - 1] + 1 << endl; } cin >> k; a[k - 1] = i; } cout << "! "; for (int i = 0; i < n; ++i) cout << a[i] << " "; cout << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 1000004; const long long mod = 1000 * 1000 * 1000 + 7; const long long inf = 1000000000; long long n, m, k, z, t, ans, x, y, pat, a[N], b[N]; int main() { cin >> n; a[n - 1] = 1; for (int x = 2; x <= n; x++) { cout << "? "; for (int j = 1; j < n; ++j) cout << 1 << " "; cout << x << endl; cin >> k; if (k == 0) { a[n - 1] = n - x + 2; break; } } for (int i = 1; i <= n; ++i) { if (i == a[n - 1]) continue; cout << "? "; if (i < a[n - 1]) { for (int j = 1; j < n; ++j) cout << a[n - 1] - i + 1 << " "; cout << 1 << endl; } else { for (int j = 1; j < n; ++j) cout << 1 << " "; cout << i - a[n - 1] + 1 << endl; } cin >> k; a[k - 1] = i; } cout << "! "; for (int i = 0; i < n; ++i) cout << a[i] << " "; cout << endl; return 0; }
39	 #include <bits/stdc++.h> using namespace std; const int N = 110; const int mod = 1e9 + 7; int n; int ans[N]; int print(int a, int b) { printf("? "); for (int i = 1; i < n; i++) { printf("%d ", a); } printf("%d\n", b); fflush(stdout); int k; scanf("%d", &k); return k; } int main() { scanf("%d", &n); for (int i = 1; i < n; i++) { int k = print(n, i); if (k != 0) { ans[n] = n - i + 1; break; } } if (ans[n] == 0) ans[n] = 1; int x = n - ans[n] + 1; for (int i = 1; i <= n; i++) { if (i == ans[n]) continue; int k = print(5 - i + 1, x); ans[k] = i; } printf("! "); for (int i = 1; i <= n; i++) { printf("%d ", ans[i]); } }	 #include <bits/stdc++.h> using namespace std; const int N = 110; const int mod = 1e9 + 7; int n; int ans[N]; int print(int a, int b) { printf("? "); for (int i = 1; i < n; i++) { printf("%d ", a); } printf("%d\n", b); fflush(stdout); int k; scanf("%d", &k); return k; } int main() { scanf("%d", &n); for (int i = 1; i < n; i++) { int k = print(n, i); if (k != 0) { ans[n] = n - i + 1; break; } } if (ans[n] == 0) ans[n] = 1; int x = n - ans[n] + 1; for (int i = 1; i <= n; i++) { if (i == ans[n]) continue; int k = print(n - i + 1, x); ans[k] = i; } printf("! "); for (int i = 1; i <= n; i++) { printf("%d ", ans[i]); } }
39	 #include <bits/stdc++.h> using namespace std; const int N = 110; int ans[N], n, pos, last; int main() { ios::sync_with_stdio(0); cin >> n; last = n; for (int i = 1; i <= n; ++i) { cout << "? "; for (int j = 1; j < n; ++j) cout << 1 << " "; cout << i + 1 << endl; cout.flush(); cin >> pos; if (pos == 0) break; ans[pos] = i; } for (int i = n; i > 1; --i) { cout << "? "; for (int j = 1; j < n; ++j) cout << n << " "; cout << i - 1 << endl; cout.flush(); cin >> pos; if (!pos) { last = n - i + 1; break; } ans[pos] = i - n - 1; } cout << "! "; for (int i = 1; i <= n; ++i) cout << ans[i] + last << " "; cout << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 110; int ans[N], n, pos, last; int main() { ios::sync_with_stdio(0); cin >> n; last = n; for (int i = 1; i < n; ++i) { cout << "? "; for (int j = 1; j < n; ++j) cout << 1 << " "; cout << i + 1 << endl; cout.flush(); cin >> pos; if (pos == 0) break; ans[pos] = i; } for (int i = n; i > 1; --i) { cout << "? "; for (int j = 1; j < n; ++j) cout << n << " "; cout << i - 1 << endl; cout.flush(); cin >> pos; if (!pos) { last = n - i + 1; break; } ans[pos] = i - n - 1; } cout << "! "; for (int i = 1; i <= n; ++i) cout << ans[i] + last << " "; cout << endl; return 0; }
41	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg <= k) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg < n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }
41	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg <= n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }	 #include <bits/stdc++.h> using namespace std; int n, k, tt[100005][14], i, ans, j, gg; void cons(int l, int r, int x, int dep) { if (l == r) { return; } int tmp = (r - l + 1) / k, cc = 0; for (int i = l; i <= r; i += tmp) { ++cc; if (x < i + tmp) { tt[x][dep] = cc; cons(i, i + tmp - 1, x, dep + 1); return; } } } int main() { ios::sync_with_stdio(0); cin >> n >> k; gg = 1; while (gg < n) gg = gg * k, ++ans; for (i = 1; i <= n; ++i) { cons(1, gg, i, 1); } cout << ans << "\n"; for (i = 1; i <= n; ++i) { for (j = i + 1; j <= n; ++j) { for (k = 1;; ++k) { if (tt[i][k] != tt[j][k]) { cout << k << " "; break; } } } } }
41	 #include <bits/stdc++.h> template <typename T> bool umin(T &a, const T &b) { return (a > b ? a = b, 1 : 0); } template <typename T> bool umax(T &a, const T &b) { return (a < b ? a = b, 1 : 0); } using namespace std; const int N = 1001; int n, k; int colors[N][N]; int diff = 0; void slv(vector<vector<int> > sts) { if ((int)(sts).size() == 1) return; int i = 0; diff++; vector<vector<int> > nw; while (i < (int)(sts).size()) { vector<int> current; int l = i, r = min((int)(sts).size(), i + k) - 1; for (int x = l; x <= r; ++x) { for (int y = l + 1; y <= r; ++y) { for (auto &a : sts[x]) { for (auto &b : sts[y]) { colors[a][b] = diff; } } } } for (int x = l; x <= r; ++x) { for (auto u : sts[x]) current.push_back(u); } nw.push_back(current); i = r + 1; } slv(nw); } signed main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); cin >> n >> k; vector<vector<int> > sts; for (int i = 0; i < n; ++i) { sts.push_back({i}); } slv(sts); cout << diff << endl; for (int i = 0; i < n; ++i) { for (int j = i + 1; j < n; ++j) { cout << colors[i][j] << ' '; } } return 0; }	 #include <bits/stdc++.h> template <typename T> bool umin(T &a, const T &b) { return (a > b ? a = b, 1 : 0); } template <typename T> bool umax(T &a, const T &b) { return (a < b ? a = b, 1 : 0); } using namespace std; const int N = 1001; int n, k; int colors[N][N]; int diff = 0; void slv(vector<vector<int> > sts) { if ((int)(sts).size() == 1) return; int i = 0; diff++; vector<vector<int> > nw; while (i < (int)(sts).size()) { vector<int> current; int l = i, r = min((int)(sts).size(), i + k) - 1; for (int x = l; x <= r; ++x) { for (int y = x + 1; y <= r; ++y) { for (auto &a : sts[x]) { for (auto &b : sts[y]) { colors[a][b] = diff; } } } } for (int x = l; x <= r; ++x) { for (auto u : sts[x]) current.push_back(u); } nw.push_back(current); i = r + 1; } slv(nw); } signed main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); cin >> n >> k; vector<vector<int> > sts; for (int i = 0; i < n; ++i) { sts.push_back({i}); } slv(sts); cout << diff << endl; for (int i = 0; i < n; ++i) { for (int j = i + 1; j < n; ++j) { cout << colors[i][j] << ' '; } } return 0; }
41	 #include <bits/stdc++.h> using namespace std; int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La; int main() { register int i, j; scanf("%d%d", &n, &k); now = 1; while (now <= n) { La = now; now *= k; cnt++; for (i = 1; i <= n; i++) { for (j = (i - 1) / La * La + La + 1; j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now) : (n)); j++) A[i][j] = cnt; } } printf("%d\n", cnt); for (i = 1; i <= n; i++) for (j = i + 1; j <= n; j++) printf("%d ", A[i][j]); }	 #include <bits/stdc++.h> using namespace std; int n, k, m, cnt, now, A[1000 + 5][1000 + 5], La; int main() { register int i, j; scanf("%d%d", &n, &k); now = 1; while (now < n) { La = now; now *= k; cnt++; for (i = 1; i <= n; i++) { for (j = (i - 1) / La * La + La + 1; j <= (((i - 1) / now * now + now) < (n) ? ((i - 1) / now * now + now) : (n)); j++) A[i][j] = cnt; } } printf("%d\n", cnt); for (i = 1; i <= n; i++) for (j = i + 1; j <= n; j++) printf("%d ", A[i][j]); }
41	 #include <bits/stdc++.h> using namespace std; int n, m, ans[1005][1005], cnt; int main() { scanf("%d%d", &n, &m); int s = 1; while (s <= n) { cnt++; s *= m; int res = 0; while (res < n) { for (int i = 1; i <= s && res + i <= n; i++) for (int j = i + 1; j <= s && res + j <= n; j++) if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt; res += s; } } printf("%d\n", cnt); for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) printf("%d ", ans[i][j]); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m, ans[1005][1005], cnt; int main() { scanf("%d%d", &n, &m); int s = 1; while (s < n) { cnt++; s *= m; int res = 0; while (res < n) { for (int i = 1; i <= s && res + i <= n; i++) for (int j = i + 1; j <= s && res + j <= n; j++) if (!ans[res + i][res + j]) ans[res + i][res + j] = cnt; res += s; } } printf("%d\n", cnt); for (int i = 1; i <= n; i++) for (int j = i + 1; j <= n; j++) printf("%d ", ans[i][j]); return 0; }
41	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using uint = unsigned int; using ull = unsigned long long; template <typename T> using pair2 = pair<T, T>; using pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); ll myRand(ll B) { return (ull)rng() % B; } clock_t startTime; double getCurrentTime() { return (double)(clock() - startTime) / CLOCKS_PER_SEC; } int main() { startTime = clock(); int n, k; scanf("%d%d", &n, &k); int pw = 1; int ans = 0; while (pw < n) { pw *= k; ans++; } printf("%d\n", ans); for (int i = 0; i < n; i++) for (int j = i + 1; j < n; j++) { int x = i, y = j, z = 1; while (x % k == y % k) { x /= k; y /= k; z++; } printf("%d ", z); } printf("\n"); return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using uint = unsigned int; using ull = unsigned long long; template <typename T> using pair2 = pair<T, T>; using pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>; mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()); ll myRand(ll B) { return (ull)rng() % B; } clock_t startTime; double getCurrentTime() { return (double)(clock() - startTime) / CLOCKS_PER_SEC; } int main() { startTime = clock(); int n, k; scanf("%d%d", &n, &k); int pw = 1; int ans = 0; while (pw < n) { pw *= k; ans++; } printf("%d\n", ans); for (int i = 0; i < n; i++) for (int j = i + 1; j < n; j++) { int x = i, y = j, z = 1; while (x % k >= y % k) { x /= k; y /= k; z++; } printf("%d ", z); } printf("\n"); return 0; }
42	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5, mod = 1e9 + 7; int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans; multiset<int> s; void M(int x, int y) { for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod; } int Q(int x) { int ret = 0; for (; x; x -= x & -x) (ret += t[x]) %= mod; return ret; } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d%d", &a[i], &b[i]), f[i] = i; sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; }); scanf("%d", &q); for (int i = 1; i <= q; i++) scanf("%d", &x), d[x] = 1, s.insert(b[x]); for (int i = 1; i <= n; i++) { x = f[i]; g[x] = !s.empty() && b[x] <= *s.rbegin(); if (d[x]) s.erase(s.find(b[x])); } for (int i = 1; i <= n; i++) x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod), (ans += dp[x]) %= mod; printf("%d\n", ans); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 4e5 + 5, mod = 1e9 + 7; int n, q, x, a[N], b[N], f[N], d[N], g[N], dp[N], t[N], ans; multiset<int> s; void M(int x, int y) { for (; x <= 2 * n; x += x & -x) (t[x] += y) %= mod; } int Q(int x) { int ret = 0; for (; x; x -= x & -x) (ret += t[x]) %= mod; return ret; } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d%d", &a[i], &b[i]), f[i] = i; sort(f + 1, f + n + 1, [&](int x, int y) { return a[x] < a[y]; }); scanf("%d", &q); for (int i = 1; i <= q; i++) scanf("%d", &x), d[x] = 1, s.insert(b[x]); for (int i = 1; i <= n; i++) { x = f[i]; g[x] = s.size() && b[x] <= *s.rbegin(); if (d[x]) s.erase(s.find(b[x])); } for (int i = 1; i <= n; i++) x = f[i], M(b[x], dp[x] = (mod + g[x] + Q(2 * n) - Q(b[x])) % mod), (ans += dp[x]) %= mod; printf("%d\n", ans); return 0; }
44	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e3 + 5; int n; char s[MAXN][MAXN]; int f[MAXN]; inline pair<int, int> get(int x, int y, int k) { if (x == 1) { if (y % 2) ++y; return make_pair(y, k); } if ((x + y) % 2) { int t = min(x - 1, y - 1); x -= t; y -= t; k ^= t & 1; } else { int t = min(x - 1, n - y); x -= t; y += t; k ^= t & 1; } if (x != 1) x = n - x + 1, y = n - y + 1; return get(x, y, k); } int main(void) { scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%s", s[i] + 1); if (n % 2) return printf("NONE"), 0; memset(f, -1, sizeof(f)); for (int i = 1; i <= n; ++i) for (int j = 1; j <= n; ++j) if (s[i][j] != '.') { pair<int, int> res = get(i, j, s[i][j] == 'G'); int y = res.first, k = res.second; if (f[y] == -1) f[y] = k; else if (f[y] != k) return printf("NONE"), 0; } for (int i = 2; i <= n; i += 2) if (f[i] == -1) return printf("MULTIPLE"), 0; printf("UNIQUE\n"); for (int i = 1; i <= n; ++i, putchar('\n')) for (int j = 1; j <= n; ++j) { pair<int, int> res = get(i, j, 0); int k = f[res.first] ^ res.second; putchar("GS"[k]); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e3 + 5; int n; char s[MAXN][MAXN]; int f[MAXN]; inline pair<int, int> get(int x, int y, int k) { if (x == 1) { if (y % 2) ++y; return make_pair(y, k); } if ((x + y) % 2) { int t = min(x - 1, y - 1); x -= t; y -= t; k ^= t & 1; } else { int t = min(x - 1, n - y); x -= t; y += t; k ^= t & 1; } if (x != 1) x = n - x + 1, y = n - y + 1; return get(x, y, k); } int main(void) { scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%s", s[i] + 1); if (n % 2) return printf("NONE"), 0; memset(f, -1, sizeof(f)); for (int i = 1; i <= n; ++i) for (int j = 1; j <= n; ++j) if (s[i][j] != '.') { pair<int, int> res = get(i, j, s[i][j] == 'G'); int y = res.first, k = res.second; if (f[y] == -1) f[y] = k; else if (f[y] != k) return printf("NONE"), 0; } for (int i = 2; i <= n; i += 2) if (f[i] == -1) return printf("MULTIPLE"), 0; printf("UNIQUE\n"); for (int i = 1; i <= n; ++i, putchar('\n')) for (int j = 1; j <= n; ++j) { pair<int, int> res = get(i, j, 0); int k = f[res.first] ^ res.second; putchar("SG"[k]); } return 0; }
45	 #include <bits/stdc++.h> using namespace std; int main() { int t, i = 0, c = 0; cin >> t; for (; i < t; i++) { c = 0; int n; cin >> n; int a[n]; for (int j = 0; j < n; j++) { cin >> a[j]; } if (a[0] == 1) c++; for (int k = 1; k < n; k++) { if (a[k] == 1 && a[k - 1] == 0) c++; else if (a[k] == 1 && a[k - 1] == 1) c = c + 5; else if (a[k] == 0 && a[k - 1] == 1) ; else if (a[k] == 0 && a[k - 1] == 0) { c = -1; break; } } cout << c << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t, i = 0, c = 0; cin >> t; for (; i < t; i++) { c = 1; int n; cin >> n; int a[n]; for (int j = 0; j < n; j++) { cin >> a[j]; } if (a[0] == 1) c++; for (int k = 1; k < n; k++) { if (a[k] == 1 && a[k - 1] == 0) c++; else if (a[k] == 1 && a[k - 1] == 1) c = c + 5; else if (a[k] == 0 && a[k - 1] == 1) ; else if (a[k] == 0 && a[k - 1] == 0) { c = -1; break; } } cout << c << endl; } }
45	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; int sum = 1; for (int i = 0; i < n; i++) { int a; cin >> a; v.push_back(a); } int count0 = 0, count1 = 0; for (int i = 0; i < n; i++) { if (v[i] == 1) { count1++; if (count1 == 2) { sum = sum + 4; } sum++; count0 = 0; } else if (v[i] == 0) { count0++; if (count0 == 2) { sum = -1; break; } count1 = 0; } } cout << sum << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; int sum = 1; for (int i = 0; i < n; i++) { int a; cin >> a; v.push_back(a); } int count0 = 0, count1 = 0; for (int i = 0; i < n; i++) { if (v[i] == 1) { count1++; if (count1 >= 2) { sum = sum + 4; } sum++; count0 = 0; } else if (v[i] == 0) { count0++; if (count0 == 2) { sum = -1; break; } count1 = 0; } } cout << sum << endl; } return 0; }
45	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n; int a[N]; void solve() { scanf("%d", &n); int now = 1; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); if (n == 1) { if (a[1] == 1) printf("2\n"); else printf("1\n"); return; } if (a[1] == 1) now++; for (int i = 2; i <= n; i++) { if (a[i] == 0 && a[i - 1] == 0) { now == -1; printf("%d\n", now); return; } if (a[i] == 0) continue; if (a[i] == 1 && a[i - 1] == 1) now += 5; else now++; } printf("%d\n", now); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 110; int n; int a[N]; void solve() { scanf("%d", &n); int now = 1; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); if (n == 1) { if (a[1] == 1) printf("2\n"); else printf("1\n"); return; } if (a[1] == 1) now++; for (int i = 2; i <= n; i++) { if (a[i] == 0 && a[i - 1] == 0) { now = -1; printf("%d\n", now); return; } if (a[i] == 0) continue; if (a[i] == 1 && a[i - 1] == 1) now += 5; else now++; } printf("%d\n", now); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } return 0; }
45	 #include <bits/stdc++.h> using namespace std; int n, t, v; int arr[100]; void cf() { cin >> n; v = 0; for (int i = 0; i < n; ++i) { cin >> arr[i]; } for (int i = 0; i < n - 1; ++i) { if (arr[i] == 0 && arr[i + 1] == 0) { cout << -1 << endl; v = 1; } } int ans = 1; if (v == 0) { ans += arr[0]; for (int i = 1; i < n; ++i) { if (arr[i] == 1) { ans += arr[i] + 4 * arr[i - 1]; } } cout << ans << endl; } } int main() { cin >> t; for (int z = 0; z < t; ++z) { cf(); } }	 #include <bits/stdc++.h> using namespace std; int n, t, v; int arr[100]; void cf() { cin >> n; v = 0; for (int i = 0; i < n; ++i) { cin >> arr[i]; } for (int i = 0; i < n - 1; ++i) { if (arr[i] == 0 && arr[i + 1] == 0) { cout << -1 << endl; v = 1; break; } } int ans = 1; if (v == 0) { ans += arr[0]; for (int i = 1; i < n; ++i) { if (arr[i] == 1) { ans += arr[i] + 4 * arr[i - 1]; } } cout << ans << endl; } } int main() { cin >> t; for (int z = 0; z < t; ++z) { cf(); } }
46	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long int count = 0, num = INT_MIN; long long int maxn = *max_element(a, a + n); if (a[n - 1] == maxn) { cout << "0"; } else { for (int i = n - 1; i >= 0; i--) { if (a[i] == maxn) { break; } else if (a[i] > num) { count++; num = a[i]; } } cout << count << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) { cin >> a[i]; } long long int count = 0, num = INT_MIN; long long int maxn = *max_element(a, a + n); if (a[n - 1] == maxn) { cout << "0\n"; } else { for (int i = n - 1; i >= 0; i--) { if (a[i] == maxn) { break; } else if (a[i] > num) { count++; num = a[i]; } } cout << count << endl; } } }
46	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int a[n]; int itr, maxa = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] >= maxa) { maxa = a[i]; itr = i; } } int br = 0, maxbr = a[n - 1]; for (int i = n - 1; i > itr; i--) { if (maxbr <= a[i]) br++; maxbr = max(a[i], maxbr); } cout << br << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(false); cin.tie(0); int tt; cin >> tt; while (tt--) { int n; cin >> n; int a[n]; int itr, maxa = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] >= maxa) { maxa = a[i]; itr = i; } } int br = 0, maxbr = a[n - 1]; for (int i = n - 1; i >= itr; i--) { if (maxbr < a[i]) br++; maxbr = max(a[i], maxbr); } cout << br << "\n"; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200100]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } stable_sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n, ans, mpos; struct node { int a, id; } x[200010]; bool cmp(node a, node b) { return a.a < b.a; } int main() { cin >> t; while (t--) { cin >> n; ans = 0; for (int i = 1; i <= n; i++) { cin >> x[i].a; x[i].id = i; } stable_sort(x + 1, x + n + 1, cmp); mpos = x[n].id; for (int i = n - 1; i >= 1; i--) { if (x[i].id > mpos) { ans++; mpos = x[i].id; } } cout << ans << endl; } return 0; }
46	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; const int64_t longinf = LLONG_MAX - 100000; const long long inf = INT_MAX; long long pw(long long x, long long y, long long p = longinf) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); } long long cl(long long a, long long x) { return a % x == 0 ? a / x : a / x + 1; } void run_time_terror(long long case_no = 0) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } long long mx = -1; for (long long i = 0; i < n; ++i) { mx = max(mx, a[i]); } vector<long long> b; b.push_back(a[0]); for (long long i = 1; i < n; ++i) { while (b.size() and b.back() < a[i]) { b.pop_back(); } b.push_back(a[i]); } cout << b.size() - 1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0), cout.setf(ios::fixed); cout << setprecision(0); long long tt = 1; cin >> tt; for (long long case_no = 1; case_no <= tt; case_no++) { run_time_terror(case_no); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1000000007; const int64_t longinf = LLONG_MAX - 100000; const long long inf = INT_MAX; long long pw(long long x, long long y, long long p = longinf) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } long long invmod(long long a, long long m = mod) { return pw(a, m - 2, m); } long long cl(long long a, long long x) { return a % x == 0 ? a / x : a / x + 1; } void run_time_terror(long long case_no = 0) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; ++i) { cin >> a[i]; } long long mx = -1; for (long long i = 0; i < n; ++i) { mx = max(mx, a[i]); } vector<long long> b; b.push_back(a[0]); for (long long i = 1; i < n; ++i) { while (b.size() and b.back() <= a[i]) { b.pop_back(); } b.push_back(a[i]); } cout << b.size() - 1 << "\n"; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0), cout.setf(ios::fixed); cout << setprecision(0); long long tt = 1; cin >> tt; for (long long case_no = 1; case_no <= tt; case_no++) { run_time_terror(case_no); } return 0; }
46	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, cnt = 0; cin >> n; int arr[n]; for (int(i) = (0); (i) < (n); ++(i)) { cin >> arr[i]; } long long x = arr[n - 1]; for (int i = n - 2; i >= 0; i--) { if (arr[i] > x) { cnt++; x = arr[i]; } if (i == 0) { cout << cnt; return; } } } int main() { long long t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, cnt = 0; cin >> n; int arr[n]; for (int(i) = (0); (i) < (n); ++(i)) { cin >> arr[i]; } long long x = arr[n - 1]; for (int i = n - 1; i >= 0; i--) { if (arr[i] > x) { cnt++; x = arr[i]; } if (i == 0) { cout << cnt; return; } } } int main() { long long t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }
47	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; ; long long int k; cin >> k; ; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> v, r; for (int i = 0; i < n; i++) { if (a[i] > 0) v.push_back(a[i]); else r.push_back(abs(a[i])); } sort(v.begin(), v.end()); sort(r.begin(), r.end()); int w = v.size(), y = r.size(); long long int ans = 0; int i = w - 1, i1 = y - 1; while (1) { if (i < 0) break; if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1])) ans += v[i]; else if (i == w - 1 && y == 0) ans += v[i]; else ans += 2 * v[i]; i = i - k; if (i < 0) break; } while (1) { if (i1 < 0) break; if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] < r[y - 1])) ans += r[i1]; else if (i1 == y - 1 && w == 0) ans += r[i1]; else ans += 2 * r[i1]; i1 = i1 - k; if (i1 < 0) break; } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int n; cin >> n; ; long long int k; cin >> k; ; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; vector<int> v, r; for (int i = 0; i < n; i++) { if (a[i] > 0) v.push_back(a[i]); else r.push_back(abs(a[i])); } sort(v.begin(), v.end()); sort(r.begin(), r.end()); int w = v.size(), y = r.size(); long long int ans = 0; int i = w - 1, i1 = y - 1; while (1) { if (i < 0) break; if (i == w - 1 && (y > 0 && w > 0 && v[w - 1] > r[y - 1])) ans += v[i]; else if (i == w - 1 && y == 0) ans += v[i]; else ans += 2 * v[i]; i = i - k; if (i < 0) break; } while (1) { if (i1 < 0) break; if (i1 == y - 1 && (y > 0 && w > 0 && v[w - 1] <= r[y - 1])) ans += r[i1]; else if (i1 == y - 1 && w == 0) ans += r[i1]; else ans += 2 * r[i1]; i1 = i1 - k; if (i1 < 0) break; } cout << ans << endl; } }
47	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 2 * 1e5 + 7; const int INF = 1e10 + 7; const int MOD = 1e9 + 7; const int LOG = 22; long long a[MAX_N]; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; for (int i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); vector<long long> v; long long ans = 0, p = 0; for (int i = 0; i < n; i++) { if (a[i] >= 0) { p = i; break; } } long long MIN = INF, MAX = 0; for (int i = 0; i < p; i += k) { MIN = INF; if (i + k - 1 >= p) { for (int j = i; j < p; j++) MIN = min(MIN, a[j]); } else { for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]); } v.push_back(abs(MIN)); } for (int i = n - 1; i >= p; i -= k) { MAX = 0; if (i - k + 1 < p) { for (int j = i; j >= p; j--) MAX = max(MAX, a[j]); } else { for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]); } v.push_back(MAX); } sort(v.begin(), v.end()); for (int x : v) ans += (2 * x); ans -= v[v.size() - 1]; cout << ans << '\n'; v.clear(); } }	 #include <bits/stdc++.h> using namespace std; const int MAX_N = 2 * 1e5 + 7; const int INF = 1e10 + 7; const int MOD = 1e9 + 7; const int LOG = 22; long long a[MAX_N]; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; for (int i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); vector<long long> v; long long ans = 0, p = n; for (int i = 0; i < n; i++) { if (a[i] >= 0) { p = i; break; } } long long MIN = INF, MAX = 0; for (int i = 0; i < p; i += k) { MIN = INF; if (i + k - 1 >= p) { for (int j = i; j < p; j++) MIN = min(MIN, a[j]); } else { for (int j = i; j < i + k; j++) MIN = min(MIN, a[j]); } v.push_back(abs(MIN)); } for (int i = n - 1; i >= p; i -= k) { MAX = 0; if (i - k + 1 < p) { for (int j = i; j >= p; j--) MAX = max(MAX, a[j]); } else { for (int j = i; j > i - k; j--) MAX = max(MAX, a[j]); } v.push_back(MAX); } sort(v.begin(), v.end()); for (int x : v) ans += (2 * x); ans -= v[v.size() - 1]; cout << ans << '\n'; v.clear(); } }
48	 #include <bits/stdc++.h> using namespace std; const int maxn = 500000 + 50; int T, n, h[maxn], f[maxn], tot, ti[maxn]; int ans, sum; int main() { scanf("%d", &T); for (int oo = 1; oo <= T; ++oo) { scanf("%d", &n); tot = 0; vector<bool> used(n); vector<set<int>> gi(n), ed(n); vector<int> seet; ans = 0, sum = 0; for (int i = 0; i < n; i++) f[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &h[i]); tot = max(tot, f[--h[i]]++); } for (int i = 0; i < n; ++i) ti[i] = h[i]; sort(h, h + n); for (int i = 0; i < n; i++) if (h[i] != ti[i]) gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i); function<void(int)> dfs = [&](int u) { ed[h[u]].erase(u); sum++; gi[ti[u]].erase(u); if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin()); }; for (int i : seet) if (gi[ti[i]].count(i)) { sum = 0; dfs(i); if (sum % 2 == 0) ++ans; } bool p = 1; if (tot > 1 || ans % 2 == 0) p = 0; if (!p) printf("YES\n"); else printf("NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 500000 + 50; int T, n, h[maxn], f[maxn], tot, ti[maxn]; int ans, sum; int main() { scanf("%d", &T); for (int oo = 1; oo <= T; ++oo) { scanf("%d", &n); tot = 0; vector<bool> used(n); vector<set<int>> gi(n), ed(n); vector<int> seet; ans = 0, sum = 0; for (int i = 0; i < n; i++) f[i] = 0; for (int i = 0; i < n; i++) { scanf("%d", &h[i]); tot = max(tot, ++f[--h[i]]); } for (int i = 0; i < n; ++i) ti[i] = h[i]; sort(h, h + n); for (int i = 0; i < n; i++) if (h[i] != ti[i]) gi[ti[i]].insert(i), seet.push_back(i), ed[h[i]].insert(i); function<void(int)> dfs = [&](int u) { ed[h[u]].erase(u); sum++; gi[ti[u]].erase(u); if (!ed[ti[u]].empty()) dfs(*ed[ti[u]].begin()); }; for (int i : seet) if (gi[ti[i]].count(i)) { sum = 0; dfs(i); if (sum % 2 == 0) ++ans; } bool p = 1; if (tot > 1 || ans % 2 == 0) p = 0; if (!p) printf("YES\n"); else printf("NO\n"); } return 0; }
48	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e5 + 5; int d[maxn]; unordered_map<int, int> mp; struct node { int id; int va; }; vector<node> vec; bool cmp(node a, node b) { return a.va < b.va; } bool vis[maxn]; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { vec.clear(); mp.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { int x; cin >> x; mp[x]++; vis[i] = 0; vec.push_back({i, x}); } bool flag = false; for (auto i : mp) { if (i.second >= 2) { cout << "NO" << '\n'; ; flag = true; break; } } if (flag) continue; sort(vec.begin(), vec.end(), cmp); for (int i = 0; i < n; i++) { d[vec[i].id] = i + 1; } int cnt = 0; for (int i = 1; i <= n; i++) { if (vis[i]) continue; int to = i; vis[to] = true; to = d[to]; int ta = 1; while (to != i) { vis[to] = true; ta++; to = d[to]; } if (ta & 1) ; else cnt++; } cout << ((cnt & 1) ? "NO" : "YES") << '\n'; ; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 5e5 + 5; int d[maxn]; unordered_map<int, int> mp; struct node { int id; int va; }; vector<node> vec; bool cmp(node a, node b) { return a.va < b.va; } bool vis[maxn]; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { vec.clear(); mp.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { int x; cin >> x; mp[x]++; vis[i] = 0; vec.push_back({i, x}); } bool flag = false; for (auto i : mp) { if (i.second >= 2) { cout << "YES" << '\n'; ; flag = true; break; } } if (flag) continue; sort(vec.begin(), vec.end(), cmp); for (int i = 0; i < n; i++) { d[vec[i].id] = i + 1; } int cnt = 0; for (int i = 1; i <= n; i++) { if (vis[i]) continue; int to = i; vis[to] = true; to = d[to]; int ta = 1; while (to != i) { vis[to] = true; ta++; to = d[to]; } if (ta & 1) ; else cnt++; } cout << ((cnt & 1) ? "NO" : "YES") << '\n'; ; } return 0; }
48	 #include <bits/stdc++.h> using namespace std; const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007; long long q, n, a[NMX], A[NMX], kq; bool dd[NMX], YES; void update(long long x) { while (x > 0) { A[x]++; x -= ((x) & (-(x))); } } long long get(long long x) { long long res = 0; while (x < NMX) { res += A[x]; x += ((x) & (-(x))); } return res; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cin >> q; while (q--) { cin >> n; for (int i = 1; i <= (int)(n); i++) { cin >> a[i]; A[i] = 0; dd[i] = false; } YES = false; for (int i = 1; i <= (int)(n); i++) { if (dd[a[i]]) { cout << "YES\n"; YES = true; break; } dd[a[i]] = true; } if (YES) continue; kq = 0; for (int i = 1; i <= (int)(n); i++) { kq += get(a[i] + 1); update(a[i]); } cout << (kq % 2 == 0 ? "YES\n" : "NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long NMX = 432000, oo = 0x3C3C3C3C3C3C3C3C, Bs = 1000000007; long long q, n, a[NMX], A[NMX], kq; bool dd[NMX], YES; void update(long long x) { while (x > 0) { A[x]++; x -= ((x) & (-(x))); } } long long get(long long x) { long long res = 0; while (x <= n) { res += A[x]; x += ((x) & (-(x))); } return res; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); cin >> q; while (q--) { cin >> n; for (int i = 1; i <= (int)(n); i++) { cin >> a[i]; A[i] = 0; dd[i] = false; } YES = false; for (int i = 1; i <= (int)(n); i++) { if (dd[a[i]]) { cout << "YES\n"; YES = true; break; } dd[a[i]] = true; } if (YES) continue; kq = 0; for (int i = 1; i <= (int)(n); i++) { kq += get(a[i] + 1); update(a[i]); } cout << (kq % 2 == 0 ? "YES\n" : "NO\n"); } return 0; }
61	 #include <bits/stdc++.h> constexpr int maxn = 2e5 + 5; constexpr int inf = 1e9; constexpr int mod = 1e9 + 7; using namespace std; using lint = long long; using pii = pair<int, int>; int t, n, a[maxn], b[maxn]; lint ans; map<int, int> ma, mb; signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cin >> t; while (t--) { cin >> n; for (int i = 0; i < n; i++) { cin >> a[i] >> b[i]; ma[a[i]]++; mb[b[i]]++; } ans = 1ll * n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) ans -= (ma[a[i]] - 1) * (mb[b[i]] - 1); cout << ans << '\n'; ma.clear(); mb.clear(); } }	 #include <bits/stdc++.h> constexpr int maxn = 2e5 + 5; constexpr int inf = 1e9; constexpr int mod = 1e9 + 7; using namespace std; using lint = long long; using pii = pair<int, int>; int t, n, a[maxn], b[maxn]; lint ans; map<int, int> ma, mb; signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cin >> t; while (t--) { cin >> n; for (int i = 0; i < n; i++) { cin >> a[i] >> b[i]; ma[a[i]]++; mb[b[i]]++; } ans = 1ll * n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) ans -= 1ll * (ma[a[i]] - 1) * (mb[b[i]] - 1); cout << ans << '\n'; ma.clear(); mb.clear(); } }
61	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<int> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<i64> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }
61	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { int n; cin >> n; map<int, set<int>> m; vector<int> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<i64> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }
61	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { int t; cin >> t; while (t--) { int n; cin >> n; ll ans = n * (n - 1) * (n - 2); ans /= 6; map<ll, ll> m_a; map<ll, ll> m_b; vector<pair<ll, ll>> v(n); for (int i = 0; i < n; ++i) { cin >> v[i].first >> v[i].second; m_a[v[i].first]++; m_b[v[i].second]++; } ll elem = 0; for (int i = 0; i < n; ++i) { elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1); } ans -= elem; cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { int t; cin >> t; while (t--) { ll n; cin >> n; ll ans = n * (n - 1) * (n - 2); ans /= 6; map<ll, ll> m_a; map<ll, ll> m_b; vector<pair<ll, ll>> v(n); for (int i = 0; i < n; ++i) { cin >> v[i].first >> v[i].second; m_a[v[i].first]++; m_b[v[i].second]++; } ll elem = 0; for (int i = 0; i < n; ++i) { elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1); } ans -= elem; cout << ans << '\n'; } }
61	 #include <bits/stdc++.h> const int INF = 1e8; const long long MOD = 1e9 + 7; using namespace std; bool cases = 1; long long x[200005]; long long y[200005]; void solve(int nc) { int n, a, b; cin >> n; vector<pair<int, int> > v; long long xd = 0, yd = 0; for (int i = 0; i < n; i++) { cin >> a >> b; v.push_back(pair<int, int>(a, b)); if (x[a] == 0) xd++; if (y[b] == 0) yd++; x[a]++; y[b]++; } long long ans = n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; ans -= (x[a] - 1) * (y[b] - 1); } for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; x[a] = y[b] = 0; } cout << ans; cout << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t = 1; if (cases) cin >> t; for (int nc = 1; nc < t + 1; nc++) solve(nc); return 0; }	 #include <bits/stdc++.h> const int INF = 1e8; const long long MOD = 1e9 + 7; using namespace std; bool cases = 1; long long x[200005]; long long y[200005]; void solve(int nc) { long long n, a, b; cin >> n; vector<pair<int, int> > v; long long xd = 0, yd = 0; for (int i = 0; i < n; i++) { cin >> a >> b; v.push_back(pair<int, int>(a, b)); if (x[a] == 0) xd++; if (y[b] == 0) yd++; x[a]++; y[b]++; } long long ans = n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; ans -= (x[a] - 1) * (y[b] - 1); } for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; x[a] = y[b] = 0; } cout << ans; cout << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t = 1; if (cases) cin >> t; for (int nc = 1; nc < t + 1; nc++) solve(nc); return 0; }
62	 #include <bits/stdc++.h> using namespace std; const long long N = 1005; long long n, m, q, ans; bool vizitat[N][N]; long long dp[N][N][2]; bool verifica(long long i, long long j) { if (i < 1 || j < 1 || i > n || j > m) return false; return true; } long long cnt(long long i, long long j) { long long answer = 0; for (long long it = 0; it <= 1; it++) { long long up = 0; long long lin = i; long long col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (up % 2 == it) { lin--; } else { col--; } up++; } long long down = 0; lin = i; col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (down % 2 == it) { lin++; } else { col++; } down++; } answer += up * down; } answer--; return answer; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m >> q; for (long long i = 1; i <= n; i++) { for (long long j = 1; j <= m; j++) { dp[i][j][1] = dp[i][j - 1][0] + 1; dp[i][j][0] = dp[i - 1][j][1] + 1; ans += dp[i][j][1]; ans += dp[i][j][0]; } } ans -= n * m; while (q--) { long long lin, col; cin >> lin >> col; if (vizitat[lin][col] == true) { vizitat[lin][col] = false; ans += cnt(lin, col); } else { ans -= cnt(lin, col); vizitat[lin][col] = true; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 1005; long long n, m, q, ans; bool vizitat[N][N]; long long dp[N][N][2]; bool verifica(long long i, long long j) { if (i < 1 || j < 1 || i > n || j > m) return false; return true; } long long cnt(long long i, long long j) { long long answer = 0; for (long long it = 0; it <= 1; it++) { long long up = 0; long long lin = i; long long col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (up % 2 == it) { lin--; } else { col--; } up++; } long long down = 0; lin = i; col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (down % 2 == it) { col++; } else { lin++; } down++; } answer += up * down; } answer--; return answer; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m >> q; for (long long i = 1; i <= n; i++) { for (long long j = 1; j <= m; j++) { dp[i][j][1] = dp[i][j - 1][0] + 1; dp[i][j][0] = dp[i - 1][j][1] + 1; ans += dp[i][j][1]; ans += dp[i][j][0]; } } ans -= n * m; while (q--) { long long lin, col; cin >> lin >> col; if (vizitat[lin][col] == true) { vizitat[lin][col] = false; ans += cnt(lin, col); } else { ans -= cnt(lin, col); vizitat[lin][col] = true; } cout << ans << '\n'; } return 0; }
62	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, y = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, n)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, m)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }
62	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, n)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, m)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }
62	 #include <bits/stdc++.h> using namespace std; mt19937_64 rnd(time(NULL)); const long long mod = 1000000007; const int N = 1010; int a[N][N]; int cnt[N][N][2]; int ans = 0; int n, m, q; inline void calc(int i, int j) { if (i <= 0 || j <= 0 || i > n || j > m) return; ans -= cnt[i][j][0] + cnt[i][j][1]; if (a[i][j]) cnt[i][j][0] = cnt[i][j][1] = 0; else { cnt[i][j][0] = cnt[i - 1][j][1] + 1; cnt[i][j][1] = cnt[i][j - 1][0] + 1; } ans += cnt[i][j][0] + cnt[i][j][1]; } void solve() { cin >> n >> m >> q; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { calc(i, j); ans--; } } for (int it = 1; it <= q; it++) { int x, y; cin >> x >> y; ans += 1 - a[x][y]; a[x][y] ^= 1; ans -= 1 - a[x][y]; for (int i = 0; i <= min(n - x, n - y); i++) { calc(x + i, y + i); calc(x + i + 1, y + i); calc(x + i, y + i + 1); } cout << ans << '\n'; } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); int tt = 1; while (tt--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; mt19937_64 rnd(time(NULL)); const long long mod = 1000000007; const int N = 1010; int a[N][N]; int cnt[N][N][2]; int ans = 0; int n, m, q; void calc(int i, int j) { if (i <= 0 || j <= 0 || i > n || j > m) return; ans -= cnt[i][j][0] + cnt[i][j][1]; if (a[i][j]) cnt[i][j][0] = cnt[i][j][1] = 0; else { cnt[i][j][0] = cnt[i - 1][j][1] + 1; cnt[i][j][1] = cnt[i][j - 1][0] + 1; } ans += cnt[i][j][0] + cnt[i][j][1]; } void solve() { cin >> n >> m >> q; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { calc(i, j); ans--; } } for (int it = 1; it <= q; it++) { int x, y; cin >> x >> y; ans += 1 - a[x][y]; a[x][y] ^= 1; ans -= 1 - a[x][y]; for (int i = 0; i <= min(n - x, m - y); i++) { calc(x + i, y + i); calc(x + i + 1, y + i); calc(x + i, y + i + 1); } cout << ans << '\n'; } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); int tt = 1; while (tt--) { solve(); } return 0; }
63	 #include <bits/stdc++.h> using namespace std; const int mx = 4e5 + 10; int main() { int n; cin >> n; vector<string> a(n); for (string& x : a) cin >> x; vector<int> bal(n), mn(n); vector<vector<int>> occ(n), nocc(n); for (int i = 0; i < n; i++) { int b = 0, mn0 = 1e9; occ[i].resize(mx * 2); nocc[i].resize(mx * 2); int mini = 1e9; for (char x : a[i]) { if (x == ')') b--; else b++; mini = min(b, mini); mn0 = min(mn0, b); occ[i][b + mx]++; if (b == mini) nocc[i][b + mx]++; } bal[i] = b, mn[i] = mn0; } vector<vector<int>> answer((1 << n), vector<int>(2, -1e9)); answer[0] = {0, 0}; vector<int> sum(1 << n); for (int mask = 0; mask < (1 << n); mask++) { for (int i = 0; i < n; i++) { if ((1 << i) & mask) { sum[mask] = sum[mask ^ (1 << i)] + bal[i]; break; } } for (int i = 0; i < n; i++) { if ((1 << i) & mask) { int nmask = (1 << i) ^ mask; if (sum[nmask] + mn[i] < 0) { answer[nmask][1] = max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]); } else { answer[mask][0] = max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]); } } } } int ans = 0; for (auto x : answer) ans = max({x[0], x[1], ans}); cout << ans; return 0; }	 #include <bits/stdc++.h> using namespace std; const int mx = 4e5 + 10; int main() { int n; cin >> n; vector<string> a(n); for (string& x : a) cin >> x; vector<int> bal(n), mn(n); vector<vector<int>> occ(n), nocc(n); for (int i = 0; i < n; i++) { int b = 0, mn0 = 1e9; occ[i].resize(mx * 2); nocc[i].resize(mx * 2); int mini = 1e9; for (char x : a[i]) { if (x == ')') b--; else b++; mini = min(b, mini); mn0 = min(mn0, b); occ[i][b + mx]++; if (b == mini) nocc[i][b + mx]++; } bal[i] = b, mn[i] = mn0; } vector<vector<int>> answer((1 << n), vector<int>(2, -1e9)); answer[0] = {0, 0}; vector<int> sum(1 << n); for (int mask = 0; mask < (1 << n); mask++) { for (int i = 0; i < n; i++) { if ((1 << i) & mask) { sum[mask] = sum[mask ^ (1 << i)] + bal[i]; break; } } for (int i = 0; i < n; i++) { if ((1 << i) & mask) { int nmask = (1 << i) ^ mask; if (sum[nmask] + mn[i] < 0) { answer[mask][1] = max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]); } else { answer[mask][0] = max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]); } } } } int ans = 0; for (auto x : answer) ans = max({x[0], x[1], ans}); cout << ans; return 0; }
65	 #include <bits/stdc++.h> using namespace std; const int maxn = 400010; int n, a[maxn], b[maxn]; char s[maxn]; int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); } scanf("%s", s + 1); sort(a + 1, a + n + 1); int l = 1, r = n; for (int i = n; i; i--) { if (s[i] == s[i - 1]) b[i] = l++; else b[i] = r--; } for (int i = 1; i <= n; i++) { printf("%d %c\n", a[b[i]], (b[i] ^ 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L'); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 400010; int n, a[maxn], b[maxn]; char s[maxn]; int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); } scanf("%s", s + 1); sort(a + 1, a + n + 1); int l = 1, r = n; for (int i = n; i; i--) { if (s[i] == s[i - 1]) b[i] = l++; else b[i] = r--; } for (int i = 1; i <= n; i++) { printf("%d %c\n", a[b[i]], (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L'); } return 0; }
65	 #include <bits/stdc++.h> using namespace std; signed main() { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n + 1); string s; cin >> s; long long cnt = 0; for (long long i = 0; i < n - 1; i++) { if (s[i] != s[i + 1]) cnt++; } char dir[n]; dir[n - 1 - cnt] = s[0]; for (long long i = n - 2 - cnt; i >= 0; i--) { if (dir[i + 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } for (long long i = n - cnt; i < n; i++) { if (dir[i - 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } long long l = n - 1 - cnt, r = n - 1 - cnt; cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n'; for (long long i = 1; i < n; i++) { if (s[i] == s[i - 1]) { l--; cout << a[l] << ' ' << dir[l] << '\n'; } else { r++; cout << a[r] << ' ' << dir[r] << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; signed main() { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); string s; cin >> s; long long cnt = 0; for (long long i = 0; i < n - 1; i++) { if (s[i] != s[i + 1]) cnt++; } char dir[n]; dir[n - 1 - cnt] = s[0]; for (long long i = n - 2 - cnt; i >= 0; i--) { if (dir[i + 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } for (long long i = n - cnt; i < n; i++) { if (dir[i - 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } long long l = n - 1 - cnt, r = n - 1 - cnt; cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n'; for (long long i = 1; i < n; i++) { if (s[i] == s[i - 1]) { l--; cout << a[l] << ' ' << dir[l] << '\n'; } else { r++; cout << a[r] << ' ' << dir[r] << '\n'; } } }
65	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int n, a[N], b[N]; char s[N]; void sol(int l, int r, int d) { if (d == 1) { b[d] = a[l]; return; } if (s[d - 1] == s[n]) { b[d] = a[l]; sol(l + 1, r, d - 1); } else { b[d] = a[r]; sol(l, r - 1, d - 1); } } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); scanf("%s", s + 1); sort(a + 1, a + n + 1); if (s[n] == 'L') for (int i = n; i >= 1; i -= 2) a[i] = -a[i]; else for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i]; sol(1, n, n); for (int i = 1; i <= n; i++) { if (b[i] > 0) printf("%d R\n", b[i]); else printf("%d L\n", -b[i]); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int n, a[N], b[N]; char s[N]; void sol(int l, int r, int d) { if (d == 1) { b[d] = a[l]; return; } if (s[d - 1] == s[d]) { b[d] = a[l]; sol(l + 1, r, d - 1); } else { b[d] = a[r]; sol(l, r - 1, d - 1); } } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); scanf("%s", s + 1); sort(a + 1, a + n + 1); if (s[n] == 'L') for (int i = n; i >= 1; i -= 2) a[i] = -a[i]; else for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i]; sol(1, n, n); for (int i = 1; i <= n; i++) { if (b[i] > 0) printf("%d R\n", b[i]); else printf("%d L\n", -b[i]); } return 0; }
65	 #include <bits/stdc++.h> using namespace std; int n, a[200005]; string str; pair<int, int> ans[200005]; int main() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); sort(a, a + n); cin >> str; int now = n - 1, l = 0, r = n - 1; while (now >= 0) { if (now == 0) { ans[now] = pair<int, int>(a[now], str[l] == 'L' ? 0 : 1); break; } if (str[now] != str[now - 1]) { ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); now--; r--; } else { if (now == 1 || str[now] == str[now - 2]) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0); now -= 2; r -= 2; } else if ((r - l + 1) & 1) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); now -= 2; r--; l++; } else { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0); now -= 2; r--; l++; } } } for (int i = 0; i < n; i++) printf("%d %c\n", ans[i].first, ans[i].second ? 'R' : 'L'); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, a[200005]; string str; pair<int, int> ans[200005]; int main() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); sort(a, a + n); cin >> str; int now = n - 1, l = 0, r = n - 1; while (now >= 0) { if (now == 0) { ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); break; } if (str[now] != str[now - 1]) { ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); now--; r--; } else { if (now == 1 || str[now] == str[now - 2]) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0); now -= 2; r -= 2; } else if ((r - l + 1) & 1) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); now -= 2; r--; l++; } else { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0); now -= 2; r--; l++; } } } for (int i = 0; i < n; i++) printf("%d %c\n", ans[i].first, ans[i].second ? 'R' : 'L'); return 0; }
50	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; const int N = 500007; stack<long long> s; long long a[N]; long long f[N]; long long sum[N]; int main() { int n; scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); } s.push(0); f[0] = 1; sum[0] = 1; long long ans; for (int i = 1; i <= n; i++) { while (!s.empty() && a[s.top()] >= a[i]) { long long pos = s.top(); s.pop(); if (s.empty()) { ans = (ans - a[pos] * sum[pos - 1] % mod + mod) % mod; } else { ans = (ans - a[pos] * (sum[pos - 1] - sum[s.top() - 1] + mod) % mod + mod) % mod; } } if (s.empty()) { ans = (ans + a[i] * sum[i - 1] % mod) % mod; } else { ans = (ans + a[i] * ((sum[i - 1] - sum[s.top() - 1] + mod) % mod) % mod) % mod; } s.push(i); if (i % 2 == 1) { f[i] = ans; } else { f[i] = (mod - ans) % mod; } if (i % 2 == 1) { f[i] = (mod - f[i]) % mod; } sum[i] = (f[i] + sum[i - 1]) % mod; } if (n % 2 == 1) { printf("%lld\n", (mod - f[n]) % mod); } else { printf("%lld\n", f[n]); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; const int N = 500007; stack<long long> s; long long a[N]; long long f[N]; long long sum[N]; int main() { int n; scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%lld", &a[i]); } s.push(0); f[0] = 1; sum[0] = 1; long long ans = 0; for (int i = 1; i <= n; i++) { while (!s.empty() && a[s.top()] >= a[i]) { long long pos = s.top(); s.pop(); if (s.empty()) { ans = (ans - a[pos] * sum[pos - 1] % mod + mod) % mod; } else { ans = (ans - a[pos] * (sum[pos - 1] - sum[s.top() - 1] + mod) % mod + mod) % mod; } } if (s.empty()) { ans = (ans + a[i] * sum[i - 1] % mod) % mod; } else { ans = (ans + a[i] * ((sum[i - 1] - sum[s.top() - 1] + mod) % mod) % mod) % mod; } s.push(i); if (i % 2 == 1) { f[i] = ans; } else { f[i] = (mod - ans) % mod; } if (i % 2 == 1) { f[i] = (mod - f[i]) % mod; } sum[i] = (f[i] + sum[i - 1]) % mod; } if (n % 2 == 1) { printf("%lld\n", (mod - f[n]) % mod); } else { printf("%lld\n", f[n]); } return 0; }
50	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') f = ch == '-' ? -1 : 1, ch = getchar(); while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar(); return x * f; } const long long N(2e5 + 10); const long long mod(998244353); long long n; long long a[N]; long long g[N]; long long s[N]; long long pre[N]; long long nxt[N]; long long stk[N]; signed main() { n = read(); a[1] = a[n + 2] = -1e9; long long top = 1; stk[1] = 1; for (long long i = (2); i <= (n + 1); i++) a[i] = read(); for (long long i = (2); i <= (n + 2); i++) { for (; top && a[stk[top]] >= a[i]; top--) nxt[stk[top]] = i; pre[i] = stk[top], stk[++top] = i; } s[1] = 1; for (long long i = (2); i <= (n + 1); i++) { long long x = s[i - 1] - s[pre[i] - 1] + mod; x = (x % mod * a[i]) % mod, (g[i] += g[i - 1] + x) %= mod; (g[nxt[i]] += mod - x) %= mod, s[i] = (s[i - 1] + mod - g[i]) % mod; } if ((n + 1) & 1) g[n + 1] = mod - g[n + 1]; cout << g[n + 1]; return 0; }	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') f = ch == '-' ? -1 : 1, ch = getchar(); while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar(); return x * f; } const long long N(2e5 + 10); const long long mod(998244353); long long n; long long a[N]; long long g[N]; long long s[N]; long long pre[N]; long long nxt[N]; long long stk[N]; signed main() { n = read(); a[1] = a[n + 2] = -1e9; long long top = 1; stk[1] = 1; for (long long i = (2); i <= (n + 1); i++) a[i] = read(); for (long long i = (2); i <= (n + 2); i++) { for (; top && a[stk[top]] >= a[i]; top--) nxt[stk[top]] = i; pre[i] = stk[top], stk[++top] = i; } s[1] = 1; for (long long i = (2); i <= (n + 1); i++) { long long x = s[i - 1] - s[pre[i] - 1] + mod; x = (x % mod * a[i]) % mod, (g[i] += g[i - 1] + x) %= mod; (g[nxt[i]] += mod - x) %= mod, s[i] = (s[i - 1] + mod - g[i]) % mod; } if ((n + 1) & 1) g[n + 1] = mod - g[n + 1]; cout << g[n + 1] % mod; return 0; }
51	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; while (n--) { long long int num, a = 0, l = 0; cin >> num; cout << 0 - n + 1 << " " << n << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; while (n--) { long long int num, a = 0, l = 0; cin >> num; cout << 0 - num + 1 << " " << num << "\n"; } }
51	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { long long n; cin >> n; if (n == 0) { printf("0 1\n"); continue; } printf("-%lld %lld\n", n - 1, n); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { long long n; cin >> n; if (n == 1) { printf("0 1\n"); continue; } printf("-%lld %lld\n", n - 1, n); } return 0; }
52	 #include <bits/stdc++.h> using namespace std; void solve(); void solvet() { int t; cin >> t; for (long long __ = (0); __ < (t); __++) solve(); } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cout.precision(9); ; cout << setprecision(20); solvet(); return 0; } void solve() { long long mod = 1e9 + 7; long long n, k; cin >> n >> k; long long ans = 0; long long len = log2(k); for (long long i = (0); i < (len + 10); i++) { if (k & (1 << i)) { long long p = 1; for (long long j = (0); j < (i); j++) { p *= n; p %= mod; } ans += p; ans %= mod; } } cout << ans << endl; }	 #include <bits/stdc++.h> using namespace std; void solve(); void solvet() { int t; cin >> t; for (long long __ = (0); __ < (t); __++) solve(); } int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); cout.precision(9); ; cout << setprecision(20); solvet(); return 0; } void solve() { long long mod = 1e9 + 7; long long n, k; cin >> n >> k; long long ans = 0; long long len = log2(k); for (long long i = (0); i < (len + 1); i++) { if (k & (1 << i)) { long long p = 1; for (long long j = (0); j < (i); j++) { p *= n; p %= mod; } ans += p; ans %= mod; } } cout << ans << endl; }
52	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; long long ksm(long long x, int k) { long long sum = 1; while (k) { if (k & 1) sum = sum * x % mod; x = x * x % mod; k >>= 1; } return sum; } void solve() { int n, k; long long ans = 0; scanf("%d%d", &n, &k); for (int i = 19; i >= 0; i--) { if ((1 << i) <= k) { k -= (1 << i); ans = (ans + ksm(n, i)) % mod; } } printf("%lld\n", ans); } int main() { int t; scanf("%d", &t); while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; long long ksm(long long x, int k) { long long sum = 1; while (k) { if (k & 1) sum = sum * x % mod; x = x * x % mod; k >>= 1; } return sum; } void solve() { int n, k; long long ans = 0; scanf("%d%d", &n, &k); for (int i = 33; i >= 0; i--) { if ((1ll << i) <= k) { k -= (1 << i); ans = (ans + ksm(n, i)) % mod; } } printf("%lld\n", ans); } int main() { int t; scanf("%d", &t); while (t--) solve(); return 0; }
53	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << " " << H; dbg_out(T...); } void solve() { int n; char c; string s; cin >> n >> c >> s; vector<int> ans; bool need = false; for (int i = 0; i < n; i++) { if (s[i] != c) { need = true; } } for (int i = n / 2; i < n - 1; i++) { if (s[i] == c) { ans.push_back(i + 1); break; } } if (need == false) { cout << "0\n"; return; } if ((int)ans.size() == 0) { ans.push_back(n); ans.push_back(n - 1); } cout << ans.size() << '\n'; for (int i : ans) { cout << i << ' '; } cout << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tests = 1; cin >> tests; while (tests--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << " " << H; dbg_out(T...); } void solve() { int n; char c; string s; cin >> n >> c >> s; vector<int> ans; bool need = false; for (int i = 0; i < n; i++) { if (s[i] != c) { need = true; } } for (int i = n / 2; i < n; i++) { if (s[i] == c) { ans.push_back(i + 1); break; } } if (need == false) { cout << "0\n"; return; } if ((int)ans.size() == 0) { ans.push_back(n); ans.push_back(n - 1); } cout << ans.size() << '\n'; for (int i : ans) { cout << i << ' '; } cout << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tests = 1; cin >> tests; while (tests--) { solve(); } }
53	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long T; cin >> T; while (T--) { long long n; cin >> n; char a; cin >> a; string s; cin >> s; long long ss = s.size(); bool flag = true; long long k, c = 0; int x; bool ff = true; for (int i = 0; i < ss; i++) { if (s[i] != a) { ff = false; } } if (ff) { cout << 0 << endl; continue; } if (ss % 2 == 0) { x = (ss / 2) + 1; } else { x = (ss / 2) + 1; } bool fl = false; for (long long i = x; i < ss; i++) { if (s[i - 1] == a) { fl = true; c = i; break; } } if (fl) { cout << 1 << endl; cout << c << endl; } else { cout << 2 << endl; cout << ss << " " << ss - 1 << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long T; cin >> T; while (T--) { long long n; cin >> n; char a; cin >> a; string s; cin >> s; long long ss = s.size(); bool flag = true; long long k, c = 0; int x; bool ff = true; for (int i = 0; i < ss; i++) { if (s[i] != a) { ff = false; } } if (ff) { cout << 0 << endl; continue; } if (ss % 2 == 0) { x = (ss / 2) + 1; } else { x = (ss / 2) + 1; } bool fl = false; for (long long i = x; i <= ss; i++) { if (s[i - 1] == a) { fl = true; c = i; break; } } if (fl) { cout << 1 << endl; cout << c << endl; } else { cout << 2 << endl; cout << ss << " " << ss - 1 << endl; } } }
53	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { vector<int> ans; int p = 0, flag = 0, n; string s; char ch; cin >> n >> ch; cin >> s; s = " " + s; for (int i = 1; i < n; i++) if (s[i] != ch) flag = 1; if (!flag) cout << "0" << endl; else if (s[n] != ch) { int f = 0; for (int i = 1; i <= n; i++) { f = 0; for (int j = i; j <= n; j += i) if (s[j] != ch) f = 1; if (!f) { cout << "1" << endl << i << endl; break; } } if (f) cout << "2" << endl << n - 1 << " " << n << endl; } else cout << "1" << endl << n << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { vector<int> ans; int p = 0, flag = 0, n; string s; char ch; cin >> n >> ch; cin >> s; s = " " + s; for (int i = 1; i <= n; i++) if (s[i] != ch) flag = 1; if (!flag) cout << "0" << endl; else if (s[n] != ch) { int f = 0; for (int i = 1; i <= n; i++) { f = 0; for (int j = i; j <= n; j += i) if (s[j] != ch) f = 1; if (!f) { cout << "1" << endl << i << endl; break; } } if (f) cout << "2" << endl << n - 1 << " " << n << endl; } else cout << "1" << endl << n << endl; } return 0; }
53	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 10, mod = 1e9 + 7; template <typename T> void Debug(T x, string s) { cout << s << ": " << x << endl; } const int maxn = 1e6 + 10; int prime[maxn]; int visit[maxn]; void Prime() { visit[1] = 1; for (int i = 2; i < maxn; i++) { if (!visit[i]) { prime[++prime[0]] = i; } for (int j = 1; j <= prime[0] && i * prime[j] < maxn; j++) { visit[i * prime[j]] = 1; if (i % prime[j] == 0) { break; } } } } void solve() { int n; char c; cin >> n >> c; string s; cin >> s; vector<int> vec; for (int i = 0; i < n; i++) { if (s[i] != c) vec.push_back(i + 1); } if (!vec.size()) { cout << 0 << endl; return; } if (s[n - 1] == c) { cout << 1 << endl; cout << n << endl; return; } for (int i = n / 2; i <= n; i++) { if (s[i - 1] == c) { cout << 1 << endl; cout << i << endl; return; } } cout << 2 << endl; cout << n - 1 << " " << n << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); Prime(); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 10, mod = 1e9 + 7; template <typename T> void Debug(T x, string s) { cout << s << ": " << x << endl; } const int maxn = 1e6 + 10; int prime[maxn]; int visit[maxn]; void Prime() { visit[1] = 1; for (int i = 2; i < maxn; i++) { if (!visit[i]) { prime[++prime[0]] = i; } for (int j = 1; j <= prime[0] && i * prime[j] < maxn; j++) { visit[i * prime[j]] = 1; if (i % prime[j] == 0) { break; } } } } void solve() { int n; char c; cin >> n >> c; string s; cin >> s; vector<int> vec; for (int i = 0; i < n; i++) { if (s[i] != c) vec.push_back(i + 1); } if (!vec.size()) { cout << 0 << endl; return; } if (s[n - 1] == c) { cout << 1 << endl; cout << n << endl; return; } for (int i = n / 2 + 1; i <= n; i++) { if (s[i - 1] == c) { cout << 1 << endl; cout << i << endl; return; } } cout << 2 << endl; cout << n - 1 << " " << n << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); Prime(); int t; cin >> t; while (t--) solve(); }
53	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 3, Mod = 1e9 + 7; const int maxN = 1e5 + 3; long long gcd(long long a, long long b) { if (a > b) swap(a, b); if (a == 0) return b; return gcd(b, a % b); } void solve() { long long n; char c; string s; cin >> n >> c; cin >> s; bool issame = 1; bool divby[n + 1]; for (int i = 1; i <= n; i++) divby[i] = 0; for (int i = 0; i < n; i++) { if (s[i] != c) { issame = 0; for (int j = 1; j * j <= i + 1; j++) { if ((i + 1) % j == 0) { divby[j] = 1; divby[(i + 1) / j] = 1; } } } } if (issame) { cout << 0 << endl; return; } for (int i = 1; i <= n; i++) { if (divby[i] == 0) { cout << 1 << endl; cout << i << endl; return; } } cout << 2 << endl; for (int i = 2; i < n; i++) { if (n % i != 0) { cout << n << " " << i << endl; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 3, Mod = 1e9 + 7; const int maxN = 1e5 + 3; long long gcd(long long a, long long b) { if (a > b) swap(a, b); if (a == 0) return b; return gcd(b, a % b); } void solve() { long long n; char c; string s; cin >> n >> c; cin >> s; bool issame = 1; bool divby[n + 1]; for (int i = 1; i <= n; i++) divby[i] = 0; for (int i = 0; i < n; i++) { if (s[i] != c) { issame = 0; for (int j = 1; j * j <= i + 1; j++) { if ((i + 1) % j == 0) { divby[j] = 1; divby[(i + 1) / j] = 1; } } } } if (issame) { cout << 0 << endl; return; } for (int i = 1; i <= n; i++) { if (divby[i] == 0) { cout << 1 << endl; cout << i << endl; return; } } cout << 2 << endl; for (int i = 2; i < n; i++) { if (n % i != 0) { cout << n << " " << i << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t = 1; cin >> t; for (int i = 0; i < t; i++) { solve(); } }
53	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; char c; cin >> n >> c; string s; cin >> s; long long int o = 0, e = 0; long long int vo, ve; for (long long int i = 1; i <= n; i++) { if (s[i - 1] != c) { if (i % 2) { o++; vo = i; } else { e++; ve = i; } } } if (o == 0 and e == 0) { cout << 0 << endl; } else if (o == 0) { cout << 1 << endl; if (ve - 1 != 1) cout << ve - 1 << endl; else { cout << ve + 1 << endl; } } else if (e == 0) { cout << 1 << endl << 2 << endl; } else { vector<long long int> idx, b; for (long long int i = 1; i <= n; i++) { if (s[i - 1] == c) { idx.push_back(i); } else { b.push_back(i); } } for (auto i : idx) { long long int j = i; long long int cnt = 1; long long int flag = 1; while (j * cnt < n) { if (binary_search(b.begin(), b.end(), j * cnt)) { flag = 0; break; } cnt++; } if (flag) { cout << 1 << endl << i << endl; return; } } cout << 2 << endl; if (ve - 1 != 1) cout << "2 " << ve - 1 << endl; else { cout << "2 " << ve + 1 << endl; } } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; char c; cin >> n >> c; string s; cin >> s; long long int o = 0, e = 0; long long int vo, ve; for (long long int i = 1; i <= n; i++) { if (s[i - 1] != c) { if (i % 2) { o++; vo = i; } else { e++; ve = i; } } } if (o == 0 and e == 0) { cout << 0 << endl; } else if (o == 0) { cout << 1 << endl; if (ve - 1 != 1) cout << ve - 1 << endl; else { cout << ve + 1 << endl; } } else if (e == 0) { cout << 1 << endl << 2 << endl; } else { vector<long long int> idx, b; for (long long int i = 1; i <= n; i++) { if (s[i - 1] == c) { idx.push_back(i); } else { b.push_back(i); } } for (auto i : idx) { long long int j = i; long long int cnt = 1; long long int flag = 1; while (j * cnt <= n) { if (binary_search(b.begin(), b.end(), j * cnt)) { flag = 0; break; } cnt++; } if (flag) { cout << 1 << endl << i << endl; return; } } cout << 2 << endl; if (ve - 1 != 1) cout << "2 " << ve - 1 << endl; else { cout << "2 " << ve + 1 << endl; } } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) solve(); return 0; }
54	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 100; int fa[maxn], col[maxn][2], dis[maxn]; int find(int x) { if (x != fa[x]) { int root = find(fa[x]); dis[x] ^= dis[fa[x]]; fa[x] = root; } return fa[x]; } int main() { int t; cin >> t; while (t--) { bool f = false; int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) { fa[i] = i; dis[i] = 0; col[i][0] = 1; col[i][1] = 0; } for (int i = 1; i <= m; i++) { int x, y; string s; cin >> x >> y >> s; int val = s[0] == 'i' ? 1 : 0; int px = find(x), py = find(y); if (px == py) { if ((dis[x] ^ dis[y]) != val) { f = true; break; } } else { fa[py] = px; dis[py] = dis[x] ^ dis[y] ^ val; col[px][1] += col[py][dis[py] ^ 1]; col[px][0] += col[py][dis[py]]; } } if (f) { puts("-1"); continue; } int ans = 0; for (int i = 1; i <= n; i++) { if (fa[i] == i) { ans += max(col[i][0], col[i][1]); } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 100; int fa[maxn], col[maxn][2], dis[maxn]; int find(int x) { if (x != fa[x]) { int root = find(fa[x]); dis[x] ^= dis[fa[x]]; fa[x] = root; } return fa[x]; } int main() { int t; cin >> t; while (t--) { bool f = false; int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) { fa[i] = i; dis[i] = 0; col[i][0] = 1; col[i][1] = 0; } for (int i = 1; i <= m; i++) { int x, y; string s; cin >> x >> y >> s; int val = s[0] == 'i' ? 1 : 0; int px = find(x), py = find(y); if (px == py) { if ((dis[x] ^ dis[y]) != val) { f = true; } } else { fa[py] = px; dis[py] = dis[x] ^ dis[y] ^ val; col[px][1] += col[py][dis[py] ^ 1]; col[px][0] += col[py][dis[py]]; } } if (f) { puts("-1"); continue; } int ans = 0; for (int i = 1; i <= n; i++) { if (fa[i] == i) { ans += max(col[i][0], col[i][1]); } } cout << ans << endl; } return 0; }
55	 #include <bits/stdc++.h> using namespace std; using ll = long long; using pii = pair<int, int>; constexpr ll MOD = (ll)1e9 + 7; ll exp(ll b) { if (b == 1) { return 2LL; } ll res = exp(b / 2); res %= MOD; res *= res; res %= MOD; if (b % 2 == 1) { res *= 2; } res %= MOD; return res; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); ll k; cin >> k; if (k == 1) { cout << 6 << '\n'; return 0; } ll node_count = (1 << k) - 1; ll p = node_count - 1; ll ans = 6LL * exp(2LL * p); ans %= MOD; cout << ans << '\n'; return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using pii = pair<int, int>; constexpr ll MOD = (ll)1e9 + 7; ll exp(ll b) { if (b == 1) { return 2LL; } ll res = exp(b / 2); res %= MOD; res *= res; res %= MOD; if (b % 2 == 1) { res *= 2; } res %= MOD; return res; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); ll k; cin >> k; if (k == 1) { cout << 6 << '\n'; return 0; } ll node_count = (1LL << k) - 1; ll p = node_count - 1; ll ans = 6LL * exp(2LL * p); ans %= MOD; cout << ans << '\n'; return 0; }
55	 #include <bits/stdc++.h> using namespace std; inline char gc() { static char buf[1000000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++; } long long read() { long long pos = 1, num = 0; char ch = getchar(); while (!isdigit(ch)) { if (ch == '-') pos = -1; ch = getchar(); } while (isdigit(ch)) { num = num * 10 + (long long)(ch - '0'); ch = getchar(); } return pos * num; } void write(long long x) { if (x < 0) { putchar('-'); write(-x); return; } if (x >= 10) write(x / 10); putchar(x % 10 + '0'); } void writesp(long long x) { write(x); putchar(' '); } void writeln(long long x) { write(x); putchar('\n'); } const long long mod = 1e9 + 7; inline long long quickpower(long long a, long long b) { long long res = 1; a %= mod; while (b) { if (b & 1) (res *= a) %= mod; b >>= 1; (a *= a) %= mod; } return res; } signed main() { long long k = read(); writeln(6 * quickpower(4, (1 << k) - 2) % mod); }	 #include <bits/stdc++.h> using namespace std; inline char gc() { static char buf[1000000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++; } long long read() { long long pos = 1, num = 0; char ch = getchar(); while (!isdigit(ch)) { if (ch == '-') pos = -1; ch = getchar(); } while (isdigit(ch)) { num = num * 10 + (long long)(ch - '0'); ch = getchar(); } return pos * num; } void write(long long x) { if (x < 0) { putchar('-'); write(-x); return; } if (x >= 10) write(x / 10); putchar(x % 10 + '0'); } void writesp(long long x) { write(x); putchar(' '); } void writeln(long long x) { write(x); putchar('\n'); } const long long mod = 1e9 + 7; inline long long quickpower(long long a, long long b) { long long res = 1; a %= mod; while (b) { if (b & 1) (res *= a) %= mod; b >>= 1; (a *= a) %= mod; } return res; } signed main() { long long k = read(); writeln(6 * quickpower(4, (1ll << k) - 2) % mod); }
55	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; int pwr(int a, long long b) { int res = 1; for (; b; b >>= 1) { if (b & 1) res = 1LL * res * a % MOD; a = 1LL * a * a % MOD; } return res; } int T, n; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); T = 1; while (T--) { cin >> n; if (n == 1) return cout << 6 << '\n', 0; long long x = (1 << n); x -= 2; cout << 1LL * 6 * pwr(4, x) % MOD << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; int pwr(int a, long long b) { int res = 1; for (; b; b >>= 1) { if (b & 1) res = 1LL * res * a % MOD; a = 1LL * a * a % MOD; } return res; } int T, n; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); T = 1; while (T--) { cin >> n; if (n == 1) return cout << 6 << '\n', 0; long long x = (1LL << n); x -= 2; cout << 1LL * 6 * pwr(4, x) % MOD << '\n'; } }
55	 #include <bits/stdc++.h> using namespace std; long long int pwr(long long int a, long long int b) { long long int res = 1; while (b > 0) { if (b & 1) { res = (res % 1000000007 * a % 1000000007) % 1000000007; } a = (a % 1000000007 * a % 1000000007) % 1000000007; b >>= 1; } return res; } int main() { long long int k, ans = 1, nodes = 0; cin >> k; nodes = pwr(2, k); nodes = nodes - 2; ans = pwr(4, nodes); ans %= 1000000007; ans *= 6; cout << (ans % 1000000007); return 0; }	 #include <bits/stdc++.h> using namespace std; long long int pwr(long long int a, long long int b) { long long int res = 1; while (b > 0) { if (b & 1) { res = (res % 1000000007 * a % 1000000007) % 1000000007; } a = (a % 1000000007 * a % 1000000007) % 1000000007; b >>= 1; } return res; } int main() { long long int k, ans = 1, nodes = 0; cin >> k; nodes = pow(2, k); nodes = nodes - 2; ans = pwr(4, nodes); ans %= 1000000007; ans *= 6; cout << (ans % 1000000007); return 0; }
57	 #include <bits/stdc++.h> using namespace std; void solve() { long long s, n, k; cin >> s >> n >> k; if (s == k) { cout << "YES\n"; return; } long long num = s / (k * 2) * k, ost = k % (k * 2); long long mn = min(ost + 1, k); if (n + 1 > mn + num) cout << "YES\n"; else cout << "NO\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int test; cin >> test; while (test--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long s, n, k; cin >> s >> n >> k; if (s == k) { cout << "YES\n"; return; } long long num = s / (k * 2) * k, ost = s % (k * 2); long long mn = min(ost + 1, k); if (n + 1 > mn + num) cout << "YES\n"; else cout << "NO\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int test; cin >> test; while (test--) { solve(); } return 0; }
57	 #include <bits/stdc++.h> using namespace std; using ll = long long; using pii = pair<int, int>; using pll = pair<ll, ll>; const int maxn = 2e5 + 10; int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { ll s, n, k; cin >> s >> n >> k; if (s == k) { cout << "YES\n"; continue; } if (s < k) { cout << "NO\n"; continue; } int u = s - n; int v = (n / k) * k; if (u < v) cout << "YES\n"; else cout << "NO\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using pii = pair<int, int>; using pll = pair<ll, ll>; const int maxn = 2e5 + 10; int main() { ios::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { ll s, n, k; cin >> s >> n >> k; if (s == k) { cout << "YES\n"; continue; } if (s < k) { cout << "NO\n"; continue; } ll u = s - n; ll v = (n / k) * k; if (u < v) cout << "YES\n"; else cout << "NO\n"; } return 0; }
57	 #include <bits/stdc++.h> using namespace std; const int maxn = 1000 + 100; const int INF = 0x7fffffff; const long long mod = 1e9 + 7; const long long mod1 = 998244353; const long long base = 137; const double Pi = acos(-1.0); const int G = 3; int main() { int t; cin >> t; while (t--) { long long s, n, k; scanf("%lld%lld%lld", &s, &n, &k); if (s < k) { puts("NO"); continue; } if (s == k) { puts("YES"); continue; } long long p = 0; p += (s % k) * (((s / k + 1) + 1) / 2); p += (k - s % k - 1) * ((s / k + 1) / 2); int q = s / k; q--; p += (q + 1) / 2; if (p >= n) { puts("NO"); } else puts("YES"); } }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1000 + 100; const int INF = 0x7fffffff; const long long mod = 1e9 + 7; const long long mod1 = 998244353; const long long base = 137; const double Pi = acos(-1.0); const int G = 3; int main() { int t; cin >> t; while (t--) { long long s, n, k; scanf("%lld%lld%lld", &s, &n, &k); if (s < k) { puts("NO"); continue; } if (s == k) { puts("YES"); continue; } long long p = 0; p += (s % k) * (((s / k + 1) + 1) / 2); p += (k - s % k - 1) * ((s / k + 1) / 2); long long q = s / k; q--; p += (q + 1) / 2; if (p >= n) { puts("NO"); } else puts("YES"); } }
57	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = '.'; while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return f * x; } inline void chmax(long long &x, long long y) { x = max(x, y); } inline void chmin(long long &x, long long y) { x = min(x, y); } const long long MOD = 998244353; inline long long add(long long x, long long y) { return (x + y >= MOD) ? (x + y - MOD) : ((x + y < 0) ? (x + y + MOD) : (x + y)); } long long s, n, k; signed main() { long long test_case = read(); while (test_case--) { s = read(), n = read(), k = read(); if (s < k) puts("NO"); else if (s == k) puts("YES"); else { long long t = s / (2 * k) * k, c = t + min(s % (2 * k), k - 1); if (c > n) puts("NO"); else puts("YES"); } } return 0; }	 #include <bits/stdc++.h> using namespace std; inline long long read() { long long x = 0, f = 1; char ch = '.'; while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return f * x; } inline void chmax(long long &x, long long y) { x = max(x, y); } inline void chmin(long long &x, long long y) { x = min(x, y); } const long long MOD = 998244353; inline long long add(long long x, long long y) { return (x + y >= MOD) ? (x + y - MOD) : ((x + y < 0) ? (x + y + MOD) : (x + y)); } long long s, n, k; signed main() { long long test_case = read(); while (test_case--) { s = read(), n = read(), k = read(); if (s < k) puts("NO"); else if (s == k) puts("YES"); else { long long t = s / (2 * k) * k, c = t + min(s % (2 * k), k - 1); if (c >= n) puts("NO"); else puts("YES"); } } return 0; }
57	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const int INF = 0x3f3f3f3f, MOD = 1e9 + 7; const int N = 1e3 + 5; int t; ll s, n, k; int main() { ios_base::sync_with_stdio(0), cin.tie(0); cin >> t; while (t--) { cin >> s >> n >> k; ll mx = max(n, (n / k) * k + n - 1); ll mn = k; if (s >= mn and s <= mx) cout << "YES\n"; else cout << "NO\n"; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const int INF = 0x3f3f3f3f, MOD = 1e9 + 7; const int N = 1e3 + 5; int t; ll s, n, k; int main() { ios_base::sync_with_stdio(0), cin.tie(0); cin >> t; while (t--) { cin >> s >> n >> k; ll mx = max(k, (n / k) * k + n - 1); ll mn = k; if (s >= mn and s <= mx) cout << "YES\n"; else cout << "NO\n"; } }
57	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, s, k; cin >> s >> n >> k; if (s == k) cout << "YES" << endl; else if (s < k) { cout << "NO" << endl; } else { s++; auto d = s / (2 * k); auto y = s % (2 * k); auto p = k * d + min(y, k) - 2; if (n - 1 >= p) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; while (T--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, s, k; cin >> s >> n >> k; if (s == k) cout << "YES" << endl; else if (s < k) { cout << "NO" << endl; } else { s++; auto d = s / (2 * k); auto y = s % (2 * k); auto p = k * d + min(y, k) - 2; if (n - 1 > p) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; while (T--) { solve(); } }
57	 #include <bits/stdc++.h> using namespace std; long long n, m, k; long long read() { long long s = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { s = s * 10 + ch - '0'; ch = getchar(); } return s * f; } long long g(long long x) { return (x + 1) / 2; } signed main() { long long T = read(); while (T--) { long long s; s = read(), n = read(), k = read(); if (s == k) { puts("NO"); continue; } swap(n, s); long long p = n / k, q = n % k; long long w = q * g(p + 1) + (k - q) * g(p); if (p != 0) w -= g(p); w += g(p - 1); if (w >= s) puts("NO"); else puts("YES"); } }	 #include <bits/stdc++.h> using namespace std; long long n, m, k; long long read() { long long s = 0, f = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { s = s * 10 + ch - '0'; ch = getchar(); } return s * f; } long long g(long long x) { return (x + 1) / 2; } signed main() { long long T = read(); while (T--) { long long s; s = read(), n = read(), k = read(); if (s == k) { puts("YES"); continue; } swap(n, s); long long p = n / k, q = n % k; long long w = q * g(p + 1) + (k - q) * g(p); if (p != 0) w -= g(p); w += g(p - 1); if (w >= s) puts("NO"); else puts("YES"); } }
58	 #include <bits/stdc++.h> using namespace std; int main() { int i, j, t; cin >> t; while (t--) { int n; cin >> n; string str1, str2; cin >> str1 >> str2; int flag = 1; for (i = 2; i <= str1.length() - 2; i++) { if (str1[i] == '1' && str2[i] == '1') { flag = 0; break; } } if (flag) printf("YES\n"); else printf("NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int i, j, t; cin >> t; while (t--) { int n; cin >> n; string str1, str2; cin >> str1 >> str2; int flag = 1; for (i = 1; i <= str1.length() - 2; i++) { if (str1[i] == '1' && str2[i] == '1') { flag = 0; break; } } if (flag) printf("YES\n"); else printf("NO\n"); } return 0; }
58	 #include <bits/stdc++.h> using namespace std; long long int dp[1000001]; long long int dp1[1000001]; long long int inv[1000001]; void solve() { int n; cin >> n; string a, b; cin >> a >> b; for (int i = 0; i < n; i++) { if (a[i] == '1' || b[i] == '1') { cout << "NO"; return; } } cout << "YES"; } void read_input() {} void case_number() { int t; cin >> t; for (int i = 1; i <= t; i++) { solve(); cout << "\n"; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; case_number(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long int dp[1000001]; long long int dp1[1000001]; long long int inv[1000001]; void solve() { int n; cin >> n; string a, b; cin >> a >> b; for (int i = 0; i < n; i++) { if (a[i] == '1' && b[i] == '1') { cout << "NO"; return; } } cout << "YES"; } void read_input() {} void case_number() { int t; cin >> t; for (int i = 1; i <= t; i++) { solve(); cout << "\n"; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); ; case_number(); return 0; }
58	 #include <bits/stdc++.h> using namespace std; void run_case() { int n; cin >> n; vector<string> v(2); for (int i = 0; i < 2; i++) { cin >> v[i]; } for (int i = 0; i < n; i++) { if (v[0][i] == '1' && v[1][i] == '1') { cout << "N0" << endl; return; } } cout << "YES" << endl; } int main() { int tc = 1; cin >> tc; while (tc--) { run_case(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void run_case() { int n; cin >> n; vector<string> v(2); for (int i = 0; i < 2; i++) { cin >> v[i]; } for (int i = 0; i < n; i++) { if (v[0][i] == '1' && v[1][i] == '1') { cout << "NO" << endl; return; } } cout << "YES" << endl; } int main() { int tc = 1; cin >> tc; while (tc--) { run_case(); } return 0; }
58	 #include <bits/stdc++.h> using namespace std; void run_case() { int n; cin >> n; vector<string> v(2); for (int i = 0; i < 2; i++) { cin >> v[i]; } for (int i = 0; i < n; i++) { if (v[0][i] == '1' && v[1][i] == '1') { cout << "N0" << endl; return; } } cout << "Yes" << endl; } int main() { int tc = 1; cin >> tc; while (tc--) { run_case(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void run_case() { int n; cin >> n; vector<string> v(2); for (int i = 0; i < 2; i++) { cin >> v[i]; } for (int i = 0; i < n; i++) { if (v[0][i] == '1' && v[1][i] == '1') { cout << "NO" << endl; return; } } cout << "YES" << endl; } int main() { int tc = 1; cin >> tc; while (tc--) { run_case(); } return 0; }
58	 #include <bits/stdc++.h> using namespace std; int main() { int k; cin >> k; while (k--) { int n, f = 1; string sa, sb; cin >> n >> sa >> sb; for (int i = 0; i < n; i++) if ((sa[i] == '1') && (sb[i] = '1')) { f = 0; break; } if (f) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int k; cin >> k; while (k--) { int n, f = 1; string sa, sb; cin >> n >> sa >> sb; for (int i = 0; i < n; i++) if ((sa[i] == '1') && (sb[i] == '1')) { f = 0; break; } if (f) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
58	 #include <bits/stdc++.h> using namespace std; vector<long long> factors; void FAST() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); } long long binpow(long long a, long long b) { if (b == 0) return 1; long long res = binpow(a, b / 2); res *= res; if (b % 2 == 0) return res; else return (res * a); } long long binpow_Mod(long long a, long long b) { if (b == 0) return 1; long long res = (binpow_Mod(a, b / 2)) % 1000000007; res *= res; res %= 1000000007; if (b % 2 == 0) return res; else return ((res * a) % 1000000007); } long long HCF(long long a, long long b) { if (a == 0) return b; else return HCF(b % a, a); } long long LCM(long long a, long long b) { return ((a * b) / HCF(a, b)); } bool sortbysec(const pair<long long, long long>& a, const pair<long long, long long>& b) { return (a.second < b.second); } void factorise(long long a) { factors.clear(); for (long long i = 1; i * i <= a; i++) { if (i * i == a) factors.push_back(i); else if (a % i == 0) { factors.push_back(i); factors.push_back(a / i); } sort(factors.begin(), factors.end()); } } int main() { FAST(); int t; cin >> t; while (t--) { int n; cin >> n; string a, b; cin >> a >> b; bool ans = true; for (long long i = 0; i < n; i++) { if (a[i] == '1' && b[1] == '1') { ans = false; break; } } if (ans) cout << "YES\n"; else cout << "NO\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; vector<long long> factors; void FAST() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); } long long binpow(long long a, long long b) { if (b == 0) return 1; long long res = binpow(a, b / 2); res *= res; if (b % 2 == 0) return res; else return (res * a); } long long binpow_Mod(long long a, long long b) { if (b == 0) return 1; long long res = (binpow_Mod(a, b / 2)) % 1000000007; res *= res; res %= 1000000007; if (b % 2 == 0) return res; else return ((res * a) % 1000000007); } long long HCF(long long a, long long b) { if (a == 0) return b; else return HCF(b % a, a); } long long LCM(long long a, long long b) { return ((a * b) / HCF(a, b)); } bool sortbysec(const pair<long long, long long>& a, const pair<long long, long long>& b) { return (a.second < b.second); } void factorise(long long a) { factors.clear(); for (long long i = 1; i * i <= a; i++) { if (i * i == a) factors.push_back(i); else if (a % i == 0) { factors.push_back(i); factors.push_back(a / i); } sort(factors.begin(), factors.end()); } } int main() { FAST(); int t; cin >> t; while (t--) { int n; cin >> n; string a, b; cin >> a >> b; bool ans = true; for (long long i = 0; i < n; i++) { if (a[i] == '1' && b[i] == '1') { ans = false; break; } } if (ans) cout << "YES\n"; else cout << "NO\n"; } return 0; }
59	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; void coutar(int a[], int n); void cinar(int* a, int n); void fun() { int n; cin >> n; int a[n][5]; long long int sum = 0; for (int i = 0; i < n; i++) { for (int j = 0; j < 5; j++) { cin >> a[i][j]; } } int u1 = 0, u2 = 0, c = 0; for (int e = 0; e < 4; e++) { for (int f = e + 1; f < 5; f++) { c = 0; u1 = 0; u2 = 0; for (int i = 0; i < n; i++) { if (a[i][e] == 1 && a[i][f] == 1) { c++; } if (a[i][e] == 0 && a[i][f] == 0) { u1++; } if (a[i][e] == 0 && a[i][f] == 1) { u2++; } if (a[i][e] == 0 && a[i][f] == 0) { continue; } } if (c + u1 + u2 >= n) { if (u1 + c >= n / 2) { if (u2 + c >= n / 2) { cout << "YES\n"; return; } } } } } cout << "NO\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { fun(); } } void coutar(int a[], int n) { for (int i = 0; i < n; i++) { cout << a[i] << " "; } cout << "\n"; } void cinar(int* a, int n) { for (int i = 0; i < n; i++) { cin >> a[i]; } }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; void coutar(int a[], int n); void cinar(int* a, int n); void fun() { int n; cin >> n; int a[n][5]; long long int sum = 0; for (int i = 0; i < n; i++) { for (int j = 0; j < 5; j++) { cin >> a[i][j]; } } int u1 = 0, u2 = 0, c = 0; for (int e = 0; e < 4; e++) { for (int f = e + 1; f < 5; f++) { c = 0; u1 = 0; u2 = 0; for (int i = 0; i < n; i++) { if (a[i][e] == 1 && a[i][f] == 1) { c++; } if (a[i][e] == 1 && a[i][f] == 0) { u1++; } if (a[i][e] == 0 && a[i][f] == 1) { u2++; } if (a[i][e] == 0 && a[i][f] == 0) { continue; } } if (c + u1 + u2 >= n) { if (u1 + c >= n / 2) { if (u2 + c >= n / 2) { cout << "YES\n"; return; } } } } } cout << "NO\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { fun(); } } void coutar(int a[], int n) { for (int i = 0; i < n; i++) { cout << a[i] << " "; } cout << "\n"; } void cinar(int* a, int n) { for (int i = 0; i < n; i++) { cin >> a[i]; } }
59	 #include <bits/stdc++.h> using namespace std; void sol() { long long n; cin >> n; long long a[n][5]; for (int i = 0; i < n; i++) { for (int j = 0; j < 5; j++) { cin >> a[i][j]; } } for (int i = 0; i < n; i++) { for (int j = i + 1; j < 5; j++) { long long int cnt1 = 0, cnt2 = 0, cnt = 0; for (int l = 0; l < n; l++) { if (a[l][i] == 1) cnt++; if (a[l][j] == 1) cnt1++; if (a[l][i] == 1 && a[l][j] == 1) { cnt2++; cnt1--; cnt--; } } if (cnt <= n / 2 && cnt1 <= n / 2) { if (cnt + cnt1 + cnt2 == n) { cout << "YES" << "\n"; return; } } } } cout << "NO" << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) sol(); return 0; }	 #include <bits/stdc++.h> using namespace std; void sol() { long long n; cin >> n; long long a[n][5]; for (int i = 0; i < n; i++) { for (int j = 0; j < 5; j++) { cin >> a[i][j]; } } for (int i = 0; i < 5; i++) { for (int j = i + 1; j < 5; j++) { long long int cnt1 = 0, cnt2 = 0, cnt = 0; for (int l = 0; l < n; l++) { if (a[l][i] == 1) cnt++; if (a[l][j] == 1) cnt1++; if (a[l][i] == 1 && a[l][j] == 1) { cnt2++; cnt1--; cnt--; } } if (cnt <= n / 2 && cnt1 <= n / 2) { if (cnt + cnt1 + cnt2 == n) { cout << "YES" << "\n"; return; } } } } cout << "NO" << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) sol(); return 0; }
60	 #include <bits/stdc++.h> #pragma gcc optimize("Ofast,no-stack-protector,tune=native") #pragma gcc optimize("sse,sse2,sse3,sse4,ssse3") #pragma gcc optimize("O3") #pragma gcc optimize("abm,mmx,avx,avx2,unroll-loops,fast-math,section-anchors") #pragma GCC target("avx,avx2") const long long inf = 1e18, mod = 1e9 + 9, N = 400000; const int k = 320, mil = 102300; const long double pi = acos(-1); using namespace std; void solve() { int n; cin >> n; vector<long long> a(n); long long s = 0, ret = 0; map<long long, int> m; for (int i = 0; i < n; i++) { cin >> a[i]; if (m.end() == m.find(a[i])) m[a[i]] = 0; m[a[i]]++; s += a[i]; } s *= 2; if (s % n != 0) { cout << "0\n"; return; } s /= n; for (auto [x, y] : m) { if (x != s - x) ret += y * m[s - x]; else ret += y * (y - 1); } cout << ret / 2 << "\n"; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.precision(20); int t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> #pragma gcc optimize("Ofast,no-stack-protector,tune=native") #pragma gcc optimize("sse,sse2,sse3,sse4,ssse3") #pragma gcc optimize("O3") #pragma gcc optimize("abm,mmx,avx,avx2,unroll-loops,fast-math,section-anchors") #pragma GCC target("avx,avx2") const long long inf = 1e18, mod = 1e9 + 9, N = 400000; const int k = 320, mil = 102300; const long double pi = acos(-1); using namespace std; void solve() { int n; cin >> n; vector<long long> a(n); long long s = 0, ret = 0; map<long long, long long> m; for (int i = 0; i < n; i++) { cin >> a[i]; if (m.end() == m.find(a[i])) m[a[i]] = 0; m[a[i]]++; s += a[i]; } s *= 2; if (s % n != 0) { cout << "0\n"; return; } s /= n; for (auto [x, y] : m) { if (x != s - x) ret += y * m[s - x]; else ret += y * (y - 1); } cout << ret / 2 << "\n"; return; } int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.precision(20); int t; cin >> t; while (t--) { solve(); } }
60	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int T = 1; cin >> T; while (T > 0) { long long n, sum = 0, sum2 = 0; cin >> n; unordered_map<long int, long int> m; long long temp; for (int i = 0; i < n; i++) { cin >> temp; sum = sum + temp; m[temp] = m[temp] + 1; } if ((2 * sum) % n != 0) { cout << 0 << '\n'; } else { if (m.size() == 1) { long long count = 0; cout << ((n) * (n - 1)) / 2 << '\n'; } else { long long selfcount = 0; long long count = 0, test = ((2 * sum) / n); auto tempit = m.begin(); for (auto it = m.begin(); it != m.end(); it++) { tempit = m.find(test - (it->first)); if (tempit != m.end()) { if (it->first == tempit->first) { count = count + ((it->second) * ((it->second) - 1)); continue; } count = count + (tempit->second) * (it->second); } } cout << (count / 2) << '\n'; } } T--; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int T = 1; cin >> T; while (T > 0) { long long n, sum = 0, sum2 = 0; cin >> n; map<long long, long long> m; long long temp; for (int i = 0; i < n; i++) { cin >> temp; sum = sum + temp; m[temp] = m[temp] + 1; } if ((2 * sum) % n != 0) { cout << 0 << '\n'; } else { if (m.size() == 1) { long long count = 0; cout << ((n) * (n - 1)) / 2 << '\n'; } else { long long selfcount = 0; long long count = 0, test = ((2 * sum) / n); auto tempit = m.begin(); for (auto it = m.begin(); it != m.end(); it++) { tempit = m.find(test - (it->first)); if (tempit != m.end()) { if (it->first == tempit->first) { count = count + ((it->second) * ((it->second) - 1)); continue; } count = count + (tempit->second) * (it->second); } } cout << (count / 2) << '\n'; } } T--; } }
60	 #include <bits/stdc++.h> using namespace std; const int NMAX = 200000; int a[1 + NMAX]; map<int, int> mp; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; a[0] = INT_MIN; while (t--) { int n; cin >> n; mp.clear(); long long suma = 0ll; for (int i = 1; i <= n; i++) { cin >> a[i]; suma += a[i]; mp[a[i]]++; } if ((2 * suma) % n) { cout << 0 << '\n'; continue; } long long medie = 2 * suma / n; int sol = 0; for (int i = 1; i <= n; i++) { if (a[i] == medie - a[i]) sol += mp[medie - a[i]] - 1; else sol += mp[medie - a[i]]; } cout << sol / 2 << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int NMAX = 200000; int a[1 + NMAX]; map<int, int> mp; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; a[0] = INT_MIN; while (t--) { int n; cin >> n; mp.clear(); long long suma = 0ll; for (int i = 1; i <= n; i++) { cin >> a[i]; suma += a[i]; mp[a[i]]++; } if ((2 * suma) % n) { cout << 0 << '\n'; continue; } long long medie = 2 * suma / n; long long sol = 0; for (int i = 1; i <= n; i++) { if (a[i] == medie - a[i]) sol += mp[medie - a[i]] - 1; else sol += mp[medie - a[i]]; } cout << sol / 2 << '\n'; } return 0; }
60	 #include <bits/stdc++.h> using namespace std; using ll = long long; int a[200005]; int idx[200005]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tc; cin >> tc; while (tc--) { int n; cin >> n; ll s = 0; for (int i = 0; i < n; i++) { cin >> a[i]; s += a[i]; } if ((s * 2) % n != 0) { cout << 0 << '\n'; continue; } sort(a, a + n); idx[0] = 0; int pos = 1; for (int i = 1; i < n; i++) { if (a[i] != a[i - 1]) { idx[pos] = i; pos++; } } idx[pos] = n; int left = 0; int right = pos - 1; ll cnt = 0; ll ps = (s * 2) / n; while (left < right) { ll cs = a[idx[left]] + a[idx[right]]; if (cs == ps) { cnt += (idx[left + 1] - idx[left]) * (idx[right + 1] - idx[right]); left += 1; right -= 1; } else if (cs > ps) { right -= 1; } else { left += 1; } } if (left == right && a[idx[left]] * 2 == ps) { ll diff = idx[left + 1] - idx[left]; cnt += diff * (diff - 1) / 2; } cout << cnt << '\n'; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; int a[200005]; int idx[200005]; int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int tc; cin >> tc; while (tc--) { int n; cin >> n; ll s = 0; for (int i = 0; i < n; i++) { cin >> a[i]; s += a[i]; } if ((s * 2) % n != 0) { cout << 0 << '\n'; continue; } sort(a, a + n); idx[0] = 0; int pos = 1; for (int i = 1; i < n; i++) { if (a[i] != a[i - 1]) { idx[pos] = i; pos++; } } idx[pos] = n; int left = 0; int right = pos - 1; ll cnt = 0; ll ps = (s * 2) / n; while (left < right) { ll cs = a[idx[left]] + a[idx[right]]; if (cs == ps) { cnt += ll(idx[left + 1] - idx[left]) * ll(idx[right + 1] - idx[right]); left += 1; right -= 1; } else if (cs > ps) { right -= 1; } else { left += 1; } } if (left == right && a[idx[left]] * 2 == ps) { ll diff = idx[left + 1] - idx[left]; cnt += diff * (diff - 1) / 2; } cout << cnt << '\n'; } }
60	 #include <bits/stdc++.h> using namespace std; template <typename T> void chkmax(T &x, T y) { x = max(x, y); } template <typename T> void chkmin(T &x, T y) { x = min(x, y); } template <typename T> void read(T &x) { x = 0; int f = 1; char c = getchar(); for (; !isdigit(c); c = getchar()) if (c == '-') f = -f; for (; isdigit(c); c = getchar()) x = x * 10 + c - '0'; x *= f; } const int N = 2e5 + 10; int a[N]; map<int, int> mp; signed main() { int _; read(_); while (_--) { mp.clear(); int n; read(n); long long s = 0, ans = 0; for (int i = (1); i <= (n); i++) read(a[i]), s += a[i], mp[a[i]]++; if (s * 2 % n != 0) { puts("0"); continue; } long long mid = s * 2 / n; for (int i = (1); i <= (n); i++) if (a[i] < mid - a[i]) ans += mp[mid - a[i]]; if (mid % 2 == 0) ans += mp[mid / 2] * (mp[mid / 2] - 1) / 2; cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> void chkmax(T &x, T y) { x = max(x, y); } template <typename T> void chkmin(T &x, T y) { x = min(x, y); } template <typename T> void read(T &x) { x = 0; int f = 1; char c = getchar(); for (; !isdigit(c); c = getchar()) if (c == '-') f = -f; for (; isdigit(c); c = getchar()) x = x * 10 + c - '0'; x *= f; } const int N = 2e5 + 10; int a[N]; map<int, long long> mp; signed main() { int _; read(_); while (_--) { mp.clear(); int n; read(n); long long s = 0, ans = 0; for (int i = (1); i <= (n); i++) read(a[i]), s += a[i], mp[a[i]]++; if (s * 2 % n != 0) { puts("0"); continue; } long long mid = s * 2 / n; for (int i = (1); i <= (n); i++) if (a[i] < mid - a[i]) ans += mp[mid - a[i]]; if (mid % 2 == 0) ans += mp[mid / 2] * (mp[mid / 2] - 1) / 2; cout << ans << endl; } return 0; }
60	 #include <bits/stdc++.h> using namespace std; long long modpow(long long x, long long y) { if (x == 0) return 0; long long res = 1; x = x % 1000000007; while (y > 0) { if (y & 1) res = (res * x) % 1000000007; y = y >> 1; x = (x * x) % 1000000007; } return res; } long long modinv(long long a) { return modpow(a, 1000000007 - 2); } vector<long long> mf = {1}; vector<long long> mfi = {1}; long long modfact(int n) { if (mf.size() > n) { return mf[n]; } else { for (int i = mf.size(); i <= n; i++) { long long next = mf.back() * i % 1000000007; mf.push_back(next); mfi.push_back(modinv(next)); } return mf[n]; } } long long modfactinv(int n) { if (mfi.size() > n) { return mfi[n]; } else { return modinv(modfact(n)); } } long long nCr(int n, int k) { if (n < 0 || k < 0 || k > n) { return 0; } else { return modfact(n) * modfactinv(k) % 1000000007 * modfactinv(n - k) % 1000000007; } } void solve() { int n; cin >> n; long long a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; map<double, int> m; double sum = 0; for (int i = 0; i < n; i++) { sum += a[i]; } double avg = sum / n; double now = avg * (n - 2); long long req = sum - now; long long ans = 0; for (int i = 0; i < n; i++) { ans += m[req - a[i]]; m[a[i]]++; } cout << ans << "\n"; } int main() { int t = 1; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; long long modpow(long long x, long long y) { if (x == 0) return 0; long long res = 1; x = x % 1000000007; while (y > 0) { if (y & 1) res = (res * x) % 1000000007; y = y >> 1; x = (x * x) % 1000000007; } return res; } long long modinv(long long a) { return modpow(a, 1000000007 - 2); } vector<long long> mf = {1}; vector<long long> mfi = {1}; long long modfact(int n) { if (mf.size() > n) { return mf[n]; } else { for (int i = mf.size(); i <= n; i++) { long long next = mf.back() * i % 1000000007; mf.push_back(next); mfi.push_back(modinv(next)); } return mf[n]; } } long long modfactinv(int n) { if (mfi.size() > n) { return mfi[n]; } else { return modinv(modfact(n)); } } long long nCr(int n, int k) { if (n < 0 || k < 0 || k > n) { return 0; } else { return modfact(n) * modfactinv(k) % 1000000007 * modfactinv(n - k) % 1000000007; } } void solve() { int n; cin >> n; long long a[n]; for (int i = 0; i < n; i++) cin >> a[i]; ; map<double, int> m; double sum = 0; for (int i = 0; i < n; i++) { sum += a[i]; } double avg = sum / n; double now = avg * (n - 2); double req = sum - now; long long ans = 0; for (int i = 0; i < n; i++) { ans += m[req - a[i]]; m[a[i]]++; } cout << ans << "\n"; } int main() { int t = 1; cin >> t; while (t--) solve(); }
61	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<int> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<i64> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }
61	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { int n; cin >> n; map<int, set<int>> m; vector<int> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; using u64 = unsigned long long; using u32 = unsigned int; void solve() { i64 n; cin >> n; map<int, set<int>> m; vector<i64> A(n + 1, 0), B(n + 1, 0); for (int i = 0; i < n; ++i) { int a, b; cin >> a >> b; m[a].insert(b); A[a]++; B[b]++; } i64 count = n * (n - 1) * (n - 2) / 6; vector<int> sum(n + 1, 0); for (auto& [a, s] : m) { for (int b : s) { count -= (s.size() - 1) * (B[b] - 1); } } cout << count << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int T = 1; cin >> T; for (int i = 1; i <= T; ++i) solve(); return 0; }
61	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { int t; cin >> t; while (t--) { int n; cin >> n; ll ans = n * (n - 1) * (n - 2); ans /= 6; map<ll, ll> m_a; map<ll, ll> m_b; vector<pair<ll, ll>> v(n); for (int i = 0; i < n; ++i) { cin >> v[i].first >> v[i].second; m_a[v[i].first]++; m_b[v[i].second]++; } ll elem = 0; for (int i = 0; i < n; ++i) { elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1); } ans -= elem; cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { int t; cin >> t; while (t--) { ll n; cin >> n; ll ans = n * (n - 1) * (n - 2); ans /= 6; map<ll, ll> m_a; map<ll, ll> m_b; vector<pair<ll, ll>> v(n); for (int i = 0; i < n; ++i) { cin >> v[i].first >> v[i].second; m_a[v[i].first]++; m_b[v[i].second]++; } ll elem = 0; for (int i = 0; i < n; ++i) { elem += (m_a[v[i].first] - 1) * (m_b[v[i].second] - 1); } ans -= elem; cout << ans << '\n'; } }
61	 #include <bits/stdc++.h> const int INF = 1e8; const long long MOD = 1e9 + 7; using namespace std; bool cases = 1; long long x[200005]; long long y[200005]; void solve(int nc) { int n, a, b; cin >> n; vector<pair<int, int> > v; long long xd = 0, yd = 0; for (int i = 0; i < n; i++) { cin >> a >> b; v.push_back(pair<int, int>(a, b)); if (x[a] == 0) xd++; if (y[b] == 0) yd++; x[a]++; y[b]++; } long long ans = n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; ans -= (x[a] - 1) * (y[b] - 1); } for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; x[a] = y[b] = 0; } cout << ans; cout << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t = 1; if (cases) cin >> t; for (int nc = 1; nc < t + 1; nc++) solve(nc); return 0; }	 #include <bits/stdc++.h> const int INF = 1e8; const long long MOD = 1e9 + 7; using namespace std; bool cases = 1; long long x[200005]; long long y[200005]; void solve(int nc) { long long n, a, b; cin >> n; vector<pair<int, int> > v; long long xd = 0, yd = 0; for (int i = 0; i < n; i++) { cin >> a >> b; v.push_back(pair<int, int>(a, b)); if (x[a] == 0) xd++; if (y[b] == 0) yd++; x[a]++; y[b]++; } long long ans = n * (n - 1) * (n - 2) / 6; for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; ans -= (x[a] - 1) * (y[b] - 1); } for (int i = 0; i < n; i++) { a = v[i].first, b = v[i].second; x[a] = y[b] = 0; } cout << ans; cout << "\n"; } int main() { ios::sync_with_stdio(0); cin.tie(0); int t = 1; if (cases) cin >> t; for (int nc = 1; nc < t + 1; nc++) solve(nc); return 0; }
62	 #include <bits/stdc++.h> using namespace std; const long long N = 1005; long long n, m, q, ans; bool vizitat[N][N]; long long dp[N][N][2]; bool verifica(long long i, long long j) { if (i < 1 || j < 1 || i > n || j > m) return false; return true; } long long cnt(long long i, long long j) { long long answer = 0; for (long long it = 0; it <= 1; it++) { long long up = 0; long long lin = i; long long col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (up % 2 == it) { lin--; } else { col--; } up++; } long long down = 0; lin = i; col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (down % 2 == it) { lin++; } else { col++; } down++; } answer += up * down; } answer--; return answer; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m >> q; for (long long i = 1; i <= n; i++) { for (long long j = 1; j <= m; j++) { dp[i][j][1] = dp[i][j - 1][0] + 1; dp[i][j][0] = dp[i - 1][j][1] + 1; ans += dp[i][j][1]; ans += dp[i][j][0]; } } ans -= n * m; while (q--) { long long lin, col; cin >> lin >> col; if (vizitat[lin][col] == true) { vizitat[lin][col] = false; ans += cnt(lin, col); } else { ans -= cnt(lin, col); vizitat[lin][col] = true; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 1005; long long n, m, q, ans; bool vizitat[N][N]; long long dp[N][N][2]; bool verifica(long long i, long long j) { if (i < 1 || j < 1 || i > n || j > m) return false; return true; } long long cnt(long long i, long long j) { long long answer = 0; for (long long it = 0; it <= 1; it++) { long long up = 0; long long lin = i; long long col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (up % 2 == it) { lin--; } else { col--; } up++; } long long down = 0; lin = i; col = j; while (verifica(lin, col) && vizitat[lin][col] == false) { if (down % 2 == it) { col++; } else { lin++; } down++; } answer += up * down; } answer--; return answer; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> n >> m >> q; for (long long i = 1; i <= n; i++) { for (long long j = 1; j <= m; j++) { dp[i][j][1] = dp[i][j - 1][0] + 1; dp[i][j][0] = dp[i - 1][j][1] + 1; ans += dp[i][j][1]; ans += dp[i][j][0]; } } ans -= n * m; while (q--) { long long lin, col; cin >> lin >> col; if (vizitat[lin][col] == true) { vizitat[lin][col] = false; ans += cnt(lin, col); } else { ans -= cnt(lin, col); vizitat[lin][col] = true; } cout << ans << '\n'; } return 0; }
62	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, y = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, n)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, m)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }
62	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, n)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int n, m, a[1005][1005], f[1005][1005], ans; inline bool in(int x, int l, int r) { return l <= x && x <= r; } int calc(int x, int y, int dx, int dy, int t) { if (t == 0) dx = -dx, dy = -dy; int cnt = 0; while (in(x + dx, 1, n) && in(y + dy, 1, m)) { x += dx, y += dy; if (!a[x][y]) break; ++cnt; if (dx != 0) dy = dx, dx = 0; else dx = dy, dy = 0; } return cnt; } signed main() { int q; cin >> n >> m >> q; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) a[i][j] = 1; for (int i = 1; i <= n; ++i) for (int j = 1; j <= m; ++j) ans += 1 + calc(i, j, 0, 1, 1) + calc(i, j, 1, 0, 1); while (q--) { int i, j; cin >> i >> j; int sum = (1 + calc(i, j, 0, 1, 1)) * (1 + calc(i, j, 1, 0, 0)) + (1 + calc(i, j, 1, 0, 1)) * (1 + calc(i, j, 0, 1, 0)) - 1; if (a[i][j]) ans -= sum; else ans += sum; a[i][j] ^= 1; cout << ans << "\n"; } }
62	 #include <bits/stdc++.h> using namespace std; mt19937_64 rnd(time(NULL)); const long long mod = 1000000007; const int N = 1010; int a[N][N]; int cnt[N][N][2]; int ans = 0; int n, m, q; inline void calc(int i, int j) { if (i <= 0 || j <= 0 || i > n || j > m) return; ans -= cnt[i][j][0] + cnt[i][j][1]; if (a[i][j]) cnt[i][j][0] = cnt[i][j][1] = 0; else { cnt[i][j][0] = cnt[i - 1][j][1] + 1; cnt[i][j][1] = cnt[i][j - 1][0] + 1; } ans += cnt[i][j][0] + cnt[i][j][1]; } void solve() { cin >> n >> m >> q; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { calc(i, j); ans--; } } for (int it = 1; it <= q; it++) { int x, y; cin >> x >> y; ans += 1 - a[x][y]; a[x][y] ^= 1; ans -= 1 - a[x][y]; for (int i = 0; i <= min(n - x, n - y); i++) { calc(x + i, y + i); calc(x + i + 1, y + i); calc(x + i, y + i + 1); } cout << ans << '\n'; } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); int tt = 1; while (tt--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; mt19937_64 rnd(time(NULL)); const long long mod = 1000000007; const int N = 1010; int a[N][N]; int cnt[N][N][2]; int ans = 0; int n, m, q; void calc(int i, int j) { if (i <= 0 || j <= 0 || i > n || j > m) return; ans -= cnt[i][j][0] + cnt[i][j][1]; if (a[i][j]) cnt[i][j][0] = cnt[i][j][1] = 0; else { cnt[i][j][0] = cnt[i - 1][j][1] + 1; cnt[i][j][1] = cnt[i][j - 1][0] + 1; } ans += cnt[i][j][0] + cnt[i][j][1]; } void solve() { cin >> n >> m >> q; for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) { calc(i, j); ans--; } } for (int it = 1; it <= q; it++) { int x, y; cin >> x >> y; ans += 1 - a[x][y]; a[x][y] ^= 1; ans -= 1 - a[x][y]; for (int i = 0; i <= min(n - x, m - y); i++) { calc(x + i, y + i); calc(x + i + 1, y + i); calc(x + i, y + i + 1); } cout << ans << '\n'; } } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); int tt = 1; while (tt--) { solve(); } return 0; }
63	 #include <bits/stdc++.h> using namespace std; const int mx = 4e5 + 10; int main() { int n; cin >> n; vector<string> a(n); for (string& x : a) cin >> x; vector<int> bal(n), mn(n); vector<vector<int>> occ(n), nocc(n); for (int i = 0; i < n; i++) { int b = 0, mn0 = 1e9; occ[i].resize(mx * 2); nocc[i].resize(mx * 2); int mini = 1e9; for (char x : a[i]) { if (x == ')') b--; else b++; mini = min(b, mini); mn0 = min(mn0, b); occ[i][b + mx]++; if (b == mini) nocc[i][b + mx]++; } bal[i] = b, mn[i] = mn0; } vector<vector<int>> answer((1 << n), vector<int>(2, -1e9)); answer[0] = {0, 0}; vector<int> sum(1 << n); for (int mask = 0; mask < (1 << n); mask++) { for (int i = 0; i < n; i++) { if ((1 << i) & mask) { sum[mask] = sum[mask ^ (1 << i)] + bal[i]; break; } } for (int i = 0; i < n; i++) { if ((1 << i) & mask) { int nmask = (1 << i) ^ mask; if (sum[nmask] + mn[i] < 0) { answer[nmask][1] = max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]); } else { answer[mask][0] = max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]); } } } } int ans = 0; for (auto x : answer) ans = max({x[0], x[1], ans}); cout << ans; return 0; }	 #include <bits/stdc++.h> using namespace std; const int mx = 4e5 + 10; int main() { int n; cin >> n; vector<string> a(n); for (string& x : a) cin >> x; vector<int> bal(n), mn(n); vector<vector<int>> occ(n), nocc(n); for (int i = 0; i < n; i++) { int b = 0, mn0 = 1e9; occ[i].resize(mx * 2); nocc[i].resize(mx * 2); int mini = 1e9; for (char x : a[i]) { if (x == ')') b--; else b++; mini = min(b, mini); mn0 = min(mn0, b); occ[i][b + mx]++; if (b == mini) nocc[i][b + mx]++; } bal[i] = b, mn[i] = mn0; } vector<vector<int>> answer((1 << n), vector<int>(2, -1e9)); answer[0] = {0, 0}; vector<int> sum(1 << n); for (int mask = 0; mask < (1 << n); mask++) { for (int i = 0; i < n; i++) { if ((1 << i) & mask) { sum[mask] = sum[mask ^ (1 << i)] + bal[i]; break; } } for (int i = 0; i < n; i++) { if ((1 << i) & mask) { int nmask = (1 << i) ^ mask; if (sum[nmask] + mn[i] < 0) { answer[mask][1] = max(answer[nmask][0] + nocc[i][mx - sum[nmask]], answer[mask][1]); } else { answer[mask][0] = max(answer[mask][0], answer[nmask][0] + occ[i][mx - sum[nmask]]); } } } } int ans = 0; for (auto x : answer) ans = max({x[0], x[1], ans}); cout << ans; return 0; }
65	 #include <bits/stdc++.h> using namespace std; const int maxn = 400010; int n, a[maxn], b[maxn]; char s[maxn]; int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); } scanf("%s", s + 1); sort(a + 1, a + n + 1); int l = 1, r = n; for (int i = n; i; i--) { if (s[i] == s[i - 1]) b[i] = l++; else b[i] = r--; } for (int i = 1; i <= n; i++) { printf("%d %c\n", a[b[i]], (b[i] ^ 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L'); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 400010; int n, a[maxn], b[maxn]; char s[maxn]; int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); } scanf("%s", s + 1); sort(a + 1, a + n + 1); int l = 1, r = n; for (int i = n; i; i--) { if (s[i] == s[i - 1]) b[i] = l++; else b[i] = r--; } for (int i = 1; i <= n; i++) { printf("%d %c\n", a[b[i]], (b[i] & 1) ^ (n & 1) ^ (s[n] == 'R') ? 'R' : 'L'); } return 0; }
65	 #include <bits/stdc++.h> using namespace std; signed main() { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n + 1); string s; cin >> s; long long cnt = 0; for (long long i = 0; i < n - 1; i++) { if (s[i] != s[i + 1]) cnt++; } char dir[n]; dir[n - 1 - cnt] = s[0]; for (long long i = n - 2 - cnt; i >= 0; i--) { if (dir[i + 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } for (long long i = n - cnt; i < n; i++) { if (dir[i - 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } long long l = n - 1 - cnt, r = n - 1 - cnt; cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n'; for (long long i = 1; i < n; i++) { if (s[i] == s[i - 1]) { l--; cout << a[l] << ' ' << dir[l] << '\n'; } else { r++; cout << a[r] << ' ' << dir[r] << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; signed main() { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); string s; cin >> s; long long cnt = 0; for (long long i = 0; i < n - 1; i++) { if (s[i] != s[i + 1]) cnt++; } char dir[n]; dir[n - 1 - cnt] = s[0]; for (long long i = n - 2 - cnt; i >= 0; i--) { if (dir[i + 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } for (long long i = n - cnt; i < n; i++) { if (dir[i - 1] == 'L') dir[i] = 'R'; else dir[i] = 'L'; } long long l = n - 1 - cnt, r = n - 1 - cnt; cout << a[n - 1 - cnt] << ' ' << dir[n - 1 - cnt] << '\n'; for (long long i = 1; i < n; i++) { if (s[i] == s[i - 1]) { l--; cout << a[l] << ' ' << dir[l] << '\n'; } else { r++; cout << a[r] << ' ' << dir[r] << '\n'; } } }
65	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int n, a[N], b[N]; char s[N]; void sol(int l, int r, int d) { if (d == 1) { b[d] = a[l]; return; } if (s[d - 1] == s[n]) { b[d] = a[l]; sol(l + 1, r, d - 1); } else { b[d] = a[r]; sol(l, r - 1, d - 1); } } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); scanf("%s", s + 1); sort(a + 1, a + n + 1); if (s[n] == 'L') for (int i = n; i >= 1; i -= 2) a[i] = -a[i]; else for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i]; sol(1, n, n); for (int i = 1; i <= n; i++) { if (b[i] > 0) printf("%d R\n", b[i]); else printf("%d L\n", -b[i]); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int n, a[N], b[N]; char s[N]; void sol(int l, int r, int d) { if (d == 1) { b[d] = a[l]; return; } if (s[d - 1] == s[d]) { b[d] = a[l]; sol(l + 1, r, d - 1); } else { b[d] = a[r]; sol(l, r - 1, d - 1); } } int main() { scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); scanf("%s", s + 1); sort(a + 1, a + n + 1); if (s[n] == 'L') for (int i = n; i >= 1; i -= 2) a[i] = -a[i]; else for (int i = n - 1; i >= 1; i -= 2) a[i] = -a[i]; sol(1, n, n); for (int i = 1; i <= n; i++) { if (b[i] > 0) printf("%d R\n", b[i]); else printf("%d L\n", -b[i]); } return 0; }
65	 #include <bits/stdc++.h> using namespace std; int n, a[200005]; string str; pair<int, int> ans[200005]; int main() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); sort(a, a + n); cin >> str; int now = n - 1, l = 0, r = n - 1; while (now >= 0) { if (now == 0) { ans[now] = pair<int, int>(a[now], str[l] == 'L' ? 0 : 1); break; } if (str[now] != str[now - 1]) { ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); now--; r--; } else { if (now == 1 || str[now] == str[now - 2]) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0); now -= 2; r -= 2; } else if ((r - l + 1) & 1) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); now -= 2; r--; l++; } else { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0); now -= 2; r--; l++; } } } for (int i = 0; i < n; i++) printf("%d %c\n", ans[i].first, ans[i].second ? 'R' : 'L'); return 0; }	 #include <bits/stdc++.h> using namespace std; int n, a[200005]; string str; pair<int, int> ans[200005]; int main() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); sort(a, a + n); cin >> str; int now = n - 1, l = 0, r = n - 1; while (now >= 0) { if (now == 0) { ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); break; } if (str[now] != str[now - 1]) { ans[now] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); now--; r--; } else { if (now == 1 || str[now] == str[now - 2]) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[r - 1], str[now] == 'L' ? 1 : 0); now -= 2; r -= 2; } else if ((r - l + 1) & 1) { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 0 : 1); now -= 2; r--; l++; } else { ans[now - 1] = pair<int, int>(a[r], str[now] == 'L' ? 0 : 1); ans[now] = pair<int, int>(a[l], str[now] == 'L' ? 1 : 0); now -= 2; r--; l++; } } } for (int i = 0; i < n; i++) printf("%d %c\n", ans[i].first, ans[i].second ? 'R' : 'L'); return 0; }
79	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; const int N = 3e5 + 5; int n, a[N], b[N], c[N], t[N]; pair<int, int> par[N]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> b[i]; queue<int> Q; set<int> S; for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9; Q.push(n); t[n] = 1; int inx = -1; while (!Q.empty()) { int x = Q.front(); Q.pop(); int y = x - a[x]; if (a[x] >= x) { inx = x; } while (!S.empty()) { auto it = S.lower_bound(y); if (it == S.end() || *it > x) break; if (t[*it + b[*it]] >= t[x] + 1) { t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1); par[*it + b[*it]] = make_pair(*it, x); Q.push(*it + b[*it]); } S.erase(it); } } cout << (t[inx] ? t[inx] : -1) << '\n'; if (inx != -1) { vector<int> v; v.push_back(0); while (par[inx].first) { v.push_back(par[inx].first); inx = par[inx].second; } reverse(v.begin(), v.end()); for (auto it : v) cout << it << ' '; } } int main() { ios::sync_with_stdio(false), cin.tie(0), cout.tie(0); int test_cases = 1; while (test_cases--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; const int N = 3e5 + 5; int n, a[N], b[N], c[N], t[N]; pair<int, int> par[N]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> b[i]; queue<int> Q; set<int> S; for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9; Q.push(n); t[n] = 1; int inx = -1; while (!Q.empty()) { int x = Q.front(); Q.pop(); int y = x - a[x]; if (a[x] >= x) { inx = x; break; } while (!S.empty()) { auto it = S.lower_bound(y); if (it == S.end() || *it > x) break; if (t[*it + b[*it]] >= t[x] + 1) { t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1); par[*it + b[*it]] = make_pair(*it, x); Q.push(*it + b[*it]); } S.erase(it); } } cout << (t[inx] ? t[inx] : -1) << '\n'; if (inx != -1) { vector<int> v; v.push_back(0); while (par[inx].first) { v.push_back(par[inx].first); inx = par[inx].second; } reverse(v.begin(), v.end()); for (auto it : v) cout << it << ' '; } } int main() { ios::sync_with_stdio(false), cin.tie(0), cout.tie(0); int test_cases = 1; while (test_cases--) solve(); return 0; }
80	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using pii = pair<int, int>; using pll = pair<ll, ll>; int n, m; int A[1000005]; int B[1000005]; int T[1000005]; int S[1000005]; int inverse(int s, int e) { if (s == e) { T[s] = A[s]; return 0; } int m = (s + e) / 2; ll ans = inverse(s, m) + inverse(m + 1, e); for (int i = s; i <= e; i++) { S[i] = T[i]; } int i = s, j = m + 1, k = s; while (k <= e) { if (j > e || (i <= m && S[i] <= S[j])) T[k++] = S[i++]; else T[k++] = S[j++], ans += m - i + 1; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T; cin >> T; for (int t = 1; t <= T; t++) { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> A[i]; for (int i = 1; i <= m; i++) cin >> B[i]; sort(B + 1, B + m + 1); priority_queue<int> pq; ll mx = inverse(1, n); for (int i = 1; i <= n; i++) { int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1; int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1; pq.push(x); pq.push(y); pq.pop(); mx += x; } while (!pq.empty()) { mx -= pq.top(); pq.pop(); } cout << mx << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using pii = pair<int, int>; using pll = pair<ll, ll>; int n, m; int A[1000005]; int B[1000005]; int T[1000005]; int S[1000005]; ll inverse(int s, int e) { if (s == e) { T[s] = A[s]; return 0; } int m = (s + e) / 2; ll ans = inverse(s, m) + inverse(m + 1, e); for (int i = s; i <= e; i++) { S[i] = T[i]; } int i = s, j = m + 1, k = s; while (k <= e) { if (j > e || (i <= m && S[i] <= S[j])) T[k++] = S[i++]; else T[k++] = S[j++], ans += m - i + 1; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T; cin >> T; for (int t = 1; t <= T; t++) { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> A[i]; for (int i = 1; i <= m; i++) cin >> B[i]; sort(B + 1, B + m + 1); priority_queue<int> pq; ll mx = inverse(1, n); for (int i = 1; i <= n; i++) { int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1; int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1; pq.push(x); pq.push(y); pq.pop(); mx += x; } while (!pq.empty()) { mx -= pq.top(); pq.pop(); } cout << mx << '\n'; } return 0; }
81	 #include <bits/stdc++.h> using namespace std; struct node { int x, y; bool operator<(const node &a) const { if (min(x, y) != min(a.x, a.y)) return min(x, y) < min(a.x, a.y); return max(x, y) < max(a.x, a.y); } }; node st[500000 + 1]; int n, d, cnt; int main() { cin >> n >> d; for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y; sort(st + 1, st + n + 1); for (int i = 1; i <= n; ++i) if (st[i].x >= d) cnt++, d = max(d, st[i].y); cout << cnt << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; struct node { int x, y; bool operator<(const node &a) const { if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y); return min(x, y) < min(a.x, a.y); } }; node st[500000 + 1]; int n, d, cnt; int main() { cin >> n >> d; for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y; sort(st + 1, st + n + 1); for (int i = 1; i <= n; ++i) if (st[i].x >= d) cnt++, d = max(d, st[i].y); cout << cnt << endl; return 0; }
67	 #include <bits/stdc++.h> int a[200005], b[200005]; using namespace std; inline double cal_possible(int n, int learned_num) { double c2 = 1.5 * static_cast<double>(n - learned_num) / n * (n - learned_num - 1) / (n - 1) * (learned_num) / (n - 2); double c3 = static_cast<double>(n - learned_num) / n * (n - learned_num - 1) / (n - 1) * (n - learned_num - 2) / (n - 2); return 1 - c2 - c3; } int main() { ios::sync_with_stdio(false); if (0) freopen("data.in", "r", stdin); int n; double p; cin >> n >> p; int l = 0, r = n - 1; while (l < r - 1) { int mid = (l + r) / 2; double ans = cal_possible(n, mid); if (0) cout << "when " << mid << " " << ans << endl; if (cal_possible(n, mid) >= p) { r = mid; } else { l = mid; } } cout << r << endl; }	 #include <bits/stdc++.h> int a[200005], b[200005]; using namespace std; inline double cal_possible(int n, int learned_num) { double c2 = 1.5 * static_cast<double>(n - learned_num) / n * (n - learned_num - 1) / (n - 1) * (learned_num) / (n - 2); double c3 = static_cast<double>(n - learned_num) / n * (n - learned_num - 1) / (n - 1) * (n - learned_num - 2) / (n - 2); return 1 - c2 - c3; } int main() { ios::sync_with_stdio(false); if (0) freopen("data.in", "r", stdin); int n; double p; cin >> n >> p; int l = -1, r = n - 1; while (l < r - 1) { int mid = (l + r) / 2; double ans = cal_possible(n, mid); if (0) cout << "when " << mid << " " << ans << endl; if (cal_possible(n, mid) >= p) { r = mid; } else { l = mid; } } cout << r << endl; }
67	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-7; void solve() { int64_t n; long double p; cin >> n >> p; for (long double i = 0; i < n; i += 1) { long double nn = n; long double cube = (nn * (nn - 1) * (nn - 2)); long double chance_to_0 = max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube); long double chance_to_1 = max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube); long double chance_to_2 = max((long double)0, i * (i - 1) * (nn - i) * 3 / cube); long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0; if (chance_to_3 + chance_to_2 + chance_to_1 / 3 + eps > p) { cout << i << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t = 1; while (t > 0) { t--; solve(); } }	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-7; void solve() { int64_t n; long double p; cin >> n >> p; for (long double i = 0; i < n; i += 1) { long double nn = n; long double cube = (nn * (nn - 1) * (nn - 2)); long double chance_to_0 = max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube); long double chance_to_1 = max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube); long double chance_to_2 = max((long double)0, i * (i - 1) * (nn - i) * 3 / cube); long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0; if (chance_to_3 + chance_to_2 + chance_to_1 / 2 + eps > p) { cout << i << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t = 1; while (t > 0) { t--; solve(); } }
67	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-7; void solve() { int64_t n; long double p; cin >> n >> p; for (long double i = 0; i < n; i += 1) { long double nn = n; long double cube = (nn * (nn - 1) * (nn - 2)); long double chance_to_0 = max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube); long double chance_to_1 = max((long double)0, i * (nn - i) * (nn - i - 1) * 6 / cube); long double chance_to_2 = max((long double)0, i * (i - 1) * (nn - i) * 6 / cube); long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0; if (chance_to_3 + chance_to_2 + chance_to_1 / 3 + eps > p) { cout << i << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t = 1; while (t > 0) { t--; solve(); } }	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-7; void solve() { int64_t n; long double p; cin >> n >> p; for (long double i = 0; i < n; i += 1) { long double nn = n; long double cube = (nn * (nn - 1) * (nn - 2)); long double chance_to_0 = max((long double)0, (nn - i) * (nn - i - 1) * (nn - i - 2) / cube); long double chance_to_1 = max((long double)0, i * (nn - i) * (nn - i - 1) * 3 / cube); long double chance_to_2 = max((long double)0, i * (i - 1) * (nn - i) * 3 / cube); long double chance_to_3 = 1 - chance_to_1 - chance_to_2 - chance_to_0; if (chance_to_3 + chance_to_2 + chance_to_1 / 2 + eps > p) { cout << i << endl; return; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t = 1; while (t > 0) { t--; solve(); } }
67	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-12, X = 1.0; long long nCr(long long n, long long r) { if (r > n) return 0; if (r == 1) return n; if (r == 2) return n * (n - 1) / 2; if (r == 3) return n * (n - 1) * (n - 2) / 6; return 0; } long double fun(int m, int n) { int r = n - m; long double a = 0, b = 0; if (r >= 3) a = nCr(r, 3) * X / nCr(n, 3); if (r >= 2 and m >= 1) { long double p = (nCr(r, 2) * X * m / nCr(n, 3)); p *= (X / 2); b = p; } return X - (a + b); } int main() { int n; long double p; cin >> n >> p; for (int i = 1; i <= n; i++) { if (abs(fun(i, n)) + eps >= p) { cout << i; return 0; } } }	 #include <bits/stdc++.h> using namespace std; long double eps = 1e-12, X = 1.0; long long nCr(long long n, long long r) { if (r > n) return 0; if (r == 1) return n; if (r == 2) return n * (n - 1) / 2; if (r == 3) return n * (n - 1) * (n - 2) / 6; return 0; } long double fun(int m, int n) { int r = n - m; long double a = 0, b = 0; if (r >= 3) a = nCr(r, 3) * X / nCr(n, 3); if (r >= 2 and m >= 1) { long double p = (nCr(r, 2) * X * m / nCr(n, 3)); p *= (X / 2); b = p; } return X - (a + b); } int main() { int n; long double p; cin >> n >> p; for (int i = 0; i <= n; i++) { if (abs(fun(i, n)) + eps >= p) { cout << i; return 0; } } }
67	 #include <bits/stdc++.h> using namespace std; const long double eps = 1e-14; long double getpwin(long double total, long double good) { long double bad = total - good; long double sol = 0; if (good >= 3) { long double prob = 1; prob *= good / total; prob *= (good - 1) / (total - 1); prob *= (good - 2) / (total - 2); sol += prob; } if (good >= 2 && bad >= 1) { long double prob = 1; prob *= good / total; prob *= (good - 1) / (total - 1); prob *= bad / (total - 2); sol += prob * 3; } if (good >= 1 && bad >= 2) { long double prob = 1; prob *= good / total; prob *= bad / (total - 1); prob *= (bad - 1) / (total - 2); prob *= ((long double)1 / (long double)3 + (long double)1 / (long double)6) * prob; sol += prob * 3; } return sol; } long long n; long double p; signed main() { ios::sync_with_stdio(0); cin.tie(0); cin >> n >> p; for (long long i = 0; i <= n; i++) { if (getpwin(n, i) - p >= -eps) { cout << i << "\n"; return 0; } } assert(0); exit(0); return 0; }	 #include <bits/stdc++.h> using namespace std; const long double eps = 1e-14; long double getpwin(long double total, long double good) { long double bad = total - good; long double sol = 0; if (good >= 3) { long double prob = 1; prob *= good / total; prob *= (good - 1) / (total - 1); prob *= (good - 2) / (total - 2); sol += prob; } if (good >= 2 && bad >= 1) { long double prob = 1; prob *= good / total; prob *= (good - 1) / (total - 1); prob *= bad / (total - 2); sol += prob * 3; } if (good >= 1 && bad >= 2) { long double prob = 1; prob *= good / total; prob *= bad / (total - 1); prob *= (bad - 1) / (total - 2); prob *= ((long double)1 / (long double)3 + (long double)1 / (long double)6); sol += prob * 3; } return sol; } long long n; long double p; signed main() { ios::sync_with_stdio(0); cin.tie(0); cin >> n >> p; for (long long i = 0; i <= n; i++) { if (getpwin(n, i) - p >= -eps) { cout << i << "\n"; return 0; } } assert(0); exit(0); return 0; }
67	 #include <bits/stdc++.h> using namespace std; const int mxN = 1e3 + 5; const double EPS = 1e-9; vector<vector<long long>> C(mxN, vector<long long>(4, -1)); long long ini(int n, int k) { if (n == k || k == 0) return C[n][k] = 1; if (C[n][k] != -1) return C[n][k]; return C[n][k] = ini(n - 1, k - 1) + ini(n - 1, k); } int main() { int n; cin >> n; double p; cin >> p; if (p == 0) { cout << "0\n"; return 0; } ini(mxN - 1, 3); for (int i = 2; i < n; ++i) { double tot = C[n][3]; double ans = (double)(n - i >= 2 ? i * C[n - i][2] : 0) * 0.5 + (n - i >= 3 ? C[n - i][3] : 0); if (p <= (tot - ans) / tot + EPS) { cout << i << '\n'; return 0; } } }	 #include <bits/stdc++.h> using namespace std; const int mxN = 1e3 + 5; const double EPS = 1e-9; vector<vector<long long>> C(mxN, vector<long long>(4, -1)); long long ini(int n, int k) { if (n == k || k == 0) return C[n][k] = 1; if (C[n][k] != -1) return C[n][k]; return C[n][k] = ini(n - 1, k - 1) + ini(n - 1, k); } int main() { int n; cin >> n; double p; cin >> p; if (p == 0) { cout << "0\n"; return 0; } ini(mxN - 1, 3); for (int i = 1; i < n; ++i) { double tot = C[n][3]; double ans = (double)(n - i >= 2 ? i * C[n - i][2] : 0) * 0.5 + (n - i >= 3 ? C[n - i][3] : 0); if (p <= (tot - ans) / tot + EPS) { cout << i << '\n'; return 0; } } }
67	 #include <bits/stdc++.h> using namespace std; long long n; double p; double myfunc(long long n, long long m) { if (n < m) return 0; double ret = 1; for (int i = 0; i < m; ++i) { ret *= n - i; ret /= i + 1; } return ret; } double mypr(long long n, long long m, int i) { return myfunc(m, i) * myfunc(n - m, 3 - i) / myfunc(n, 3); } double shit(long long n, long long m, int i) { double pp = mypr(n, m, i); if (i == 0) { return pp * 0; } else if (i == 1) { return pp * 0.5; } else if (i == 2) { return pp * 1; } else { return pp * 1; } } int fuck() { if (p < 1e-6) return 0; for (long long m = 1; m <= n; ++m) { double temp = 0; for (int i = 0; i <= 3 && i <= m; ++i) { temp += shit(n, m, i); } if (temp >= p) return m; } } int main() { cin >> n >> p; cout << fuck() << endl; }	 #include <bits/stdc++.h> using namespace std; long long n; double p; double myfunc(long long n, long long m) { if (n < m) return 0; double ret = 1; for (int i = 0; i < m; ++i) { ret *= n - i; ret /= i + 1; } return ret; } inline double mypr(long long n, long long m, int i) { return myfunc(m, i) * myfunc(n - m, 3 - i) / myfunc(n, 3); } double shit(long long n, long long m, int i) { double pp = mypr(n, m, i); if (i == 0) { return pp * 0; } else if (i == 1) { return pp * 0.5; } else if (i == 2) { return pp * 1; } else { return pp * 1; } } int fuck() { if (p < 1e-6) return 0; for (long long m = 1; m <= n; ++m) { double temp = 0; for (int i = 0; i <= 3 && i <= m; ++i) { temp += shit(n, m, i); } if (temp >= p) return m; } } int main() { cin >> n >> p; cout << fuck() << endl; }
67	 #include <bits/stdc++.h> using namespace std; const double pi = acos(-1.0); const double eps = 1e-11; template <class T> inline void ckmin(T &a, T b) { a = min(a, b); } template <class T> inline void ckmax(T &a, T b) { a = max(a, b); } template <class T> inline T sqr(T x) { return x * x; } using uint = unsigned int; using int64 = long long; using uint64 = unsigned long long; using ipair = pair<int, int>; using VI = vector<int>; using VD = vector<double>; using VS = vector<string>; using VVI = vector<VI>; double choose[1024][1024]; double calc(int n, int m) { double r = 0; for (int c1 = 0; c1 < (4); ++c1) { int c2 = 3 - c1; if (c1 <= m && c2 <= n - m) { double prob1 = choose[m][c1] * choose[n - m][c2]; double prob2 = 0; if (c1 == 0) prob2 = 0; else if (c1 == 1) prob2 = 2.0 / 3.0; else prob2 = 1; r += prob1 * prob2; } } r /= choose[n][3]; return r; } int main() { std::ios::sync_with_stdio(false); memset(choose, 0, sizeof(choose)); for (int i = 0; i < (1024); ++i) for (int j = 0; j < (i + 1); ++j) choose[i][j] = (j == 0 ? 1 : choose[i - 1][j - 1] + choose[i - 1][j]); int n; double p; cin >> n >> p; for (int m = 0; m <= n; m++) if (calc(n, m) >= p - eps) { printf("%d\n", m); return 0; } printf("%d\n", n); return 0; }	 #include <bits/stdc++.h> using namespace std; const double pi = acos(-1.0); const double eps = 1e-11; template <class T> inline void ckmin(T &a, T b) { a = min(a, b); } template <class T> inline void ckmax(T &a, T b) { a = max(a, b); } template <class T> inline T sqr(T x) { return x * x; } using uint = unsigned int; using int64 = long long; using uint64 = unsigned long long; using ipair = pair<int, int>; using VI = vector<int>; using VD = vector<double>; using VS = vector<string>; using VVI = vector<VI>; double choose[1024][1024]; double calc(int n, int m) { double r = 0; for (int c1 = 0; c1 < (4); ++c1) { int c2 = 3 - c1; if (c1 <= m && c2 <= n - m) { double prob1 = choose[m][c1] * choose[n - m][c2]; double prob2 = 0; if (c1 == 0) prob2 = 0; else if (c1 == 1) prob2 = 2.0 / 3.0 * 0.75; else prob2 = 1; r += prob1 * prob2; } } r /= choose[n][3]; return r; } int main() { std::ios::sync_with_stdio(false); memset(choose, 0, sizeof(choose)); for (int i = 0; i < (1024); ++i) for (int j = 0; j < (i + 1); ++j) choose[i][j] = (j == 0 ? 1 : choose[i - 1][j - 1] + choose[i - 1][j]); int n; double p; cin >> n >> p; for (int m = 0; m <= n; m++) if (calc(n, m) >= p - eps) { printf("%d\n", m); return 0; } printf("%d\n", n); return 0; }
67	 #include <bits/stdc++.h> using namespace std; inline int read() { bool ok = 0; int res = 0; char c; while (((c = getchar()) < '0' || c > '9') && c != '-') ; if (c == '-') ok = 1; else res = c - 48; while ((c = getchar()) >= '0' && c <= '9') res = (res << 3) + (res << 1) + (c - 48); return ok ? ~res + 1 : res; } int cn3(int n) { if (n < 3) return 0; return n * (n - 1) * (n - 2) / 6; } int cn2(int n) { if (n < 2) return 0; return n * (n - 1) / 2; } int main() { int n; double p; cin >> n >> p; for (int a = 1; a <= n; ++a) { double ans = 0; if (a >= 3) ans += 1.0 * cn3(a) / cn3(n); if (n - a >= 1) ans += 1.0 * cn2(a) * (n - a) / cn3(n); if (n - a >= 2) ans += 1.0 * a * cn2(n - a) / cn3(n) * 0.5; if (ans > p || (abs(ans - p) < 1e-6)) { cout << a << endl; break; } } return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { bool ok = 0; int res = 0; char c; while (((c = getchar()) < '0' || c > '9') && c != '-') ; if (c == '-') ok = 1; else res = c - 48; while ((c = getchar()) >= '0' && c <= '9') res = (res << 3) + (res << 1) + (c - 48); return ok ? ~res + 1 : res; } int cn3(int n) { if (n < 3) return 0; return n * (n - 1) * (n - 2) / 6; } int cn2(int n) { if (n < 2) return 0; return n * (n - 1) / 2; } int main() { int n; double p; cin >> n >> p; for (int a = 0; a <= n; ++a) { double ans = 0; if (a >= 3) ans += 1.0 * cn3(a) / cn3(n); if (n - a >= 1) ans += 1.0 * cn2(a) * (n - a) / cn3(n); if (n - a >= 2) ans += 1.0 * a * cn2(n - a) / cn3(n) * 0.5; if (ans > p || (abs(ans - p) < 1e-6)) { cout << a << endl; break; } } return 0; }
70	 #include <bits/stdc++.h> using namespace std; const int N = 200010, mo = 1e9 + 7; int n, q; long long a[N], s1[N], s2[N], c[N]; long long qmi(long long a, long long k) { long long res = 1; while (k) { if (k & 1) res = res * a % mo; a = a * a % mo; k >>= 1; } return res; } long long mod(long long x) { return (x % mo + mo) % mo; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> n >> q; for (int i = 1; i <= n; i++) { cin >> a[i]; s1[i] = (s1[i - 1] + a[i]) % mo; s2[i] = (s2[i - 1] + a[i] * a[i] % mo) % mo; c[i] = (c[i - 1] + i * i % mo) % mo; } long long l, r, d, len; while (q--) { cin >> l >> r >> d; len = r - l + 1; long long f1 = (s1[r] - s1[l - 1]), f2 = (s2[r] - s2[l - 1]); f1 = mod(f1), f2 = mod(f2); long long f = (f1 * 2 * qmi(len, mo - 2) % mo - (len - 1) * d % mo) % mo * qmi(2, mo - 2) % mo; f = mod(f); long long ans = f * f % mo * len % mo + f * (len - 1) % mo * len % mo * d % mo + c[len - 1] * d % mo * d % mo; ans = mod(ans); if (ans == f2) puts("Yes"); else puts("No"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200010, mo = 1e9 + 7; int n, q; long long a[N], s1[N], s2[N], c[N]; long long qmi(long long a, long long k) { long long res = 1; while (k) { if (k & 1) res = res * a % mo; a = a * a % mo; k >>= 1; } return res; } long long mod(long long x) { return (x % mo + mo) % mo; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> n >> q; for (long long i = 1; i <= n; i++) { cin >> a[i]; s1[i] = (s1[i - 1] + a[i]) % mo; s2[i] = (s2[i - 1] + a[i] * a[i] % mo) % mo; c[i] = (c[i - 1] + i * i % mo) % mo; } long long l, r, d, len; while (q--) { cin >> l >> r >> d; len = r - l + 1; long long f1 = (s1[r] - s1[l - 1]), f2 = (s2[r] - s2[l - 1]); f1 = mod(f1), f2 = mod(f2); long long f = (f1 * 2 * qmi(len, mo - 2) % mo - (len - 1) * d % mo) % mo * qmi(2, mo - 2) % mo; f = mod(f); long long ans = f * f % mo * len % mo + f * (len - 1) % mo * len % mo * d % mo + c[len - 1] * d % mo * d % mo; ans = mod(ans); if (ans == f2) puts("Yes"); else puts("No"); } return 0; }
72	 #include <bits/stdc++.h> using namespace std; template <typename Tp> void read(Tp &num) { num = 0; auto f = 1; char c = getchar(); while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar(); while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar(); num *= f; } template <typename Tp, typename... etc> void read(Tp &num, etc &...more) { read(num); read(more...); } const int MAX = 10; int d1, d2, d3, d4, mid; int main() { printf("? %d %d\n", 1, MAX); fflush(stdout); scanf("%d", &d1); printf("? %d %d\n", 1, 1); fflush(stdout); scanf("%d", &d2); mid = (MAX - d1 + d2 + 1) / 2; printf("? %d %d\n", MAX, mid); fflush(stdout); scanf("%d", &d3); printf("? %d %d\n", 1, mid); fflush(stdout); scanf("%d", &d4); printf("! %d %d %d %d\n", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4)); fflush(stdout); }	 #include <bits/stdc++.h> using namespace std; template <typename Tp> void read(Tp &num) { num = 0; auto f = 1; char c = getchar(); while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar(); while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar(); num *= f; } template <typename Tp, typename... etc> void read(Tp &num, etc &...more) { read(num); read(more...); } const int MAX = 1E9; int d1, d2, d3, d4, mid; int main() { printf("? %d %d\n", 1, MAX); fflush(stdout); scanf("%d", &d1); printf("? %d %d\n", 1, 1); fflush(stdout); scanf("%d", &d2); mid = (MAX - d1 + d2 + 1) / 2; printf("? %d %d\n", MAX, mid); fflush(stdout); scanf("%d", &d3); printf("? %d %d\n", 1, mid); fflush(stdout); scanf("%d", &d4); printf("! %d %d %d %d\n", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4)); fflush(stdout); }
72	 #include <bits/stdc++.h> using namespace std; template <typename Tp> void read(Tp &num) { num = 0; auto f = 1; char c = getchar(); while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar(); while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar(); num *= f; } template <typename Tp, typename... etc> void read(Tp &num, etc &...more) { read(num); read(more...); } const int MAX = 1E9; int d1, d2, d3, d4, mid; int main() { printf("? %d %d\n", 1, MAX); fflush(stdout); scanf("%d", &d1); printf("? %d %d\n", 1, 1); fflush(stdout); scanf("%d", &d2); mid = (MAX - d1 + d2 + 1) / 2; printf("? %d %d\n", MAX, mid); fflush(stdout); scanf("%d", &d3); printf("? %d %d\n", 1, mid); fflush(stdout); scanf("%d", &d4); printf("! %d %d %d %d\n", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - 1)); fflush(stdout); }	 #include <bits/stdc++.h> using namespace std; template <typename Tp> void read(Tp &num) { num = 0; auto f = 1; char c = getchar(); while (!isdigit(c)) c == '-' ? f = -1 : 1, c = getchar(); while (isdigit(c)) num = num * 10 + (c ^ 48), c = getchar(); num *= f; } template <typename Tp, typename... etc> void read(Tp &num, etc &...more) { read(num); read(more...); } const int MAX = 1E9; int d1, d2, d3, d4, mid; int main() { printf("? %d %d\n", 1, MAX); fflush(stdout); scanf("%d", &d1); printf("? %d %d\n", 1, 1); fflush(stdout); scanf("%d", &d2); mid = (MAX - d1 + d2 + 1) / 2; printf("? %d %d\n", MAX, mid); fflush(stdout); scanf("%d", &d3); printf("? %d %d\n", 1, mid); fflush(stdout); scanf("%d", &d4); printf("! %d %d %d %d\n", 1 + d4, d2 - d4 + 1, MAX - d3, MAX - (d1 - d4)); fflush(stdout); }
72	 #include <bits/stdc++.h> using namespace std; inline int query(int x, int y) { printf("? %d %d\n", x, y); fflush(stdout); int ans; scanf("%d", &ans); return ans; } int dis11; inline int calcly() { int L = 1, R = 1e9, ans = 1; while (L <= R) { int mid = L + R >> 1; if (query(1, mid) != dis11 - (mid - 1)) ans = mid, R = mid - 1; else L = mid + 1; } return ans - 1; } int main() { dis11 = query(1, 1); int ly = calcly(); int lx = dis11 + 2 - ly; int rx = query(1e9, 1) - ly + 1; int ry = query(1, 1e9) - lx + 1; rx = 1e9 - rx; ry = 1e9 - ry; printf("! %d %d %d %d\n", lx, rx, ly, ry); }	 #include <bits/stdc++.h> using namespace std; inline int query(int x, int y) { printf("? %d %d\n", x, y); fflush(stdout); int ans; scanf("%d", &ans); return ans; } int dis11; inline int calcly() { int L = 1, R = 1e9, ans = 1; while (L <= R) { int mid = L + R >> 1; if (query(1, mid) != dis11 - (mid - 1)) ans = mid, R = mid - 1; else L = mid + 1; } return ans - 1; } int main() { dis11 = query(1, 1); int ly = calcly(); int lx = dis11 + 2 - ly; int rx = query(1e9, 1) - ly + 1; int ry = query(1, 1e9) - lx + 1; rx = 1e9 - rx; ry = 1e9 - ry; printf("! %d %d %d %d\n", lx, ly, rx, ry); }
72	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long long N = 1e9; long long query(long long x, long long y) { cout << "? " << x << " " << y << endl; long long o; cin >> o; return o; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; long long p = query(1, 1); long long l = 2, r = N; long long ans = 0; while (l <= r) { long long m = (l + r) / 2; if (query(m, 1) == p - m + 1) { ans = m; l = m + 1; } else { r = m - 1; } } long long fx = ans, fy = p - ans + 2; long long q = query(1, N); long long sx = N - (q - fy + 1), ss = fy; long long lp = query(N, N); long long tx = sx, ty = 2 * N - (lp + tx); cout << "! " << fx << " " << fy << " " << tx << " " << ty << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long long N = 1e9; long long query(long long x, long long y) { cout << "? " << x << " " << y << endl; long long o; cin >> o; return o; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); ; long long p = query(1, 1); long long l = 2, r = N; long long ans = 0; while (l <= r) { long long m = (l + r) / 2; if (query(m, 1) == p - m + 1) { ans = m; l = m + 1; } else { r = m - 1; } } long long fx = ans, fy = p - ans + 2; long long q = query(N, 1); long long sx = N - (q - fy + 1), ss = fy; long long lp = query(N, N); long long tx = sx, ty = 2 * N - (lp + tx); cout << "! " << fx << " " << fy << " " << tx << " " << ty << endl; return 0; }
72	 #include <bits/stdc++.h> using namespace std; static const int edge = 1000 * 1000 * 1000; int main() { ios::sync_with_stdio(false); cout << "? 1 1" << endl; int a; cin >> a; cout << "? 1000000000 1" << endl; int b; cin >> b; cout << "? 1 1000000000" << endl; int c; cin >> c; cout << "? 1000000000 1000000000" << endl; int d; cin >> d; int mid = (1 + a + edge - b) / 2; auto ask = [&](int x) { if (x < 0 || x > edge) return 2 * edge + 5; cout << "? " << x << " 1" << endl; int y; cin >> y; return y; }; int y1 = min({ask(mid - 1), ask(mid), ask(mid + 1)}) + 1; int x1 = (a + 2) - y1; int x2 = edge - b + (y1 - 1); int y2 = edge - c + (x1 - 1); cout << "| " << x1 << " " << y1 << " " << x2 << " " << y2 << endl; }	 #include <bits/stdc++.h> using namespace std; static const int edge = 1000 * 1000 * 1000; int main() { ios::sync_with_stdio(false); cout << "? 1 1" << endl; int a; cin >> a; cout << "? 1000000000 1" << endl; int b; cin >> b; cout << "? 1 1000000000" << endl; int c; cin >> c; cout << "? 1000000000 1000000000" << endl; int d; cin >> d; int mid = (1 + a + edge - b) / 2; auto ask = [&](int x) { if (x < 0 || x > edge) return 2 * edge + 5; cout << "? " << x << " 1" << endl; int y; cin >> y; return y; }; int y1 = min({ask(mid - 1), ask(mid), ask(mid + 1)}) + 1; int x1 = (a + 2) - y1; int x2 = edge - b + (y1 - 1); int y2 = edge - c + (x1 - 1); cout << "! " << x1 << " " << y1 << " " << x2 << " " << y2 << endl; }
72	 #include <bits/stdc++.h> using namespace std; inline long long query(int x, int y) { cout << "? " << x << " " << y << endl; long long ans; cin >> ans; if (ans == -1) exit(0); return ans; } int main() { ios::sync_with_stdio(false); if (1) freopen("data.in", "r", stdin); long long base = query(1, 1); long long min_dis; const long long bound = 1e9; long long l = 1, r = bound; while (l < r - 1) { int mid = (l + r) / 2; long long ans = query(mid, 1); if ((base - ans) == (mid - 1)) { l = mid; min_dis = ans; } else { r = mid; } } long long right_down = query(bound, 1); long long right_up = query(bound, bound); long long x1, y1, x2, y2; y1 = min_dis + 1; x1 = base - min_dis + 1; x2 = bound - (right_down - min_dis); y2 = bound - (right_up - (bound - x2)); cout << "! " << x1 << " " << y1 << " " << x2 << " " << y2 << endl; }	 #include <bits/stdc++.h> using namespace std; inline long long query(int x, int y) { cout << "? " << x << " " << y << endl; long long ans; cin >> ans; if (ans == -1) exit(0); return ans; } int main() { ios::sync_with_stdio(false); if (0) freopen("data.in", "r", stdin); long long base = query(1, 1); long long min_dis; const long long bound = 1e9; long long l = 1, r = bound; while (l < r - 1) { int mid = (l + r) / 2; long long ans = query(mid, 1); if ((base - ans) == (mid - 1)) { l = mid; min_dis = ans; } else { r = mid; } } long long right_down = query(bound, 1); long long right_up = query(bound, bound); long long x1, y1, x2, y2; y1 = min_dis + 1; x1 = base - min_dis + 1; x2 = bound - (right_down - min_dis); y2 = bound - (right_up - (bound - x2)); cout << "! " << x1 << " " << y1 << " " << x2 << " " << y2 << endl; }
72	 #include <bits/stdc++.h> using namespace std; const int N = 1e9; int ask(int x, int y) { cout << "? " << x << " " << y << endl; cout.flush(); cin >> x; return x; } void answerit(int x1, int y1, int x2, int y2) { cout << "! " << min(x1, x2) << " " << min(y1, y2) << " " << max(x1, x2) << " " << max(y1, y2) << endl; } int main() { int L = ask(1, 1), R = ask(N, 1), q = 1, ql, qr; if (L > R) ql = R - L + 1, qr = N; else ql = 1, qr = N - (R - L); int mid = (ql + qr) / 2; int upL = ask(mid, 1); int x1 = L - upL + 1, y1 = upL + 1, x2 = N - (R - upL), y2 = N - ask(mid, N); answerit(x1, y1, x2, y2); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e9; int ask(int x, int y) { cout << "? " << x << " " << y << endl; cout.flush(); cin >> x; return x; } void answerit(int x1, int y1, int x2, int y2) { cout << "! " << min(x1, x2) << " " << min(y1, y2) << " " << max(x1, x2) << " " << max(y1, y2) << endl; } int main() { int L = ask(1, 1), R = ask(N, 1), q = 1, ql, qr; if (L > R) ql = L - R + 1, qr = N; else ql = 1, qr = N - (R - L); int mid = (ql + qr) / 2; int upL = ask(mid, 1); int x1 = L - upL + 1, y1 = upL + 1, x2 = N - (R - upL), y2 = N - ask(mid, N); answerit(x1, y1, x2, y2); return 0; }
75	 #include <bits/stdc++.h> #pragma GCC optimize("unroll-loops") #pragma GCC optimize("O3") #pragma GCC target("avx2") using namespace std; void solve() { long long n; cin >> n; vector<long long> arr(n); for (long long i = 0; i < n; i++) cin >> arr[i]; long long l = 0, r = 0; for (l = 0; l < n - 1; l++) if (arr[l] > arr[l + 1]) break; for (r = 0; r < n - 1; r++) if (arr[n - 1 - r] > arr[n - 2 - r]) break; if (l % 2 == 0 || r % 2 == 0) cout << "Alice\n"; else cout << "Bob\n"; return; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long tc = 1; for (long long i = 0; i < tc; i++) solve(); }	 #include <bits/stdc++.h> #pragma GCC optimize("unroll-loops") #pragma GCC optimize("O3") #pragma GCC target("avx2") using namespace std; void solve() { long long n; cin >> n; vector<long long> arr(n); for (long long i = 0; i < n; i++) cin >> arr[i]; long long l = 0, r = 0; for (l = 0; l < n - 1; l++) if (arr[l] >= arr[l + 1]) break; for (r = 0; r < n - 1; r++) if (arr[n - 1 - r] >= arr[n - 2 - r]) break; if (l % 2 == 0 || r % 2 == 0) cout << "Alice\n"; else cout << "Bob\n"; return; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long tc = 1; for (long long i = 0; i < tc; i++) solve(); }
75	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) { cin >> v[i]; } vector<int> v1 = {v[0]}; for (int i = 1; i < v.size(); i++) { if (v[i] <= v1.back()) { break; } v1.push_back(v[i]); } vector<int> v2 = {v.back()}; for (int i = n - 2; i >= 0; i--) { if (v[i] <= v1.back()) { break; } v2.push_back(v[i]); } if (v1.size() % 2 == 1 || v2.size() % 2 == 1) { cout << "Alice\n"; return 0; } cout << "Bob"; return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) { cin >> v[i]; } vector<int> v1 = {v[0]}; for (int i = 1; i < v.size(); i++) { if (v[i] <= v1.back()) { break; } v1.push_back(v[i]); } vector<int> v2 = {v.back()}; for (int i = n - 2; i >= 0; i--) { if (v[i] <= v2.back()) { break; } v2.push_back(v[i]); } if (v1.size() % 2 == 1 || v2.size() % 2 == 1) { cout << "Alice\n"; return 0; } cout << "Bob"; return 0; }
75	 #include <bits/stdc++.h> using namespace std; long long M = 1e9 + 7; long long power(long long a, long long b) { long long r = 1; long long o = a; if (b <= 0) return 1; while (b != 0) { if (b % 2) r = (r * o) % M, b--; else { b /= 2; o = (o * o) % M; } } return r; } void solve(); int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t = 1; while (t--) { solve(); cout << "\n"; } return 0; } void solve() { long long n; cin >> n; vector<long long> a(n); for (int i = 0; i < n; i++) cin >> a[i]; long long p = n; for (long long i = (1); i < (n); i++) { if (a[i] <= a[i - 1]) { p = i; break; } } long long d = n; for (long long i = (n - 2); i >= (0); i--) { if (a[i] <= a[i + 1]) { p = n - i + 1; break; } } if (d % 2 || p % 2) cout << "Alice"; else cout << "Bob"; }	 #include <bits/stdc++.h> using namespace std; long long M = 1e9 + 7; long long power(long long a, long long b) { long long r = 1; long long o = a; if (b <= 0) return 1; while (b != 0) { if (b % 2) r = (r * o) % M, b--; else { b /= 2; o = (o * o) % M; } } return r; } void solve(); int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t = 1; while (t--) { solve(); cout << "\n"; } return 0; } void solve() { long long n; cin >> n; vector<long long> a(n); for (int i = 0; i < n; i++) cin >> a[i]; long long p = n; for (long long i = (1); i < (n); i++) { if (a[i] <= a[i - 1]) { p = i; break; } } long long d = n; for (long long i = (n - 2); i >= (0); i--) { if (a[i] <= a[i + 1]) { d = n - i + 1; break; } } if (d % 2 || p % 2) cout << "Alice"; else cout << "Bob"; }
75	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 100; int a[maxn]; int l, r; int n; inline void prework() { int i = 1; while (a[i + 1] > a[i]) i++; l = i; i = n; while (a[i - 1] > a[i]) i--; r = i; } bool solve(int i, int j, int player) { if (a[i] == a[j]) { if ((l - i + 1) & 1) return player; else if ((j - r + 1) & 1) return player; else return player ^ 1; } else if (a[i] > a[j]) { if ((l - i + 1) & 1) return player; else return solve(i, j - 1, player ^ 1); } else if (a[i] < a[j]) { if ((j - r + 1) & 1) return player; else return solve(i + 1, j, player ^ 1); } } int main() { cin >> n; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); prework(); if (solve(1, n, 1)) printf("Alice\n"); else printf("BOb\n"); return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 100; int a[maxn]; int l, r; int n; inline void prework() { int i = 1; while (a[i + 1] > a[i]) i++; l = i; i = n; while (a[i - 1] > a[i]) i--; r = i; } bool solve(int i, int j, int player) { if (a[i] == a[j]) { if ((l - i + 1) & 1) return player; else if ((j - r + 1) & 1) return player; else return player ^ 1; } else if (a[i] > a[j]) { if ((l - i + 1) & 1) return player; else return solve(i, j - 1, player ^ 1); } else if (a[i] < a[j]) { if ((j - r + 1) & 1) return player; else return solve(i + 1, j, player ^ 1); } } int main() { cin >> n; for (int i = 1; i <= n; i++) scanf("%d", &a[i]); prework(); if (solve(1, n, 1)) printf("Alice\n"); else printf("Bob\n"); return 0; }
75	 #include <bits/stdc++.h> using namespace std; int main() { int n; scanf("%d", &n); vector<int> A(n); for (int i = 0; i < n; ++i) { cin >> A[i]; } int leftLen = 1, rightLen = 1; for (int i = 1; i < n; ++i) { if (A[i] > A[i - 1]) ++leftLen; else break; } for (int i = n - 2; i >= 0; --i) { if (A[i] > A[i + 1]) ++rightLen; else break; } (leftLen % 1 || rightLen % 1) ? printf("Alice") : printf("Bob"); return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n; scanf("%d", &n); vector<int> A(n); for (int i = 0; i < n; ++i) { cin >> A[i]; } int leftLen = 1, rightLen = 1; for (int i = 1; i < n; ++i) { if (A[i] > A[i - 1]) ++leftLen; else break; } for (int i = n - 2; i >= 0; --i) { if (A[i] > A[i + 1]) ++rightLen; else break; } (leftLen % 2 || rightLen % 2) ? printf("Alice") : printf("Bob"); return 0; }
76	 #include <bits/stdc++.h> using namespace std; inline int read() { char ch; int f = 1, x; while (ch = getchar(), !isdigit(ch)) if (ch == '-') f = -1; x = (ch ^ 48); while (ch = getchar(), isdigit(ch)) x = (x << 3) + (x << 1) + (ch ^ 48); return x * f; } inline void write(int x) { if (x < 0) { putchar('-'); write(-x); return; } if (x > 9) write(x / 10); putchar(x % 10 ^ 48); } inline void writ(int x, char p = '\n') { write(x); putchar(p); } int n, m, g[110][110]; int main() { n = min(read(), 50), m = read(); for (int i = (1); i <= (m); ++i) { int u = read(), v = read(); if (u < n && v < n) g[u][v] = g[v][u] = 1; } int ans[5]; for (ans[0] = 1; ans[0] <= n; ++ans[0]) for (ans[1] = ans[0] + 1; ans[1] <= n; ++ans[1]) for (ans[2] = ans[1] + 1; ans[2] <= n; ++ans[2]) for (ans[3] = ans[2] + 1; ans[3] <= n; ++ans[3]) for (ans[4] = ans[3] + 1; ans[4] <= n; ++ans[4]) { int cnt = 0; for (int i = (0); i <= (4); ++i) for (int j = (i + 1); j <= (4); ++j) cnt += g[ans[i]][ans[j]]; if (cnt == 0 || cnt == 10) { for (int i = (0); i <= (3); ++i) writ(ans[i], ' '); writ(ans[4]); return 0; } } puts("-1"); return 0; }	 #include <bits/stdc++.h> using namespace std; inline int read() { char ch; int f = 1, x; while (ch = getchar(), !isdigit(ch)) if (ch == '-') f = -1; x = (ch ^ 48); while (ch = getchar(), isdigit(ch)) x = (x << 3) + (x << 1) + (ch ^ 48); return x * f; } inline void write(int x) { if (x < 0) { putchar('-'); write(-x); return; } if (x > 9) write(x / 10); putchar(x % 10 ^ 48); } inline void writ(int x, char p = '\n') { write(x); putchar(p); } int n, m, g[110][110]; int main() { n = min(read(), 50), m = read(); for (int i = (1); i <= (m); ++i) { int u = read(), v = read(); if (u <= n && v <= n) g[u][v] = g[v][u] = 1; } int ans[5]; for (ans[0] = 1; ans[0] <= n; ++ans[0]) for (ans[1] = ans[0] + 1; ans[1] <= n; ++ans[1]) for (ans[2] = ans[1] + 1; ans[2] <= n; ++ans[2]) for (ans[3] = ans[2] + 1; ans[3] <= n; ++ans[3]) for (ans[4] = ans[3] + 1; ans[4] <= n; ++ans[4]) { int cnt = 0; for (int i = (0); i <= (4); ++i) for (int j = (i + 1); j <= (4); ++j) cnt += g[ans[i]][ans[j]]; if (cnt == 0 || cnt == 10) { for (int i = (0); i <= (3); ++i) writ(ans[i], ' '); writ(ans[4]); return 0; } } puts("-1"); return 0; }
77	 #include <bits/stdc++.h> using namespace std; long long n, t, ans, i, j, m, k, a, b, z, voly, c, s[1000 * 1000 + 1], parent[1000 * 1000 + 1], used[1000 * 1000 + 1]; vector<long long> v; void make_set(int v) { parent[v] = v; s[v] = 1; } int find_set(int v) { if (v == parent[v]) return v; return parent[v] = find_set(parent[v]); } void union_sets(int a, int b) { a = find_set(a); b = find_set(b); if (a != b) { if (s[a] < s[b]) swap(a, b); parent[b] = a; s[a] += s[b]; } } signed main() { cin >> n >> m; for (j = 1; j <= n * m; j++) { make_set(j); used[j] = 0; } for (i = 1; i <= n; i++) { for (j = 1; j <= m; j++) { cin >> c; if (c % 2 == 0) { union_sets((i - 1) * m + j, (i - 1) * m + j - 1); } c = c / 2; if (c % 2 == 0) { union_sets((i - 1) * m + j, (i)*m + j); } } } for (j = 1; j <= n * m; j++) { c = find_set(j); if (used[c] == 0) { v.push_back(s[c]); used[c] = 1; } } sort(v.begin(), v.end()); for (j = 1; j <= v.size(); j++) { cout << v[v.size() - j] << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long n, t, ans, i, j, m, k, a, b, z, voly, c, s[1000 * 1000 + 1], parent[1000 * 1000 + 1], used[1000 * 1000 + 1]; vector<long long> v; void make_set(int v) { parent[v] = v; s[v] = 1; } int find_set(int v) { if (v == parent[v]) return v; return parent[v] = find_set(parent[v]); } void union_sets(int a, int b) { a = find_set(a); b = find_set(b); if (a != b) { if (s[a] < s[b]) swap(a, b); parent[b] = a; s[a] += s[b]; } } signed main() { cin >> n >> m; for (j = 1; j <= n * m; j++) { make_set(j); used[j] = 0; } for (i = 1; i <= n; i++) { for (j = 1; j <= m; j++) { cin >> c; if (c % 2 == 0) { union_sets((i - 1) * m + j, (i - 1) * m + j - 1); } c = c / 2; if (c % 2 == 0) { union_sets((i - 1) * m + j, (i)*m + j); } } } for (j = 1; j <= n * m; j++) { c = find_set(j); if (used[c] == 0) { v.push_back(s[c]); used[c] = 1; } } sort(v.begin(), v.end()); for (j = 1; j <= v.size(); j++) { cout << v[v.size() - j] << " "; } }
77	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int n, m, res[N], idx = -1, step; int dx[4] = {0, 1, 0, -1}, dy[4] = {-1, 0, 1, 0}; bool book[N][N]; int a[N][N]; void dfs(int x, int y) { bool flag = 0; int xx = a[x][y]; for (int i = 0; i < 4; i++) { if ((xx >> i) & 1 == 1) continue; int tx = x + dx[i]; int ty = y + dy[i]; if (tx < 0 || tx >= n || ty < 0 || ty >= m) { continue; } if (!book[tx][ty]) { flag = 1; book[tx][ty] = 1; step++; dfs(tx, ty); } } if (!flag) return; } int main() { idx = -1; cin >> n >> m; for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) cin >> a[i][j]; for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) if (!book[i][j]) { step = 1; book[i][j] = 1; dfs(i, j); res[++idx] = step; } sort(res, res + idx + 1); for (int i = idx; i >= 0; i--) cout << res[i] << ' '; puts(""); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e3 + 10; int n, m, res[N * N], idx = -1, step; int dx[4] = {0, 1, 0, -1}, dy[4] = {-1, 0, 1, 0}; bool book[N][N]; int a[N][N]; void dfs(int x, int y) { bool flag = 0; int xx = a[x][y]; for (int i = 0; i < 4; i++) { if ((xx >> i) & 1 == 1) continue; int tx = x + dx[i]; int ty = y + dy[i]; if (tx < 0 || tx >= n || ty < 0 || ty >= m) { continue; } if (!book[tx][ty]) { flag = 1; book[tx][ty] = 1; step++; dfs(tx, ty); } } if (!flag) return; } int main() { idx = -1; cin >> n >> m; for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) cin >> a[i][j]; for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) if (!book[i][j]) { step = 1; book[i][j] = 1; dfs(i, j); res[++idx] = step; } sort(res, res + idx + 1); for (int i = idx; i >= 0; i--) cout << res[i] << ' '; puts(""); return 0; }
78	 #include <bits/stdc++.h> using namespace std; int t, n, a[200005], bit[32], num; int gcd(int a, int b) { b == 0 ? a : gcd(b, a % b); } int main() { cin >> t; while (t--) { cin >> n; memset(bit, 0, sizeof(bit)); for (int i = 1; i <= n; i++) { cin >> num; int j = 1; while (num) { bit[j++] += num & 1; num >>= 1; } } int k = 0; for (int i = 1; i <= 31; i++) k = gcd(k, bit[i]); if (k == 0) { for (int i = 1; i <= n; i++) cout << i << " "; } else for (int i = 1; i <= k; i++) { if (k % i == 0) cout << i << " "; } cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, n, a[200005], bit[32], num; int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); } int main() { cin >> t; while (t--) { cin >> n; memset(bit, 0, sizeof(bit)); for (int i = 1; i <= n; i++) { cin >> num; int j = 1; while (num) { bit[j++] += num & 1; num >>= 1; } } int k = 0; for (int i = 1; i <= 31; i++) k = gcd(k, bit[i]); if (k == 0) { for (int i = 1; i <= n; i++) cout << i << " "; } else for (int i = 1; i <= k; i++) { if (k % i == 0) cout << i << " "; } cout << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; inline void read(int &x) { x = 0; int p = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') p = -p; ch = getchar(); } while (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch - '0'), ch = getchar(); x = x * p; } int h[35], ans[114514], tot; int gcd(int x, int y) { if (x % y == 0) return y; return gcd(y, x % y); } int main() { int t; read(t); while (t--) { memset(h, 0, sizeof(h)); int n; read(n); int tot = 0; for (int i = 1; i <= n; ++i) { int now = 0; int x; read(x); while (x) { if (x & 1) h[now]++; x >>= 1; now++; } } int res = 0; for (int i = 0; i <= 30; ++i) { if (h[i]) res = h[i]; } for (int i = 0; i <= 30; ++i) { if (h[i]) res = gcd(h[i], res); } tot = 0; if (!res) for (int i = 1; i <= n; ++i) printf("%d ", i); else { int q = sqrt(res); for (int i = 1; i <= q; ++i) { if (res % i == 0) { ans[++tot] = i; if (i * i != n) { ans[++tot] = res / i; } } } sort(ans + 1, ans + tot + 1); for (int i = 1; i <= tot; ++i) printf("%d ", ans[i]); } puts(""); } }	 #include <bits/stdc++.h> using namespace std; inline void read(int &x) { x = 0; int p = 1; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') p = -p; ch = getchar(); } while (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch - '0'), ch = getchar(); x = x * p; } int h[35], ans[114514], tot; int gcd(int x, int y) { if (x % y == 0) return y; return gcd(y, x % y); } int main() { int t; read(t); while (t--) { memset(h, 0, sizeof(h)); int n; read(n); int tot = 0; for (int i = 1; i <= n; ++i) { int now = 0; int x; read(x); while (x) { if (x & 1) h[now]++; x >>= 1; now++; } } int res = 0; for (int i = 0; i <= 30; ++i) { if (h[i]) res = h[i]; } for (int i = 0; i <= 30; ++i) { if (h[i]) res = gcd(h[i], res); } tot = 0; if (!res) for (int i = 1; i <= n; ++i) printf("%d ", i); else { int q = sqrt(res); for (int i = 1; i <= q; ++i) { if (res % i == 0) { ans[++tot] = i; if (i * i != res) { ans[++tot] = res / i; } } } sort(ans + 1, ans + tot + 1); for (int i = 1; i <= tot; ++i) printf("%d ", ans[i]); } puts(""); } }
78	 #include <bits/stdc++.h> using namespace std; const int N = 200010; int Q, n, a[N], cnt[40]; void solve() { scanf("%d", &n); memset(cnt, 0, sizeof(cnt)); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); for (int j = 0; j <= 30; j++) cnt[j] += ((a[i] >> j) & 1); } for (int j = 1; j <= n; j++) { bool flag = 1; for (int i = 1; i <= 30; i++) if (cnt[i] % j) flag = 0; if (flag) cout << j << " "; } cout << "\n"; } int main() { scanf("%d", &Q); while (Q--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200010; int Q, n, a[N], cnt[40]; void solve() { scanf("%d", &n); memset(cnt, 0, sizeof(cnt)); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); for (int j = 0; j <= 30; j++) cnt[j] += ((a[i] >> j) & 1); } for (int j = 1; j <= n; j++) { bool flag = 1; for (int i = 0; i <= 30; i++) if (cnt[i] % j) flag = 0; if (flag) cout << j << " "; } cout << "\n"; } int main() { scanf("%d", &Q); while (Q--) solve(); return 0; }
78	 #include <bits/stdc++.h> using namespace std; const int NR = 2e5 + 5; int a[NR]; int gcd(int x, int y) { return y == 0 ? x : gcd(y, x % y); } int cnt[40]; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%d", a + i); memset(cnt, 0, sizeof(cnt)); for (int i = 0; i <= 31; ++i) { for (int j = 1; j <= n; ++j) { if ((1 << i) & a[j]) ++cnt[i]; } } int nw = a[0]; for (int i = 1; i <= 31; ++i) nw = gcd(nw, cnt[i]); for (int i = 1; i <= n; ++i) { if (nw % i == 0) printf("%d ", i); } puts(""); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int NR = 2e5 + 5; int a[NR]; int gcd(int x, int y) { return y == 0 ? x : gcd(y, x % y); } int cnt[40]; int main() { int t; scanf("%d", &t); while (t--) { int n; scanf("%d", &n); for (int i = 1; i <= n; ++i) scanf("%d", a + i); memset(cnt, 0, sizeof(cnt)); for (int i = 0; i <= 31; ++i) { for (int j = 1; j <= n; ++j) { if ((1 << i) & a[j]) ++cnt[i]; } } int nw = cnt[0]; for (int i = 1; i <= 31; ++i) nw = gcd(nw, cnt[i]); for (int i = 1; i <= n; ++i) { if (nw % i == 0) printf("%d ", i); } puts(""); } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int gcd(int a, int b) { return b ? gcd(b, a % b) : a; } int cnt[30]; int main() { int T; cin >> T; while (T--) { memset(cnt, 0, sizeof(cnt)); int n; cin >> n; for (int i = 1, x; i <= n; i++) { cin >> x; for (int j = 0; j < 30; j++) { cnt[j] += (x & (1 << j)); } } int g = 0; for (int i = 0; i < 30; i++) { if (cnt[i]) { g = gcd(g, cnt[i]); } } for (int k = 1; k <= n; k++) { if (g % k == 0) { cout << k << " "; } } cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int gcd(int a, int b) { return b ? gcd(b, a % b) : a; } int cnt[30]; int main() { int T; cin >> T; while (T--) { memset(cnt, 0, sizeof(cnt)); int n; cin >> n; for (int i = 1, x; i <= n; i++) { cin >> x; for (int j = 0; j < 30; j++) { cnt[j] += bool(x & (1 << j)); } } int g = 0; for (int i = 0; i < 30; i++) { if (cnt[i]) { g = gcd(g, cnt[i]); } } for (int k = 1; k <= n; k++) { if (g % k == 0) { cout << k << " "; } } cout << endl; } return 0; }
78	 #include <bits/stdc++.h> using namespace std; long long read() { char ch = getchar(); long long f = 1, x = 0; while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return f * x; } const long long MAXN = 2e5 + 10; long long n; long long a[MAXN]; long long gcd(long long x, long long y) { return y ? gcd(y, x % y) : x; } signed main() { long long t = read(); while (t--) { n = read(); for (long long i = 1; i <= n; i++) { a[i] = read(); } long long g = 0; for (long long i = 30; i; i--) { long long cnt = 0; for (long long j = 1; j <= n; j++) { if ((1 << i) & a[j]) { cnt++; } } if (cnt) { if (!g) { g = cnt; } else { g = gcd(g, cnt); } } } if (!g) { for (long long i = 1; i <= n; i++) { printf("%d ", i); } puts(""); } else { for (long long i = 1; i * i < g; i++) { if (g % i == 0) { printf("%d ", i); } } for (long long i = sqrt(g); i; i--) { if (g % i == 0) { printf("%d ", g / i); } } puts(""); } } return 0; }	 #include <bits/stdc++.h> using namespace std; long long read() { char ch = getchar(); long long f = 1, x = 0; while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } return f * x; } const long long MAXN = 2e5 + 10; long long n; long long a[MAXN]; long long gcd(long long x, long long y) { return y ? gcd(y, x % y) : x; } signed main() { long long t = read(); while (t--) { n = read(); for (long long i = 1; i <= n; i++) { a[i] = read(); } long long g = 0; for (long long i = 30; i >= 0; i--) { long long cnt = 0; for (long long j = 1; j <= n; j++) { if ((1 << i) & a[j]) { cnt++; } } if (cnt) { if (!g) { g = cnt; } else { g = gcd(g, cnt); } } } if (!g) { for (long long i = 1; i <= n; i++) { printf("%d ", i); } puts(""); } else { for (long long i = 1; i * i < g; i++) { if (g % i == 0) { printf("%d ", i); } } for (long long i = sqrt(g); i; i--) { if (g % i == 0) { printf("%d ", g / i); } } puts(""); } } return 0; }
78	 #include <bits/stdc++.h> using namespace std; int a[32], bt[32]; int gcd(int x, int y) { return (!y) ? x : gcd(y, x % y); } int main() { bt[0] = 1; for (int i = 1; i < 30; i++) bt[i] = bt[i - 1] << 1; int T; cin >> T; while (T--) { int n; memset(a, 0, sizeof a); scanf("%d", &n); for (int i = 1; i <= n; i++) { int x; scanf("%d", &x); for (int j = 0; j < 30; j++) if (bt[j] & x) a[j]++; } int ans = a[0]; for (int i = 0; i < 30; i++) if (a[i]) ans = a[i]; for (int i = 1; i < 30; i++) ans = gcd(ans, a[i]); for (int i = 1; i <= ans; i++) if (ans % i == 0) printf("%d ", i); if (ans == 0) for (int i = 1; i <= n; i++) printf("%d ", i); puts(""); } return 0; }	 #include <bits/stdc++.h> using namespace std; int a[32], bt[32]; int gcd(int x, int y) { return (!y) ? x : gcd(y, x % y); } int main() { bt[0] = 1; for (int i = 1; i < 30; i++) bt[i] = bt[i - 1] << 1; int T; cin >> T; while (T--) { int n; memset(a, 0, sizeof a); scanf("%d", &n); for (int i = 1; i <= n; i++) { int x; scanf("%d", &x); for (int j = 0; j < 30; j++) if (bt[j] & x) a[j]++; } int ans = a[0]; for (int i = 0; i < 30; i++) if (a[i]) ans = a[i]; for (int i = 0; i < 30; i++) ans = gcd(ans, a[i]); for (int i = 1; i <= ans; i++) if (ans % i == 0) printf("%d ", i); if (ans == 0) for (int i = 1; i <= n; i++) printf("%d ", i); puts(""); } return 0; }
79	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; const int N = 3e5 + 5; int n, a[N], b[N], c[N], t[N]; pair<int, int> par[N]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> b[i]; queue<int> Q; set<int> S; for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9; Q.push(n); t[n] = 1; int inx = -1; while (!Q.empty()) { int x = Q.front(); Q.pop(); int y = x - a[x]; if (a[x] >= x) { inx = x; } while (!S.empty()) { auto it = S.lower_bound(y); if (it == S.end() || *it > x) break; if (t[*it + b[*it]] >= t[x] + 1) { t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1); par[*it + b[*it]] = make_pair(*it, x); Q.push(*it + b[*it]); } S.erase(it); } } cout << (t[inx] ? t[inx] : -1) << '\n'; if (inx != -1) { vector<int> v; v.push_back(0); while (par[inx].first) { v.push_back(par[inx].first); inx = par[inx].second; } reverse(v.begin(), v.end()); for (auto it : v) cout << it << ' '; } } int main() { ios::sync_with_stdio(false), cin.tie(0), cout.tie(0); int test_cases = 1; while (test_cases--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int MOD = 1e9 + 7; const int N = 3e5 + 5; int n, a[N], b[N], c[N], t[N]; pair<int, int> par[N]; void solve() { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> b[i]; queue<int> Q; set<int> S; for (int i = 1; i < n; i++) S.insert(i), t[i] = 1e9; Q.push(n); t[n] = 1; int inx = -1; while (!Q.empty()) { int x = Q.front(); Q.pop(); int y = x - a[x]; if (a[x] >= x) { inx = x; break; } while (!S.empty()) { auto it = S.lower_bound(y); if (it == S.end() || *it > x) break; if (t[*it + b[*it]] >= t[x] + 1) { t[*it + b[*it]] = min(t[*it + b[*it]], t[x] + 1); par[*it + b[*it]] = make_pair(*it, x); Q.push(*it + b[*it]); } S.erase(it); } } cout << (t[inx] ? t[inx] : -1) << '\n'; if (inx != -1) { vector<int> v; v.push_back(0); while (par[inx].first) { v.push_back(par[inx].first); inx = par[inx].second; } reverse(v.begin(), v.end()); for (auto it : v) cout << it << ' '; } } int main() { ios::sync_with_stdio(false), cin.tie(0), cout.tie(0); int test_cases = 1; while (test_cases--) solve(); return 0; }
80	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using pii = pair<int, int>; using pll = pair<ll, ll>; int n, m; int A[1000005]; int B[1000005]; int T[1000005]; int S[1000005]; int inverse(int s, int e) { if (s == e) { T[s] = A[s]; return 0; } int m = (s + e) / 2; ll ans = inverse(s, m) + inverse(m + 1, e); for (int i = s; i <= e; i++) { S[i] = T[i]; } int i = s, j = m + 1, k = s; while (k <= e) { if (j > e || (i <= m && S[i] <= S[j])) T[k++] = S[i++]; else T[k++] = S[j++], ans += m - i + 1; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T; cin >> T; for (int t = 1; t <= T; t++) { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> A[i]; for (int i = 1; i <= m; i++) cin >> B[i]; sort(B + 1, B + m + 1); priority_queue<int> pq; ll mx = inverse(1, n); for (int i = 1; i <= n; i++) { int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1; int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1; pq.push(x); pq.push(y); pq.pop(); mx += x; } while (!pq.empty()) { mx -= pq.top(); pq.pop(); } cout << mx << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; using pii = pair<int, int>; using pll = pair<ll, ll>; int n, m; int A[1000005]; int B[1000005]; int T[1000005]; int S[1000005]; ll inverse(int s, int e) { if (s == e) { T[s] = A[s]; return 0; } int m = (s + e) / 2; ll ans = inverse(s, m) + inverse(m + 1, e); for (int i = s; i <= e; i++) { S[i] = T[i]; } int i = s, j = m + 1, k = s; while (k <= e) { if (j > e || (i <= m && S[i] <= S[j])) T[k++] = S[i++]; else T[k++] = S[j++], ans += m - i + 1; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int T; cin >> T; for (int t = 1; t <= T; t++) { cin >> n >> m; for (int i = 1; i <= n; i++) cin >> A[i]; for (int i = 1; i <= m; i++) cin >> B[i]; sort(B + 1, B + m + 1); priority_queue<int> pq; ll mx = inverse(1, n); for (int i = 1; i <= n; i++) { int x = lower_bound(B + 1, B + m + 1, A[i]) - B - 1; int y = upper_bound(B + 1, B + m + 1, A[i]) - B - 1; pq.push(x); pq.push(y); pq.pop(); mx += x; } while (!pq.empty()) { mx -= pq.top(); pq.pop(); } cout << mx << '\n'; } return 0; }
81	 #include <bits/stdc++.h> using namespace std; struct node { int x, y; bool operator<(const node &a) const { if (min(x, y) != min(a.x, a.y)) return min(x, y) < min(a.x, a.y); return max(x, y) < max(a.x, a.y); } }; node st[500000 + 1]; int n, d, cnt; int main() { cin >> n >> d; for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y; sort(st + 1, st + n + 1); for (int i = 1; i <= n; ++i) if (st[i].x >= d) cnt++, d = max(d, st[i].y); cout << cnt << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; struct node { int x, y; bool operator<(const node &a) const { if (max(x, y) != max(a.x, a.y)) return max(x, y) < max(a.x, a.y); return min(x, y) < min(a.x, a.y); } }; node st[500000 + 1]; int n, d, cnt; int main() { cin >> n >> d; for (int i = 1; i <= n; ++i) cin >> st[i].x >> st[i].y; sort(st + 1, st + n + 1); for (int i = 1; i <= n; ++i) if (st[i].x >= d) cnt++, d = max(d, st[i].y); cout << cnt << endl; return 0; }
98	 #include <bits/stdc++.h> using namespace std; char a[26]; int num[26]; int main() { int n; scanf("%d", &n); char b[50]; for (int i = 0; i < n; i++) { int time = 0; scanf("%s", &a); scanf("%s", &b); for (int i1 = 0; i1 < 26; i1++) { num[a[i1] - 'a'] = i1; } for (int i2 = 0; i2 < strlen(b) - 1; i2++) { time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']); } printf("������Ϊ%d\n", time); } }	 #include <bits/stdc++.h> using namespace std; char a[26]; int num[26]; int main() { int n; scanf("%d", &n); char b[50]; for (int i = 0; i < n; i++) { int time = 0; scanf("%s", &a); scanf("%s", &b); for (int i1 = 0; i1 < 26; i1++) { num[a[i1] - 'a'] = i1; } for (int i2 = 0; i2 < strlen(b) - 1; i2++) { time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']); } printf("%d\n", time); } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; map<char, int> mp; while (t--) { string x; cin >> x; for (int i = 1; i < 26; i++) { mp[x[i - 1]] = i; } string s; cin >> s; int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(mp[s[i]] - mp[s[i - 1]]); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; map<char, int> mp; while (t--) { string x; cin >> x; for (int i = 1; i <= 26; i++) { mp[x[i - 1]] = i; } string s; cin >> s; int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(mp[s[i]] - mp[s[i - 1]]); } cout << ans << endl; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s, d; cin >> s >> d; int j, c = 0, k, i; for (i = 0; i < s.length(); i++) { for (k = 0; k < s.length(); k++) { for (j = 0; j < d.length() - 1; j++) { if (s[i] == d[j] && s[k] == d[j + 1]) c = c + abs(i - k); } } } cout << c; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s, d; cin >> s >> d; int j, c = 0, k, i; for (i = 0; i < s.length(); i++) { for (k = 0; k < s.length(); k++) { for (j = 0; j < d.length() - 1; j++) { if (s[i] == d[j] && s[k] == d[j + 1]) c = c + abs(i - k); } } } cout << c << "\n"; } return 0; }
98	 #include <bits/stdc++.h> using namespace std; long long pow_mod(long long nn, long long pp, long long mm) { long long res = 1; while (pp > 0) { if (pp & 1) res = (res * nn) % mm; pp = pp >> 1; nn = (nn * nn) % mm; } return res; } long long _gcd(long long a, long long b) { if (b == 0) return a; return _gcd(b, a % b); } void dhimanda(); int main() { int t = 1; scanf("%d", &t); for (int i = int(1); i <= int(t); i++) { dhimanda(); } return 0; } void dhimanda() { string a, b; cin >> a >> b; std::map<char, int> map; map.clear(); for (int i = 0; i < a.size(); ++i) { map[a[i]]++; } int ans = 0; for (int i = 0; i < b.size() - 1; ++i) { ans += abs(map[b[i]] - map[b[i + 1]]); } cout << ans << '\n'; }	 #include <bits/stdc++.h> using namespace std; long long pow_mod(long long nn, long long pp, long long mm) { long long res = 1; while (pp > 0) { if (pp & 1) res = (res * nn) % mm; pp = pp >> 1; nn = (nn * nn) % mm; } return res; } long long _gcd(long long a, long long b) { if (b == 0) return a; return _gcd(b, a % b); } void dhimanda(); int main() { int t = 1; scanf("%d", &t); for (int i = int(1); i <= int(t); i++) { dhimanda(); } return 0; } void dhimanda() { string a, b; cin >> a >> b; std::map<char, int> map; map.clear(); for (int i = 0; i < a.size(); ++i) { map[a[i]] = i; } int ans = 0; for (int i = 0; i < b.size() - 1; ++i) { ans += abs(map[b[i]] - map[b[i + 1]]); } cout << ans << '\n'; }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string order; cin >> order; string s; cin >> s; map<char, int> m; int c = 1; for (auto i : order) { m[i] = c; c++; } int ans = 0; for (int i = 1; i < s.length(); i++) { ans += (m[s[i]] - m[s[i - 1]]); } std::cout << ans << std::endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string order; cin >> order; string s; cin >> s; map<char, int> m; int c = 1; for (auto i : order) { m[i] = c; c++; } int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(m[s[i]] - m[s[i - 1]]); } std::cout << ans << std::endl; } return 0; }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str1, str2; cin >> str1 >> str2; int ans = 0, pos1 = 0, pos2 = 0; for (int i = 0; i < str2.length() - 1; i++) { for (int j = 1; j <= str1.length(); j++) { if (str2[i] == str1[j]) { pos1 = j; } if (str2[i + 1] == str1[j]) { pos2 = j; } } ans += abs(pos2 - pos1); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str1, str2; cin >> str1 >> str2; int ans = 0, pos1 = 0, pos2 = 0; for (int i = 0; i < str2.length() - 1; i++) { for (int j = 0; j <= str1.length(); j++) { if (str2[i] == str1[j]) { pos1 = j; } if (str2[i + 1] == str1[j]) { pos2 = j; } } ans += abs(pos2 - pos1); } cout << ans << endl; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int q, res; string keyboard, st; cin >> q; while (q--) { cin >> keyboard; cin >> st; int v[100]; res = 0; for (int i = 0; i < st.length(); i++) { for (int j = 0; j < 26; j++) { if (keyboard[j] == st[i]) { v[i] = j; if (i > 0) res = abs(j - v[i - 1]); } } } if (st.length() == 1) cout << "0" << "\n"; else cout << res << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int q, res; string keyboard, st; cin >> q; while (q--) { cin >> keyboard; cin >> st; int v[100]; res = 0; for (int i = 0; i < st.length(); i++) { for (int j = 0; j < 26; j++) { if (keyboard[j] == st[i]) { v[i] = j; if (i > 0) res += abs(j - v[i - 1]); } } } if (st.length() == 1) cout << "0" << "\n"; else cout << res << "\n"; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { string alf; cin >> alf; string word; cin >> word; if (word.size() == 1) { cout << 1 << endl; continue; } int result = 0; int temp = 0; for (int j = 1; j < word.size(); j++) { temp = alf.find(word[j]) - alf.find(word[j - 1]); result += abs(temp); temp = 0; } cout << result << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { string alf; cin >> alf; string word; cin >> word; if (word.size() == 1) { cout << 0 << endl; continue; } int result = 0; int temp = 0; for (int j = 1; j < word.size(); j++) { temp = alf.find(word[j]) - alf.find(word[j - 1]); result += abs(temp); temp = 0; } cout << result << endl; } }
87	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> vec(n); int maxi = INT_MIN; for (int i = 0; i < n; i++) { cin >> vec[i]; maxi = max(maxi, abs(vec[i] - (i + 1))); } cout << maxi << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> vec(n); int maxi = INT_MIN; for (int i = 0; i < n; i++) { cin >> vec[i]; maxi = max(maxi, (vec[i] - (i + 1))); } cout << maxi << '\n'; } return 0; }
88	 #include <bits/stdc++.h> using namespace std; int a[100005]; int main() { int T, n; scanf("%d", &T); while (T--) { scanf("%d", &n); int ans = 0; for (int i = 0; i < n; i++) { scanf("%d", &a[i]); if (i && a[i] < a[i - 1]) { ans = 1; } } if (n % 2 == 0) ans = 1; if (ans) printf("YES\n"); else printf("NO\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int a[100005]; int main() { int T, n; scanf("%d", &T); while (T--) { scanf("%d", &n); int ans = 0; for (int i = 0; i < n; i++) { scanf("%d", &a[i]); if (i && a[i] <= a[i - 1]) { ans = 1; } } if (n % 2 == 0) ans = 1; if (ans) printf("YES\n"); else printf("NO\n"); } return 0; }
88	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6; int p[maxn]; void solve() { int n; cin >> n; int fl = 0; for (int i = 1; i <= n; i++) { scanf("%d", &p[i]); if (i > 1 && p[i - 1] > p[i]) fl = 1; } if (n % 2 == 1 && fl == 0) cout << "NO" << endl; else cout << "YES" << endl; } int main() { int __; cin >> __; while (__--) solve(); }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6; int p[maxn]; void solve() { int n; cin >> n; int fl = 0; for (int i = 1; i <= n; i++) { scanf("%d", &p[i]); if (i > 1 && p[i - 1] >= p[i]) fl = 1; } if (n % 2 == 1 && fl == 0) cout << "NO" << endl; else cout << "YES" << endl; } int main() { int __; cin >> __; while (__--) solve(); }
88	 #include <bits/stdc++.h> using namespace std; const int kMod = 1000000007; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) cin >> v[i]; bool res = false; if (n % 2) { for (int i = 0; i < n - 1; i++) { if (v[i] > v[i + 1]) { res = true; break; } } } else { res = true; } cout << ((res) ? "YES\n" : "NO\n"); } }	 #include <bits/stdc++.h> using namespace std; const int kMod = 1000000007; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) cin >> v[i]; bool res = false; if (n % 2) { for (int i = 0; i < n - 1; i++) { if (v[i] >= v[i + 1]) { res = true; break; } } } else { res = true; } cout << ((res) ? "YES\n" : "NO\n"); } }
88	 #include <bits/stdc++.h> using namespace std; long long int binpow(long long int a, long long int b, long long int mod) { long long int res = 1; while (b != 0) { if (b % 2) { res = (res * a) % mod; } a = (a * a) % mod; b = b / 2; } return res % mod; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) cin >> v[i]; if (n % 2 == 0) cout << "YES" << endl; else { int fl = 1; for (int i = 0; i < n - 1; i++) { if (v[i] > v[i + 1]) { fl = 0; break; } } if (!fl) cout << "YES" << endl; else { cout << "NO" << endl; } } } }	 #include <bits/stdc++.h> using namespace std; long long int binpow(long long int a, long long int b, long long int mod) { long long int res = 1; while (b != 0) { if (b % 2) { res = (res * a) % mod; } a = (a * a) % mod; b = b / 2; } return res % mod; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v(n); for (int i = 0; i < n; i++) cin >> v[i]; if (n % 2 == 0) cout << "YES" << endl; else { int fl = 1; for (int i = 0; i < n - 1; i++) { if (v[i] >= v[i + 1]) { fl = 0; break; } } if (!fl) cout << "YES" << endl; else { cout << "NO" << endl; } } } }
88	 #include <bits/stdc++.h> using namespace std; bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) { return (a.second < b.second); } long long modFact(long long n, long long p) { if (n >= p) return 0; long long result = 1; for (long long i = 1; i <= n; i++) result = (result * i) % p; return result; } long long modPower(long long x, long long y, long long p) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } void printArr(vector<long long> arr) { for (auto &x : arr) cout << x << " "; cout << '\n'; } long long get() { long long temp; cin >> temp; return temp; } void solve() { long long n; cin >> n; long long a[n]; for (auto &x : a) cin >> x; if (n & 1 == 0) { cout << "YES\n"; return; } else { bool isSorted = true; for (long long i = 0; i < n - 1; i++) { if (a[i] >= a[i + 1]) { isSorted = false; break; } } if (!isSorted) cout << "YES\n"; else cout << "NO\n"; } } int main() { ios::sync_with_stdio(false), cin.tie(0); long long t = 0; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) { return (a.second < b.second); } long long modFact(long long n, long long p) { if (n >= p) return 0; long long result = 1; for (long long i = 1; i <= n; i++) result = (result * i) % p; return result; } long long modPower(long long x, long long y, long long p) { long long res = 1; x = x % p; if (x == 0) return 0; while (y > 0) { if (y & 1) res = (res * x) % p; y = y >> 1; x = (x * x) % p; } return res; } void printArr(vector<long long> arr) { for (auto &x : arr) cout << x << " "; cout << '\n'; } long long get() { long long temp; cin >> temp; return temp; } void solve() { long long n; cin >> n; long long a[n]; for (auto &x : a) cin >> x; if (n % 2 == 0) { cout << "YES\n"; return; } else { bool isSorted = true; for (long long i = 0; i < n - 1; i++) { if (a[i] >= a[i + 1]) { isSorted = false; break; } } if (!isSorted) cout << "YES\n"; else cout << "NO\n"; } } int main() { ios::sync_with_stdio(false), cin.tie(0); long long t = 0; cin >> t; while (t--) solve(); return 0; }
88	 #include <bits/stdc++.h> using namespace std; bool arraySortedOrNot(long long int arr[], long long int n) { if (n == 0 || n == 1) return true; for (int i = 1; i < n; i++) if (arr[i - 1] > arr[i]) return false; return true; } void solve() { long long int n; cin >> n; long long int a[n]; for (long long int i = 0; i < n; i++) { cin >> a[i]; } if (n % 2 == 0) { cout << "YES"; } else { if (arraySortedOrNot(a, n)) { cout << "NO"; } else { cout << "YES"; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; bool arraySortedOrNot(long long int arr[], long long int n) { if (n == 0 || n == 1) return true; for (int i = 1; i < n; i++) if (arr[i - 1] >= arr[i]) return false; return true; } void solve() { long long int n; cin >> n; long long int a[n]; for (long long int i = 0; i < n; i++) { cin >> a[i]; } if (n % 2 == 0) { cout << "YES"; } else { if (arraySortedOrNot(a, n)) { cout << "NO"; } else { cout << "YES"; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { solve(); cout << endl; } return 0; }
88	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long &x : a) cin >> x; bool flag = 0; for (int i = 0; i < n - 1; i++) { if (a[i] > a[i + 1]) flag = true; } if (n % 2 == 0 || flag) cout << "YES\n"; else cout << "NO\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long &x : a) cin >> x; bool flag = 0; for (int i = 0; i < n - 1; i++) { if (a[i] >= a[i + 1]) flag = true; } if (n % 2 == 0 || flag) cout << "YES\n"; else cout << "NO\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) solve(); return 0; }
88	 #include <bits/stdc++.h> using namespace std; long long a[100010]; int main() { int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) cout << "YES" << '\n'; else { int cnt = 0; for (int i = 1; i <= n - 1; i++) { if (a[i] > a[i + 1]) cnt = 1; } if (cnt) cout << "YES" << '\n'; else cout << "NO" << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; long long a[100010]; int main() { int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 1; i <= n; i++) { cin >> a[i]; } if (n % 2 == 0) cout << "YES" << '\n'; else { int cnt = 0; for (int i = 1; i <= n - 1; i++) { if (a[i] >= a[i + 1]) cnt = 1; } if (cnt) cout << "YES" << '\n'; else cout << "NO" << '\n'; } } }
88	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { cin.sync_with_stdio(false); cin.tie(nullptr); int tc; cin >> tc; while (tc--) { int n; cin >> n; vector<int> nums(n); for (int& x : nums) { cin >> x; } bool ans = n % 2 == 0; for (int i = 0; i < n - 1; ++i) { ans |= nums[i] > nums[i + 1]; } int cnt = 0, cur = 0; for (int x : nums) { if (x > cur) { cur = x; cnt++; } } ans |= cnt % 2 == 0; cout << (ans ? "YES" : "NO") << '\n'; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; int main() { cin.sync_with_stdio(false); cin.tie(nullptr); int tc; cin >> tc; while (tc--) { int n; cin >> n; vector<int> nums(n); for (int& x : nums) { cin >> x; } bool ans = n % 2 == 0; for (int i = 0; i < n - 1; ++i) { ans |= nums[i] >= nums[i + 1]; } int cnt = 0, cur = 0; for (int x : nums) { if (x > cur) { cur = x; cnt++; } } ans |= cnt % 2 == 0; cout << (ans ? "YES" : "NO") << '\n'; } }
88	 #include <bits/stdc++.h> using namespace std; string to_upper(string &a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'a' && a[i] <= 'z') a[i] -= 'a' - 'A'; return a; } string to_lower(string &a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'A' && a[i] <= 'Z') a[i] += 'a' - 'A'; return a; } int gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b); } int lcm(int a, int b) { return (a / gcd(a, b)) * b; } void dsc() { int n; cin >> n; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; if (n % 2 == 0) { cout << "YES\n"; return; } int x = 0; for (int i = 1; i < n; i++) { if (arr[i] < arr[i - 1]) x++; } if (x == 0) cout << "NO\n"; else cout << "YES\n"; } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) dsc(); }	 #include <bits/stdc++.h> using namespace std; string to_upper(string &a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'a' && a[i] <= 'z') a[i] -= 'a' - 'A'; return a; } string to_lower(string &a) { for (int i = 0; i < (int)a.size(); ++i) if (a[i] >= 'A' && a[i] <= 'Z') a[i] += 'a' - 'A'; return a; } int gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b); } int lcm(int a, int b) { return (a / gcd(a, b)) * b; } void dsc() { int n; cin >> n; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; if (n % 2 == 0) { cout << "YES\n"; return; } int x = 0; for (int i = 1; i < n; i++) { if (arr[i] <= arr[i - 1]) x++; } if (x == 0) cout << "NO\n"; else cout << "YES\n"; } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) dsc(); }
88	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { int n; cin >> n; int last; cin >> last; bool strictly_increasing = true; for (int j = 1; j < n; j++) { int x; cin >> x; if (x < last) { strictly_increasing = false; } last = x; } if (n % 2 == 0 || !strictly_increasing) { cout << "YES\n"; } else { cout << "NO\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { int n; cin >> n; int last; cin >> last; bool strictly_increasing = true; for (int j = 1; j < n; j++) { int x; cin >> x; if (x <= last) { strictly_increasing = false; } last = x; } if (n % 2 == 0 || !strictly_increasing) { cout << "YES\n"; } else { cout << "NO\n"; } } return 0; }
88	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> arr(n); long long val = 0; bool ok = true; for (long long i = 0; i < n; i++) { long long temp; cin >> temp; if (temp < val) ok = false; val = temp; } if (ok && n % 2) cout << "NO" << endl; else cout << "YES" << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; for (long long i = 1; i <= t; i++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> arr(n); long long val = 0; bool ok = true; for (long long i = 0; i < n; i++) { long long temp; cin >> temp; if (temp <= val) ok = false; val = temp; } if (ok && n % 2) cout << "NO" << endl; else cout << "YES" << endl; } int32_t main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; for (long long i = 1; i <= t; i++) { solve(); } return 0; }
88	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; int ar[n]; for (int i = 0; i < n; i++) cin >> ar[i]; if (n % 2 == 0) cout << "YES" << endl; else { int flag = 0; for (int i = 0; i < n - 1; i++) { if (ar[i] > ar[i + 1]) flag++; } if (flag == 0) cout << "NO" << endl; else cout << "YES" << endl; } } int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; int ar[n]; for (int i = 0; i < n; i++) cin >> ar[i]; if (n % 2 == 0) cout << "YES" << endl; else { int flag = 0; for (int i = 0; i < n - 1; i++) { if (ar[i] >= ar[i + 1]) flag++; } if (flag == 0) cout << "NO" << endl; else cout << "YES" << endl; } } int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) solve(); }
88	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(NULL); long long int t; cin >> t; while (t--) { long long int n; cin >> n; long long int arr[n]; for (long long int i = 0; i < n; i++) cin >> arr[i]; if (n % 2 == 0) { cout << "YES" << "\n"; continue; } long long int check = 0; for (long long int i = 1; i < n; i++) { if (arr[i - 1] > arr[i]) { cout << "YES" << "\n"; check++; break; } } if (check) continue; cout << "NO" << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(NULL); long long int t; cin >> t; while (t--) { long long int n; cin >> n; long long int arr[n]; for (long long int i = 0; i < n; i++) cin >> arr[i]; if (n % 2 == 0) { cout << "YES" << "\n"; continue; } long long int check = 0; for (long long int i = 1; i < n; i++) { if (arr[i - 1] >= arr[i]) { cout << "YES" << "\n"; check++; break; } } if (check) continue; cout << "NO" << "\n"; } return 0; }
88	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { int N; cin >> N; bool good = 0; vector<int> a(N); for (int &i : a) cin >> i; for (int i = 0; i + 1 < N; i++) { if (a[i] > a[i + 1]) good = 1; } if (!good and N % 2) cout << "NO\n"; else cout << "YES\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int T; cin >> T; while (T--) { int N; cin >> N; bool good = 0; vector<int> a(N); for (int &i : a) cin >> i; for (int i = 0; i + 1 < N; i++) { if (a[i] >= a[i + 1]) good = 1; } if (!good and N % 2) cout << "NO\n"; else cout << "YES\n"; } }
88	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; vector<int> vec(n); vector<int> a; int p = 0, cnt = 0; for (auto& i : vec) { cin >> i; } if (n % 2 == 0) { cout << "YES" << '\n'; return; } p = vec[0]; for (int i = 1; i < n; i++) { if (vec[i] >= vec[i - 1]) { cout << "YES" << '\n'; return; } p = i; } cout << "NO" << '\n'; } int main() { int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; vector<int> vec(n); vector<int> a; int p = 0, cnt = 0; for (auto& i : vec) { cin >> i; } if (n % 2 == 0) { cout << "YES" << '\n'; return; } p = vec[0]; for (int i = 1; i < n; i++) { if (vec[i] <= vec[i - 1]) { cout << "YES" << '\n'; return; } p = i; } cout << "NO" << '\n'; } int main() { int t; cin >> t; while (t--) solve(); }
88	 #include <bits/stdc++.h> using namespace std; const unsigned int M = 1000000007; const unsigned int MOD = 998244353; const int MAXN = 1e5 + 55; const long long int MAXD = 1e14; const long long int INF = 1e18; const long long int NINF = INF * (-1); int gcd(int a, int b) { if (a == 0) return b; return gcd(b % a, a); } long long binpow(long long a, long long b) { long long res = 1; while (b > 0) { if (b & 1) res = ((res) * (a)); a = ((a) * (a)); b >>= 1; } return res; } vector<vector<int>> adj(200055); vector<pair<long long int, pair<long long int, long long int>>> node(200055, {0, {0, 0}}); vector<bool> vis(200055); void testmetal() { long long int n; cin >> n; long long int a[n]; for (long long int i = 0; i < n; i++) { cin >> a[i]; } if (n & 1 == 0) { cout << "YES" << "\n"; return; } for (long long int i = 1; i < n; i++) { if (a[i] <= a[i - 1]) { cout << "YES" << "\n"; return; } } cout << "NO" << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { testmetal(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const unsigned int M = 1000000007; const unsigned int MOD = 998244353; const int MAXN = 1e5 + 55; const long long int MAXD = 1e14; const long long int INF = 1e18; const long long int NINF = INF * (-1); int gcd(int a, int b) { if (a == 0) return b; return gcd(b % a, a); } long long binpow(long long a, long long b) { long long res = 1; while (b > 0) { if (b & 1) res = ((res) * (a)); a = ((a) * (a)); b >>= 1; } return res; } vector<vector<int>> adj(200055); vector<pair<long long int, pair<long long int, long long int>>> node(200055, {0, {0, 0}}); vector<bool> vis(200055); void testmetal() { long long int n; cin >> n; long long int a[n]; for (long long int i = 0; i < n; i++) { cin >> a[i]; } if ((n & 1) == 0) { cout << "YES" << "\n"; return; } for (long long int i = 1; i < n; i++) { if (a[i] <= a[i - 1]) { cout << "YES" << "\n"; return; } } cout << "NO" << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t; cin >> t; while (t--) { testmetal(); } return 0; }
88	 #include <bits/stdc++.h> using namespace std; int v[200005]; int main() { int n, i, j, l, t, z, a; ios_base::sync_with_stdio(false); cin.tie(NULL); cin >> t; for (z = 1; z <= t; z++) { cin >> n; int maxim = 0; int cnt = 0; for (i = 1; i <= n; i++) { cin >> v[i]; } for (i = 2; i <= n; i++) { if (v[i] < v[i - 1]) { cnt = 1; } } if (n % 2 == 0) { cout << "Yes"; } else { if (cnt == 1) { cout << "Yes"; } else { cout << "NO"; } } cout << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int v[200005]; int main() { int n, i, j, l, t, z, a; ios_base::sync_with_stdio(false); cin.tie(NULL); cin >> t; for (z = 1; z <= t; z++) { cin >> n; int maxim = 0; int cnt = 0; for (i = 1; i <= n; i++) { cin >> v[i]; } for (i = 2; i <= n; i++) { if (v[i] <= v[i - 1]) { cnt = 1; } } if (n % 2 == 0) { cout << "Yes"; } else { if (cnt == 1) { cout << "Yes"; } else { cout << "NO"; } } cout << '\n'; } return 0; }
88	 #include <bits/stdc++.h> using namespace std; long long int poww(long long int x, long long int y) { long long int ans = 1; while (y-- > 0) { ans *= x; } return ans; } void sieve() { bool *primes = new bool[100000 + 1]; for (long long int i = 0; i < 100000 + 1; i++) { primes[i] = true; } long long int sqr = sqrt(100000); primes[0] = false; primes[1] = false; for (long long int p = 2; p <= sqr; p++) { if (primes[p]) { for (long long int i = p * p; i <= 100000; i += p) { primes[i] = false; } } } vector<int> v; for (long long int i = 2; i <= 100000; i++) { if (primes[i]) { v.push_back(i); } } } int main() { long long int t; cin >> t; while (t-- > 0) { int n; cin >> n; long long int arr[n]; int ch = 0; for (long long int i = 0; i <= n - 1; i++) { cin >> arr[i]; } if (n % 2 == 0) { cout << "YES" << endl; } else { for (long long int i = 0; i <= n - 2; i++) { if (arr[i] > arr[i + 1]) { ch = 1; break; } } if (ch == 1) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } }	 #include <bits/stdc++.h> using namespace std; long long int poww(long long int x, long long int y) { long long int ans = 1; while (y-- > 0) { ans *= x; } return ans; } void sieve() { bool *primes = new bool[100000 + 1]; for (long long int i = 0; i < 100000 + 1; i++) { primes[i] = true; } long long int sqr = sqrt(100000); primes[0] = false; primes[1] = false; for (long long int p = 2; p <= sqr; p++) { if (primes[p]) { for (long long int i = p * p; i <= 100000; i += p) { primes[i] = false; } } } vector<int> v; for (long long int i = 2; i <= 100000; i++) { if (primes[i]) { v.push_back(i); } } } int main() { long long int t; cin >> t; while (t-- > 0) { int n; cin >> n; long long int arr[n]; int ch = 0; for (long long int i = 0; i <= n - 1; i++) { cin >> arr[i]; } if (n % 2 == 0) { cout << "YES" << endl; } else { for (long long int i = 0; i <= n - 2; i++) { if (arr[i] >= arr[i + 1]) { ch = 1; break; } } if (ch == 1) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } }
88	 #include <bits/stdc++.h> const double PI = 3.14159265358979323846; using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) { cout << "YES" << endl; } else { long long ch = a[0], f = 0, idx1 = -1, idx2 = -1; for (long long i = 0; i + 1 < n; i++) { if (a[i] > a[i + 1]) { f = 1; break; } } if (f == 1) cout << "YES" << endl; else cout << "NO" << endl; } } return 0; }	 #include <bits/stdc++.h> const double PI = 3.14159265358979323846; using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) { cout << "YES" << endl; } else { long long ch = a[0], f = 0, idx1 = -1, idx2 = -1; for (long long i = 0; i + 1 < n; i++) { if (a[i] >= a[i + 1]) { f = 1; break; } } if (f == 1) cout << "YES" << endl; else cout << "NO" << endl; } } return 0; }
88	 #include <bits/stdc++.h> using namespace std; string solve() { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) return "YES"; for (int i = 0; i < n - 1; i++) if (a[i] > a[i + 1]) return "YES"; return "NO"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int t = 1; cin >> t; while (t--) { cout << solve() << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; string solve() { int n; cin >> n; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) return "YES"; for (int i = 0; i < n - 1; i++) if (a[i] >= a[i + 1]) return "YES"; return "NO"; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int t = 1; cin >> t; while (t--) { cout << solve() << "\n"; } return 0; }
88	 #include <bits/stdc++.h> const int INF = 0x3f3f3f3f; const int N = (int)1e5 + 5; using namespace std; int t, n; int a[N]; int main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); cin >> t; a[0] = -1; while (t--) { cin >> n; for (int i = (1); i < (n + 1); i++) cin >> a[i]; if (n % 2 == 0) { puts("YES"); continue; } else { bool ans = false; for (int i = (1); i < (n + 1); i++) { if (a[i] < a[i - 1]) { ans = true; break; } } puts(ans ? "YES" : "NO"); } } return 0; }	 #include <bits/stdc++.h> const int INF = 0x3f3f3f3f; const int N = (int)1e5 + 5; using namespace std; int t, n; int a[N]; int main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); cin >> t; a[0] = -1; while (t--) { cin >> n; for (int i = (1); i < (n + 1); i++) cin >> a[i]; if (n % 2 == 0) { puts("YES"); continue; } else { bool ans = false; for (int i = (1); i < (n + 1); i++) { if (a[i] <= a[i - 1]) { ans = true; break; } } puts(ans ? "YES" : "NO"); } } return 0; }
88	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; vector<long long int> arr(n); for (long long int i = 0; i < n; i++) { cin >> arr[i]; } if (n % 2 == 0) { cout << "YES" << endl; } else { bool flag = false; for (long long int i = 0; i < n - 1; i++) { if (arr[i] > arr[i + 1]) { flag = true; break; } } if (flag == true) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } int main() { int t; cin >> t; for (int i = 1; i <= t; i++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; vector<long long int> arr(n); for (long long int i = 0; i < n; i++) { cin >> arr[i]; } if (n % 2 == 0) { cout << "YES" << endl; } else { bool flag = false; for (long long int i = 0; i < n - 1; i++) { if (arr[i] >= arr[i + 1]) { flag = true; break; } } if (flag == true) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } int main() { int t; cin >> t; for (int i = 1; i <= t; i++) { solve(); } }
88	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; void solve() { long long n, i; cin >> n; long long a[n]; for (i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) { cout << "YES\n"; return; } for (i = 0; i < n - 1; i++) { if (a[i] > a[i + 1]) { cout << "YES\n"; return; } } cout << "NO\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; const long long M = 1e9 + 7; void solve() { long long n, i; cin >> n; long long a[n]; for (i = 0; i < n; i++) cin >> a[i]; if (n % 2 == 0) { cout << "YES\n"; return; } for (i = 0; i < n - 1; i++) { if (a[i] >= a[i + 1]) { cout << "YES\n"; return; } } cout << "NO\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) solve(); }
89	 #include <bits/stdc++.h> using namespace std; long long read() { long long ans = 0, f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') ans = ans * 10 + c - '0', c = getchar(); return ans * f; } const int maxn = 1e6 + 5; long long T, n, a[maxn], die[maxn], now; bool bj; int main() { T = read(); while (T--) { n = read(); for (register int i = 1; i <= n; i++) a[i] = read(); bj = 1; for (register int i = 1; i <= n; i++) { die[i] = -1; for (register int j = n; j >= 1; j--) { if (a[i] % (j + 1) != 0) { die[i] = i - j; break; } } if (die[i] == -1) bj = 0; } for (register int i = 1; i <= n; i++) if (die[i] > i - 1) { bj = 0; } if (!bj) puts("NO"); else puts("YES"); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long read() { long long ans = 0, f = 1; char c = getchar(); while (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); } while (c >= '0' && c <= '9') ans = ans * 10 + c - '0', c = getchar(); return ans * f; } const int maxn = 1e6 + 5; long long T, n, a[maxn], die[maxn], now; bool bj; int main() { T = read(); while (T--) { n = read(); for (register int i = 1; i <= n; i++) a[i] = read(); bj = 1; for (register int i = 1; i <= n; i++) { die[i] = -1; for (register int j = i; j >= 1; j--) { if (a[i] % (j + 1) != 0) { die[i] = i - j; break; } } if (die[i] == -1) bj = 0; } for (register int i = 1; i <= n; i++) if (die[i] > i - 1) { bj = 0; } if (!bj) puts("NO"); else puts("YES"); } return 0; }
90	 #include <bits/stdc++.h> using namespace std; int main() { ; ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long x, y; cin >> x >> y; if (x == y) cout << x << "\n"; else if (x > y) cout << x + y << "\n"; else { long long mod = (y % x) * x; cout << (mod + y) / 2 << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ; ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { long long x, y; cin >> x >> y; if (x == y) cout << x << "\n"; else if (x > y) cout << x + y << "\n"; else { long long mod = (y / x) * x; cout << (mod + y) / 2 << "\n"; } } return 0; }
90	 #include <bits/stdc++.h> using namespace std; long long x, y, n; inline void solve() { cin >> x >> y; if (y % x == 0) { cout << x << endl; return; } if (x < y) { n = y % x * x; cout << (y + n) / 2 << endl; } else { cout << x + y << endl; } } int T; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long x, y, n; inline void solve() { cin >> x >> y; if (y % x == 0) { cout << x << endl; return; } if (x < y) { n = y / x * x; cout << (y + n) / 2 << endl; } else { cout << x + y << endl; } } int T; int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) solve(); return 0; }
91	 #include <bits/stdc++.h> using namespace std; const long long maxl = 2e5 + 7; const long long mod = 998244353; vector<long long> v[2]; long long dp[2][maxl]; signed main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; long long ans = 0; vector<long long> nana(n + 10); for (long long i = 1; i <= n; i++) cin >> nana[i]; for (long long i = n; i >= 1; i--) { long long k = i & 1; v[k].push_back(nana[i]); dp[k][nana[i]] = 1; long long las = nana[i]; for (auto& x : v[k ^ 1]) { long long chuxiancishu = dp[k ^ 1][x]; long long fenkuai = (nana[i] + x - 1) / x; long long newx = nana[i] / fenkuai; ans += chuxiancishu * i % mod * (fenkuai - 1) % mod; dp[k][newx] += chuxiancishu; if (las != newx) v[k].push_back(newx), las = newx; } for (auto& x : v[k ^ 1]) dp[k ^ 1][x] = 0; v[k ^ 1].clear(); ans %= mod; } cout << ans << '\n'; for (auto& x : v[0]) dp[0][x] = 0; for (auto& x : v[1]) dp[1][x] = 1; v[0].clear(), v[1].clear(); } }	 #include <bits/stdc++.h> using namespace std; const long long maxl = 2e5 + 7; const long long mod = 998244353; vector<long long> v[2]; long long dp[2][maxl]; signed main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; long long ans = 0; vector<long long> nana(n + 10); for (long long i = 1; i <= n; i++) cin >> nana[i]; for (long long i = n; i >= 1; i--) { long long k = i & 1; v[k].push_back(nana[i]); dp[k][nana[i]] = 1; long long las = nana[i]; for (auto& x : v[k ^ 1]) { long long chuxiancishu = dp[k ^ 1][x]; long long fenkuai = (nana[i] + x - 1) / x; long long newx = nana[i] / fenkuai; ans += chuxiancishu * i % mod * (fenkuai - 1) % mod; dp[k][newx] += chuxiancishu; if (las != newx) v[k].push_back(newx), las = newx; } for (auto& x : v[k ^ 1]) dp[k ^ 1][x] = 0; v[k ^ 1].clear(); ans %= mod; } cout << ans << '\n'; for (auto& x : v[0]) dp[0][x] = 0; for (auto& x : v[1]) dp[1][x] = 0; v[0].clear(), v[1].clear(); } }
92	 #include <bits/stdc++.h> using namespace std; int main() { int a; cin >> a; for (int i = 1; i <= a; i++) { string p; int ans1 = 0, ans2 = 0; cin >> p; if (p.size() == 1) { cout << p; } else { for (int l = 0; l <= p.size() - 2; l++) { if (p[l] == 'a' && p[l + 1] == 'b') { ans1++; } else if (p[l] == 'b' && p[l + 1] == 'a') { ans2++; } else { } } int ans = abs(ans1 - ans2); if (ans1 > ans2) { for (int l = 0; l <= p.size() - 2; l++) { if (ans == 0) { break; } if (p[l] == 'a' && p[l + 1] == 'b' || p[l - 1] != 'b') { p[l] = 'b'; ans--; } else if (p[l] == 'b' && p[l - 1] == 'a' || p[l + 1] != 'a') { p[l] = 'a'; ans--; } else { } } } else if (ans1 < ans2) { for (int l = 0; l <= p.size() - 2; l++) { if (ans == 0) { break; } if (p[l] == 'b' && p[l + 1] == 'a' || p[l - 1] != 'a') { p[l] = 'a'; ans--; } else if (p[l] == 'a' && p[l - 1] == 'b' || p[l + 1] != 'b') { p[l] = 'b'; ans--; } else { } } } else { } cout << p << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int a; cin >> a; for (int i = 1; i <= a; i++) { string p; int ans1 = 0, ans2 = 0; cin >> p; if (p.size() == 1) { cout << p << endl; } else { for (int l = 0; l <= p.size() - 2; l++) { if (p[l] == 'a' && p[l + 1] == 'b') { ans1++; } else if (p[l] == 'b' && p[l + 1] == 'a') { ans2++; } else { } } int ans = abs(ans1 - ans2); if (ans1 > ans2) { for (int l = 0; l <= p.size() - 2; l++) { if (ans == 0) { break; } if (p[l] == 'a' && p[l + 1] == 'b' || p[l - 1] != 'b') { p[l] = 'b'; ans--; } else if (p[l] == 'b' && p[l - 1] == 'a' || p[l + 1] != 'a') { p[l] = 'a'; ans--; } else { } } } else if (ans1 < ans2) { for (int l = 0; l <= p.size() - 2; l++) { if (ans == 0) { break; } if (p[l] == 'b' && p[l + 1] == 'a' || p[l - 1] != 'a') { p[l] = 'a'; ans--; } else if (p[l] == 'a' && p[l - 1] == 'b' || p[l + 1] != 'b') { p[l] = 'b'; ans--; } else { } } } else { } cout << p << endl; } } return 0; }
92	 #include <bits/stdc++.h> using namespace std; void ha() { printf("YES\n"); } void na() { printf("NO\n"); } long long power(long long a, long long b) { long long c, d; if (b == 1) { return a % 1000000007; } else if (b % 2 == 0) { c = power(a, b / 2); return (c * c) % 1000000007; } else { c = power(a, b / 2); d = (c * c) % 1000000007; d = (d * a) % 1000000007; return d; } } int absolute(int a) { if (a >= 0) { return a; } else { return (a * (-1)); } } long long absolute(long long a) { if (a >= 0) { return a; } else { return (a * (-1)); } } int main() { int t; scanf("%d", &t); while (t--) { string a; cin >> a; int n = a.length(); if (a[0] == a[n - 1]) { a[0] = a[n - 1]; cout << a << endl; } else { cout << a << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; void ha() { printf("YES\n"); } void na() { printf("NO\n"); } long long power(long long a, long long b) { long long c, d; if (b == 1) { return a % 1000000007; } else if (b % 2 == 0) { c = power(a, b / 2); return (c * c) % 1000000007; } else { c = power(a, b / 2); d = (c * c) % 1000000007; d = (d * a) % 1000000007; return d; } } int absolute(int a) { if (a >= 0) { return a; } else { return (a * (-1)); } } long long absolute(long long a) { if (a >= 0) { return a; } else { return (a * (-1)); } } int main() { int t; scanf("%d", &t); while (t--) { string a; cin >> a; int n = a.length(); if (a[0] != a[n - 1]) { a[0] = a[n - 1]; cout << a << endl; } else { cout << a << endl; } } return 0; }
93	 #include <bits/stdc++.h> using namespace std; int main() { int T; scanf("%d", &T); while (T--) { long long n, k; scanf("%lld%lld", &n, &k); long long cnt = 1; if (n == 1) { printf("0\n"); continue; } for (int i = 1; i <= 64; i++) { if (cnt > k) { printf("%lld\n", i - 1 + (n - cnt - 1) / k + 1); break; } cnt *= 2; if (cnt >= n) { printf("%lld\n", i); break; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int T; scanf("%d", &T); while (T--) { long long n, k; scanf("%lld%lld", &n, &k); long long cnt = 1; if (n == 1) { printf("0\n"); continue; } for (int i = 1; i <= 64; i++) { if (cnt > k) { printf("%lld\n", i - 1 + (n - cnt - 1) / k + 1); break; } cnt *= 2; if (cnt >= n) { printf("%d\n", i); break; } } } return 0; }
93	 #include <bits/stdc++.h> using namespace std; using ii = pair<long long, long long>; long long mod = 1e9 + 7; void solve() { long long n, k; cin >> n >> k; long long hr; for (long long i = 0; i < 64; i++) { if ((1LL << i) >= k) { hr = i; break; } } long long done = (1 << hr); if (n <= done) { for (long long i = 0; i <= hr; i++) { if ((1LL << i) >= n) { cout << i << "\n"; ; return; } } } else { long long ans = hr; ans += ceil((n - done) / (1.0 * k)); cout << ans << "\n"; ; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long _t; cin >> _t; while (_t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; using ii = pair<long long, long long>; long long mod = 1e9 + 7; void solve() { long long n, k; cin >> n >> k; long long hr; for (long long i = 0; i < 64; i++) { if ((1LL << i) >= k) { hr = i; break; } } long long done = (1LL << hr); if (n <= done) { for (long long i = 0; i <= hr; i++) { if ((1LL << i) >= n) { cout << i << "\n"; ; return; } } } else { long long ans = hr; ans += ceil((n - done) / (1.0 * k)); cout << ans << "\n"; ; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long _t; cin >> _t; while (_t--) solve(); return 0; }
93	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e18; const long long mod = 1e9 + 7; signed main() { std::ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; long long t; cin >> t; while (t--) { long long n, k; cin >> n >> k; if (n == 1) { cout << "0\n"; } else { if (k == 1) { cout << n - 1 << "\n"; } else { long long a = 0; long long cnt = 0; while (pow(2, a) < k) { cnt++; a++; } long long x = pow(2, a); if (n <= x) { long long p = 0; long long q = 0; while (n > 1) { n = n - pow(2, q); q++; p++; } cout << p << "\n"; } else { long long y = n - x; long long z = y % k; if (z == 0) { cout << a + (y / x) << "\n"; } else { cout << a + (y / x) + 1 << "\n"; } } } } } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e18; const long long mod = 1e9 + 7; signed main() { std::ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; long long t; cin >> t; while (t--) { long long n, k; cin >> n >> k; if (n == 1) { cout << "0\n"; } else { if (k == 1) { cout << n - 1 << "\n"; } else { long long a = 0; long long cnt = 0; while (pow(2, a) < k) { cnt++; a++; } long long x = pow(2, a); if (n <= x) { long long p = 0; long long q = 0; while (n > 1) { n = n - pow(2, q); q++; p++; } cout << p << "\n"; } else { long long y = n - x; long long z = y % k; if (z == 0) { cout << a + (y / k) << "\n"; } else { cout << a + (y / k) + 1 << "\n"; } } } } } return 0; }
94	 #include <bits/stdc++.h> using namespace std; signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n, k; cin >> n >> k; vector<long long> v(n); for (long long i = 0; i < n; i++) { long long x; cin >> x; v[i] = pow(10LL, x); } sort(v.begin(), v.end()); vector<long long> diff; for (long long i = 1; i < n; i++) { diff.push_back(v[i] / v[i - 1] - 1); } long long sum = 0, idx = -1, sum1 = 0; for (long long i = 0; i < (long long)diff.size(); i++) { sum += diff[i]; if (sum >= k) { sum1 = sum - diff[i]; idx = i; break; } } if (idx == -1) { long long rem = (k - sum + 1) * (*prev(v.end())); if ((long long)v.size() == 1) { cout << rem << "\n"; } else { cout << rem + (*prev(v.end())) - 1 << "\n"; } } else { long long rem = (k - sum1 + 1) * v[idx]; cout << rem + v[idx] - 1 << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; signed main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n, k; cin >> n >> k; vector<long long> v(n); for (long long i = 0; i < n; i++) { long long x; cin >> x; v[i] = pow(10LL, x); } sort(v.begin(), v.end()); vector<long long> diff; for (long long i = 1; i < n; i++) { diff.push_back(v[i] / v[i - 1] - 1); } long long sum = 0, idx = -1, sum1 = 0; for (long long i = 0; i < (long long)diff.size(); i++) { sum += diff[i]; if (sum > k) { sum1 = sum - diff[i]; idx = i; break; } } if (idx == -1) { long long rem = (k - sum + 1) * (*prev(v.end())); if ((long long)v.size() == 1) { cout << rem << "\n"; } else { cout << rem + (*prev(v.end())) - 1 << "\n"; } } else { long long rem = (k - sum1 + 1) * v[idx]; cout << rem + v[idx] - 1 << "\n"; } } }
94	 #include <bits/stdc++.h> using namespace std; long long int power(long long int a, long long int b) { long long int result; if (b == 0) return 1; if (b % 2 != 0) { result = a; result = (result * (power(a, b - 1))); } else { result = power(a, b / 2); result = (result * result); } return (long long int)result; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; long long int sum = 0; long long int prev = 0; vector<long long int> v(n); for (auto &i : v) cin >> i; bool f = 1; for (int i = 0; i < n - 1; i++) { long long int temp = power(10, v[i + 1] - v[i]) - 1; if (temp < k) { sum += temp * (power(10, v[i])); k -= temp; } else { sum += (k + 1) * (power(10, v[i])); f = 0; break; } } if (f) { sum += (k + 1) * (power(10, v[n - 1])); } cout << sum << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long int power(long long int a, long long int b) { long long int result; if (b == 0) return 1; if (b % 2 != 0) { result = a; result = (result * (power(a, b - 1))); } else { result = power(a, b / 2); result = (result * result); } return (long long int)result; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long int t; cin >> t; while (t--) { long long int n, k; cin >> n >> k; long long int sum = 0; long long int prev = 0; vector<long long int> v(n); for (auto &i : v) cin >> i; bool f = 1; for (int i = 0; i < n - 1; i++) { long long int temp = power(10, v[i + 1] - v[i]) - 1; if (temp <= k) { sum += temp * (power(10, v[i])); k -= temp; } else { sum += (k + 1) * (power(10, v[i])); f = 0; break; } } if (f) { sum += (k + 1) * (power(10, v[n - 1])); } cout << sum << "\n"; } return 0; }
94	 #include <bits/stdc++.h> using namespace std; long long a[15], n, k, t; vector<long long> ans; long long ten[] = {1,       10,       100,       1000,       10000,      100000, 1000000, 10000000, 100000000, 1000000000, 10000000000}; signed main() { cin >> t; while (t--) { cin >> n >> k; k++; for (long long i = 1; i <= n; i++) cin >> a[i]; ans.clear(); for (long long i = 1; i <= n; i++) if (i < n) { long long d = a[i + 1] - a[i]; if (k < ten[d] - 1) { ans.push_back(k); break; } else { ans.push_back(ten[d] - 1); k -= ten[d] - 1; } } else if (i == n) ans.push_back(k); for (long long i = ans.size() - 1; i >= 0; i--) printf("%lld", ans[i]); putchar('\n'); } }	 #include <bits/stdc++.h> using namespace std; long long a[15], n, k, t; vector<long long> ans; long long ten[] = {1,       10,       100,       1000,       10000,      100000, 1000000, 10000000, 100000000, 1000000000, 10000000000}; signed main() { cin >> t; while (t--) { cin >> n >> k; k++; for (long long i = 1; i <= n; i++) cin >> a[i]; ans.clear(); for (long long i = 1; i <= n; i++) if (i < n) { long long d = a[i + 1] - a[i]; if (k <= ten[d] - 1) { ans.push_back(k); break; } else { ans.push_back(ten[d] - 1); k -= ten[d] - 1; } } else if (i == n) ans.push_back(k); for (long long i = ans.size() - 1; i >= 0; i--) printf("%lld", ans[i]); putchar('\n'); } }
94	 #include <bits/stdc++.h> using namespace std; const int N = 15; int a[N]; long long ksm(long long a, long long b, long long c) { int res = 1; while (b) { if (b & 1) res = (res * a) % c; a = (a * a) % c; b >>= 1; } return res % c; } int read() { int n; cin >> n; return n; } void solve() { int n; long long k; cin >> n >> k; for (int i = 1; i <= n; i++) cin >> a[i]; int pos = 0; vector<long long> v; bool f = 0; for (int i = 1; i <= n; i++) { if (i == 1 && a[i] != 0) { cout << 0 << '\n'; return; } v.push_back(min(ksm(10, a[i] - pos, 1e18) - 1, k)); if (k + 1 == ksm(10, a[i] - pos, 1e18)) f = true; k = max(0ll, k - ksm(10, a[i] - pos, 1e18) + 1); if (k == 0) break; pos = a[i]; } if (v.size() == 1) { cout << v[0] + 1 << '\n'; return; } if (k != 0) { v.push_back(k); v.back()++; for (int i = v.size() - 1; i > 0; i--) cout << v[i]; cout << '\n'; return; } if (k == 0) { if (!f) { v.back()++; } else v.push_back(1); } for (int i = v.size() - 1; i > 0; i--) cout << v[i]; cout << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int _; cin >> _; while (_--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 15; int a[N]; long long ksm(long long a, long long b, long long c) { int res = 1; while (b) { if (b & 1) res = (res * a) % c; a = (a * a) % c; b >>= 1; } return res % c; } int read() { int n; cin >> n; return n; } void solve() { int n; long long k; cin >> n >> k; for (int i = 1; i <= n; i++) cin >> a[i]; int pos = 0; vector<long long> v; bool f = 0; for (int i = 1; i <= n; i++) { if (i == 1 && a[i] != 0) { cout << 0 << '\n'; return; } v.push_back(min(ksm(10, a[i] - pos, 1e18) - 1, k)); if (k + 1 == ksm(10, a[i] - pos, 1e18)) f = true; k = max(0ll, k - ksm(10, a[i] - pos, 1e18) + 1); if (k == 0) break; pos = a[i]; } if (v.size() == 1) { cout << v[0] + k + 1 << '\n'; return; } if (k != 0) { v.push_back(k); v.back()++; for (int i = v.size() - 1; i > 0; i--) cout << v[i]; cout << '\n'; return; } if (k == 0) { if (!f) { v.back()++; } else v.push_back(1); } for (int i = v.size() - 1; i > 0; i--) cout << v[i]; cout << '\n'; } signed main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int _; cin >> _; while (_--) { solve(); } return 0; }
94	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int n, k; int a[12]; long long fastpow(long long a, long long b) { long long sum = 1; while (b) { if (b & 1) sum *= a; a *= a; b >>= 1; } return sum; } int main() { int t; cin >> t; while (t--) { cin >> n >> k; long long sum = 0; for (int i = 0; i < n; i++) cin >> a[i]; int flag = 0; for (int i = 0; i < n - 1; i++) { long long temp = fastpow(10, a[i + 1] - a[i]) - 1; if (k - temp < 0) { sum += (k + 1) * fastpow(10, a[i]); flag = 1; } else { sum += temp * fastpow(10, a[i]); k -= temp; } } if (flag == 1) cout << sum << endl; else { sum += (k + 1) * fastpow(10, a[n - 1]); cout << sum << endl; } } }	 #include <bits/stdc++.h> using namespace std; const int N = 1e5 + 10; int n, k; int a[12]; long long fastpow(long long a, long long b) { long long sum = 1; while (b) { if (b & 1) sum *= a; a *= a; b >>= 1; } return sum; } int main() { int t; cin >> t; while (t--) { cin >> n >> k; long long sum = 0; for (int i = 0; i < n; i++) cin >> a[i]; int flag = 0; for (int i = 0; i < n - 1; i++) { long long temp = fastpow(10, a[i + 1] - a[i]) - 1; if (k - temp < 0) { sum += (k + 1) * fastpow(10, a[i]); flag = 1; break; } else { sum += temp * fastpow(10, a[i]); k -= temp; } } if (flag == 1) cout << sum << endl; else { sum += (k + 1) * fastpow(10, a[n - 1]); cout << sum << endl; } } }
94	 #include <bits/stdc++.h> using namespace std; int t, aux; long long int n, k, arr[12]; long long int sig[12], ans; long long int pot(int n) { int aux = 1; for (int i = 1; i <= n; i++) { aux = 10; } return aux; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t-- > 0) { cin >> n >> k; ans = 0; for (int i = 1; i <= n; i++) { cin >> aux; arr[i] = pot(aux); } for (int i = 1; i < n; i++) { sig[i] = arr[i + 1] / arr[i]; sig[i]--; } k++; for (int i = 1; i < n && k > 0; i++) { if (sig[i] < k) { k -= sig[i]; ans += arr[i + 1] - arr[i]; } else { ans += k * arr[i]; k = 0; } } if (k > 0) { ans += arr[n] * k; } cout << ans << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int t, aux; long long int n, k, arr[12]; long long int sig[12], ans; long long int pot(int n) { int aux = 1; for (int i = 1; i <= n; i++) { aux *= 10; } return aux; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t-- > 0) { cin >> n >> k; ans = 0; for (int i = 1; i <= n; i++) { cin >> aux; arr[i] = pot(aux); } for (int i = 1; i < n; i++) { sig[i] = arr[i + 1] / arr[i]; sig[i]--; } k++; for (int i = 1; i < n && k > 0; i++) { if (sig[i] < k) { k -= sig[i]; ans += arr[i + 1] - arr[i]; } else { ans += k * arr[i]; k = 0; } } if (k > 0) { ans += arr[n] * k; } cout << ans << "\n"; } return 0; }
94	 #include <bits/stdc++.h> using namespace std; const int mo = 1e9 + 7; long long int a[100]; long long fastPower(long long base, long long power) { long long result = 1; while (power > 0) { if (power & 1) { result = result * base; } power >>= 1; base = (base * base); } return result; } int main() { int t; cin >> t; while (t--) { unsigned long long int n, k, ans = 0; cin >> n >> k; for (int i = 1; i <= n; i++) { cin >> a[i]; } bool flag = false; for (int i = 1; i <= n; i++) { if (i == 1) { if (a[i] != 0) { ans = 1; flag = true; break; } } else { if (k < fastPower(10ll, a[i] - a[i - 1])) { ans += (k + 1) * fastPower(10ll, a[i - 1]); flag = true; break; } else { for (int j = a[i - 1]; j < a[i]; j++) { ans += fastPower(10ll, j) * 9; } k = k - fastPower(10ll, a[i] - a[i - 1]) + 1; } } } if (flag) { cout << ans << "\n"; ; } else { ans += (k + 1) * fastPower(10ll, a[n]); cout << ans << "\n"; ; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mo = 1e9 + 7; long long int a[100]; long long fastPower(long long base, long long power) { long long result = 1; while (power > 0) { if (power & 1) { result = result * base; } power >>= 1; base = (base * base); } return result; } int main() { int t; cin >> t; while (t--) { unsigned long long int n, k, ans = 0; cin >> n >> k; for (int i = 1; i <= n; i++) { cin >> a[i]; } bool flag = false; for (int i = 1; i <= n; i++) { if (i == 1) { if (a[i] != 0) { ans = 1; flag = true; break; } } else { if (k < fastPower(10ll, a[i] - a[i - 1]) - 1) { ans += (k + 1) * fastPower(10ll, a[i - 1]); flag = true; break; } else { for (int j = a[i - 1]; j < a[i]; j++) { ans += fastPower(10ll, j) * 9; } k = k - fastPower(10ll, a[i] - a[i - 1]) + 1; } } } if (flag) { cout << ans << "\n"; ; } else { ans += (k + 1) * fastPower(10ll, a[n]); cout << ans << "\n"; ; } } return 0; }
94	 #include <bits/stdc++.h> using namespace std; int long long power(int long long n) { string s = "1"; for (int i = 0; i < n; i++) { s += "0"; } return stoll(s); } int main() { int t; cin >> t; while (t--) { int long long n, k; cin >> n >> k; k++; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; if (k <= 9) { cout << k << endl; } int idx = -1; int long long result = 0; for (int i = 1; i < n; i++) { if (k + 1 > power(arr[i]) / power(arr[i - 1])) { k -= (power(arr[i]) / power(arr[i - 1]) - 1); result += ((power(arr[i]) / power(arr[i - 1]) - 1) * power(arr[i - 1])); } else { idx = i; break; } } if (idx == -1) { result += (k * power(arr[n - 1])); } else { result += (k * power(arr[idx - 1])); } cout << result << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int long long power(int long long n) { string s = "1"; for (int i = 0; i < n; i++) { s += "0"; } return stoll(s); } int main() { int t; cin >> t; while (t--) { int long long n, k; cin >> n >> k; k++; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; if (k <= 9) { cout << k << endl; continue; } int idx = -1; int long long result = 0; for (int i = 1; i < n; i++) { if (k + 1 > power(arr[i]) / power(arr[i - 1])) { k -= (power(arr[i]) / power(arr[i - 1]) - 1); result += ((power(arr[i]) / power(arr[i - 1]) - 1) * power(arr[i - 1])); } else { idx = i; break; } } if (idx == -1) { result += (k * power(arr[n - 1])); } else { result += (k * power(arr[idx - 1])); } cout << result << endl; } return 0; }
96	 #include <bits/stdc++.h> using namespace std; const long long N = 555, mod = 998244353; long long k, T, t, n, m, ans, cnt; long long f[N][N], dp[N][N]; bool vis[N]; priority_queue<long long, vector<long long>, greater<long long> > q; long long ksm(long long a, long long b) { long long res = 1; while (b) { if (b % 2) res = res * a % mod; b >>= 1; a = a * a % mod; } return res % mod; } void init() { f[0][0] = 1; for (long long i = 1; i < N; i++) { f[i][0] = 1; for (long long j = 1; j <= i; j++) f[i][j] = (f[i - 1][j] + f[i - 1][j - 1]) % mod; } } signed main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); init(); cin >> n >> m; for (long long i = 2; i <= n; i++) for (long long j = 1; j <= m; j++) { if (i - 1 >= j) dp[i][j] = ksm(j, i); else { for (long long k = 2; k <= i; k++) (dp[i][j] += dp[k][j - i + 1] * ksm(i - 1, i - k) % mod * f[i][k]) %= mod; dp[i][j] = dp[i][j] + ksm(i - 1, i) % mod; } } cout << dp[n][m] << '\n'; return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 555, mod = 998244353; long long k, T, t, n, m, ans, cnt; long long f[N][N], dp[N][N]; bool vis[N]; priority_queue<long long, vector<long long>, greater<long long> > q; long long ksm(long long a, long long b) { long long res = 1; while (b) { if (b % 2) res = res * a % mod; b >>= 1; a = a * a % mod; } return res % mod; } void init() { f[0][0] = 1; for (long long i = 1; i < N; i++) { f[i][0] = 1; for (long long j = 1; j <= i; j++) f[i][j] = (f[i - 1][j] + f[i - 1][j - 1]) % mod; } } signed main() { ios::sync_with_stdio(false); cin.tie(0), cout.tie(0); init(); cin >> n >> m; for (long long i = 2; i <= n; i++) for (long long j = 1; j <= m; j++) { if (i - 1 >= j) dp[i][j] = ksm(j, i); else { for (long long k = 2; k <= i; k++) (dp[i][j] += dp[k][j - i + 1] * ksm(i - 1, i - k) % mod * f[i][k]) %= mod; dp[i][j] = (dp[i][j] + ksm(i - 1, i)) % mod; } } cout << dp[n][m] << '\n'; return 0; }
96	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 9; const long long MOD = 1e9 + 7; const int mod = 998244353; inline long long qpow(long long b, long long e, long long m) { long long a = 1; for (; e; e >>= 1, b = b * b % m) if (e & 1) a = a * b % m; return a; } long long exgcd(long long a, long long b, long long &x, long long &y) { if (b == 0) { x = 1, y = 0; return a; } long long d = exgcd(b, a % b, x, y); long long z = x; x = y, y = z - y * (a / b); return d; } long long dp[509][509], C[509][509]; int n, x; void init() { for (int i = 1; i <= 500; i++) { C[i][0] = 1; for (int j = 1; j <= i; j++) { C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; } } } int main() { scanf("%d%d", &n, &x); init(); for (int i = 2; i <= n; i++) { for (int j = 1; j <= x; j++) { if (j < i) { dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod); dp[i][j] = (dp[i][j] % mod + mod) % mod; } else { for (int k = 2; k <= i; k++) { dp[i][j] += dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod; dp[i][j] %= mod; } } } } long long ans = 0; for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod; printf("%lld\n", ans); }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 9; const long long MOD = 1e9 + 7; const int mod = 998244353; inline long long qpow(long long b, long long e, long long m) { long long a = 1; for (; e; e >>= 1, b = b * b % m) if (e & 1) a = a * b % m; return a; } long long exgcd(long long a, long long b, long long &x, long long &y) { if (b == 0) { x = 1, y = 0; return a; } long long d = exgcd(b, a % b, x, y); long long z = x; x = y, y = z - y * (a / b); return d; } long long dp[509][509], C[509][509]; int n, x; void init() { for (int i = 0; i <= 500; i++) { C[i][0] = 1; for (int j = 1; j <= i; j++) { C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; } } } int main() { scanf("%d%d", &n, &x); init(); for (int i = 2; i <= n; i++) { for (int j = 1; j <= x; j++) { if (j < i) { dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod); dp[i][j] = (dp[i][j] % mod + mod) % mod; } else { for (int k = 2; k <= i; k++) { dp[i][j] += dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod; dp[i][j] %= mod; } } } } long long ans = 0; for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod; printf("%lld\n", ans); }
96	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 9; const long long MOD = 1e9 + 7; const int mod = 998244353; inline long long qpow(long long b, long long e, long long m) { long long a = 1; for (; e; e >>= 1, b = b * b % m) if (e & 1) a = a * b % m; return a; } long long exgcd(long long a, long long b, long long &x, long long &y) { if (b == 0) { x = 1, y = 0; return a; } long long d = exgcd(b, a % b, x, y); long long z = x; x = y, y = z - y * (a / b); return d; } long long dp[509][509], C[509][509]; int n, x; void init() { for (int i = 0; i <= 500; i++) { C[i][0] = 1; for (int j = 1; j <= 500; j++) { C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; } } } int main() { scanf("%d%d", &n, &x); init(); for (int i = 2; i <= n; i++) { for (int j = 1; j <= x; j++) { if (j < i) { dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod); dp[i][j] = (dp[i][j] % mod + mod) % mod; } else { for (int k = 2; k <= i; k++) { dp[i][j] += dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod; dp[i][j] %= mod; } } } } long long ans = 0; for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod; printf("%lld\n", ans); }	 #include <bits/stdc++.h> using namespace std; const int maxn = 1e6 + 9; const long long MOD = 1e9 + 7; const int mod = 998244353; inline long long qpow(long long b, long long e, long long m) { long long a = 1; for (; e; e >>= 1, b = b * b % m) if (e & 1) a = a * b % m; return a; } long long exgcd(long long a, long long b, long long &x, long long &y) { if (b == 0) { x = 1, y = 0; return a; } long long d = exgcd(b, a % b, x, y); long long z = x; x = y, y = z - y * (a / b); return d; } long long dp[509][509], C[509][509]; int n, x; void init() { for (int i = 0; i <= 500; i++) { C[i][0] = 1; for (int j = 1; j <= i; j++) { C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; } } } int main() { scanf("%d%d", &n, &x); init(); for (int i = 2; i <= n; i++) { for (int j = 1; j <= x; j++) { if (j < i) { dp[i][j] = qpow(j, i, mod) - qpow(j - 1, i, mod); dp[i][j] = (dp[i][j] % mod + mod) % mod; } else { for (int k = 2; k <= i; k++) { dp[i][j] += dp[k][j - i + 1] * C[i][k] % mod * qpow(i - 1, i - k, mod) % mod; dp[i][j] %= mod; } } } } long long ans = 0; for (int i = 1; i <= x; i++) ans += dp[n][i], ans %= mod; printf("%lld\n", ans); }
96	 #include <bits/stdc++.h> using namespace std; long long mod = 998244353; int p[505][505], f[505][505], c[505][505]; int main() { for (int i = 0; i <= 500; i++) { p[i][0] = 1; for (int j = 1; j <= 500; j++) p[i][j] = 1ll * p[i][j - 1] * i % mod; } for (int i = 0; i <= 500; i++) { c[i][0] = 1; for (int j = 1; j <= 500; j++) c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod; } int n, x; cin >> n >> x; for (int i = 1; i <= x; i++) f[0][i] = 1; for (int i = 2; i <= n; i++) for (int j = 1; j <= x; j++) if (i > j) f[i][j] = p[j][i]; else for (int k = 0; k <= i; k++) f[i][j] = (f[i][j] + 1ll * c[i][k] * p[i - 1][k] % mod * f[i - k][j - i + 1] % mod) % mod; cout << f[n][x]; return 0; }	 #include <bits/stdc++.h> using namespace std; long long mod = 998244353; int p[505][505], f[505][505], c[505][505]; int main() { for (int i = 0; i <= 500; i++) { p[i][0] = 1; for (int j = 1; j <= 500; j++) p[i][j] = 1ll * p[i][j - 1] * i % mod; } for (int i = 0; i <= 500; i++) { c[i][0] = 1; for (int j = 1; j <= i; j++) c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod; } int n, x; cin >> n >> x; for (int i = 1; i <= x; i++) f[0][i] = 1; for (int i = 2; i <= n; i++) for (int j = 1; j <= x; j++) if (i > j) f[i][j] = p[j][i]; else for (int k = 0; k <= i; k++) f[i][j] = (f[i][j] + 1ll * c[i][k] * p[i - 1][k] % mod * f[i - k][j - i + 1] % mod) % mod; cout << f[n][x]; return 0; }
96	 #include <bits/stdc++.h> using namespace std; using LL = long long; const int mod = 998244353; LL dp[507][507], C[507][507], mi[507][507]; int qpow(int a, int k, int p = mod) { int res = 1 % p; while (k) { if (k & 1) res = (LL)res * a % p; k >>= 1; a = (LL)a * a % p; } return res; } void solve() { for (int i = 1; i <= 500; i++) { C[i][0] = C[i][i] = 1; for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; for (int j = 0; j <= 500; j++) mi[i][j] = qpow(i, j); dp[0][i] = 1; } for (int i = 1; i <= 500; i++) { for (int j = 1; j <= 500; j++) { if (j < i) dp[i][j] = mi[j][i]; else { for (int k = 0; k <= i; k++) { dp[i][j] = (dp[i][j] + C[i][k] * dp[i - k][j - i + 1] * mi[i - 1][k]) % mod; } } } } } signed main() { ios::sync_with_stdio(false); solve(); int tt = 1; while (tt--) { int n, x; cin >> n >> x; cout << dp[n][x] << endl; } }	 #include <bits/stdc++.h> using namespace std; using LL = long long; const int mod = 998244353; LL dp[507][507], C[507][507], mi[507][507]; int qpow(int a, int k, int p = mod) { int res = 1 % p; while (k) { if (k & 1) res = (LL)res * a % p; k >>= 1; a = (LL)a * a % p; } return res; } void solve() { for (int i = 1; i <= 500; i++) { C[i][0] = C[i][i] = 1; for (int j = 1; j < i; j++) C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod; for (int j = 0; j <= 500; j++) mi[i][j] = qpow(i, j); dp[0][i] = 1; } for (int i = 1; i <= 500; i++) { for (int j = 1; j <= 500; j++) { if (j < i) dp[i][j] = mi[j][i]; else { for (int k = 0; k <= i; k++) { dp[i][j] = (dp[i][j] + C[i][k] * dp[i - k][j - i + 1] % mod * mi[i - 1][k]) % mod; } } } } } signed main() { ios::sync_with_stdio(false); solve(); int tt = 1; while (tt--) { int n, x; cin >> n >> x; cout << dp[n][x] << endl; } }
98	 #include <bits/stdc++.h> using namespace std; char a[26]; int num[26]; int main() { int n; scanf("%d", &n); char b[50]; for (int i = 0; i < n; i++) { int time = 0; scanf("%s", &a); scanf("%s", &b); for (int i1 = 0; i1 < 26; i1++) { num[a[i1] - 'a'] = i1; } for (int i2 = 0; i2 < strlen(b) - 1; i2++) { time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']); } printf("������Ϊ%d\n", time); } }	 #include <bits/stdc++.h> using namespace std; char a[26]; int num[26]; int main() { int n; scanf("%d", &n); char b[50]; for (int i = 0; i < n; i++) { int time = 0; scanf("%s", &a); scanf("%s", &b); for (int i1 = 0; i1 < 26; i1++) { num[a[i1] - 'a'] = i1; } for (int i2 = 0; i2 < strlen(b) - 1; i2++) { time += abs(num[b[i2 + 1] - 'a'] - num[b[i2] - 'a']); } printf("%d\n", time); } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; map<char, int> mp; while (t--) { string x; cin >> x; for (int i = 1; i < 26; i++) { mp[x[i - 1]] = i; } string s; cin >> s; int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(mp[s[i]] - mp[s[i - 1]]); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; map<char, int> mp; while (t--) { string x; cin >> x; for (int i = 1; i <= 26; i++) { mp[x[i - 1]] = i; } string s; cin >> s; int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(mp[s[i]] - mp[s[i - 1]]); } cout << ans << endl; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string order; cin >> order; string s; cin >> s; map<char, int> m; int c = 1; for (auto i : order) { m[i] = c; c++; } int ans = 0; for (int i = 1; i < s.length(); i++) { ans += (m[s[i]] - m[s[i - 1]]); } std::cout << ans << std::endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string order; cin >> order; string s; cin >> s; map<char, int> m; int c = 1; for (auto i : order) { m[i] = c; c++; } int ans = 0; for (int i = 1; i < s.length(); i++) { ans += abs(m[s[i]] - m[s[i - 1]]); } std::cout << ans << std::endl; } return 0; }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str1, str2; cin >> str1 >> str2; int ans = 0, pos1 = 0, pos2 = 0; for (int i = 0; i < str2.length() - 1; i++) { for (int j = 1; j <= str1.length(); j++) { if (str2[i] == str1[j]) { pos1 = j; } if (str2[i + 1] == str1[j]) { pos2 = j; } } ans += abs(pos2 - pos1); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string str1, str2; cin >> str1 >> str2; int ans = 0, pos1 = 0, pos2 = 0; for (int i = 0; i < str2.length() - 1; i++) { for (int j = 0; j <= str1.length(); j++) { if (str2[i] == str1[j]) { pos1 = j; } if (str2[i + 1] == str1[j]) { pos2 = j; } } ans += abs(pos2 - pos1); } cout << ans << endl; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int q, res; string keyboard, st; cin >> q; while (q--) { cin >> keyboard; cin >> st; int v[100]; res = 0; for (int i = 0; i < st.length(); i++) { for (int j = 0; j < 26; j++) { if (keyboard[j] == st[i]) { v[i] = j; if (i > 0) res = abs(j - v[i - 1]); } } } if (st.length() == 1) cout << "0" << "\n"; else cout << res << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int main() { int q, res; string keyboard, st; cin >> q; while (q--) { cin >> keyboard; cin >> st; int v[100]; res = 0; for (int i = 0; i < st.length(); i++) { for (int j = 0; j < 26; j++) { if (keyboard[j] == st[i]) { v[i] = j; if (i > 0) res += abs(j - v[i - 1]); } } } if (st.length() == 1) cout << "0" << "\n"; else cout << res << "\n"; } }
98	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { string alf; cin >> alf; string word; cin >> word; if (word.size() == 1) { cout << 1 << endl; continue; } int result = 0; int temp = 0; for (int j = 1; j < word.size(); j++) { temp = alf.find(word[j]) - alf.find(word[j - 1]); result += abs(temp); temp = 0; } cout << result << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int i = 0; i < t; i++) { string alf; cin >> alf; string word; cin >> word; if (word.size() == 1) { cout << 0 << endl; continue; } int result = 0; int temp = 0; for (int j = 1; j < word.size(); j++) { temp = alf.find(word[j]) - alf.find(word[j - 1]); result += abs(temp); temp = 0; } cout << result << endl; } }
99	 #include <bits/stdc++.h> using namespace std; int main() { long long x0, n, t; cin >> t; while (t--) { cin >> x0 >> n; if (x0 % 2 == 0) { if (n % 4 == 1) { x0 = x0 - 1 - n / 4 * (4); cout << x0 << endl; } else if (n % 4 == 2) cout << x0 + 1 << endl; else if (n % 4 == 3) cout << (x0 + 4 + n / 4 * 4) << endl; else if (n % 4 == 0) cout << x0 << endl; } else if (x0 % 2 != 0) { if (n % 4 == 1) cout << x0 + 1 + n / 4 * 4 << endl; else if (n % 4 == 2) cout << x0 - 1 << endl; else if (n % 4 == 3) cout << (x0 - 3 + n / 4 * (-4)) << endl; else if (n % 4 == 0) cout << x0 << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long x0, n, t; cin >> t; while (t--) { cin >> x0 >> n; if (x0 % 2 == 0) { if (n % 4 == 1) { x0 = x0 - 1 - n / 4 * (4); cout << x0 << endl; } else if (n % 4 == 2) cout << x0 + 1 << endl; else if (n % 4 == 3) cout << (x0 + 4 + n / 4 * 4) << endl; else if (n % 4 == 0) cout << x0 << endl; } else if (x0 % 2 != 0) { if (n % 4 == 1) cout << x0 + 1 + n / 4 * 4 << endl; else if (n % 4 == 2) cout << x0 - 1 << endl; else if (n % 4 == 3) cout << (x0 - 4 + n / 4 * (-4)) << endl; else if (n % 4 == 0) cout << x0 << endl; } } return 0; }
99	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long x, j; cin >> x >> j; long long mod = j % 4; long long mult = j / 4; j -= (mult)*4; if (j == 0) cout << x << endl; else { for (long long i = (mult * 4) + 1; i <= (mult * 4) + mod; i++) { if (x % 2 == 0) x -= i; else x += i; } } cout << x << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long x, j; cin >> x >> j; long long mod = j % 4; long long mult = j / 4; j -= (mult)*4; if (j == 0) cout << x << endl; else { for (long long i = (mult * 4) + 1; i <= (mult * 4) + mod; i++) { if (x % 2 == 0) x -= i; else x += i; } cout << x << endl; } } return 0; }
99	 #include <bits/stdc++.h> using namespace std; long long m = 998244353; long long ce(long long n, long long k) { if (n % k == 0) return (n / k); return (n / k + 1); } long long powl(long long a, long long b) { long long ans = 1; while (b != 0) { if (b & 1) ans = (ans * a) % m; a = (a * a) % m; b = b / 2; } return ans; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { long long x, n, ans, m; cin >> x >> n; if (x % 2 == 0) { if (n % 4 == 1) { m = -n; } else if (n % 4 == 2) { m = 1; } else if (n % 4 == 3) { m = ce(n, 4) * 4; } else { m = 0; } ans = x + m; } else { if (n % 4 == 1) { m = (n - 1) * 4 + 1; } else if (n % 4 == 2) { m = -1; } else if (n % 4 == 3) { m = -(ce(n, 4) * 4); } else { m = 0; } ans = x + m; } cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long m = 998244353; long long ce(long long n, long long k) { if (n % k == 0) return (n / k); return (n / k + 1); } long long powl(long long a, long long b) { long long ans = 1; while (b != 0) { if (b & 1) ans = (ans * a) % m; a = (a * a) % m; b = b / 2; } return ans; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { long long x, n, ans, m; cin >> x >> n; if (x % 2 == 0) { if (n % 4 == 1) { m = -n; } else if (n % 4 == 2) { m = 1; } else if (n % 4 == 3) { m = ce(n, 4) * 4; } else { m = 0; } ans = x + m; } else { if (n % 4 == 1) { m = (n / 4) * 4 + 1; } else if (n % 4 == 2) { m = -1; } else if (n % 4 == 3) { m = -(ce(n, 4) * 4); } else { m = 0; } ans = x + m; } cout << ans << "\n"; } }
99	 #include <bits/stdc++.h> using namespace std; template <typename T, typename M> istream& operator>>(istream& in, pair<T, M>& pr) { in >> pr.first >> pr.second; return in; } template <typename T, typename M> ostream& operator<<(ostream& out, const pair<T, M>& pr) { out << pr.first << ' ' << pr.second; return out; } template <typename T, typename M> pair<T, M> operator+(const pair<T, M>& p1, const pair<T, M>& p2) { return make_pair(p1.first + p2.first, p1.second + p2.second); } bool prostoechislo(unsigned long long k) { for (unsigned long long j = 2; j * j <= k; j++) if (k % j == 0) return 0; return 1; } int stepen(long long a, long long b) { if (b == 0) return 1; if (b % 2 == 0) return stepen(a, b / 2) * stepen(a, b / 2); else return a * stepen(a, b - 1); } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long x, n; cin >> x >> n; long long n1 = n; long long n2 = n; if (n % 4 == 0) { cout << x << "\n"; continue; } if (n % 4 == 1) { if (x % 2 == 0) cout << x - n << "\n"; else cout << x + n << "\n"; continue; } if (n % 4 == 2) { if (x % 2 == 0) cout << x + 1 << "\n"; else cout << x - 1; } if (n % 4 == 3) { if (x % 2 == 0) cout << x + n + 1 << "\n"; else cout << x - n - 1 << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; template <typename T, typename M> istream& operator>>(istream& in, pair<T, M>& pr) { in >> pr.first >> pr.second; return in; } template <typename T, typename M> ostream& operator<<(ostream& out, const pair<T, M>& pr) { out << pr.first << ' ' << pr.second; return out; } template <typename T, typename M> pair<T, M> operator+(const pair<T, M>& p1, const pair<T, M>& p2) { return make_pair(p1.first + p2.first, p1.second + p2.second); } bool prostoechislo(unsigned long long k) { for (unsigned long long j = 2; j * j <= k; j++) if (k % j == 0) return 0; return 1; } int stepen(long long a, long long b) { if (b == 0) return 1; if (b % 2 == 0) return stepen(a, b / 2) * stepen(a, b / 2); else return a * stepen(a, b - 1); } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long x, n; cin >> x >> n; long long n1 = n; long long n2 = n; if (n % 4 == 0) { cout << x << "\n"; continue; } if (n % 4 == 1) { if (x % 2 == 0) cout << x - n << "\n"; else cout << x + n << "\n"; continue; } if (n % 4 == 2) { if (x % 2 == 0) cout << x + 1 << "\n"; else cout << x - 1 << "\n"; } if (n % 4 == 3) { if (x % 2 == 0) cout << x + n + 1 << "\n"; else cout << x - n - 1 << "\n"; } } }
99	 #include <bits/stdc++.h> using namespace std; void solve() { long long int x, n, ans; cin >> x >> n; if (x % 2 == 0) { if (n % 4 == 0) { ans = x; } if (n % 4 == 1) { ans = x - 1 - (n / 4) * 4; } if (n % 4 == 2) { ans = x + 1; } if (n % 4 == 3) { ans = x + (ceil(n / 4.00)) * 4; } } else { if (n % 4 == 0) { ans = x; } if (n % 4 == 1) { ans = x + 1 + (n / 4) * 4; } if (n % 4 == 2) { ans = x - 1; } if (n % 4 == 3) { ans = x - (ceil(n / 4)) * 4; } } cout << ans; } int main() { int t = 1; cin >> t; while (t--) { solve(); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int x, n, ans; cin >> x >> n; if (x % 2 == 0) { if (n % 4 == 0) { ans = x; } if (n % 4 == 1) { ans = x - 1 - (n / 4) * 4; } if (n % 4 == 2) { ans = x + 1; } if (n % 4 == 3) { ans = x + (ceil(n / 4.00)) * 4; } } else { if (n % 4 == 0) { ans = x; } if (n % 4 == 1) { ans = x + 1 + (n / 4) * 4; } if (n % 4 == 2) { ans = x - 1; } if (n % 4 == 3) { ans = x - (ceil(n / 4.00)) * 4; } } cout << ans; } int main() { int t = 1; cin >> t; while (t--) { solve(); cout << endl; } return 0; }
99	 #include <bits/stdc++.h> using namespace std; int T; int main() { cin >> T; while (T--) { long long x, y; cin >> x >> y; long long ans = y % 4; long long cnt = 0; if (x % 2 == 0) { if (ans == 0) { cnt = x; } if (ans == 1) { cnt = x - y; } if (ans == 2) { cnt = x + y; } if (ans == 3) { cnt = x + 1 + y; } } else { if (ans == 0) { cnt = x; } if (ans == 1) { cnt = x + y; } if (ans == 2) { cnt = x - y; } if (ans == 3) { cnt = x - y - 1; } } cout << cnt << endl; } }	 #include <bits/stdc++.h> using namespace std; int T; int main() { cin >> T; while (T--) { long long x, y; cin >> x >> y; long long ans = y % 4; long long cnt = 0; if (x % 2 == 0) { if (ans == 0) { cnt = x; } if (ans == 1) { cnt = x - y; } if (ans == 2) { cnt = x + 1; } if (ans == 3) { cnt = x + 1 + y; } } else { if (ans == 0) { cnt = x; } if (ans == 1) { cnt = x + y; } if (ans == 2) { cnt = x - 1; } if (ans == 3) { cnt = x - y - 1; } } cout << cnt << endl; } }
99	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long gcd(long long a, long long b) { if (b == 0) return a; return gcd(b, a % b); } long long pwr(long long a, long long b) { a %= mod; long long res = 1; while (b > 0) { if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1; } return res; } void solve() { long long x, n; cin >> x >> n; if (n == 0) { cout << x << '\n'; return; } if (x % 2 == 0) { if (n % 4 == 0) { cout << 0 << '\n'; return; } if (n % 4 == 1) { cout << x - n << '\n'; return; } if (n % 4 == 2) { cout << x + 1 << '\n'; return; } if (n % 4 == 3) { cout << x + n + 1 << '\n'; return; } } if (n % 4 == 0) { cout << 0 << '\n'; return; } if (n % 4 == 1) { cout << x + n << '\n'; return; } if (n % 4 == 2) { cout << x - 1 << '\n'; return; } if (n % 4 == 3) { cout << x - n - 1 << '\n'; return; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long gcd(long long a, long long b) { if (b == 0) return a; return gcd(b, a % b); } long long pwr(long long a, long long b) { a %= mod; long long res = 1; while (b > 0) { if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1; } return res; } void solve() { long long x, n; cin >> x >> n; if (n == 0) { cout << x << '\n'; return; } if (x % 2 == 0) { if (n % 4 == 0) { cout << x << '\n'; return; } if (n % 4 == 1) { cout << x - n << '\n'; return; } if (n % 4 == 2) { cout << x + 1 << '\n'; return; } if (n % 4 == 3) { cout << x + n + 1 << '\n'; return; } } if (n % 4 == 0) { cout << x << '\n'; return; } if (n % 4 == 1) { cout << x + n << '\n'; return; } if (n % 4 == 2) { cout << x - 1 << '\n'; return; } if (n % 4 == 3) { cout << x - n - 1 << '\n'; return; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long t; cin >> t; while (t--) { solve(); } return 0; }
99	 #include <bits/stdc++.h> using namespace std; const long long N = 5e5 + 10; void fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } int32_t main() { fast(); long long t, z; cin >> t; for (long long z = 1; z < t + 1; z++) { long long x, n; long long ex; cin >> x >> n; if (abs(x) % 2) ex = x - 1; else ex = x; long long ans; if (abs(x) % 2) { if (n % 4 == 0) ans = 1; else if (n % 4 == 1) ans = n + 1; else if (n % 4 == 2) ans = 6; else ans = -n; } else { if (n % 4 == 0) ans = 0; else if (n % 4 == 1) ans = -n; else if (n % 4 == 2) ans = 1; else ans = n + 1; } ans += ex; cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; const long long N = 5e5 + 10; void fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); } int32_t main() { fast(); long long t, z; cin >> t; for (long long z = 1; z < t + 1; z++) { long long x, n; long long ex; cin >> x >> n; if (abs(x) % 2) ex = x - 1; else ex = x; long long ans; if (abs(x) % 2) { if (n % 4 == 0) ans = 1; else if (n % 4 == 1) ans = n + 1; else if (n % 4 == 2) ans = 0; else ans = -n; } else { if (n % 4 == 0) ans = 0; else if (n % 4 == 1) ans = -n; else if (n % 4 == 2) ans = 1; else ans = n + 1; } ans += ex; cout << ans << "\n"; } }
99	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { long long x, n, a, ans; scanf("%lld%lld", &x, &n); if (x % 2 == 0) { a = n % 4; ans = (a == 1 ? x - n : a == 2 ? x + 1 : a == 3 ? x + 1 + n : a); } else { a = n % 4; ans = (a == 1 ? x + n : a == 2 ? x - 1 : a == 3 ? x - 1 - n : x); } printf("%lld\n", ans); } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { long long x, n, a, ans; scanf("%lld%lld", &x, &n); if (x % 2 == 0) { a = n % 4; ans = (a == 1 ? x - n : a == 2 ? x + 1 : a == 3 ? x + 1 + n : x); } else { a = n % 4; ans = (a == 1 ? x + n : a == 2 ? x - 1 : a == 3 ? x - 1 - n : x); } printf("%lld\n", ans); } }
99	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long x, n; cin >> x >> n; if (n == 0) { cout << x << endl; } long long xxx = n - 1; long long t2 = xxx % 4; long long temp = (xxx / 4); long long n1, n2, n3, n4; if (t2 == 0) { n1 = n2 = n3 = n4 = temp; } else if (t2 == 1) { n1 = temp + 1; n2 = n3 = n4 = temp; } else if (t2 == 2) { n1 = n2 = (temp + 1); n3 = n4 = temp; } else if (t2 == 3) { n1 = n2 = n3 = (temp + 1); n4 = temp; } long long s1 = (n1 * (4 * n1)) / 2; long long s2 = (n2 * (2 + 4 * n2)) / 2; long long s3 = (n3 * (4 + 4 * n3)) / 2; long long s4 = (n4 * (6 + 4 * n4)) / 2; if (x % 2 == 0) { x += s1 + s2; x -= (1 + s3 + s4); } else { x += (1 + s3 + s4); x -= (s1 + s2); } cout << x << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long x, n; cin >> x >> n; if (n == 0) { cout << x << endl; continue; } long long xxx = n - 1; long long t2 = xxx % 4; long long temp = (xxx / 4); long long n1, n2, n3, n4; if (t2 == 0) { n1 = n2 = n3 = n4 = temp; } else if (t2 == 1) { n1 = temp + 1; n2 = n3 = n4 = temp; } else if (t2 == 2) { n1 = n2 = (temp + 1); n3 = n4 = temp; } else if (t2 == 3) { n1 = n2 = n3 = (temp + 1); n4 = temp; } long long s1 = (n1 * (4 * n1)) / 2; long long s2 = (n2 * (2 + 4 * n2)) / 2; long long s3 = (n3 * (4 + 4 * n3)) / 2; long long s4 = (n4 * (6 + 4 * n4)) / 2; if (x % 2 == 0) { x += s1 + s2; x -= (1 + s3 + s4); } else { x += (1 + s3 + s4); x -= (s1 + s2); } cout << x << endl; } }
99	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, x, y; cin >> t; while (t--) { cin >> x >> y; if (x % 2 == 0) { if (y % 4 == 0) { cout << y << endl; } else if (y % 4 == 1) { cout << x - y << endl; } else if (y % 4 == 2) { cout << x + 1 << endl; } else if (y % 4 == 3) { cout << (x + 1) + y << endl; } } else { if (y % 4 == 0) { cout << x << endl; } else if (y % 4 == 1) { cout << x + y << endl; } else if (y % 4 == 2) { cout << x - 1 << endl; } else if (y % 4 == 3) { cout << (x - 1) - y << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long int t, x, y; cin >> t; while (t--) { cin >> x >> y; if (x % 2 == 0) { if (y % 4 == 0) { cout << x << endl; } else if (y % 4 == 1) { cout << x - y << endl; } else if (y % 4 == 2) { cout << x + 1 << endl; } else if (y % 4 == 3) { cout << (x + 1) + y << endl; } } else { if (y % 4 == 0) { cout << x << endl; } else if (y % 4 == 1) { cout << x + y << endl; } else if (y % 4 == 2) { cout << x - 1 << endl; } else if (y % 4 == 3) { cout << (x - 1) - y << endl; } } } return 0; }
99	 #include <bits/stdc++.h> using namespace std; using LL = long long; int main() { int T; for (cin >> T; T; T -= 1) { LL x, n; cin >> x >> n; LL n2 = n / 4 * 4; while (n2 < n) { if (x % 2 == 0) { x -= n2 + 1; } else x += n2 + 1; n2++; } cout << n2 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; using LL = long long; int main() { int T; for (cin >> T; T; T -= 1) { LL x, n; cin >> x >> n; LL n2 = n / 4 * 4; while (n2 < n) { if (x % 2 == 0) { x -= n2 + 1; } else x += n2 + 1; n2++; } cout << x << endl; } return 0; }
99	 #include <bits/stdc++.h> const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1}; using namespace std; void solve() { int t; cin >> t; while (t--) { long long x, n, ans = 0, final; cin >> x >> n; final = n % 4; if (final == 0) { cout << 0 << endl; } else if (x % 2 == 0) { if (final == 1) { ans = x - (n); } else if (final == 2) { ans = x + 1; } else if (final == 3) { ans = x + 1 + n; } cout << ans << endl; } else { if (final == 1) { ans = x + (n); } else if (final == 2) { ans = x - 1; } else if (final == 3) { ans = x - 1 - n; } cout << ans << endl; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); solve(); }	 #include <bits/stdc++.h> const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1}; using namespace std; void solve() { int t; cin >> t; while (t--) { long long x, n, ans = 0, final; cin >> x >> n; final = n % 4; if (final == 0) { cout << x << endl; } else if (x % 2 == 0) { if (final == 1) { ans = x - (n); } else if (final == 2) { ans = x + 1; } else if (final == 3) { ans = x + 1 + n; } cout << ans << endl; } else { if (final == 1) { ans = x + (n); } else if (final == 2) { ans = x - 1; } else if (final == 3) { ans = x - 1 - n; } cout << ans << endl; } } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); solve(); }
99	 #include <bits/stdc++.h> using namespace std; int q; long long x, n, tmp; int main() { cin >> q; while (q--) { cin >> x >> n; tmp = n % 4; n -= tmp; if (tmp == 0) { cout << x << "\n"; continue; } if (x % 2 == 0) { x += n + 1; for (int i = 2; i <= tmp; i++) x -= n + i; } else { x -= n + 1; for (int i = 2; i <= tmp; i++) x += n + i; } cout << x << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int q; long long x, n, tmp; int main() { cin >> q; while (q--) { cin >> x >> n; tmp = n % 4; n -= tmp; if (tmp == 0) { cout << x << "\n"; continue; } if (x % 2 != 0) { x += n + 1; for (int i = 2; i <= tmp; i++) x -= n + i; } else { x -= n + 1; for (int i = 2; i <= tmp; i++) x += n + i; } cout << x << "\n"; } return 0; }
100	 #include <bits/stdc++.h> using namespace std; int32_t main() { long long t; cin >> t; while (t--) { long long n, k, sum = 0, c = 0, mn = INT_MIN, m; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); if (n == 2) { cout << max(a[0], a[1] - a[0]) << endl; } else { for (long long i = 1; i < n - 1; i++) { m = a[i + 1] - a[i]; mn = max(m, mn); } mn = max(mn, a[0]); cout << mn << endl; } } }	 #include <bits/stdc++.h> using namespace std; int32_t main() { long long t; cin >> t; while (t--) { long long n, k, sum = 0, c = 0, mn = INT_MIN, m; cin >> n; long long a[n]; for (long long i = 0; i < n; i++) cin >> a[i]; sort(a, a + n); if (n == 2) { cout << max(a[0], a[1] - a[0]) << endl; } else { for (long long i = 0; i < n - 1; i++) { m = a[i + 1] - a[i]; mn = max(m, mn); } mn = max(mn, a[0]); cout << mn << endl; } } }
100	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (auto &i : a) cin >> i; sort((a).begin(), (a).end()); long long vic = 0; long long mn = a[0]; for (long long j = 0; j < n - 1; ++j) { vic -= (a[j] - vic); mn = max(mn, a[j + 1] - vic); } cout << mn << '\n'; } signed main() { ios_base::sync_with_stdio(0); long long n; cin >> n; for (long long i = 0; i < n; ++i) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (auto &i : a) cin >> i; sort((a).begin(), (a).end()); long long vic = 0; long long mn = a[0]; for (long long j = 0; j < n - 1; ++j) { vic += (a[j] - vic); mn = max(mn, a[j + 1] - vic); } cout << mn << '\n'; } signed main() { ios_base::sync_with_stdio(0); long long n; cin >> n; for (long long i = 0; i < n; ++i) { solve(); } }
100	 #include <bits/stdc++.h> using namespace std; int main() { size_t t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> a(n); for (size_t i = 0; i < n; ++i) { cin >> a[i]; } if (a.size() == 1) { cout << a[0] << endl; } sort(a.begin(), a.end()); long long s = 0; long long res = 0; size_t i; for (i = 0; i < n - 1; ++i) { if (a[i] + s <= 0) { s -= a[i] + s; continue; } break; } vector<long long> diffs(n - i + 1); diffs[0] = a[i] + s; for (size_t j = i; j < n - 1; ++j) { diffs[j - i + 1] = a[j + 1] - a[j]; } cout << *max_element(diffs.begin(), diffs.end()) << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { size_t t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> a(n); for (size_t i = 0; i < n; ++i) { cin >> a[i]; } if (a.size() == 1) { cout << a[0] << endl; continue; } sort(a.begin(), a.end()); long long s = 0; long long res = 0; size_t i; for (i = 0; i < n - 1; ++i) { if (a[i] + s <= 0) { s -= a[i] + s; continue; } break; } vector<long long> diffs(n - i + 1); diffs[0] = a[i] + s; for (size_t j = i; j < n - 1; ++j) { diffs[j - i + 1] = a[j + 1] - a[j]; } cout << *max_element(diffs.begin(), diffs.end()) << endl; } return 0; }
101	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long n, mx = 1e12; cin >> n; long long a[n + 2]; string s; set<pair<long long, long long>> red, blue; for (long long i = 1; i <= n; i++) { cin >> a[i]; } char ch; for (long long i = 1; i <= n; i++) { cin >> ch; if (ch == 'R') { red.insert({-a[i], i}); } else { blue.insert({a[i], i}); } } red.insert({mx, mx}); red.insert({-mx, mx}); blue.insert({-mx, mx}); blue.insert({mx, mx}); bool flag = true; for (long long i = 1; i <= n; i++) { auto p1 = blue.upper_bound({i, -mx}); long long valu = p1->first; if (valu == i) { blue.erase(blue.find({p1->first, p1->second})); continue; } if (valu != mx) { blue.erase(blue.find({p1->first, p1->second})); continue; auto p = red.lower_bound({-i, -mx}); long long val = abs(p->first); if (val == i) { red.erase(red.find({p->first, p->second})); continue; } if (val != mx) { red.erase(red.find({p->first, p->second})); continue; } flag = false; break; } if (flag) cout << "YES" << '\n'; else cout << "NO" << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { long long n, mx = 1e12; cin >> n; long long a[n + 2]; string s; set<pair<long long, long long>> red, blue; for (long long i = 1; i <= n; i++) { cin >> a[i]; } char ch; for (long long i = 1; i <= n; i++) { cin >> ch; if (ch == 'R') { red.insert({-a[i], i}); } else { blue.insert({a[i], i}); } } red.insert({mx, mx}); red.insert({-mx, mx}); blue.insert({-mx, mx}); blue.insert({mx, mx}); bool flag = true; for (long long i = 1; i <= n; i++) { auto p1 = blue.upper_bound({i, -mx}); long long valu = p1->first; if (valu == i) { blue.erase(blue.find({p1->first, p1->second})); continue; } if (valu != mx) { blue.erase(blue.find({p1->first, p1->second})); continue; } auto p = red.lower_bound({-i, -mx}); long long val = abs(p->first); if (val == i) { red.erase(red.find({p->first, p->second})); continue; } if (val != mx) { red.erase(red.find({p->first, p->second})); continue; } flag = false; break; } if (flag) cout << "YES" << '\n'; else cout << "NO" << '\n'; } }
102	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 7; char s[N]; void solve() { int n, m; cin >> n >> m; scanf("%s", s + 1); int x = 1, y = 1; int dx = 0, dy = 0; int len = strlen(s + 1); int maxx = n, maxny = m; for (register int i = 1; i <= len; ++i) { if (s[i] == 'L') dy--; else if (s[i] == 'R') dy++; else if (s[i] == 'D') dx++; else dx--; if (1 - dx > maxx || n - dx < x || 1 - dy > maxny || m - dy < y) break; x = max(1 - dx, x); y = max(1 - dy, y); maxx = min(maxx, n - dx); maxny = min(maxny, n - dy); } cout << x << ' ' << y << '\n'; } signed main() { int T; cin >> T; while (T--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 7; char s[N]; void solve() { int n, m; cin >> n >> m; scanf("%s", s + 1); int x = 1, y = 1; int dx = 0, dy = 0; int len = strlen(s + 1); int maxx = n, maxny = m; for (register int i = 1; i <= len; ++i) { if (s[i] == 'L') dy--; else if (s[i] == 'R') dy++; else if (s[i] == 'D') dx++; else dx--; if (1 - dx > maxx || n - dx < x || 1 - dy > maxny || m - dy < y) break; x = max(1 - dx, x); y = max(1 - dy, y); maxx = min(maxx, n - dx); maxny = min(maxny, m - dy); } cout << x << ' ' << y << '\n'; } signed main() { int T; cin >> T; while (T--) solve(); return 0; }
102	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 4; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { int n, m; cin >> n >> m; string s; cin >> s; int len = s.size(); int up = 0, down = 0, left = 0, right = 0; int xcor = 0, ycor = 0; int flag = 0; int maxx = 0, minx = 0, miny = 0, maxy = 0; for (int i = 0; i < len; i++) { if (s[i] == 'L') xcor--; else if (s[i] == 'R') xcor++; else if (s[i] == 'U') ycor++; else ycor--; maxx = max(maxx, xcor); minx = min(minx, xcor); maxy = max(maxy, ycor); miny = min(miny, ycor); if (abs(maxx - minx) + 1 > m || abs(maxy - miny) + 1 > n) { int x, y; if (s[i] == 'L') y = m - maxx, x = n + miny; else if (s[i] == 'R') y = m - maxx - 1, x = n + miny; else if (s[i] == 'U') x = n + miny, y = m - maxx; else if (s[i] == 'D') x = n + miny + 1, y = m - maxx; cout << x << " " << y << endl; flag = 1; break; } } if (flag == 0) { cout << n + miny << " " << m - maxx << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int mod = 1e9 + 7; const int N = 1e6 + 4; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test = 1; cin >> test; while (test--) { int n, m; cin >> n >> m; string s; cin >> s; int len = s.size(); int up = 0, down = 0, left = 0, right = 0; int xcor = 0, ycor = 0; int flag = 0; int maxx = 0, minx = 0, miny = 0, maxy = 0; for (int i = 0; i < len; i++) { if (s[i] == 'L') xcor--; else if (s[i] == 'R') xcor++; else if (s[i] == 'U') ycor++; else ycor--; maxx = max(maxx, xcor); minx = min(minx, xcor); maxy = max(maxy, ycor); miny = min(miny, ycor); if (abs(maxx - minx) + 1 > m || abs(maxy - miny) + 1 > n) { int x, y; if (s[i] == 'L') y = m - maxx, x = n + miny; else if (s[i] == 'R') y = m - maxx + 1, x = n + miny; else if (s[i] == 'U') x = n + miny, y = m - maxx; else if (s[i] == 'D') x = n + miny + 1, y = m - maxx; cout << x << " " << y << endl; flag = 1; break; } } if (flag == 0) { cout << n + miny << " " << m - maxx << endl; } } return 0; }
105	 #include <bits/stdc++.h> using namespace std; struct Yo { int a, b, m, idx; bool operator<(const Yo &other) const { return (a + b - m < other.a + other.b - other.m) || (a + b - m == other.a + other.b - other.m && a < other.a); } }; int n; vector<pair<int, int> > ans; vector<Yo> v; void solve() { cin >> n; ans.clear(); ans.resize(n + 1); v.clear(); for (int i = 0; i < n; i++) { Yo tmp; cin >> tmp.a >> tmp.b >> tmp.m; tmp.idx = i; v.push_back(tmp); } sort(v.begin(), v.end()); int dist = 0, mn = -1, w = 0; for (auto i : v) { if (i.a + i.b - i.m != w) { dist++; w = i.a + i.b - i.m; if (i.m > i.b) { mn = i.a - (i.m - i.b); ans[i.idx] = {i.m - i.b, i.b}; } else { mn = i.a; ans[i.idx] = {0, i.m}; } continue; } if (i.a - i.m > mn) { dist++; if (i.m > i.b) { mn = i.a - (i.m - i.b); ans[i.idx] = {i.m - i.b, i.b}; } else { mn = i.a; ans[i.idx] = {0, i.m}; } } else { ans[i.idx] = {i.a - mn, i.m - (i.a - mn)}; } } cout << dist << "\n"; for (int i = 0; i < n; i++) cout << ans[i].first << " " << ans[i].second << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; struct Yo { int a, b, m, idx; bool operator<(const Yo &other) const { return (a + b - m < other.a + other.b - other.m) || (a + b - m == other.a + other.b - other.m && a < other.a); } }; int n; vector<pair<int, int> > ans; vector<Yo> v; void solve() { cin >> n; ans.clear(); ans.resize(n + 1); v.clear(); for (int i = 0; i < n; i++) { Yo tmp; cin >> tmp.a >> tmp.b >> tmp.m; tmp.idx = i; v.push_back(tmp); } sort(v.begin(), v.end()); int dist = 0, mn = -1, w = -1; for (auto i : v) { if (i.a + i.b - i.m != w) { dist++; w = i.a + i.b - i.m; if (i.m > i.b) { mn = i.a - (i.m - i.b); ans[i.idx] = {i.m - i.b, i.b}; } else { mn = i.a; ans[i.idx] = {0, i.m}; } continue; } if (i.a - i.m > mn) { dist++; if (i.m > i.b) { mn = i.a - (i.m - i.b); ans[i.idx] = {i.m - i.b, i.b}; } else { mn = i.a; ans[i.idx] = {0, i.m}; } } else { ans[i.idx] = {i.a - mn, i.m - (i.a - mn)}; } } cout << dist << "\n"; for (int i = 0; i < n; i++) cout << ans[i].first << " " << ans[i].second << "\n"; } int main() { int t; cin >> t; while (t--) solve(); return 0; }
105	 #include <bits/stdc++.h> using namespace std; const int inf = 1000000000; long long mod = 1000000007LL; long long mod2 = 998244353LL; int t, n, h; int k; int q; int a[200005], b[200005]; int m[200005]; map<int, vector<pair<int, int>>> gp; vector<int> ans; int main() { cin >> t; for (int cas = 1; cas <= t; ++cas) { scanf("%d", &n); gp.clear(); ans.clear(); for (int i = 1; i <= n; ++i) { ans.push_back(0); scanf("%d%d%d", &a[i], &b[i], &m[i]); gp[a[i] + b[i] - m[i]].push_back(make_pair(a[i], i)); } int tot = 0; for (auto itr : gp) { auto v = itr.second; sort(v.begin(), v.end()); for (int i = 0; i < v.size(); ++i) { if (i == 0) { tot++; int id = v[i].second; if (b[id] < m[id]) { ans[id - 1] = m[id] - b[id]; } } else { int id = v[i].second; int id2 = v[i - 1].second; if (a[id] - a[id2] - ans[id2 - 1] <= m[id]) { ans[id - 1] = a[id] - (a[id2] - ans[id2 - 1]); } else { tot++; if (b[id] < m[id]) { ans[id - 1] = m[id] - b[id]; } } } } } printf("%d\n", tot); for (int i = 1; i <= n; ++i) { printf("%d %d\n", ans[i - 1], m[i] - ans[i - 1]); } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int inf = 1000000000; long long mod = 1000000007LL; long long mod2 = 998244353LL; int t, n, h; int k; int q; int a[200005], b[200005]; int m[200005]; map<int, vector<pair<int, int>>> gp; vector<int> ans; int main() { cin >> t; for (int cas = 1; cas <= t; ++cas) { scanf("%d", &n); gp.clear(); ans.clear(); for (int i = 1; i <= n; ++i) { ans.push_back(0); scanf("%d%d%d", &a[i], &b[i], &m[i]); gp[a[i] + b[i] - m[i]].push_back(make_pair(a[i], i)); } int tot = 0; for (auto itr : gp) { auto v = itr.second; sort(v.begin(), v.end()); for (int i = 0; i < v.size(); ++i) { if (i == 0) { tot++; int id = v[i].second; if (b[id] < m[id]) { ans[id - 1] = m[id] - b[id]; } } else { int id = v[i].second; int id2 = v[i - 1].second; if (a[id] - a[id2] + ans[id2 - 1] <= m[id]) { ans[id - 1] = a[id] - (a[id2] - ans[id2 - 1]); } else { tot++; if (b[id] < m[id]) { ans[id - 1] = m[id] - b[id]; } } } } } printf("%d\n", tot); for (int i = 1; i <= n; ++i) { printf("%d %d\n", ans[i - 1], m[i] - ans[i - 1]); } } return 0; }
106	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; long long qs(long long a, long long b) { long long res = 1; while (b) { if (b & 1) { res *= a; res %= mod; } a *= a; a %= mod; b >>= 1; } return res; } int32_t main() { long long t; cin >> t; while (t--) { long long n; cin >> n; for (long long i = 2; i <= n + 2; i++) { cout << i << " "; } cout << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long mod = 998244353; long long qs(long long a, long long b) { long long res = 1; while (b) { if (b & 1) { res *= a; res %= mod; } a *= a; a %= mod; b >>= 1; } return res; } int32_t main() { long long t; cin >> t; while (t--) { long long n; cin >> n; for (long long i = 2; i <= n + 1; i++) { cout << i << " "; } cout << endl; } }
106	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test; cin >> test; while (test--) { long long int n, ans = 1; cin >> n; for (long long int i = 0; i < n; i++) { cout << ans << " "; ans = ans + 1; } cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); long long test; cin >> test; while (test--) { long long int n, ans = 2; cin >> n; for (long long int i = 0; i < n; i++) { cout << ans << " "; ans = ans + 1; } cout << "\n"; } return 0; }
106	 #include <bits/stdc++.h> using namespace std; long long binpow(long long a, long long b, long long m) { a %= m; long long res = 1; while (b > 0) { if (b & 1) res = res * a % m; a = a * a % m; b >>= 1; } return res; } bool isPowerOfTwo(long long n) { if ((n & (n - 1)) == 0) return true; return false; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; long long t; cin >> t; while (t--) { long long n; cin >> n; for (long long i = 0; i < n; i++) { cout << i + 1 << " "; } cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long binpow(long long a, long long b, long long m) { a %= m; long long res = 1; while (b > 0) { if (b & 1) res = res * a % m; a = a * a % m; b >>= 1; } return res; } bool isPowerOfTwo(long long n) { if ((n & (n - 1)) == 0) return true; return false; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); ; long long t; cin >> t; while (t--) { long long n; cin >> n; for (long long i = 0; i < n; i++) { cout << i + 2 << " "; } cout << "\n"; } }
106	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; cout << 2 << " "; for (int i = 1; i <= n; i++) { cout << i + 2 << " "; } cout << endl; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; cout << 2 << " "; for (int i = 1; i < n; i++) { cout << i + 2 << " "; } cout << endl; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }
106	 #include <bits/stdc++.h> using namespace std; const long long N = 2e6 + 5; long long n, k, a[N], res; void solo() { cin >> n; for (int i = 1; i <= n; i++) cout << n + 1 << " "; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) { solo(); cout << endl; } cerr << "\n" << (double)clock() / CLOCKS_PER_SEC * 1000 << " ms"; }	 #include <bits/stdc++.h> using namespace std; const long long N = 2e6 + 5; long long n, k, a[N], res; void solo() { cin >> n; for (int i = 1; i <= n; i++) cout << i + 1 << " "; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; while (t--) { solo(); cout << endl; } cerr << "\n" << (double)clock() / CLOCKS_PER_SEC * 1000 << " ms"; }
106	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ull = unsigned long long; const int inf = 1e9 + 10; const ll llinf = 1e18 + 10; const int mod = 1e9 + 7; ll gcd(ll a, ll b) { if (b == 0) { return a; } return gcd(b, a % b); } int main() { std::ios_base::sync_with_stdio(false); int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 0; i < n; ++i) { cout << i + 1 << " "; } cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ull = unsigned long long; const int inf = 1e9 + 10; const ll llinf = 1e18 + 10; const int mod = 1e9 + 7; ll gcd(ll a, ll b) { if (b == 0) { return a; } return gcd(b, a % b); } int main() { std::ios_base::sync_with_stdio(false); int t; cin >> t; while (t--) { int n; cin >> n; for (int i = 1; i <= n; ++i) { cout << i + 1 << " "; } cout << "\n"; } }
106	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC optimize("unroll-loops") using namespace std; const long long inf = 1e6; const long long mod = 1e9; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; i++) a[i] = i + 1; for (auto i : a) cout << i << " "; cout << "\n"; } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tests = 1; cin >> tests; while (tests--) { solve(); } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") #pragma GCC optimize("unroll-loops") using namespace std; const long long inf = 1e6; const long long mod = 1e9; void solve() { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; i++) a[i] = i + 2; for (auto i : a) cout << i << " "; cout << "\n"; } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tests = 1; cin >> tests; while (tests--) { solve(); } return 0; }
106	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; cout << 2 << " "; for (int i = 1; i <= n; i++) { cout << i + 2 << " "; } cout << endl; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; cout << 2 << " "; for (int i = 1; i < n; i++) { cout << i + 2 << " "; } cout << endl; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }
107	 #include <bits/stdc++.h> using namespace std; void solve(); int main() { int t = 1; while (t--) { solve(); cout << endl; } return 0; } void solve() { int n, a, b; cin >> n >> a >> b; if (abs(a - b) <= 1 && a + b + 2 <= n) { if (a <= b) { int i, j, k = min(a, b); if (a < b) { cout << 2 << " " << 1 << " "; i = 3, j = 4; } else { cout << 1 << " "; i = 3, j = 2; } for (; max(i, j) < n && k > 0; i += 2, j += 2, k--) cout << i << " " << j << " "; for (int t = min(i, j); t <= n; t++) cout << t << " "; } else { int i = n - 1, j = n, k = max(a, b); for (; min(i, j) > 0 && k > 0; i -= 2, j -= 2, k--) cout << i << " " << j << " "; for (int t = max(i, j); t > 0; t--) cout << t << " "; } } else { cout << -1; } }	 #include <bits/stdc++.h> using namespace std; void solve(); int main() { int t = 1; while (t--) { solve(); cout << endl; } return 0; } void solve() { int n, a, b; cin >> n >> a >> b; if (abs(a - b) <= 1 && a + b + 2 <= n) { if (a <= b) { int i, j, k = min(a, b); if (a < b) { cout << 2 << " " << 1 << " "; i = 4, j = 3; } else { cout << 1 << " "; i = 3, j = 2; } for (; max(i, j) < n && k > 0; i += 2, j += 2, k--) cout << i << " " << j << " "; for (int t = min(i, j); t <= n; t++) cout << t << " "; } else { int i = n - 1, j = n, k = max(a, b); for (; min(i, j) > 0 && k > 0; i -= 2, j -= 2, k--) cout << i << " " << j << " "; for (int t = max(i, j); t > 0; t--) cout << t << " "; } } else { cout << -1; } }
107	 #include <bits/stdc++.h> using namespace std; int i, j, m, n, s, t, x, z, y; int main() { cin >> n; while (n--) { cin >> x >> y >> z; if (y + z >= x - 1 || y - z > 1 || y - z < -1) { cout << -1 << endl; continue; } if (y > z) { cout << x - 1; for (i = 1; i <= y; i++) { cout << " " << x - (2 * i - 2); if (i != y) cout << " " << x - (2 * i + 1); else cout << " " << x - (2 * i); } for (i = x - (2 * y + 1); i >= 1; i--) cout << " " << i; cout << endl; } if (y < z) { cout << 2; for (i = 1; i <= y; i++) { cout << " " << 2 * i - 1; cout << " " << 2 * i + 2; } cout << " " << 2 * y + 2 - 1; for (i = 2 * y + 2 + 1; i <= x; i++) cout << " " << i; } if (y == z) { cout << 1; for (i = 1; i <= y; i++) { cout << " " << 2 * i + 1; cout << " " << 2 * i; } for (i = 2 * i + 2; i <= x; i++) cout << " " << i; } cout << endl; } }	 #include <bits/stdc++.h> using namespace std; int i, j, m, n, s, t, x, z, y; int main() { cin >> n; while (n--) { cin >> x >> y >> z; if (y + z >= x - 1 || y - z > 1 || y - z < -1) { cout << -1 << endl; continue; } if (y > z) { cout << x - 1; for (i = 1; i <= y; i++) { cout << " " << x - (2 * i - 2); if (i != y) cout << " " << x - (2 * i + 1); else cout << " " << x - (2 * i); } for (i = x - (2 * y + 1); i >= 1; i--) cout << " " << i; cout << endl; } if (y < z) { cout << 2; for (i = 1; i <= y; i++) { cout << " " << 2 * i - 1; cout << " " << 2 * i + 2; } cout << " " << 2 * y + 2 - 1; for (i = 2 * y + 2 + 1; i <= x; i++) cout << " " << i; } if (y == z) { cout << 1; for (i = 1; i <= y; i++) { cout << " " << 2 * i + 1; cout << " " << 2 * i; } for (i = 2 * y + 2; i <= x; i++) cout << " " << i; } cout << endl; } }
107	 #include <bits/stdc++.h> const double PI = 3.1415926535897932384626433; const int KL = 1e6; const long long MOD = 1e9 + 7; using namespace std; int q, x, y, z, n, m, a, b, ans; string t; vector<int> vec; int main() { scanf("%d", &q); while (q--) { scanf("%d", &n); scanf("%d", &a); scanf("%d", &b); if (a + b <= n - 2 && abs(a - b) <= 1) { if (a == b + 1) { int cnt = n - 1; while (a > 0) { printf("%d %d ", cnt, cnt + 1); cnt -= 2; a -= 1; } for (int i = cnt + 1; i >= 1; i--) printf("%d ", cnt); printf("\n"); } else if (a == b) { int cnt = a + b; while (a > 0) { printf("%d %d ", cnt, cnt + 1); cnt -= 2; a--; } printf("1 "); for (int i = b + b + 2; i <= n; i++) printf("%d ", i); printf("\n"); } else { int cnt = 2; while (b > 0) { printf("%d %d ", cnt, cnt - 1); cnt += 2; b--; } for (int i = cnt - 1; i <= n; i++) printf("%d ", i); printf("\n"); } } else printf("-1\n"); } return 0; }	 #include <bits/stdc++.h> const double PI = 3.1415926535897932384626433; const int KL = 1e6; const long long MOD = 1e9 + 7; using namespace std; int q, x, y, z, n, m, a, b, ans; string t; vector<int> vec; int main() { scanf("%d", &q); while (q--) { scanf("%d", &n); scanf("%d", &a); scanf("%d", &b); if (a + b <= n - 2 && abs(a - b) <= 1) { if (a == b + 1) { int cnt = n - 1; while (a > 0) { printf("%d %d ", cnt, cnt + 1); cnt -= 2; a -= 1; } for (int i = cnt + 1; i >= 1; i--) printf("%d ", i); printf("\n"); } else if (a == b) { int cnt = a + b; while (a > 0) { printf("%d %d ", cnt, cnt + 1); cnt -= 2; a--; } printf("1 "); for (int i = b + b + 2; i <= n; i++) printf("%d ", i); printf("\n"); } else { int cnt = 2; while (b > 0) { printf("%d %d ", cnt, cnt - 1); cnt += 2; b--; } for (int i = cnt - 1; i <= n; i++) printf("%d ", i); printf("\n"); } } else printf("-1\n"); } return 0; }
107	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, a, b; cin >> n >> a >> b; if (abs(a - b) > 1) { cout << "-1\n"; return; } if (a > b) { if (2 * a + 1 > n) { cout << "-1\n"; return; } cout << "1 "; for (long long i = a + 2; i <= n - a; i++) cout << i << " "; for (long long i = 2; i <= a + 1; i++) { cout << n - i + 2 << " " << i << " "; } cout << "\n"; } else if (b > a) { if (2 * b + 1 > n) { cout << "-1\n"; return; } cout << n << " "; for (long long i = n - b - 1; i > b; i--) { cout << i << " "; } for (long long i = 1; i <= b; i++) { cout << i << " " << n - i << " "; } cout << "\n"; } else { if (2 * a + 1 > n) { cout << "-1\n"; return; } if (n == 1) { cout << "1\n"; return; } cout << "1 "; for (long long i = a + 2; i < n - a; i++) cout << i << " "; cout << n << " "; for (long long i = 2; i <= a + 1; i++) { cout << i << " " << n - i + 1 << " "; } cout << "\n"; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long testcases = 1; cin >> testcases; while (testcases--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, a, b; cin >> n >> a >> b; if (abs(a - b) > 1) { cout << "-1\n"; return; } if (a > b) { if (2 * a + 1 > n) { cout << "-1\n"; return; } cout << "1 "; for (long long i = a + 2; i <= n - a; i++) cout << i << " "; for (long long i = 2; i <= a + 1; i++) { cout << n - i + 2 << " " << i << " "; } cout << "\n"; } else if (b > a) { if (2 * b + 1 > n) { cout << "-1\n"; return; } cout << n << " "; for (long long i = n - b - 1; i > b; i--) { cout << i << " "; } for (long long i = 1; i <= b; i++) { cout << i << " " << n - i << " "; } cout << "\n"; } else { if (2 * a + 2 > n) { cout << "-1\n"; return; } if (n == 1) { cout << "1\n"; return; } cout << "1 "; for (long long i = a + 2; i < n - a; i++) cout << i << " "; cout << n << " "; for (long long i = 2; i <= a + 1; i++) { cout << i << " " << n - i + 1 << " "; } cout << "\n"; } } signed main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); long long testcases = 1; cin >> testcases; while (testcases--) solve(); return 0; }
108	 #include <bits/stdc++.h> using namespace std; const int N = 100100; struct pp { pair<int, int> p; int id; } w[N]; int cmp(pp a, pp b) { return a.p.second < b.p.second; } set<int, greater<int> > los; set<int, greater<int> > L; int ans[N]; void solve() { los.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { scanf("%d", &w[i].p.first); w[i].id = i; } for (int i = 1; i <= n; i++) { scanf("%d", &w[i].p.second); } sort(w + 1, w + 1 + n, cmp); int win = w[n].p.first; ans[w[n].id] = 1; for (int i = 1; i <= n - 1; i++) { L.insert(w[i].p.second); } for (int i = n - 1; i >= 1; i--) { if (w[i].p.first > win || *L.begin() > win) { win = min(win, w[i].p.first); ans[w[i].id] = 1; while (!los.empty()) { int x = *los.begin(); if (w[i].p.first < x) { win = min(win, x); los.erase(los.begin()); } else break; } } else { los.insert(w[i].p.first); ans[w[i].id] = 0; } L.erase(w[i].p.second); } for (int i = 1; i <= n; i++) { cout << ans[i]; } cout << '\n'; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 100100; struct pp { pair<int, int> p; int id; } w[N]; int cmp(pp a, pp b) { return a.p.second < b.p.second; } set<int, greater<int> > los; set<int, greater<int> > L; int ans[N]; void solve() { los.clear(); int n; cin >> n; for (int i = 1; i <= n; i++) { scanf("%d", &w[i].p.first); w[i].id = i; } for (int i = 1; i <= n; i++) { scanf("%d", &w[i].p.second); } sort(w + 1, w + 1 + n, cmp); int win = w[n].p.first; ans[w[n].id] = 1; for (int i = 1; i <= n - 1; i++) { L.insert(w[i].p.first); } for (int i = n - 1; i >= 1; i--) { if (w[i].p.first > win || *L.begin() > win) { win = min(win, w[i].p.first); ans[w[i].id] = 1; while (!los.empty()) { int x = *los.begin(); if (w[i].p.first < x) { win = min(win, x); los.erase(los.begin()); } else break; } } else { los.insert(w[i].p.first); ans[w[i].id] = 0; } L.erase(w[i].p.first); } for (int i = 1; i <= n; i++) { cout << ans[i]; } cout << '\n'; } int main() { int t; cin >> t; while (t--) { solve(); } return 0; }
108	 #include <bits/stdc++.h> using namespace std; vector<vector<long long>> g, g_rev; signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); long long t; cin >> t; for (long long q = 0; q < t; q++) { long long n; cin >> n; vector<long long> a(n), b(n); map<long long, long long> ma, mb; for (long long i = 0; i < n; i++) { cin >> a[i]; ma[a[i]] = i; } for (long long i = 0; i < n; i++) { cin >> b[i]; mb[b[i]] = i; } set<long long> winners; vector<long long> a_add, b_add; a_add.push_back(prev(ma.end())->second); winners.insert(prev(ma.end())->second); ma.erase(prev(ma.end())); long long cnt = 1; while (cnt > 0) { cnt = 0; for (auto &e : a_add) { while (mb.lower_bound(b[e]) != mb.end()) { b_add.push_back(mb.lower_bound(b[e])->second); winners.insert(mb.lower_bound(b[e])->second); cnt++; mb.erase(mb.lower_bound(b[e])); } } a_add.clear(); for (auto &e : b_add) { while (ma.lower_bound(a[e]) != ma.end()) { a_add.push_back(ma.lower_bound(a[e])->second); winners.insert(mb.lower_bound(a[e])->second); cnt++; ma.erase(ma.lower_bound(a[e])); } } b_add.clear(); } for (long long i = 0; i < n; i++) { if (winners.count(i)) { cout << 1; } else { cout << 0; } } cout << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; vector<vector<long long>> g, g_rev; signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); long long t; cin >> t; for (long long q = 0; q < t; q++) { long long n; cin >> n; vector<long long> a(n), b(n); map<long long, long long> ma, mb; for (long long i = 0; i < n; i++) { cin >> a[i]; ma[a[i]] = i; } for (long long i = 0; i < n; i++) { cin >> b[i]; mb[b[i]] = i; } set<long long> winners; vector<long long> a_add, b_add; a_add.push_back(prev(ma.end())->second); winners.insert(prev(ma.end())->second); ma.erase(prev(ma.end())); long long cnt = 1; while (cnt > 0) { cnt = 0; for (auto &e : a_add) { while (mb.lower_bound(b[e]) != mb.end()) { b_add.push_back(mb.lower_bound(b[e])->second); winners.insert(mb.lower_bound(b[e])->second); cnt++; mb.erase(mb.lower_bound(b[e])); } } a_add.clear(); for (auto &e : b_add) { while (ma.lower_bound(a[e]) != ma.end()) { a_add.push_back(ma.lower_bound(a[e])->second); winners.insert(ma.lower_bound(a[e])->second); cnt++; ma.erase(ma.lower_bound(a[e])); } } b_add.clear(); } for (long long i = 0; i < n; i++) { if (winners.count(i)) { cout << 1; } else { cout << 0; } } cout << '\n'; } return 0; }
113	 #include <bits/stdc++.h> using namespace std; int main() { std::ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { string s1, s2; long long n1, n2, num1 = 0, num2 = 0; cin >> s1; cin >> n1; cin >> s2; cin >> n2; if (s1.size() < s2.size()) for (int i = 0;; i < n1) { s1 += '0'; n1--; if (s1.size() == s2.size()) break; } else if (s1.size() > s2.size()) for (int i = 0;; i < n2) { s2 += '0'; n2--; if (s1.size() == s2.size()) break; } if (n1 > n2) cout << '>' << endl; else if (n1 < n2) cout << '<' << endl; else { for (int i = 0; i < s1.size(); i++) { num1 *= 10; num1 += s1[0] - 48; num2 *= 10; num2 += s2[0] - 48; if (num1 > num2) { cout << '>' << endl; break; } else if (num1 < num2) { cout << '<' << endl; break; } else if (i == s1.size() - 1) cout << '=' << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { std::ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { string s1, s2; long long n1, n2, num1 = 0, num2 = 0; cin >> s1; cin >> n1; cin >> s2; cin >> n2; if (s1.size() < s2.size()) for (int i = 0;; i < n1) { s1 += '0'; n1--; if (s1.size() == s2.size()) break; } else if (s1.size() > s2.size()) for (int i = 0;; i < n2) { s2 += '0'; n2--; if (s1.size() == s2.size()) break; } if (n1 > n2) cout << '>' << endl; else if (n1 < n2) cout << '<' << endl; else { for (int i = 0; i < s1.size(); i++) { num1 *= 10; num1 += s1[i] - 48; num2 *= 10; num2 += s2[i] - 48; if (num1 > num2) { cout << '>' << endl; break; } else if (num1 < num2) { cout << '<' << endl; break; } else if (i == s1.size() - 1) cout << '=' << endl; } } } return 0; }
113	 #include <bits/stdc++.h> using namespace std; const int N = 10; int main() { int T; int x1, p1, x2, p2; cin >> T; string res; while (T--) { cin >> x1 >> p1 >> x2 >> p2; if (p2 - p1 >= 6) { res += '<'; continue; } if (p1 - p2 >= 6) { res += '>'; continue; } char s1[N] = "\0", s2[N] = "\0"; int t1 = x1, t2 = x2; int cnt1 = 0, cnt2 = 0; while (t1) { cnt1++; t1 /= 10; } while (t2) { cnt2++; t2 /= 10; } int idx1 = 0, idx2 = 0; for (int i = cnt1 - 1; i >= 0; i--) { int tt = (x1 / pow(10, i)); tt %= 10; s1[idx1++] = tt + '0'; } for (int i = cnt2 - 1; i >= 0; i--) { int tt = x2 / pow(10, i); tt %= 10; s2[idx2++] = tt + '0'; } if (idx1 + p1 < idx2 + p2) { res += '<'; continue; } if (idx1 + p1 > idx2 + p2) { res += '>'; continue; } if (cnt1 < cnt2) { cnt1 = cnt2; for (int i = idx1; i < idx2; i++) s1[i] = '0'; } if (cnt1 > cnt2) for (int i = idx2; i < idx1; i++) s2[i] = '0'; for (int i = 0; i < cnt1; i++) { if (s1[i] < s2[i]) { res += '<'; break; } if (s1[i] > s2[i]) { res += '>'; break; } if (i == cnt1 - 1) res += '='; } } for (int i = 0; i < res.size(); i++) cout << res[i] << endl; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 10; int main() { int T; int x1, p1, x2, p2; cin >> T; string res; while (T--) { cin >> x1 >> p1 >> x2 >> p2; if (p2 - p1 > 6) { res += '<'; continue; } if (p1 - p2 > 6) { res += '>'; continue; } char s1[N] = "\0", s2[N] = "\0"; int t1 = x1, t2 = x2; int cnt1 = 0, cnt2 = 0; while (t1) { cnt1++; t1 /= 10; } while (t2) { cnt2++; t2 /= 10; } int idx1 = 0, idx2 = 0; for (int i = cnt1 - 1; i >= 0; i--) { int tt = (x1 / pow(10, i)); tt %= 10; s1[idx1++] = tt + '0'; } for (int i = cnt2 - 1; i >= 0; i--) { int tt = x2 / pow(10, i); tt %= 10; s2[idx2++] = tt + '0'; } if (idx1 + p1 < idx2 + p2) { res += '<'; continue; } if (idx1 + p1 > idx2 + p2) { res += '>'; continue; } if (cnt1 < cnt2) { cnt1 = cnt2; for (int i = idx1; i < idx2; i++) s1[i] = '0'; } if (cnt1 > cnt2) for (int i = idx2; i < idx1; i++) s2[i] = '0'; for (int i = 0; i < cnt1; i++) { if (s1[i] < s2[i]) { res += '<'; break; } if (s1[i] > s2[i]) { res += '>'; break; } if (i == cnt1 - 1) res += '='; } } for (int i = 0; i < res.size(); i++) cout << res[i] << endl; return 0; }
113	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int x1, p1; cin >> x1 >> p1; int x2, p2; cin >> x2 >> p2; double temp1 = log10(x1 / x2) + p1 - p2; if (temp1 < 0) { cout << '<' << '\n'; } else if (temp1 > 0) { cout << '>' << '\n'; } else { cout << '=' << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { double x1, p1; cin >> x1 >> p1; double x2, p2; cin >> x2 >> p2; double temp1 = log10(x1 / x2) + p1 - p2; if (temp1 < 0) { cout << '<' << '\n'; } else if (temp1 > 0) { cout << '>' << '\n'; } else { cout << '=' << '\n'; } } }
113	 #include <bits/stdc++.h> using namespace std; void solution() { long long int n, m, a, b, c, d, p, q, cnt = 0, ct = 0, sum = 0, ans = 0; cin >> n >> a; cin >> m >> b; p = n; q = m; string s1, s2; s1 = to_string(p); s2 = to_string(q); long long int sz1, sz2; sz1 = s1.size(); sz2 = s2.size(); long long int second = sz1, sss = sz2; sz1 += a; sz2 += b; if (sz1 > sz2) cout << "> " << endl; else if (sz1 < sz2) cout << "<" << endl; else { if (second > sss) { for (long long int i = 0; i < second - sss; i++) s1 += '0'; } else { for (long long int i = 0; i < sss - second; i++) s2 += '0'; } for (long long int i = 0; i < s1.size(); i++) { if (s1[i] > s2[i]) { cout << ">" << endl; return; } else if (s2[i] > s1[i]) { cout << "<" << endl; return; } } cout << "=" << endl; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) solution(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solution() { long long int n, m, a, b, c, d, p, q, cnt = 0, ct = 0, sum = 0, ans = 0; cin >> n >> a; cin >> m >> b; p = n; q = m; string s1, s2; s1 = to_string(p); s2 = to_string(q); long long int sz1, sz2; sz1 = s1.size(); sz2 = s2.size(); long long int second = sz1, sss = sz2; sz1 += a; sz2 += b; if (sz1 > sz2) cout << "> " << endl; else if (sz1 < sz2) cout << "<" << endl; else { if (second > sss) { for (long long int i = 0; i < second - sss; i++) s2 += '0'; } else { for (long long int i = 0; i < sss - second; i++) s1 += '0'; } for (long long int i = 0; i < s1.size(); i++) { if (s1[i] > s2[i]) { cout << ">" << endl; return; } else if (s2[i] > s1[i]) { cout << "<" << endl; return; } } cout << "=" << endl; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) solution(); return 0; }
113	 #include <bits/stdc++.h> using namespace std; int dx[] = {+1, -1, +0, +0}; int dy[] = {+0, +0, +1, -1}; int main() { int test; cin >> test; while (test--) { long long int n, m, a, b, cnt = 0; string s1, s2, res; cin >> s1 >> n >> s2 >> m; if (s1.size() + n > s2.size() + m) cout << ">"; else if (s1.size() + n < s2.size() + m) cout << "<"; else { int ok = 0; a = min(s1.size(), s2.size()); for (int i = 0; i < a; i++) { if (s1[i] > s2[i]) { cout << ">"; ok = 1; break; } else if (s1[i] < s2[i]) { cout << "<"; ok = 1; break; } } if (ok == 0) { int x = min(s1.size(), s2.size()); if (s1.size() < s2.size()) { for (int i = x; i < s2.size(); i++) { if (s2[i] != '0') { cout << "<"; ok = 1; break; } } } if (s1.size() > s2.size()) { for (int i = x; i < s1.size(); i++) { if (s2[i] != '0') { cout << ">"; ok = 1; break; } } } if (ok == 0) cout << "="; } } cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int dx[] = {+1, -1, +0, +0}; int dy[] = {+0, +0, +1, -1}; int main() { int test; cin >> test; while (test--) { long long int n, m, a, b, cnt = 0; string s1, s2, res; cin >> s1 >> n >> s2 >> m; if (s1.size() + n > s2.size() + m) cout << ">"; else if (s1.size() + n < s2.size() + m) cout << "<"; else { int ok = 0; a = min(s1.size(), s2.size()); for (int i = 0; i < a; i++) { if (s1[i] > s2[i]) { cout << ">"; ok = 1; break; } else if (s1[i] < s2[i]) { cout << "<"; ok = 1; break; } } if (ok == 0) { int x = min(s1.size(), s2.size()); if (s1.size() < s2.size()) { for (int i = x; i < s2.size(); i++) { if (s2[i] != '0') { cout << "<"; ok = 1; break; } } } if (s1.size() > s2.size()) { for (int i = x; i < s1.size(); i++) { if (s1[i] != '0') { cout << ">"; ok = 1; break; } } } if (ok == 0) cout << "="; } } cout << endl; } return 0; }
114	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int a[n], minn = 99999; for (int i = 0; i < n; i++) { cin >> a[i]; if (minn > a[i]) { minn = a[i]; } } int req = n / 2, i = 0; while (i < n && req > 0) { if (a[i] != minn) { cout << a[i] << " " << minn << endl; req--; } i++; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; long a[n], minn = 99999999; for (int i = 0; i < n; i++) { cin >> a[i]; if (minn > a[i]) { minn = a[i]; } } int req = n / 2, i = 0; while (i < n && req > 0) { if (a[i] != minn) { cout << a[i] << " " << minn << endl; req--; } i++; } } return 0; }
114	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int j = 0; j < t; j++) { int n, mn, c = 0; cin >> n; int arr[n]; for (int i = 0; i < n; i++) { cin >> arr[i]; if (i == 0) { mn = arr[i]; } else { mn = min(mn, arr[i]); } } pair<int, int> p; p.second = mn; for (int i = 1; i < n; i++) { p.first = arr[i]; if (p.first == p.second) { continue; } else if (c != n / 2) { c++; cout << p.first << " " << p.second << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; for (int j = 0; j < t; j++) { int n, mn, c = 0; cin >> n; int arr[n]; for (int i = 0; i < n; i++) { cin >> arr[i]; if (i == 0) { mn = arr[i]; } else { mn = min(mn, arr[i]); } } pair<int, int> p; p.second = mn; for (int i = 0; i < n; i++) { p.first = arr[i]; if (p.first == p.second) { continue; } else if (c != n / 2) { c++; cout << p.first << " " << p.second << endl; } } } return 0; }
114	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> v; int op = n; while (op--) { long long num; cin >> num; v.push_back(num); } sort(v.begin(), v.end()); for (int i = 1; i <= n / 2; i++) { cout << v[0] << " " << v[i] << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> v; int op = n; while (op--) { long long num; cin >> num; v.push_back(num); } sort(v.begin(), v.end()); for (int i = 1; i <= n / 2; i++) { cout << v[i] << " " << v[0] << endl; } } return 0; }
114	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; long long arr[n]; for (int i = 0; i < n; i++) { cin >> arr[i]; } sort(arr, arr + n); long long c = floor(n / 2); for (int i = 1; i <= c; i++) { cout << arr[0] << " " << arr[i] << endl; } } int main() { ios::sync_with_stdio(0); cin.tie(0); long long t; cin >> t; while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; long long arr[n]; for (int i = 0; i < n; i++) { cin >> arr[i]; } sort(arr, arr + n); long long c = floor(n / 2); for (int i = 1; i <= c; i++) { cout << arr[i] << " " << arr[0] << endl; } } int main() { ios::sync_with_stdio(0); cin.tie(0); long long t; cin >> t; while (t--) { solve(); } }
114	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; vector<long long int> a(n); for (long long int i = 0; i < n; i++) cin >> a[i]; sort(a.begin(), a.end()); for (long long int z = 0; z < n / 2; z++) { cout << a[z + 1] << ' ' << a[z] << '\n'; } return; } signed main() { ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); long long int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long int n; cin >> n; vector<long long int> a(n); for (long long int i = 0; i < n; i++) cin >> a[i]; sort(a.begin(), a.end()); for (long long int z = 0; z < n / 2; z++) { cout << a[z + 1] << ' ' << a[0] << '\n'; } return; } signed main() { ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); long long int t; cin >> t; while (t--) { solve(); } return 0; }
114	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 9; int n, a[N]; bool tong[10 * N]; void work() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); tong[a[i]] = 1; } sort(a + 1, a + 1 + n); int m = unique(a + 1, a + 1 + n) - a; int t = min(n / 2, m); for (int i = 2; i <= t + 1; i++) { printf("%d %d\n", a[1], a[i]); } for (int i = 2; i <= m && t < n / 2; i++) { for (int j = i + 1; j <= m && t < n / 2; j++) { if (tong[a[j] % a[i]]) continue; printf("%d %d\n", a[j], a[i]); t++; } } } int main() { int T; cin >> T; while (T--) work(); }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 9; int n, a[N]; bool tong[10 * N]; void work() { scanf("%d", &n); for (int i = 1; i <= n; i++) { scanf("%d", &a[i]); tong[a[i]] = 1; } sort(a + 1, a + 1 + n); int m = unique(a + 1, a + 1 + n) - a; int t = min(n / 2, m); for (int i = 2; i <= t + 1; i++) { printf("%d %d\n", a[i], a[1]); } for (int i = 2; i <= m && t < n / 2; i++) { for (int j = i + 1; j <= m && t < n / 2; j++) { if (tong[a[j] % a[i]]) continue; printf("%d %d\n", a[j], a[i]); t++; } } } int main() { int T; cin >> T; while (T--) work(); }
114	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 10, INF = 1e18 + 10; long long a[N], n, h; void solve() { cin >> n; long long pos = 0, mn = INF; for (int i = 1; i <= n; i++) { cin >> a[i]; if (mn > a[i]) { mn = min(mn, a[i]); pos = i; } } int cnt = 0, j = 1; while (cnt < (n / 2)) { if (j != pos) { cout << a[pos] << " " << a[j] << endl; cnt++; } j++; } } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long N = 2e5 + 10, INF = 1e18 + 10; long long a[N], n, h; void solve() { cin >> n; long long pos = 0, mn = INF; for (int i = 1; i <= n; i++) { cin >> a[i]; if (mn > a[i]) { mn = min(mn, a[i]); pos = i; } } int cnt = 0, j = 1; while (cnt < (n / 2)) { if (j != pos) { cout << a[j] << " " << a[pos] << endl; cnt++; } j++; } } int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int T = 1; cin >> T; while (T--) { solve(); } }
114	 #include <bits/stdc++.h> using namespace std; using ll = long long; const int N = 1e6 + 1; ll t, n, m, k, a, b, c, f, ans; ll d[N], fa[N], x[N]; vector<ll> g[N]; string S; int main() { ios::sync_with_stdio(0), cin.tie(0); cin >> t; while (t--) { cin >> n; for (ll i = 1; i <= n; i++) cin >> x[i]; sort(x + 1, x + n + 1); for (ll i = 2; i <= n + 3 >> 1; i++) cout << x[i] << ' ' << x[1] << '\n'; } }	 #include <bits/stdc++.h> using namespace std; using ll = long long; const int N = 1e6 + 1; ll t, n, m, k, a, b, c, f, ans; ll d[N], fa[N], x[N]; vector<ll> g[N]; string S; int main() { ios::sync_with_stdio(0), cin.tie(0); cin >> t; while (t--) { cin >> n; for (ll i = 1; i <= n; i++) cin >> x[i]; sort(x + 1, x + n + 1); for (ll i = 2; i <= n + 2 >> 1; i++) cout << x[i] << ' ' << x[1] << '\n'; } }
114	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t, n, i, x, y, m, p, q, sum, ans, cnt, mx, mn, j, k; cin >> t; while (t--) { sum = 0; cnt = 0; ans = 0; mx = INT_MIN; mn = 1e18; cin >> n; vector<long long int> a(n); for (i = 0; i < n; i++) cin >> a[i]; sort(a.begin(), a.end()); i = 0; j = n - 1; while (i < n / 2) { cout << a[i] << " " << a[j] << "\n"; i++; j--; } } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t, n, i, x, y, m, p, q, sum, ans, cnt, mx, mn, j, k; cin >> t; while (t--) { sum = 0; cnt = 0; ans = 0; mx = INT_MIN; mn = 1e18; cin >> n; vector<long long int> a(n); for (i = 0; i < n; i++) cin >> a[i]; sort(a.begin(), a.end()); i = 0; j = n - 1; while (i < n / 2) { cout << a[j] << " " << a[0] << "\n"; i++; j--; } } }
114	 #include <bits/stdc++.h> using namespace std; int main() { long long tt; cin >> tt; while (tt--) { long long n, temp; cin >> n; vector<int> v; for (int i = 0; i < n; ++i) { cin >> temp; v.push_back(temp); } sort(v.begin(), v.end()); n /= 2; int j = 1; while (n--) { cout << v[0] << " " << v[j] << "\n"; j += 1; } } }	 #include <bits/stdc++.h> using namespace std; int main() { long long tt; cin >> tt; while (tt--) { long long n, temp; cin >> n; vector<int> v; for (int i = 0; i < n; ++i) { cin >> temp; v.push_back(temp); } sort(v.begin(), v.end()); n /= 2; int j = 1; while (n--) { cout << v[j] << " " << v[0] << "\n"; j += 1; } } }
114	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; for (int i = 0; i < n; i++) { int k; cin >> k; v.push_back(k); } sort(v.begin(), v.end()); int temp = n / 2; int i = 0, j = 1; while (j <= temp) { cout << v[i] << " " << v[j] << endl; j++; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; vector<int> v; for (int i = 0; i < n; i++) { int k; cin >> k; v.push_back(k); } sort(v.begin(), v.end()); int temp = n / 2; int i = 0, j = 1; while (j <= temp) { cout << v[j] << " " << v[i] << endl; j++; } } }
114	 #include <bits/stdc++.h> using namespace std; long long const INF = 1e16; long long power(long long a, long long b) { long long result = 1; while (b) { if (b % 2) result = (result * a) % 1000000007; a = (a * a) % 1000000007; b /= 2; } return result; } void solve() { int n; cin >> n; vector<int> a(n); for (long long i = 0; i < n; i++) cin >> a[i]; sort((a).begin(), (a).end()); int r = n / 2; for (int i = 1; i <= r; i++) { cout << a[i] << " " << a[r] << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int T = 1; cin >> T; for (int t = 1; t <= T; t++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; long long const INF = 1e16; long long power(long long a, long long b) { long long result = 1; while (b) { if (b % 2) result = (result * a) % 1000000007; a = (a * a) % 1000000007; b /= 2; } return result; } void solve() { int n; cin >> n; vector<int> a(n); for (long long i = 0; i < n; i++) cin >> a[i]; sort((a).begin(), (a).end()); int r = n / 2; for (int i = 1; i <= r; i++) { cout << a[i] << " " << a[0] << "\n"; } } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int T = 1; cin >> T; for (int t = 1; t <= T; t++) { solve(); } return 0; }
114	 #include <bits/stdc++.h> using namespace std; template <typename T> void printvec(vector<T>& vec) { for (int i = 0; i < vec.size(); i++) cout << vec[i] << " "; cout << '\n'; } int main() { std::ios::sync_with_stdio(false); int i = 0, j = 0; int ttt = 0; cin >> ttt; while (ttt--) { int n; cin >> n; vector<int> a(n); for (int i = 0; i < a.size(); i++) { cin >> a[i]; }; sort(a.begin(), a.end()); int m = n / 2; for (i = 1; i <= m; i++) { cout << a[0] << " " << a[i] << '\n'; } } return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T> void printvec(vector<T>& vec) { for (int i = 0; i < vec.size(); i++) cout << vec[i] << " "; cout << '\n'; } int main() { std::ios::sync_with_stdio(false); int i = 0, j = 0; int ttt = 0; cin >> ttt; while (ttt--) { int n; cin >> n; vector<int> a(n); for (int i = 0; i < a.size(); i++) { cin >> a[i]; }; sort(a.begin(), a.end()); int m = n / 2; for (i = 1; i <= m; i++) { cout << a[i] << " " << a[0] << '\n'; } } return 0; }
115	 #include <bits/stdc++.h> using namespace std; const long long N = 2000010; long long n, h, T, x; long long q[110]; bool check(long long x) { long long cnt = 0; for (long long i = 1; i < n; i++) { long long a = q[i], b = q[i + 1]; a = min(a + x, b); cnt += a - q[i]; } cnt += x; return cnt >= h; } void solve() { cin >> n >> h; for (long long i = 1; i <= n; i++) cin >> q[i]; long long l = 1, r = 0x3f3f3f3f; while (l < r) { long long mid = l + r >> 1; if (check(mid)) r = mid; else l = mid + 1; } cout << l << endl; } signed main() { cin >> T; while (T--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const long long N = 2000010; long long n, h, T, x; long long q[110]; bool check(long long x) { long long cnt = 0; for (long long i = 1; i < n; i++) { long long a = q[i], b = q[i + 1]; a = min(a + x, b); cnt += a - q[i]; } cnt += x; return cnt >= h; } void solve() { cin >> n >> h; for (long long i = 1; i <= n; i++) cin >> q[i]; long long l = 1, r = h; while (l < r) { long long mid = l + r >> 1; if (check(mid)) r = mid; else l = mid + 1; } cout << l << endl; } signed main() { cin >> T; while (T--) solve(); return 0; }
115	 #include <bits/stdc++.h> using namespace std; long long T = 1, n, k, mx, mn, i, j, x, sum, MOD = 1e9 + 7; long long up(long long x, long long y) { if (x % y == 0) return x / y; return x / y + 1; } long long fastestPower(long long x, long long y) { if (y == 0) return 1; if (y & 1) return x * fastestPower(x, y - 1); long long z = fastestPower(x, y / 2); return z * z; } long long a[200]; long long health; bool check(long long k) { long long me = health; for (i = 0; i < n; i++) { if (i == n - 1) me -= k; else { long long temp = a[i] + k - 1; if (temp < a[i + 1]) me -= k; else { me -= a[i + 1] - a[i]; } } } return (me <= 0); } long long bs() { long long b = 0, e = 1e18, ans = -1; while (b < e) { long long mid = (b + e) / 2; if (check(mid)) { ans = mid; e = mid - 1; } else b = mid + 1; } if (check(ans - 1)) --ans; return ans; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) { cin >> n >> health; for (i = 0; i < n; i++) cin >> a[i]; a[n] = + +1e9; cout << bs() << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long T = 1, n, k, mx, mn, i, j, x, sum, MOD = 1e9 + 7; long long up(long long x, long long y) { if (x % y == 0) return x / y; return x / y + 1; } long long fastestPower(long long x, long long y) { if (y == 0) return 1; if (y & 1) return x * fastestPower(x, y - 1); long long z = fastestPower(x, y / 2); return z * z; } long long a[200]; long long health; bool check(long long k) { long long me = health; for (long long i = 0; i < n; i++) { if (i == n - 1) me -= k; else { long long temp = a[i] + k - 1; if (temp < a[i + 1]) me -= k; else { me -= a[i + 1] - a[i]; } } } return (me <= 0); } long long bs() { long long b = 0, e = 2e18, ans = -1; while (b < e) { long long mid = (b + e) / 2; if (check(mid)) { ans = mid; e = mid - 1; } else b = mid + 1; } if (check(ans - 1)) --ans; return ans; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> T; while (T--) { cin >> n >> health; for (i = 0; i < n; i++) cin >> a[i]; a[n] = + +1e9; cout << bs() << "\n"; } return 0; }
115	 #include <bits/stdc++.h> using namespace std; void debug() { cout << endl; } template <typename T, typename... Args> void debug(T a, Args... args) { cout << a << " "; debug(args...); } const int N = 2e5 + 15; const long long mod = 1e9 + 7; const double E = 1e-7; long long A[N]; int dg(long long a) { int ans = 0; while (a) { a /= 10; ans++; } return ans; } int n, h; bool f(long long mid) { long long ans = 0; for (int i = 1; i < n; i++) { long long dis = abs(A[i] - A[i - 1]); long long end = A[i - 1] + mid; dis = min(dis, end - A[i - 1]); ans += dis; } ans += mid; return ans >= h; } void solve() { cin >> n >> h; for (int i = 0; i < n; i++) cin >> A[i]; long long a = -1, b = 2e18, mid; while (b - a > 1) { mid = (a + b) >> 1; if (f(mid)) b = mid; else a = mid; } cout << b << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; for (int i = 1; i <= t; i++) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void debug() { cout << endl; } template <typename T, typename... Args> void debug(T a, Args... args) { cout << a << " "; debug(args...); } const int N = 2e5 + 15; const long long mod = 1e9 + 7; const double E = 1e-7; long long A[N]; int dg(long long a) { int ans = 0; while (a) { a /= 10; ans++; } return ans; } long long n, h; bool f(long long mid) { long long ans = 0; for (int i = 1; i < n; i++) { long long dis = abs(A[i] - A[i - 1]); long long end = A[i - 1] + mid; dis = min(dis, end - A[i - 1]); ans += dis; } ans += mid; return ans >= h; } void solve() { cin >> n >> h; for (int i = 0; i < n; i++) cin >> A[i]; long long a = -1, b = 2e18, mid; while (b - a > 1) { mid = (a + b) >> 1; if (f(mid)) b = mid; else a = mid; } cout << b << '\n'; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; for (int i = 1; i <= t; i++) { solve(); } return 0; }
117	 #include <bits/stdc++.h> using namespace std; int n, m; const int max_n = 1e6 + 1; string G[max_n]; int sx, sy; pair<int, int> mov[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}}; int possible_route(int x, int y) { int cnt = 0; for (int i = 0; i < 4; i++) { int xn = x + mov[i].first, yn = y + mov[i].second; if (0 <= xn && xn < n && 0 <= yn && yn < m && G[xn][yn] != '#') cnt++; } return cnt; } void dfs(int x, int y) { for (int i = 0; i < 4; i++) { int xn = x + mov[i].first, yn = y + mov[i].second; if (xn < 0 || xn >= n || yn < 0 || yn >= m) continue; if (G[xn][yn] == '.' && possible_route(xn, yn) <= 2) { G[xn][yn] = '+'; dfs(xn, yn); } } } void solve() { cin >> n >> m; for (int i = 0; i < n; i++) { cin >> G[i]; int j = G[i].find('L'); if (j != -1) sx = i, sy = j; } dfs(sx, sy); for (int i = 0; i < n; i++) cout << G[i] << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; int n, m; const int max_n = 1e6 + 1; string G[max_n]; int sx, sy; pair<int, int> mov[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}}; int possible_route(int x, int y) { int cnt = 0; for (int i = 0; i < 4; i++) { int xn = x + mov[i].first, yn = y + mov[i].second; if (0 <= xn && xn < n && 0 <= yn && yn < m && G[xn][yn] == '.') cnt++; } return cnt; } void dfs(int x, int y) { for (int i = 0; i < 4; i++) { int xn = x + mov[i].first, yn = y + mov[i].second; if (xn < 0 || xn >= n || yn < 0 || yn >= m) continue; if (G[xn][yn] == '.' && possible_route(xn, yn) <= 1) { G[xn][yn] = '+'; dfs(xn, yn); } } } void solve() { cin >> n >> m; for (int i = 0; i < n; i++) { cin >> G[i]; int j = G[i].find('L'); if (j != -1) sx = i, sy = j; } dfs(sx, sy); for (int i = 0; i < n; i++) cout << G[i] << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) solve(); }
119	 #include <bits/stdc++.h> using namespace std; void solve() { int n; long long s = 0; cin >> n; for (int i = 0; i < n; i++) { int a; cin >> a; s += a; } if (s % n == 0) cout << "1\n"; else cout << "0\n"; } int main() { int t = 1; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; long long s = 0; cin >> n; for (int i = 0; i < n; i++) { int a; cin >> a; s += a; } if (s % n == 0) cout << "0\n"; else cout << "1\n"; } int main() { int t = 1; cin >> t; while (t--) solve(); return 0; }
119	 #include <bits/stdc++.h> using namespace std; int t; void solve() { int n; cin >> n; long long A[n + 1]; long long ans = 0; for (int i = 1; i <= n; i++) { cin >> A[i]; ans += A[i]; } if (ans % 2 == 0) cout << 0; else cout << 1; } int main() { ios_base::sync_with_stdio(NULL); cin.tie(nullptr); cout.tie(nullptr); cin >> t; while (t--) { solve(); cout << "\n"; } }	 #include <bits/stdc++.h> using namespace std; int t; void solve() { int n; cin >> n; long long A[n + 1]; long long ans = 0; for (int i = 1; i <= n; i++) { cin >> A[i]; ans += A[i]; } if (ans % n == 0) cout << 0; else cout << 1; } int main() { ios_base::sync_with_stdio(NULL); cin.tie(nullptr); cout.tie(nullptr); cin >> t; while (t--) { solve(); cout << "\n"; } }
119	 #include <bits/stdc++.h> using lli = long long int; using li = long int; using namespace std; const lli MOD{998244353}; const lli INF{(false ? (INT_MAX - 1) / 2 : (lli)1e18 + 5)}; const lli N{200005}; int main() { cout << setprecision(15); cin.tie(nullptr)->sync_with_stdio(false); li T{1}; cin >> T; while (T--) { lli n{}; cin >> n; vector<lli> arr(n); lli sum{}; for (auto &i : arr) cin >> i, sum += i; if (sum & 1) cout << 1 << '\n'; else cout << 0 << '\n'; } return 0; }	 #include <bits/stdc++.h> using lli = long long int; using li = long int; using namespace std; const lli MOD{998244353}; const lli INF{(false ? (INT_MAX - 1) / 2 : (lli)1e18 + 5)}; const lli N{200005}; int main() { cout << setprecision(15); cin.tie(nullptr)->sync_with_stdio(false); li T{1}; cin >> T; while (T--) { lli n{}; cin >> n; vector<lli> arr(n); lli sum{}; for (auto &i : arr) cin >> i, sum += i; if (sum % n) cout << 1 << '\n'; else cout << 0 << '\n'; } return 0; }
119	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int k, s = 0; for (int i = 0; i < n; i++) { cin >> k; s += k; } if (s % k == 0) cout << 0 << endl; else cout << 1 << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n; cin >> n; int k, s = 0; for (int i = 0; i < n; i++) { cin >> k; s += k; } if (s % n == 0) cout << 0 << endl; else cout << 1 << endl; } }
121	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t, cnt = 1; cin >> t; while (t--) { long long n; cin >> n; string a, b; cin >> a >> b; long long ans1 = (1LL << 62), ans2 = (1LL << 62), changehobena = 0, changehobe = 0, changehobena1 = 0, changehobe1 = 0; for (int i = 0; i < n; i++) { if (a[i] == b[i]) { changehobena++; if (a[i] == '1') changehobena1++; } else { changehobe++; if (a[i] == '1') changehobe1++; } } if ((changehobena & 1) && ((changehobena + 1) / 2) <= changehobena1) ans1 = changehobena; if ((changehobe & 1 ^ 1) && ((changehobe + 1) / 2) <= changehobe1) ans2 = changehobe; long long ans = min(ans1, ans2); if (ans == (1LL << 62)) cout << -1 << '\n'; else cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t, cnt = 1; cin >> t; while (t--) { long long n; cin >> n; string a, b; cin >> a >> b; long long ans1 = (1LL << 62), ans2 = (1LL << 62), changehobena = 0, changehobe = 0, changehobena1 = 0, changehobe1 = 0; for (int i = 0; i < n; i++) { if (a[i] == b[i]) { changehobena++; if (a[i] == '1') changehobena1++; } else { changehobe++; if (a[i] == '1') changehobe1++; } } if ((changehobena & 1) && ((changehobena + 1) / 2) == changehobena1) ans1 = changehobena; if ((changehobe & 1 ^ 1) && ((changehobe + 1) / 2) == changehobe1) ans2 = changehobe; long long ans = min(ans1, ans2); if (ans == (1LL << 62)) cout << -1 << '\n'; else cout << ans << '\n'; } return 0; }
123	 #include <bits/stdc++.h> using namespace std; using ll = long long; using vll = vector<ll>; const ll S = 2e5 + 10; vector<ll> g[S]; vector<ll> c; ll dfs(ll u, ll p) { ll ret = u; for (ll it : g[u]) { if (it != p) { ll x = dfs(it, u); if (c[x] > c[ret]) ret = x; } } c[ret]++; return ret; } ll f(ll x) { return x / 2 * (x - x / 2); } signed main() { ios::sync_with_stdio(false); cin.tie(0); ll n, k; cin >> n >> k; c.assign(n, 0); for (ll i = 0; i < n - 1; i++) { ll u, v; cin >> u >> v; u--; v--; g[u].push_back(v); g[v].push_back(u); } dfs(0, 0); sort(c.begin(), c.end(), greater<ll>()); c.erase(lower_bound(c.begin(), c.end(), 0, greater<ll>()), c.end()); ll ans = 0; ll cs = c.size(); if (k >= cs) { if (cs > n - cs) ans = cs * (n - cs); else if (k >= n - k) ans = k * (n - k); else ans = f(n); } else { ll w = 0; for (ll i = 0; i < k; i++) { w += c[i] - 1; } ll b = n - w - k; if (b > k) { b -= k; if (w >= b) ans = -w * b; else ans = -f(w + b); } else { ans = (k - b) * w; } } cout << ans << '\n'; return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using vll = vector<ll>; const ll S = 2e5 + 10; vector<ll> g[S]; vector<ll> c; ll dfs(ll u, ll p) { ll ret = u; for (ll it : g[u]) { if (it != p) { ll x = dfs(it, u); if (c[x] > c[ret]) ret = x; } } c[ret]++; return ret; } ll f(ll x) { return x / 2 * (x - x / 2); } signed main() { ios::sync_with_stdio(false); cin.tie(0); ll n, k; cin >> n >> k; c.assign(n, 0); for (ll i = 0; i < n - 1; i++) { ll u, v; cin >> u >> v; u--; v--; g[u].push_back(v); g[v].push_back(u); } dfs(0, 0); sort(c.begin(), c.end(), greater<ll>()); c.erase(lower_bound(c.begin(), c.end(), 0, greater<ll>()), c.end()); ll ans = 0; ll cs = c.size(); if (k >= cs) { if (cs > n - cs) ans = cs * (n - cs); else if (k <= n - k) ans = k * (n - k); else ans = f(n); } else { ll w = 0; for (ll i = 0; i < k; i++) { w += c[i] - 1; } ll b = n - w - k; if (b > k) { b -= k; if (w >= b) ans = -w * b; else ans = -f(w + b); } else { ans = (k - b) * w; } } cout << ans << '\n'; return 0; }
123	 #include <bits/stdc++.h> using namespace std; constexpr long long INF = 1e14; int n, k; vector<int> L[200005]; int uz[200005]; int tata[200005]; vector<pair<int, int>> frunze; void DFS(int x, int d = 0) { uz[x] = 1; for (int i : L[x]) if (!uz[i]) { tata[i] = x; DFS(i, d + 1); } if (L[x].size() == 1 && x != 1) frunze.push_back({d, x}); } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> n >> k; for (int i = 1; i < n; i++) { int x, y; cin >> x >> y; L[x].push_back(y); L[y].push_back(x); } DFS(1); if (k >= frunze.size()) { long long maxim = 0; for (int i = frunze.size(); i <= n; i++) maxim = max(maxim, 1ll * (n - i) * i); cout << maxim << '\n'; } else { sort(frunze.begin(), frunze.end(), greater<pair<int, int>>()); vector<int> moves; for (auto fr : frunze) { int scor = 0; int aux = fr.second; while (aux && uz[aux]) { uz[aux] = 0; scor++; aux = tata[aux]; } moves.push_back(scor); } sort(moves.begin(), moves.end(), greater<int>()); int nr = 0; for (int i = 0; i < k; i++) nr += moves[i]; long long minim = INF; for (int i = 0; i <= n - nr; i++) minim = min(minim, 1ll * (n - k - i) * (k - i)); cout << minim << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; constexpr long long INF = 1e14; int n, k; vector<int> L[200005]; int uz[200005]; int tata[200005]; vector<pair<int, int>> frunze; void DFS(int x, int d = 0) { uz[x] = 1; for (int i : L[x]) if (!uz[i]) { tata[i] = x; DFS(i, d + 1); } if (L[x].size() == 1 && x != 1) frunze.push_back({d, x}); } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); cin >> n >> k; for (int i = 1; i < n; i++) { int x, y; cin >> x >> y; L[x].push_back(y); L[y].push_back(x); } DFS(1); if (k >= frunze.size()) { long long maxim = 0; for (int i = frunze.size(); i <= k; i++) maxim = max(maxim, 1ll * (n - i) * i); cout << maxim << '\n'; } else { sort(frunze.begin(), frunze.end(), greater<pair<int, int>>()); vector<int> moves; for (auto fr : frunze) { int scor = 0; int aux = fr.second; while (aux && uz[aux]) { uz[aux] = 0; scor++; aux = tata[aux]; } moves.push_back(scor); } sort(moves.begin(), moves.end(), greater<int>()); int nr = 0; for (int i = 0; i < k; i++) nr += moves[i]; long long minim = INF; for (int i = 0; i <= n - nr; i++) minim = min(minim, 1ll * (n - k - i) * (k - i)); cout << minim << '\n'; } return 0; }
127	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { string s; cin >> s; string t; cin >> t; sort(s.begin(), s.end()); bool rg = false; if (t[0] == 'a' && t[1] == 'b' && t[2] == 'c') { rg = true; } if (s.size() < 3) { rg = false; } else { bool c1 = false, c2 = false, c3 = false; for (int i = 0; i < s.size(); i++) { if (s[i] == 'a') { c1 = true; } if (s[i] == 'b') { c2 = true; } if (s[i] == 'c') { c3 = true; } } if (!c1 || !c2 || !c3) { rg = false; } } if (!rg) { cout << s << endl; } else { long long p1 = 0; bool p2c = true; for (int i = 0; i < s.size(); i++) { if (s[i] == 'b' && p2c) { p1 = i; p2c = false; } if (s[i] == 'c') { swap(s[i], s[p1]); break; } } cout << s << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); int t; cin >> t; while (t--) { string s; cin >> s; string t; cin >> t; sort(s.begin(), s.end()); bool rg = false; if (t[0] == 'a' && t[1] == 'b' && t[2] == 'c') { rg = true; } if (s.size() < 3) { rg = false; } else { bool c1 = false, c2 = false, c3 = false; for (int i = 0; i < s.size(); i++) { if (s[i] == 'a') { c1 = true; } if (s[i] == 'b') { c2 = true; } if (s[i] == 'c') { c3 = true; } } if (!c1 || !c2 || !c3) { rg = false; } } if (!rg) { cout << s << endl; } else { long long p1 = 0; bool p2c = true; for (int i = 0; i < s.size(); i++) { if (s[i] == 'b' && p2c) { p1 = i; p2c = false; } if (s[i] == 'c') { swap(s[i], s[p1]); p1++; } } cout << s << endl; } } return 0; }
127	 #include <bits/stdc++.h> const long long INF = 1e18; const int32_t M = 1e9 + 7; using namespace std; long long nextprime(long long x) { x++; long long n = x; long long c = 0, c1 = 0; while (true) { long long x1 = (long long)(sqrt(n)); c1 = 0; for (long long i = 2; i < x1 + 1; i++) { if (n % i == 0) { c1++; break; } } if (c1 == 0) { break; } else n++; } return n; } long long binpow(long long a, long long b) { a %= M; long long res = 1; while (b > 0) { if (b & 1) res = res * a % M; a = a * a % M; b >>= 1; } return res; } void Solve() { string s, t; cin >> s >> t; sort(s.begin(), s.end()); vector<char> cha(26); for (auto x : s) { cha[x - 'a']++; } if (t != "abc" || !cha[0] || !cha[1] || !cha[2]) { cout << s << endl; return; } else { while (cha[0]--) cout << 'a'; while (cha[2]--) cout << 'c'; while (cha[1]--) cout << 'b'; for (long long i = 3; i < 26; i++) while (cha[i]--) { cout << char('a' - i); } cout << endl; return; } } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tcase; cin >> tcase; while (tcase--) { Solve(); } }	 #include <bits/stdc++.h> const long long INF = 1e18; const int32_t M = 1e9 + 7; using namespace std; long long nextprime(long long x) { x++; long long n = x; long long c = 0, c1 = 0; while (true) { long long x1 = (long long)(sqrt(n)); c1 = 0; for (long long i = 2; i < x1 + 1; i++) { if (n % i == 0) { c1++; break; } } if (c1 == 0) { break; } else n++; } return n; } long long binpow(long long a, long long b) { a %= M; long long res = 1; while (b > 0) { if (b & 1) res = res * a % M; a = a * a % M; b >>= 1; } return res; } void Solve() { string s, t; cin >> s >> t; sort(s.begin(), s.end()); vector<char> cha(26); for (auto x : s) { cha[x - 'a']++; } if (t != "abc" || !cha[0] || !cha[1] || !cha[2]) { cout << s << endl; return; } else { while (cha[0]--) cout << 'a'; while (cha[2]--) cout << 'c'; while (cha[1]--) cout << 'b'; for (long long i = 3; i < 26; i++) while (cha[i]--) { cout << char('a' + i); } cout << endl; return; } } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long tcase; cin >> tcase; while (tcase--) { Solve(); } }
128	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n, a, b, c, i, v; cin >> n; if (n % 2 == 0) { n--; cout << n / 2 + 1 << " " << n / 2 << " " << "1\n"; } else { n--; if ((n / 4) % 2 == 0) { cout << n / 2 + 1 << " " << n / 2 - 1 << " " << "1\n"; } else { cout << n / 2 + 2 << " " << n / 2 - 2 << " " << "1\n"; } } } }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { int n, a, b, c, i, v; cin >> n; if (n % 2 == 0) { n--; cout << n / 2 + 1 << " " << n / 2 << " " << "1\n"; } else { n--; if ((n / 2) % 2 == 0) { cout << n / 2 + 1 << " " << n / 2 - 1 << " " << "1\n"; } else { cout << n / 2 + 2 << " " << n / 2 - 2 << " " << "1\n"; } } } }
129	 #include <bits/stdc++.h> using namespace std; void fun() { long long a, s, d, i, j, k; cin >> a; vector<long long> vec; set<pair<long long, long long> > se; set<pair<long long, long long> >::iterator ii; se.insert({1000000000000, 1000000000000}); for (i = 0; i < a; i++) { cin >> s; se.insert({s, i}); } long long otv = 0; for (i = a; i >= 1; i--) { ii = se.lower_bound({i, 0}); long long a1, a2; a1 = (*ii).first; a2 = (*ii).second; if (a1 == i) { se.erase(*ii); } else { ii = se.upper_bound({i * 2 + 1, 0}); a1 = (*ii).first; a2 = (*ii).second; if (a1 == 1000000000000) { cout << -1 << endl; return; } se.erase(*ii); otv++; } } cout << otv << endl; } int main() { long long a, i; cin >> a; for (i = 0; i < a; i++) fun(); }	 #include <bits/stdc++.h> using namespace std; void fun() { long long a, s, d, i, j, k; cin >> a; vector<long long> vec; set<pair<long long, long long> > se; set<pair<long long, long long> >::iterator ii; se.insert({1000000000000, 1000000000000}); for (i = 0; i < a; i++) { cin >> s; se.insert({s, i}); } long long otv = 0; for (i = a; i >= 1; i--) { ii = se.lower_bound({i, 0}); long long a1, a2; a1 = (*ii).first; a2 = (*ii).second; if (a1 == i) { se.erase(*ii); } else { ii = se.lower_bound({i * 2 + 1, 0}); a1 = (*ii).first; a2 = (*ii).second; if (a1 == 1000000000000) { cout << -1 << endl; return; } se.erase(*ii); otv++; } } cout << otv << endl; } int main() { long long a, i; cin >> a; for (i = 0; i < a; i++) fun(); }
129	 #include <bits/stdc++.h> using namespace std; inline void intxt() {} inline void read(int &x) { int f = 1; x = 0; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } x *= f; } inline void read(long long &x) { long long f = 1; x = 0; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } x *= f; } const long long mod = 998244353; const int N = 4e5 + 5; const int M = 1e6 + 5; int n, m, k; int a[N]; multiset<int> cup; int main() { intxt(); int casen; scanf("%d", &casen); for (int LP = 1; LP <= casen; ++LP) { cin >> n; cup.clear(); for (int i = 1; i <= n; i++) { cin >> a[i]; cup.insert(a[i]); } int ans = 0; for (int i = n; i >= 1; i--) { if (cup.count(i) >= 1) { auto x = cup.lower_bound(i); cup.erase(*x); } else { auto x = cup.upper_bound(i * 2); if (x == cup.end()) { ans = -1; break; } cup.erase(*x); ans++; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; inline void intxt() {} inline void read(int &x) { int f = 1; x = 0; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } x *= f; } inline void read(long long &x) { long long f = 1; x = 0; char ch = getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); } x *= f; } const long long mod = 998244353; const int N = 4e5 + 5; const int M = 1e6 + 5; int n, m, k; int a[N]; multiset<int> cup; int main() { intxt(); int casen; scanf("%d", &casen); for (int LP = 1; LP <= casen; ++LP) { cin >> n; cup.clear(); for (int i = 1; i <= n; i++) { cin >> a[i]; cup.insert(a[i]); } int ans = 0; for (int i = n; i >= 1; i--) { if (cup.count(i) >= 1) { auto x = cup.lower_bound(i); cup.erase(x); } else { auto x = cup.upper_bound(i * 2); if (x == cup.end()) { ans = -1; break; } cup.erase(x); ans++; } } cout << ans << endl; } return 0; }
132	 #include <bits/stdc++.h> using namespace std; int main() { int arr[8]; int test; cin >> test; int i; for (i = 0; i < test; i++) { for (int j = 0; j < 7; j++) { cin >> arr[j]; } cout << arr[0] << " " << arr[1] << " " << arr[7] - arr[0] - arr[1] << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int arr[8]; int test; cin >> test; int i; for (i = 0; i < test; i++) { for (int j = 0; j < 7; j++) { cin >> arr[j]; } cout << arr[0] << " " << arr[1] << " " << arr[6] - arr[0] - arr[1] << "\n"; } return 0; }
132	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { vector<long long> v(7); for (auto &i : v) cin >> i; long long a = v[0]; long long b = v[1]; long long c = v[5] - v[2]; cout << a << ' ' << b << ' ' << c << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { vector<long long> v(7); for (auto &i : v) cin >> i; long long a = v[0]; long long b = v[1]; long long c = v[5] - v[1]; cout << a << ' ' << b << ' ' << c << '\n'; } return 0; }
132	 #include <bits/stdc++.h> using namespace std; int a[7]; int main() { int n; cin >> n; while (n--) { for (int i = 0; i <= 7; i++) { cin >> a[i]; } if ((a[6] - a[0]) - a[1] == a[2]) { cout << a[0] << ' ' << a[1] << ' ' << a[2] << '\n'; continue; } if ((a[6] - a[0]) - a[1] == a[3]) { cout << a[0] << ' ' << a[1] << ' ' << a[3] << '\n'; continue; } } }	 #include <bits/stdc++.h> using namespace std; int a[7]; int main() { int n; cin >> n; while (n--) { for (int i = 0; i < 7; i++) { cin >> a[i]; } if ((a[6] - a[0]) - a[1] == a[2]) { cout << a[0] << ' ' << a[1] << ' ' << a[2] << '\n'; continue; } if ((a[6] - a[0]) - a[1] == a[3]) { cout << a[0] << ' ' << a[1] << ' ' << a[3] << '\n'; continue; } } }
132	 #include <bits/stdc++.h> using namespace std; int main() { long long b[6]; int n; cin >> n; long long a1, a2, a3; for (int i = 0; i < n; i++) { for (int j = 0; j < 7; j++) { cin >> b[j]; } a1 = b[0]; a2 = b[1]; if (b[2] = b[1] + b[0]) a3 = b[3]; else a3 = b[2]; cout << a3 << " " << a2 << " " << a1; if (i != n - 1) cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long b[6]; int n; cin >> n; long long a1, a2, a3; for (int i = 0; i < n; i++) { for (int j = 0; j < 7; j++) { cin >> b[j]; } a1 = b[0]; a2 = b[1]; if (b[2] == b[1] + b[0]) a3 = b[3]; else a3 = b[2]; cout << a3 << " " << a2 << " " << a1; if (i != n - 1) cout << "\n"; } return 0; }
132	 #include <bits/stdc++.h> using namespace std; long long int mod = 1e9 + 7; char str[3025]; long long int dp[3025][3025]; int t; int main() { cin >> t; while (t--) { int arr[100]; for (int i = 1; i <= 7; i++) { cin >> arr[i]; } cout << arr[1] << " " << arr[2] << " " << (arr[7] - arr[1] - arr[0]) << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long int mod = 1e9 + 7; char str[3025]; long long int dp[3025][3025]; int t; int main() { cin >> t; while (t--) { int arr[100]; for (int i = 1; i <= 7; i++) { cin >> arr[i]; } cout << arr[1] << " " << arr[2] << " " << (arr[7] - arr[1] - arr[2]) << "\n"; } }
132	 #include <bits/stdc++.h> using namespace std; long long int mod = 1e9 + 7; char str[3025]; long long int dp[3025][3025]; int t; int main() { cin >> t; while (t--) { int arr[100]; for (int i = 1; i <= 7; i++) { cin >> arr[0]; } cout << arr[1] << " " << arr[2] << " " << (arr[7] - arr[1] - arr[0]) << "\n"; } }	 #include <bits/stdc++.h> using namespace std; long long int mod = 1e9 + 7; char str[3025]; long long int dp[3025][3025]; int t; int main() { cin >> t; while (t--) { int arr[100]; for (int i = 1; i <= 7; i++) { cin >> arr[i]; } cout << arr[1] << " " << arr[2] << " " << (arr[7] - arr[1] - arr[2]) << "\n"; } }
132	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const long double pi = 2 * acos(0.0); const int mod = 1e9 + 7; const int maxn = 2e5 + 5; void solve() { int n = 7; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; cout << a[0] << ' ' << a[1] << ' '; int c = a[2]; if (a[0] + a[1] + a[2] == a[7]) { cout << a[2] << '\n'; } else { cout << a[3] << '\n'; } return; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; using ll = long long; using ld = long double; const long double pi = 2 * acos(0.0); const int mod = 1e9 + 7; const int maxn = 2e5 + 5; void solve() { int n = 7; int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; cout << a[0] << ' ' << a[1] << ' '; int c = a[2]; if (a[0] + a[1] + a[2] == a[6]) { cout << a[2] << '\n'; } else { cout << a[3] << '\n'; } return; } int main() { ios::sync_with_stdio(false); cin.tie(0); int t = 1; cin >> t; while (t--) { solve(); } return 0; }
133	 #include <bits/stdc++.h> using namespace std; const int N = 7; int t, n; string s[N]; signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { string ans; cin >> n; n -= 2; for (int i = 0; i < n; ++i) { cin >> s[i]; } ans += s[0][0]; bool sech = 0; for (int i = 0; i < n - 1; ++i) { if (s[i][1] != s[i + 1][0]) { for (int j = 0; j < n; ++j) { if (i + 1 == j) { ans += s[j]; continue; } ans += s[j][1]; } sech = 1; break; } } if (!sech) { for (int i = 0; i < n; ++i) { ans += s[i][1]; } ans += "aa"; } cout << ans; cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e4; int t, n; string s[N]; signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { string ans; cin >> n; n -= 2; for (int i = 0; i < n; ++i) { cin >> s[i]; } ans += s[0][0]; bool sech = 0; for (int i = 0; i < n - 1; ++i) { if (s[i][1] != s[i + 1][0]) { for (int j = 0; j < n; ++j) { if (i + 1 == j) { ans += s[j]; continue; } ans += s[j][1]; } sech = 1; break; } } if (!sech) { for (int i = 0; i < n; ++i) { ans += s[i][1]; } ans += "a"; } cout << ans; cout << "\n"; } return 0; }
133	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { int n, i, j = 0; scanf("%d ", &n); char s[2 * n + n], q[2 * n + n]; gets(s); for (i = 0; s[i] != '\0'; i++) { if (s[i] != ' ') { q[j++] = s[i]; } } q[i] = '\0'; int f = 0; printf("%c", q[0]); for (i = 2; i < strlen(q) - 1; i = i + 2) { if (q[i] != q[i - 1]) { printf("%c%c", q[i - 1], q[i]); f = 1; } else { printf("%c", q[i]); } } if (f == 1) printf("%c\n", q[strlen(q) - 1]); if (f == 0) { printf("%ca\n", q[strlen(q) - 2]); } } return 0; }	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { int n, i, j = 0; scanf("%d ", &n); char s[2 * n + n], q[2 * n + n]; gets(s); for (i = 0; s[i] != '\0'; i++) { if (s[i] != ' ') { q[j++] = s[i]; } } q[j] = '\0'; int f = 0; printf("%c", q[0]); for (i = 2; i < strlen(q) - 1; i = i + 2) { if (q[i] != q[i - 1]) { printf("%c%c", q[i - 1], q[i]); f = 1; } else { printf("%c", q[i]); } } if (f == 1) printf("%c\n", q[strlen(q) - 1]); if (f == 0) { printf("%ca\n", q[strlen(q) - 1]); } } return 0; }
133	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { int n, i, j = 0; scanf("%d ", &n); char s[2 * n + n], q[2 * n + n]; gets(s); for (i = 0; s[i] != '\0'; i++) { if (s[i] != ' ') { q[j++] = s[i]; } } q[i] = '\0'; int f = 0; printf("%c", q[0]); for (i = 2; i < strlen(q) - 1; i = i + 2) { if (q[i] != q[i - 1]) { printf("%c%c", q[i - 1], q[i]); f = 1; } else { printf("%c", q[i]); } } if (f == 1) printf("%c\n", q[strlen(q) - 1]); if (f == 0) { printf("%ca\n", q[strlen(q) - 1]); } } return 0; }	 #include <bits/stdc++.h> int main() { int t; scanf("%d", &t); while (t--) { int n, i, j = 0; scanf("%d ", &n); char s[2 * n + n], q[2 * n + n]; gets(s); for (i = 0; s[i] != '\0'; i++) { if (s[i] != ' ') { q[j++] = s[i]; } } q[j] = '\0'; int f = 0; printf("%c", q[0]); for (i = 2; i < strlen(q) - 1; i = i + 2) { if (q[i] != q[i - 1]) { printf("%c%c", q[i - 1], q[i]); f = 1; } else { printf("%c", q[i]); } } if (f == 1) printf("%c\n", q[strlen(q) - 1]); if (f == 0) { printf("%ca\n", q[strlen(q) - 1]); } } return 0; }
134	 #include <bits/stdc++.h> using namespace std; long long __gcd(long long a, long long b) { int r; while (b > 0) { r = a % b; a = b; b = r; } return a; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long a[101]; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 0, y = 0; for (int i = 0; i < n; i++) { if (i % 2 == 0) x = __gcd(x, a[i]); else y = __gcd(y, a[i]); } int sum1 = 1, sum2 = 1; for (int i = 0; i < n; i++) { if (i % 2 == 0 && a[i] % y == 0) sum1 = 0; if (i % 2 == 1 && a[i] % x == 0) sum2 = 0; } if (sum2) cout << x << endl; else if (sum1) cout << y << endl; else cout << 0 << endl; } }	 #include <bits/stdc++.h> using namespace std; long long __gcd(long long a, long long b) { long long r; while (b > 0) { r = a % b; a = b; b = r; } return a; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long a[101]; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 0, y = 0; for (int i = 0; i < n; i++) { if (i % 2 == 0) x = __gcd(x, a[i]); else y = __gcd(y, a[i]); } int sum1 = 1, sum2 = 1; for (int i = 0; i < n; i++) { if (i % 2 == 0 && a[i] % y == 0) sum1 = 0; if (i % 2 == 1 && a[i] % x == 0) sum2 = 0; } if (sum2) cout << x << endl; else if (sum1) cout << y << endl; else cout << 0 << endl; } }
134	 #include <bits/stdc++.h> using namespace std; long long __gcd(long long a, long long b) { int r; while (b > 0) { r = a % b; a = b; b = r; } return a; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long a[100]; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 0, y = 0; for (int i = 0; i < n; i++) { if (i % 2 == 0) x = __gcd(x, a[i]); else y = __gcd(y, a[i]); } int sum1 = 1, sum2 = 1; for (int i = 0; i < n; i++) { if (i % 2 == 0 && a[i] % y == 0) sum1 = 0; if (i % 2 == 1 && a[i] % x == 0) sum2 = 0; } if (sum2) cout << x << endl; else if (sum1) cout << y << endl; else cout << 0 << endl; } }	 #include <bits/stdc++.h> using namespace std; long long __gcd(long long a, long long b) { long long r; while (b > 0) { r = a % b; a = b; b = r; } return a; } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long a[101]; for (int i = 0; i < n; i++) cin >> a[i]; long long x = 0, y = 0; for (int i = 0; i < n; i++) { if (i % 2 == 0) x = __gcd(x, a[i]); else y = __gcd(y, a[i]); } int sum1 = 1, sum2 = 1; for (int i = 0; i < n; i++) { if (i % 2 == 0 && a[i] % y == 0) sum1 = 0; if (i % 2 == 1 && a[i] % x == 0) sum2 = 0; } if (sum2) cout << x << endl; else if (sum1) cout << y << endl; else cout << 0 << endl; } }
134	 #include <bits/stdc++.h> using namespace std; mt19937 rnd(time(0)); template <class T> long long upmax(T &a, T b) { return (b > a) ? a = b, 1 : 0; } template <class T> long long upmin(T &a, T b) { return (b < a) ? a = b, 1 : 0; } long long gcd(long long a, long long b) { if (a == 0) return b; return gcd(b % a, a); } void solve() { int n; cin >> n; vector<long long> arr(n); for (auto &i : arr) cin >> i; long long g[2]; memset(g, -1, sizeof(g)); for (int i = 0; i < n; i++) { if (g[i % 2] == -1) g[i % 2] = arr[i]; else g[i % 2] = gcd(g[i % 2], arr[i]); } auto ok = [&](int d) { int color = -1; for (int i = 0; i < n; i++) { if (arr[i] % d == 0) { if (color == 0) { return 0; } color = 0; } else { if (color == 1) { return 0; } color = 1; } } return 1; }; if (ok(g[0])) { cout << g[0] << '\n'; } else if (ok(g[1])) { cout << g[1] << '\n'; } else { cout << 0 << '\n'; } } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t-- > 0) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; mt19937 rnd(time(0)); template <class T> long long upmax(T &a, T b) { return (b > a) ? a = b, 1 : 0; } template <class T> long long upmin(T &a, T b) { return (b < a) ? a = b, 1 : 0; } long long gcd(long long a, long long b) { if (a == 0) return b; return gcd(b % a, a); } void solve() { int n; cin >> n; vector<long long> arr(n); for (auto &i : arr) cin >> i; long long g[2]; memset(g, -1, sizeof(g)); for (int i = 0; i < n; i++) { if (g[i % 2] == -1) g[i % 2] = arr[i]; else g[i % 2] = gcd(g[i % 2], arr[i]); } auto ok = [&](long long d) { int color = -1; for (int i = 0; i < n; i++) { if (arr[i] % d == 0) { if (color == 0) { return 0; } color = 0; } else { if (color == 1) { return 0; } color = 1; } } return 1; }; if (ok(g[0])) { cout << g[0] << '\n'; } else if (ok(g[1])) { cout << g[1] << '\n'; } else { cout << 0 << '\n'; } } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t-- > 0) { solve(); } return 0; }
134	 #include <bits/stdc++.h> using namespace std; long long int gcd(long long int a, long long int b) { if (a == 0) return b; return gcd(b % a, a); } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; int arr[2]; long long int x = 0, y = 0; for (int i = 0; i < n; i += 2) { x = gcd(x, a[i]); } arr[0] = x; for (int i = 1; i < n; i += 2) { y = gcd(y, a[i]); } arr[1] = y; int count; bool isans = false; for (int i = 0; i < 2; i++) { int flag = 0; if (a[0] % arr[i] == 0) count = 0; else count = 1; for (int j = 1; j < n; j++) { if (count == 0 && a[j] % arr[i] != 0) { count = 1; } else if (count == 1 && a[j] % arr[i] == 0) { count = 0; } else { flag = 1; break; } } if (flag == 0) { cout << arr[i] << endl; isans = true; break; } } if (isans == false) cout << 0 << endl; } }	 #include <bits/stdc++.h> using namespace std; long long int gcd(long long int a, long long int b) { if (a == 0) return b; return gcd(b % a, a); } int main() { int t; cin >> t; while (t--) { int n; cin >> n; long long int a[n]; for (int i = 0; i < n; i++) cin >> a[i]; long long int arr[2]; long long int x = 0, y = 0; for (int i = 0; i < n; i += 2) { x = gcd(x, a[i]); } arr[0] = x; for (int i = 1; i < n; i += 2) { y = gcd(y, a[i]); } arr[1] = y; int count; bool isans = false; for (int i = 0; i < 2; i++) { int flag = 0; if (a[0] % arr[i] == 0) count = 0; else count = 1; for (int j = 1; j < n; j++) { if (count == 0 && a[j] % arr[i] != 0) { count = 1; } else if (count == 1 && a[j] % arr[i] == 0) { count = 0; } else { flag = 1; break; } } if (flag == 0) { cout << arr[i] << endl; isans = true; break; } } if (isans == false) cout << 0 << endl; } }
135	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); long long int t; cin >> t; for (long long int k = 1; k <= t; k++) { int n, w; cin >> n >> k; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; sort(arr, arr + n); long long sum = 0; for (int i = n - 1; i >= n - w; i--) { sum += arr[i - w] / arr[i]; } for (int i = n - 2 * w - 1; i >= 0; i--) sum += arr[i]; cout << sum << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); long long int t; cin >> t; for (long long int k = 1; k <= t; k++) { int n, w; cin >> n >> w; int arr[n]; for (int i = 0; i < n; i++) cin >> arr[i]; sort(arr, arr + n); long long sum = 0; for (int i = n - 1; i >= n - w; i--) { sum += arr[i - w] / arr[i]; } for (int i = n - 2 * w - 1; i >= 0; i--) sum += arr[i]; cout << sum << endl; } }
136	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; const long long N = 2e3 + 100; const long long MOD = 1e9 + 7; const long long inf = 2e9; const long double eps = 1e-12; const long double EPS = 1e-10; long long rx[] = {1, -1, 0, 0}; long long ry[] = {0, 0, 1, -1}; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> a(n); long long sum = 0; for (long long i = 0; i < n; ++i) { cin >> a[i]; sum += a[i]; } long long k = n * (n + 1) / 2; if (sum % k) { cout << "NO" << '\n'; continue; } long long s = sum / k; vector<long long> v(n); bool ok = 1; for (long long i = 0; i < n && ok; ++i) { long long j = i - 1; if (j < 0) j = n - 1; long long x = a[i] - a[j] - s; x = -x; if (x % n || x / n == 0) ok = 0; else v[i] = x / n; } if (!ok) { cout << "NO" << '\n'; continue; } cout << "YES\n"; for (auto to : v) cout << to << ' '; cout << '\n'; } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; const long long N = 2e3 + 100; const long long MOD = 1e9 + 7; const long long inf = 2e9; const long double eps = 1e-12; const long double EPS = 1e-10; long long rx[] = {1, -1, 0, 0}; long long ry[] = {0, 0, 1, -1}; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; vector<long long> a(n); long long sum = 0; for (long long i = 0; i < n; ++i) { cin >> a[i]; sum += a[i]; } long long k = n * (n + 1) / 2; if (sum % k) { cout << "NO" << '\n'; continue; } long long s = sum / k; vector<long long> v(n); bool ok = 1; for (long long i = 0; i < n && ok; ++i) { long long j = i - 1; if (j < 0) j = n - 1; long long x = a[i] - a[j] - s; x = -x; if (x % n || x / n <= 0) ok = 0; else v[i] = x / n; } if (!ok) { cout << "NO" << '\n'; continue; } cout << "YES\n"; for (auto to : v) cout << to << ' '; cout << '\n'; } return 0; }
136	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { int n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<int> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x == 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { i64 n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<int> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x <= 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }
136	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { i64 n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<int> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x == 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { i64 n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<int> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x <= 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }
136	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { i64 n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<i64> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x == 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }	 #include <bits/stdc++.h> using namespace std; using i64 = long long; void Solve() { i64 n; cin >> n; vector<int> b(n); for (int i = 0; i < n; i++) { cin >> b[i]; } i64 sum = accumulate(b.begin(), b.end(), 0ll); if (sum % (n * (n + 1) / 2) != 0) { cout << "NO\n"; return; } i64 c = sum / (n * (n + 1) / 2); vector<int> a(n); for (int i = 0; i < n; i++) { i64 x = c - b[i] + b[(i - 1 + n) % n]; if (x <= 0 || x % n != 0) { cout << "NO\n"; return; } a[i] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << ' '; } cout << '\n'; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); int t; cin >> t; while (t--) { Solve(); } }
136	 #include <bits/stdc++.h> using namespace std; long long int a[500005], b[500005], c[500005], d[500005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t, i, j, k, n, m, w, y, z, x, l, r, k1, k2; cin >> t; while (t--) { cin >> n; x = 0; for (i = 1; i <= n; i++) cin >> b[i], x += b[i]; y = (n * (n + 1)) / 2; if (x % y != 0) { cout << "NO" << endl; continue; } x /= y; z = 0; for (i = 1; i <= n; i++) { y = x + b[((i + n - 2) % n) + 1] - b[i]; if (y == 0 || (y % n != 0)) { z = 1; break; } a[i] = y / n; } if (z) cout << "NO" << endl; else { cout << "YES" << endl; for (i = 1; i <= n; i++) cout << a[i] << " "; cout << endl; } } }	 #include <bits/stdc++.h> using namespace std; long long int a[500005], b[500005], c[500005], d[500005]; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long int t, i, j, k, n, m, w, y, z, x, l, r, k1, k2; cin >> t; while (t--) { cin >> n; x = 0; for (i = 1; i <= n; i++) cin >> b[i], x += b[i]; y = (n * (n + 1)) / 2; if (x % y != 0) { cout << "NO" << endl; continue; } x /= y; z = 0; for (i = 1; i <= n; i++) { y = x + b[((i + n - 2) % n) + 1] - b[i]; if (y <= 0 || (y % n != 0)) { z = 1; break; } a[i] = y / n; } if (z) cout << "NO" << endl; else { cout << "YES" << endl; for (i = 1; i <= n; i++) cout << a[i] << " "; cout << endl; } } }
136	 #include <bits/stdc++.h> using namespace std; const int N = 5e4 + 10; long long a[N], b[N]; int main() { int t; cin >> t; while (t--) { long long n; cin >> n; long long cnt = 0; for (int i = 1; i <= n; i++) cin >> a[i], cnt += a[i]; if (cnt % ((n * n + n) / 2) != 0) { cout << "NO" << endl; continue; } cnt /= (n * n + n) / 2; bool flag = 1; for (int i = n; i <= 2 * n - 1; i++) if ((a[(i - 1) % n + 1] - a[i % n + 1] + cnt) % n == 0 && (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) != 0) b[i - n + 1] = (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) / n; else flag = 0; if (flag) { cout << "YES" << endl; for (int i = 1; i <= n; i++) cout << b[i] << " "; cout << endl; } else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 4e4 + 10; long long a[N], b[N]; int main() { int t; cin >> t; while (t--) { long long n; cin >> n; long long cnt = 0; for (int i = 1; i <= n; i++) cin >> a[i], cnt += a[i]; if (cnt % ((n * n + n) / 2) != 0) { cout << "NO" << endl; continue; } cnt /= (n * n + n) / 2; bool flag = 1; for (int i = n; i <= 2 * n - 1; i++) if ((a[(i - 1) % n + 1] - a[i % n + 1] + cnt) % n == 0 && (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) > 0) b[i - n + 1] = (a[(i - 1) % n + 1] - a[i % n + 1] + cnt) / n; else flag = 0; if (flag) { cout << "YES" << endl; for (int i = 1; i <= n; i++) cout << b[i] << " "; cout << endl; } else cout << "NO" << endl; } return 0; }
136	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; vector<int> b(n), a(n); long long int sa, sb = 0, t_n = (long long int)n * (n + 1) / 2, x; for (int i = 0; i < n; i++) { cin >> b[i]; sb += b[i]; } if (sb % t_n != 0) { cout << "NO\n"; return; } sa = sb / n; for (int i = n - 1; i >= 0; i--) { x = b[i] - b[(i + 1) % n] + sa; if (x % n != 0 || x <= 0) { cout << "NO\n"; return; } a[(i + 1) % n] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << " "; } cout << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; cin >> n; vector<int> b(n), a(n); long long int sa, sb = 0, t_n = (long long int)n * (n + 1) / 2, x; for (int i = 0; i < n; i++) { cin >> b[i]; sb += b[i]; } if (sb % t_n != 0) { cout << "NO\n"; return; } sa = sb / t_n; for (int i = n - 1; i >= 0; i--) { x = b[i] - b[(i + 1) % n] + sa; if (x % n != 0 || x <= 0) { cout << "NO\n"; return; } a[(i + 1) % n] = x / n; } cout << "YES\n"; for (int i = 0; i < n; i++) { cout << a[i] << " "; } cout << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; while (t--) { solve(); } return 0; }
136	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> ls(n); for (int i = 0; i < n; i++) cin >> ls[i]; long long sum = 0; for (int i = 0; i < n; i++) sum += ls[i]; if (sum % (n * (n + 1) / 2) != 0) { cout << "NO" << '\n'; return; } int s = sum / (n * (n + 1) / 2); vector<long long> ans(n); for (int i = 0; i < n; i++) { long long k = ls[i] - s; long long j = ((i - 1 + n) % n); long long y = ls[j] - k; if (y == 0 or y % n) { cout << "NO" << '\n'; return; } ans[i] = y / n; } cout << "YES" << '\n'; for (auto i : ans) cout << i << " "; cout << '\n'; } int main() { std::ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; int T; cin >> T; while (T--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> ls(n); for (int i = 0; i < n; i++) cin >> ls[i]; long long sum = 0; for (int i = 0; i < n; i++) sum += ls[i]; if (sum % (n * (n + 1) / 2) != 0) { cout << "NO" << '\n'; return; } int s = sum / (n * (n + 1) / 2); vector<long long> ans(n); for (int i = 0; i < n; i++) { long long k = ls[i] - s; long long j = ((i - 1 + n) % n); long long y = ls[j] - k; if (y <= 0 or y % n) { cout << "NO" << '\n'; return; } ans[i] = y / n; } cout << "YES" << '\n'; for (auto i : ans) cout << i << " "; cout << '\n'; } int main() { std::ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); ; int T; cin >> T; while (T--) { solve(); } return 0; }
136	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cout << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cout << ' ' << H; dbg_out(T...); } int32_t main() { ios::sync_with_stdio(false); cin.tie(0); long long tt; cin >> tt; while (tt--) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; i++) cin >> a[i]; long long sum = accumulate((a).begin(), (a).end(), 0ll); long long tot = (n * (n + 1)) / 2; if (sum % tot || sum / tot < n) { cout << "NO\n"; continue; } sum /= tot; vector<long long> ans(n); long long bad = 0; for (long long i = 0; i < n; i++) { long long diff = a[(i + 1) % n] - a[i]; if ((sum - diff) % n) bad = 1; ans[(i + 1) % n] = (sum - diff) / n; }; long long s = 0; for (auto x : ans) bad |= (x == 0), s += x; if (bad || sum != s) cout << "NO\n"; else { cout << "YES\n"; for (auto x : ans) cout << x << " "; cout << "\n"; } } }	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cout << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cout << ' ' << H; dbg_out(T...); } int32_t main() { ios::sync_with_stdio(false); cin.tie(0); long long tt; cin >> tt; while (tt--) { long long n; cin >> n; vector<long long> a(n); for (long long i = 0; i < n; i++) cin >> a[i]; long long sum = accumulate((a).begin(), (a).end(), 0ll); long long tot = (n * (n + 1)) / 2; if (sum % tot || sum / tot < n) { cout << "NO\n"; continue; } sum /= tot; vector<long long> ans(n); long long bad = 0; for (long long i = 0; i < n; i++) { long long diff = a[(i + 1) % n] - a[i]; if ((sum - diff) % n) bad = 1; ans[(i + 1) % n] = (sum - diff) / n; }; long long s = 0; for (auto x : ans) bad |= (x <= 0), s += x; if (bad || sum != s) cout << "NO\n"; else { cout << "YES\n"; for (auto x : ans) cout << x << " "; cout << "\n"; } } }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t, s, d; cin >> t; while (t--) { int count = 0; string a; cin >> a; s = a.size(); d = s / 2; if (s % 2 == 1) { cout << "no1" << endl; } else { for (int i = 0; i < d; i++) { if (a[i] != a[i + d]) { count = 1; break; } } if (count == 1) cout << "no" << endl; else cout << "yes" << endl; } } }	 #include <bits/stdc++.h> using namespace std; int main() { int t, s, d; cin >> t; while (t--) { int count = 0; string a; cin >> a; s = a.size(); d = s / 2; if (s % 2 == 1) { cout << "no" << endl; } else { for (int i = 0; i < d; i++) { if (a[i] != a[i + d]) { count = 1; break; } } if (count == 1) cout << "no" << endl; else cout << "yes" << endl; } } }
139	 #include <bits/stdc++.h> int consider(char *s) { int len = strlen(s); if (len % 2 != 0) return 0; int i = 0, j = len / 2; while (j < len) { if (s[i] != s[j]) return 0; i++; j++; } return 1; } void solution() { int T; scanf("%s", &T); for (int t = 0; t < T; t++) { char s[1000]; scanf("%s", s); if (consider(s)) printf("YES\n"); else printf("NO\n"); } } int main() { solution(); return 0; }	 #include <bits/stdc++.h> int consider(char *s) { int len = strlen(s); if (len % 2 != 0) return 0; int i = 0, j = len / 2; while (j < len) { if (s[i] != s[j]) return 0; i++; j++; } return 1; } void solution() { int times; scanf("%d", &times); for (int t = 0; t < times; t++) { char s[1000]; scanf("%s", s); if (consider(s)) printf("YES\n"); else printf("NO\n"); } } int main() { solution(); return 0; }
139	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int t; string s; int main() { ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); cin >> t; for (int c = 1; c <= t; ++c) { int flag = 0; cin >> s; if (s.length() % 2 != 0) { cout << "NO" << endl; } else { for (int i = 0; i < (s.length() / 2) - 1; ++i) { if (s[i] != s[(s.length() / 2) + i]) { flag = 1; } } if (flag == 0) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }	 #include <bits/stdc++.h> #pragma GCC optimize("Ofast") using namespace std; int t; string s; int main() { ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL); cin >> t; for (int c = 1; c <= t; ++c) { int flag = 0; cin >> s; if (s.length() % 2 != 0) { cout << "NO" << endl; } else { for (int i = 0; i <= (s.length() / 2) - 1; ++i) { if (s[i] != s[(s.length() / 2) + i]) { flag = 1; } } if (flag == 0) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }
139	 #include <bits/stdc++.h> int main(void) { int t, len, i, flag; char c[102]; scanf("%d", &t); while (t--) { flag = 0; scanf("%s", c); len = strlen(c); if (len % 2 == 0) { flag = 1; for (i = 0; i < (len / 2) && flag; i++) if (c[i] != c[i + len / 2]) flag = 0; } if (flag) printf("YES"); else printf("NO"); } return 0; }	 #include <bits/stdc++.h> int main(void) { int t, len, i, flag; char c[102]; scanf("%d", &t); while (t--) { flag = 0; scanf("%s", c); len = strlen(c); if (len % 2 == 0) { flag = 1; for (i = 0; i < (len / 2) && flag; i++) if (c[i] != c[i + len / 2]) flag = 0; } if (flag) printf("YES\n"); else printf("NO\n"); } return 0; }
139	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); } const int MAX_N = 1e5 + 5; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long double EPS = 1e-9; void solve() { string str; cin >> str; int len = ((int)str.size()); if (len & 1) cout << "NO" << endl; else { for (int i = 0; i < len / 2; ++i) { if (str[i] != str[i + len / 2]) { cout << "NO" << endl; break; } } cout << "YES" << endl; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int tc = 1; cin >> tc; for (int t = 1; t <= tc; t++) { solve(); } }	 #include <bits/stdc++.h> using namespace std; template <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << ", " << p.second << ')'; } template <typename T_container, typename T = typename enable_if< !is_same<T_container, string>::value, typename T_container::value_type>::type> ostream &operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = ", "; return os << '}'; } void dbg_out() { cerr << endl; } template <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); } const int MAX_N = 1e5 + 5; const long long MOD = 1e9 + 7; const long long INF = 1e9; const long double EPS = 1e-9; void solve() { string str; cin >> str; int len = ((int)str.size()); if (len & 1) cout << "NO" << endl; else { for (int i = 0; i < len / 2; ++i) { if (str[i] != str[i + len / 2]) { cout << "NO" << endl; return; } } cout << "YES" << endl; } } int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int tc = 1; cin >> tc; for (int t = 1; t <= tc; t++) { solve(); } }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "N0" << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "N0" << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int n, j, i; string str, str1, str2; cin >> n; for (i = 0; i < n; i++) { cin >> str; if (str.length() % 2 == 0) { j = str.length() / 2; str1 = str.substr(0, j); str2 = str.substr(0, j); if (str1 == str2) { cout << "YES" << endl; } else cout << "NO" << endl; } else { cout << "NO" << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int n, j, i; string str, str1, str2; cin >> n; for (i = 0; i < n; i++) { cin >> str; if (str.length() % 2 == 0) { j = str.length() / 2; str1 = str.substr(0, j); str2 = str.substr(j, j); if (str1 == str2) { cout << "YES" << endl; } else cout << "NO" << endl; } else { cout << "NO" << endl; } } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "N0" << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string tes1 = ""; string tes2 = ""; for (int j = 0; j < n / 2; j++) { tes1 += s[j]; } for (int k = n / 2; k < n; k++) { tes2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (tes1 == tes2) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string test1 = ""; string test2 = ""; for (int j = 0; j < n / 2; j++) { test1 += s[j]; } for (int k = n / 2; k < n; k++) { test2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (test1 == test2) { cout << "YES" << endl; } else { cout << "N0" << endl; } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.size(); string tes1 = ""; string tes2 = ""; for (int j = 0; j < n / 2; j++) { tes1 += s[j]; } for (int k = n / 2; k < n; k++) { tes2 += s[k]; } if (n % 2 != 0) cout << "NO" << endl; else { if (tes1 == tes2) { cout << "YES" << endl; } else { cout << "NO" << endl; } } } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int flag = 0; int l = s.length(); for (int i = 0; i < l / 2; i++) { if (s[i] != s[i + l / 2]) { flag = 1; break; } } if (flag == 1 || l % 2 == 1) cout << "N0" << endl; else cout << "YES" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int flag = 0; int l = s.length(); for (int i = 0; i < l / 2; i++) { if (s[i] != s[i + l / 2]) { flag = 1; break; } } if (flag == 1 || l % 2 == 1) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }
139	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.length() / 2 - 1; int k = s.length() - 1; int t = 0; while (n > 0 && k > s.length() / 2) { if (s[n] != s[k]) { t = 1; break; } n--; k--; } if (t || s.length() % 2) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { string s; cin >> s; int n = s.length() / 2 - 1; int k = s.length() - 1; int t = 0; while (n >= 0 && k >= s.length() / 2) { if (s[n] != s[k]) { t = 1; break; } n--; k--; } if (t || s.length() % 2) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }
140	 #include <bits/stdc++.h> using namespace std; long long gcd(long long a, long long b) { if (b == 0) return a; return gcd(b, a % b); } long long power(long long x, unsigned long long y) { long long res = 1; while (y > 0) { if (y & 1) res = res * x; y = y >> 1; x = x * x; } return res; } long long one(long long x, long long y) { long long s = (x + 1) / power(2, y); if (s % 2 == 0) { return s / 2 * power(2, y); } else { return (s / 2 * power(2, y)) + ((x + 1) % power(2, y)); } } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; set<long long> s; long long x = sqrt(n); for (long long i = 0; i < x; i++) { if (i * i <= n) { s.insert(i * i); } if (i * i * i <= n) { s.insert(i * i * i); } } cout << s.size() << endl; } }	 #include <bits/stdc++.h> using namespace std; long long gcd(long long a, long long b) { if (b == 0) return a; return gcd(b, a % b); } long long power(long long x, unsigned long long y) { long long res = 1; while (y > 0) { if (y & 1) res = res * x; y = y >> 1; x = x * x; } return res; } long long one(long long x, long long y) { long long s = (x + 1) / power(2, y); if (s % 2 == 0) { return s / 2 * power(2, y); } else { return (s / 2 * power(2, y)) + ((x + 1) % power(2, y)); } } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n; cin >> n; set<long long> s; long long x = sqrt(n); for (long long i = 1; i <= x; i++) { if (i * i <= n) { s.insert(i * i); } if (i * i * i <= n) { s.insert(i * i * i); } } cout << s.size() << endl; } }
141	 #include <bits/stdc++.h> using namespace std; vector<long long int> v; vector<long long int> ss; vector<long long int> aa; int main() { long long int t; cin >> t; while (t > 0) { v.clear(); ss.clear(); aa.clear(); string a, s; cin >> a >> s; for (long long int i = a.length() - 1; i >= 0; i--) { aa.push_back(a[i] - '0'); } for (long long int i = s.length() - 1; i >= 0; i--) { ss.push_back(s[i] - '0'); } long long int flg = 0; long long int i = 0, j = 0; while (i < aa.size()) { if (j >= ss.size()) { flg = 1; break; } if (ss[j] < aa[i]) { if (j + 1 >= ss.size()) { flg = 1; break; } long long int q = (ss[j + 1] * 10) + ss[j]; long long int num = q - aa[i]; if (num > 9 and num >= 0) { flg = 1; break; } else { v.push_back(num); } j = j + 2; } else { v.push_back(ss[j] - aa[i]); j++; } i++; } if (flg) { cout << "-1" << endl; } else { long long int ans = 0; if (j < ss.size()) { for (long long int i = j; i < ss.size(); i++) { v.push_back(ss[i]); } } long long int i = v.size() - 1; while (v[i] == 0) { i--; } long long int c = 0; for (long long int j = i; j >= 0; j--) { cout << v[j]; c++; } if (c == 0) { cout << 0; } cout << endl; } t--; } }	 #include <bits/stdc++.h> using namespace std; vector<long long int> v; vector<long long int> ss; vector<long long int> aa; int main() { long long int t; cin >> t; while (t > 0) { v.clear(); ss.clear(); aa.clear(); string a, s; cin >> a >> s; for (long long int i = a.length() - 1; i >= 0; i--) { aa.push_back(a[i] - '0'); } for (long long int i = s.length() - 1; i >= 0; i--) { ss.push_back(s[i] - '0'); } long long int flg = 0; long long int i = 0, j = 0; while (i < aa.size()) { if (j >= ss.size()) { flg = 1; break; } if (ss[j] < aa[i]) { if (j + 1 >= ss.size()) { flg = 1; break; } long long int q = (ss[j + 1] * 10) + ss[j]; long long int num = q - aa[i]; if (num > 9 or num < 0) { flg = 1; break; } else { v.push_back(num); } j = j + 2; } else { v.push_back(ss[j] - aa[i]); j++; } i++; } if (flg) { cout << "-1" << endl; } else { long long int ans = 0; if (j < ss.size()) { for (long long int i = j; i < ss.size(); i++) { v.push_back(ss[i]); } } long long int i = v.size() - 1; while (v[i] == 0) { i--; } long long int c = 0; for (long long int j = i; j >= 0; j--) { cout << v[j]; c++; } if (c == 0) { cout << 0; } cout << endl; } t--; } }
141	 #include <bits/stdc++.h> using namespace std; vector<long long int> v; vector<long long int> ss; vector<long long int> aa; int main() { long long int t; cin >> t; while (t > 0) { v.clear(); ss.clear(); aa.clear(); string a, s; cin >> a >> s; for (long long int i = a.length() - 1; i >= 0; i--) { aa.push_back(a[i] - '0'); } for (long long int i = s.length() - 1; i >= 0; i--) { ss.push_back(s[i] - '0'); } long long int flg = 0; long long int i = 0, j = 0; while (i < aa.size()) { if (j >= ss.size()) { flg = 1; break; } if (ss[j] < aa[i]) { if (j + 1 >= ss.size()) { flg = 1; break; } long long int q = (ss[j + 1] * 10) + ss[j]; long long int num = q - aa[i]; if (num > 9 and num < 0) { flg = 1; break; } else { v.push_back(num); } j = j + 2; } else { v.push_back(ss[j] - aa[i]); j++; } i++; } if (flg) { cout << "-1" << endl; } else { long long int ans = 0; if (j < ss.size()) { for (long long int i = j; i < ss.size(); i++) { v.push_back(ss[i]); } } long long int i = v.size() - 1; while (v[i] == 0) { i--; } long long int c = 0; for (long long int j = i; j >= 0; j--) { cout << v[j]; c++; } if (c == 0) { cout << 0; } cout << endl; } t--; } }	 #include <bits/stdc++.h> using namespace std; vector<long long int> v; vector<long long int> ss; vector<long long int> aa; int main() { long long int t; cin >> t; while (t > 0) { v.clear(); ss.clear(); aa.clear(); string a, s; cin >> a >> s; for (long long int i = a.length() - 1; i >= 0; i--) { aa.push_back(a[i] - '0'); } for (long long int i = s.length() - 1; i >= 0; i--) { ss.push_back(s[i] - '0'); } long long int flg = 0; long long int i = 0, j = 0; while (i < aa.size()) { if (j >= ss.size()) { flg = 1; break; } if (ss[j] < aa[i]) { if (j + 1 >= ss.size()) { flg = 1; break; } long long int q = (ss[j + 1] * 10) + ss[j]; long long int num = q - aa[i]; if (num > 9 or num < 0) { flg = 1; break; } else { v.push_back(num); } j = j + 2; } else { v.push_back(ss[j] - aa[i]); j++; } i++; } if (flg) { cout << "-1" << endl; } else { long long int ans = 0; if (j < ss.size()) { for (long long int i = j; i < ss.size(); i++) { v.push_back(ss[i]); } } long long int i = v.size() - 1; while (v[i] == 0) { i--; } long long int c = 0; for (long long int j = i; j >= 0; j--) { cout << v[j]; c++; } if (c == 0) { cout << 0; } cout << endl; } t--; } }
141	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e18; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int t; cin >> t; while (t--) { string a, s; cin >> a >> s; vector<long long int> v; long long int x = s.length() - 1, flag = 1; for (int i = a.length() - 1; i >= 0; i--) { if (x < 0) { flag = 0; break; } if (s[x] >= a[i]) v.push_back(s[x] - a[i]), x--; else { if (x > 0 && s[x - 1] == '1') v.push_back(10 + s[x] - a[i]), x -= 2; else { flag = 0; break; } } } if (x >= 0) { for (int i = x; i >= 0; i--) { v.push_back(s[x] - '0'); } } if (flag == 0) cout << "-1\n"; else { long long int p = 0; reverse(v.begin(), v.end()); for (auto i : v) { if (i != 0) p = 1; if (p == 1) cout << i; } cout << endl; } } }	 #include <bits/stdc++.h> using namespace std; const long long INF = 1e18; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long int t; cin >> t; while (t--) { string a, s; cin >> a >> s; vector<long long int> v; long long int x = s.length() - 1, flag = 1; for (int i = a.length() - 1; i >= 0; i--) { if (x < 0) { flag = 0; break; } if (s[x] >= a[i]) v.push_back(s[x] - a[i]), x--; else { if (x > 0 && s[x - 1] == '1') v.push_back(10 + s[x] - a[i]), x -= 2; else { flag = 0; break; } } } if (x >= 0) { for (int i = x; i >= 0; i--) { v.push_back(s[i] - '0'); } } if (flag == 0) cout << "-1\n"; else { long long int p = 0; reverse(v.begin(), v.end()); for (auto i : v) { if (i != 0) p = 1; if (p == 1) cout << i; } cout << endl; } } }
142	 #include <bits/stdc++.h> using namespace std; int m, n; bool possible(vector<vector<unsigned long long>>& data, long long h) { vector<bool> vld(n); bool pair = false; for (int i = 0; i < m; i++) { int c = 0; for (int j = 0; j < n; j++) { if (data[i][j] >= h) { vld[j] = true; c++; } } if (c > 1) { pair = true; } } if (!pair && n > 1) { return false; } else { return std::all_of(vld.begin(), vld.end(), [](bool x) { return x; }); } } long long max_possible(vector<vector<unsigned long long>>& data, unsigned long long mx) { long long l = 0, r = mx; while (l < r) { long long mid = (l + r) / 2; if (possible(data, mid)) { l = mid + 1; } else { r = mid; } } return l - 1; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { cin >> m >> n; vector<vector<unsigned long long>> data(m, vector<unsigned long long>(n)); unsigned long long mx = 0; for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { cin >> data[i][j]; mx = max(mx, data[i][j]); } } long long res = max_possible(data, mx); cout << res << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int m, n; bool possible(vector<vector<unsigned long long>>& data, long long h) { vector<bool> vld(n); bool pair = false; for (int i = 0; i < m; i++) { int c = 0; for (int j = 0; j < n; j++) { if (data[i][j] >= h) { vld[j] = true; c++; } } if (c > 1) { pair = true; } } if (!pair && n > 1) { return false; } else { return std::all_of(vld.begin(), vld.end(), [](bool x) { return x; }); } } long long max_possible(vector<vector<unsigned long long>>& data, unsigned long long mx) { long long l = 0, r = mx + 1; while (l < r) { long long mid = (l + r) / 2; if (possible(data, mid)) { l = mid + 1; } else { r = mid; } } return l - 1; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) { cin >> m >> n; vector<vector<unsigned long long>> data(m, vector<unsigned long long>(n)); unsigned long long mx = 0; for (int i = 0; i < m; i++) { for (int j = 0; j < n; j++) { cin >> data[i][j]; mx = max(mx, data[i][j]); } } long long res = max_possible(data, mx); cout << res << endl; } return 0; }
142	 #include <bits/stdc++.h> using namespace std; uint32_t solve(size_t m, size_t n, vector<uint32_t>& data) { vector<bool> used; used.resize(m); bool simple = false; uint32_t simple_score = ~0u; for (size_t i = 0; i < n; ++i) { uint32_t best = 0; for (size_t j = 0; j < m; ++j) { best = std::max(best, data[n * j + i]); } for (size_t j = 0; j < m; ++j) { if (best == data[n * j + i]) { simple = simple || used[j]; used[j] = true; } } simple_score = std::min(simple_score, best); } if (simple) { return simple_score; } uint32_t bestscore = 0; for (size_t j = 0; j + 1 < n; ++j) { for (size_t i = j + 1; i < n; ++i) { uint32_t pair_score = 0; for (size_t k = 0; k < m; ++k) { pair_score = std::max(pair_score, std::min(data[n * k + j], data[n * k + i])); } bestscore = std::max(std::min(pair_score, simple_score), pair_score); } } return bestscore; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); size_t nn; cin >> nn; std::vector<uint32_t> data; for (size_t i = 0; i < nn; ++i) { size_t m, n; cin >> m >> n; data.resize(m * n); for (auto& x : data) { cin >> x; } cout << solve(m, n, data) << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; uint32_t solve(size_t m, size_t n, vector<uint32_t>& data) { vector<bool> used; used.resize(m); bool simple = false; uint32_t simple_score = ~0u; for (size_t i = 0; i < n; ++i) { uint32_t best = 0; for (size_t j = 0; j < m; ++j) { best = std::max(best, data[n * j + i]); } for (size_t j = 0; j < m; ++j) { if (best == data[n * j + i]) { simple = simple || used[j]; used[j] = true; } } simple_score = std::min(simple_score, best); } if (simple) { return simple_score; } uint32_t bestscore = 0; for (size_t j = 0; j + 1 < n; ++j) { for (size_t i = j + 1; i < n; ++i) { uint32_t pair_score = 0; for (size_t k = 0; k < m; ++k) { pair_score = std::max(pair_score, std::min(data[n * k + j], data[n * k + i])); } bestscore = std::max(std::min(pair_score, simple_score), bestscore); } } return bestscore; } int main() { ios::sync_with_stdio(false); cin.tie(nullptr); size_t nn; cin >> nn; std::vector<uint32_t> data; for (size_t i = 0; i < nn; ++i) { size_t m, n; cin >> m >> n; data.resize(m * n); for (auto& x : data) { cin >> x; } cout << solve(m, n, data) << endl; } return 0; }
143	 #include <bits/stdc++.h> using namespace std; int main() { int t, n, m, l, r; cin >> t; while (t--) { map<int, int> mm; cin >> n; m = n; while (m--) { cin >> l; mm[l]++; } int sum = 0, noba = 0, ind = 1; for (int i = 0; i <= n; i++) { if (ind) { cout << sum + mm[i] << " "; if (mm[i] == 0) { while (mm[noba] == 1) { if (noba == 0) break; noba--; } if (mm[noba] <= 1) ind = 0; else { sum += i - noba; mm[i]++; mm[noba]--; } } else noba = i; } else cout << "-1  "; } cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, n, m, l, r; cin >> t; while (t--) { map<int, int> mm; cin >> n; m = n; while (m--) { cin >> l; mm[l]++; } long long sum = 0, noba = 0, ind = 1; for (int i = 0; i <= n; i++) { if (ind) { cout << sum + mm[i] << " "; if (mm[i] == 0) { while (mm[noba] == 1) { if (noba == 0) break; noba--; } if (mm[noba] <= 1) ind = 0; else { sum += i - noba; mm[i]++; mm[noba]--; } } else noba = i; } else cout << "-1  "; } cout << endl; } return 0; }
143	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; const int MOD = 998244353; int t, n, a[N]; long long ans[N]; int freq[N]; stack<int> st; int main() { scanf("%d", &t); while (t--) { while (!st.empty()) st.pop(); scanf("%d", &n); for (int i = 0; i <= n + 1; i++) { ans[i] = -1; freq[i] = 0; } ans[0] = freq[0]; for (int i = 0; i < n; i++) { scanf("%d", &a[i]); freq[a[i]]++; } ans[0] = freq[0]; sort(a, a + n); long long cur = 0; int j = 0; for (int i = 0; i < n; i++) { if (a[i] > i) break; while (j < n && a[j] <= i) { j++; st.push(i); } int z = st.top(); st.pop(); cur += (i - z); ans[i + 1] = cur + freq[i + 1]; } for (int i = 0; i <= n; i++) { printf("%d ", ans[i]); } puts(""); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; const int MOD = 998244353; int t, n, a[N]; long long ans[N]; int freq[N]; stack<int> st; int main() { scanf("%d", &t); while (t--) { while (!st.empty()) st.pop(); scanf("%d", &n); for (int i = 0; i <= n + 1; i++) { ans[i] = -1; freq[i] = 0; } ans[0] = freq[0]; for (int i = 0; i < n; i++) { scanf("%d", &a[i]); freq[a[i]]++; } ans[0] = freq[0]; sort(a, a + n); long long cur = 0; int j = 0; for (int i = 0; i < n; i++) { if (a[i] > i) break; while (j < n && a[j] <= i) { j++; st.push(i); } int z = st.top(); st.pop(); cur += (i - z); ans[i + 1] = cur + freq[i + 1]; } for (int i = 0; i <= n; i++) { printf("%lld ", ans[i]); } puts(""); } return 0; }
143	 #include <bits/stdc++.h> const char nl = '\n'; using namespace std; const long long INF = 1e18; const long long MOD = 1e9 + 7; void solve() { int n; cin >> n; vector<int> a(n); map<int, int> m; for (int i = 0; i < n; i++) { cin >> a[i]; m[a[i]]++; } long long sum = 0; vector<int> ans(n + 1, -1); vector<int> ex; sort(a.begin(), a.end()); for (int i = 0; i < n + 1; i++) { if (i > 0 && !m.count(i - 1)) { if (ex.empty()) { break; } sum += i - 1 - ex.back(); ex.pop_back(); } while (i > 0 && m.count(i - 1) && m[i - 1] > 1) { m[i - 1]--; ex.push_back(i - 1); } ans[i] = sum + (m.count(i) ? m[i] : 0); } for (int i = 0; i < n + 1; i++) { cout << ans[i] << " "; } cout << nl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> const char nl = '\n'; using namespace std; const long long INF = 1e18; const long long MOD = 1e9 + 7; void solve() { int n; cin >> n; vector<int> a(n); map<int, int> m; for (int i = 0; i < n; i++) { cin >> a[i]; m[a[i]]++; } long long sum = 0; vector<long long> ans(n + 1, -1); vector<int> ex; sort(a.begin(), a.end()); for (int i = 0; i < n + 1; i++) { if (i > 0 && !m.count(i - 1)) { if (ex.empty()) { break; } sum += i - 1 - ex.back(); ex.pop_back(); } while (i > 0 && m.count(i - 1) && m[i - 1] > 1) { m[i - 1]--; ex.push_back(i - 1); } ans[i] = sum + (m.count(i) ? m[i] : 0); } for (int i = 0; i < n + 1; i++) { cout << ans[i] << " "; } cout << nl; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t = 1; cin >> t; while (t--) { solve(); } return 0; }
144	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, k; cin >> n >> m >> k; int a = n % m; int b = n - a; int c = n / m + 1; int d = n / m; int pos1 = 0; int pos2 = a * c; for (int z = 0; z < m; z++) { for (int i = 0; i < a; i++) { cout << c << " "; for (int j = pos1 + i * c; j < pos1 + i * c + c; j++) cout << (j % n) + 1 << " "; cout << "\n"; } for (int i = 0; i < b; i++) { cout << d << " "; for (int j = pos2 + i * d; j < pos2 + i * d + d; j++) cout << (j % n) + 1 << " "; cout << "\n"; } pos1 = (pos1 + a * c) % n; pos2 = (pos1 + a * c) % n; } cout << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tt; cin >> tt; while (tt--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, k; cin >> n >> m >> k; int a = n % m; int b = m - a; int c = n / m + 1; int d = n / m; int pos1 = 0; int pos2 = a * c; for (int z = 0; z < k; z++) { for (int i = 0; i < a; i++) { cout << c << " "; for (int j = pos1 + i * c; j < pos1 + i * c + c; j++) cout << (j % n) + 1 << " "; cout << "\n"; } for (int i = 0; i < b; i++) { cout << d << " "; for (int j = pos2 + i * d; j < pos2 + i * d + d; j++) cout << (j % n) + 1 << " "; cout << "\n"; } pos1 = (pos1 + a * c) % n; pos2 = (pos1 + a * c) % n; } cout << "\n"; } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int tt; cin >> tt; while (tt--) { solve(); } return 0; }
144	 #include <bits/stdc++.h> using namespace std; template <typename T, typename U> static inline void amn(T &x, U y) { if (y < x) x = y; } template <typename T, typename U> static inline void amx(T &x, U y) { if (x < y) x = y; } const long long MOD = 1e9 + 7; const long long INF = 1e18; const long long N = 5e5 + 5; long long top(long long x, long long y) { long long f = x / y; if (x % y) f++; return f; } bool cmp(pair<long long, long long> &a, pair<long long, long long> &b) { return a.first < b.first; } void solve() { long long n, m, x; cin >> n >> m >> x; vector<pair<long long, long long> > v; for (long long i = 1; i <= n; i++) { v.push_back({0, i}); } long long sa = top(n, m), sb = n / m; long long A = (n % m) * sa; for (long long i = 1; i <= x; i++) { for (long long j = 0; j < A; j++) { v[i].first++; } for (long long j = 0; j < A; j += sa) { cout << sa; for (long long k = j; k < j + sa; k++) { cout << " " << v[k].second; } cout << endl; } for (long long j = A; j < n; j += sb) { cout << sb; for (long long k = j; k < j + sb; k++) { cout << " " << v[k].second; } cout << endl; } sort(v.begin(), v.end(), cmp); } cout << endl; } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long test_case = 1; cin >> test_case; while (test_case--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; template <typename T, typename U> static inline void amn(T &x, U y) { if (y < x) x = y; } template <typename T, typename U> static inline void amx(T &x, U y) { if (x < y) x = y; } const long long MOD = 1e9 + 7; const long long INF = 1e18; const long long N = 5e5 + 5; long long top(long long x, long long y) { long long f = x / y; if (x % y) f++; return f; } bool cmp(pair<long long, long long> &a, pair<long long, long long> &b) { return a.first < b.first; } void solve() { long long n, m, x; cin >> n >> m >> x; vector<pair<long long, long long> > v; for (long long i = 1; i <= n; i++) { v.push_back({0, i}); } long long sa = top(n, m), sb = n / m; long long A = (n % m) * sa; for (long long i = 1; i <= x; i++) { for (long long j = 0; j < A; j++) { v[j].first++; } for (long long j = 0; j < A; j += sa) { cout << sa; for (long long k = j; k < j + sa; k++) { cout << " " << v[k].second; } cout << endl; } for (long long j = A; j < n; j += sb) { cout << sb; for (long long k = j; k < j + sb; k++) { cout << " " << v[k].second; } cout << endl; } sort(v.begin(), v.end(), cmp); } cout << endl; } signed main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long test_case = 1; cin >> test_case; while (test_case--) { solve(); } return 0; }
144	 #include <bits/stdc++.h> using namespace std; signed main() { int t; scanf("%d", &t); while (t--) { int n, k, m; scanf("%d %d %d", &n, &m, &k); vector<int> ar(n + 1, 0); deque<int> q; for (int i = 1; i <= n; i++) { ar[i] = i; q.push_back(i); } if (n % m == 0) { for (int i = 1; i <= k; i++) { int block = n / m, cnt = 0; for (int j = 1; j <= n; j++) { if (cnt == 0) { printf("%d ", block); } printf("%d ", ar[j]); cnt++; if (cnt == block) { printf("\n"); cnt = 0; } } } } else { for (int i = 1; i <= k; i++) { int block = n / m, cnt = 0, extra = n % m, j = 1; for (j = 1; j <= n; j++) { if (extra == 0) break; if (cnt == 0) { printf("%d ", block + 1); } printf("%d ", ar[j]); cnt++; if (cnt == block + 1) { extra--; cnt = 0; printf("\n"); } } for (; j <= n; j++) { if (cnt == 0) { printf("%d ", block); } printf("%d ", ar[j]); cnt++; if (cnt == block) { printf("\n"); cnt = 0; } } for (int r = 1; r <= n % m; r++) { for (int j = 0; j < block; j++) { int x = q.back(); q.pop_back(); q.push_front(x); } } int idx = 1; for (auto p : q) { ar[idx++] = p; } } } printf("\n"); } }	 #include <bits/stdc++.h> using namespace std; signed main() { int t; scanf("%d", &t); while (t--) { int n, k, m; scanf("%d %d %d", &n, &m, &k); vector<int> ar(n + 1, 0); deque<int> q; for (int i = 1; i <= n; i++) { ar[i] = i; q.push_back(i); } if (n % m == 0) { for (int i = 1; i <= k; i++) { int block = n / m, cnt = 0; for (int j = 1; j <= n; j++) { if (cnt == 0) { printf("%d ", block); } printf("%d ", ar[j]); cnt++; if (cnt == block) { printf("\n"); cnt = 0; } } } } else { for (int i = 1; i <= k; i++) { int block = n / m, cnt = 0, extra = n % m, j = 1; for (j = 1; j <= n; j++) { if (extra == 0) break; if (cnt == 0) { printf("%d ", block + 1); } printf("%d ", ar[j]); cnt++; if (cnt == block + 1) { extra--; cnt = 0; printf("\n"); } } for (; j <= n; j++) { if (cnt == 0) { printf("%d ", block); } printf("%d ", ar[j]); cnt++; if (cnt == block) { printf("\n"); cnt = 0; } } for (int r = 1; r <= n % m; r++) { for (int j = 0; j <= block; j++) { int x = q.back(); q.pop_back(); q.push_front(x); } } int idx = 1; for (auto p : q) { ar[idx++] = p; } } } printf("\n"); } }
144	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5; long long calc(long long x) { return x * (x + 1) / 2; } int mex(set<int> &st) { int ret = 0; while (st.count(ret)) ret++; return ret; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int tt; cin >> tt; while (tt--) { int n, m, k; cin >> n >> m >> k; int md = n % m; vector<vector<bool> > a(k, vector<bool>(n + 1, false)); int cur = 1; for (int i = 0; i < k; i++) { for (int j = 0; j < n - (n % m) * (n / m + 1); j++) { a[i][cur] = 1; cur++; if (cur == n + 1) cur = 1; } } vector<int> v, v2; for (int i = 0; i < k; i++) { v.clear(); v2.clear(); for (int j = 1; j <= n; j++) { if (a[i][j] == 0) { v2.push_back(j); } else v.push_back(j); } for (int i = 0; i < (int)v.size(); i += n / m) { cout << n / m << ' '; for (int j = i; j < n / m; j++) cout << v[j] << ' '; cout << '\n'; } for (int i = 0; i < (int)v2.size(); i += +n / m + 1) { cout << n / m + 1 << ' '; for (int j = i; j < i + n / m + 1; j++) cout << v2[j] << ' '; cout << '\n'; } } cout << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5; long long calc(long long x) { return x * (x + 1) / 2; } int mex(set<int> &st) { int ret = 0; while (st.count(ret)) ret++; return ret; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); int tt; cin >> tt; while (tt--) { int n, m, k; cin >> n >> m >> k; int md = n % m; vector<vector<bool> > a(k, vector<bool>(n + 1, false)); int cur = 1; for (int i = 0; i < k; i++) { for (int j = 0; j < n - (n % m) * (n / m + 1); j++) { a[i][cur] = 1; cur++; if (cur == n + 1) cur = 1; } } vector<int> v, v2; for (int i = 0; i < k; i++) { v.clear(); v2.clear(); for (int j = 1; j <= n; j++) { if (a[i][j] == 0) { v2.push_back(j); } else v.push_back(j); } for (int i = 0; i < (int)v.size(); i += n / m) { cout << n / m << ' '; for (int j = i; j < i + n / m; j++) cout << v[j] << ' '; cout << '\n'; } for (int i = 0; i < (int)v2.size(); i += +n / m + 1) { cout << n / m + 1 << ' '; for (int j = i; j < i + n / m + 1; j++) cout << v2[j] << ' '; cout << '\n'; } } cout << '\n'; } return 0; }
144	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { int n, m, k; cin >> n >> m >> k; int md = n % m; int flr = n / m, cl = (n + m - 1) / m; int ix = 0; for (int i = 0; i < k; i++) { int cur = ix; for (int j = 0; j < md; j++) { cout << cl << ' '; for (int l = 0; l < cl; l++) { cout << cur + 1 << ' '; cur += 1; cur %= n; } cout << '\n'; } for (int j = 0; j < flr - md; j++) { cout << flr << ' '; for (int l = 0; l < flr; l++) { cout << cur + 1 << ' '; cur += 1; cur %= n; } cout << '\n'; } ix += md * cl; ix %= n; } cout << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0), cin.tie(0), cout.tie(0); int t; cin >> t; while (t--) { int n, m, k; cin >> n >> m >> k; int md = n % m; int flr = n / m, cl = (n + m - 1) / m; int ix = 0; for (int i = 0; i < k; i++) { int cur = ix; for (int j = 0; j < md; j++) { cout << cl << ' '; for (int l = 0; l < cl; l++) { cout << cur + 1 << ' '; cur += 1; cur %= n; } cout << '\n'; } for (int j = 0; j < m - md; j++) { cout << flr << ' '; for (int l = 0; l < flr; l++) { cout << cur + 1 << ' '; cur += 1; cur %= n; } cout << '\n'; } ix += md * cl; ix %= n; } cout << '\n'; } return 0; }
146	 #include <bits/stdc++.h> using namespace std; long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005]; void change(long long x) { long long k = x; for (long long i = 1; i < 150; i++) k = pre[k]; for (long long i = 1, k2 = ne[x]; i < 150; i++) { ne300[k] = k2; pre300[k2] = k; k = ne[k]; k2 = ne[k2]; } return; } int main() { long long n, q; scanf("%lld%lld", &n, &q); for (long long i = 1; i <= n; i++) { scanf("%lld", &ne[i]); pre[ne[i]] = i; } for (long long i = 1; i <= n; i++) for (long long j = 1, k = i; j <= 150; j++) k = ne[k], ne300[i] = k, pre300[k] = i; while (q--) { long long op, x, y; scanf("%lld%lld%lld", &op, &x, &y); if (op == 1) { swap(ne[x], ne[y]); pre[ne[y]] = y, pre[ne[x]] = x; change(x), change(y); } else { while (y >= 150) x = ne300[x], y -= 150; while (y--) x = ne[x]; printf("%lld\n", x); } } return 0; }	 #include <bits/stdc++.h> using namespace std; long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005]; void change(long long x) { long long k = x; for (long long i = 1; i < 150; i++) k = pre[k]; for (long long i = 1, k2 = ne[x]; i <= 150; i++) { ne300[k] = k2; pre300[k2] = k; k = ne[k]; k2 = ne[k2]; } return; } int main() { long long n, q; scanf("%lld%lld", &n, &q); for (long long i = 1; i <= n; i++) { scanf("%lld", &ne[i]); pre[ne[i]] = i; } for (long long i = 1; i <= n; i++) for (long long j = 1, k = i; j <= 150; j++) k = ne[k], ne300[i] = k, pre300[k] = i; while (q--) { long long op, x, y; scanf("%lld%lld%lld", &op, &x, &y); if (op == 1) { swap(ne[x], ne[y]); pre[ne[y]] = y, pre[ne[x]] = x; change(x), change(y); } else { while (y >= 150) x = ne300[x], y -= 150; while (y--) x = ne[x]; printf("%lld\n", x); } } return 0; }
146	 #include <bits/stdc++.h> using namespace std; int i, j, k, n, m, t, x, y, z; int l[100500], r[100500], l300[100500], r300[100500], k2; void work(int x) { for (i = 1, k = y; i < 150; i++) k = l[k]; k2 = r[y]; for (i = 1; i <= 150; i++) { r300[k] = k2; l300[k2] = k; k = r[k]; k2 = r[k2]; } } int main() { ios::sync_with_stdio(0); cin >> n >> t; for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i; for (i = 1; i <= n; i++) { for (j = 1, k = i; j <= 150; j++) k = r[k]; r300[i] = k; l300[k] = i; } while (t--) { cin >> x >> y >> z; if (x == 1) { swap(r[y], r[z]); l[r[y]] = y; l[r[z]] = z; work(y); work(z); } else { while (z > 150) y = r300[y], z -= 150; while (z) y = r[y], z--; cout << y << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int i, j, k, n, m, t, x, y, z; int l[100500], r[100500], l300[100500], r300[100500], k2; void work(int x) { for (i = 1, k = x; i < 150; i++) k = l[k]; k2 = r[x]; for (i = 1; i <= 150; i++) { r300[k] = k2; l300[k2] = k; k = r[k]; k2 = r[k2]; } } int main() { ios::sync_with_stdio(0); cin >> n >> t; for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i; for (i = 1; i <= n; i++) { for (j = 1, k = i; j <= 150; j++) k = r[k]; r300[i] = k; l300[k] = i; } while (t--) { cin >> x >> y >> z; if (x == 1) { swap(r[y], r[z]); l[r[y]] = y; l[r[z]] = z; work(y); work(z); } else { while (z > 150) y = r300[y], z -= 150; while (z) y = r[y], z--; cout << y << '\n'; } } }
146	 #include <bits/stdc++.h> using namespace std; int i, j, k, n, m, t, x, y, z; int l[100500], r[100500], l300[100500], r300[100500], k2; void work(int x) { for (i = 1, k = y; i < 150; i++) k = l[k]; k2 = r[x]; for (i = 1; i <= 150; i++) { r300[k] = k2; l300[k2] = k; k = r[k]; k2 = r[k2]; } } int main() { ios::sync_with_stdio(0); cin >> n >> t; for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i; for (i = 1; i <= n; i++) { for (j = 1, k = i; j <= 150; j++) k = r[k]; r300[i] = k; l300[k] = i; } while (t--) { cin >> x >> y >> z; if (x == 1) { swap(r[y], r[z]); l[r[y]] = y; l[r[z]] = z; work(y); work(z); } else { while (z > 150) y = r300[y], z -= 150; while (z) y = r[y], z--; cout << y << '\n'; } } }	 #include <bits/stdc++.h> using namespace std; int i, j, k, n, m, t, x, y, z; int l[100500], r[100500], l300[100500], r300[100500], k2; void work(int x) { for (i = 1, k = x; i < 150; i++) k = l[k]; k2 = r[x]; for (i = 1; i <= 150; i++) { r300[k] = k2; l300[k2] = k; k = r[k]; k2 = r[k2]; } } int main() { ios::sync_with_stdio(0); cin >> n >> t; for (i = 1; i <= n; i++) cin >> r[i], l[r[i]] = i; for (i = 1; i <= n; i++) { for (j = 1, k = i; j <= 150; j++) k = r[k]; r300[i] = k; l300[k] = i; } while (t--) { cin >> x >> y >> z; if (x == 1) { swap(r[y], r[z]); l[r[y]] = y; l[r[z]] = z; work(y); work(z); } else { while (z > 150) y = r300[y], z -= 150; while (z) y = r[y], z--; cout << y << '\n'; } } }
146	 #include <bits/stdc++.h> using namespace std; long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005]; void change(long long x) { long long k = x; for (long long i = 1; i < 150; i++) k = pre[k]; for (long long i = 1, k2 = ne[x]; i < 150; i++) { ne300[k] = k2; pre300[k2] = k; k = ne[k]; k2 = ne[k2]; } return; } int main() { long long n, q; scanf("%lld%lld", &n, &q); for (long long i = 1; i <= n; i++) { scanf("%lld", &ne[i]); pre[ne[i]] = i; } for (long long i = 1; i <= n; i++) for (long long j = 1, k = i; j <= 150; j++) k = ne[k], ne300[i] = k, pre300[k] = i; while (q--) { long long op, x, y; scanf("%lld%lld%lld", &op, &x, &y); if (op == 1) { swap(ne[x], ne[y]); pre[ne[y]] = y, pre[ne[x]] = x; change(x), change(y); } else { while (y >= 150) x = ne300[x], y -= 150; while (y--) x = ne[x]; printf("%lld\n", x); } } return 0; }	 #include <bits/stdc++.h> using namespace std; long long ne[1000005], pre[1000005], ne300[1000005], pre300[1000005]; void change(long long x) { long long k = x; for (long long i = 1; i < 300; i++) k = pre[k]; for (long long i = 1, k2 = ne[x]; i <= 300; i++) { ne300[k] = k2; pre300[k2] = k; k = ne[k]; k2 = ne[k2]; } return; } int main() { long long n, q; scanf("%lld%lld", &n, &q); for (long long i = 1; i <= n; i++) { scanf("%lld", &ne[i]); pre[ne[i]] = i; } for (long long i = 1; i <= n; i++) for (long long j = 1, k = i; j <= 300; j++) k = ne[k], ne300[i] = k, pre300[k] = i; while (q--) { long long op, x, y; scanf("%lld%lld%lld", &op, &x, &y); if (op == 1) { swap(ne[x], ne[y]); pre[ne[y]] = y, pre[ne[x]] = x; change(x), change(y); } else { while (y >= 300) x = ne300[x], y -= 300; while (y--) x = ne[x]; printf("%lld\n", x); } } return 0; }
146	 #include <bits/stdc++.h> using namespace std; const int jump = 300; const int MX = 1e5 + 5; int p[MX], ip[MX], nxt[MX]; void overwrite(int pos, int finish, int turns) { if (turns == 0) { return; } nxt[pos] = finish; overwrite(ip[pos], ip[finish], turns - 1); } void update(int pos) { int finish = pos; for (int i = 0; i < jump; i++) { finish = p[finish]; } overwrite(pos, finish, jump); } void runswap(int x, int y) { ip[p[x]] = y; ip[p[y]] = x; swap(p[x], p[y]); update(p[x]); update(p[y]); } int main() { int n, q; cin >> n >> q; for (int i = 0; i < n; i++) { cin >> p[i]; --p[i]; ip[p[i]] = i; } for (int i = 0; i < n; i++) { runswap(i, i); } for (int j = 0; j < q; j++) { int v; cin >> v; if (v == 1) { int x, y; cin >> x >> y; --x; --y; runswap(x, y); } else { int i, k; cin >> i >> k; --i; while (k >= jump) { k -= jump; i = nxt[i]; } while (k > 0) { i = p[i]; k--; } cout << i + 1 << endl; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int jump = 300; const int MX = 1e5 + 5; int p[MX], ip[MX], nxt[MX]; void overwrite(int pos, int finish, int turns) { if (turns == 0) { return; } nxt[pos] = finish; overwrite(ip[pos], ip[finish], turns - 1); } void update(int pos) { int finish = pos; for (int i = 0; i < jump; i++) { finish = p[finish]; } overwrite(pos, finish, jump + 5); } void runswap(int x, int y) { ip[p[x]] = y; ip[p[y]] = x; swap(p[x], p[y]); update(p[x]); update(p[y]); } int main() { int n, q; cin >> n >> q; for (int i = 0; i < n; i++) { cin >> p[i]; --p[i]; ip[p[i]] = i; } for (int i = 0; i < n; i++) { runswap(i, i); } for (int j = 0; j < q; j++) { int v; cin >> v; if (v == 1) { int x, y; cin >> x >> y; --x; --y; runswap(x, y); } else { int i, k; cin >> i >> k; --i; while (k >= jump) { k -= jump; i = nxt[i]; } while (k > 0) { i = p[i]; k--; } cout << i + 1 << endl; } } return 0; }
147	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { string s; cin >> s; long long n = s.size(); long long count = 0; for (long long i = 0; i < n; i++) { if (s[i] == 'N') { count++; } } if (count == 1) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { long long t; cin >> t; while (t--) { string s; cin >> s; long long n = s.size(); long long count = 0; for (long long i = 0; i < n; i++) { if (s[i] == 'N') { count++; } } if (count == 1) cout << "NO" << endl; else cout << "YES" << endl; } return 0; }
147	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int c = 0; string s; cin >> s; for (int i = 0; i < s.length(); i++) { if (s[i] == 'N') c++; } if (c > 1) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int c = 0; string s; cin >> s; for (int i = 0; i < s.length(); i++) { if (s[i] == 'N') c++; } if (c != 1) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
147	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int c = 0; string s; cin >> s; for (int i = 0; i < s.length(); i++) { if (s[i] != 'N') c++; } if (c > 1) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int c = 0; string s; cin >> s; for (int i = 0; i < s.length(); i++) { if (s[i] == 'N') c++; } if (c != 1) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e4 + 10; const int MOD = 998244353; int x[11], p[MAX], q[MAX], ret[MAX]; char s[11][MAX]; int main() { int T; cin >> T; while (T--) { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", x + i); for (int i = 0; i < n; i++) scanf("%s", s[i] + 1); long long ans = 0; for (int i = 0; i < (1 << n); i++) { for (int j = 1; j <= m; j++) p[j] = 0; for (int j = 1; j <= m; j++) q[j] = j; long long sum = 0; for (int j = 0; j < n; j++) { int tag = ((1 << j) & i) ? 1 : -1; sum -= tag * x[j]; for (int k = 1; k <= m; k++) { if (s[j][k] == '0') continue; p[k] += tag; } } sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; }); for (int j = 1; j <= m; j++) sum += p[q[j]] * j; if (sum > ans) { ans = sum; for (int j = 1; j <= m; j++) ret[q[j]] = j; } } for (int i = 1; i <= m; i++) printf("%d ", ret[i]); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e4 + 10; const int MOD = 998244353; int x[11], p[MAX], q[MAX], ret[MAX]; char s[11][MAX]; int main() { int T; cin >> T; while (T--) { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", x + i); for (int i = 0; i < n; i++) scanf("%s", s[i] + 1); long long ans = 0; for (int i = 0; i < (1 << n); i++) { for (int j = 1; j <= m; j++) p[j] = 0; for (int j = 1; j <= m; j++) q[j] = j; long long sum = 0; for (int j = 0; j < n; j++) { int tag = ((1 << j) & i) ? 1 : -1; sum -= tag * x[j]; for (int k = 1; k <= m; k++) { if (s[j][k] == '0') continue; p[k] += tag; } } sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; }); for (int j = 1; j <= m; j++) sum += p[q[j]] * j; if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) ret[q[j]] = j; } } for (int i = 1; i <= m; i++) printf("%d ", ret[i]); cout << endl; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int n, m, a[10], c[1005]; char b[10][1005]; vector<int> g[10]; int id[1005]; bool cmp(int i1, int i2) { return c[i1] < c[i2]; } int p[1005], p2[1005]; int main() { int t; scanf("%d", &t); while (t--) { scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) { scanf("%d", &a[i]); } for (int i = 0; i < n; i++) { scanf("\n%s", b[i] + 1); g[i].clear(); for (int j = 1; j <= m; j++) { if (b[i][j] == '1') { g[i].push_back(j); } } } long long ans = 0; for (int i = 1; i <= m; i++) id[i] = i; for (int i = 0; i < (1 << n); i++) { memset(c, 0, sizeof(c)); for (int j = 0; j < n; j++) { for (int k : g[j]) { if (i & (1 << j)) c[k]++; else c[k]--; } } sort(id + 1, id + 1 + m, cmp); for (int j = 1; j <= m; j++) { p[id[j]] = j; } long long sum = 0; for (int j = 0; j < n; j++) { int h = 0; for (int k : g[j]) { h += p[k]; } sum += abs(a[i] - h); } if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) { p2[j] = p[j]; } } } for (int i = 1; i <= m; i++) { printf("%d ", p2[i]); } printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m, a[10], c[10005]; char b[10][10005]; vector<int> g[10]; int id[10005]; bool cmp(int i1, int i2) { return c[i1] < c[i2]; } int p[10005], p2[10005]; int main() { int t; scanf("%d", &t); while (t--) { scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) { scanf("%d", &a[i]); } for (int i = 0; i < n; i++) { scanf("\n%s", b[i] + 1); g[i].clear(); for (int j = 1; j <= m; j++) { if (b[i][j] == '1') { g[i].push_back(j); } } } long long ans = 0; for (int i = 1; i <= m; i++) id[i] = i; for (int i = 0; i < (1 << n); i++) { memset(c, 0, sizeof(c)); for (int j = 0; j < n; j++) { for (int k : g[j]) { if (i & (1 << j)) c[k]++; else c[k]--; } } sort(id + 1, id + 1 + m, cmp); for (int j = 1; j <= m; j++) { p[id[j]] = j; } long long sum = 0; for (int j = 0; j < n; j++) { int h = 0; for (int k : g[j]) { h += p[k]; } sum += abs(a[j] - h); } if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) { p2[j] = p[j]; } } } for (int i = 1; i <= m; i++) { printf("%d ", p2[i]); } printf("\n"); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int e[11]; vector<int> score(10010); vector<int> ans; string s[11]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> e[i]; for (int i = 1; i <= n; i++) cin >> s[i]; int up = 1 << n; int mx = 0; vector<pair<int, int> > ev(m + 1); for (int i = 0; i < up; i++) { for (int j = 1; j <= m; j++) { ev[j].first = 0; ev[j].second = j; } for (int j = 1; j <= n; j++) for (int k = 1; k <= m; k++) { if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1; } int sum = 0; for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j]; sort(ev.begin() + 1, ev.end()); for (int j = 1; j <= m; j++) { score[ev[j].second] = j; sum += j * ev[j].first; } if (mx < sum) { mx = sum; ans = score; } } for (int i = 1; i <= m; i++) cout << ans[i] << " \n"[i == m]; } signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; int e[11]; vector<int> score(10010); vector<int> ans; string s[11]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> e[i]; for (int i = 1; i <= n; i++) cin >> s[i]; int up = 1 << n; int mx = -1; vector<pair<int, int> > ev(m + 1); for (int i = 0; i < up; i++) { for (int j = 1; j <= m; j++) { ev[j].first = 0; ev[j].second = j; } for (int j = 1; j <= n; j++) for (int k = 1; k <= m; k++) { if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1; } int sum = 0; for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j]; sort(ev.begin() + 1, ev.end()); for (int j = 1; j <= m; j++) { score[ev[j].second] = j; sum += j * ev[j].first; } if (mx < sum) { mx = sum; ans = score; } } for (int i = 1; i <= m; i++) cout << ans[i] << " \n"[i == m]; } signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) solve(); return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 3e5 + 10, M = 2 * N, mod = 998244353; int first[N]; string s[N]; int ans[N]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> first[i]; for (int i = 1; i <= n; i++) cin >> s[i], s[i] = " " + s[i]; long long res = 0, tmp; for (int k = 0; k < (1 << n); k++) { tmp = 0; for (int i = 0; i < n; i++) { int r = 1; if (k >> i & 1) r = -1; tmp += r * first[i + 1]; } vector<pair<int, int> > num; for (int i = 1; i <= m; i++) { int tmp = 0; for (int j = 0; j < n; j++) { int r = -1; if (k >> j & 1) r = 1; tmp += (s[j + 1][i] - '0') * r; } num.push_back({tmp, i}); } sort((num).begin(), (num).end()); for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i; if (res < tmp) { res = tmp; for (int i = 0; i < m; i++) { auto &[val, id] = num[i]; ans[id] = i + 1; } } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << '\n'; } int main() { ios::sync_with_stdio(0), cin.tie(0); cout.precision(2), cout.setf(ios::fixed); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 3e5 + 10, M = 2 * N, mod = 998244353; int first[N]; string s[N]; int ans[N]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> first[i]; for (int i = 1; i <= n; i++) cin >> s[i], s[i] = " " + s[i]; long long res = -1, tmp; for (int k = 0; k < (1 << n); k++) { tmp = 0; for (int i = 0; i < n; i++) { int r = 1; if (k >> i & 1) r = -1; tmp += r * first[i + 1]; } vector<pair<int, int> > num; for (int i = 1; i <= m; i++) { int tmp = 0; for (int j = 0; j < n; j++) { int r = -1; if (k >> j & 1) r = 1; tmp += (s[j + 1][i] - '0') * r; } num.push_back({tmp, i}); } sort((num).begin(), (num).end()); for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i; if (res < tmp) { res = tmp; for (int i = 0; i < m; i++) { auto &[val, id] = num[i]; ans[id] = i + 1; } } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << '\n'; } int main() { ios::sync_with_stdio(0), cin.tie(0); cout.precision(2), cout.setf(ios::fixed); int t; cin >> t; while (t--) solve(); return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int x[n]; for (int i = 0; i < n; i++) cin >> x[i]; string s[n]; for (int i = 0; i < n; i++) cin >> s[i]; int ans[m], score = 0; for (int i = 0; i < (1 << n); i++) { vector<pair<int, int> > vt; for (int j = 0; j < m; j++) { int cnt = 0; for (int k = 0; k < n; k++) { if (s[k][j] == '1') { if (i & (1 << k)) cnt++; else cnt--; } } vt.push_back(make_pair(cnt, j)); } sort(vt.begin(), vt.end()); int temp[m], curr_score = 0; for (int j = 0; j < m; j++) { int idx = vt[j].second; temp[idx] = j + 1; } for (int j = 0; j < n; j++) { int sum = 0; for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k]; curr_score += abs(sum - x[j]); } if (curr_score > score) { score = curr_score; for (int j = 0; j < m; j++) ans[j] = temp[j]; } } for (int i = 0; i < m; i++) cout << ans[i] << ' '; cout << '\n'; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int x[n]; for (int i = 0; i < n; i++) cin >> x[i]; string s[n]; for (int i = 0; i < n; i++) cin >> s[i]; int ans[m], score = -1; for (int i = 0; i < (1 << n); i++) { vector<pair<int, int> > vt; for (int j = 0; j < m; j++) { int cnt = 0; for (int k = 0; k < n; k++) { if (s[k][j] == '1') { if (i & (1 << k)) cnt++; else cnt--; } } vt.push_back(make_pair(cnt, j)); } sort(vt.begin(), vt.end()); int temp[m], curr_score = 0; for (int j = 0; j < m; j++) { int idx = vt[j].second; temp[idx] = j + 1; } for (int j = 0; j < n; j++) { int sum = 0; for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k]; curr_score += abs(sum - x[j]); } if (curr_score > score) { score = curr_score; for (int j = 0; j < m; j++) ans[j] = temp[j]; } } for (int i = 0; i < m; i++) cout << ans[i] << ' '; cout << '\n'; } }
158	 #include <bits/stdc++.h> using namespace std; const int N = 10, M = 1e4 + 10; int n, m, first[N], s[M][N], coef[M], ord[M], res[M]; void solve() { cin >> n >> m; for (int i = 0; i < n; i++) cin >> first[i]; for (int i = 0; i < n; i++) { string b; cin >> b; for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0'; } int ans = 0; for (int i = 0; i < 1 << n; i++) { int sum = 0; for (int j = 0; j < n; j++) { if (i >> j & 1) sum += first[j]; else sum -= first[j]; } for (int j = 1; j <= m; j++) { coef[j] = 0; for (int k = 0; k < n; k++) { if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1; } ord[j] = j; } sort(ord + 1, ord + m + 1, [&](int first, int second) { return coef[first] < coef[second]; }); for (int j = 1; j <= m; j++) sum += j * coef[ord[j]]; if (ans < sum) { for (int j = 1; j <= m; j++) res[ord[j]] = j; ans = sum; } } for (int i = 1; i <= m; i++) cout << res[i] << " "; cout << endl; return; } int main() { int t; for (cin >> t; t--; solve()) ; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 10, M = 1e4 + 10; int n, m, first[N], s[M][N], coef[M], ord[M], res[M]; void solve() { cin >> n >> m; for (int i = 0; i < n; i++) cin >> first[i]; for (int i = 0; i < n; i++) { string b; cin >> b; for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0'; } int ans = -1; for (int i = 0; i < 1 << n; i++) { int sum = 0; for (int j = 0; j < n; j++) { if (i >> j & 1) sum += first[j]; else sum -= first[j]; } for (int j = 1; j <= m; j++) { coef[j] = 0; for (int k = 0; k < n; k++) { if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1; } ord[j] = j; } sort(ord + 1, ord + m + 1, [&](int first, int second) { return coef[first] < coef[second]; }); for (int j = 1; j <= m; j++) sum += j * coef[ord[j]]; if (ans < sum) { for (int j = 1; j <= m; j++) res[ord[j]] = j; ans = sum; } } for (int i = 1; i <= m; i++) cout << res[i] << " "; cout << endl; return; } int main() { int t; for (cin >> t; t--; solve()) ; return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; vector<long long> a(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i]; vector<string> s(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i]; long long maxi = 0; vector<long long> res(m); for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) { vector<pair<long long, long long>> c(m); for (int j = 0, ggdem = n; j < ggdem; ++j) { long long p = 1; if (i & (1ll << j)) p = -1; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) { if (s[j][ii] == '1') c[ii].first += p; } } for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii; sort(c.begin(), c.end()); long long val = 0; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) val += (ii + 1) * c[ii].first; for (int j = 0, ggdem = n; j < ggdem; ++j) { if (i & (1ll << j)) val += a[j]; else val -= a[j]; } if (val > maxi) { maxi = val; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii; } } for (auto i : res) cout << i + 1 << " "; cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; vector<long long> a(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i]; vector<string> s(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i]; long long maxi = 0; vector<long long> res(m); for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) { vector<pair<long long, long long>> c(m); for (int j = 0, ggdem = n; j < ggdem; ++j) { long long p = 1; if (i & (1ll << j)) p = -1; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) { if (s[j][ii] == '1') c[ii].first += p; } } for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii; sort(c.begin(), c.end()); long long val = 0; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) val += (ii + 1) * c[ii].first; for (int j = 0, ggdem = n; j < ggdem; ++j) { if (i & (1ll << j)) val += a[j]; else val -= a[j]; } if (val >= maxi) { maxi = val; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii; } } for (auto i : res) cout << i + 1 << " "; cout << "\n"; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { static int xx[10], ans[10000]; static char s[10][10000 + 1]; int n, m, ansv; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", &xx[i]); for (int i = 0; i < n; i++) scanf("%s", s[i]); ansv = 0; memset(ans, 0, m * sizeof *ans); for (int b = 0; b < 1 << n; b++) { static int kk[10000]; int sum = 0, cnt; vector<int> ii(m); for (int i = 0; i < n; i++) if (b >> i & 1) sum += xx[i]; else sum -= xx[i]; for (int h = 0; h < m; h++) { int k = 0; for (int i = 0; i < n; i++) if (s[i][h] == '1') { if (b >> i & 1) k--; else k++; } kk[h] = k, ii[h] = h; } sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; }); cnt = 1; for (int h : ii) sum += kk[h] * cnt++; if (sum > ansv) { ansv = sum; cnt = 1; for (int h : ii) { ans[h] = cnt++; } } } for (int h = 0; h < m; h++) printf("%d ", ans[h]); printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { static int xx[10], ans[10000]; static char s[10][10000 + 1]; int n, m, ansv; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", &xx[i]); for (int i = 0; i < n; i++) scanf("%s", s[i]); ansv = -1; memset(ans, 0, m * sizeof *ans); for (int b = 0; b < 1 << n; b++) { static int kk[10000]; int sum = 0, cnt; vector<int> ii(m); for (int i = 0; i < n; i++) if (b >> i & 1) sum += xx[i]; else sum -= xx[i]; for (int h = 0; h < m; h++) { int k = 0; for (int i = 0; i < n; i++) if (s[i][h] == '1') { if (b >> i & 1) k--; else k++; } kk[h] = k, ii[h] = h; } sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; }); cnt = 1; for (int h : ii) sum += kk[h] * cnt++; if (sum > ansv) { ansv = sum; cnt = 1; for (int h : ii) { ans[h] = cnt++; } } } for (int h = 0; h < m; h++) printf("%d ", ans[h]); printf("\n"); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; constexpr long long int MOD = 998244353; constexpr double EPS = 1e-8; long long int N, M, K, T, H, W, L, R; void Solve() { cin >> N >> M; vector<int> v(N); for (int i = 0; i < N; i++) { cin >> v[i]; } vector<string> s(N); for (auto& i : s) cin >> i; int score = 0; vector<int> ans(M); for (int i = 0; i < 1 << N; i++) { vector<int> sum(N); vector<int> point(M); int csum = 0; vector<pair<int, int>> vp; for (int j = 0; j < M; j++) { int n = 0; for (int k = 0; k < N; k++) { if (s[k][j] == '1') { if (i >> k & 1) { n++; } else { n--; } } } vp.push_back({n, j}); } sort(vp.begin(), vp.end()); for (int j = 0; j < vp.size(); j++) { point[vp[j].second] = j + 1; } for (int j = 0; j < N; j++) { for (int k = 0; k < M; k++) { if (s[j][k] == '1') { sum[j] += point[k]; } } } for (int j = 0; j < N; j++) { csum += abs(v[j] - sum[j]); } if (csum > score) { score = csum; ans = point; } } for (auto i : ans) cout << i << " "; cout << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); T = 1; cin >> T; while (T--) { Solve(); } }	 #include <bits/stdc++.h> using namespace std; constexpr long long int MOD = 998244353; constexpr double EPS = 1e-8; long long int N, M, K, T, H, W, L, R; void Solve() { cin >> N >> M; vector<int> v(N); for (int i = 0; i < N; i++) { cin >> v[i]; } vector<string> s(N); for (auto& i : s) cin >> i; int score = -1; vector<int> ans(M); for (int i = 0; i < 1 << N; i++) { vector<int> sum(N); vector<int> point(M); int csum = 0; vector<pair<int, int>> vp; for (int j = 0; j < M; j++) { int n = 0; for (int k = 0; k < N; k++) { if (s[k][j] == '1') { if (i >> k & 1) { n++; } else { n--; } } } vp.push_back({n, j}); } sort(vp.begin(), vp.end()); for (int j = 0; j < vp.size(); j++) { point[vp[j].second] = j + 1; } for (int j = 0; j < N; j++) { for (int k = 0; k < M; k++) { if (s[j][k] == '1') { sum[j] += point[k]; } } } for (int j = 0; j < N; j++) { csum += abs(v[j] - sum[j]); } if (csum > score) { score = csum; ans = point; } } for (auto i : ans) cout << i << " "; cout << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); T = 1; cin >> T; while (T--) { Solve(); } }
158	 #include <bits/stdc++.h> using namespace std; char s[10][10001]; int X[10]; pair<int, vector<int>> Calculate(int n, int m, int mask) { vector<pair<int, int>> v(m); for (int k = 0; k < m; ++k) { int c = 0; for (int i = 0; i < n; ++i) { if (s[i][k] == '0') { continue; } c += ((mask & (1 << i)) != 0) ? 1 : -1; } v[k] = {c, k}; } int ans = 0; for (int i = 0; i < n; ++i) { int c = ((mask & (1 << i)) != 0) ? -1 : 1; ans += c * X[i]; } vector<int> p(m); sort(v.begin(), v.end()); for (int k = 0; k < m; ++k) { ans += v[k].first * (k + 1); p[v[k].second] = k + 1; } return {ans, p}; } void Solve() { int n, m; scanf("%d%d", &n, &m); for (int i = 1; i <= n; ++i) { scanf("%d", &X[i]); } for (int i = 0; i < n; ++i) { scanf("%s", s[i]); } pair<int, vector<int>> ans = {INT_MIN, vector<int>()}; for (int mask = 0; mask < (1 << n); ++mask) { ans = max(ans, Calculate(n, m, mask)); } auto [_, p] = ans; for (int pi : p) { printf("%d ", pi); } printf("\n"); } int main() { int t; scanf("%d", &t); while (t--) { Solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; char s[10][10001]; int X[10]; pair<int, vector<int>> Calculate(int n, int m, int mask) { vector<pair<int, int>> v(m); for (int k = 0; k < m; ++k) { int c = 0; for (int i = 0; i < n; ++i) { if (s[i][k] == '0') { continue; } c += ((mask & (1 << i)) != 0) ? 1 : -1; } v[k] = {c, k}; } int ans = 0; for (int i = 0; i < n; ++i) { int c = ((mask & (1 << i)) != 0) ? -1 : 1; ans += c * X[i]; } vector<int> p(m); sort(v.begin(), v.end()); for (int k = 0; k < m; ++k) { ans += v[k].first * (k + 1); p[v[k].second] = k + 1; } return {ans, p}; } void Solve() { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; ++i) { scanf("%d", &X[i]); } for (int i = 0; i < n; ++i) { scanf("%s", s[i]); } pair<int, vector<int>> ans = {INT_MIN, vector<int>()}; for (int mask = 0; mask < (1 << n); ++mask) { ans = max(ans, Calculate(n, m, mask)); } auto [_, p] = ans; for (int pi : p) { printf("%d ", pi); } printf("\n"); } int main() { int t; scanf("%d", &t); while (t--) { Solve(); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 15; const int M = 1e4 + 5; int t, n, m, a[N], sum, f, ans[N], res; char s[N][M]; pair<int, int> c[M]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; res = -1; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> (s[i] + 1); for (int i = 0; i < (1 << n); i++) { sum = 0; for (int j = 1; j <= m; j++) c[j] = {0, j}; for (int j = 1; j <= n; j++) { if ((i >> (j - 1)) & 1) f = 1; else f = -1; sum += f * a[j]; for (int k = 1; k <= m; k++) if (s[j][k] == '1') c[k].first -= f; } sort(c + 1, c + m + 1); for (int j = 1; j <= m; j++) sum += j * c[j].first; if (sum > res) { res = sum; for (int j = 1; j <= m; j++) ans[c[j].second] = j; } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 15; const int M = 1e4 + 5; int t, n, m, a[N], sum, f, ans[M], res; char s[N][M]; pair<int, int> c[M]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; res = -1; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> (s[i] + 1); for (int i = 0; i < (1 << n); i++) { sum = 0; for (int j = 1; j <= m; j++) c[j] = {0, j}; for (int j = 1; j <= n; j++) { if ((i >> (j - 1)) & 1) f = 1; else f = -1; sum += f * a[j]; for (int k = 1; k <= m; k++) if (s[j][k] == '1') c[k].first -= f; } sort(c + 1, c + m + 1); for (int j = 1; j <= m; j++) sum += j * c[j].first; if (sum > res) { res = sum; for (int j = 1; j <= m; j++) ans[c[j].second] = j; } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << endl; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 12; const int M = 10005; const int lim = 200000; const int inf = 1e9; int T; int n, m; int x[N]; char s[N][M]; int cnt[M]; int b[M]; int ans[M]; bool cmp(int i, int j) { return cnt[i] < cnt[j]; } int main() { scanf("%d", &T); while (T--) { scanf("%d%d", &n, &m); for (int i = 0; i <= n - 1; ++i) scanf("%d", &x[i]); for (int i = 0; i <= n - 1; ++i) scanf("%s", s[i]); int ret = 0; for (int mask = 0; mask <= (1 << n) - 1; ++mask) { for (int j = 0; j <= m - 1; ++j) cnt[j] = 0; for (int i = 0; i <= n - 1; ++i) { for (int j = 0; j <= m - 1; ++j) { if (s[i][j] == '1') { if (mask & (1 << i)) ++cnt[j]; else --cnt[j]; } } } for (int j = 0; j <= m - 1; ++j) b[j] = j; sort(b, b + m, cmp); int tmp = 0; for (int i = 0; i <= n - 1; ++i) { int r = 0; for (int j = 0; j <= m - 1; ++j) { if (s[i][b[j]] == '1') { r += j + 1; } } if (mask & (1 << i)) tmp += r - x[i]; else tmp -= r - x[i]; } if (tmp > ret) { ret = tmp; for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1; } } for (int j = 0; j <= m - 1; ++j) printf("%d ", ans[j]); printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 12; const int M = 10005; const int lim = 200000; const int inf = 1e9; int T; int n, m; int x[N]; char s[N][M]; int cnt[M]; int b[M]; int ans[M]; bool cmp(int i, int j) { return cnt[i] < cnt[j]; } int main() { scanf("%d", &T); while (T--) { scanf("%d%d", &n, &m); for (int i = 0; i <= n - 1; ++i) scanf("%d", &x[i]); for (int i = 0; i <= n - 1; ++i) scanf("%s", s[i]); int ret = -inf; for (int mask = 0; mask <= (1 << n) - 1; ++mask) { for (int j = 0; j <= m - 1; ++j) cnt[j] = 0; for (int i = 0; i <= n - 1; ++i) { for (int j = 0; j <= m - 1; ++j) { if (s[i][j] == '1') { if (mask & (1 << i)) ++cnt[j]; else --cnt[j]; } } } for (int j = 0; j <= m - 1; ++j) b[j] = j; sort(b, b + m, cmp); int tmp = 0; for (int i = 0; i <= n - 1; ++i) { int r = 0; for (int j = 0; j <= m - 1; ++j) { if (s[i][b[j]] == '1') { r += j + 1; } } if (mask & (1 << i)) tmp += r - x[i]; else tmp -= r - x[i]; } if (tmp > ret) { ret = tmp; for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1; } } for (int j = 0; j <= m - 1; ++j) printf("%d ", ans[j]); printf("\n"); } return 0; }
159	 #include <bits/stdc++.h> using namespace std; using uint = unsigned int; const int N = 1e6 + 5; mt19937 rnd(time(0)); int n, K, flag[N], pr[N], cnt; uint H[N], sum; unordered_map<uint, int> pos; int main() { scanf("%d", &n); K = n >> 1; flag[0] = flag[1] = 1, H[1] = 0; for (int i = 2; i <= n; i++) { if (!flag[i]) pr[++cnt] = i, H[i] = rnd(); for (int j = 1; j <= cnt && i * pr[j] <= n; j++) { flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]]; if (i % pr[j] == 0) break; } } for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i]; if (sum == 0) { printf("%d\n", n); for (int i = 1; i <= n; i++) printf("%d ", i); return 0; } for (int i = 1; i <= n; i++) if (H[i] == sum) { printf("%d\n", n - 1); for (int j = 1; j <= n; j++) if (j != i) printf("%d ", j); return 0; } for (int i = 1; i <= n; i++) { if (pos.count(sum ^ H[i])) { int p = pos[sum ^ H[i]]; printf("%d\n", n - 2); for (int j = 1; j <= n; j++) if (j != i && j != p) printf("%d ", j); return 0; } pos[H[i]] = i; } printf("%d\n", n - 3); for (int i = 1; i <= n; i++) if (i != 2 && i != K && i != n) printf("%d ", i); return 0; }	 #include <bits/stdc++.h> using namespace std; using ull = unsigned long long; const int N = 1e6 + 5; mt19937_64 rnd(time(0)); int n, K, flag[N], pr[N], cnt; ull H[N], sum; unordered_map<ull, int> pos; int main() { scanf("%d", &n); K = n >> 1; flag[0] = flag[1] = 1, H[1] = 0; for (int i = 2; i <= n; i++) { if (!flag[i]) pr[++cnt] = i, H[i] = rnd(); for (int j = 1; j <= cnt && i * pr[j] <= n; j++) { flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]]; if (i % pr[j] == 0) break; } } for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i]; if (sum == 0) { printf("%d\n", n); for (int i = 1; i <= n; i++) printf("%d ", i); return 0; } for (int i = 1; i <= n; i++) if (H[i] == sum) { printf("%d\n", n - 1); for (int j = 1; j <= n; j++) if (j != i) printf("%d ", j); return 0; } for (int i = 1; i <= n; i++) { if (pos.count(sum ^ H[i])) { int p = pos[sum ^ H[i]]; printf("%d\n", n - 2); for (int j = 1; j <= n; j++) if (j != i && j != p) printf("%d ", j); return 0; } pos[H[i]] = i; } printf("%d\n", n - 3); for (int i = 1; i <= n; i++) if (i != 2 && i != K && i != n) printf("%d ", i); return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int row, column, r_row, r_column, f_row, f_column; int dr = 1, dc = 1; cin >> row >> column >> r_row >> r_column >> f_row >> f_column; int count; count = 0; while (f_row != r_row && f_column != r_column) { if (r_row + dr > row || r_row + dr < 1) { dr *= (-1); } if (r_column + dr > column || r_column + dr < 1) { dc *= (-1); } r_column += dc; r_row += dr; count++; } cout << count << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int row, column, r_row, r_column, f_row, f_column; int dr = 1, dc = 1; cin >> row >> column >> r_row >> r_column >> f_row >> f_column; int count; count = 0; while (f_row != r_row && f_column != r_column) { if (r_row + dr > row || r_row + dr < 1) { dr *= (-1); } if (r_column + dc > column || r_column + dc < 1) { dc *= (-1); } r_column += dc; r_row += dr; count++; } cout << count << endl; } }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int rb, cb, rd, cd; cin >> rb >> cb >> rd >> cd; int x1, x2; if (rb <= rd) { x1 = rd - rb; } else if (rb > rd) { x1 = 2 * (n)-rb - rd; } if (cb <= cd) { x2 = cd - cb; } else if (cb > cd) { x2 = 2 * (m)-rb - rd; } if (x1 < x2) { cout << x1 << endl; } else cout << x2 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int rb, cb, rd, cd; cin >> rb >> cb >> rd >> cd; int x1, x2; if (rb <= rd) { x1 = rd - rb; } else if (rb > rd) { x1 = 2 * (n)-rb - rd; } if (cb <= cd) { x2 = cd - cb; } else if (cb > cd) { x2 = 2 * (m)-cb - cd; } if (x1 < x2) { cout << x1 << endl; } else cout << x2 << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int f; cin >> f; int r, c; int rl, cl; int ra, ca; for (int i = 0; i < f; i++) { int tr = 0, tc = 0; cin >> r >> c; cin >> rl >> cl; cin >> ra >> ca; if (cl == ca) tc = 0; if (cl == ra) tr = 0; else if (rl < ra) tr = ra - rl; else tr = (r - rl) + (r - ra); if (cl == ca) tc = 0; else if (cl < ca) tc = ca - cl; else tc = (c - cl) + (c - ca); if (tr >= tc) cout << tc; else cout << tr; cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int f; cin >> f; int r, c; int rl, cl; int ra, ca; for (int i = 0; i < f; i++) { int tr = 0, tc = 0; cin >> r >> c; cin >> rl >> cl; cin >> ra >> ca; if (cl == ca) tc = 0; if (rl == ra) tr = 0; else if (rl < ra) tr = ra - rl; else tr = (r - rl) + (r - ra); if (cl == ca) tc = 0; else if (cl < ca) tc = ca - cl; else tc = (c - cl) + (c - ca); if (tr >= tc) cout << tc; else cout << tr; cout << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; scanf("%d%d%d%d%d%d", &m, &n, &rb, &cb, &rd, &cd); int ans = 0; int dr = 1, dc = 1; while (rb != rd && cb != cd) { if (rb + dr < 1 || rb + dr > n) dr *= -1; if (cb + dc < 1 || cb + dc > m) dc *= -1; rb += dr; cb += dc; ans++; } printf("%d\n", ans); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; scanf("%d%d%d%d%d%d", &n, &m, &rb, &cb, &rd, &cd); int ans = 0; int dr = 1, dc = 1; while (rb != rd && cb != cd) { if (rb + dr < 1 || rb + dr > n) dr *= -1; if (cb + dc < 1 || cb + dc > m) dc *= -1; rb += dr; cb += dc; ans++; } printf("%d\n", ans); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }
160	 #include <bits/stdc++.h> using namespace std; long long inf = 1000000007; double pi = acos(-1); long long p(long long a, long long b) { long long ans = 1; if (a < 0) a += inf; while (b) { if (b % 2 == 1) { ans = ((ans % inf) * (a % inf)) % inf; } a = ((a % inf) * (a % inf)) % inf; if (a < 0) a += inf; b /= 2; } return ans; } long long lis(vector<long long>& arr) { vector<long long> temp; for (auto i : arr) { if (temp.empty() || i > temp.back()) temp.push_back(i); else { auto it = lower_bound(temp.begin(), temp.end(), i); *it = i; } } return temp.size(); } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; for (long long tt = 1; tt <= t; tt++) { long long n, m, r1, c1, r2, c2; cin >> n >> m >> r1 >> c1 >> r2 >> c2; long long ans = 1e9; if (r1 <= r2) { ans = min(ans, r2 - r1); } else { ans = min(ans, r1 - r2 + 2 * (n - r1)); } if (c1 <= 2) { ans = min(ans, c2 - c1); } else { ans = min(ans, c1 - c2 + 2 * (m - c1)); } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long inf = 1000000007; double pi = acos(-1); long long p(long long a, long long b) { long long ans = 1; if (a < 0) a += inf; while (b) { if (b % 2 == 1) { ans = ((ans % inf) * (a % inf)) % inf; } a = ((a % inf) * (a % inf)) % inf; if (a < 0) a += inf; b /= 2; } return ans; } long long lis(vector<long long>& arr) { vector<long long> temp; for (auto i : arr) { if (temp.empty() || i > temp.back()) temp.push_back(i); else { auto it = lower_bound(temp.begin(), temp.end(), i); *it = i; } } return temp.size(); } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; for (long long tt = 1; tt <= t; tt++) { long long n, m, r1, c1, r2, c2; cin >> n >> m >> r1 >> c1 >> r2 >> c2; long long ans = 1e9; if (r1 <= r2) { ans = min(ans, r2 - r1); } else { ans = min(ans, r1 - r2 + 2 * (n - r1)); } if (c1 <= c2) { ans = min(ans, c2 - c1); } else { ans = min(ans, c1 - c2 + 2 * (m - c1)); } cout << ans << '\n'; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; const long long N = 1e17; const long long sz = 2e5 + 5; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1; cin >> r >> c >> rb >> cb >> rd >> cd; long long time = 0; while (true) { if (cb == cd || rb == rd) { break; } else { if (rb + mv1 > r || rb + mv1 <= 0) { mv1 *= -1; } else if (cb + mv2 > c || cb + mv2 <= 0) { mv2 *= -1; } rb += mv1; cb += mv2; } time++; } cout << time << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long N = 1e17; const long long sz = 2e5 + 5; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1; cin >> r >> c >> rb >> cb >> rd >> cd; long long time = 0; while (true) { if (cb == cd || rb == rd) { break; } else { if (rb + mv1 > r || rb + mv1 <= 0) { mv1 *= -1; } if (cb + mv2 > c || cb + mv2 <= 0) { mv2 *= -1; } rb += mv1; cb += mv2; } time++; } cout << time << endl; } }
160	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd)); int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - n) + abs(n - cd)); int ans = min(x, y); cout << ans << endl; } int main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd)); int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd)); int ans = min(x, y); cout << ans << endl; } int main() { int t; cin >> t; while (t--) solve(); return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1; cin >> n >> m >> rb >> cb >> rd >> cd; while ((rb != rd) && (cb != cd)) { ans++; if (flag1) rb++; else rb--; if (rb > n) { rb -= 2; flag1 = 0; } if (rb < 1) { rb += 2; flag1 = 1; } if (flag2) cb++; else cb--; if (cb > n) { cb -= 2; flag2 = 0; } if (cb < 1) { cb += 2; flag1 = 1; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1; cin >> n >> m >> rb >> cb >> rd >> cd; while ((rb != rd) && (cb != cd)) { ans++; if (flag1) rb++; else rb--; if (rb > n) { rb -= 2; flag1 = 0; } if (rb < 1) { rb += 2; flag1 = 1; } if (flag2) cb++; else cb--; if (cb > m) { cb -= 2; flag2 = 0; } if (cb < 1) { cb += 2; flag1 = 1; } } cout << ans << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; template <typename T> inline void read(T& x) { x = 0; bool f = 0; char ch = (char)getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = 1; ch = (char)getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + (ch & 15); ch = (char)getchar(); } if (f) x = -x; } template <typename T> inline void write(T x) { if (x < 0) x = -x, putchar('-'); static int st[45]; int top = 0; do { st[top++] = x % 10; x /= 10; } while (x); while (top) putchar(st[--top] + '0'); putchar('\n'); } const long double pi = acos(-1.0); const long double eps = (double)1e-7; const long long mod = 1e9 + 7; const int maxn = 1505; const int maxm = 5005; int main() { ios::sync_with_stdio(false); cin.tie(0); ; int T; cin >> T; while (T--) { int n, m, a1, b1, a2, b2; cin >> n >> m >> a1 >> b1 >> a2 >> b2; int dx = 1, dy = 1; int ans = 0; while (a1 != a2 && b1 != b2) { if (a1 + dx < 1 || a1 + dx > n) dx = -dx; if (b1 + dx < 1 || b1 + dx > m) dy = -dy; a1 += dx; b1 += dy; ans++; } cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; template <typename T> inline void read(T& x) { x = 0; bool f = 0; char ch = (char)getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = 1; ch = (char)getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + (ch & 15); ch = (char)getchar(); } if (f) x = -x; } template <typename T> inline void write(T x) { if (x < 0) x = -x, putchar('-'); static int st[45]; int top = 0; do { st[top++] = x % 10; x /= 10; } while (x); while (top) putchar(st[--top] + '0'); putchar('\n'); } const long double pi = acos(-1.0); const long double eps = (double)1e-7; const long long mod = 1e9 + 7; const int maxn = 1505; const int maxm = 5005; int main() { ios::sync_with_stdio(false); cin.tie(0); ; int T; cin >> T; while (T--) { int n, m, a1, b1, a2, b2; cin >> n >> m >> a1 >> b1 >> a2 >> b2; int dx = 1, dy = 1; int ans = 0; while (a1 != a2 && b1 != b2) { if (a1 + dx < 1 || a1 + dx > n) dx = -dx; if (b1 + dy < 1 || b1 + dy > m) dy = -dy; a1 += dx; b1 += dy; ans++; } cout << ans << "\n"; } }
160	 #include <bits/stdc++.h> using namespace std; void go() { long long n, m, xr, yr, xd, yd; cin >> n >> m >> xr >> yr >> xd >> yd; long long dirx = 1, diry = 1; long long ans = 0; while (true) { if (xr == xd || yr == yd) { break; } xr += dirx; yr += diry; if (xr > xd) { dirx = -1; xr = n - 1; } if (yr > m) { diry = -1; yr = m - 1; } if (xr < 1) { xr = 2; dirx = 1; } if (yr < 1) { yr = 2; diry = 1; } ans++; } cout << ans << "\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; t = 1; cin >> t; while (t--) { go(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void go() { long long n, m, xr, yr, xd, yd; cin >> n >> m >> xr >> yr >> xd >> yd; long long dirx = 1, diry = 1; long long ans = 0; while (true) { if (xr == xd || yr == yd) { break; } xr += dirx; yr += diry; if (xr > n) { dirx = -1; xr = n - 1; } if (yr > m) { diry = -1; yr = m - 1; } if (xr < 1) { xr = 2; dirx = 1; } if (yr < 1) { yr = 2; diry = 1; } ans++; } cout << ans << "\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; t = 1; cin >> t; while (t--) { go(); } return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int ans; if (rd - rb >= 0) ans = rd - rb; else ans = 2 * n - (rd + rb); if (cd - cb >= 0) ans = min(ans, cd - cb); else ans = min(ans, 2 * m - (rd + rb)); cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int ans; if (rd - rb >= 0) ans = rd - rb; else ans = 2 * n - (rd + rb); if (cd - cb >= 0) ans = min(ans, cd - cb); else ans = min(ans, 2 * m - (cd + cb)); cout << ans << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; const int nax = 2 * (int)1e5 + 10; const int INF = (int)1e9 + 47; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int tt; cin >> tt; while (tt--) { int n, m, a, b, c, d; cin >> n >> m >> a >> b >> c >> d; int ans = INF; if (a <= c) ans = min(ans, c - a); if (b <= d) ans = min(ans, d - b); if (a > c) ans = min(ans, (n - a) + (n - c)); if (b > c) ans = min(ans, (m - b) + (m - d)); cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int nax = 2 * (int)1e5 + 10; const int INF = (int)1e9 + 47; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int tt; cin >> tt; while (tt--) { int n, m, a, b, c, d; cin >> n >> m >> a >> b >> c >> d; int ans = INF; if (a <= c) ans = min(ans, c - a); if (b <= d) ans = min(ans, d - b); if (a > c) ans = min(ans, (n - a) + (n - c)); if (b > d) ans = min(ans, (m - b) + (m - d)); cout << ans << '\n'; } }
161	 #include <bits/stdc++.h> using namespace std; int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1}; int dy[] = {0, 1, 0, -1, -1, 1, -1, 1}; int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2}; int ky[] = {1, 2, 2, 1, -1, -2, -2, -1}; bool com(pair<int, int> a, pair<int, int> b) { return abs(a.first - a.second) < abs(b.first - b.second); } void solved() { int n, x, y; cin >> n; vector<pair<int, int> > v; for (int i = 0; i < n; i++) { cin >> x >> y; v.push_back({x, y}); } sort(v.begin(), v.end(), com); int ar[n + 1]; memset(ar, 0, sizeof(ar)); for (auto it : v) { int a = it.first, b = it.second; if (ar[a] == 0) { cout << a << ' ' << b << ' ' << a << endl; ar[a] = 1; } else if (ar[b] == 0) { cout << a << ' ' << b << ' ' << b << endl; ar[b] = 1; } else { for (int i = 1; i <= n; i++) { if (ar[i] == 0) { cout << a << ' ' << b << ' ' << i << endl; ar[i] = 1; break; } } } } } int main() { long long int tc; cin >> tc; while (tc--) { solved(); } }	 #include <bits/stdc++.h> using namespace std; int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1}; int dy[] = {0, 1, 0, -1, -1, 1, -1, 1}; int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2}; int ky[] = {1, 2, 2, 1, -1, -2, -2, -1}; bool com(pair<int, int> a, pair<int, int> b) { return abs(a.first - a.second) < abs(b.first - b.second); } void solved() { int n, x, y; cin >> n; vector<pair<int, int> > v; for (int i = 0; i < n; i++) { cin >> x >> y; v.push_back({x, y}); } sort(v.begin(), v.end(), com); int ar[n + 1]; memset(ar, 0, sizeof(ar)); for (auto it : v) { int a = it.first, b = it.second; if (ar[a] == 0) { cout << a << ' ' << b << ' ' << a << endl; ar[a] = 1; } else if (ar[b] == 0) { cout << a << ' ' << b << ' ' << b << endl; ar[b] = 1; } else { for (int i = a; i <= b; i++) { if (ar[i] == 0) { cout << a << ' ' << b << ' ' << i << endl; ar[i] = 1; break; } } } } } int main() { long long int tc; cin >> tc; while (tc--) { solved(); } }
161	 #include <bits/stdc++.h> using namespace std; int t, n, v[1010]; struct node { int l, r, d; } a[1010]; bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; } int main() { cin >> t; while (t--) { memset(v, 0, sizeof(v)); cin >> n; for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r; sort(a + 1, a + 1 + n, cmp); for (int i = 1; i <= n; i++) { for (int j = a[i].l; j <= a[i].r; i++) { if (v[j] == 0) { a[i].d = j; v[j] = 1; break; } } } for (int i = 1; i <= n; i++) cout << a[i].l << " " << a[i].r << " " << a[i].d << endl; } }	 #include <bits/stdc++.h> using namespace std; int t, n, v[1010]; struct node { int l, r, d; } a[1010]; bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; } int main() { cin >> t; while (t--) { memset(v, 0, sizeof(v)); cin >> n; for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r; sort(a + 1, a + 1 + n, cmp); for (int i = 1; i <= n; i++) { for (int j = a[i].l; j <= a[i].r; j++) { if (v[j] == 0) { a[i].d = j; v[j] = 1; break; } } } for (int i = 1; i <= n; i++) cout << a[i].l << " " << a[i].r << " " << a[i].d << endl; } }
162	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5; long long h[N], n; bool check(long long k) { vector<long long> a(h, h + n); for (int i = n - 1; i > 1; i--) { if (a[i] < k) return false; int d = min(h[i], a[i]) / 3; a[i - 1] += d; a[i - 2] += d; a[i - 2] += d; } return a[0] >= k && a[1] >= k; } void solve() { cin >> n; long long MAX = 0; for (int i = 0; i < n; i++) { cin >> h[i]; MAX = max(MAX, h[i]); } long long l = 0; long long r = 1e9 + 1; while (r - l > 1) { long long mid = (r + l) / 2; check(mid) ? l = mid : r = mid; } cout << l << "\n"; } int main() { std::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 5; long long h[N], n; bool check(long long k) { vector<long long> a(h, h + n); for (int i = n - 1; i > 1; i--) { if (a[i] < k) return false; int d = min(h[i], a[i] - k) / 3; a[i - 1] += d; a[i - 2] += d; a[i - 2] += d; } return a[0] >= k && a[1] >= k; } void solve() { cin >> n; long long MAX = 0; for (int i = 0; i < n; i++) { cin >> h[i]; MAX = max(MAX, h[i]); } long long l = 0; long long r = 1e9 + 1; while (r - l > 1) { long long mid = (r + l) / 2; check(mid) ? l = mid : r = mid; } cout << l << "\n"; } int main() { std::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); return 0; }
162	 #include <bits/stdc++.h> using namespace std; long long t, n, m, k, mod = 1e9 + 7, ans, a[200011]; string s, s2; bool flag, vis[2000111]; vector<long long> v, tmp; bool okD(long long d, long long mid, long long i) { return tmp[i] - 3 * d >= mid; } bool ok(long long mid) { tmp = v; for (long long i = n - 1; i >= 2; i--) { long long d = tmp[i] - mid; d = min(v[i], d); if (d < 0) return false; d /= 3; tmp[i] -= d * 3; tmp[i - 1] += d; tmp[i - 2] += 2 * d; } long long ret = 1e9; for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]); return ret >= mid; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { cin >> n; v.resize(n); for (long long i = 0; i < n; i++) cin >> v[i]; long long L = 1, R = 10; while (L <= R) { long long mid = (L + R + 1) / 2; if (ok(mid)) ans = mid, L = mid + 1; else R = mid - 1; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long t, n, m, k, mod = 1e9 + 7, ans, a[200011]; string s, s2; bool flag, vis[2000111]; vector<long long> v, tmp; bool okD(long long d, long long mid, long long i) { return tmp[i] - 3 * d >= mid; } bool ok(long long mid) { tmp = v; for (long long i = n - 1; i >= 2; i--) { long long d = tmp[i] - mid; d = min(v[i], d); if (d < 0) return false; d /= 3; tmp[i] -= d * 3; tmp[i - 1] += d; tmp[i - 2] += 2 * d; } long long ret = 1e9; for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]); return ret >= mid; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { cin >> n; v.resize(n); for (long long i = 0; i < n; i++) cin >> v[i]; long long L = 1, R = 1e9; while (L <= R) { long long mid = (L + R + 1) / 2; if (ok(mid)) ans = mid, L = mid + 1; else R = mid - 1; } cout << ans << '\n'; } return 0; }
162	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int a[MAXN]; int b[MAXN]; int c[MAXN]; int n; bool check(int x) { for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0; for (int i = n; i >= 3; i--) { if (b[i] + c[i] < x) return false; int now = x - c[i]; if (now <= 0) { int res = b[i] / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } else { int res = (b[i] - now) / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } } if (b[1] + c[1] < x || b[2] + c[2] < x) return false; return true; } int main() { std::ios::sync_with_stdio(false); int _; cin >> _; while (_--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int l = 1, r = 10; while (l <= r) { int mid = l + r >> 1; if (check(mid)) { l = mid + 1; } else r = mid - 1; } cout << r << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int a[MAXN]; int b[MAXN]; int c[MAXN]; int n; bool check(int x) { for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0; for (int i = n; i >= 3; i--) { if (b[i] + c[i] < x) return false; int now = x - c[i]; if (now <= 0) { int res = b[i] / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } else { int res = (b[i] - now) / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } } if (b[1] + c[1] < x || b[2] + c[2] < x) return false; return true; } int main() { std::ios::sync_with_stdio(false); int _; cin >> _; while (_--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int l = 1, r = 1e9; while (l <= r) { int mid = l + r >> 1; if (check(mid)) { l = mid + 1; } else r = mid - 1; } cout << r << '\n'; } }
163	 #include <bits/stdc++.h> using namespace std; const int mod = 1000000009; inline int qp(long long a, long long b) { long long ans = 1; for (; b;) { if (b & 1) ans = ans * a % mod; b >>= 1; a = a * a % mod; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; for (; t--;) { int n, m, bx, by, dx, dy; long long p; cin >> n >> m >> bx >> by >> dx >> dy >> p; int cx = 1, cy = 1; long long u = 0, d = 1; p = (1 - p * qp(100, mod - 2) % mod + mod) % mod; for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) { if (bx + cx == 0 || bx + cx > n) cx = -cx; if (by + cy == 0 || by + cy > m) cy = -cy; bx += cx; by += cy; u = (u + 1) % mod; if (bx == dx || by == dy) { u = u * p % mod; d = d * p % mod; } } d = (1 - d + mod) % mod; cout << u * qp(d, mod - 2) % mod << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int mod = 1000000007; inline int qp(long long a, long long b) { long long ans = 1; for (; b;) { if (b & 1) ans = ans * a % mod; b >>= 1; a = a * a % mod; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; for (; t--;) { int n, m, bx, by, dx, dy; long long p; cin >> n >> m >> bx >> by >> dx >> dy >> p; int cx = -1, cy = -1; long long u = 0, d = 1; p = (1 - p * qp(100, mod - 2) % mod + mod) % mod; for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) { if (bx + cx == 0 || bx + cx > n) cx = -cx; if (by + cy == 0 || by + cy > m) cy = -cy; bx += cx; by += cy; u = (u + 1) % mod; if (bx == dx || by == dy) { u = u * p % mod; d = d * p % mod; } } d = (1 - d + mod) % mod; cout << u * qp(d, mod - 2) % mod << '\n'; } }
163	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long ksm(long long a, long long b, long long mod) { long long c = 1; while (b) { if (b & 1) c = c * a % mod; b >>= 1; a = a * a % mod; } return c; } long long inv(int x) { return ksm(x, mod - 2, mod); } int t, n, m, len, p, sx, sy, tx, ty, dx, dy; int main() { cin >> t; while (t--) { cin >> n >> m >> sx >> sy >> tx >> ty >> p; long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod, p2 = p * inv(100), P; dx = dy = 1; len = 0; if (sx == tx || sy == ty) P = p1; else P = 1; int tot = 0; for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) { if (sx + dx > n || sx + dx < 1) dx = -dx; if (sy + dy > m || sy + dy < 1) dy = -dy; sx += dx, sy += dy, len = (len + 1) % mod; if (sx == tx || sy == ty) { tot++; ans = (ans + P * len % mod) % mod; P = p1 * P % mod; len = 0; } } if (sx == ty || sy == ty) P = P * inv(p1) % mod; else ans = (ans + len * P % mod) % mod; cout << (ans * inv((1 - P + mod) % mod)) % mod << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long ksm(long long a, long long b, long long mod) { long long c = 1; while (b) { if (b & 1) c = c * a % mod; b >>= 1; a = a * a % mod; } return c; } long long inv(int x) { return ksm(x, mod - 2, mod); } int t, n, m, len, p, sx, sy, tx, ty, dx, dy; int main() { cin >> t; while (t--) { cin >> n >> m >> sx >> sy >> tx >> ty >> p; long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod, p2 = p * inv(100), P; dx = dy = 1; len = 0; if (sx == tx || sy == ty) P = p1; else P = 1; int tot = 0; for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) { if (sx + dx > n || sx + dx < 1) dx = -dx; if (sy + dy > m || sy + dy < 1) dy = -dy; sx += dx, sy += dy, len = (len + 1) % mod; if (sx == tx || sy == ty) { tot++; ans = (ans + P * len % mod) % mod; P = p1 * P % mod; len = 0; } } if (sx == tx || sy == ty) P = P * inv(p1) % mod; else ans = (ans + len * P % mod) % mod; cout << (ans * inv((1 - P + mod) % mod)) % mod << endl; } }
164	 #include <bits/stdc++.h> using namespace std; int32_t main() { cin.tie(0)->sync_with_stdio(0); long long n, k; string s; cin >> n >> k >> s; vector<long long> l(n), r(n), val(n), d(n, 0), in; for (long long i = 0; i < n; i++) { cin >> l[i] >> r[i]; --l[i], --r[i]; } function<void(long long)> dfs = [&](long long v) { if (v == -1) return; dfs(l[v]); in.push_back(v); dfs(r[v]); }; dfs(0); val[in.back()] = 0; for (long long i = n - 2; i >= 0; i--) { if (s[in[i]] == s[in[i + 1]]) val[in[i]] = val[in[i + 1]]; else if (s[in[i]] < s[in[i + 1]]) val[in[i]] = 1; else val[in[i]] = -1; } function<long long(long long, long long)> dfs2 = [&](long long v, long long t) { if (v == -1 or t == 0) return 0ll; long long x = dfs2(l[v], t - 1); if (val[v] == 1 or x) x++; if (x) d[v] = 1; long long rem = t - x; if (!d[v]) rem = 0; dfs2(r[v], rem); return x; }; dfs2(0, k); for (auto i : in) { cout << s[i]; if (d[i]) cout << s[i]; } }	 #include <bits/stdc++.h> using namespace std; int32_t main() { cin.tie(0)->sync_with_stdio(0); long long n, k; string s; cin >> n >> k >> s; vector<long long> l(n), r(n), val(n), d(n, 0), in; for (long long i = 0; i < n; i++) { cin >> l[i] >> r[i]; --l[i], --r[i]; } function<void(long long)> dfs = [&](long long v) { if (v == -1) return; dfs(l[v]); in.push_back(v); dfs(r[v]); }; dfs(0); val[in.back()] = 0; for (long long i = n - 2; i >= 0; i--) { if (s[in[i]] == s[in[i + 1]]) val[in[i]] = val[in[i + 1]]; else if (s[in[i]] < s[in[i + 1]]) val[in[i]] = 1; else val[in[i]] = -1; } function<long long(long long, long long)> dfs2 = [&](long long v, long long t) { if (v == -1 or t == 0) return 0ll; long long x = dfs2(l[v], t - 1); if (val[v] == 1 or x) x++; if (x) d[v] = 1; long long rem = t - x; if (!d[v]) rem = 0; x += dfs2(r[v], rem); return x; }; dfs2(0, k); for (auto i : in) { cout << s[i]; if (d[i]) cout << s[i]; } }
148	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; vector<int> x_0; vector<int> y_w; vector<int> x_h; vector<int> y_0; int a, b, c, d; int u; int k, w, h; while (t--) { cin >> w >> h; cin >> k; while (k--) { cin >> u; x_0.push_back(u); } a = x_0[x_0.size() - 1] - x_0[0]; cin >> k; while (k--) { cin >> u; x_h.push_back(u); } c = x_h[x_h.size() - 1] - x_h[0]; cin >> k; while (k--) { cin >> u; y_0.push_back(u); } d = y_0[y_0.size() - 1] - y_0[0]; cin >> k; while (k--) { cin >> u; y_w.push_back(u); } b = y_w[y_w.size() - 1] - y_w[0]; a = (a > c) ? a : c; a = a * h; b = (b > d) ? b : d; b = b * w; a = (a > b) ? a : b; cout << a << "\n"; x_0.clear(); y_0.clear(); x_h.clear(); y_w.clear(); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); int t; cin >> t; vector<int> x_0; vector<int> y_w; vector<int> x_h; vector<int> y_0; long long a, b, c, d; int u; int k, w, h; while (t--) { cin >> w >> h; cin >> k; while (k--) { cin >> u; x_0.push_back(u); } a = x_0[x_0.size() - 1] - x_0[0]; cin >> k; while (k--) { cin >> u; x_h.push_back(u); } c = x_h[x_h.size() - 1] - x_h[0]; cin >> k; while (k--) { cin >> u; y_0.push_back(u); } d = y_0[y_0.size() - 1] - y_0[0]; cin >> k; while (k--) { cin >> u; y_w.push_back(u); } b = y_w[y_w.size() - 1] - y_w[0]; a = (a > c) ? a : c; a = a * h; b = (b > d) ? b : d; b = b * w; a = (a > b) ? a : b; cout << a << "\n"; x_0.clear(); y_0.clear(); x_h.clear(); y_w.clear(); } return 0; }
148	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long int w, k; cin >> w >> k; int x, x1; cin >> x; vector<int> a(x); for (int i = 0; i < x; i++) cin >> a[i]; cin >> x1; vector<int> b(x1); for (int i = 0; i < x1; i++) cin >> b[i]; int mx; mx = max(a[x - 1] - a[0], b[x1 - 1] - b[0]); int y, y1; cin >> y; vector<int> c(y); for (int i = 0; i < y; i++) cin >> c[i]; cin >> y1; vector<int> d(y1); for (int i = 0; i < y1; i++) cin >> d[i]; int mx1; mx1 = max(c[y - 1] - c[0], c[y1 - 1] - c[0]); if (mx * k > mx1 * w) cout << mx * k << endl; else cout << mx1 * w << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) { long long int w, k; cin >> w >> k; int x, x1; cin >> x; vector<int> a(x); for (int i = 0; i < x; i++) cin >> a[i]; cin >> x1; vector<int> b(x1); for (int i = 0; i < x1; i++) cin >> b[i]; int mx; mx = max(a[x - 1] - a[0], b[x1 - 1] - b[0]); int y, y1; cin >> y; vector<int> c(y); for (int i = 0; i < y; i++) cin >> c[i]; cin >> y1; vector<int> d(y1); for (int i = 0; i < y1; i++) cin >> d[i]; int mx1; mx1 = max(c[y - 1] - c[0], d[y1 - 1] - d[0]); if (mx * k > mx1 * w) cout << mx * k << endl; else cout << mx1 * w << endl; } return 0; }
148	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { int w, o; cin >> w >> o; int h1, h2, v1, v2, d1, d2, d3, d4; cin >> h1; vector<int> h(h1); for (int i = 0; i < h1; i++) { cin >> h[i]; } d1 = h.back() - h.front(); cin >> h2; vector<int> hh(h2); for (int i = 0; i < h2; i++) { cin >> hh[i]; } d2 = hh.back() - hh.front(); cin >> v1; vector<int> v(v1); for (int i = 0; i < v1; i++) { cin >> v[i]; } d3 = v.back() - v.front(); cin >> v2; vector<int> vv(v2); for (int i = 0; i < v2; i++) { cin >> vv[i]; } d4 = vv.back() - vv.front(); long long ans1 = max(d1, d2) * o, ans2 = max(d3, d4) * w; cout << max(ans1, ans2) << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(0); int t; cin >> t; while (t--) { long long w, o; cin >> w >> o; int h1, h2, v1, v2, d1, d2, d3, d4; cin >> h1; vector<int> h(h1); for (int i = 0; i < h1; i++) { cin >> h[i]; } d1 = h.back() - h.front(); cin >> h2; vector<int> hh(h2); for (int i = 0; i < h2; i++) { cin >> hh[i]; } d2 = hh.back() - hh.front(); cin >> v1; vector<int> v(v1); for (int i = 0; i < v1; i++) { cin >> v[i]; } d3 = v.back() - v.front(); cin >> v2; vector<int> vv(v2); for (int i = 0; i < v2; i++) { cin >> vv[i]; } d4 = vv.back() - vv.front(); long long ans1 = max(d1, d2) * o, ans2 = max(d3, d4) * w; cout << max(ans1, ans2) << "\n"; } return 0; }
148	 #include <bits/stdc++.h> const long long INF = (1ll) * 1e18; using namespace std; void test_case() { long long w, h; cin >> w >> h; long long s1 = 0, s2 = 0, s3 = 0, s4 = 0; long long k, a; cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s1 -= a; else if (j == k - 1) s1 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s2 -= a; else if (j == k - 1) s2 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s3 -= a; else if (j == k - 1) s3 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s4 -= a; else if (j == k - 1) s4 += a; } cout << max(max(s1 * h, s2 * h), max(s3 * w, s4 * h)); } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); auto start = chrono::high_resolution_clock::now(); int testno = 1; cin >> testno; for (int i = 1; i <= testno; i++) { test_case(); cout << '\n'; } auto end = chrono::high_resolution_clock::now(); double time_taken = chrono::duration_cast<chrono::nanoseconds>(end - start).count(); time_taken *= 1e-9; cerr << fixed << time_taken << setprecision(9) << " sec" << endl; return 0; }	 #include <bits/stdc++.h> const long long INF = (1ll) * 1e18; using namespace std; void test_case() { long long w, h; cin >> w >> h; long long s1 = 0, s2 = 0, s3 = 0, s4 = 0; long long k, a; cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s1 -= a; else if (j == k - 1) s1 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s2 -= a; else if (j == k - 1) s2 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s3 -= a; else if (j == k - 1) s3 += a; } cin >> k; for (int j = 0; j < k; j++) { cin >> a; if (j == 0) s4 -= a; else if (j == k - 1) s4 += a; } cout << max(max(s1 * h, s2 * h), max(s3 * w, s4 * w)); } int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); auto start = chrono::high_resolution_clock::now(); int testno = 1; cin >> testno; for (int i = 1; i <= testno; i++) { test_case(); cout << '\n'; } auto end = chrono::high_resolution_clock::now(); double time_taken = chrono::duration_cast<chrono::nanoseconds>(end - start).count(); time_taken *= 1e-9; cerr << fixed << time_taken << setprecision(9) << " sec" << endl; return 0; }
148	 #include <bits/stdc++.h> using namespace std; int main() { long long int w, h, k, j, g, area = 0; long long int t, i; cin >> t; for (i = 1; i <= t; i++) { long long int max1 = 0, max2 = 0, max3 = 0, max4 = 0, min1 = 10000000, min2 = 10000000, min3 = 10000000, min4 = 10000000; area = 0; cin >> w >> h; cin >> k; for (j = 1; j <= k; j++) { cin >> g; min1 = min(min1, g); max1 = max(max1, g); } area = max(area, (max1 - min1) * h); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min2 = min(min2, g); max2 = max(max2, g); } area = max(area, (max2 - min2) * h); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min3 = min(min3, g); max3 = max(max3, g); } area = max(area, (max3 - min3) * w); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min1 = min(min4, g); max1 = max(max4, g); } area = max(area, (max4 - min4) * w); cout << area << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { long long int w, h, k, j, g, area = 0; long long int t, i; cin >> t; for (i = 1; i <= t; i++) { long long int max1 = 0, max2 = 0, max3 = 0, max4 = 0, min1 = 10000000, min2 = 10000000, min3 = 10000000, min4 = 10000000; area = 0; cin >> w >> h; cin >> k; for (j = 1; j <= k; j++) { cin >> g; min1 = min(min1, g); max1 = max(max1, g); } area = max(area, (max1 - min1) * h); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min2 = min(min2, g); max2 = max(max2, g); } area = max(area, (max2 - min2) * h); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min3 = min(min3, g); max3 = max(max3, g); } area = max(area, (max3 - min3) * w); cin >> k; for (j = 1; j <= k; j++) { cin >> g; min4 = min(min4, g); max4 = max(max4, g); } area = max(area, (max4 - min4) * w); cout << area << endl; } }
149	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1) <= 1e18)) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }
149	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1)) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }
149	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1) <= 1e18)) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }
149	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * (f[j] * ((j - i - 1) * x + 1)) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; long long n, k, x, tmp, f[2010], a[2010]; string s; void solve() { cin >> n >> x >> k >> s; s = 'a' + s + 'a'; memset(f, 0, sizeof f); f[n + 1] = 1; for (long long i = n; i >= 0; i--) { if (s[i] == 'a') { for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] != -1 && 1.0 * f[j] * ((j - i - 1) * x + 1) <= 1e18) f[i] = f[j] * ((j - i - 1) * x + 1); else f[i] = -1; break; } } } } for (long long i = 0; i <= n; i++) { if (s[i] == 'a') { if (i != 0) cout << 'a'; for (long long j = i + 1; j <= n + 1; j++) { if (s[j] == 'a') { if (f[j] == -1) break; long long num = (k - 1) / f[j]; for (long long o = 1; o <= num; o++) cout << 'b'; k = (k - 1) % f[j] + 1; break; } } } } cout << '\n'; } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long _ = 1; cin >> _; while (_--) solve(); return 0; }
149	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k, x; cin >> n >> k >> x; string s; cin >> s; vector<long long> num; long long curr = 0; for (auto i : s) { if (i == '*') { curr++; } else { if (curr != 0) { num.push_back(curr * k + 1); } curr = 0; } } if (curr != 0) { num.push_back(curr * k + 1); } vector<long long> ans; long long st = 1; for (int i = 0; i < num.size(); i++) { long double mul = 1; for (int j = i + 1; j < num.size(); j++) mul *= num[j]; long long now; if (mul + st >= x) { now = 0; } else { now = (x - st) / (long long)mul; st += now * mul; } ans.push_back(now); } long long u = 0; string news = ""; long long check = 0; long long i = 0; while (i < n) { if (s[i] == 'a') { news += 'a'; i++; } else { for (int j = 0; j < ans[u]; j++) { news += 'b'; } u++; while (s[i] == '*') { i++; } } } cout << news << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n, k, x; cin >> n >> k >> x; string s; cin >> s; vector<long long> num; long long curr = 0; for (auto i : s) { if (i == '*') { curr++; } else { if (curr != 0) { num.push_back(curr * k + 1); } curr = 0; } } if (curr != 0) { num.push_back(curr * k + 1); } vector<long long> ans; long long st = 1; for (int i = 0; i < num.size(); i++) { long double mul = 1; for (int j = i + 1; j < num.size(); j++) mul *= num[j]; long long now; if (mul + st - 1 >= x) { now = 0; } else { now = (x - st) / (long long)mul; st += now * mul; } ans.push_back(now); } long long u = 0; string news = ""; long long check = 0; long long i = 0; while (i < n) { if (s[i] == 'a') { news += 'a'; i++; } else { for (int j = 0; j < ans[u]; j++) { news += 'b'; } u++; while (s[i] == '*') { i++; } } } cout << news << '\n'; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { solve(); } return 0; }
150	 #include <bits/stdc++.h> using namespace std; const int MOD = 1000000007; void solve() { int n; cin >> n; vector<int> arr(n); for (int i = 0; i < n; ++i) cin >> arr[i]; sort(arr.begin(), arr.end()); set<int> s; for (int num : arr) s.insert(num); if (n == 1) cout << arr[0] / 3 + (arr[0] % 3 == 0 ? 0 : 1) << endl; else { if (arr[0] == 1) { if (arr[1] == 2) { if (arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else cout << arr[n - 1] / 3 + 2 << endl; } else { bool two = false; for (int num : arr) if (num % 3 == 2) { two = true; break; } if (two && arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else if (two) cout << arr[n - 1] / 3 + 2 << endl; else cout << arr[n - 1] / 3 + 1 << endl; } } else { set<int> mods; for (int num : arr) if (num % 3) mods.insert(num % 3); if (mods.size() == 0) cout << arr[n - 1] / 3 << endl; else if (mods.size() == 1) cout << arr[n - 1] / 3 + 1 << endl; else if ((!s.count(arr[n - 1] / 3) && arr[n - 1] % 3 == 1) || arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else cout << arr[n - 1] / 3 + 2 << endl; } } } int main() { int t; cin >> t; for (int i = 0; i < t; ++i) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int MOD = 1000000007; void solve() { int n; cin >> n; vector<int> arr(n); for (int i = 0; i < n; ++i) cin >> arr[i]; sort(arr.begin(), arr.end()); set<int> s; for (int num : arr) s.insert(num); if (n == 1) cout << arr[0] / 3 + (arr[0] % 3 == 0 ? 0 : 1) << endl; else { if (arr[0] == 1) { if (arr[1] == 2) { if (arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else cout << arr[n - 1] / 3 + 2 << endl; } else { bool two = false; for (int num : arr) if (num % 3 == 2) { two = true; break; } if (two && arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else if (two) cout << arr[n - 1] / 3 + 2 << endl; else cout << arr[n - 1] / 3 + 1 << endl; } } else { set<int> mods; for (int num : arr) if (num % 3) mods.insert(num % 3); if (mods.size() == 0) cout << arr[n - 1] / 3 << endl; else if (mods.size() == 1) cout << arr[n - 1] / 3 + 1 << endl; else if ((!s.count(arr[n - 1] / 3 * 3) && arr[n - 1] % 3 == 1) || arr[n - 1] % 3 == 0) cout << arr[n - 1] / 3 + 1 << endl; else cout << arr[n - 1] / 3 + 2 << endl; } } } int main() { int t; cin >> t; for (int i = 0; i < t; ++i) solve(); return 0; }
150	 #include <bits/stdc++.h> using namespace std; int main() { int tests; cin >> tests; for (int idk = 0; idk < tests; idk++) { long long n; cin >> n; long long a[n], one = 0, md1 = 0, md2 = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] == 1) one = 1; if (a[i] % 3 == 1) md1 = 1; if (a[i] % 3 == 2) md2 = 1; } std::sort(a, a + n); int dif1 = 0; for (int i = 0; i < n; i++) if (a[n - 1] - a[i] == 1) dif1 = 1; long long ans[4]; ans[1] = 0; ans[2] = 0; if (md1) ans[1] = 1; if (md2) ans[2] = 1; if ((md1) && (md2) && (one == 0) && (a[n - 1] % 3 == 1) && (dif1 = 0)) { ans[1] = 0; ans[2] = 2; } long long dif = ans[1] + ans[2] * 2; ans[3] = 0; for (int i = 0; i < n; i++) { ans[3] = max(ans[3], (a[i] + 2 - dif) / 3); } cout << ans[1] + ans[2] + ans[3] << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int tests; cin >> tests; for (int idk = 0; idk < tests; idk++) { long long n; cin >> n; long long a[n], one = 0, md1 = 0, md2 = 0; for (int i = 0; i < n; i++) { cin >> a[i]; if (a[i] == 1) one = 1; if (a[i] % 3 == 1) md1 = 1; if (a[i] % 3 == 2) md2 = 1; } std::sort(a, a + n); int dif1 = 0; for (int i = 0; i < n; i++) if (a[n - 1] - a[i] == 1) dif1 = 1; long long ans[4]; ans[1] = 0; ans[2] = 0; if (md1) ans[1] = 1; if (md2) ans[2] = 1; if ((md1) && (md2) && (one == 0) && (a[n - 1] % 3 == 1) && (dif1 == 0)) { ans[1] = 0; ans[2] = 2; } long long dif = ans[1] + ans[2] * 2; ans[3] = 0; for (int i = 0; i < n; i++) { ans[3] = max(ans[3], (a[i] + 2 - dif) / 3); } cout << ans[1] + ans[2] + ans[3] << endl; } }
150	 #include <bits/stdc++.h> using namespace std; using LL = long long; int getCases() { int cases = -1; enum InputType : int { SingleInput = 1, MultipleInput = 2, NotSet = 0, }; InputType inputType = MultipleInput; if (inputType == SingleInput) { cases = 1; } else if (inputType == MultipleInput) { scanf("%d", &cases); } else { assert(false && "fix the function"); } return cases; } int n; int ar[105]; int big; void Input() { big = 0; scanf("%d", &n); for (int i = 0; i < n; ++i) { scanf("%d", &ar[i]); big = max(big, ar[i]); } } int main() { int cases = getCases(); while (cases--) { Input(); int ans = INT_MAX; for (int a = 0; a <= 3; ++a) { for (int b = 0; b <= 3; ++b) { int c = (big - a - 2 * b) / 3; int good = true; for (int i = 0; i < n; ++i) { int r = ceil((double)ar[i] / 3.0); if (ar[i] % 3 == 0) { if (c >= r) { } else if (c >= r - 1 && ((a >= 1 && b >= 1) || a >= 3)) { } else { good = false; } } else if (ar[i] % 3 == 1) { if (c >= r - 1 && a >= 1) { } else if (ar[i] > 3 && c >= r - 2 && b >= 2) { } else { good = false; } } else if (ar[i] % 3 == 2) { if (c >= r - 1 && (a >= 2 || b >= 1)) { } else { good = false; } } } if (good) { ans = min(ans, a + b + c); } } } printf("%d\n", ans); } }	 #include <bits/stdc++.h> using namespace std; using LL = long long; int getCases() { int cases = -1; enum InputType : int { SingleInput = 1, MultipleInput = 2, NotSet = 0, }; InputType inputType = MultipleInput; if (inputType == SingleInput) { cases = 1; } else if (inputType == MultipleInput) { scanf("%d", &cases); } else { assert(false && "fix the function"); } return cases; } int n; int ar[105]; int big; void Input() { big = 0; scanf("%d", &n); for (int i = 0; i < n; ++i) { scanf("%d", &ar[i]); big = max(big, ar[i]); } } int main() { int cases = getCases(); while (cases--) { Input(); int ans = INT_MAX; for (int a = 0; a <= 3; ++a) { for (int b = 0; b <= 3; ++b) { int c = (big - a - 2 * b + 2) / 3; int good = true; for (int i = 0; i < n; ++i) { int r = ceil((double)ar[i] / 3.0); if (ar[i] % 3 == 0) { if (c >= r) { } else if (c >= r - 1 && ((a >= 1 && b >= 1) || a >= 3)) { } else { good = false; } } else if (ar[i] % 3 == 1) { if (c >= r - 1 && a >= 1) { } else if (ar[i] > 3 && c >= r - 2 && b >= 2) { } else { good = false; } } else if (ar[i] % 3 == 2) { if (c >= r - 1 && (a >= 2 || b >= 1)) { } else { good = false; } } } if (good) { ans = min(ans, a + b + c); } } } printf("%d\n", ans); } }
151	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; t = 1; while (t--) { long long q; vector<vector<long long>> vec; vector<long long> actual(500001); for (long long i = 1; i < 500000; i++) { actual[i] = i; } vector<long long> ans; cin >> q; long long n = q; while (q--) { long long x; cin >> x; if (x == 1) { long long y; cin >> y; vec.push_back({x, y}); } else { long long y1, z1; cin >> y1 >> z1; vec.push_back({x, y1, z1}); } } for (long long i = n - 1; i >= 0; i--) { if (vec[i][0] == 1) { ans.push_back(actual[vec[i][1]]); } else { actual[vec[i][1]] = actual[vec[i][2]]; } } reverse(ans.begin(), ans.end()); for (auto x : ans) { cout << x << " "; } cout << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(false); cin.tie(NULL); long long t; t = 1; while (t--) { long long q; vector<vector<long long>> vec; vector<long long> actual(500007); for (long long i = 1; i <= 500005; i++) { actual[i] = i; } vector<long long> ans; cin >> q; long long n = q; while (q--) { long long x; cin >> x; if (x == 1) { long long y; cin >> y; vec.push_back({x, y}); } else { long long y1, z1; cin >> y1 >> z1; vec.push_back({x, y1, z1}); } } for (long long i = n - 1; i >= 0; i--) { if (vec[i][0] == 1) { ans.push_back(actual[vec[i][1]]); } else { actual[vec[i][1]] = actual[vec[i][2]]; } } reverse(ans.begin(), ans.end()); for (auto x : ans) { cout << x << " "; } cout << endl; } }
152	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n + 1, 0); for (int i = 1; i <= n; i++) cin >> a[i]; const int inf = (1 << 30); vector<array<int, 2>> dp(n + 1, {inf, inf}); vector<array<int, 2>> p(n + 1, {-1, -1}); dp[1] = {-inf, -inf}; auto upd = [&](int i, int j, int lim, int u) { if (lim < dp[i][j]) { dp[i][j] = lim; p[i][j] = u; } }; for (int i = 1; i < n; i++) { for (int j = 0; j < 2; j++) { if (dp[i][j] == inf) continue; int x = (j ? -a[i] : a[i]); for (int k = 0; k < 2; k++) { int y = (k ? -a[i + 1] : a[i + 1]); if (x < y) upd(i + 1, k, dp[i][j], j); if (dp[i][j] < y) upd(i + 1, k, y, j); } } } if (dp[n][0] != inf) { int s = 0; cout << "YES\n"; vector<int> res(n + 1, 0); for (int i = n; i >= 1; i--) { res[i] = (s ? -a[i] : a[i]); s = p[i][s]; } for (int i = 1; i <= n; i++) cout << res[i] << " \n"[i == n]; } else cout << "NO\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n + 1, 0); for (int i = 1; i <= n; i++) cin >> a[i]; const int inf = (1 << 30); vector<array<int, 2>> dp(n + 1, {inf, inf}); vector<array<int, 2>> p(n + 1, {-1, -1}); dp[1] = {-inf, -inf}; auto upd = [&](int i, int j, int lim, int u) { if (lim < dp[i][j]) { dp[i][j] = lim; p[i][j] = u; } }; for (int i = 1; i < n; i++) { for (int j = 0; j < 2; j++) { if (dp[i][j] == inf) continue; int x = (j ? -a[i] : a[i]); for (int k = 0; k < 2; k++) { int y = (k ? -a[i + 1] : a[i + 1]); if (x < y) upd(i + 1, k, dp[i][j], j); if (dp[i][j] < y) upd(i + 1, k, x, j); } } } if (dp[n][0] != inf) { int s = 0; cout << "YES\n"; vector<int> res(n + 1, 0); for (int i = n; i >= 1; i--) { res[i] = (s ? -a[i] : a[i]); s = p[i][s]; } for (int i = 1; i <= n; i++) cout << res[i] << " \n"[i == n]; } else cout << "NO\n"; } return 0; }
152	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; int n, a[N], p[N << 1], f[N << 1]; void solve() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); for (int i = 1; i < 2 * n; i++) p[i] = -1, f[i] = n + 1; f[0] = f[1] = -n; for (int i = 1; i <= n - 1; i++) for (int x = 0; x <= 1; x++) for (int y = 0; y <= 1; y++) { int v[2] = {f[i * 2 - 2 + y], a[i - 1] * (2 * y - 1)}; for (int j = 0; j <= 1; j++) if (v[j] <= a[i] * (2 * x - 1) && v[!j] < f[i * 2 + x]) f[i * 2 + x] = v[!j], p[i * 2 + x] = i * 2 - 2 + y; } if (f[2 * n - 1] <= n) { puts("YES"); for (int i = n - 1, x = 2 * n - 1; ~i; i--, x = p[x]) if (!(x & 1)) a[i] *= -1; for (int i = 1; i <= n; i++) printf("%d ", a[i]); puts(""); } else { puts("NO"); } } int main() { int T; scanf("%d", &T); while (T--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 1e6 + 5; int n, a[N], p[N << 1], f[N << 1]; void solve() { scanf("%d", &n); for (int i = 0; i < n; i++) scanf("%d", &a[i]); for (int i = 1; i < 2 * n; i++) p[i] = -1, f[i] = n + 1; f[0] = f[1] = -n; for (int i = 1; i <= n - 1; i++) for (int x = 0; x <= 1; x++) for (int y = 0; y <= 1; y++) { int v[2] = {f[i * 2 - 2 + y], a[i - 1] * (2 * y - 1)}; for (int j = 0; j <= 1; j++) if (v[j] <= a[i] * (2 * x - 1) && v[!j] < f[i * 2 + x]) f[i * 2 + x] = v[!j], p[i * 2 + x] = i * 2 - 2 + y; } if (f[2 * n - 1] <= n) { puts("YES"); for (int i = n - 1, x = 2 * n - 1; ~i; i--, x = p[x]) if (!(x & 1)) a[i] *= -1; for (int i = 0; i < n; i++) printf("%d ", a[i]); puts(""); } else { puts("NO"); } } int main() { int T; scanf("%d", &T); while (T--) solve(); return 0; }
152	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n + 1, 0); for (int i = 1; i <= n; i++) cin >> a[i]; const int inf = (1 << 30); vector<array<int, 2>> dp(n + 1, {inf, inf}); vector<array<int, 2>> p(n + 1, {-1, -1}); dp[1] = {-inf, -inf}; auto upd = [&](int i, int j, int lim, int u) { if (lim < dp[i][j]) { dp[i][j] = lim; p[i][j] = u; } }; for (int i = 1; i < n; i++) { for (int j = 0; j < 2; j++) { if (dp[i][j] == inf) continue; int x = (j ? -a[i] : a[i]); for (int k = 0; k < 2; k++) { int y = (k ? -a[i + 1] : a[i + 1]); if (x < y) upd(i + 1, k, dp[i][j], j); if (dp[i][j] < y) upd(i + 1, k, y, j); } } } if (dp[n][0] != inf) { int s = 0; cout << "YES\n"; vector<int> res(n + 1, 0); for (int i = n; i >= 1; i--) { res[i] = (s ? -a[i] : a[i]); s = p[i][s]; } for (int i = 1; i <= n; i++) cout << res[i] << " \n"[i == n]; } else cout << "NO\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); int t; cin >> t; while (t--) { int n; cin >> n; vector<int> a(n + 1, 0); for (int i = 1; i <= n; i++) cin >> a[i]; const int inf = (1 << 30); vector<array<int, 2>> dp(n + 1, {inf, inf}); vector<array<int, 2>> p(n + 1, {-1, -1}); dp[1] = {-inf, -inf}; auto upd = [&](int i, int j, int lim, int u) { if (lim < dp[i][j]) { dp[i][j] = lim; p[i][j] = u; } }; for (int i = 1; i < n; i++) { for (int j = 0; j < 2; j++) { if (dp[i][j] == inf) continue; int x = (j ? -a[i] : a[i]); for (int k = 0; k < 2; k++) { int y = (k ? -a[i + 1] : a[i + 1]); if (x < y) upd(i + 1, k, dp[i][j], j); if (dp[i][j] < y) upd(i + 1, k, x, j); } } } if (dp[n][0] != inf) { int s = 0; cout << "YES\n"; vector<int> res(n + 1, 0); for (int i = n; i >= 1; i--) { res[i] = (s ? -a[i] : a[i]); s = p[i][s]; } for (int i = 1; i <= n; i++) cout << res[i] << " \n"[i == n]; } else cout << "NO\n"; } return 0; }
153	 #include <bits/stdc++.h> using namespace std; long long dp[1 << 23]; string a[1005]; int cnt[26][26]; long long n; const long long MOD = 998244353; void solve() { cin >> n; for (int i = 0; i < n; i++) { cin >> a[i]; for (auto c : a[i]) cnt[i][c - 'a']++; } for (int i = 1; i < (1 << n); i++) { dp[i] = 1; for (int z = 0; z < 26; z++) { int x = 1e9; for (int k = 0; k < n; k++) if (i & (1 << k)) { x = min(x, cnt[k][z] + 1); } dp[i] = (dp[i] * x) % MOD; } if (__builtin_popcount(i) % 2 == 0) dp[i] = MOD - dp[i]; } for (int k = 0; k < n; k++) for (int i = 0; i < (1 << n); i++) { if ((i & (1 << k))) { dp[i] += dp[i ^ (1 << i)]; if (dp[i] >= MOD) dp[i] -= MOD; } } long long ans = 0; for (int i = 0; i < (1 << n); i++) { long long v = 0; long long bit = 0; for (int k = 0; k < n; k++) if (i & (1 << k)) v += k + 1, bit++; ; v *= bit; ans ^= v * dp[i]; } cout << ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); solve(); }	 #include <bits/stdc++.h> using namespace std; long long dp[1 << 23]; string a[1005]; int cnt[26][26]; long long n; const long long MOD = 998244353; void solve() { cin >> n; for (int i = 0; i < n; i++) { cin >> a[i]; for (auto c : a[i]) cnt[i][c - 'a']++; } for (int i = 1; i < (1 << n); i++) { dp[i] = 1; for (int z = 0; z < 26; z++) { int x = 1e9; for (int k = 0; k < n; k++) if (i & (1 << k)) { x = min(x, cnt[k][z] + 1); } dp[i] = (dp[i] * x) % MOD; } if (__builtin_popcount(i) % 2 == 0) dp[i] = MOD - dp[i]; } for (int k = 0; k < n; k++) for (int i = 0; i < (1 << n); i++) { if ((i & (1 << k))) { dp[i] += dp[i ^ (1 << k)]; if (dp[i] >= MOD) dp[i] -= MOD; } } long long ans = 0; for (int i = 0; i < (1 << n); i++) { long long v = 0; long long bit = 0; for (int k = 0; k < n; k++) if (i & (1 << k)) v += k + 1, bit++; ; v *= bit; ans ^= v * dp[i]; } cout << ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0); solve(); }
154	 #include <bits/stdc++.h> using namespace std; int dizi[3]; int solve(int x, int y, int z) { set<int> s; s.insert(x); s.insert(y); s.insert(z); dizi[0] = x; dizi[1] = y; dizi[2] = z; if (s.size() == 3) { int mx = 0; for (int i = 0; i < 2; i++) { if (dizi[mx] < dizi[i + 1]) { mx = i + 1; } } int a = dizi[0] + dizi[1] + dizi[2]; if (dizi[mx] * 2 == a) { cout << "yes"; } else { cout << "no"; } } else if (s.size() == 2) { int farkli; if (x == y) farkli = z; else if (x == z) farkli = y; else farkli = z; if (farkli % 2 == 0) { cout << "yes"; } else { cout << "no"; } } else { if (x % 2 == 0) cout << "yes"; else cout << "no"; } cout << endl; return 0; } int main() { int n, a, b, c; cin >> n; for (int i = 0; i < n; i++) { cin >> a >> b >> c; solve(a, b, c); } }	 #include <bits/stdc++.h> using namespace std; int dizi[3]; int solve(int x, int y, int z) { set<int> s; s.insert(x); s.insert(y); s.insert(z); dizi[0] = x; dizi[1] = y; dizi[2] = z; if (s.size() == 3) { int mx = 0; for (int i = 0; i < 2; i++) { if (dizi[mx] < dizi[i + 1]) { mx = i + 1; } } int a = dizi[0] + dizi[1] + dizi[2]; if (dizi[mx] * 2 == a) { cout << "yes"; } else { cout << "no"; } } else if (s.size() == 2) { int farkli; if (x == y) farkli = z; else if (x == z) farkli = y; else farkli = x; if (farkli % 2 == 0) { cout << "yes"; } else { cout << "no"; } } else { if (x % 2 == 0) cout << "yes"; else cout << "no"; } cout << endl; return 0; } int main() { int n, a, b, c; cin >> n; for (int i = 0; i < n; i++) { cin >> a >> b >> c; solve(a, b, c); } }
154	 #include <bits/stdc++.h> using namespace std; int main() { int t, a, b, c, i, m; t = a = b = c = i = m = 0; cin >> t; if (t <= 10000) { for (i = 1; i <= t; i++) { cin >> a >> b >> c; if (a >= 1 && a <= 100000000 && b >= 1 && b <= 100000000 && c >= 1 && c <= 100000000) { m = max(max(a, b), c); if (a + b == m || b + c == m || c + a == m) printf("Yes\n"); else if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) && (c == a && b % 2 == 0)) printf("Yes\n"); else printf("No\n"); } } } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t, a, b, c, i, m; t = a = b = c = i = m = 0; cin >> t; if (t <= 10000) { for (i = 1; i <= t; i++) { cin >> a >> b >> c; if (a >= 1 && a <= 100000000 && b >= 1 && b <= 100000000 && c >= 1 && c <= 100000000) { m = max(max(a, b), c); if (a + b == m || b + c == m || c + a == m) printf("Yes\n"); else if ((a == b && c % 2 == 0) || (b == c && a % 2 == 0) || (c == a && b % 2 == 0)) printf("Yes\n"); else printf("No\n"); } } } return 0; }
154	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int l1, l2, l3; cin >> l1 >> l2 >> l3; if (l1 + l3 == l2 || l1 + l2 == l3 || l2 + l3 == l1) cout << "YES" << endl; else if ((l1 == l2 && l3 % 2 == 0) || (l2 == l3 && l1 % 2 == 0) || (l1 == l3 && l2 % 2 == 0)) cout << "YES" << endl; else cout << "NO" << endl; return 0; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { long long int l1, l2, l3; cin >> l1 >> l2 >> l3; if (l1 + l3 == l2 || l1 + l2 == l3 || l2 + l3 == l1) cout << "YES" << endl; else if ((l1 == l2 && l3 % 2 == 0) || (l2 == l3 && l1 % 2 == 0) || (l1 == l3 && l2 % 2 == 0)) cout << "YES" << endl; else cout << "NO" << endl; } return 0; }
154	 #include <bits/stdc++.h> using namespace std; const int INF = 1000000007; const int N = 150000; int main() { ios_base ::sync_with_stdio(0); cin.tie(0); int T; cin >> T; while (T--) { int a, b, c; cin >> a >> b >> c; if (a == b + c || c == a + b || c == a + b) { cout << "YES" << "\n"; } else if (((a == b) && (c % 2 == 0)) || ((b == c) && (a % 2 == 0)) || ((c == a) && (b % 2 == 0))) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } return 0; }	 #include <bits/stdc++.h> using namespace std; const int INF = 1000000007; const int N = 150000; int main() { ios_base ::sync_with_stdio(0); cin.tie(0); int T; cin >> T; while (T--) { int a, b, c; cin >> a >> b >> c; if (a == b + c || c == a + b || b == a + c) { cout << "YES" << "\n"; } else if (((a == b) && (c % 2 == 0)) || ((b == c) && (a % 2 == 0)) || ((c == a) && (b % 2 == 0))) { cout << "YES" << "\n"; } else { cout << "NO" << "\n"; } } return 0; }
154	 #include <bits/stdc++.h> using namespace std; bool simple(int a, int b, int c) { if (a == b && c % 2 == 0) return true; if (c == b && a % 2 == 0) return true; if (a == c && b % 2 == 0) return true; return false; } bool tryBreaK(int a, int b, int c) { if (abs(a - b) == c) return true; if (abs(b - c) == a) return true; if (abs(a - c) == b) return true; return false; } int main() { int t; cin >> t; while (t--) { int a, b, c; cin >> a >> b >> c; if (simple(a, b, c) || tryBreaK(a, b, c)) { cout << "YES" << endl; break; } cout << "NO" << endl; } }	 #include <bits/stdc++.h> using namespace std; bool simple(int a, int b, int c) { if (a == b && c % 2 == 0) return true; if (c == b && a % 2 == 0) return true; if (a == c && b % 2 == 0) return true; return false; } bool tryBreaK(int a, int b, int c) { if (abs(a - b) == c) return true; if (abs(b - c) == a) return true; if (abs(a - c) == b) return true; return false; } int main() { int t; cin >> t; while (t--) { int a, b, c; cin >> a >> b >> c; if (simple(a, b, c) || tryBreaK(a, b, c)) { cout << "YES" << endl; continue; } cout << "NO" << endl; } }
155	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (auto &i : a) cin >> i; string s; cin >> s; vector<long long> x; vector<long long> y; for (int i = 0; i < s.size(); i++) { if (s[i] == '0') x.push_back(a[i]); else y.push_back(a[i]); } long long cnt = 1; map<long long, long long> mp; sort(x.begin(), x.end()); sort(y.begin(), y.end()); for (int i = 0; i < x.size(); i++) mp[x[i]] = cnt, cnt++; for (int i = 0; i < x.size(); i++) mp[y[i]] = cnt, cnt++; for (auto i : a) cout << mp[i] << " "; cout << "\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(0); long long t; cin >> t; while (t--) solve(); }	 #include <bits/stdc++.h> using namespace std; void solve() { long long n; cin >> n; vector<long long> a(n); for (auto &i : a) cin >> i; string s; cin >> s; vector<long long> x; vector<long long> y; for (int i = 0; i < s.size(); i++) { if (s[i] == '0') x.push_back(a[i]); else y.push_back(a[i]); } long long cnt = 1; map<long long, long long> mp; sort(x.begin(), x.end()); sort(y.begin(), y.end()); for (int i = 0; i < x.size(); i++) mp[x[i]] = cnt, cnt++; for (int i = 0; i < y.size(); i++) mp[y[i]] = cnt, cnt++; for (auto i : a) cout << mp[i] << " "; cout << "\n"; } int main() { ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(0); long long t; cin >> t; while (t--) solve(); }
155	 #include <bits/stdc++.h> using namespace std; const long long N = 4e6 + 20; const long long M = 1e7 + 20; const long long MOD = 1e9 + 7; const long long Inf = 1e18; const long double eps = 1e-7; const long long dx[] = {1, 0, -1, 0}; const long long dy[] = {0, 1, 0, -1}; long long n, m, x, a[N], Ans[N], y, z, q, k, timer, tt = 1; void Solve() { for (long long i = 0; i <= n + 1; ++i) Ans[i] = 0; long long cnt = 0; string s; scanf("%lld", &n); for (long long i = 1; i <= n; ++i) scanf("%lld", &a[i]); cin >> s; vector<pair<long long, long long> > Vec1, Vec2; for (long long i = 0; i < s.size(); ++i) if (s[i] == '1') { ++cnt; Vec1.push_back({a[i + 1], i + 1}); } else Vec2.push_back({a[i + 1], i + 1}); sort(Vec1.begin(), Vec1.end()); sort(Vec2.begin(), Vec2.end()); long long G = cnt + 1; for (auto x : Vec1) Ans[x.second] = G++; G = 1; for (auto x : Vec2) Ans[x.second] = G++; for (long long i = 1; i <= n; ++i) cout << Ans[i] << " \n"[i == n]; } int main() { scanf("%lld", &tt); while (tt--) { ++timer; Solve(); } }	 #include <bits/stdc++.h> using namespace std; const long long N = 4e6 + 20; const long long M = 1e7 + 20; const long long MOD = 1e9 + 7; const long long Inf = 1e18; const long double eps = 1e-7; const long long dx[] = {1, 0, -1, 0}; const long long dy[] = {0, 1, 0, -1}; long long n, m, x, a[N], Ans[N], y, z, q, k, timer, tt = 1; void Solve() { for (long long i = 0; i <= n + 1; ++i) Ans[i] = 0; long long cnt = 0; string s; scanf("%lld", &n); for (long long i = 1; i <= n; ++i) scanf("%lld", &a[i]); cin >> s; vector<pair<long long, long long> > Vec1, Vec2; for (long long i = 0; i < s.size(); ++i) if (s[i] == '1') { ++cnt; Vec1.push_back({a[i + 1], i + 1}); } else Vec2.push_back({a[i + 1], i + 1}); sort(Vec1.begin(), Vec1.end()); sort(Vec2.begin(), Vec2.end()); long long G = n - cnt + 1; for (auto x : Vec1) Ans[x.second] = G++; G = 1; for (auto x : Vec2) Ans[x.second] = G++; for (long long i = 1; i <= n; ++i) cout << Ans[i] << " \n"[i == n]; } int main() { scanf("%lld", &tt); while (tt--) { ++timer; Solve(); } }
155	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int t; struct node { int a, b; bool operator<(const node& rhs) const { return a < rhs.a; } } p0[N], p1[N]; int main() { scanf("%d", &t); while (t--) { int n, p[N], q[N]; char c[N]; scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", p + i); scanf("%s", c + 1); int cnt0 = 0, cnt1 = 0; for (int i = 1; i <= n; i++) { if (c[i] == '0') p0[cnt0].a = p[i], p0[cnt0].b = i; else p1[cnt1].a = p[i], p1[cnt1].b = i; } sort(p0 + 1, p0 + 1 + cnt0); sort(p1 + 1, p1 + 1 + cnt1); for (int i = 1; i <= cnt0; i++) q[p0[i].b] = i; for (int i = 1; i <= cnt1; i++) q[p1[i].b] = i + cnt0; for (int i = 1; i <= n; i++) printf("%d ", q[i]); printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200005; int t; struct node { int a, b; bool operator<(const node& rhs) const { return a < rhs.a; } } p0[N], p1[N]; int main() { scanf("%d", &t); while (t--) { int n, p[N], q[N]; char c[N]; scanf("%d", &n); for (int i = 1; i <= n; i++) scanf("%d", p + i); scanf("%s", c + 1); int cnt0 = 0, cnt1 = 0; for (int i = 1; i <= n; i++) { if (c[i] == '0') p0[++cnt0].a = p[i], p0[cnt0].b = i; else p1[++cnt1].a = p[i], p1[cnt1].b = i; } sort(p0 + 1, p0 + 1 + cnt0); sort(p1 + 1, p1 + 1 + cnt1); for (int i = 1; i <= cnt0; i++) q[p0[i].b] = i; for (int i = 1; i <= cnt1; i++) q[p1[i].b] = i + cnt0; for (int i = 1; i <= n; i++) printf("%d ", q[i]); printf("\n"); } return 0; }
156	 #include <bits/stdc++.h> using namespace std; const int maxn = 2 * 1e5 + 10; long long min(long long a, long long b) { return a > b ? b : a; } long long fun(long long a, long long b) { long double A = a; long double B = b; long double c = A / B; if (c >= 0) return long long(c); else { if (c == long long(c)) return long long(c); else return long long(c - 1); } } long long a[maxn]; int main() { int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; long long sum = 0; for (int i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } if (sum <= k) { cout << 0 << endl; continue; } sort(a, a + n); long long cur = 0; long long ans = sum - k; for (int i = n - 1; i > 0; i--) { cur += a[i]; long long tmp = sum - cur + 1ll * (n - i) * a[1]; long long ax = (tmp <= k) ? 0 : (tmp - k - 1) / (n - i + 1) + 1; ans = min(ans, ax + (n - i)); } cout << ans << endl; } }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2 * 1e5 + 10; long long min(long long a, long long b) { return a > b ? b : a; } long long fun(long long a, long long b) { long double A = a; long double B = b; long double c = A / B; if (c >= 0) return long long(c); else { if (c == long long(c)) return long long(c); else return long long(c - 1); } } long long a[maxn]; int main() { int t; cin >> t; while (t--) { long long n, k; cin >> n >> k; long long sum = 0; for (int i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } if (sum <= k) { cout << 0 << endl; continue; } sort(a, a + n); long long cur = 0; long long ans = sum - k; for (int i = n - 1; i > 0; i--) { cur += a[i]; long long tmp = sum - cur + 1ll * (n - i) * a[0]; long long ax = (tmp <= k) ? 0 : (tmp - k - 1) / (n - i + 1) + 1; ans = min(ans, ax + (n - i)); } cout << ans << endl; } }
156	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; using LL = long long; int a[N]; LL sum[N]; int main() { int T; scanf("%d", &T); while (T--) { int n; LL k; scanf("%d%lld", &n, &k); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); sort(a + 1, a + n + 1); for (int i = 1; i <= n; i++) sum[i] = sum[i - 1] + a[i]; LL ans = -1; for (int i = 0; i <= n - 1; i++) { LL x = ceil((double)(i * a[1] + sum[n - i] - k) / (double)(i + 1)); if (x < 0) x = 0; if (ans == -1) ans = x + i; else ans = min(ans, x + i); } printf("%lld\n", ans); } }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 10; using LL = long long; LL a[N]; LL sum[N]; int main() { int T; scanf("%d", &T); while (T--) { int n; LL k; scanf("%d%lld", &n, &k); for (int i = 1; i <= n; i++) scanf("%d", &a[i]); sort(a + 1, a + n + 1); for (int i = 1; i <= n; i++) sum[i] = sum[i - 1] + a[i]; LL ans = -1; for (LL i = 0; i <= n - 1; i++) { LL x = ceil((double)(i * a[1] + sum[n - i] - k) / (double)(i + 1)); if (x < 0) x = 0; if (ans == -1) ans = x + i; else ans = min(ans, x + i); } printf("%lld\n", ans); } }
156	 #include <bits/stdc++.h> using namespace std; const int N = 200100; long long a[N]; void solve() { long long n, k; double t; scanf("%lld%lld", &n, &k); for (int i = 0; i < n; i++) scanf("%lld", &a[i]); sort(a, a + n); long long ans = a[0] + n - 1; for (int i = 0; i < n; i++) { if (i) k -= a[i]; t = k; t = t / (n - i); t = floor(t); int l = t; ans = min(ans, max(0ll, a[0] - l) + n - i - 1); } printf("%lld\n", ans); } int main() { int t; for (scanf("%d", &t); t != 0; t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 200100; long long a[N]; void solve() { long long n, k; double t; scanf("%lld%lld", &n, &k); for (int i = 0; i < n; i++) scanf("%lld", &a[i]); sort(a, a + n); long long ans = a[0] + n - 1; for (int i = 0; i < n; i++) { if (i) k -= a[i]; t = k; t = t / (n - i); t = floor(t); long long l = t; ans = min(ans, max(0ll, a[0] - l) + n - i - 1); } printf("%lld\n", ans); } int main() { int t; for (scanf("%d", &t); t != 0; t--) solve(); return 0; }
156	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 10; int T, n, arr[maxn]; long long k, sum, ans; int main() { scanf("%d", &T); while (T--) { sum = 0; scanf("%d%lld", &n, &k); for (int i = 0; i < n; i++) { scanf("%d", &arr[i]); sum += arr[i]; } if (sum <= k) { printf("0\n"); continue; } if (n == 1) { printf("%lld\n", arr[0] - k); continue; } sort(arr, arr + n, greater<int>()); for (int i = 0; i < n; i++) arr[i] -= arr[n - 1]; ans = sum - k; for (int i = 0; i < n - 1; i++) { sum -= arr[i]; if (sum <= k) { ans = min(ans, i + 1ll); } ans = min(ans, i + 1 + (sum - k + i + 1) / (i + 2)); } printf("%lld\n", ans); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int maxn = 2e5 + 10; int T, n, arr[maxn]; long long k, sum, ans; int main() { scanf("%d", &T); while (T--) { sum = 0; scanf("%d%lld", &n, &k); for (int i = 0; i < n; i++) { scanf("%d", &arr[i]); sum += arr[i]; } if (sum <= k) { printf("0\n"); continue; } if (n == 1) { printf("%lld\n", arr[0] - k); continue; } sort(arr, arr + n, greater<int>()); for (int i = 0; i < n; i++) arr[i] -= arr[n - 1]; ans = sum - k; for (int i = 0; i < n - 1; i++) { sum -= arr[i]; if (sum <= k) { ans = min(ans, i + 1ll); break; } ans = min(ans, i + 1 + (sum - k + i + 1) / (i + 2)); } printf("%lld\n", ans); } return 0; }
156	 #include <bits/stdc++.h> using namespace std; void solve() { int n; long long k; cin >> n >> k; vector<int> a(n); for (int i = 0; i < n; ++i) cin >> a[i]; sort(a.begin(), a.end()); reverse(a.begin() + 1, a.end()); for (int i = 1; i < n; ++i) a[i] += a[i - 1]; long long res = 1e18; for (int i = 0; i < n; ++i) { long long l = 0, r = 1e18, s = a[n - 1] - a[i]; while (l < r) { long long mid = (l + r) >> 1; __int128_t sum = a[0] - mid; sum *= (i + 1); if (sum + s <= k) r = mid; else l = mid + 1; } res = min(res, l + i); } cout << res << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n; long long k; cin >> n >> k; vector<long long> a(n); for (int i = 0; i < n; ++i) cin >> a[i]; sort(a.begin(), a.end()); reverse(a.begin() + 1, a.end()); for (int i = 1; i < n; ++i) a[i] += a[i - 1]; long long res = 1e18; for (int i = 0; i < n; ++i) { long long l = 0, r = 1e18, s = a[n - 1] - a[i]; while (l < r) { long long mid = (l + r) >> 1; __int128_t sum = a[0] - mid; sum *= (i + 1); if (sum + s <= k) r = mid; else l = mid + 1; } res = min(res, l + i); } cout << res << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); int t; cin >> t; while (t--) solve(); return 0; }
156	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) { long long n; cin >> n; long long k; cin >> k; long long a[n], i; long long sum = 0; for (i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } sort(a, a + n); long long c = 0; for (i = 0; i < n; i++) { if (a[i] == a[0]) c++; } long long ans = 1e12; if (n == 1) { if (a[0] > k) ans = a[0] - k; else ans = 0; cout << ans << "\n"; continue; } if (sum <= k) { cout << 0 << "\n"; continue; } long long pre[n]; pre[0] = a[0]; for (i = 1; i < n; i++) { pre[i] = pre[i - 1] + a[i]; } for (i = 0; i < n - 1; i++) { sum = pre[n - i - 1] - pre[0]; long long d = k - sum; d = floor((double)d / (i + 1)); if (d > a[0]) { ans = min(ans, i); continue; } long long move = a[0] - d; move += i; ans = min(ans, move); } cout << ans << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); int t = 1; cin >> t; while (t--) { long long n; cin >> n; long long k; cin >> k; long long a[n], i; long long sum = 0; for (i = 0; i < n; i++) { cin >> a[i]; sum += a[i]; } sort(a, a + n); long long c = 0; for (i = 0; i < n; i++) { if (a[i] == a[0]) c++; } long long ans = 1e12; if (n == 1) { if (a[0] > k) ans = a[0] - k; else ans = 0; cout << ans << "\n"; continue; } if (sum <= k) { cout << 0 << "\n"; continue; } long long pre[n]; pre[0] = a[0]; for (i = 1; i < n; i++) { pre[i] = pre[i - 1] + a[i]; } for (i = 0; i <= n - 1; i++) { sum = pre[n - i - 1] - pre[0]; long long d = k - sum; d = floor((double)d / (i + 1)); if (d > a[0]) { ans = min(ans, i); continue; } long long move = a[0] - d; move += i; ans = min(ans, move); } cout << ans << "\n"; } return 0; }
157	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 9, inf = 0x3f3f3f3f, mod = 998244353; long long C[5010][5010]; void solve() { for (int i = 0; i <= 5000; i++) { C[i][0] = 1; for (int j = 1; j <= i; j++) { C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod; } } long long n, k; scanf("%lld%lld", &n, &k); string s; cin >> s; int lo = 0, ri = 0, cnt = 0, plo = -inf, pri = -inf; long long ans = 0; if (k == 0) { printf("0\n"); return; } while (ri < n) { if (s[ri] == '1') cnt++; while (ri + 1 < n && s[ri + 1] == '0') ri++; while (cnt > k) { if (s[lo] == '1') cnt--, lo++; } if (cnt == k) { ans = (ans + C[ri - lo + 1][k]) % mod; if (plo != -inf) { ans = (ans - C[pri - lo + 1][k - 1] + mod) % mod; } plo = lo; pri = ri; } ri++; } if (pri == -inf) { printf("1\n"); return; } printf("%lld\n", (ans + mod) % mod); } int main() { solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 2e5 + 9, inf = 0x3f3f3f3f, mod = 998244353; long long C[5010][5010]; void solve() { for (int i = 0; i <= 5000; i++) { C[i][0] = 1; for (int j = 1; j <= i; j++) { C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod; } } long long n, k; scanf("%lld%lld", &n, &k); string s; cin >> s; int lo = 0, ri = 0, cnt = 0, plo = -inf, pri = -inf; long long ans = 0; if (k == 0) { printf("1\n"); return; } while (ri < n) { if (s[ri] == '1') cnt++; while (ri + 1 < n && s[ri + 1] == '0') ri++; while (cnt > k) { if (s[lo] == '1') cnt--; lo++; } if (cnt == k) { ans = (ans + C[ri - lo + 1][k]) % mod; if (plo != -inf) { ans = (ans - C[pri - lo + 1][k - 1] + mod) % mod; } plo = lo; pri = ri; } ri++; } if (pri == -inf) { printf("1\n"); return; } printf("%lld\n", (ans + mod) % mod); } int main() { solve(); return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e4 + 10; const int MOD = 998244353; int x[11], p[MAX], q[MAX], ret[MAX]; char s[11][MAX]; int main() { int T; cin >> T; while (T--) { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", x + i); for (int i = 0; i < n; i++) scanf("%s", s[i] + 1); long long ans = 0; for (int i = 0; i < (1 << n); i++) { for (int j = 1; j <= m; j++) p[j] = 0; for (int j = 1; j <= m; j++) q[j] = j; long long sum = 0; for (int j = 0; j < n; j++) { int tag = ((1 << j) & i) ? 1 : -1; sum -= tag * x[j]; for (int k = 1; k <= m; k++) { if (s[j][k] == '0') continue; p[k] += tag; } } sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; }); for (int j = 1; j <= m; j++) sum += p[q[j]] * j; if (sum > ans) { ans = sum; for (int j = 1; j <= m; j++) ret[q[j]] = j; } } for (int i = 1; i <= m; i++) printf("%d ", ret[i]); cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int MAX = 1e4 + 10; const int MOD = 998244353; int x[11], p[MAX], q[MAX], ret[MAX]; char s[11][MAX]; int main() { int T; cin >> T; while (T--) { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", x + i); for (int i = 0; i < n; i++) scanf("%s", s[i] + 1); long long ans = 0; for (int i = 0; i < (1 << n); i++) { for (int j = 1; j <= m; j++) p[j] = 0; for (int j = 1; j <= m; j++) q[j] = j; long long sum = 0; for (int j = 0; j < n; j++) { int tag = ((1 << j) & i) ? 1 : -1; sum -= tag * x[j]; for (int k = 1; k <= m; k++) { if (s[j][k] == '0') continue; p[k] += tag; } } sort(q + 1, q + m + 1, [](int x, int y) { return p[x] < p[y]; }); for (int j = 1; j <= m; j++) sum += p[q[j]] * j; if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) ret[q[j]] = j; } } for (int i = 1; i <= m; i++) printf("%d ", ret[i]); cout << endl; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int n, m, a[10], c[1005]; char b[10][1005]; vector<int> g[10]; int id[1005]; bool cmp(int i1, int i2) { return c[i1] < c[i2]; } int p[1005], p2[1005]; int main() { int t; scanf("%d", &t); while (t--) { scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) { scanf("%d", &a[i]); } for (int i = 0; i < n; i++) { scanf("\n%s", b[i] + 1); g[i].clear(); for (int j = 1; j <= m; j++) { if (b[i][j] == '1') { g[i].push_back(j); } } } long long ans = 0; for (int i = 1; i <= m; i++) id[i] = i; for (int i = 0; i < (1 << n); i++) { memset(c, 0, sizeof(c)); for (int j = 0; j < n; j++) { for (int k : g[j]) { if (i & (1 << j)) c[k]++; else c[k]--; } } sort(id + 1, id + 1 + m, cmp); for (int j = 1; j <= m; j++) { p[id[j]] = j; } long long sum = 0; for (int j = 0; j < n; j++) { int h = 0; for (int k : g[j]) { h += p[k]; } sum += abs(a[i] - h); } if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) { p2[j] = p[j]; } } } for (int i = 1; i <= m; i++) { printf("%d ", p2[i]); } printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int n, m, a[10], c[10005]; char b[10][10005]; vector<int> g[10]; int id[10005]; bool cmp(int i1, int i2) { return c[i1] < c[i2]; } int p[10005], p2[10005]; int main() { int t; scanf("%d", &t); while (t--) { scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) { scanf("%d", &a[i]); } for (int i = 0; i < n; i++) { scanf("\n%s", b[i] + 1); g[i].clear(); for (int j = 1; j <= m; j++) { if (b[i][j] == '1') { g[i].push_back(j); } } } long long ans = 0; for (int i = 1; i <= m; i++) id[i] = i; for (int i = 0; i < (1 << n); i++) { memset(c, 0, sizeof(c)); for (int j = 0; j < n; j++) { for (int k : g[j]) { if (i & (1 << j)) c[k]++; else c[k]--; } } sort(id + 1, id + 1 + m, cmp); for (int j = 1; j <= m; j++) { p[id[j]] = j; } long long sum = 0; for (int j = 0; j < n; j++) { int h = 0; for (int k : g[j]) { h += p[k]; } sum += abs(a[j] - h); } if (sum >= ans) { ans = sum; for (int j = 1; j <= m; j++) { p2[j] = p[j]; } } } for (int i = 1; i <= m; i++) { printf("%d ", p2[i]); } printf("\n"); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int e[11]; vector<int> score(10010); vector<int> ans; string s[11]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> e[i]; for (int i = 1; i <= n; i++) cin >> s[i]; int up = 1 << n; int mx = 0; vector<pair<int, int> > ev(m + 1); for (int i = 0; i < up; i++) { for (int j = 1; j <= m; j++) { ev[j].first = 0; ev[j].second = j; } for (int j = 1; j <= n; j++) for (int k = 1; k <= m; k++) { if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1; } int sum = 0; for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j]; sort(ev.begin() + 1, ev.end()); for (int j = 1; j <= m; j++) { score[ev[j].second] = j; sum += j * ev[j].first; } if (mx < sum) { mx = sum; ans = score; } } for (int i = 1; i <= m; i++) cout << ans[i] << " \n"[i == m]; } signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; int e[11]; vector<int> score(10010); vector<int> ans; string s[11]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> e[i]; for (int i = 1; i <= n; i++) cin >> s[i]; int up = 1 << n; int mx = -1; vector<pair<int, int> > ev(m + 1); for (int i = 0; i < up; i++) { for (int j = 1; j <= m; j++) { ev[j].first = 0; ev[j].second = j; } for (int j = 1; j <= n; j++) for (int k = 1; k <= m; k++) { if (s[j][k - 1] == '1') ev[k].first += (i & 1 << j - 1) ? 1 : -1; } int sum = 0; for (int j = 1; j <= n; j++) sum += (i & 1 << j - 1) ? -e[j] : e[j]; sort(ev.begin() + 1, ev.end()); for (int j = 1; j <= m; j++) { score[ev[j].second] = j; sum += j * ev[j].first; } if (mx < sum) { mx = sum; ans = score; } } for (int i = 1; i <= m; i++) cout << ans[i] << " \n"[i == m]; } signed main() { ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); int t; cin >> t; while (t--) solve(); return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 3e5 + 10, M = 2 * N, mod = 998244353; int first[N]; string s[N]; int ans[N]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> first[i]; for (int i = 1; i <= n; i++) cin >> s[i], s[i] = " " + s[i]; long long res = 0, tmp; for (int k = 0; k < (1 << n); k++) { tmp = 0; for (int i = 0; i < n; i++) { int r = 1; if (k >> i & 1) r = -1; tmp += r * first[i + 1]; } vector<pair<int, int> > num; for (int i = 1; i <= m; i++) { int tmp = 0; for (int j = 0; j < n; j++) { int r = -1; if (k >> j & 1) r = 1; tmp += (s[j + 1][i] - '0') * r; } num.push_back({tmp, i}); } sort((num).begin(), (num).end()); for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i; if (res < tmp) { res = tmp; for (int i = 0; i < m; i++) { auto &[val, id] = num[i]; ans[id] = i + 1; } } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << '\n'; } int main() { ios::sync_with_stdio(0), cin.tie(0); cout.precision(2), cout.setf(ios::fixed); int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 3e5 + 10, M = 2 * N, mod = 998244353; int first[N]; string s[N]; int ans[N]; void solve() { int n, m; cin >> n >> m; for (int i = 1; i <= n; i++) cin >> first[i]; for (int i = 1; i <= n; i++) cin >> s[i], s[i] = " " + s[i]; long long res = -1, tmp; for (int k = 0; k < (1 << n); k++) { tmp = 0; for (int i = 0; i < n; i++) { int r = 1; if (k >> i & 1) r = -1; tmp += r * first[i + 1]; } vector<pair<int, int> > num; for (int i = 1; i <= m; i++) { int tmp = 0; for (int j = 0; j < n; j++) { int r = -1; if (k >> j & 1) r = 1; tmp += (s[j + 1][i] - '0') * r; } num.push_back({tmp, i}); } sort((num).begin(), (num).end()); for (int i = 1; i <= m; i++) tmp += num[i - 1].first * i; if (res < tmp) { res = tmp; for (int i = 0; i < m; i++) { auto &[val, id] = num[i]; ans[id] = i + 1; } } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << '\n'; } int main() { ios::sync_with_stdio(0), cin.tie(0); cout.precision(2), cout.setf(ios::fixed); int t; cin >> t; while (t--) solve(); return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int x[n]; for (int i = 0; i < n; i++) cin >> x[i]; string s[n]; for (int i = 0; i < n; i++) cin >> s[i]; int ans[m], score = 0; for (int i = 0; i < (1 << n); i++) { vector<pair<int, int> > vt; for (int j = 0; j < m; j++) { int cnt = 0; for (int k = 0; k < n; k++) { if (s[k][j] == '1') { if (i & (1 << k)) cnt++; else cnt--; } } vt.push_back(make_pair(cnt, j)); } sort(vt.begin(), vt.end()); int temp[m], curr_score = 0; for (int j = 0; j < m; j++) { int idx = vt[j].second; temp[idx] = j + 1; } for (int j = 0; j < n; j++) { int sum = 0; for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k]; curr_score += abs(sum - x[j]); } if (curr_score > score) { score = curr_score; for (int j = 0; j < m; j++) ans[j] = temp[j]; } } for (int i = 0; i < m; i++) cout << ans[i] << ' '; cout << '\n'; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int x[n]; for (int i = 0; i < n; i++) cin >> x[i]; string s[n]; for (int i = 0; i < n; i++) cin >> s[i]; int ans[m], score = -1; for (int i = 0; i < (1 << n); i++) { vector<pair<int, int> > vt; for (int j = 0; j < m; j++) { int cnt = 0; for (int k = 0; k < n; k++) { if (s[k][j] == '1') { if (i & (1 << k)) cnt++; else cnt--; } } vt.push_back(make_pair(cnt, j)); } sort(vt.begin(), vt.end()); int temp[m], curr_score = 0; for (int j = 0; j < m; j++) { int idx = vt[j].second; temp[idx] = j + 1; } for (int j = 0; j < n; j++) { int sum = 0; for (int k = 0; k < m; k++) sum += (s[j][k] - '0') * temp[k]; curr_score += abs(sum - x[j]); } if (curr_score > score) { score = curr_score; for (int j = 0; j < m; j++) ans[j] = temp[j]; } } for (int i = 0; i < m; i++) cout << ans[i] << ' '; cout << '\n'; } }
158	 #include <bits/stdc++.h> using namespace std; const int N = 10, M = 1e4 + 10; int n, m, first[N], s[M][N], coef[M], ord[M], res[M]; void solve() { cin >> n >> m; for (int i = 0; i < n; i++) cin >> first[i]; for (int i = 0; i < n; i++) { string b; cin >> b; for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0'; } int ans = 0; for (int i = 0; i < 1 << n; i++) { int sum = 0; for (int j = 0; j < n; j++) { if (i >> j & 1) sum += first[j]; else sum -= first[j]; } for (int j = 1; j <= m; j++) { coef[j] = 0; for (int k = 0; k < n; k++) { if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1; } ord[j] = j; } sort(ord + 1, ord + m + 1, [&](int first, int second) { return coef[first] < coef[second]; }); for (int j = 1; j <= m; j++) sum += j * coef[ord[j]]; if (ans < sum) { for (int j = 1; j <= m; j++) res[ord[j]] = j; ans = sum; } } for (int i = 1; i <= m; i++) cout << res[i] << " "; cout << endl; return; } int main() { int t; for (cin >> t; t--; solve()) ; return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 10, M = 1e4 + 10; int n, m, first[N], s[M][N], coef[M], ord[M], res[M]; void solve() { cin >> n >> m; for (int i = 0; i < n; i++) cin >> first[i]; for (int i = 0; i < n; i++) { string b; cin >> b; for (int j = 0; j < m; j++) s[j + 1][i] = b[j] - '0'; } int ans = -1; for (int i = 0; i < 1 << n; i++) { int sum = 0; for (int j = 0; j < n; j++) { if (i >> j & 1) sum += first[j]; else sum -= first[j]; } for (int j = 1; j <= m; j++) { coef[j] = 0; for (int k = 0; k < n; k++) { if (s[j][k]) coef[j] += (i >> k & 1) ? -1 : 1; } ord[j] = j; } sort(ord + 1, ord + m + 1, [&](int first, int second) { return coef[first] < coef[second]; }); for (int j = 1; j <= m; j++) sum += j * coef[ord[j]]; if (ans < sum) { for (int j = 1; j <= m; j++) res[ord[j]] = j; ans = sum; } } for (int i = 1; i <= m; i++) cout << res[i] << " "; cout << endl; return; } int main() { int t; for (cin >> t; t--; solve()) ; return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; vector<long long> a(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i]; vector<string> s(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i]; long long maxi = 0; vector<long long> res(m); for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) { vector<pair<long long, long long>> c(m); for (int j = 0, ggdem = n; j < ggdem; ++j) { long long p = 1; if (i & (1ll << j)) p = -1; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) { if (s[j][ii] == '1') c[ii].first += p; } } for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii; sort(c.begin(), c.end()); long long val = 0; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) val += (ii + 1) * c[ii].first; for (int j = 0, ggdem = n; j < ggdem; ++j) { if (i & (1ll << j)) val += a[j]; else val -= a[j]; } if (val > maxi) { maxi = val; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii; } } for (auto i : res) cout << i + 1 << " "; cout << "\n"; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long n, m; cin >> n >> m; vector<long long> a(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> a[i]; vector<string> s(n); for (int i = 0, ggdem = n; i < ggdem; ++i) cin >> s[i]; long long maxi = 0; vector<long long> res(m); for (int i = 0, ggdem = (1ll << n); i < ggdem; ++i) { vector<pair<long long, long long>> c(m); for (int j = 0, ggdem = n; j < ggdem; ++j) { long long p = 1; if (i & (1ll << j)) p = -1; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) { if (s[j][ii] == '1') c[ii].first += p; } } for (int ii = 0, ggdem = m; ii < ggdem; ++ii) c[ii].second = ii; sort(c.begin(), c.end()); long long val = 0; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) val += (ii + 1) * c[ii].first; for (int j = 0, ggdem = n; j < ggdem; ++j) { if (i & (1ll << j)) val += a[j]; else val -= a[j]; } if (val >= maxi) { maxi = val; for (int ii = 0, ggdem = m; ii < ggdem; ++ii) res[c[ii].second] = ii; } } for (auto i : res) cout << i + 1 << " "; cout << "\n"; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { static int xx[10], ans[10000]; static char s[10][10000 + 1]; int n, m, ansv; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", &xx[i]); for (int i = 0; i < n; i++) scanf("%s", s[i]); ansv = 0; memset(ans, 0, m * sizeof *ans); for (int b = 0; b < 1 << n; b++) { static int kk[10000]; int sum = 0, cnt; vector<int> ii(m); for (int i = 0; i < n; i++) if (b >> i & 1) sum += xx[i]; else sum -= xx[i]; for (int h = 0; h < m; h++) { int k = 0; for (int i = 0; i < n; i++) if (s[i][h] == '1') { if (b >> i & 1) k--; else k++; } kk[h] = k, ii[h] = h; } sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; }); cnt = 1; for (int h : ii) sum += kk[h] * cnt++; if (sum > ansv) { ansv = sum; cnt = 1; for (int h : ii) { ans[h] = cnt++; } } } for (int h = 0; h < m; h++) printf("%d ", ans[h]); printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; scanf("%d", &t); while (t--) { static int xx[10], ans[10000]; static char s[10][10000 + 1]; int n, m, ansv; scanf("%d%d", &n, &m); for (int i = 0; i < n; i++) scanf("%d", &xx[i]); for (int i = 0; i < n; i++) scanf("%s", s[i]); ansv = -1; memset(ans, 0, m * sizeof *ans); for (int b = 0; b < 1 << n; b++) { static int kk[10000]; int sum = 0, cnt; vector<int> ii(m); for (int i = 0; i < n; i++) if (b >> i & 1) sum += xx[i]; else sum -= xx[i]; for (int h = 0; h < m; h++) { int k = 0; for (int i = 0; i < n; i++) if (s[i][h] == '1') { if (b >> i & 1) k--; else k++; } kk[h] = k, ii[h] = h; } sort(ii.begin(), ii.end(), [&](int i, int j) { return kk[i] < kk[j]; }); cnt = 1; for (int h : ii) sum += kk[h] * cnt++; if (sum > ansv) { ansv = sum; cnt = 1; for (int h : ii) { ans[h] = cnt++; } } } for (int h = 0; h < m; h++) printf("%d ", ans[h]); printf("\n"); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; constexpr long long int MOD = 998244353; constexpr double EPS = 1e-8; long long int N, M, K, T, H, W, L, R; void Solve() { cin >> N >> M; vector<int> v(N); for (int i = 0; i < N; i++) { cin >> v[i]; } vector<string> s(N); for (auto& i : s) cin >> i; int score = 0; vector<int> ans(M); for (int i = 0; i < 1 << N; i++) { vector<int> sum(N); vector<int> point(M); int csum = 0; vector<pair<int, int>> vp; for (int j = 0; j < M; j++) { int n = 0; for (int k = 0; k < N; k++) { if (s[k][j] == '1') { if (i >> k & 1) { n++; } else { n--; } } } vp.push_back({n, j}); } sort(vp.begin(), vp.end()); for (int j = 0; j < vp.size(); j++) { point[vp[j].second] = j + 1; } for (int j = 0; j < N; j++) { for (int k = 0; k < M; k++) { if (s[j][k] == '1') { sum[j] += point[k]; } } } for (int j = 0; j < N; j++) { csum += abs(v[j] - sum[j]); } if (csum > score) { score = csum; ans = point; } } for (auto i : ans) cout << i << " "; cout << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); T = 1; cin >> T; while (T--) { Solve(); } }	 #include <bits/stdc++.h> using namespace std; constexpr long long int MOD = 998244353; constexpr double EPS = 1e-8; long long int N, M, K, T, H, W, L, R; void Solve() { cin >> N >> M; vector<int> v(N); for (int i = 0; i < N; i++) { cin >> v[i]; } vector<string> s(N); for (auto& i : s) cin >> i; int score = -1; vector<int> ans(M); for (int i = 0; i < 1 << N; i++) { vector<int> sum(N); vector<int> point(M); int csum = 0; vector<pair<int, int>> vp; for (int j = 0; j < M; j++) { int n = 0; for (int k = 0; k < N; k++) { if (s[k][j] == '1') { if (i >> k & 1) { n++; } else { n--; } } } vp.push_back({n, j}); } sort(vp.begin(), vp.end()); for (int j = 0; j < vp.size(); j++) { point[vp[j].second] = j + 1; } for (int j = 0; j < N; j++) { for (int k = 0; k < M; k++) { if (s[j][k] == '1') { sum[j] += point[k]; } } } for (int j = 0; j < N; j++) { csum += abs(v[j] - sum[j]); } if (csum > score) { score = csum; ans = point; } } for (auto i : ans) cout << i << " "; cout << endl; } int main() { ios::sync_with_stdio(false); cin.tie(0); T = 1; cin >> T; while (T--) { Solve(); } }
158	 #include <bits/stdc++.h> using namespace std; char s[10][10001]; int X[10]; pair<int, vector<int>> Calculate(int n, int m, int mask) { vector<pair<int, int>> v(m); for (int k = 0; k < m; ++k) { int c = 0; for (int i = 0; i < n; ++i) { if (s[i][k] == '0') { continue; } c += ((mask & (1 << i)) != 0) ? 1 : -1; } v[k] = {c, k}; } int ans = 0; for (int i = 0; i < n; ++i) { int c = ((mask & (1 << i)) != 0) ? -1 : 1; ans += c * X[i]; } vector<int> p(m); sort(v.begin(), v.end()); for (int k = 0; k < m; ++k) { ans += v[k].first * (k + 1); p[v[k].second] = k + 1; } return {ans, p}; } void Solve() { int n, m; scanf("%d%d", &n, &m); for (int i = 1; i <= n; ++i) { scanf("%d", &X[i]); } for (int i = 0; i < n; ++i) { scanf("%s", s[i]); } pair<int, vector<int>> ans = {INT_MIN, vector<int>()}; for (int mask = 0; mask < (1 << n); ++mask) { ans = max(ans, Calculate(n, m, mask)); } auto [_, p] = ans; for (int pi : p) { printf("%d ", pi); } printf("\n"); } int main() { int t; scanf("%d", &t); while (t--) { Solve(); } return 0; }	 #include <bits/stdc++.h> using namespace std; char s[10][10001]; int X[10]; pair<int, vector<int>> Calculate(int n, int m, int mask) { vector<pair<int, int>> v(m); for (int k = 0; k < m; ++k) { int c = 0; for (int i = 0; i < n; ++i) { if (s[i][k] == '0') { continue; } c += ((mask & (1 << i)) != 0) ? 1 : -1; } v[k] = {c, k}; } int ans = 0; for (int i = 0; i < n; ++i) { int c = ((mask & (1 << i)) != 0) ? -1 : 1; ans += c * X[i]; } vector<int> p(m); sort(v.begin(), v.end()); for (int k = 0; k < m; ++k) { ans += v[k].first * (k + 1); p[v[k].second] = k + 1; } return {ans, p}; } void Solve() { int n, m; scanf("%d%d", &n, &m); for (int i = 0; i < n; ++i) { scanf("%d", &X[i]); } for (int i = 0; i < n; ++i) { scanf("%s", s[i]); } pair<int, vector<int>> ans = {INT_MIN, vector<int>()}; for (int mask = 0; mask < (1 << n); ++mask) { ans = max(ans, Calculate(n, m, mask)); } auto [_, p] = ans; for (int pi : p) { printf("%d ", pi); } printf("\n"); } int main() { int t; scanf("%d", &t); while (t--) { Solve(); } return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 15; const int M = 1e4 + 5; int t, n, m, a[N], sum, f, ans[N], res; char s[N][M]; pair<int, int> c[M]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; res = -1; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> (s[i] + 1); for (int i = 0; i < (1 << n); i++) { sum = 0; for (int j = 1; j <= m; j++) c[j] = {0, j}; for (int j = 1; j <= n; j++) { if ((i >> (j - 1)) & 1) f = 1; else f = -1; sum += f * a[j]; for (int k = 1; k <= m; k++) if (s[j][k] == '1') c[k].first -= f; } sort(c + 1, c + m + 1); for (int j = 1; j <= m; j++) sum += j * c[j].first; if (sum > res) { res = sum; for (int j = 1; j <= m; j++) ans[c[j].second] = j; } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 15; const int M = 1e4 + 5; int t, n, m, a[N], sum, f, ans[M], res; char s[N][M]; pair<int, int> c[M]; int main() { ios::sync_with_stdio(false); cin >> t; while (t--) { cin >> n >> m; res = -1; for (int i = 1; i <= n; i++) cin >> a[i]; for (int i = 1; i <= n; i++) cin >> (s[i] + 1); for (int i = 0; i < (1 << n); i++) { sum = 0; for (int j = 1; j <= m; j++) c[j] = {0, j}; for (int j = 1; j <= n; j++) { if ((i >> (j - 1)) & 1) f = 1; else f = -1; sum += f * a[j]; for (int k = 1; k <= m; k++) if (s[j][k] == '1') c[k].first -= f; } sort(c + 1, c + m + 1); for (int j = 1; j <= m; j++) sum += j * c[j].first; if (sum > res) { res = sum; for (int j = 1; j <= m; j++) ans[c[j].second] = j; } } for (int i = 1; i <= m; i++) cout << ans[i] << ' '; cout << endl; } return 0; }
158	 #include <bits/stdc++.h> using namespace std; const int N = 12; const int M = 10005; const int lim = 200000; const int inf = 1e9; int T; int n, m; int x[N]; char s[N][M]; int cnt[M]; int b[M]; int ans[M]; bool cmp(int i, int j) { return cnt[i] < cnt[j]; } int main() { scanf("%d", &T); while (T--) { scanf("%d%d", &n, &m); for (int i = 0; i <= n - 1; ++i) scanf("%d", &x[i]); for (int i = 0; i <= n - 1; ++i) scanf("%s", s[i]); int ret = 0; for (int mask = 0; mask <= (1 << n) - 1; ++mask) { for (int j = 0; j <= m - 1; ++j) cnt[j] = 0; for (int i = 0; i <= n - 1; ++i) { for (int j = 0; j <= m - 1; ++j) { if (s[i][j] == '1') { if (mask & (1 << i)) ++cnt[j]; else --cnt[j]; } } } for (int j = 0; j <= m - 1; ++j) b[j] = j; sort(b, b + m, cmp); int tmp = 0; for (int i = 0; i <= n - 1; ++i) { int r = 0; for (int j = 0; j <= m - 1; ++j) { if (s[i][b[j]] == '1') { r += j + 1; } } if (mask & (1 << i)) tmp += r - x[i]; else tmp -= r - x[i]; } if (tmp > ret) { ret = tmp; for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1; } } for (int j = 0; j <= m - 1; ++j) printf("%d ", ans[j]); printf("\n"); } return 0; }	 #include <bits/stdc++.h> using namespace std; const int N = 12; const int M = 10005; const int lim = 200000; const int inf = 1e9; int T; int n, m; int x[N]; char s[N][M]; int cnt[M]; int b[M]; int ans[M]; bool cmp(int i, int j) { return cnt[i] < cnt[j]; } int main() { scanf("%d", &T); while (T--) { scanf("%d%d", &n, &m); for (int i = 0; i <= n - 1; ++i) scanf("%d", &x[i]); for (int i = 0; i <= n - 1; ++i) scanf("%s", s[i]); int ret = -inf; for (int mask = 0; mask <= (1 << n) - 1; ++mask) { for (int j = 0; j <= m - 1; ++j) cnt[j] = 0; for (int i = 0; i <= n - 1; ++i) { for (int j = 0; j <= m - 1; ++j) { if (s[i][j] == '1') { if (mask & (1 << i)) ++cnt[j]; else --cnt[j]; } } } for (int j = 0; j <= m - 1; ++j) b[j] = j; sort(b, b + m, cmp); int tmp = 0; for (int i = 0; i <= n - 1; ++i) { int r = 0; for (int j = 0; j <= m - 1; ++j) { if (s[i][b[j]] == '1') { r += j + 1; } } if (mask & (1 << i)) tmp += r - x[i]; else tmp -= r - x[i]; } if (tmp > ret) { ret = tmp; for (int j = 0; j <= m - 1; ++j) ans[b[j]] = j + 1; } } for (int j = 0; j <= m - 1; ++j) printf("%d ", ans[j]); printf("\n"); } return 0; }
159	 #include <bits/stdc++.h> using namespace std; using uint = unsigned int; const int N = 1e6 + 5; mt19937 rnd(time(0)); int n, K, flag[N], pr[N], cnt; uint H[N], sum; unordered_map<uint, int> pos; int main() { scanf("%d", &n); K = n >> 1; flag[0] = flag[1] = 1, H[1] = 0; for (int i = 2; i <= n; i++) { if (!flag[i]) pr[++cnt] = i, H[i] = rnd(); for (int j = 1; j <= cnt && i * pr[j] <= n; j++) { flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]]; if (i % pr[j] == 0) break; } } for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i]; if (sum == 0) { printf("%d\n", n); for (int i = 1; i <= n; i++) printf("%d ", i); return 0; } for (int i = 1; i <= n; i++) if (H[i] == sum) { printf("%d\n", n - 1); for (int j = 1; j <= n; j++) if (j != i) printf("%d ", j); return 0; } for (int i = 1; i <= n; i++) { if (pos.count(sum ^ H[i])) { int p = pos[sum ^ H[i]]; printf("%d\n", n - 2); for (int j = 1; j <= n; j++) if (j != i && j != p) printf("%d ", j); return 0; } pos[H[i]] = i; } printf("%d\n", n - 3); for (int i = 1; i <= n; i++) if (i != 2 && i != K && i != n) printf("%d ", i); return 0; }	 #include <bits/stdc++.h> using namespace std; using ull = unsigned long long; const int N = 1e6 + 5; mt19937_64 rnd(time(0)); int n, K, flag[N], pr[N], cnt; ull H[N], sum; unordered_map<ull, int> pos; int main() { scanf("%d", &n); K = n >> 1; flag[0] = flag[1] = 1, H[1] = 0; for (int i = 2; i <= n; i++) { if (!flag[i]) pr[++cnt] = i, H[i] = rnd(); for (int j = 1; j <= cnt && i * pr[j] <= n; j++) { flag[i * pr[j]] = 1, H[i * pr[j]] = H[i] ^ H[pr[j]]; if (i % pr[j] == 0) break; } } for (int i = 2; i <= n; i++) H[i] ^= H[i - 1], sum ^= H[i]; if (sum == 0) { printf("%d\n", n); for (int i = 1; i <= n; i++) printf("%d ", i); return 0; } for (int i = 1; i <= n; i++) if (H[i] == sum) { printf("%d\n", n - 1); for (int j = 1; j <= n; j++) if (j != i) printf("%d ", j); return 0; } for (int i = 1; i <= n; i++) { if (pos.count(sum ^ H[i])) { int p = pos[sum ^ H[i]]; printf("%d\n", n - 2); for (int j = 1; j <= n; j++) if (j != i && j != p) printf("%d ", j); return 0; } pos[H[i]] = i; } printf("%d\n", n - 3); for (int i = 1; i <= n; i++) if (i != 2 && i != K && i != n) printf("%d ", i); return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int row, column, r_row, r_column, f_row, f_column; int dr = 1, dc = 1; cin >> row >> column >> r_row >> r_column >> f_row >> f_column; int count; count = 0; while (f_row != r_row && f_column != r_column) { if (r_row + dr > row || r_row + dr < 1) { dr *= (-1); } if (r_column + dr > column || r_column + dr < 1) { dc *= (-1); } r_column += dc; r_row += dr; count++; } cout << count << endl; } }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int row, column, r_row, r_column, f_row, f_column; int dr = 1, dc = 1; cin >> row >> column >> r_row >> r_column >> f_row >> f_column; int count; count = 0; while (f_row != r_row && f_column != r_column) { if (r_row + dr > row || r_row + dr < 1) { dr *= (-1); } if (r_column + dc > column || r_column + dc < 1) { dc *= (-1); } r_column += dc; r_row += dr; count++; } cout << count << endl; } }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int rb, cb, rd, cd; cin >> rb >> cb >> rd >> cd; int x1, x2; if (rb <= rd) { x1 = rd - rb; } else if (rb > rd) { x1 = 2 * (n)-rb - rd; } if (cb <= cd) { x2 = cd - cb; } else if (cb > cd) { x2 = 2 * (m)-rb - rd; } if (x1 < x2) { cout << x1 << endl; } else cout << x2 << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m; cin >> n >> m; int rb, cb, rd, cd; cin >> rb >> cb >> rd >> cd; int x1, x2; if (rb <= rd) { x1 = rd - rb; } else if (rb > rd) { x1 = 2 * (n)-rb - rd; } if (cb <= cd) { x2 = cd - cb; } else if (cb > cd) { x2 = 2 * (m)-cb - cd; } if (x1 < x2) { cout << x1 << endl; } else cout << x2 << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int f; cin >> f; int r, c; int rl, cl; int ra, ca; for (int i = 0; i < f; i++) { int tr = 0, tc = 0; cin >> r >> c; cin >> rl >> cl; cin >> ra >> ca; if (cl == ca) tc = 0; if (cl == ra) tr = 0; else if (rl < ra) tr = ra - rl; else tr = (r - rl) + (r - ra); if (cl == ca) tc = 0; else if (cl < ca) tc = ca - cl; else tc = (c - cl) + (c - ca); if (tr >= tc) cout << tc; else cout << tr; cout << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int f; cin >> f; int r, c; int rl, cl; int ra, ca; for (int i = 0; i < f; i++) { int tr = 0, tc = 0; cin >> r >> c; cin >> rl >> cl; cin >> ra >> ca; if (cl == ca) tc = 0; if (rl == ra) tr = 0; else if (rl < ra) tr = ra - rl; else tr = (r - rl) + (r - ra); if (cl == ca) tc = 0; else if (cl < ca) tc = ca - cl; else tc = (c - cl) + (c - ca); if (tr >= tc) cout << tc; else cout << tr; cout << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; scanf("%d%d%d%d%d%d", &m, &n, &rb, &cb, &rd, &cd); int ans = 0; int dr = 1, dc = 1; while (rb != rd && cb != cd) { if (rb + dr < 1 || rb + dr > n) dr *= -1; if (cb + dc < 1 || cb + dc > m) dc *= -1; rb += dr; cb += dc; ans++; } printf("%d\n", ans); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; scanf("%d%d%d%d%d%d", &n, &m, &rb, &cb, &rd, &cd); int ans = 0; int dr = 1, dc = 1; while (rb != rd && cb != cd) { if (rb + dr < 1 || rb + dr > n) dr *= -1; if (cb + dc < 1 || cb + dc > m) dc *= -1; rb += dr; cb += dc; ans++; } printf("%d\n", ans); } int main() { int t; scanf("%d", &t); while (t--) { solve(); } }
160	 #include <bits/stdc++.h> using namespace std; long long inf = 1000000007; double pi = acos(-1); long long p(long long a, long long b) { long long ans = 1; if (a < 0) a += inf; while (b) { if (b % 2 == 1) { ans = ((ans % inf) * (a % inf)) % inf; } a = ((a % inf) * (a % inf)) % inf; if (a < 0) a += inf; b /= 2; } return ans; } long long lis(vector<long long>& arr) { vector<long long> temp; for (auto i : arr) { if (temp.empty() || i > temp.back()) temp.push_back(i); else { auto it = lower_bound(temp.begin(), temp.end(), i); *it = i; } } return temp.size(); } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; for (long long tt = 1; tt <= t; tt++) { long long n, m, r1, c1, r2, c2; cin >> n >> m >> r1 >> c1 >> r2 >> c2; long long ans = 1e9; if (r1 <= r2) { ans = min(ans, r2 - r1); } else { ans = min(ans, r1 - r2 + 2 * (n - r1)); } if (c1 <= 2) { ans = min(ans, c2 - c1); } else { ans = min(ans, c1 - c2 + 2 * (m - c1)); } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long inf = 1000000007; double pi = acos(-1); long long p(long long a, long long b) { long long ans = 1; if (a < 0) a += inf; while (b) { if (b % 2 == 1) { ans = ((ans % inf) * (a % inf)) % inf; } a = ((a % inf) * (a % inf)) % inf; if (a < 0) a += inf; b /= 2; } return ans; } long long lis(vector<long long>& arr) { vector<long long> temp; for (auto i : arr) { if (temp.empty() || i > temp.back()) temp.push_back(i); else { auto it = lower_bound(temp.begin(), temp.end(), i); *it = i; } } return temp.size(); } signed main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t = 1; cin >> t; for (long long tt = 1; tt <= t; tt++) { long long n, m, r1, c1, r2, c2; cin >> n >> m >> r1 >> c1 >> r2 >> c2; long long ans = 1e9; if (r1 <= r2) { ans = min(ans, r2 - r1); } else { ans = min(ans, r1 - r2 + 2 * (n - r1)); } if (c1 <= c2) { ans = min(ans, c2 - c1); } else { ans = min(ans, c1 - c2 + 2 * (m - c1)); } cout << ans << '\n'; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; const long long N = 1e17; const long long sz = 2e5 + 5; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1; cin >> r >> c >> rb >> cb >> rd >> cd; long long time = 0; while (true) { if (cb == cd || rb == rd) { break; } else { if (rb + mv1 > r || rb + mv1 <= 0) { mv1 *= -1; } else if (cb + mv2 > c || cb + mv2 <= 0) { mv2 *= -1; } rb += mv1; cb += mv2; } time++; } cout << time << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long N = 1e17; const long long sz = 2e5 + 5; int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; cin >> t; while (t--) { long long r, c, rb, cb, rd, cd, mv1 = 1, mv2 = 1; cin >> r >> c >> rb >> cb >> rd >> cd; long long time = 0; while (true) { if (cb == cd || rb == rd) { break; } else { if (rb + mv1 > r || rb + mv1 <= 0) { mv1 *= -1; } if (cb + mv2 > c || cb + mv2 <= 0) { mv2 *= -1; } rb += mv1; cb += mv2; } time++; } cout << time << endl; } }
160	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd)); int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - n) + abs(n - cd)); int ans = min(x, y); cout << ans << endl; } int main() { int t; cin >> t; while (t--) solve(); return 0; }	 #include <bits/stdc++.h> using namespace std; void solve() { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int x = (rb <= rd) ? abs(rd - rb) : (abs(rb - n) + abs(n - rd)); int y = (cb <= cd) ? abs(cd - cb) : (abs(cb - m) + abs(m - cd)); int ans = min(x, y); cout << ans << endl; } int main() { int t; cin >> t; while (t--) solve(); return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1; cin >> n >> m >> rb >> cb >> rd >> cd; while ((rb != rd) && (cb != cd)) { ans++; if (flag1) rb++; else rb--; if (rb > n) { rb -= 2; flag1 = 0; } if (rb < 1) { rb += 2; flag1 = 1; } if (flag2) cb++; else cb--; if (cb > n) { cb -= 2; flag2 = 0; } if (cb < 1) { cb += 2; flag1 = 1; } } cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, rd, cb, cd, i, ans = 0, flag1 = 1, flag2 = 1; cin >> n >> m >> rb >> cb >> rd >> cd; while ((rb != rd) && (cb != cd)) { ans++; if (flag1) rb++; else rb--; if (rb > n) { rb -= 2; flag1 = 0; } if (rb < 1) { rb += 2; flag1 = 1; } if (flag2) cb++; else cb--; if (cb > m) { cb -= 2; flag2 = 0; } if (cb < 1) { cb += 2; flag1 = 1; } } cout << ans << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; template <typename T> inline void read(T& x) { x = 0; bool f = 0; char ch = (char)getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = 1; ch = (char)getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + (ch & 15); ch = (char)getchar(); } if (f) x = -x; } template <typename T> inline void write(T x) { if (x < 0) x = -x, putchar('-'); static int st[45]; int top = 0; do { st[top++] = x % 10; x /= 10; } while (x); while (top) putchar(st[--top] + '0'); putchar('\n'); } const long double pi = acos(-1.0); const long double eps = (double)1e-7; const long long mod = 1e9 + 7; const int maxn = 1505; const int maxm = 5005; int main() { ios::sync_with_stdio(false); cin.tie(0); ; int T; cin >> T; while (T--) { int n, m, a1, b1, a2, b2; cin >> n >> m >> a1 >> b1 >> a2 >> b2; int dx = 1, dy = 1; int ans = 0; while (a1 != a2 && b1 != b2) { if (a1 + dx < 1 || a1 + dx > n) dx = -dx; if (b1 + dx < 1 || b1 + dx > m) dy = -dy; a1 += dx; b1 += dy; ans++; } cout << ans << "\n"; } }	 #include <bits/stdc++.h> using namespace std; template <typename T> inline void read(T& x) { x = 0; bool f = 0; char ch = (char)getchar(); while (ch < '0' || ch > '9') { if (ch == '-') f = 1; ch = (char)getchar(); } while (ch >= '0' && ch <= '9') { x = x * 10 + (ch & 15); ch = (char)getchar(); } if (f) x = -x; } template <typename T> inline void write(T x) { if (x < 0) x = -x, putchar('-'); static int st[45]; int top = 0; do { st[top++] = x % 10; x /= 10; } while (x); while (top) putchar(st[--top] + '0'); putchar('\n'); } const long double pi = acos(-1.0); const long double eps = (double)1e-7; const long long mod = 1e9 + 7; const int maxn = 1505; const int maxm = 5005; int main() { ios::sync_with_stdio(false); cin.tie(0); ; int T; cin >> T; while (T--) { int n, m, a1, b1, a2, b2; cin >> n >> m >> a1 >> b1 >> a2 >> b2; int dx = 1, dy = 1; int ans = 0; while (a1 != a2 && b1 != b2) { if (a1 + dx < 1 || a1 + dx > n) dx = -dx; if (b1 + dy < 1 || b1 + dy > m) dy = -dy; a1 += dx; b1 += dy; ans++; } cout << ans << "\n"; } }
160	 #include <bits/stdc++.h> using namespace std; void go() { long long n, m, xr, yr, xd, yd; cin >> n >> m >> xr >> yr >> xd >> yd; long long dirx = 1, diry = 1; long long ans = 0; while (true) { if (xr == xd || yr == yd) { break; } xr += dirx; yr += diry; if (xr > xd) { dirx = -1; xr = n - 1; } if (yr > m) { diry = -1; yr = m - 1; } if (xr < 1) { xr = 2; dirx = 1; } if (yr < 1) { yr = 2; diry = 1; } ans++; } cout << ans << "\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; t = 1; cin >> t; while (t--) { go(); } return 0; }	 #include <bits/stdc++.h> using namespace std; void go() { long long n, m, xr, yr, xd, yd; cin >> n >> m >> xr >> yr >> xd >> yd; long long dirx = 1, diry = 1; long long ans = 0; while (true) { if (xr == xd || yr == yd) { break; } xr += dirx; yr += diry; if (xr > n) { dirx = -1; xr = n - 1; } if (yr > m) { diry = -1; yr = m - 1; } if (xr < 1) { xr = 2; dirx = 1; } if (yr < 1) { yr = 2; diry = 1; } ans++; } cout << ans << "\n"; } int32_t main() { ios::sync_with_stdio(0); cin.tie(0); cout.tie(0); long long t; t = 1; cin >> t; while (t--) { go(); } return 0; }
160	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int ans; if (rd - rb >= 0) ans = rd - rb; else ans = 2 * n - (rd + rb); if (cd - cb >= 0) ans = min(ans, cd - cb); else ans = min(ans, 2 * m - (rd + rb)); cout << ans << endl; } return 0; }	 #include <bits/stdc++.h> using namespace std; int main() { int t; cin >> t; while (t--) { int n, m, rb, cb, rd, cd; cin >> n >> m >> rb >> cb >> rd >> cd; int ans; if (rd - rb >= 0) ans = rd - rb; else ans = 2 * n - (rd + rb); if (cd - cb >= 0) ans = min(ans, cd - cb); else ans = min(ans, 2 * m - (cd + cb)); cout << ans << endl; } return 0; }
160	 #include <bits/stdc++.h> using namespace std; const int nax = 2 * (int)1e5 + 10; const int INF = (int)1e9 + 47; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int tt; cin >> tt; while (tt--) { int n, m, a, b, c, d; cin >> n >> m >> a >> b >> c >> d; int ans = INF; if (a <= c) ans = min(ans, c - a); if (b <= d) ans = min(ans, d - b); if (a > c) ans = min(ans, (n - a) + (n - c)); if (b > c) ans = min(ans, (m - b) + (m - d)); cout << ans << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int nax = 2 * (int)1e5 + 10; const int INF = (int)1e9 + 47; int main() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); int tt; cin >> tt; while (tt--) { int n, m, a, b, c, d; cin >> n >> m >> a >> b >> c >> d; int ans = INF; if (a <= c) ans = min(ans, c - a); if (b <= d) ans = min(ans, d - b); if (a > c) ans = min(ans, (n - a) + (n - c)); if (b > d) ans = min(ans, (m - b) + (m - d)); cout << ans << '\n'; } }
161	 #include <bits/stdc++.h> using namespace std; int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1}; int dy[] = {0, 1, 0, -1, -1, 1, -1, 1}; int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2}; int ky[] = {1, 2, 2, 1, -1, -2, -2, -1}; bool com(pair<int, int> a, pair<int, int> b) { return abs(a.first - a.second) < abs(b.first - b.second); } void solved() { int n, x, y; cin >> n; vector<pair<int, int> > v; for (int i = 0; i < n; i++) { cin >> x >> y; v.push_back({x, y}); } sort(v.begin(), v.end(), com); int ar[n + 1]; memset(ar, 0, sizeof(ar)); for (auto it : v) { int a = it.first, b = it.second; if (ar[a] == 0) { cout << a << ' ' << b << ' ' << a << endl; ar[a] = 1; } else if (ar[b] == 0) { cout << a << ' ' << b << ' ' << b << endl; ar[b] = 1; } else { for (int i = 1; i <= n; i++) { if (ar[i] == 0) { cout << a << ' ' << b << ' ' << i << endl; ar[i] = 1; break; } } } } } int main() { long long int tc; cin >> tc; while (tc--) { solved(); } }	 #include <bits/stdc++.h> using namespace std; int dx[] = {-1, 0, 1, 0, -1, -1, 1, 1}; int dy[] = {0, 1, 0, -1, -1, 1, -1, 1}; int kx[] = {-2, -1, 1, 2, 2, 1, -1, -2}; int ky[] = {1, 2, 2, 1, -1, -2, -2, -1}; bool com(pair<int, int> a, pair<int, int> b) { return abs(a.first - a.second) < abs(b.first - b.second); } void solved() { int n, x, y; cin >> n; vector<pair<int, int> > v; for (int i = 0; i < n; i++) { cin >> x >> y; v.push_back({x, y}); } sort(v.begin(), v.end(), com); int ar[n + 1]; memset(ar, 0, sizeof(ar)); for (auto it : v) { int a = it.first, b = it.second; if (ar[a] == 0) { cout << a << ' ' << b << ' ' << a << endl; ar[a] = 1; } else if (ar[b] == 0) { cout << a << ' ' << b << ' ' << b << endl; ar[b] = 1; } else { for (int i = a; i <= b; i++) { if (ar[i] == 0) { cout << a << ' ' << b << ' ' << i << endl; ar[i] = 1; break; } } } } } int main() { long long int tc; cin >> tc; while (tc--) { solved(); } }
161	 #include <bits/stdc++.h> using namespace std; int t, n, v[1010]; struct node { int l, r, d; } a[1010]; bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; } int main() { cin >> t; while (t--) { memset(v, 0, sizeof(v)); cin >> n; for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r; sort(a + 1, a + 1 + n, cmp); for (int i = 1; i <= n; i++) { for (int j = a[i].l; j <= a[i].r; i++) { if (v[j] == 0) { a[i].d = j; v[j] = 1; break; } } } for (int i = 1; i <= n; i++) cout << a[i].l << " " << a[i].r << " " << a[i].d << endl; } }	 #include <bits/stdc++.h> using namespace std; int t, n, v[1010]; struct node { int l, r, d; } a[1010]; bool cmp(node x, node y) { return x.r - x.l < y.r - y.l; } int main() { cin >> t; while (t--) { memset(v, 0, sizeof(v)); cin >> n; for (int i = 1; i <= n; i++) cin >> a[i].l >> a[i].r; sort(a + 1, a + 1 + n, cmp); for (int i = 1; i <= n; i++) { for (int j = a[i].l; j <= a[i].r; j++) { if (v[j] == 0) { a[i].d = j; v[j] = 1; break; } } } for (int i = 1; i <= n; i++) cout << a[i].l << " " << a[i].r << " " << a[i].d << endl; } }
162	 #include <bits/stdc++.h> using namespace std; long long t, n, m, k, mod = 1e9 + 7, ans, a[200011]; string s, s2; bool flag, vis[2000111]; vector<long long> v, tmp; bool okD(long long d, long long mid, long long i) { return tmp[i] - 3 * d >= mid; } bool ok(long long mid) { tmp = v; for (long long i = n - 1; i >= 2; i--) { long long d = tmp[i] - mid; d = min(v[i], d); if (d < 0) return false; d /= 3; tmp[i] -= d * 3; tmp[i - 1] += d; tmp[i - 2] += 2 * d; } long long ret = 1e9; for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]); return ret >= mid; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { cin >> n; v.resize(n); for (long long i = 0; i < n; i++) cin >> v[i]; long long L = 1, R = 10; while (L <= R) { long long mid = (L + R + 1) / 2; if (ok(mid)) ans = mid, L = mid + 1; else R = mid - 1; } cout << ans << '\n'; } return 0; }	 #include <bits/stdc++.h> using namespace std; long long t, n, m, k, mod = 1e9 + 7, ans, a[200011]; string s, s2; bool flag, vis[2000111]; vector<long long> v, tmp; bool okD(long long d, long long mid, long long i) { return tmp[i] - 3 * d >= mid; } bool ok(long long mid) { tmp = v; for (long long i = n - 1; i >= 2; i--) { long long d = tmp[i] - mid; d = min(v[i], d); if (d < 0) return false; d /= 3; tmp[i] -= d * 3; tmp[i - 1] += d; tmp[i - 2] += 2 * d; } long long ret = 1e9; for (long long i = 0; i < n; i++) ret = min(ret, tmp[i]); return ret >= mid; } int32_t main() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); cin >> t; while (t--) { cin >> n; v.resize(n); for (long long i = 0; i < n; i++) cin >> v[i]; long long L = 1, R = 1e9; while (L <= R) { long long mid = (L + R + 1) / 2; if (ok(mid)) ans = mid, L = mid + 1; else R = mid - 1; } cout << ans << '\n'; } return 0; }
162	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int a[MAXN]; int b[MAXN]; int c[MAXN]; int n; bool check(int x) { for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0; for (int i = n; i >= 3; i--) { if (b[i] + c[i] < x) return false; int now = x - c[i]; if (now <= 0) { int res = b[i] / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } else { int res = (b[i] - now) / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } } if (b[1] + c[1] < x || b[2] + c[2] < x) return false; return true; } int main() { std::ios::sync_with_stdio(false); int _; cin >> _; while (_--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int l = 1, r = 10; while (l <= r) { int mid = l + r >> 1; if (check(mid)) { l = mid + 1; } else r = mid - 1; } cout << r << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int MAXN = 2e5 + 10; int a[MAXN]; int b[MAXN]; int c[MAXN]; int n; bool check(int x) { for (int i = 1; i <= n; i++) b[i] = a[i], c[i] = 0; for (int i = n; i >= 3; i--) { if (b[i] + c[i] < x) return false; int now = x - c[i]; if (now <= 0) { int res = b[i] / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } else { int res = (b[i] - now) / 3; b[i] -= res * 3; c[i - 2] += 2 * res; c[i - 1] += res; } } if (b[1] + c[1] < x || b[2] + c[2] < x) return false; return true; } int main() { std::ios::sync_with_stdio(false); int _; cin >> _; while (_--) { cin >> n; for (int i = 1; i <= n; i++) cin >> a[i]; int l = 1, r = 1e9; while (l <= r) { int mid = l + r >> 1; if (check(mid)) { l = mid + 1; } else r = mid - 1; } cout << r << '\n'; } }
163	 #include <bits/stdc++.h> using namespace std; const int mod = 1000000009; inline int qp(long long a, long long b) { long long ans = 1; for (; b;) { if (b & 1) ans = ans * a % mod; b >>= 1; a = a * a % mod; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; for (; t--;) { int n, m, bx, by, dx, dy; long long p; cin >> n >> m >> bx >> by >> dx >> dy >> p; int cx = 1, cy = 1; long long u = 0, d = 1; p = (1 - p * qp(100, mod - 2) % mod + mod) % mod; for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) { if (bx + cx == 0 || bx + cx > n) cx = -cx; if (by + cy == 0 || by + cy > m) cy = -cy; bx += cx; by += cy; u = (u + 1) % mod; if (bx == dx || by == dy) { u = u * p % mod; d = d * p % mod; } } d = (1 - d + mod) % mod; cout << u * qp(d, mod - 2) % mod << '\n'; } }	 #include <bits/stdc++.h> using namespace std; const int mod = 1000000007; inline int qp(long long a, long long b) { long long ans = 1; for (; b;) { if (b & 1) ans = ans * a % mod; b >>= 1; a = a * a % mod; } return ans; } int main() { ios_base::sync_with_stdio(0); cin.tie(0), cout.tie(0); int t; cin >> t; for (; t--;) { int n, m, bx, by, dx, dy; long long p; cin >> n >> m >> bx >> by >> dx >> dy >> p; int cx = -1, cy = -1; long long u = 0, d = 1; p = (1 - p * qp(100, mod - 2) % mod + mod) % mod; for (int i = 0; i != 4 * (n - 1) * (m - 1); ++i) { if (bx + cx == 0 || bx + cx > n) cx = -cx; if (by + cy == 0 || by + cy > m) cy = -cy; bx += cx; by += cy; u = (u + 1) % mod; if (bx == dx || by == dy) { u = u * p % mod; d = d * p % mod; } } d = (1 - d + mod) % mod; cout << u * qp(d, mod - 2) % mod << '\n'; } }
163	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long ksm(long long a, long long b, long long mod) { long long c = 1; while (b) { if (b & 1) c = c * a % mod; b >>= 1; a = a * a % mod; } return c; } long long inv(int x) { return ksm(x, mod - 2, mod); } int t, n, m, len, p, sx, sy, tx, ty, dx, dy; int main() { cin >> t; while (t--) { cin >> n >> m >> sx >> sy >> tx >> ty >> p; long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod, p2 = p * inv(100), P; dx = dy = 1; len = 0; if (sx == tx || sy == ty) P = p1; else P = 1; int tot = 0; for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) { if (sx + dx > n || sx + dx < 1) dx = -dx; if (sy + dy > m || sy + dy < 1) dy = -dy; sx += dx, sy += dy, len = (len + 1) % mod; if (sx == tx || sy == ty) { tot++; ans = (ans + P * len % mod) % mod; P = p1 * P % mod; len = 0; } } if (sx == ty || sy == ty) P = P * inv(p1) % mod; else ans = (ans + len * P % mod) % mod; cout << (ans * inv((1 - P + mod) % mod)) % mod << endl; } }	 #include <bits/stdc++.h> using namespace std; const long long mod = 1e9 + 7; long long ksm(long long a, long long b, long long mod) { long long c = 1; while (b) { if (b & 1) c = c * a % mod; b >>= 1; a = a * a % mod; } return c; } long long inv(int x) { return ksm(x, mod - 2, mod); } int t, n, m, len, p, sx, sy, tx, ty, dx, dy; int main() { cin >> t; while (t--) { cin >> n >> m >> sx >> sy >> tx >> ty >> p; long long ans = 0, p1 = (1 - p * inv(100) % mod + mod) % mod, p2 = p * inv(100), P; dx = dy = 1; len = 0; if (sx == tx || sy == ty) P = p1; else P = 1; int tot = 0; for (int i = 1; i <= 4 * (n - 1) * (m - 1); i++) { if (sx + dx > n || sx + dx < 1) dx = -dx; if (sy + dy > m || sy + dy < 1) dy = -dy; sx += dx, sy += dy, len = (len + 1) % mod; if (sx == tx || sy == ty) { tot++; ans = (ans + P * len % mod) % mod; P = p1 * P % mod; len = 0; } } if (sx == tx || sy == ty) P = P * inv(p1) % mod; else ans = (ans + len * P % mod) % mod; cout << (ans * inv((1 - P + mod) % mod)) % mod << endl; } }
