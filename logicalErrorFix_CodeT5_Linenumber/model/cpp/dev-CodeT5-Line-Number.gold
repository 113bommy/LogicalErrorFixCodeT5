114	15 if (s == "j") return 10;
25	14 cout << p << ' ' << x << '\n';
281	20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;
250	80 count(i) * p[i].first % mod * g[GetIndexBase3(i, j)].first % mod;
228	93 printf("finish %d\n", array[k - 1]);
142	66 for (long long i = 1; i < 10; i++) {
104	38 dp[j][l] = (dp[j - 1][l] + dp[j][l]) % mod;
558	35 swap(b[i + 1], b[2 * n - i - 2]);
89	11 for (int j = 1; j <= i; j++) {
432	22 return;
32	43 a[i] = 2;
30	47 } else if (a[i] == 0) {
95	81 for (int i = 0; i <= n; i++) {
223	29 printf("and 1 3\n");
238	55 printf("%lld\n", ans.mx);
517	67 if (maxi == -1 && m[a[n - 1]] == 1) {
27	19 c[i - 1] = 'k';
203	68 if (a != 1) ++a;
572	30 long long ans = 3LL * modd * modd;
429	41 return;
225	14 int s = 1;
459	32 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)
284	80 long long rst_idx = 1;
6	4 long long n, q, inv[maxn], inv_fac[maxn], fac[maxn], dp[maxn][3];
163	13 int n, m, q, a[maxn], pr[maxn], pl, mn[maxm], fa[maxn], id[maxn], at[maxm];
570	11 if ((arr[3] - arr[2] - arr[1] - 1) > m)
348	43 cout << pos << " " << 1 << "\n";
557	22 for (long long int i = 1; i <= n; i++) {
159	53 ans -= (nowcnt - prev) * 1ll * cur;
220	36 v.push_back(x - a);
344	15 cout << c - n << endl;
573	10 int findpos(long long val) {
94	17 for (int del = 1; del <= i; ++del)
389	33 if (x.first >= sumcovered) {
99	43 for (int j = 0; j <= n; j++) dp[i][j] = mx[j] = 0;
367	25 string b2[100];
352	35 cout << 1 << " " << i + 1 << "\n";
270	17 long long int ctr = 1;
44	18 cout << n / 3 << " " << n / 3 + 1 << '\n';
470	67 printf("%lld ", vec[i]);
127	19 sum -= a[j];
387	35 sort(power, power + n);
80	28 for (int j = 0; j < m / 2 * 2; j += 2) {
300	56 int l = 0, r = 1e9 + 1, ans;
370	62 cout << -1 << "\n";
196	16 s[m + 1] = 0;
71	29 if (k >= m / 2) {
46	14 cout << 0 << " " << 1 << "\n";
233	11 mn[x] = min(mn[x << 1], mn[x << 1 | 1]);
296	52 for (int i = 1; i <= (N - 1); ++i) scanf("%d", a + i + 1), ++a[i + 1];
81	100 for (int i = 0; i < m - 1; i += 2) {
565	73 if (in[2] - 1 <= in[0] + in[1]) {
103	30 dp[j + 1] = max(dp[j + 1], f[j]);
546	41 for (int i = n - 2; i > -1; --i) {
552	103 for (int i = 0; i < 3; ++i) {
464	32 if ((i & 1) == k && get(i) == j)
373	61 ans = 1111111111;
166	4 static const int MAX = 1 << 22;
379	46 if (go(i + 1, n, k, s, 1) == true)
363	27 unsigned long long int a, b, c, i, j, k;
214	40 cout << m << "\n";
273	38 gr = binpow(binpow(2, n, mod) % mod, k - i, mod);
73	31 if (k >= m / 2) {
175	68 cout << "a\n";
576	5 scanf("%d", &n);
167	16 if (j < 0) break;
473	61 z[i] = z[i - l];
388	25 sort(res, res + n, cmp);
276	22 fac[i] = (1ll * fac[i - 1] * i) % mod;
506	13 if (s[i - 1] == 'a' and s[i] == 'b') {
513	74 cout << "-1 -1" << endl;
327	20 for (int i = b[1].first; i <= b[1].second; i++) dp[1][i] = 1;
543	51 app[i + 1].clear();
285	59 for (int i = 0; n - 2 * i > 1; i += 1) {
112	17 return res = (f(i - 1, j) + V[i - 1] * f(i - 1, j - 1)) % MOD;
350	15 cout << a << " " << 1 << endl;
522	86 for (int i : x) {
431	61 if (arr[2] == 1 and s[0] != '2') {
393	22 return {ans, armor.size()};
397	4 long long f[N], sum[N];
28	25 break;
117	108 if (r[id][j] > r[i][j]) ++cnt;
420	9 if (l <= r / 2) {
16	34 long long ans = 0;
412	13 ans = r % l;
161	29 ans += sum + 1ll * (j - 1) * x - T2.ask(x), sum += x;
205	15 if (lazy[si] != 0) {
137	36 if (n % 10 == 9) {
33	46 if (arr[u] == 0) ans++;
108	84 for (long long h = 1; h <= maxn; h++) {
467	27 int lsum = -(s[r] - s[l + 1]);
482	20 T[cur]++;
290	35 long long fact[2 * 200005];
448	16 if (pd == 0) {
544	35 dp[i][j] = max(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);
494	68 for (int i = 1; i <= 10; i++) {
490	16 while (first < maxm) {
335	10 while (count < n) {
255	56 for (int i = 0; i < 1500; i += 1) {
202	27 int sum = 100000000;
