PID	IID	Correct_code	Incorrect_code	Statement
0	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const int N = 3000005;||| 5 int a[N], b[N], c[N];||| 6 const int M = 1000000007;||| 7 int inv[N], f[N], g[N];||| 8 void init() {||| 9 int i;||| 10 inv[1] = 1;||| 11 for (i = 2; i < N; i++) inv[i] = 1LL * inv[M % i] * (M - M / i) % M;||| 12 f[0] = g[0] = 1;||| 13 for (i = 1; i < N; i++) {||| 14 f[i] = 1LL * f[i - 1] * i % M;||| 15 g[i] = 1LL * g[i - 1] * inv[i] % M;||| 16 }||| 17 }||| 18 inline int C(int n, int k) {||| 19 if (k < 0 || k > n) return 0;||| 20 return 1LL * f[n] * g[k] % M * g[n - k] % M;||| 21 }||| 22 int n, q;||| 23 int d[N];||| 24 int main() {||| 25 ios_base::sync_with_stdio(0);||| 26 init();||| 27 cin >> n >> q;||| 28 for (int i = 3; i <= 3 * n; i += 3) (a[1] += C(i, 1)) %= M;||| 29 for (int i = 1; i <= 3 * n; i += 3) (b[1] += C(i, 1)) %= M;||| 30 for (int i = 2; i <= 3 * n; i += 3) (c[1] += C(i, 1)) %= M;||| 31 int pw = inv[3];||| 32 for (int i = 2; i <= 3 * n + 1; i++) d[i] = C(3 * n + 1, i);||| 33 for (int x = 2; x <= 3 * n; x++) {||| 34 c[x] = 1LL * ((b[x - 1] + M - c[x - 1]) % M + d[x + 1]) % M * pw % M;||| 35 a[x] = (c[x - 1] + c[x]) % M;||| 36 b[x] = ((a[x] + a[x - 1]) % M + M - d[x]) % M;||| 37 }||| 38 while (q--) {||| 39 int x;||| 40 cin >> x;||| 41 cout << a[x] << endl;||| 42 }||| 43 return 0;||| 44 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const int N = 3000005;||| 5 int a[N], b[N], c[N];||| 6 const int M = 1000000007;||| 7 int inv[N], f[N], g[N];||| 8 void init() {||| 9 int i;||| 10 inv[1] = 1;||| 11 for (i = 2; i < N; i++) inv[i] = 1LL * inv[M % i] * (M - M / i) % M;||| 12 f[0] = g[0] = 1;||| 13 for (i = 1; i < N; i++) {||| 14 f[i] = 1LL * f[i - 1] * i % M;||| 15 g[i] = 1LL * g[i - 1] * inv[i] % M;||| 16 }||| 17 }||| 18 inline int C(int n, int k) {||| 19 if (k < 0 || k > n) return 0;||| 20 return 1LL * f[n] * g[k] % M * g[n - k] % M;||| 21 }||| 22 int n, q;||| 23 int d[N];||| 24 int main() {||| 25 ios_base::sync_with_stdio(0);||| 26 init();||| 27 cin >> n >> q;||| 28 for (int i = 3; i <= 3 * n; i += 3) (a[1] += C(i, 1)) %= M;||| 29 for (int i = 1; i <= 3 * n; i += 3) (b[1] += C(i, 1)) %= M;||| 30 for (int i = 2; i <= 3 * n; i += 3) (c[1] += C(i, 1)) %= M;||| 31 int pw = inv[3];||| 32 for (int i = 2; i <= 3 * n; i++) d[i] = C(3 * n + 1, i);||| 33 for (int x = 2; x <= 3 * n; x++) {||| 34 c[x] = 1LL * ((b[x - 1] + M - c[x - 1]) % M + d[x + 1]) % M * pw % M;||| 35 a[x] = (c[x - 1] + c[x]) % M;||| 36 b[x] = ((a[x] + a[x - 1]) % M + M - d[x]) % M;||| 37 }||| 38 while (q--) {||| 39 int x;||| 40 cin >> x;||| 41 cout << a[x] << endl;||| 42 }||| 43 return 0;||| 44 }||| 	32 for (int i = 2; i <= 3 * n + 1; i++) d[i] = C(3 * n + 1, i);
0	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class C>||| 5 void mini(C& a, C b) {||| 6 a = min(a, b);||| 7 }||| 8 template <class C>||| 9 void maxi(C& a, C b) {||| 10 a = max(a, b);||| 11 }||| 12 const int mod = 1e9 + 7;||| 13 const int INF = 1e9;||| 14 const double eps = 0.00000001;||| 15 ll powmod(ll a, int exp) {||| 16 if (exp == 0) return 1;||| 17 ll b = powmod(a, exp / 2);||| 18 b *= b;||| 19 b %= mod;||| 20 if (exp % 2) b *= a;||| 21 b %= mod;||| 22 return b;||| 23 }||| 24 ll calcinv(ll a) { return powmod(a, mod - 2); }||| 25 const int N = 3e6;||| 26 ll fact[N + 1], invfact[N + 1], inv[N + 1];||| 27 void precalc() {||| 28 inv[1] = 1;||| 29 for (int i = 2; i <= N; ++i) inv[i] = mod - (mod / i) * inv[mod % i] % mod;||| 30 fact[0] = 1;||| 31 for (int(i) = 1; i <= N; i++) fact[i] = (fact[i - 1] * i) % mod;||| 32 invfact[0] = 1;||| 33 for (int(i) = 1; i <= N; i++) invfact[i] = (invfact[i - 1] * inv[i]) % mod;||| 34 }||| 35 ll comb(int n, int k) {||| 36 ll res = fact[n];||| 37 res *= invfact[k];||| 38 res %= mod;||| 39 res *= invfact[n - k];||| 40 res %= mod;||| 41 return res;||| 42 }||| 43 void c() {||| 44 int n, q;||| 45 cin >> n >> q;||| 46 vector<ll> dp(3), dpp(3);||| 47 vector<ll> res(q, 1);||| 48 vector<pair<int, int> > query(q);||| 49 for (int i = 0; i < q; i++) {||| 50 cin >> query[i].first;||| 51 query[i].second = i;||| 52 }||| 53 sort(query.begin(), query.end());||| 54 int i = 0;||| 55 for (int m = 0; m < 3; m++) dp[m] = n;||| 56 for (int(x) = 1; x <= 3 * n - 1; x++) {||| 57 dpp[0] = comb(3 * n, x + 1) - 2 * dp[0] - dp[1];||| 58 dpp[0] %= mod;||| 59 dpp[0] *= inv[3];||| 60 dpp[0] %= mod;||| 61 if (dpp[0] < 0) dpp[0] += mod;||| 62 dpp[1] = (dpp[0] + dp[0]) % mod;||| 63 dpp[2] = (dpp[1] + dp[1]) % mod;||| 64 swap(dp, dpp);||| 65 while (i < q and query[i].first == x) {||| 66 ll resi = dp[0];||| 67 resi += comb(3 * n, x);||| 68 resi %= mod;||| 69 res[query[i].second] = resi;||| 70 i++;||| 71 }||| 72 }||| 73 for (auto x : res) cout << x << '\n';||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 precalc();||| 79 c();||| 80 return 0;||| 81 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class C>||| 5 void mini(C& a, C b) {||| 6 a = min(a, b);||| 7 }||| 8 template <class C>||| 9 void maxi(C& a, C b) {||| 10 a = max(a, b);||| 11 }||| 12 const int mod = 1e9 + 7;||| 13 const int INF = 1e9;||| 14 const double eps = 0.00000001;||| 15 ll powmod(ll a, int exp) {||| 16 if (exp == 0) return 1;||| 17 ll b = powmod(a, exp / 2);||| 18 b *= b;||| 19 b %= mod;||| 20 if (exp % 2) b *= a;||| 21 b %= mod;||| 22 return b;||| 23 }||| 24 ll calcinv(ll a) { return powmod(a, mod - 2); }||| 25 const int N = 3e6;||| 26 ll fact[N + 1], invfact[N + 1], inv[N + 1];||| 27 void precalc() {||| 28 inv[1] = 1;||| 29 for (int i = 2; i <= N; ++i) inv[i] = mod - (mod / i) * inv[mod % i] % mod;||| 30 fact[0] = 1;||| 31 for (int(i) = 1; i <= N; i++) fact[i] = (fact[i - 1] * i) % mod;||| 32 invfact[0] = 1;||| 33 for (int(i) = 1; i <= N; i++) invfact[i] = (invfact[i - 1] * inv[i]) % mod;||| 34 }||| 35 ll comb(int n, int k) {||| 36 ll res = fact[n];||| 37 res *= invfact[k];||| 38 res %= mod;||| 39 res *= invfact[n - k];||| 40 res %= mod;||| 41 return res;||| 42 }||| 43 void c() {||| 44 int n, q;||| 45 cin >> n >> q;||| 46 vector<ll> dp(3), dpp(3);||| 47 vector<ll> res(q, 1);||| 48 vector<pair<int, int> > query(q);||| 49 for (int i = 0; i < q; i++) {||| 50 cin >> query[i].first;||| 51 query[i].second = i;||| 52 }||| 53 sort(query.begin(), query.end());||| 54 int i = 0;||| 55 for (int m = 0; m < 3; m++) dp[m] = n;||| 56 for (int(x) = 1; x <= 3 * n - 1; x++) {||| 57 dpp[0] = comb(3 * n, x + 1) - 2 * dp[0] - dp[1];||| 58 dpp[0] %= mod;||| 59 dpp[0] *= inv[3];||| 60 dpp[0] %= mod;||| 61 if (dpp[0] < 0) dpp[0] += mod;||| 62 dpp[1] = (dpp[0] + dp[0]) % mod;||| 63 dpp[2] = (dpp[1] + dp[1]) % mod;||| 64 swap(dp, dpp);||| 65 if (i < q and query[i].first == x) {||| 66 ll resi = dp[0];||| 67 resi += comb(3 * n, x);||| 68 resi %= mod;||| 69 res[query[i].second] = resi;||| 70 i++;||| 71 }||| 72 }||| 73 for (auto x : res) cout << x << '\n';||| 74 }||| 75 int main() {||| 76 ios::sync_with_stdio(0);||| 77 cin.tie(0);||| 78 precalc();||| 79 c();||| 80 return 0;||| 81 }||| 	65 while (i < q and query[i].first == x) {
0	27	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""Ofast,unroll-loops"")||| 4 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")||| 5 using namespace std;||| 6 const int MOD = (int)1e9 + 7;||| 7 const int N = (int)3e6 + 5;||| 8 int T;||| 9 int n, q, first;||| 10 int f[N + 5], invf[N + 5];||| 11 long long ans[N + 5][3];||| 12 int lgput(int n, int p) {||| 13 int ans = 1, first = n;||| 14 while (p) {||| 15 if (p & 1) ans = 1LL * ans * first % MOD;||| 16 first = 1LL * first * first % MOD;||| 17 p >>= 1;||| 18 }||| 19 return ans;||| 20 }||| 21 void precalc() {||| 22 f[0] = invf[0] = 1;||| 23 for (int i = 1; i <= N; i++) f[i] = 1LL * f[i - 1] * i % MOD;||| 24 invf[N] = lgput(f[N], MOD - 2);||| 25 for (int i = N - 1; i >= 1; i--) invf[i] = 1LL * invf[i + 1] * (i + 1) % MOD;||| 26 }||| 27 int comb(int n, int k) {||| 28 if (k < 0 || n < 0 || n < k) return 0;||| 29 int ans = 1LL * f[n] * invf[k] % MOD;||| 30 return 1LL * ans * invf[n - k] % MOD;||| 31 }||| 32 void solve() {||| 33 cin >> n >> q;||| 34 ans[0][0] = n + 1;||| 35 ans[0][1] = n;||| 36 ans[0][2] = n;||| 37 for (int i = 1; i <= 3 * n; i++) {||| 38 int s = (comb(3 * n + 1, i + 1) + 2LL * comb(3 * n + 1, i)) % MOD;||| 39 ans[i][0] = (s - ans[i - 1][1] + MOD) % MOD;||| 40 ans[i][0] = (ans[i][0] - 2LL * ans[i - 1][0] + 2LL * MOD) % MOD;||| 41 ans[i][0] = 1LL * lgput(3, MOD - 2) * ans[i][0] % MOD;||| 42 ans[i][1] = (ans[i][0] + ans[i - 1][0]) % MOD;||| 43 ans[i][1] = (ans[i][1] - comb(3 * n + 1, i) + MOD) % MOD;||| 44 ans[i][2] = (ans[i][1] + ans[i - 1][1]) % MOD;||| 45 }||| 46 for (; q; q--) {||| 47 cin >> first;||| 48 cout << ans[first][0] << ""\n"";||| 49 }||| 50 }||| 51 int main() {||| 52 ios_base ::sync_with_stdio(false);||| 53 cin.tie(0);||| 54 cout.tie(0);||| 55 T = 1;||| 56 precalc();||| 57 for (; T; T--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""Ofast,unroll-loops"")||| 4 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")||| 5 using namespace std;||| 6 const int MOD = (int)1e9 + 7;||| 7 const int N = (int)3e6;||| 8 int T;||| 9 int n, q, first;||| 10 int f[N + 5], invf[N + 5];||| 11 long long ans[N + 5][3];||| 12 int lgput(int n, int p) {||| 13 int ans = 1, first = n;||| 14 while (p) {||| 15 if (p & 1) ans = 1LL * ans * first % MOD;||| 16 first = 1LL * first * first % MOD;||| 17 p >>= 1;||| 18 }||| 19 return ans;||| 20 }||| 21 void precalc() {||| 22 f[0] = invf[0] = 1;||| 23 for (int i = 1; i <= N; i++) f[i] = 1LL * f[i - 1] * i % MOD;||| 24 invf[N] = lgput(f[N], MOD - 2);||| 25 for (int i = N - 1; i >= 1; i--) invf[i] = 1LL * invf[i + 1] * (i + 1) % MOD;||| 26 }||| 27 int comb(int n, int k) {||| 28 if (k < 0 || n < 0 || n < k) return 0;||| 29 int ans = 1LL * f[n] * invf[k] % MOD;||| 30 return 1LL * ans * invf[n - k] % MOD;||| 31 }||| 32 void solve() {||| 33 cin >> n >> q;||| 34 ans[0][0] = n + 1;||| 35 ans[0][1] = n;||| 36 ans[0][2] = n;||| 37 for (int i = 1; i <= 3 * n; i++) {||| 38 int s = (comb(3 * n + 1, i + 1) + 2LL * comb(3 * n + 1, i)) % MOD;||| 39 ans[i][0] = (s - ans[i - 1][1] + MOD) % MOD;||| 40 ans[i][0] = (ans[i][0] - 2LL * ans[i - 1][0] + 2LL * MOD) % MOD;||| 41 ans[i][0] = 1LL * lgput(3, MOD - 2) * ans[i][0] % MOD;||| 42 ans[i][1] = (ans[i][0] + ans[i - 1][0]) % MOD;||| 43 ans[i][1] = (ans[i][1] - comb(3 * n + 1, i) + MOD) % MOD;||| 44 ans[i][2] = (ans[i][1] + ans[i - 1][1]) % MOD;||| 45 }||| 46 for (; q; q--) {||| 47 cin >> first;||| 48 cout << ans[first][0] << ""\n"";||| 49 }||| 50 }||| 51 int main() {||| 52 ios_base ::sync_with_stdio(false);||| 53 cin.tie(0);||| 54 cout.tie(0);||| 55 T = 1;||| 56 precalc();||| 57 for (; T; T--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	7 const int N = (int)3e6 + 5;
0	38	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3000005, mod = 1e9 + 7, mx = 3000001;||| 4 int n, q, fc[N], iv[N], i3, f[N][3];||| 5 int qp(int a, int b) {||| 6 int ans = 1;||| 7 while (b) {||| 8 if (b & 1) ans = 1ll * ans * a % mod;||| 9 a = 1ll * a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 int c(int n, int m) {||| 15 return n < m ? 0 : 1ll * fc[n] * iv[m] % mod * iv[n - m] % mod;||| 16 }||| 17 int main() {||| 18 fc[0] = 1;||| 19 for (int i = 1; i <= mx; i++) fc[i] = 1ll * fc[i - 1] * i % mod;||| 20 iv[mx] = qp(fc[mx], mod - 2);||| 21 for (int i = mx - 1; i >= 0; i--) iv[i] = 1ll * iv[i + 1] * (i + 1) % mod;||| 22 i3 = qp(3, mod - 2);||| 23 scanf(""%d%d"", &n, &q);||| 24 f[0][0] = f[0][1] = f[0][2] = n;||| 25 for (int i = 1; i <= 3 * n; i++) {||| 26 int v1 = c(3 * n + 1, i + 1), v2 = f[i - 1][1], v3 = f[i - 1][2];||| 27 f[i][0] = 1ll * (2ll * v2 + v3 + v1) % mod * i3 % mod;||| 28 f[i][1] = (f[i][0] - v2 + mod) % mod;||| 29 f[i][2] = (f[i][1] - v3 + mod) % mod;||| 30 }||| 31 while (q--) {||| 32 int x;||| 33 scanf(""%d"", &x);||| 34 printf(""%d\n"", f[x][0]);||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3000005, mod = 1e9 + 7, mx = 3000000;||| 4 int n, q, fc[N], iv[N], i3, f[N][3];||| 5 int qp(int a, int b) {||| 6 int ans = 1;||| 7 while (b) {||| 8 if (b & 1) ans = 1ll * ans * a % mod;||| 9 a = 1ll * a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 int c(int n, int m) {||| 15 return n < m ? 0 : 1ll * fc[n] * iv[m] % mod * iv[n - m] % mod;||| 16 }||| 17 int main() {||| 18 fc[0] = 1;||| 19 for (int i = 1; i <= mx; i++) fc[i] = 1ll * fc[i - 1] * i % mod;||| 20 iv[mx] = qp(fc[mx], mod - 2);||| 21 for (int i = mx - 1; i >= 0; i--) iv[i] = 1ll * iv[i + 1] * (i + 1) % mod;||| 22 i3 = qp(3, mod - 2);||| 23 scanf(""%d%d"", &n, &q);||| 24 f[0][0] = f[0][1] = f[0][2] = n;||| 25 for (int i = 1; i <= 3 * n; i++) {||| 26 int v1 = c(3 * n + 1, i + 1), v2 = f[i - 1][1], v3 = f[i - 1][2];||| 27 f[i][0] = (2ll * v2 + v3 + v1) % mod * i3 % mod;||| 28 f[i][1] = (f[i][0] - v2 + mod) % mod;||| 29 f[i][2] = (f[i][1] - v3 + mod) % mod;||| 30 }||| 31 while (q--) {||| 32 int x;||| 33 scanf(""%d"", &x);||| 34 printf(""%d\n"", f[x][0]);||| 35 }||| 36 return 0;||| 37 }||| "	3 const int N = 3000005, mod = 1e9 + 7, mx = 3000001;
0	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int mod = 1000000007;||| 5 const int inv3 = (mod + 1) / 3;||| 6 const int maxn = 3003003;||| 7 int fac[maxn], ifac[maxn];||| 8 int qpow(int a, int n) {||| 9 int ans = 1;||| 10 for (; n; n >>= 1, a = (ll)a * a % mod)||| 11 if (n & 1) ans = (ll)ans * a % mod;||| 12 return ans;||| 13 }||| 14 int C(int n, int m) {||| 15 return fac[n] * (ll)ifac[m] % mod * (ll)ifac[n - m] % mod;||| 16 }||| 17 int f[maxn], g[maxn];||| 18 int main(void) {||| 19 int n, q;||| 20 scanf(""%d%d"", &n, &q);||| 21 fac[0] = 1;||| 22 for (int i = 1; i <= 3 * n + 3; i++) fac[i] = fac[i - 1] * (ll)i % mod;||| 23 ifac[3 * n + 3] = qpow(fac[3 * n + 3], mod - 2);||| 24 for (int i = 3 * n + 2; i >= 0; i--)||| 25 ifac[i] = ifac[i + 1] * (ll)(i + 1) % mod;||| 26 for (int i = 0; i < 3 * n + 3; i++) f[i] = C(3 * n + 3, i + 1);||| 27 g[0] = n + 1;||| 28 g[1] = 3ll * n * (n + 1) / 2 % mod;||| 29 for (int i = 2; i <= 3 * n; i++) {||| 30 g[i] = ((f[i] - 3ll * g[i - 1] % mod + mod) % mod - g[i - 2] + mod) % mod *||| 31 inv3 % mod;||| 32 }||| 33 for (int i = 0; i < q; i++) {||| 34 int x;||| 35 scanf(""%d"", &x);||| 36 printf(""%d\n"", g[x]);||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int mod = 1000000007;||| 5 const int inv3 = (mod + 1) / 3;||| 6 const int maxn = 3003003;||| 7 int fac[maxn], ifac[maxn];||| 8 int qpow(int a, int n) {||| 9 int ans = 1;||| 10 for (; n; n >>= 1, a = (ll)a * a % mod)||| 11 if (n & 1) ans = (ll)ans * a % mod;||| 12 return ans;||| 13 }||| 14 int C(int n, int m) {||| 15 return fac[n] * (ll)ifac[m] % mod * (ll)ifac[n - m] % mod;||| 16 }||| 17 int f[maxn], g[maxn];||| 18 int main(void) {||| 19 int n, q;||| 20 scanf(""%d%d"", &n, &q);||| 21 fac[0] = 1;||| 22 for (int i = 1; i <= 3 * n + 3; i++) fac[i] = fac[i - 1] * (ll)i % mod;||| 23 ifac[3 * n + 3] = qpow(fac[3 * n + 3], mod - 2);||| 24 for (int i = 3 * n + 2; i >= 0; i--)||| 25 ifac[i] = ifac[i + 1] * (ll)(i + 1) % mod;||| 26 for (int i = 0; i < 3 * n + 3; i++) f[i] = C(3 * n + 3, i + 1);||| 27 g[0] = n + 1;||| 28 g[1] = 3ll * n * (n + 1) / 2;||| 29 for (int i = 2; i <= 3 * n; i++) {||| 30 g[i] = ((f[i] - 3ll * g[i - 1] % mod + mod) % mod - g[i - 2] + mod) % mod *||| 31 inv3 % mod;||| 32 }||| 33 for (int i = 0; i < q; i++) {||| 34 int x;||| 35 scanf(""%d"", &x);||| 36 printf(""%d\n"", g[x]);||| 37 }||| 38 return 0;||| 39 }||| "	28 g[1] = 3ll * n * (n + 1) / 2 % mod;
0	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 3000005;||| 4 const long long dd = (long long)(1e9) + 7;||| 5 long long n, q;||| 6 long long dp[maxn][3], sum[maxn], isum[maxn];||| 7 inline long long read() {||| 8 long long ret = 0, f = 1;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) {||| 11 if (ch == '-') f = -f;||| 12 ch = getchar();||| 13 }||| 14 while (isdigit(ch)) {||| 15 ret = ret * 10 + ch - '0';||| 16 ch = getchar();||| 17 }||| 18 return ret * f;||| 19 }||| 20 inline long long qpow(long long x, long long p) {||| 21 long long ans = 1;||| 22 if (x == 0) return 0;||| 23 while (p) {||| 24 if (p & 1) ans = ans * x % dd;||| 25 x = x * x % dd;||| 26 p >>= 1;||| 27 }||| 28 return ans % dd;||| 29 }||| 30 inline long long inv(long long x) { return qpow(x, dd - 2) % dd; }||| 31 inline long long mod1(long long x) { return x >= dd ? x - dd : x; }||| 32 inline long long mod2(long long x) { return x < 0 ? x + dd : x; }||| 33 signed main() {||| 34 n = read() * 3;||| 35 q = read();||| 36 isum[0] = sum[0] = 1;||| 37 for (long long k = 1; k <= n + 2; k++) sum[k] = sum[k - 1] * k % dd;||| 38 isum[n + 2] = inv(sum[n + 2]);||| 39 for (long long k = n + 1; k; k--) isum[k] = isum[k + 1] * (k + 1) % dd;||| 40 dp[n][0] = sum[n];||| 41 for (long long k = n - 1; k; k--) {||| 42 long long ix = sum[k] * isum[k + 1] % dd;||| 43 dp[k][0] = mod2(mod1(sum[n + 1] * isum[n - k] % dd + dp[k + 1][1]) -||| 44 dp[k + 1][0]) *||| 45 ix % dd;||| 46 dp[k][1] = mod2(dp[k + 1][2] - dp[k + 1][1]) * ix % dd;||| 47 dp[k][2] = mod2(dp[k + 1][0] - dp[k + 1][2]) * ix % dd;||| 48 }||| 49 for (long long k = 1; k <= q; k++) {||| 50 long long x = read();||| 51 printf(""%lld\n"", dp[x][0] * isum[x] % dd);||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 1000005;||| 4 const long long dd = (long long)(1e9) + 7;||| 5 long long n, q;||| 6 long long dp[maxn * 3][3], sum[maxn], isum[maxn];||| 7 inline long long read() {||| 8 long long ret = 0, f = 1;||| 9 char ch = getchar();||| 10 while (!isdigit(ch)) {||| 11 if (ch == '-') f = -f;||| 12 ch = getchar();||| 13 }||| 14 while (isdigit(ch)) {||| 15 ret = ret * 10 + ch - '0';||| 16 ch = getchar();||| 17 }||| 18 return ret * f;||| 19 }||| 20 inline long long qpow(long long x, long long p) {||| 21 long long ans = 1;||| 22 if (x == 0) return 0;||| 23 while (p) {||| 24 if (p & 1) ans = ans * x % dd;||| 25 x = x * x % dd;||| 26 p >>= 1;||| 27 }||| 28 return ans % dd;||| 29 }||| 30 inline long long inv(long long x) { return qpow(x, dd - 2) % dd; }||| 31 inline long long mod1(long long x) { return x >= dd ? x - dd : x; }||| 32 inline long long mod2(long long x) { return x < 0 ? x + dd : x; }||| 33 signed main() {||| 34 n = read() * 3;||| 35 q = read();||| 36 isum[0] = sum[0] = 1;||| 37 for (long long k = 1; k <= n + 2; k++) sum[k] = sum[k - 1] * k % dd;||| 38 isum[n + 2] = inv(sum[n + 2]);||| 39 for (long long k = n + 1; k; k--) isum[k] = isum[k + 1] * (k + 1) % dd;||| 40 dp[n][0] = sum[n];||| 41 for (long long k = n - 1; k; k--) {||| 42 long long ix = sum[k] * isum[k + 1] % dd;||| 43 dp[k][0] = mod2(mod1(sum[n + 1] * isum[n - k] % dd + dp[k + 1][1]) -||| 44 dp[k + 1][0]) *||| 45 ix % dd;||| 46 dp[k][1] = mod2(dp[k + 1][2] - dp[k + 1][1]) * ix % dd;||| 47 dp[k][2] = mod2(dp[k + 1][0] - dp[k + 1][2]) * ix % dd;||| 48 }||| 49 for (long long k = 1; k <= q; k++) {||| 50 long long x = read();||| 51 printf(""%lld\n"", dp[x][0] * isum[x] % dd);||| 52 }||| 53 return 0;||| 54 }||| "	3 const long long maxn = 3000005;
0	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3030303;||| 4 long long n, q, inv[maxn], inv_fac[maxn], fac[maxn], dp[maxn][3];||| 5 long long C(long long x, long long y) {||| 6 return (x < y || x < 0 || y < 0)||| 7 ? 0||| 8 : (fac[x] * ((inv_fac[y] * inv_fac[x - y]) % 1000000007)) %||| 9 1000000007;||| 10 }||| 11 int main() {||| 12 fac[0] = inv_fac[0] = fac[1] = inv_fac[1] = inv[1] = 1;||| 13 for (int i = 2; i < maxn; i++) {||| 14 fac[i] = (fac[i - 1] * i) % 1000000007;||| 15 inv[i] =||| 16 ((1000000007 - (1000000007 / i)) * inv[1000000007 % i]) % 1000000007;||| 17 inv_fac[i] = (inv_fac[i - 1] * inv[i]) % 1000000007;||| 18 }||| 19 scanf(""%lld %lld"", &n, &q);||| 20 dp[0][0] = dp[0][1] = dp[0][2] = n;||| 21 for (int i = 1; i <= 3 * n; i++) {||| 22 long long sum = C(3 * n, i + 1), x1 = dp[i - 1][0], y1 = dp[i - 1][1];||| 23 dp[i][0] =||| 24 (((sum + 1000000007 * 2 - x1 * 2 + 1000000007 - y1) % 1000000007) *||| 25 inv[3]) %||| 26 1000000007;||| 27 dp[i][1] = (dp[i][0] + x1) % 1000000007;||| 28 dp[i][2] = (dp[i][1] + y1) % 1000000007;||| 29 }||| 30 for (int testcase = 0; testcase < q; testcase++) {||| 31 long long x;||| 32 scanf(""%lld"", &x);||| 33 printf(""%lld\n"", (C(3 * n, x) + dp[x][0]) % 1000000007);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 3030303;||| 4 long long n, q, inv[maxn], inv_fac[maxn], fac[maxn], dp[maxn / 3][3];||| 5 long long C(long long x, long long y) {||| 6 return (x < y || x < 0 || y < 0)||| 7 ? 0||| 8 : (fac[x] * ((inv_fac[y] * inv_fac[x - y]) % 1000000007)) %||| 9 1000000007;||| 10 }||| 11 int main() {||| 12 fac[0] = inv_fac[0] = fac[1] = inv_fac[1] = inv[1] = 1;||| 13 for (int i = 2; i < maxn; i++) {||| 14 fac[i] = (fac[i - 1] * i) % 1000000007;||| 15 inv[i] =||| 16 ((1000000007 - (1000000007 / i)) * inv[1000000007 % i]) % 1000000007;||| 17 inv_fac[i] = (inv_fac[i - 1] * inv[i]) % 1000000007;||| 18 }||| 19 scanf(""%lld %lld"", &n, &q);||| 20 dp[0][0] = dp[0][1] = dp[0][2] = n;||| 21 for (int i = 1; i <= 3 * n; i++) {||| 22 long long sum = C(3 * n, i + 1), x1 = dp[i - 1][0], y1 = dp[i - 1][1];||| 23 dp[i][0] =||| 24 (((sum + 1000000007 * 2 - x1 * 2 + 1000000007 - y1) % 1000000007) *||| 25 inv[3]) %||| 26 1000000007;||| 27 dp[i][1] = (dp[i][0] + x1) % 1000000007;||| 28 dp[i][2] = (dp[i][1] + y1) % 1000000007;||| 29 }||| 30 for (int testcase = 0; testcase < q; testcase++) {||| 31 long long x;||| 32 scanf(""%lld"", &x);||| 33 printf(""%lld\n"", (C(3 * n, x) + dp[x][0]) % 1000000007);||| 34 }||| 35 return 0;||| 36 }||| "	4 long long n, q, inv[maxn], inv_fac[maxn], fac[maxn], dp[maxn][3];
1	56	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 int N, X[6005], Y[6005];||| 5 long long cnt[4][4];||| 6 int main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cin >> N;||| 10 for (int i = 0; i < N; i++) {||| 11 cin >> X[i] >> Y[i];||| 12 X[i] /= 2;||| 13 Y[i] /= 2;||| 14 cnt[X[i] % 2][Y[i] % 2]++;||| 15 }||| 16 long long ans1 = 0, ans2 = 0;||| 17 for (int i = 0; i < N; i++) {||| 18 for (int j = i + 1; j < N; j++) {||| 19 if (abs(X[i] - X[j]) % 2 != 0 || abs(Y[i] - Y[j]) % 2 != 0) continue;||| 20 cnt[X[i] % 2][Y[i] % 2]--;||| 21 cnt[X[j] % 2][Y[j] % 2]--;||| 22 int v1 = X[i] % 2;||| 23 int v2 = Y[i] % 2;||| 24 ans1 += cnt[v1][v2];||| 25 ans2 += cnt[(v1 + 1) % 2][v2] + cnt[v1][(v2 + 1) % 2] +||| 26 cnt[(v1 + 1) % 2][(v2 + 1) % 2];||| 27 cnt[X[i] % 2][Y[i] % 2]++;||| 28 cnt[X[j] % 2][Y[j] % 2]++;||| 29 }||| 30 }||| 31 cout << ans1 / 3 + ans2 << endl;||| 32 return 0;||| 33 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 int N, X[6005], Y[6005];||| 5 long long cnt[4][4];||| 6 int main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cin >> N;||| 10 for (int i = 0; i < N; i++) {||| 11 cin >> X[i] >> Y[i];||| 12 X[i] /= 2;||| 13 Y[i] /= 2;||| 14 cnt[X[i] % 2][Y[i] % 2]++;||| 15 }||| 16 long long ans1 = 0, ans2 = 0;||| 17 for (int i = 0; i < N; i++) {||| 18 for (int j = i + 1; j < N; j++) {||| 19 if (abs(X[i] - X[j]) % 2 != 0 || abs(Y[i] - Y[j]) % 2 != 0) continue;||| 20 cnt[X[i] % 2][Y[i] % 2]--;||| 21 cnt[X[j] % 2][Y[j] % 2]--;||| 22 int v1 = X[i] % 2;||| 23 int v2 = Y[i] % 2;||| 24 ans1 += cnt[v1][v2];||| 25 ans2 += cnt[(v1 + 1) % 2][v2] + cnt[v1][(v2 + 1) % 2] +||| 26 cnt[(v1 + 1) % 2][(v2 + 1) % 2];||| 27 cnt[X[i] % 2][Y[i] % 2]++;||| 28 cnt[X[j] % 2][Y[j] % 2]++;||| 29 }||| 30 }||| 31 cout << ans1 / 2 + ans2 << endl;||| 32 return 0;||| 33 }||| 	31 cout << ans1 / 3 + ans2 << endl;
1	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int N;||| 4 int X[6060], Y[6060];||| 5 long long C[4][4];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cin.exceptions(ios::badbit | ios::failbit);||| 10 cin >> N;||| 11 for (int i = 1; i <= N; i++) cin >> X[i] >> Y[i];||| 12 long long res = 0;||| 13 for (int i = 1; i <= N; i++) C[X[i] % 4][Y[i] % 4]++;||| 14 res += C[0][0] * (C[0][0] - 1) * (C[0][0] - 2) / 6;||| 15 res += C[0][2] * (C[0][2] - 1) * (C[0][2] - 2) / 6;||| 16 res += C[2][0] * (C[2][0] - 1) * (C[2][0] - 2) / 6;||| 17 res += C[2][2] * (C[2][2] - 1) * (C[2][2] - 2) / 6;||| 18 for (int i = 1; i <= N; i++)||| 19 for (int j = i + 1; j <= N; j++) {||| 20 if (X[i] % 4 == X[j] % 4 && Y[i] % 4 == Y[j] % 4) {||| 21 int x = X[i] % 4, y = Y[i] % 4;||| 22 for (int nx = 0; nx < 4; nx += 2)||| 23 for (int ny = 0; ny < 4; ny += 2) {||| 24 if (nx == x && ny == y) continue;||| 25 res += C[nx][ny];||| 26 }||| 27 }||| 28 }||| 29 cout << res << ""\n"";||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int N;||| 4 int X[6060], Y[6060];||| 5 long long C[4][4];||| 6 int main() {||| 7 ios::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cin.exceptions(ios::badbit | ios::failbit);||| 10 cin >> N;||| 11 for (int i = 1; i <= N; i++) cin >> X[i] >> Y[i];||| 12 long long res = 0;||| 13 for (int i = 1; i <= N; i++) C[X[i] % 4][Y[i] % 4]++;||| 14 res += C[0][0] * (C[0][0] - 1) * (C[0][0] - 2) / 6;||| 15 res += C[0][2] * (C[0][2] - 1) * (C[0][2] - 2) / 6;||| 16 res += C[2][0] * (C[2][0] - 1) * (C[2][0] - 2) / 6;||| 17 res += C[2][2] * (C[2][2] - 1) * (C[2][2] - 2) / 6;||| 18 for (int i = 1; i <= N; i++)||| 19 for (int j = i + 1; j <= N; j++) {||| 20 if (X[i] % 4 == X[j] % 4 && Y[i] % 4 == Y[j] % 4) {||| 21 int x = X[i] % 4, y = X[j] % 4;||| 22 for (int nx = 0; nx < 4; nx += 2)||| 23 for (int ny = 0; ny < 4; ny += 2) {||| 24 if (nx == x && ny == y) continue;||| 25 res += C[nx][ny];||| 26 }||| 27 }||| 28 }||| 29 cout << res << ""\n"";||| 30 return 0;||| 31 }||| "	21 int x = X[i] % 4, y = Y[i] % 4;
1	71	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 6005;||| 4 const int mod = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 long long _, n, x[N], y[N], cnt[2][2];||| 7 void solve() {||| 8 cin >> n;||| 9 return;||| 10 }||| 11 int main() {||| 12 cin >> n;||| 13 for (int i = 0; i < n; i++)||| 14 cin >> x[i] >> y[i], x[i] /= 2, y[i] /= 2, cnt[x[i] % 2][y[i] % 2]++;||| 15 long long ans = 0;||| 16 for (int i = 0; i < 2; i++)||| 17 for (int j = 0; j < 2; j++)||| 18 ans += cnt[i][j] * (cnt[i][j] - 1) / 2 * (n - 2) -||| 19 cnt[i][j] * (cnt[i][j] - 1) * (cnt[i][j] - 2) / 6 * 2;||| 20 cout << ans << ""\n"";||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 6005;||| 4 const int mod = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 int _, n, x[N], y[N], cnt[2][2];||| 7 void solve() {||| 8 cin >> n;||| 9 return;||| 10 }||| 11 int main() {||| 12 cin >> n;||| 13 for (int i = 0; i < n; i++)||| 14 cin >> x[i] >> y[i], x[i] /= 2, y[i] /= 2, cnt[x[i] % 2][y[i] % 2]++;||| 15 long long ans = 0;||| 16 for (int i = 0; i < 2; i++)||| 17 for (int j = 0; j < 2; j++)||| 18 ans += cnt[i][j] * (cnt[i][j] - 1) / 2 * (n - 2) -||| 19 cnt[i][j] * (cnt[i][j] - 1) * (cnt[i][j] - 2) / 6 * 2;||| 20 cout << ans << ""\n"";||| 21 return 0;||| 22 }||| "	6 long long _, n, x[N], y[N], cnt[2][2];
1	7	1 #include <bits/stdc++.h>||| 2 long long i = 4, j, n, m, r, s[6], k;||| 3 int main() {||| 4 std::cin >> n;||| 5 m = n;||| 6 while (n--) {||| 7 std::cin >> k >> j;||| 8 s[(k & 2) + (j & 2) / 2]++;||| 9 }||| 10 while (i--) {||| 11 k = s[i];||| 12 r += k * (k - 1) * (k - 2) / 6 + k * (k - 1) * (m - k) / 2;||| 13 }||| 14 std::cout << r;||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 long long i = 4, j, n, m, r, sb[6], k;||| 3 int main() {||| 4 std::cin >> n;||| 5 m = n;||| 6 while (n--) {||| 7 std::cin >> i >> j;||| 8 sb[(i & 2) + (j & 2) / 2]++;||| 9 }||| 10 while (i--) {||| 11 k = sb[i];||| 12 r += k * (k - 1) * (k - 2) / 6 + k * (k - 1) * (m - k) / 2;||| 13 }||| 14 std::cout << r;||| 15 }||| 	2 long long i = 4, j, n, m, r, s[6], k;
1	9	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optmize(""unroll-loops"")||| 4 #pragma GCC target(""avx2,sse4"")||| 5 using namespace std;||| 6 using ll = long long;||| 7 using ull = unsigned long long;||| 8 using ld = long double;||| 9 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 10 ll getrnd(ll l, ll r) { return uniform_int_distribution<ll>(l, r)(rng); }||| 11 template <typename T1, typename T2>||| 12 inline bool relax(T1& a, const T2& b) {||| 13 return a > b ? a = b, true : false;||| 14 }||| 15 template <typename T1, typename T2>||| 16 inline bool strain(T1& a, const T2& b) {||| 17 return a < b ? a = b, true : false;||| 18 }||| 19 struct vec {||| 20 using gint = ll;||| 21 gint x, y;||| 22 vec() : x(0), y(0) {}||| 23 vec(ll a, ll b) : x(a), y(b) {}||| 24 vec(vec a, vec b) : x(b.x - a.x), y(b.y - a.y) {}||| 25 vec operator+(const vec& a) { return vec(a.x + x, a.y + y); }||| 26 vec operator-(const vec& a) { return vec(x - a.x, y - a.y); }||| 27 vec operator*(gint a) { return vec(x * a, y * a); }||| 28 vec operator/(gint a) { return vec(x / a, y / a); }||| 29 gint operator*(const vec& a) { return a.x * x + a.y * y; }||| 30 gint qlen() { return (*this) * (*this); }||| 31 ld len() { return sqrtl(qlen()); }||| 32 gint operator^(const vec& a) { return x * a.y - y * a.x; }||| 33 void read() { cin >> x >> y; }||| 34 };||| 35 void solve() {||| 36 int n;||| 37 cin >> n;||| 38 ll ans = 0;||| 39 vector<vec> p(n);||| 40 vector<vector<int>> cnt(2, vector<int>(2, 0));||| 41 for (int i = 0; i < n; ++i) {||| 42 p[i].read();||| 43 p[i].x = abs(p[i].x / 2) % 2;||| 44 p[i].y = abs(p[i].y / 2) % 2;||| 45 cnt[0][0] = cnt[0][1] = cnt[1][0] = cnt[1][1] = 0;||| 46 for (int j = 0; j < i; ++j) {||| 47 vec a = p[i], b = p[j];||| 48 int s1 = a.x * b.y + a.y * b.x;||| 49 for (int px = 0; px <= 1; ++px) {||| 50 for (int py = 0; py <= 1; ++py) {||| 51 int s = s1 + b.x * py + b.y * px + px * a.y + py * a.x;||| 52 if (s % 2 == 0) ans += cnt[px][py];||| 53 }||| 54 }||| 55 ++cnt[b.x][b.y];||| 56 }||| 57 }||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(0);||| 62 cin.tie(nullptr);||| 63 cout.tie(nullptr);||| 64 int t = 1;||| 65 while (t--) solve();||| 66 return 0;||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optmize(""unroll-loops"")||| 4 #pragma GCC target(""avx2,sse4"")||| 5 using namespace std;||| 6 using ll = long long;||| 7 using ull = unsigned long long;||| 8 using ld = long double;||| 9 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 10 ll getrnd(ll l, ll r) { return uniform_int_distribution<ll>(l, r)(rng); }||| 11 template <typename T1, typename T2>||| 12 inline bool relax(T1& a, const T2& b) {||| 13 return a > b ? a = b, true : false;||| 14 }||| 15 template <typename T1, typename T2>||| 16 inline bool strain(T1& a, const T2& b) {||| 17 return a < b ? a = b, true : false;||| 18 }||| 19 struct vec {||| 20 using gint = ll;||| 21 gint x, y;||| 22 vec() : x(0), y(0) {}||| 23 vec(ll a, ll b) : x(a), y(b) {}||| 24 vec(vec a, vec b) : x(b.x - a.x), y(b.y - a.y) {}||| 25 vec operator+(const vec& a) { return vec(a.x + x, a.y + y); }||| 26 vec operator-(const vec& a) { return vec(x - a.x, y - a.y); }||| 27 vec operator*(gint a) { return vec(x * a, y * a); }||| 28 vec operator/(gint a) { return vec(x / a, y / a); }||| 29 gint operator*(const vec& a) { return a.x * x + a.y * y; }||| 30 gint qlen() { return (*this) * (*this); }||| 31 ld len() { return sqrtl(qlen()); }||| 32 gint operator^(const vec& a) { return x * a.y - y * a.x; }||| 33 void read() { cin >> x >> y; }||| 34 };||| 35 void solve() {||| 36 int n;||| 37 cin >> n;||| 38 int ans = 0;||| 39 vector<vec> p(n);||| 40 vector<vector<int>> cnt(2, vector<int>(2, 0));||| 41 for (int i = 0; i < n; ++i) {||| 42 p[i].read();||| 43 p[i].x = abs(p[i].x / 2) % 2;||| 44 p[i].y = abs(p[i].y / 2) % 2;||| 45 cnt[0][0] = cnt[0][1] = cnt[1][0] = cnt[1][1] = 0;||| 46 for (int j = 0; j < i; ++j) {||| 47 vec a = p[i], b = p[j];||| 48 int s1 = a.x * b.y + a.y * b.x;||| 49 for (int px = 0; px <= 1; ++px) {||| 50 for (int py = 0; py <= 1; ++py) {||| 51 int s = s1 + b.x * py + b.y * px + px * a.y + py * a.x;||| 52 if (s % 2 == 0) ans += cnt[px][py];||| 53 }||| 54 }||| 55 ++cnt[b.x][b.y];||| 56 }||| 57 }||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(0);||| 62 cin.tie(nullptr);||| 63 cout.tie(nullptr);||| 64 int t = 1;||| 65 while (t--) solve();||| 66 return 0;||| 67 }||| "	38 ll ans = 0;
1	48	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> h(4);||| 7 for (long long i = 0; i < n; i++) {||| 8 long long x, y;||| 9 cin >> x >> y;||| 10 if (x % 4 != 0 && y % 4 != 0) {||| 11 h[0]++;||| 12 } else if (x % 4 != 0) {||| 13 h[1]++;||| 14 } else if (y % 4 != 0) {||| 15 h[2]++;||| 16 } else {||| 17 h[3]++;||| 18 }||| 19 }||| 20 auto choose = [&](long long n, long long r) {||| 21 if (r == 2) {||| 22 return n * (n - 1) / 2;||| 23 }||| 24 if (r == 3) {||| 25 return n * (n - 1) * (n - 2) / 6;||| 26 }||| 27 };||| 28 auto calc = [&](long long x, long long y, long long z) {||| 29 return (choose(x, 2) + choose(y, 2)) * z;||| 30 };||| 31 long long res = 0;||| 32 for (long long i = 0; i < 4; i++) {||| 33 res += choose(h[i], 3);||| 34 res += h[3 - i] * choose(h[i], 2);||| 35 }||| 36 res += calc(h[0], h[3], h[1] + h[2]);||| 37 res += calc(h[1], h[2], h[0] + h[3]);||| 38 cout << res << '\n';||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(nullptr);||| 43 long long T = 1;||| 44 for (long long t = 1; t <= T; t++) {||| 45 run_case();||| 46 }||| 47 return 0;||| 48 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> h(4);||| 7 for (long long i = 0; i < n; i++) {||| 8 long long x, y;||| 9 cin >> x >> y;||| 10 if (x % 4 != 0 && y % 4 != 0) {||| 11 h[0]++;||| 12 } else if (x % 4 != 0) {||| 13 h[1]++;||| 14 } else if (y % 4 != 0) {||| 15 h[2]++;||| 16 } else {||| 17 h[3]++;||| 18 }||| 19 }||| 20 auto choose = [&](long long n, long long r) {||| 21 if (r == 2) {||| 22 return n * (n - 1) / 2;||| 23 }||| 24 if (r == 3) {||| 25 return n * (n - 1) * (n - 2) / 3;||| 26 }||| 27 };||| 28 auto calc = [&](long long x, long long y, long long z) {||| 29 return (choose(x, 2) + choose(y, 2)) * z;||| 30 };||| 31 long long res = 0;||| 32 for (long long i = 0; i < 3; i++) {||| 33 res += choose(h[i], 3);||| 34 res += h[3 - i] * choose(h[i], 2);||| 35 }||| 36 res += calc(h[0], h[3], h[1] + h[2]);||| 37 res += calc(h[1], h[2], h[0] + h[3]);||| 38 cout << res << '\n';||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(nullptr);||| 43 long long T = 1;||| 44 for (long long t = 1; t <= T; t++) {||| 45 run_case();||| 46 }||| 47 return 0;||| 48 }||| 	25 return n * (n - 1) * (n - 2) / 6;
1	79	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> h(4);||| 7 for (long long i = 0; i < n; i++) {||| 8 long long x, y;||| 9 cin >> x >> y;||| 10 if (x % 4 != 0 && y % 4 != 0) {||| 11 h[0]++;||| 12 } else if (x % 4 != 0) {||| 13 h[1]++;||| 14 } else if (y % 4 != 0) {||| 15 h[2]++;||| 16 } else {||| 17 h[3]++;||| 18 }||| 19 }||| 20 auto choose = [&](long long n, long long r) {||| 21 if (r == 2) {||| 22 return n * (n - 1) / 2;||| 23 }||| 24 if (r == 3) {||| 25 return n * (n - 1) * (n - 2) / 6;||| 26 }||| 27 };||| 28 auto calc = [&](long long x, long long y, long long z) {||| 29 return (choose(x, 2) + choose(y, 2)) * z;||| 30 };||| 31 long long res = 0;||| 32 for (long long i = 0; i < 4; i++) {||| 33 res += choose(h[i], 3);||| 34 res += h[3 - i] * choose(h[i], 2);||| 35 }||| 36 res += calc(h[0], h[3], h[1] + h[2]);||| 37 res += calc(h[1], h[2], h[0] + h[3]);||| 38 cout << res << '\n';||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(nullptr);||| 43 long long T = 1;||| 44 for (long long t = 1; t <= T; t++) {||| 45 run_case();||| 46 }||| 47 return 0;||| 48 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void run_case() {||| 4 long long n;||| 5 cin >> n;||| 6 vector<long long> h(4);||| 7 for (long long i = 0; i < n; i++) {||| 8 long long x, y;||| 9 cin >> x >> y;||| 10 if (x % 4 != 0 && y % 4 != 0) {||| 11 h[0]++;||| 12 } else if (x % 4 != 0) {||| 13 h[1]++;||| 14 } else if (y % 4 != 0) {||| 15 h[2]++;||| 16 } else {||| 17 h[3]++;||| 18 }||| 19 }||| 20 auto choose = [&](long long n, long long r) {||| 21 if (r == 2) {||| 22 return n * (n - 1) / 2;||| 23 }||| 24 if (r == 3) {||| 25 return n * (n - 1) * (n - 2) / 6;||| 26 }||| 27 };||| 28 auto calc = [&](long long x, long long y, long long z) {||| 29 return (choose(x, 2) + choose(y, 2)) * z;||| 30 };||| 31 long long res = 0;||| 32 for (long long i = 0; i < 3; i++) {||| 33 res += choose(h[i], 3);||| 34 res += h[3 - i] * choose(h[i], 2);||| 35 }||| 36 res += calc(h[0], h[3], h[1] + h[2]);||| 37 res += calc(h[1], h[2], h[0] + h[3]);||| 38 cout << res << '\n';||| 39 }||| 40 signed main() {||| 41 ios_base::sync_with_stdio(false);||| 42 cin.tie(nullptr);||| 43 long long T = 1;||| 44 for (long long t = 1; t <= T; t++) {||| 45 run_case();||| 46 }||| 47 return 0;||| 48 }||| 	32 for (long long i = 0; i < 4; i++) {
1	85	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[4];||| 4 long long res;||| 5 int main() {||| 6 scanf(""%d"", &n);||| 7 for (int i = 1, x, y; i <= n; i++)||| 8 scanf(""%d%d"", &x, &y), x >>= 1, y >>= 1, a[((x & 1) << 1) + (y & 1)]++;||| 9 for (int i = 0; i < 4; i++) res += 1ll * a[i] * (a[i] - 1) * (a[i] - 2) / 6;||| 10 for (int i = 0; i < 4; i++)||| 11 for (int j = 0; j < 4; j++)||| 12 if (i != j) res += 1ll * a[i] * (a[i] - 1) / 2 * a[j];||| 13 printf(""%lld\n"", res);||| 14 return 0;||| 15 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, a[4];||| 4 long long res;||| 5 int main() {||| 6 scanf(""%d"", &n);||| 7 for (int i = 1, x, y; i <= n; i++)||| 8 scanf(""%d%d"", &x, &y), x >>= 1, y >>= 1, a[((x & 1) << 1) + (y & 1)]++;||| 9 for (int i = 0; i < 4; i++) res += 1ll * a[i] * (a[i] - 1) * (a[i] - 2) / 6;||| 10 for (int i = 0; i < 4; i++)||| 11 for (int j = 0; j < 4; j++)||| 12 if (i != j) res += 1ll * a[i] * (a[i] - 1) / 2 * a[j];||| 13 printf(""%d\n"", res);||| 14 return 0;||| 15 }||| "	"13 printf(""%lld\n"", res);"
1	52	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double PI = 3.14159265359;||| 4 long long inf = 1000000000000000007;||| 5 long long mod = 1000000007;||| 6 long long mod1 = 998244353;||| 7 const bool multi = 0;||| 8 long long xd[4][4];||| 9 long long pokor[4][4];||| 10 long long ans = 0;||| 11 vector<pair<long long, long long>> v;||| 12 set<vector<pair<long long, long long>>> S;||| 13 void bt(long long i) {||| 14 if (i == 3) {||| 15 vector<pair<long long, long long>> t = v;||| 16 sort(t.begin(), t.end());||| 17 if (S.count(t)) return;||| 18 S.insert(t);||| 19 long long lol = 0;||| 20 if (abs(v[0].first - v[1].first) == 2 ||||| 21 abs(v[0].second - v[1].second) == 2)||| 22 lol += 2;||| 23 if (abs(v[1].first - v[2].first) == 2 ||||| 24 abs(v[1].second - v[2].second) == 2)||| 25 lol += 2;||| 26 if (abs(v[2].first - v[0].first) == 2 ||||| 27 abs(v[2].second - v[0].second) == 2)||| 28 lol += 2;||| 29 if (lol % 4 == 0) {||| 30 long long ways = 1;||| 31 memset(pokor, 0, sizeof pokor);||| 32 for (auto x : v) pokor[x.first][x.second]++;||| 33 for (long long x = 0; x <= 2; x += 2) {||| 34 for (long long y = 0; y <= 2; y += 2) {||| 35 long long ile = 1;||| 36 for (long long c = 0; c < pokor[x][y]; c++) ile *= xd[x][y] - c;||| 37 for (long long c = 1; c <= pokor[x][y]; c++) ile /= c;||| 38 ways *= ile;||| 39 }||| 40 }||| 41 ans += ways;||| 42 }||| 43 return;||| 44 }||| 45 for (long long x = 0; x <= 2; x += 2) {||| 46 for (long long y = 0; y <= 2; y += 2) {||| 47 v.push_back({x, y});||| 48 bt(i + 1);||| 49 v.pop_back();||| 50 }||| 51 }||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 long long tt;||| 58 if (multi)||| 59 cin >> tt;||| 60 else||| 61 tt = 1;||| 62 while (tt--) {||| 63 long long n, x, y;||| 64 cin >> n;||| 65 for (long long i = 1; i <= n; i++) {||| 66 cin >> x >> y;||| 67 xd[x % 4][y % 4]++;||| 68 }||| 69 bt(0);||| 70 cout << ans;||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double PI = 3.14159265359;||| 4 long long inf = 1000000000000000007;||| 5 long long mod = 1000000007;||| 6 long long mod1 = 998244353;||| 7 const bool multi = 0;||| 8 long long xd[4][4];||| 9 long long pokor[4][4];||| 10 long long ans = 0;||| 11 vector<pair<long long, long long>> v;||| 12 set<vector<pair<long long, long long>>> S;||| 13 void bt(long long i) {||| 14 if (i == 3) {||| 15 vector<pair<long long, long long>> t = v;||| 16 sort(t.begin(), t.end());||| 17 if (S.count(t)) return;||| 18 S.insert(t);||| 19 long long lol = 0;||| 20 if (abs(v[0].first - v[1].first) == 2 ||||| 21 abs(v[0].second - v[1].second) == 2)||| 22 lol += 2;||| 23 if (abs(v[1].first - v[2].first) == 2 ||||| 24 abs(v[1].second - v[2].second) == 2)||| 25 lol += 2;||| 26 if (abs(v[2].first - v[3].first) == 2 ||||| 27 abs(v[2].second - v[3].second) == 2)||| 28 lol += 2;||| 29 if (lol % 4 == 0) {||| 30 long long ways = 1;||| 31 memset(pokor, 0, sizeof pokor);||| 32 for (auto x : v) pokor[x.first][x.second]++;||| 33 for (long long x = 0; x <= 2; x += 2) {||| 34 for (long long y = 0; y <= 2; y += 2) {||| 35 long long ile = 1;||| 36 for (long long c = 0; c < pokor[x][y]; c++) ile *= xd[x][y] - c;||| 37 for (long long c = 1; c <= pokor[x][y]; c++) ile /= c;||| 38 ways *= ile;||| 39 }||| 40 }||| 41 ans += ways;||| 42 }||| 43 return;||| 44 }||| 45 for (long long x = 0; x <= 2; x += 2) {||| 46 for (long long y = 0; y <= 2; y += 2) {||| 47 v.push_back({x, y});||| 48 bt(i + 1);||| 49 v.pop_back();||| 50 }||| 51 }||| 52 }||| 53 signed main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 long long tt;||| 58 if (multi)||| 59 cin >> tt;||| 60 else||| 61 tt = 1;||| 62 while (tt--) {||| 63 long long n, x, y;||| 64 cin >> n;||| 65 for (long long i = 1; i <= n; i++) {||| 66 cin >> x >> y;||| 67 xd[x % 4][y % 4]++;||| 68 }||| 69 bt(0);||| 70 cout << ans;||| 71 }||| 72 return 0;||| 73 }||| 	26 if (abs(v[2].first - v[0].first) == 2 ||
1	13	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fast() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 void ran() { srand(chrono::steady_clock::now().time_since_epoch().count()); }||| 9 long long get_rand() {||| 10 long long a = rand();||| 11 long long b = rand();||| 12 return a * (RAND_MAX + 1ll) + b;||| 13 }||| 14 void usaco() {||| 15 freopen(""problem.in"", ""r"", stdin);||| 16 freopen(""problem.out"", ""w"", stdout);||| 17 }||| 18 template <typename T>||| 19 using min_pq = priority_queue<T, vector<T>, greater<T>>;||| 20 int n, m;||| 21 const int MXN = 6005;||| 22 int px[MXN], py[MXN];||| 23 inline int gcd(int a, int b) {||| 24 a = abs(a), b = abs(b);||| 25 return (a % 2 || b % 2);||| 26 }||| 27 void solve() {||| 28 cin >> n;||| 29 for (int i = 1; i <= n; i++) {||| 30 cin >> px[i] >> py[i];||| 31 px[i] /= 2;||| 32 py[i] /= 2;||| 33 }||| 34 long long ans = 0;||| 35 int by[2][2];||| 36 memset(by, 0, sizeof by);||| 37 for (int i = 1; i <= n; i++) {||| 38 for (int j = i + 1; j <= n; j++) {||| 39 int ij = gcd(px[i] - px[j], py[i] - py[j]);||| 40 for (int a = 0; a < 2; a++)||| 41 for (int b = 0; b < 2; b++) {||| 42 if ((ij + gcd(px[i] - a, py[i] - b) + gcd(px[j] - a, py[j] - b)) %||| 43 2 ==||| 44 0) {||| 45 ans += by[a][b];||| 46 }||| 47 }||| 48 }||| 49 by[px[i] % 2][py[i] % 2]++;||| 50 }||| 51 cout << ans << '\n';||| 52 }||| 53 signed main() {||| 54 ran();||| 55 fast();||| 56 int t = 1;||| 57 while (t--) solve();||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fast() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 void ran() { srand(chrono::steady_clock::now().time_since_epoch().count()); }||| 9 long long get_rand() {||| 10 long long a = rand();||| 11 long long b = rand();||| 12 return a * (RAND_MAX + 1ll) + b;||| 13 }||| 14 void usaco() {||| 15 freopen(""problem.in"", ""r"", stdin);||| 16 freopen(""problem.out"", ""w"", stdout);||| 17 }||| 18 template <typename T>||| 19 using min_pq = priority_queue<T, vector<T>, greater<T>>;||| 20 int n, m;||| 21 const int MXN = 6005;||| 22 int px[MXN], py[MXN];||| 23 inline int gcd(int a, int b) {||| 24 a = abs(a), b = abs(b);||| 25 return (a % 2 || b % 2);||| 26 }||| 27 void solve() {||| 28 cin >> n;||| 29 for (int i = 1; i <= n; i++) {||| 30 cin >> px[i] >> py[i];||| 31 px[i] /= 2;||| 32 py[i] /= 2;||| 33 }||| 34 int ans = 0;||| 35 int by[2][2];||| 36 memset(by, 0, sizeof by);||| 37 for (int i = 1; i <= n; i++) {||| 38 for (int j = i + 1; j <= n; j++) {||| 39 int ij = gcd(px[i] - px[j], py[i] - py[j]);||| 40 for (int a = 0; a < 2; a++)||| 41 for (int b = 0; b < 2; b++) {||| 42 if ((ij + gcd(px[i] - a, py[i] - b) + gcd(px[j] - a, py[j] - b)) %||| 43 2 ==||| 44 0) {||| 45 ans += by[a][b];||| 46 }||| 47 }||| 48 }||| 49 by[px[i] % 2][py[i] % 2]++;||| 50 }||| 51 cout << ans << '\n';||| 52 }||| 53 signed main() {||| 54 ran();||| 55 fast();||| 56 int t = 1;||| 57 while (t--) solve();||| 58 }||| "	34 long long ans = 0;
3	4	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, inf = 0x3f3f3f3f;||| 4 int n, m, x, c[N], d[N], stk[N], top, mx[N];||| 5 int t[N], V[N], tot, ida[N], idb[N];||| 6 pair<int, int> a[N], b[N];||| 7 long long ans;||| 8 bool cmpa_(int u, int v) { return a[u] < a[v]; }||| 9 bool cmpb_(int u, int v) { return d[u] > d[v]; }||| 10 void upd_(int x, int k) {||| 11 for (; x <= tot; x += x & -x) t[x] += k;||| 12 }||| 13 int ask_(int x, int res = 0) {||| 14 for (; x; x -= x & -x) res += t[x];||| 15 return res;||| 16 }||| 17 void work_() {||| 18 for (int i = 1; i <= m; i++) V[i] = b[i].first, idb[i] = i;||| 19 for (int i = 1; i <= n; i++) ida[i] = i;||| 20 sort(ida + 1, ida + n + 1, cmpa_);||| 21 sort(idb + 1, idb + m + 1, cmpb_);||| 22 sort(V + 1, V + m + 1), tot = unique(V + 1, V + m + 1) - V - 1;||| 23 for (int i = 1; i <= m; i++)||| 24 b[i].first = lower_bound(V + 1, V + tot + 1, b[i].first) - V;||| 25 for (int i = 1, j = 0; i <= n; i++) {||| 26 int u = ida[i], v, l, r;||| 27 while (j < m && d[idb[j + 1]] + a[u].first > x) {||| 28 v = idb[++j];||| 29 upd_(b[v].first, 1);||| 30 }||| 31 l = upper_bound(V + 1, V + tot + 1, x - c[u]) - V;||| 32 r = upper_bound(V + 1, V + tot + 1, x - a[u].first) - V - 1;||| 33 if (l <= r) ans += ask_(r) - ask_(l - 1);||| 34 }||| 35 printf(""%lld\n"", ans);||| 36 }||| 37 void init_(int n, pair<int, int> *a, int *b) {||| 38 for (int i = 1; i <= n; i++)||| 39 scanf(""%d"", &a[i].first), a[i].second = i, b[i] = inf;||| 40 stk[top = 0] = 0, mx[0] = inf;||| 41 for (int i = 1; i <= n; i++) {||| 42 while (top && a[stk[top]] > a[i]) {||| 43 mx[stk[top - 1]] = max(mx[stk[top - 1]], mx[stk[top]]);||| 44 top--;||| 45 }||| 46 b[i] = min(b[i], max(a[i].first, mx[stk[top]]));||| 47 mx[stk[++top] = i] = a[i].first;||| 48 }||| 49 stk[top = 0] = n + 1, mx[n + 1] = inf;||| 50 for (int i = n; i; i--) {||| 51 while (top && a[stk[top]] > a[i]) {||| 52 mx[stk[top - 1]] = max(mx[stk[top - 1]], mx[stk[top]]);||| 53 top--;||| 54 }||| 55 b[i] = min(b[i], max(a[i].first, mx[stk[top]]));||| 56 mx[stk[++top] = i] = a[i].first;||| 57 }||| 58 }||| 59 int main() {||| 60 scanf(""%d%d%d"", &n, &m, &x);||| 61 init_(n, a, c);||| 62 init_(m, b, d);||| 63 work_();||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10, inf = 0x3f3f3f3f;||| 4 int n, m, x, c[N], d[N], stk[N], top, mx[N];||| 5 int t[N], V[N], tot, ida[N], idb[N];||| 6 pair<int, int> a[N], b[N];||| 7 long long ans;||| 8 bool cmpa_(int u, int v) { return a[u] < a[v]; }||| 9 bool cmpb_(int u, int v) { return d[u] > d[v]; }||| 10 void upd_(int x, int k) {||| 11 for (; x <= tot; x += x & -x) t[x] += k;||| 12 }||| 13 int ask_(int x, int res = 0) {||| 14 for (; x; x -= x & -x) res += t[x];||| 15 return res;||| 16 }||| 17 void work_() {||| 18 for (int i = 1; i <= m; i++) V[i] = b[i].first, idb[i] = i;||| 19 for (int i = 1; i <= n; i++) ida[i] = i;||| 20 sort(ida + 1, ida + n + 1, cmpa_);||| 21 sort(idb + 1, idb + m + 1, cmpb_);||| 22 sort(V + 1, V + m + 1), tot = unique(V + 1, V + m + 1) - V - 1;||| 23 for (int i = 1; i <= m; i++)||| 24 b[i].first = lower_bound(V + 1, V + m + 1, b[i].first) - V;||| 25 for (int i = 1, j = 0; i <= n; i++) {||| 26 int u = ida[i], v, l, r;||| 27 while (j < m && d[idb[j + 1]] + a[u].first > x) {||| 28 v = idb[++j];||| 29 upd_(b[v].first, 1);||| 30 }||| 31 l = upper_bound(V + 1, V + tot + 1, x - c[u]) - V;||| 32 r = upper_bound(V + 1, V + tot + 1, x - a[u].first) - V - 1;||| 33 if (l <= r) ans += ask_(r) - ask_(l - 1);||| 34 }||| 35 printf(""%lld\n"", ans);||| 36 }||| 37 void init_(int n, pair<int, int> *a, int *b) {||| 38 for (int i = 1; i <= n; i++)||| 39 scanf(""%d"", &a[i].first), a[i].second = i, b[i] = inf;||| 40 stk[top = 0] = 0, mx[0] = inf;||| 41 for (int i = 1; i <= n; i++) {||| 42 while (top && a[stk[top]] > a[i]) {||| 43 mx[stk[top - 1]] = max(mx[stk[top - 1]], mx[stk[top]]);||| 44 top--;||| 45 }||| 46 b[i] = min(b[i], max(a[i].first, mx[stk[top]]));||| 47 mx[stk[++top] = i] = a[i].first;||| 48 }||| 49 stk[top = 0] = n + 1, mx[n + 1] = inf;||| 50 for (int i = n; i; i--) {||| 51 while (top && a[stk[top]] > a[i]) {||| 52 mx[stk[top - 1]] = max(mx[stk[top - 1]], mx[stk[top]]);||| 53 top--;||| 54 }||| 55 b[i] = min(b[i], max(a[i].first, mx[stk[top]]));||| 56 mx[stk[++top] = i] = a[i].first;||| 57 }||| 58 }||| 59 int main() {||| 60 scanf(""%d%d%d"", &n, &m, &x);||| 61 init_(n, a, c);||| 62 init_(m, b, d);||| 63 work_();||| 64 }||| "	24 b[i].first = lower_bound(V + 1, V + tot + 1, b[i].first) - V;
4	4	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, p;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 scanf(""%d"", &p);||| 7 printf(""2 %d\n"", p - 1);||| 8 }||| 9 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, p;||| 4 scanf(""%d"", &t);||| 5 while (t--) {||| 6 scanf(""%d"", &p);||| 7 printf(""2 %d"", p - 1);||| 8 }||| 9 }||| "	"7 printf(""2 %d\n"", p - 1);"
4	227	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void refresh() {}||| 4 int main() {||| 5 long long tc = 1;||| 6 cin >> tc;||| 7 while (tc--) {||| 8 refresh();||| 9 long long n, ans1, ans2;||| 10 cin >> n;||| 11 ans1 = n - 1;||| 12 ans2 = ans1 / 2;||| 13 cout << ans2 << ' ' << ans1 << endl;||| 14 }||| 15 return 0;||| 16 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void refresh() {}||| 4 int main() {||| 5 long long tc = 1;||| 6 cin >> tc;||| 7 while (tc--) {||| 8 refresh();||| 9 long long n, ans1, ans2;||| 10 cin >> n;||| 11 ans1 = n - 1;||| 12 ans2 = ans1 / 2;||| 13 cout << ans1 << ' ' << ans2 << endl;||| 14 }||| 15 return 0;||| 16 }||| 	13 cout << ans2 << ' ' << ans1 << endl;
4	209	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int bpow(long long int a, long long int b) {||| 4 long long int ans = 1;||| 5 while (b > 0) {||| 6 if (b & 1) ans = (ans * a) % 1000000007;||| 7 b /= 2;||| 8 a = (a * a) % 1000000007;||| 9 }||| 10 return ans;||| 11 }||| 12 int main() {||| 13 long long int testc;||| 14 cin >> testc;||| 15 while (testc--) {||| 16 long long int n;||| 17 cin >> n;||| 18 cout << 2 << "" "" << n - 1 << ""\n"";||| 19 }||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int bpow(long long int a, long long int b) {||| 4 long long int ans = 1;||| 5 while (b > 0) {||| 6 if (b & 1) ans = (ans * a) % 1000000007;||| 7 b /= 2;||| 8 a = (a * a) % 1000000007;||| 9 }||| 10 return ans;||| 11 }||| 12 int main() {||| 13 long long int testc;||| 14 cin >> testc;||| 15 while (testc--) {||| 16 long long int n;||| 17 cin >> n;||| 18 cout << 2 << "" "" << n / 2 << ""\n"";||| 19 }||| 20 }||| "	"18 cout << 2 << "" "" << n - 1 << ""\n"";"
4	266	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int P;||| 8 cin >> P;||| 9 int re = P - 1;||| 10 cout << 2 << "" "" << re << endl;||| 11 }||| 12 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int P;||| 8 cin >> P;||| 9 int re = P - 1;||| 10 cout << re << "" "" << 2 << endl;||| 11 }||| 12 }||| "	"10 cout << 2 << "" "" << re << endl;"
4	259	"1 #include <bits/stdc++.h>||| 2 void solve() {||| 3 int P;||| 4 scanf(""%d"", &P);||| 5 int a, b;||| 6 a = P - 1;||| 7 b = (P - 1) / 2;||| 8 printf(""%d %d\n"", b, a);||| 9 }||| 10 int main() {||| 11 int t;||| 12 scanf(""%d"", &t);||| 13 while (t--) {||| 14 solve();||| 15 }||| 16 }||| "	"1 #include <bits/stdc++.h>||| 2 void solve() {||| 3 int P;||| 4 scanf(""%d"", &P);||| 5 int a, b;||| 6 a = P - 1;||| 7 b = (P - 1) / 2;||| 8 printf(""%d %d\n"", a, b);||| 9 }||| 10 int main() {||| 11 int t;||| 12 scanf(""%d"", &t);||| 13 while (t--) {||| 14 solve();||| 15 }||| 16 }||| "	"8 printf(""%d %d\n"", b, a);"
4	271	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, b, p, k, pj;||| 5 int a[2000], q;||| 6 cin >> t;||| 7 for (int i = 0; i < t; i++) {||| 8 q = 2;||| 9 pj = 0;||| 10 cin >> p;||| 11 for (int j = 2; j < p; j++) {||| 12 pj = 0;||| 13 k = p % j;||| 14 for (int l = 2; l < q; l++) {||| 15 if (k == a[l]) {||| 16 cout << l << ' ' << j << endl;||| 17 pj = 1;||| 18 break;||| 19 }||| 20 }||| 21 if (pj == 1) break;||| 22 a[q++] = k;||| 23 }||| 24 }||| 25 return 0;||| 26 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, b, p, k, pj;||| 5 int a[2000], q;||| 6 cin >> t;||| 7 for (int i = 0; i < t; i++) {||| 8 q = 2;||| 9 pj = 0;||| 10 cin >> p;||| 11 for (int j = 2; j < p; j++) {||| 12 pj = 0;||| 13 k = p % j;||| 14 for (int l = 2; l < q; l++) {||| 15 if (k == a[l]) {||| 16 cout << j << ' ' << l << endl;||| 17 pj = 1;||| 18 break;||| 19 }||| 20 }||| 21 if (pj == 1) break;||| 22 a[q++] = k;||| 23 }||| 24 }||| 25 return 0;||| 26 }||| 	16 cout << l << ' ' << j << endl;
4	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isSubSequence(string str1, string str2, int m, int n);||| 4 int CEIL(int a, int b);||| 5 bool isPrime(int x);||| 6 int mod_exp(long long x, unsigned int y, int p);||| 7 int gcd(int a, int b);||| 8 vector<int> Divisors(int n);||| 9 int getMSB(int n);||| 10 void sayyes() { cout << ""YES"" << '\n'; }||| 11 void sayno() { cout << ""NO"" << '\n'; }||| 12 void solve() {||| 13 long long int p;||| 14 cin >> p;||| 15 cout << 2 << "" "" << p - 1 << '\n';||| 16 }||| 17 int main() {||| 18 auto start = std::chrono::system_clock::now();||| 19 int t = 1;||| 20 scanf(""%d"", &t);||| 21 while (t--) solve();||| 22 auto end = std::chrono::system_clock::now();||| 23 std::chrono::duration<double> elapsed_seconds = end - start;||| 24 std::time_t end_time = std::chrono::system_clock::to_time_t(end);||| 25 return 0;||| 26 }||| 27 bool isSubSequence(string str1, string str2, int m, int n) {||| 28 int j = 0;||| 29 for (int i = 0; i < n && j < m; i++) {||| 30 if (str1[j] == str2[i]) j++;||| 31 }||| 32 return (j == m);||| 33 }||| 34 int CEIL(int a, int b) {||| 35 if (a % b == 0)||| 36 return a / b;||| 37 else||| 38 return (a / b) + 1;||| 39 }||| 40 bool isPrime(int x) {||| 41 if (x <= 1) return false;||| 42 for (int i = 2, sqroot = sqrt(x); i <= sqroot; i++)||| 43 if (x % i == 0) return false;||| 44 return true;||| 45 }||| 46 int mod_exp(long long x, unsigned int y, int p) {||| 47 int res = 1;||| 48 x = x % p;||| 49 if (x == 0) return 0;||| 50 while (y > 0) {||| 51 if (y & 1) res = (res * x) % p;||| 52 y = y >> 1;||| 53 x = (x * x) % p;||| 54 }||| 55 return res;||| 56 }||| 57 vector<int> Divisors(int n) {||| 58 vector<int> div;||| 59 for (int i = 1; i <= sqrt(n); i++) {||| 60 if (n % i == 0) {||| 61 if (n / i == i)||| 62 div.push_back(i);||| 63 else {||| 64 div.push_back(i);||| 65 div.push_back(n / i);||| 66 }||| 67 }||| 68 }||| 69 return div;||| 70 }||| 71 int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }||| 72 int getMSB(int n) {||| 73 if (n == 0) return 0;||| 74 int msb = 0;||| 75 n = n / 2;||| 76 while (n != 0) {||| 77 n = n / 2;||| 78 msb++;||| 79 }||| 80 return msb;||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isSubSequence(string str1, string str2, int m, int n);||| 4 int CEIL(int a, int b);||| 5 bool isPrime(int x);||| 6 int mod_exp(long long x, unsigned int y, int p);||| 7 int gcd(int a, int b);||| 8 vector<int> Divisors(int n);||| 9 int getMSB(int n);||| 10 void sayyes() { cout << ""YES"" << '\n'; }||| 11 void sayno() { cout << ""NO"" << '\n'; }||| 12 void solve() {||| 13 long long int p;||| 14 cin >> p;||| 15 cout << 2 << p - 1 << '\n';||| 16 }||| 17 int main() {||| 18 auto start = std::chrono::system_clock::now();||| 19 int t = 1;||| 20 scanf(""%d"", &t);||| 21 while (t--) solve();||| 22 auto end = std::chrono::system_clock::now();||| 23 std::chrono::duration<double> elapsed_seconds = end - start;||| 24 std::time_t end_time = std::chrono::system_clock::to_time_t(end);||| 25 return 0;||| 26 }||| 27 bool isSubSequence(string str1, string str2, int m, int n) {||| 28 int j = 0;||| 29 for (int i = 0; i < n && j < m; i++) {||| 30 if (str1[j] == str2[i]) j++;||| 31 }||| 32 return (j == m);||| 33 }||| 34 int CEIL(int a, int b) {||| 35 if (a % b == 0)||| 36 return a / b;||| 37 else||| 38 return (a / b) + 1;||| 39 }||| 40 bool isPrime(int x) {||| 41 if (x <= 1) return false;||| 42 for (int i = 2, sqroot = sqrt(x); i <= sqroot; i++)||| 43 if (x % i == 0) return false;||| 44 return true;||| 45 }||| 46 int mod_exp(long long x, unsigned int y, int p) {||| 47 int res = 1;||| 48 x = x % p;||| 49 if (x == 0) return 0;||| 50 while (y > 0) {||| 51 if (y & 1) res = (res * x) % p;||| 52 y = y >> 1;||| 53 x = (x * x) % p;||| 54 }||| 55 return res;||| 56 }||| 57 vector<int> Divisors(int n) {||| 58 vector<int> div;||| 59 for (int i = 1; i <= sqrt(n); i++) {||| 60 if (n % i == 0) {||| 61 if (n / i == i)||| 62 div.push_back(i);||| 63 else {||| 64 div.push_back(i);||| 65 div.push_back(n / i);||| 66 }||| 67 }||| 68 }||| 69 return div;||| 70 }||| 71 int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }||| 72 int getMSB(int n) {||| 73 if (n == 0) return 0;||| 74 int msb = 0;||| 75 n = n / 2;||| 76 while (n != 0) {||| 77 n = n / 2;||| 78 msb++;||| 79 }||| 80 return msb;||| 81 }||| "	"15 cout << 2 << "" "" << p - 1 << '\n';"
4	167	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 1;||| 4 void solve() {||| 5 long long p;||| 6 cin >> p;||| 7 if (p == 5) {||| 8 cout << ""2 4\n"";||| 9 return;||| 10 }||| 11 p--;||| 12 long long x = p / 2;||| 13 p = p / x;||| 14 cout << p << ' ' << x << '\n';||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 int t;||| 21 cin >> t;||| 22 while (t--) solve();||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 1;||| 4 void solve() {||| 5 long long p;||| 6 cin >> p;||| 7 if (p == 5) {||| 8 cout << ""2 4\n"";||| 9 return;||| 10 }||| 11 p--;||| 12 long long x = p / 2;||| 13 p = p / x;||| 14 cout << x << ' ' << p << '\n';||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 int t;||| 21 cin >> t;||| 22 while (t--) solve();||| 23 }||| "	14 cout << p << ' ' << x << '\n';
4	187	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long a, b;||| 13 a = 2;||| 14 b = n - 1;||| 15 cout << a << "" "" << b << endl;||| 16 }||| 17 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 long long a, b;||| 13 a = 2;||| 14 b = n / 2;||| 15 cout << a << "" "" << b << endl;||| 16 }||| 17 }||| "	14 b = n - 1;
5	61	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void TombStonePiledrider(void) {||| 4 long long int a;||| 5 cin >> a;||| 6 string c;||| 7 cin >> c;||| 8 string b;||| 9 cin >> b;||| 10 long long int d = 0;||| 11 for (long long int i = 0; i < a; ++i) {||| 12 if (b[i] == '0') {||| 13 continue;||| 14 }||| 15 bool ok = (c[i] == '0');||| 16 if (!ok && i - 1 >= 0) {||| 17 ok = (c[i - 1] == '1');||| 18 if (ok) {||| 19 c[i - 1] = 'k';||| 20 }||| 21 }||| 22 if (!ok && i + 1 < a) {||| 23 ok = (c[i + 1] == '1');||| 24 if (ok) {||| 25 c[i + 1] = 'k';||| 26 }||| 27 }||| 28 d += ok;||| 29 }||| 30 cout << d << '\n';||| 31 }||| 32 int main() {||| 33 std::ios_base::sync_with_stdio(false);||| 34 std::cin.tie(nullptr);||| 35 std::cout.tie(nullptr);||| 36 long long int TotalTestCase = 1;||| 37 std::cin >> TotalTestCase;||| 38 while (TotalTestCase--) {||| 39 TombStonePiledrider();||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void TombStonePiledrider(void) {||| 4 long long int a;||| 5 cin >> a;||| 6 string c;||| 7 cin >> c;||| 8 string b;||| 9 cin >> b;||| 10 long long int d = 0;||| 11 for (long long int i = 0; i < a; ++i) {||| 12 if (b[i] == '0') {||| 13 continue;||| 14 }||| 15 bool ok = (c[i] == '0');||| 16 if (!ok && i - 1 >= 0) {||| 17 ok = (c[i - 1] == '1');||| 18 if (ok) {||| 19 c[i - 1] == 'k';||| 20 }||| 21 }||| 22 if (!ok && i + 1 < a) {||| 23 ok = (c[i + 1] == '1');||| 24 if (ok) {||| 25 c[i + 1] == 'k';||| 26 }||| 27 }||| 28 d += ok;||| 29 }||| 30 cout << d << '\n';||| 31 }||| 32 int main() {||| 33 std::ios_base::sync_with_stdio(false);||| 34 std::cin.tie(nullptr);||| 35 std::cout.tie(nullptr);||| 36 long long int TotalTestCase = 1;||| 37 std::cin >> TotalTestCase;||| 38 while (TotalTestCase--) {||| 39 TombStonePiledrider();||| 40 }||| 41 return 0;||| 42 }||| 	19 c[i - 1] = 'k';
5	27	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, n;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> n;||| 8 char arr1[n], arr2[n];||| 9 long long int result = 0;||| 10 for (long long int i = 0; i < n; i++) {||| 11 cin >> arr1[i];||| 12 }||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> arr2[i];||| 15 }||| 16 vector<bool> taken(n, false);||| 17 for (long long int i = 0; i < n; i++) {||| 18 if (arr2[i] == '1') {||| 19 for (int j = i - 1; j <= i + 1; j++) {||| 20 if (j >= 0 and j < n) {||| 21 if (!taken[j]) {||| 22 if ((arr1[j] == '1' and j != i) or (arr1[j] == '0' and j == i)) {||| 23 result++;||| 24 taken[j] = true;||| 25 break;||| 26 }||| 27 }||| 28 }||| 29 }||| 30 }||| 31 }||| 32 cout << result << endl;||| 33 }||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, n;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> n;||| 8 char arr1[n], arr2[n];||| 9 long long int result = 0;||| 10 for (long long int i = 0; i < n; i++) {||| 11 cin >> arr1[i];||| 12 }||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> arr2[i];||| 15 }||| 16 vector<bool> taken(n, false);||| 17 for (long long int i = 0; i < n; i++) {||| 18 if (arr2[i] == '1') {||| 19 for (int j = i - 1; j <= i + 1; j++) {||| 20 if (j >= 0 and j < n) {||| 21 if (!taken[j]) {||| 22 if ((arr1[j] == '1' and j != i) or (arr1[j] == '0' and j == i)) {||| 23 result++;||| 24 taken[j] = true;||| 25 }||| 26 }||| 27 }||| 28 }||| 29 }||| 30 }||| 31 cout << result << endl;||| 32 }||| 33 }||| 	25 break;
5	187	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, sum = 0;||| 5 cin >> n;||| 6 string str, ch;||| 7 cin >> str >> ch;||| 8 for (int i = 0; i < n; i++)||| 9 if (ch[i] == '1') {||| 10 if (str[i] == '0')||| 11 sum++;||| 12 else {||| 13 if (i - 1 >= 0 && str[i - 1] == '1')||| 14 str[i - 1] = '*', sum++;||| 15 else if (i + 1 < n && str[i + 1] == '1')||| 16 str[i + 1] = '*', sum++;||| 17 }||| 18 }||| 19 cout << sum << endl;||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(false), cin.tie(0);||| 23 int n;||| 24 cin >> n;||| 25 while (n--) {||| 26 solve();||| 27 }||| 28 return 0;||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, sum = 0;||| 5 cin >> n;||| 6 string str, ch;||| 7 cin >> str >> ch;||| 8 for (int i = 0; i < n; i++)||| 9 if (ch[i] == '1') {||| 10 if (str[i] == '0')||| 11 sum++;||| 12 else {||| 13 if (i - 1 >= 0 && str[i - 1] == '1') str[i - 1] = '*', sum++;||| 14 if (i + 1 < n && str[i + 1] == '1') str[i + 1] = '*', sum++;||| 15 }||| 16 }||| 17 cout << sum << endl;||| 18 }||| 19 int main() {||| 20 ios_base::sync_with_stdio(false), cin.tie(0);||| 21 int n;||| 22 cin >> n;||| 23 while (n--) {||| 24 solve();||| 25 }||| 26 return 0;||| 27 }||| 	13 if (i - 1 >= 0 && str[i - 1] == '1')
5	132	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const bool read_file = false;||| 4 const char fi[] = ""XX.INP"";||| 5 const char fo[] = ""XX.OUT"";||| 6 void set_up() {||| 7 if (read_file) {||| 8 freopen(fi, ""r"", stdin);||| 9 freopen(fo, ""w"", stdout);||| 10 }||| 11 cin.clear();||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 }||| 16 void just_do_it();||| 17 int main() {||| 18 set_up();||| 19 just_do_it();||| 20 }||| 21 int t, n;||| 22 char c;||| 23 const int ms = 2e5 + 20;||| 24 int a[ms];||| 25 int b[ms];||| 26 int res;||| 27 void query() {||| 28 cin >> n;||| 29 a[0] = -1;||| 30 for (int i = 1; i <= n; i++) {||| 31 cin >> c;||| 32 a[i] = c - '0';||| 33 }||| 34 a[n + 1] = -1;||| 35 b[0] = -1;||| 36 for (int i = 1; i <= n; i++) {||| 37 cin >> c;||| 38 b[i] = c - '0';||| 39 }||| 40 b[n + 1] = -1;||| 41 res = 0;||| 42 for (int i = 1; i <= n; i++) {||| 43 if (b[i] == 1) {||| 44 if (a[i - 1] == 1) {||| 45 a[i - 1] = -1;||| 46 res++;||| 47 } else if (a[i] == 0) {||| 48 a[i] = -1;||| 49 res++;||| 50 } else if (a[i + 1] == 1) {||| 51 a[i + 1] = -1;||| 52 res++;||| 53 }||| 54 }||| 55 }||| 56 cout << res << endl;||| 57 }||| 58 void just_do_it() {||| 59 cin >> t;||| 60 for (int i = 0; i < t; i++) {||| 61 query();||| 62 }||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const bool read_file = false;||| 4 const char fi[] = ""XX.INP"";||| 5 const char fo[] = ""XX.OUT"";||| 6 void set_up() {||| 7 if (read_file) {||| 8 freopen(fi, ""r"", stdin);||| 9 freopen(fo, ""w"", stdout);||| 10 }||| 11 cin.clear();||| 12 ios_base::sync_with_stdio(0);||| 13 cin.tie(0);||| 14 cout.tie(0);||| 15 }||| 16 void just_do_it();||| 17 int main() {||| 18 set_up();||| 19 just_do_it();||| 20 }||| 21 int t, n;||| 22 char c;||| 23 const int ms = 2e5 + 20;||| 24 int a[ms];||| 25 int b[ms];||| 26 int res;||| 27 void query() {||| 28 cin >> n;||| 29 a[0] = -1;||| 30 for (int i = 1; i <= n; i++) {||| 31 cin >> c;||| 32 a[i] = c - '0';||| 33 }||| 34 a[n + 1] = -1;||| 35 b[0] = -1;||| 36 for (int i = 1; i <= n; i++) {||| 37 cin >> c;||| 38 b[i] = c - '0';||| 39 }||| 40 b[n + 1] = -1;||| 41 res = 0;||| 42 for (int i = 1; i <= n; i++) {||| 43 if (b[i] == 1) {||| 44 if (a[i - 1] == 1) {||| 45 a[i - 1] = -1;||| 46 res++;||| 47 }||| 48 if (a[i] == 0) {||| 49 a[i] = -1;||| 50 res++;||| 51 }||| 52 if (a[i + 1] == 1) {||| 53 a[i + 1] = -1;||| 54 res++;||| 55 }||| 56 }||| 57 }||| 58 cout << res << endl;||| 59 }||| 60 void just_do_it() {||| 61 cin >> t;||| 62 for (int i = 0; i < t; i++) {||| 63 query();||| 64 }||| 65 }||| "	47 } else if (a[i] == 0) {
5	305	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 string s;||| 6 cin >> s;||| 7 n = stoi(s);||| 8 while (n-- > 0) {||| 9 cin >> s;||| 10 int t = stoi(s);||| 11 string s1;||| 12 string s2;||| 13 cin >> s1;||| 14 cin >> s2;||| 15 vector<int> enemy;||| 16 for (int i = 0; i < s1.size(); i++) {||| 17 if (s1[i] == '1') {||| 18 enemy.push_back(i);||| 19 }||| 20 }||| 21 int cnt = 0;||| 22 for (int i = 0; i < s2.size(); i++) {||| 23 if (s2[i] == '1' && s1[i] == '0') {||| 24 cnt++;||| 25 continue;||| 26 }||| 27 if (s2[i] == '1' && s1[i] != '0') {||| 28 if (i != 0 && s1[i - 1] == '1') {||| 29 s1[i - 1] = '2';||| 30 cnt++;||| 31 continue;||| 32 }||| 33 if (i != t - 1 && s1[i + 1] == '1') {||| 34 s1[i + 1] = '2';||| 35 cnt++;||| 36 continue;||| 37 }||| 38 }||| 39 }||| 40 cout << cnt << endl;||| 41 }||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 string s;||| 6 cin >> s;||| 7 n = stoi(s);||| 8 while (n-- > 0) {||| 9 cin >> s;||| 10 int t = stoi(s);||| 11 string s1;||| 12 string s2;||| 13 cin >> s1;||| 14 cin >> s2;||| 15 vector<int> enemy;||| 16 for (int i = 0; i < s1.size(); i++) {||| 17 if (s1[i] == '1') {||| 18 enemy.push_back(i);||| 19 }||| 20 }||| 21 int cnt = 0;||| 22 for (int i = 0; i < s2.size(); i++) {||| 23 if (s2[i] == '1' && s1[i] == '0') {||| 24 cnt++;||| 25 continue;||| 26 }||| 27 if (s2[i] == '1' && s1[i] == '1') {||| 28 if (i != 0 && s1[i - 1] == '1') {||| 29 s1[i - 1] = '2';||| 30 cnt++;||| 31 continue;||| 32 }||| 33 if (i != t - 1 && s1[i + 1] == '1') {||| 34 s1[i + 1] = '2';||| 35 cnt++;||| 36 continue;||| 37 }||| 38 }||| 39 }||| 40 cout << cnt << endl;||| 41 }||| 42 }||| 	27 if (s2[i] == '1' && s1[i] != '0') {
5	13	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int hashPower = 31;||| 4 float pi = 3.141593;||| 5 long long int power(long long int a, long long int b) {||| 6 long long int res = 1;||| 7 while (b) {||| 8 if (b % 2) res = (res * a) % 1000000007;||| 9 b /= 2;||| 10 a = (a * a) % 1000000007;||| 11 }||| 12 return res;||| 13 }||| 14 int main() {||| 15 long long int t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long int n;||| 19 cin >> n;||| 20 string first, second;||| 21 cin >> first;||| 22 cin >> second;||| 23 int a[n], b[n];||| 24 for (int i = 0; i < n; i++) {||| 25 if (first[i] == '0') {||| 26 a[i] = 0;||| 27 } else {||| 28 a[i] = 1;||| 29 }||| 30 }||| 31 for (int i = 0; i < n; i++) {||| 32 if (second[i] == '0') {||| 33 b[i] = 0;||| 34 } else {||| 35 b[i] = 1;||| 36 }||| 37 }||| 38 int count = 0;||| 39 for (int i = 0; i < n; i++) {||| 40 if (b[i]) {||| 41 if (a[i] == 0) {||| 42 count++;||| 43 a[i] = 2;||| 44 } else {||| 45 if (a[i - 1] == 1 && (i - 1 >= 0)) {||| 46 count++;||| 47 a[i - 1] = 2;||| 48 } else if (a[i + 1] == 1 && (i + 1 < n)) {||| 49 count++;||| 50 a[i + 1] = 2;||| 51 }||| 52 }||| 53 }||| 54 }||| 55 cout << count << endl;||| 56 }||| 57 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int hashPower = 31;||| 4 float pi = 3.141593;||| 5 long long int power(long long int a, long long int b) {||| 6 long long int res = 1;||| 7 while (b) {||| 8 if (b % 2) res = (res * a) % 1000000007;||| 9 b /= 2;||| 10 a = (a * a) % 1000000007;||| 11 }||| 12 return res;||| 13 }||| 14 int main() {||| 15 long long int t;||| 16 cin >> t;||| 17 while (t--) {||| 18 long long int n;||| 19 cin >> n;||| 20 string first, second;||| 21 cin >> first;||| 22 cin >> second;||| 23 int a[n], b[n];||| 24 for (int i = 0; i < n; i++) {||| 25 if (first[i] == '0') {||| 26 a[i] = 0;||| 27 } else {||| 28 a[i] = 1;||| 29 }||| 30 }||| 31 for (int i = 0; i < n; i++) {||| 32 if (second[i] == '0') {||| 33 b[i] = 0;||| 34 } else {||| 35 b[i] = 1;||| 36 }||| 37 }||| 38 int count = 0;||| 39 for (int i = 0; i < n; i++) {||| 40 if (b[i]) {||| 41 if (a[i] == 0) {||| 42 count++;||| 43 a[i] = 1;||| 44 } else {||| 45 if (a[i - 1] == 1 && (i - 1 >= 0)) {||| 46 count++;||| 47 a[i - 1] = 2;||| 48 } else if (a[i + 1] == 1 && (i + 1 < n)) {||| 49 count++;||| 50 a[i + 1] = 2;||| 51 }||| 52 }||| 53 }||| 54 }||| 55 cout << count << endl;||| 56 }||| 57 }||| 	43 a[i] = 2;
6	157	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, m;||| 5 cin >> n >> m;||| 6 long long arr[n];||| 7 memset(arr, 0, sizeof(arr));||| 8 long long ans = n;||| 9 for (long long i = 0; i < m; i++) {||| 10 long long u, v;||| 11 cin >> u >> v;||| 12 u--, v--;||| 13 if (u > v) {||| 14 arr[v]--;||| 15 if (arr[v] == -1) ans--;||| 16 } else {||| 17 arr[u]--;||| 18 if (arr[u] == -1) ans--;||| 19 }||| 20 }||| 21 long long q;||| 22 cin >> q;||| 23 for (long long i = 0; i < q; i++) {||| 24 int c;||| 25 cin >> c;||| 26 if (c == 1) {||| 27 long long u, v;||| 28 cin >> u >> v;||| 29 u--, v--;||| 30 if (u > v) {||| 31 arr[v]--;||| 32 if (arr[v] == -1) ans--;||| 33 } else {||| 34 arr[u]--;||| 35 if (arr[u] == -1) ans--;||| 36 }||| 37 } else if (c == 2) {||| 38 long long u, v;||| 39 cin >> u >> v;||| 40 u--, v--;||| 41 if (u > v) {||| 42 arr[v]++;||| 43 if (arr[v] == 0) ans++;||| 44 } else {||| 45 arr[u]++;||| 46 if (arr[u] == 0) ans++;||| 47 }||| 48 } else {||| 49 cout << ans << ""\n"";||| 50 }||| 51 }||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 ;||| 58 solve();||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, m;||| 5 cin >> n >> m;||| 6 long long arr[n];||| 7 memset(arr, 0, sizeof(arr));||| 8 long long ans = n;||| 9 for (long long i = 0; i < m; i++) {||| 10 long long u, v;||| 11 cin >> u >> v;||| 12 u--, v--;||| 13 if (u > v) {||| 14 arr[v]--;||| 15 if (arr[v] == -1) ans--;||| 16 } else {||| 17 arr[u]--;||| 18 if (arr[u] == -1) ans--;||| 19 }||| 20 }||| 21 long long q;||| 22 cin >> q;||| 23 for (long long i = 0; i < q; i++) {||| 24 int c;||| 25 cin >> c;||| 26 if (c == 1) {||| 27 long long u, v;||| 28 cin >> u >> v;||| 29 u--, v--;||| 30 if (u > v) {||| 31 arr[v]--;||| 32 if (arr[v] == -1) ans--;||| 33 } else {||| 34 arr[u]--;||| 35 if (arr[u] == -1) ans--;||| 36 }||| 37 } else if (c == 2) {||| 38 long long u, v;||| 39 cin >> u >> v;||| 40 u--, v--;||| 41 if (u > v) {||| 42 arr[v]++;||| 43 if (arr[v] == 0) ans++;||| 44 } else {||| 45 arr[u]++;||| 46 if (arr[u] == -1) ans++;||| 47 }||| 48 } else {||| 49 cout << ans << ""\n"";||| 50 }||| 51 }||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(0);||| 55 cin.tie(0);||| 56 cout.tie(0);||| 57 ;||| 58 solve();||| 59 return 0;||| 60 }||| "	46 if (arr[u] == 0) ans++;
6	149	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""sse4"")||| 4 using namespace std;||| 5 long long int MOD = 1000000007;||| 6 long long int powmod(long long int a, long long int b) {||| 7 long long int res = 1;||| 8 a %= 1000000009;||| 9 assert(b >= 0);||| 10 for (; b; b >>= 1) {||| 11 if (b & 1) res = res * a % 1000000009;||| 12 a = a * a % 1000000009;||| 13 }||| 14 return res;||| 15 }||| 16 long long int gcd(long long int a, long long int b) {||| 17 return b ? gcd(b, a % b) : a;||| 18 }||| 19 long long int add(long long int a, long long int b) {||| 20 return ((a % MOD) + (b % MOD)) % MOD;||| 21 }||| 22 long long int mul(long long int a, long long int b) {||| 23 return ((a % MOD) * (b % MOD)) % MOD;||| 24 }||| 25 long long int sub(long long int a, long long int b) {||| 26 return ((a % MOD) - (b % MOD) + MOD) % MOD;||| 27 }||| 28 long long int binpow(long long int x, long long int y) {||| 29 long long int z = 1;||| 30 while (y) {||| 31 if (y & 1) z = mul(z, x);||| 32 x = mul(x, x);||| 33 y >>= 1;||| 34 }||| 35 return z;||| 36 }||| 37 map<int, int> graph[200005];||| 38 int main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 long long int n, m;||| 42 cin >> n >> m;||| 43 for (long long int i = 0; i < m; i++) {||| 44 long long int a, b;||| 45 cin >> a >> b;||| 46 graph[a][-b]++;||| 47 graph[b][-a]++;||| 48 }||| 49 long long int count = 0;||| 50 for (int i = 1; i <= n; i++) {||| 51 long long int x = 0;||| 52 for (auto u : graph[i]) {||| 53 x = -u.first;||| 54 break;||| 55 }||| 56 if (x < i) {||| 57 count++;||| 58 }||| 59 }||| 60 long long int q;||| 61 cin >> q;||| 62 while (q--) {||| 63 long long int ask;||| 64 cin >> ask;||| 65 if (ask == 3) {||| 66 cout << count << endl;||| 67 } else if (ask == 1) {||| 68 long long int a, b;||| 69 cin >> a >> b;||| 70 long long int x = 0;||| 71 long long int y = 0;||| 72 for (auto u : graph[a]) {||| 73 x = -u.first;||| 74 break;||| 75 }||| 76 for (auto u : graph[b]) {||| 77 y = -u.first;||| 78 break;||| 79 }||| 80 graph[a][-b]++;||| 81 graph[b][-a]++;||| 82 if (b > a && x < a) {||| 83 count--;||| 84 }||| 85 if (a > b && y < b) {||| 86 count--;||| 87 }||| 88 } else if (ask == 2) {||| 89 long long int a, b;||| 90 cin >> a >> b;||| 91 long long int x = 0;||| 92 long long int y = 0;||| 93 graph[a].erase(-b);||| 94 graph[b].erase(-a);||| 95 for (auto u : graph[a]) {||| 96 x = -u.first;||| 97 break;||| 98 }||| 99 for (auto u : graph[b]) {||| 100 y = -u.first;||| 101 break;||| 102 }||| 103 if (x < a && b > a) {||| 104 count++;||| 105 }||| 106 if (y < b && a > b) {||| 107 count++;||| 108 }||| 109 }||| 110 }||| 111 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""sse4"")||| 4 using namespace std;||| 5 long long int MOD = 1000000007;||| 6 long long int powmod(long long int a, long long int b) {||| 7 long long int res = 1;||| 8 a %= 1000000009;||| 9 assert(b >= 0);||| 10 for (; b; b >>= 1) {||| 11 if (b & 1) res = res * a % 1000000009;||| 12 a = a * a % 1000000009;||| 13 }||| 14 return res;||| 15 }||| 16 long long int gcd(long long int a, long long int b) {||| 17 return b ? gcd(b, a % b) : a;||| 18 }||| 19 long long int add(long long int a, long long int b) {||| 20 return ((a % MOD) + (b % MOD)) % MOD;||| 21 }||| 22 long long int mul(long long int a, long long int b) {||| 23 return ((a % MOD) * (b % MOD)) % MOD;||| 24 }||| 25 long long int sub(long long int a, long long int b) {||| 26 return ((a % MOD) - (b % MOD) + MOD) % MOD;||| 27 }||| 28 long long int binpow(long long int x, long long int y) {||| 29 long long int z = 1;||| 30 while (y) {||| 31 if (y & 1) z = mul(z, x);||| 32 x = mul(x, x);||| 33 y >>= 1;||| 34 }||| 35 return z;||| 36 }||| 37 map<int, int> graph[200005];||| 38 int main() {||| 39 ios::sync_with_stdio(false);||| 40 cin.tie(0);||| 41 long long int n, m;||| 42 cin >> n >> m;||| 43 for (long long int i = 0; i < m; i++) {||| 44 long long int a, b;||| 45 cin >> a >> b;||| 46 graph[a][-b]++;||| 47 graph[b][-a]++;||| 48 }||| 49 long long int count = 0;||| 50 for (int i = 1; i <= n; i++) {||| 51 long long int x = 0;||| 52 for (auto u : graph[i]) {||| 53 x = -u.first;||| 54 break;||| 55 }||| 56 if (x < i) {||| 57 count++;||| 58 }||| 59 }||| 60 long long int q;||| 61 cin >> q;||| 62 while (q--) {||| 63 long long int ask;||| 64 cin >> ask;||| 65 if (ask == 3) {||| 66 cout << count << endl;||| 67 } else if (ask == 2) {||| 68 long long int a, b;||| 69 cin >> a >> b;||| 70 long long int x = 0;||| 71 long long int y = 0;||| 72 for (auto u : graph[a]) {||| 73 x = -u.first;||| 74 break;||| 75 }||| 76 for (auto u : graph[b]) {||| 77 y = -u.first;||| 78 break;||| 79 }||| 80 graph[a][-b]++;||| 81 graph[b][-a]++;||| 82 if (b > a && x < a) {||| 83 count--;||| 84 }||| 85 if (a > b && y < b) {||| 86 count--;||| 87 }||| 88 } else if (ask == 2) {||| 89 long long int a, b;||| 90 cin >> a >> b;||| 91 long long int x = 0;||| 92 long long int y = 0;||| 93 graph[a].erase(-b);||| 94 graph[b].erase(-a);||| 95 for (auto u : graph[a]) {||| 96 x = -u.first;||| 97 break;||| 98 }||| 99 for (auto u : graph[b]) {||| 100 y = -u.first;||| 101 break;||| 102 }||| 103 if (x < a && b > a) {||| 104 count++;||| 105 }||| 106 if (y < b && a > b) {||| 107 count++;||| 108 }||| 109 }||| 110 }||| 111 }||| "	67 } else if (ask == 1) {
6	19	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename val1>||| 4 void __f(const char* name, val1&& value) {||| 5 cout << name << "" = "" << value << endl;||| 6 }||| 7 template <typename val1, typename... values>||| 8 void __f(const char* names, val1&& value, values&&... multiplevalue) {||| 9 const char* comma = strchr(names + 1, ',');||| 10 cout.write(names, comma - names) << "" = "" << value << "" "";||| 11 __f(comma + 1, multiplevalue...);||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(NULL);||| 16 long long n, m;||| 17 cin >> n >> m;||| 18 set<int> tot[n + 1];||| 19 long long alive = n;||| 20 long long marks[n + 5];||| 21 memset(marks, 0, sizeof marks);||| 22 for (long long i = 0; i < m; i++) {||| 23 long long u, v;||| 24 cin >> u >> v;||| 25 tot[u].insert(v);||| 26 tot[v].insert(u);||| 27 if (u > v) {||| 28 if (marks[v] == 0) {||| 29 marks[v] = 1;||| 30 alive--;||| 31 }||| 32 } else {||| 33 if (marks[u] == 0) {||| 34 marks[u] = 1;||| 35 alive--;||| 36 }||| 37 }||| 38 }||| 39 long long q;||| 40 cin >> q;||| 41 long long ex = 0;||| 42 while (q--) {||| 43 long long a;||| 44 cin >> a;||| 45 if (a == 1) {||| 46 long long u, v;||| 47 cin >> u >> v;||| 48 if (u > v) {||| 49 if (marks[v] == 0) {||| 50 marks[v] = 1;||| 51 alive--;||| 52 }||| 53 } else {||| 54 if (marks[u] == 0) {||| 55 marks[u] = 1;||| 56 alive--;||| 57 }||| 58 }||| 59 tot[v].insert(u);||| 60 tot[u].insert(v);||| 61 } else if (a == 2) {||| 62 long long u, v;||| 63 cin >> u >> v;||| 64 tot[u].erase(v);||| 65 tot[v].erase(u);||| 66 if (tot[u].size() == 0 and marks[u]) {||| 67 marks[u] = 0;||| 68 alive++;||| 69 } else {||| 70 auto a = tot[u].end();||| 71 a--;||| 72 if (*a < u and marks[u]) {||| 73 marks[u] = 0;||| 74 alive++;||| 75 }||| 76 }||| 77 if (tot[v].size() == 0 and marks[v]) {||| 78 marks[v] = 0;||| 79 alive++;||| 80 } else {||| 81 auto a = tot[v].end();||| 82 a--;||| 83 if (*a < v and marks[v]) {||| 84 marks[v] = 0;||| 85 alive++;||| 86 }||| 87 }||| 88 } else {||| 89 cout << alive << endl;||| 90 }||| 91 }||| 92 cerr << ""time taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs""||| 93 << ""\n"";||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename val1>||| 4 void __f(const char* name, val1&& value) {||| 5 cout << name << "" = "" << value << endl;||| 6 }||| 7 template <typename val1, typename... values>||| 8 void __f(const char* names, val1&& value, values&&... multiplevalue) {||| 9 const char* comma = strchr(names + 1, ',');||| 10 cout.write(names, comma - names) << "" = "" << value << "" "";||| 11 __f(comma + 1, multiplevalue...);||| 12 }||| 13 int main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(NULL);||| 16 long long n, m;||| 17 cin >> n >> m;||| 18 set<int> tot[n + 1];||| 19 long long alive = n;||| 20 long long marks[n + 5];||| 21 memset(marks, 0, sizeof marks);||| 22 for (long long i = 0; i < m; i++) {||| 23 long long u, v;||| 24 cin >> u >> v;||| 25 tot[u].insert(v);||| 26 tot[v].insert(u);||| 27 if (u > v) {||| 28 if (marks[v] == 0) {||| 29 marks[v] = 1;||| 30 alive--;||| 31 }||| 32 } else {||| 33 if (marks[u] == 0) {||| 34 marks[u] = 1;||| 35 alive--;||| 36 }||| 37 }||| 38 }||| 39 long long q;||| 40 cin >> q;||| 41 long long ex = 0;||| 42 while (q--) {||| 43 long long a;||| 44 cin >> a;||| 45 if (a == 1) {||| 46 long long u, v;||| 47 cin >> u >> v;||| 48 if (u > v) {||| 49 if (marks[v] == 0) {||| 50 marks[v] = 1;||| 51 alive--;||| 52 }||| 53 } else {||| 54 if (marks[u] == 0) {||| 55 marks[u] = 1;||| 56 alive--;||| 57 }||| 58 }||| 59 tot[v].insert(u);||| 60 tot[u].insert(v);||| 61 } else if (a == 2) {||| 62 long long u, v;||| 63 cin >> u >> v;||| 64 tot[u].erase(v);||| 65 tot[v].erase(u);||| 66 if (tot[u].size() == 0 and marks[u]) {||| 67 marks[u] = 1;||| 68 alive++;||| 69 } else {||| 70 auto a = tot[u].end();||| 71 a--;||| 72 if (*a < u and marks[u]) {||| 73 marks[u] = 0;||| 74 alive++;||| 75 }||| 76 }||| 77 if (tot[v].size() == 0 and marks[v]) {||| 78 marks[v] = 1;||| 79 alive++;||| 80 } else {||| 81 auto a = tot[v].end();||| 82 a--;||| 83 if (*a < v and marks[v]) {||| 84 marks[v] = 0;||| 85 alive++;||| 86 }||| 87 }||| 88 } else {||| 89 cout << alive << endl;||| 90 }||| 91 }||| 92 cerr << ""time taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs""||| 93 << ""\n"";||| 94 return 0;||| 95 }||| "	67 marks[u] = 0;
6	239	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 const long long M = 1e9 + 7;||| 5 int main() {||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(nullptr);||| 8 ;||| 9 int n, m;||| 10 cin >> n >> m;||| 11 unordered_map<int, int> hi;||| 12 int cnt = 0;||| 13 while (m--) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 if (!hi[min(u, v)]) cnt++;||| 17 hi[min(u, v)]++;||| 18 }||| 19 int q;||| 20 cin >> q;||| 21 while (q--) {||| 22 int x;||| 23 cin >> x;||| 24 if (x == 3)||| 25 cout << n - cnt << '\n';||| 26 else {||| 27 int y, z;||| 28 cin >> y >> z;||| 29 if (x == 1) {||| 30 if (!hi[min(y, z)]) cnt++;||| 31 hi[min(y, z)]++;||| 32 } else {||| 33 hi[min(y, z)]--;||| 34 if (!hi[min(y, z)]) cnt--;||| 35 }||| 36 }||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 const long long M = 1e9 + 7;||| 5 int main() {||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(nullptr);||| 8 ;||| 9 int n, m;||| 10 cin >> n >> m;||| 11 unordered_map<int, int> hi;||| 12 int cnt = 0;||| 13 while (m--) {||| 14 int u, v;||| 15 cin >> u >> v;||| 16 if (!hi[min(u, v)]) cnt++;||| 17 hi[min(u, v)]++;||| 18 }||| 19 int q;||| 20 cin >> q;||| 21 while (q--) {||| 22 int x;||| 23 cin >> x;||| 24 if (x == 3)||| 25 cout << n - cnt << '\n';||| 26 else {||| 27 int y, z;||| 28 cin >> y >> z;||| 29 if (x == 1) {||| 30 if (!hi[min(y, z)]) cnt++;||| 31 hi[min(y, z)]++;||| 32 } else {||| 33 hi[min(y, z)]--;||| 34 if (!hi[min(y, z)]) cnt++;||| 35 }||| 36 }||| 37 }||| 38 return 0;||| 39 }||| 	34 if (!hi[min(y, z)]) cnt--;
6	237	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isvalid(vector<vector<bool>> ans, int r, int c, int n) {||| 4 for (int i = 0; i <= c; i++) {||| 5 if (ans[r][i] == true) return false;||| 6 }||| 7 for (int i = 0; i <= r; i++) {||| 8 if (ans[i][c] == true) return false;||| 9 }||| 10 for (int i = r, j = c; i >= 0 && j >= 0; i--, j--) {||| 11 if (ans[i][j] == true) return false;||| 12 }||| 13 for (int i = r, j = c; i >= 0 && j < n; i--, j++) {||| 14 if (ans[i][j] == true) return false;||| 15 }||| 16 return true;||| 17 }||| 18 void permute(int qsf, int n, vector<vector<bool>> ans, int ro) {||| 19 if (qsf == n) {||| 20 for (int i = 0; i < ans.size(); i++) {||| 21 for (int j = 0; j < ans[0].size(); j++) {||| 22 if (ans[i][j] == true)||| 23 cout << ""Q"";||| 24 else||| 25 cout << ""."";||| 26 }||| 27 cout << endl;||| 28 }||| 29 cout << endl;||| 30 }||| 31 for (int i = ro + 1; i < n * n; i++) {||| 32 int r = i / n;||| 33 int c = i % n;||| 34 if (ans[r][c] == false && isvalid(ans, r, c, n)) {||| 35 ans[r][c] = true;||| 36 permute(qsf + 1, n, ans, i);||| 37 ans[r][c] = false;||| 38 }||| 39 }||| 40 }||| 41 int main() {||| 42 int n, m;||| 43 cin >> n >> m;||| 44 vector<set<int>> v1(n + 1);||| 45 for (int i = 0; i < m; i++) {||| 46 int x, y;||| 47 cin >> x >> y;||| 48 v1[x].insert(y);||| 49 v1[y].insert(x);||| 50 }||| 51 int f = 0;||| 52 vector<int> vis(n + 1, 0);||| 53 for (int i = 1; i <= n; i++) {||| 54 if (v1[i].lower_bound(i) == v1[i].end()) {||| 55 f++;||| 56 vis[i] = 1;||| 57 }||| 58 }||| 59 int q;||| 60 cin >> q;||| 61 while (q--) {||| 62 int c, u, v;||| 63 cin >> c;||| 64 if (c == 3) {||| 65 cout << f << endl;||| 66 } else {||| 67 cin >> u >> v;||| 68 if (vis[u]) f--;||| 69 if (vis[v]) f--;||| 70 if (c == 1) {||| 71 v1[u].insert(v);||| 72 v1[v].insert(u);||| 73 }||| 74 if (c == 2) {||| 75 v1[u].erase(v);||| 76 v1[v].erase(u);||| 77 }||| 78 if (v1[u].lower_bound(u) != v1[u].end())||| 79 vis[u] = 0;||| 80 else||| 81 vis[u] = 1;||| 82 if (v1[v].lower_bound(v) != v1[v].end())||| 83 vis[v] = 0;||| 84 else||| 85 vis[v] = 1;||| 86 if (vis[u]) f++;||| 87 if (vis[v]) f++;||| 88 }||| 89 }||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isvalid(vector<vector<bool>> ans, int r, int c, int n) {||| 4 for (int i = 0; i <= c; i++) {||| 5 if (ans[r][i] == true) return false;||| 6 }||| 7 for (int i = 0; i <= r; i++) {||| 8 if (ans[i][c] == true) return false;||| 9 }||| 10 for (int i = r, j = c; i >= 0 && j >= 0; i--, j--) {||| 11 if (ans[i][j] == true) return false;||| 12 }||| 13 for (int i = r, j = c; i >= 0 && j < n; i--, j++) {||| 14 if (ans[i][j] == true) return false;||| 15 }||| 16 return true;||| 17 }||| 18 void permute(int qsf, int n, vector<vector<bool>> ans, int ro) {||| 19 if (qsf == n) {||| 20 for (int i = 0; i < ans.size(); i++) {||| 21 for (int j = 0; j < ans[0].size(); j++) {||| 22 if (ans[i][j] == true)||| 23 cout << ""Q"";||| 24 else||| 25 cout << ""."";||| 26 }||| 27 cout << endl;||| 28 }||| 29 cout << endl;||| 30 }||| 31 for (int i = ro + 1; i < n * n; i++) {||| 32 int r = i / n;||| 33 int c = i % n;||| 34 if (ans[r][c] == false && isvalid(ans, r, c, n)) {||| 35 ans[r][c] = true;||| 36 permute(qsf + 1, n, ans, i);||| 37 ans[r][c] = false;||| 38 }||| 39 }||| 40 }||| 41 int main() {||| 42 int n, m;||| 43 cin >> n >> m;||| 44 vector<set<int>> v1(n + 1);||| 45 for (int i = 0; i < m; i++) {||| 46 int x, y;||| 47 cin >> x >> y;||| 48 v1[x].insert(y);||| 49 v1[y].insert(x);||| 50 }||| 51 int f = 0;||| 52 vector<int> vis(n + 1, 0);||| 53 for (int i = 1; i <= n; i++) {||| 54 if (v1[i].lower_bound(i) == v1[i].end()) {||| 55 f++;||| 56 vis[i] = 1;||| 57 }||| 58 }||| 59 int q;||| 60 cin >> q;||| 61 while (q--) {||| 62 int c, u, v;||| 63 cin >> c;||| 64 if (c == 3) {||| 65 cout << f << endl;||| 66 } else {||| 67 cin >> u >> v;||| 68 if (vis[u]) f--;||| 69 if (vis[v]) f--;||| 70 if (c == 1) {||| 71 v1[u].insert(v);||| 72 v1[v].insert(u);||| 73 }||| 74 if (c == 2) {||| 75 v1[u].erase(v);||| 76 v1[v].erase(u);||| 77 }||| 78 if (v1[u].lower_bound(u) != v1[u].end())||| 79 vis[u] = 0;||| 80 else||| 81 vis[u] = 1;||| 82 if (v1[v].lower_bound(v) != v1[v].end()) vis[v] = 0;||| 83 vis[v] = 1;||| 84 if (vis[u]) f++;||| 85 if (vis[v]) f++;||| 86 }||| 87 }||| 88 }||| "	82 if (v1[v].lower_bound(v) != v1[v].end())
7	255	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) {||| 5 return a;||| 6 }||| 7 return gcd(b, a % b);||| 8 }||| 9 vector<vector<long long>> gcd_sparse_table(vector<long long>& d) {||| 10 int N = d.size();||| 11 int K = ceil(log2(N));||| 12 vector<vector<long long>> sparse_table(N, vector<long long>(K + 1));||| 13 for (int i = 0; i < N; i++) {||| 14 sparse_table[i][0] = d[i];||| 15 }||| 16 for (int j = 1; j <= K; j++) {||| 17 for (int i = 0; i + (1 << j) <= N; i++) {||| 18 sparse_table[i][j] =||| 19 gcd(sparse_table[i][j - 1], sparse_table[i + (1 << (j - 1))][j - 1]);||| 20 }||| 21 }||| 22 return sparse_table;||| 23 }||| 24 long long range_gcd(vector<vector<long long>>& sparse_table, int i, int j) {||| 25 int k = floor(log2(j - i + 1));||| 26 return gcd(sparse_table[i][k], sparse_table[j - (1 << k) + 1][k]);||| 27 }||| 28 int main() {||| 29 int t;||| 30 cin >> t;||| 31 for (int i = 0; i < t; i++) {||| 32 int n;||| 33 cin >> n;||| 34 vector<long long> a(n);||| 35 for (int i = 0; i < n; i++) {||| 36 cin >> a[i];||| 37 }||| 38 if (n == 1) {||| 39 cout << 1 << endl;||| 40 continue;||| 41 }||| 42 vector<long long> d(n - 1);||| 43 for (int i = 0; i < n - 1; i++) {||| 44 d[i] = a[i + 1] - a[i];||| 45 }||| 46 vector<vector<long long>> sparse_table = gcd_sparse_table(d);||| 47 int largest_friend_group = 1;||| 48 int l = 0;||| 49 int r = 0;||| 50 while (r < n - 1) {||| 51 if (abs(range_gcd(sparse_table, l, r)) != 1) {||| 52 largest_friend_group = max(largest_friend_group, r - l + 2);||| 53 } else {||| 54 l++;||| 55 }||| 56 r++;||| 57 }||| 58 cout << largest_friend_group << endl;||| 59 }||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long gcd(long long a, long long b) {||| 4 if (b == 0) {||| 5 return a;||| 6 }||| 7 return gcd(b, a % b);||| 8 }||| 9 vector<vector<long long>> gcd_sparse_table(vector<long long>& d) {||| 10 int N = d.size();||| 11 int K = ceil(log2(N));||| 12 vector<vector<long long>> sparse_table(N, vector<long long>(K + 1));||| 13 for (int i = 0; i < N; i++) {||| 14 sparse_table[i][0] = d[i];||| 15 }||| 16 for (int j = 1; j <= K; j++) {||| 17 for (int i = 0; i + (1 << j) <= N; i++) {||| 18 sparse_table[i][j] =||| 19 gcd(sparse_table[i][j - 1], sparse_table[i + (1 << (j - 1))][j - 1]);||| 20 }||| 21 }||| 22 return sparse_table;||| 23 }||| 24 long long range_gcd(vector<vector<long long>>& sparse_table, int i, int j) {||| 25 int k = floor(log2(j - i + 1));||| 26 return gcd(sparse_table[i][k], sparse_table[j - (1 << k) + 1][k]);||| 27 }||| 28 int main() {||| 29 int t;||| 30 cin >> t;||| 31 for (int i = 0; i < t; i++) {||| 32 int n;||| 33 cin >> n;||| 34 vector<long long> a(n);||| 35 for (int i = 0; i < n; i++) {||| 36 cin >> a[i];||| 37 }||| 38 if (n == 1) {||| 39 cout << 1 << endl;||| 40 continue;||| 41 }||| 42 vector<long long> d(n - 1);||| 43 for (int i = 0; i < n - 1; i++) {||| 44 d[i] = a[i + 1] - a[i];||| 45 }||| 46 vector<vector<long long>> sparse_table = gcd_sparse_table(d);||| 47 int largest_friend_group = 0;||| 48 int l = 0;||| 49 int r = 0;||| 50 while (r < n - 1) {||| 51 if (abs(range_gcd(sparse_table, l, r)) != 1) {||| 52 largest_friend_group = max(largest_friend_group, r - l + 2);||| 53 } else {||| 54 l++;||| 55 }||| 56 r++;||| 57 }||| 58 cout << largest_friend_group << endl;||| 59 }||| 60 }||| 	47 int largest_friend_group = 1;
7	290	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 const int maxm = 1e6 + 5;||| 5 const int inf = 0x3f3f3f3f;||| 6 const int mod = 998244353;||| 7 const double eps = 1e-10;||| 8 int dir[4][2] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};||| 9 mt19937 rnd(||| 10 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 11 int n;||| 12 long long a[maxn], d[maxn];||| 13 long long gcd(long long a, long long b) {||| 14 if (!b)||| 15 return a;||| 16 else||| 17 return gcd(b, a % b);||| 18 }||| 19 struct node {||| 20 long long gcd;||| 21 } tree[maxn << 2];||| 22 void push_up(int rt) {||| 23 tree[rt].gcd = abs(gcd(tree[rt << 1].gcd, tree[rt << 1 | 1].gcd));||| 24 }||| 25 void build(int rt, int l, int r) {||| 26 if (l == r) {||| 27 tree[rt].gcd = d[l];||| 28 return;||| 29 }||| 30 int mid = (l + r) >> 1;||| 31 build(rt << 1, l, mid);||| 32 build(rt << 1 | 1, mid + 1, r);||| 33 push_up(rt);||| 34 }||| 35 void update(int rt, long long c, int l, int r, int pow) {||| 36 if (l == r) {||| 37 tree[rt].gcd += c;||| 38 return;||| 39 }||| 40 int mid = (l + r) >> 1;||| 41 if (pow <= mid)||| 42 update(rt << 1, c, l, mid, pow);||| 43 else||| 44 update(rt << 1 | 1, c, mid + 1, r, pow);||| 45 push_up(rt);||| 46 }||| 47 long long query(int rt, int l, int r, int L, int R) {||| 48 if (L <= l && r <= R) return tree[rt].gcd;||| 49 int mid = (l + r) >> 1;||| 50 long long g = 0;||| 51 if (L <= mid) g = abs(gcd(g, query(rt << 1, l, mid, L, R)));||| 52 if (R > mid) g = abs(gcd(g, query(rt << 1 | 1, mid + 1, r, L, R)));||| 53 return g;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0), cout.tie(0);||| 58 int T;||| 59 cin >> T;||| 60 while (T--) {||| 61 cin >> n;||| 62 for (int i = 1; i <= n; i++) cin >> a[i];||| 63 if (n == 1)||| 64 cout << 1 << endl;||| 65 else {||| 66 for (int i = 2; i <= n; i++) d[i - 1] = abs(a[i] - a[i - 1]);||| 67 build(1, 1, n - 1);||| 68 int miao = 0;||| 69 for (int i = 1; i <= n - 1; i++) {||| 70 int l = i, r = n - 1;||| 71 int ans = 0;||| 72 while (l <= r) {||| 73 int mid = (l + r) >> 1;||| 74 if (query(1, 1, n - 1, i, mid) > 1) {||| 75 l = mid + 1;||| 76 ans = mid;||| 77 } else||| 78 r = mid - 1;||| 79 }||| 80 miao = max(miao, ans - i + 2);||| 81 }||| 82 cout << miao << endl;||| 83 }||| 84 }||| 85 return ~~(0 - 0);||| 86 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 const int maxm = 1e6 + 5;||| 5 const int inf = 0x3f3f3f3f;||| 6 const int mod = 998244353;||| 7 const double eps = 1e-10;||| 8 int dir[4][2] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};||| 9 mt19937 rnd(||| 10 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 11 int n;||| 12 long long a[maxn], d[maxn];||| 13 long long gcd(long long a, long long b) {||| 14 if (!b)||| 15 return a;||| 16 else||| 17 return gcd(b, a % b);||| 18 }||| 19 struct node {||| 20 long long gcd;||| 21 } tree[maxn << 2];||| 22 void push_up(int rt) {||| 23 tree[rt].gcd = abs(gcd(tree[rt << 1].gcd, tree[rt << 1 | 1].gcd));||| 24 }||| 25 void build(int rt, int l, int r) {||| 26 if (l == r) {||| 27 tree[rt].gcd = d[l];||| 28 return;||| 29 }||| 30 int mid = (l + r) >> 1;||| 31 build(rt << 1, l, mid);||| 32 build(rt << 1 | 1, mid + 1, r);||| 33 push_up(rt);||| 34 }||| 35 void update(int rt, long long c, int l, int r, int pow) {||| 36 if (l == r) {||| 37 tree[rt].gcd += c;||| 38 return;||| 39 }||| 40 int mid = (l + r) >> 1;||| 41 if (pow <= mid)||| 42 update(rt << 1, c, l, mid, pow);||| 43 else||| 44 update(rt << 1 | 1, c, mid + 1, r, pow);||| 45 push_up(rt);||| 46 }||| 47 long long query(int rt, int l, int r, int L, int R) {||| 48 if (L <= l && r <= R) return tree[rt].gcd;||| 49 int mid = (l + r) >> 1;||| 50 long long g = 0;||| 51 if (L <= mid) g = abs(gcd(g, query(rt << 1, l, mid, L, R)));||| 52 if (R > mid) g = abs(gcd(g, query(rt << 1 | 1, mid + 1, r, L, R)));||| 53 return g;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0), cout.tie(0);||| 58 int T;||| 59 cin >> T;||| 60 while (T--) {||| 61 cin >> n;||| 62 for (int i = 1; i <= n; i++) cin >> a[i];||| 63 if (n == 1)||| 64 cout << 1;||| 65 else {||| 66 for (int i = 2; i <= n; i++) d[i - 1] = abs(a[i] - a[i - 1]);||| 67 build(1, 1, n - 1);||| 68 int miao = 0;||| 69 for (int i = 1; i <= n - 1; i++) {||| 70 int l = i, r = n - 1;||| 71 int ans = 0;||| 72 while (l <= r) {||| 73 int mid = (l + r) >> 1;||| 74 if (query(1, 1, n - 1, i, mid) > 1) {||| 75 l = mid + 1;||| 76 ans = mid;||| 77 } else||| 78 r = mid - 1;||| 79 }||| 80 miao = max(miao, ans - i + 2);||| 81 }||| 82 cout << miao << endl;||| 83 }||| 84 }||| 85 return ~~(0 - 0);||| 86 }||| 	64 cout << 1 << endl;
7	438	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 inline long long ab(long long x) { return x < 0 ? -x : x; }||| 5 inline long long gcd(long long a, long long b) {||| 6 return b == 0 ? a : gcd(b, a % b);||| 7 }||| 8 long long a[N], dt[N];||| 9 long long g[N][21];||| 10 int lg[N], n;||| 11 void init() {||| 12 for (int i = 2; i < N; ++i) lg[i] = lg[i >> 1] + 1;||| 13 }||| 14 void st() {||| 15 for (int i = 1; i <= n; ++i) g[i][0] = a[i];||| 16 for (int k = 1; k <= lg[n]; ++k) {||| 17 for (int i = 1; i + (1 << k) - 1 <= n; ++i) {||| 18 g[i][k] = gcd(g[i][k - 1], g[i + (1 << k - 1)][k - 1]);||| 19 }||| 20 }||| 21 }||| 22 long long q(int l, int r) {||| 23 int k = lg[r - l + 1];||| 24 return gcd(g[l][k], g[r - (1 << k) + 1][k]);||| 25 }||| 26 bool qry(int x) {||| 27 if (x <= 0) return 1;||| 28 for (int i = 2; i + x - 1 <= n; ++i)||| 29 if (q(i, i + x - 1) != 1) return 1;||| 30 return 0;||| 31 }||| 32 int main() {||| 33 init();||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 cout.tie(0);||| 37 int _;||| 38 cin >> _;||| 39 while (_--) {||| 40 cin >> n;||| 41 for (int i = 1; i <= n; ++i) cin >> a[i];||| 42 for (int i = n; i; --i) a[i] = ab(a[i] - a[i - 1]);||| 43 st();||| 44 int ans = 0;||| 45 for (int r = 2, l = 2; r <= n; r++) {||| 46 while (l < r && q(l, r) == 1) l++;||| 47 if (q(l, r) != 1) ans = max(ans, r - l + 1);||| 48 }||| 49 ans++;||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 inline long long ab(long long x) { return x < 0 ? -x : x; }||| 5 inline long long gcd(long long a, long long b) {||| 6 return b == 0 ? a : gcd(b, a % b);||| 7 }||| 8 long long a[N], dt[N];||| 9 long long g[N][21];||| 10 int lg[N], n;||| 11 void init() {||| 12 for (int i = 2; i < N; ++i) lg[i] = lg[i >> 1] + 1;||| 13 }||| 14 void st() {||| 15 for (int i = 1; i <= n; ++i) g[i][0] = a[i];||| 16 for (int k = 1; k < lg[n]; ++k) {||| 17 for (int i = 1; i + (1 << k) - 1 <= n; ++i) {||| 18 g[i][k] = gcd(g[i][k - 1], g[i + (1 << k - 1)][k - 1]);||| 19 }||| 20 }||| 21 }||| 22 long long q(int l, int r) {||| 23 int k = lg[r - l + 1];||| 24 return gcd(g[l][k], g[r - (1 << k) + 1][k]);||| 25 }||| 26 bool qry(int x) {||| 27 if (x <= 0) return 1;||| 28 for (int i = 2; i + x - 1 <= n; ++i)||| 29 if (q(i, i + x - 1) != 1) return 1;||| 30 return 0;||| 31 }||| 32 int main() {||| 33 init();||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 cout.tie(0);||| 37 int _;||| 38 cin >> _;||| 39 while (_--) {||| 40 cin >> n;||| 41 for (int i = 1; i <= n; ++i) cin >> a[i];||| 42 for (int i = n; i; --i) a[i] = ab(a[i] - a[i - 1]);||| 43 st();||| 44 int ans = 0;||| 45 for (int r = 2, l = 2; r <= n; r++) {||| 46 while (l < r && q(l, r) == 1) l++;||| 47 if (q(l, r) != 1) ans = max(ans, r - l + 1);||| 48 }||| 49 ans++;||| 50 cout << ans << '\n';||| 51 }||| 52 return 0;||| 53 }||| 	16 for (int k = 1; k <= lg[n]; ++k) {
7	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MAXN = 200005;||| 4 const long long K = 24;||| 5 long long st[MAXN][K + 1];||| 6 long long LOG[MAXN];||| 7 long long gcd(long long a, long long b) {||| 8 if (b == 0) return a;||| 9 return gcd(b, a % b);||| 10 }||| 11 long long query(long long L, long long R) {||| 12 long long j = LOG[R - L + 1];||| 13 return gcd(st[L][j], st[R - (1 << j) + 1][j]);||| 14 }||| 15 void solve() {||| 16 long long n;||| 17 cin >> n;||| 18 vector<long long> v(n);||| 19 for (auto &i : v) cin >> i;||| 20 if (n == 1) {||| 21 cout << 1 << ""\n"";||| 22 return;||| 23 }||| 24 long long m = n - 1;||| 25 vector<long long> diff(m);||| 26 for (long long i = 0; i < m; i++) diff[i] = abs(v[i + 1] - v[i]);||| 27 for (long long i = 0; i < m; i++) st[i][0] = diff[i];||| 28 for (long long j = 1; j <= K; j++) {||| 29 for (long long i = 0; i + (1 << j) <= m; i++) {||| 30 st[i][j] = gcd(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);||| 31 }||| 32 }||| 33 long long j = 0;||| 34 long long ans = 1;||| 35 for (long long i = 0; i < m; i++) {||| 36 while (j <= i && query(j, i) == 1) j++;||| 37 ans = max(ans, i - j + 2);||| 38 }||| 39 cout << ans << ""\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(NULL);||| 44 LOG[1] = 0;||| 45 for (long long i = 2; i < MAXN; i++) LOG[i] = LOG[i / 2] + 1;||| 46 long long tc;||| 47 tc = 1;||| 48 cin >> tc;||| 49 while (tc--) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MAXN = 200005;||| 4 const long long K = 24;||| 5 long long st[MAXN][K + 1];||| 6 long long LOG[MAXN];||| 7 long long gcd(long long a, long long b) {||| 8 if (b == 0) return a;||| 9 return gcd(b, a % b);||| 10 }||| 11 long long query(long long L, long long R) {||| 12 long long j = LOG[R - L + 1];||| 13 return gcd(st[L][j], st[R - (1 << j) + 1][j]);||| 14 }||| 15 void solve() {||| 16 long long n;||| 17 cin >> n;||| 18 vector<long long> v(n);||| 19 for (auto &i : v) cin >> i;||| 20 if (n == 1) {||| 21 cout << 1 << ""\n"";||| 22 return;||| 23 }||| 24 long long m = n - 1;||| 25 vector<long long> diff(m);||| 26 for (long long i = 0; i < m; i++) diff[i] = abs(v[i + 1] - v[i]);||| 27 for (long long i = 0; i < m; i++) st[i][0] = diff[i];||| 28 for (long long j = 1; j <= K; j++) {||| 29 for (long long i = 0; i + (1 << j) <= m; i++) {||| 30 st[i][j] = gcd(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);||| 31 }||| 32 }||| 33 long long j = 0;||| 34 long long ans = 1;||| 35 for (long long i = 0; i < m; i++) {||| 36 while (j < i && query(j, i) == 1) j++;||| 37 ans = max(ans, i - j + 2);||| 38 }||| 39 cout << ans << ""\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(NULL);||| 44 LOG[1] = 0;||| 45 for (long long i = 2; i < MAXN; i++) LOG[i] = LOG[i / 2] + 1;||| 46 long long tc;||| 47 tc = 1;||| 48 cin >> tc;||| 49 while (tc--) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	36 while (j <= i && query(j, i) == 1) j++;
7	295	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }||| 5 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 6 long long seg[4 * N], a[N];||| 7 void build(int p, int s, int e) {||| 8 if (s == e) {||| 9 seg[p] = a[s];||| 10 return;||| 11 }||| 12 int m = (s + e) / 2;||| 13 build(2 * p, s, m);||| 14 build(2 * p + 1, m + 1, e);||| 15 seg[p] = gcd(seg[2 * p], seg[2 * p + 1]);||| 16 }||| 17 long long query(int p, int s, int e, int l, int r) {||| 18 if (s > r || e < l) return 0;||| 19 if (l <= s && e <= r) return seg[p];||| 20 int m = (s + e) / 2;||| 21 return gcd(query(2 * p, s, m, l, r), query(2 * p + 1, m + 1, e, l, r));||| 22 }||| 23 void solve() {||| 24 int n;||| 25 scanf(""%d"", &n);||| 26 long long a[n];||| 27 for (int i = 0; i < n; ++i) {||| 28 scanf(""%lld"", a + i);||| 29 }||| 30 for (int i = 0; i < n - 1; ++i) {||| 31 ::a[i] = abs(a[i] - a[i + 1]);||| 32 }||| 33 build(1, 0, n - 1);||| 34 long long l = 0, ans = 1;||| 35 for (int r = 0; r < n - 1; ++r) {||| 36 while (r >= l && query(1, 0, n - 1, l, r) == 1) {||| 37 ++l;||| 38 }||| 39 ans = max(ans, r - l + 2);||| 40 }||| 41 printf(""%lld\n"", ans);||| 42 }||| 43 int main() {||| 44 int t = 1;||| 45 scanf(""%d"", &t);||| 46 while (t--) solve();||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 long long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }||| 5 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 6 long long seg[4 * N], a[N];||| 7 void build(int p, int s, int e) {||| 8 if (s == e) {||| 9 seg[p] = a[s];||| 10 return;||| 11 }||| 12 int m = (s + e) / 2;||| 13 build(2 * p, s, m);||| 14 build(2 * p + 1, m + 1, e);||| 15 seg[p] = gcd(seg[2 * p], seg[2 * p + 1]);||| 16 }||| 17 long long query(int p, int s, int e, int l, int r) {||| 18 if (s > r || e < l) return 0;||| 19 if (l <= s && e <= r) return seg[p];||| 20 int m = (s + e) / 2;||| 21 return gcd(query(2 * p, s, m, l, r), query(2 * p + 1, m + 1, e, l, r));||| 22 }||| 23 void solve() {||| 24 int n;||| 25 scanf(""%d"", &n);||| 26 long long a[n];||| 27 for (int i = 0; i < n; ++i) {||| 28 scanf(""%lld"", a + i);||| 29 }||| 30 for (int i = 0; i < n - 1; ++i) {||| 31 ::a[i] = abs(a[i] - a[i + 1]);||| 32 }||| 33 build(1, 0, n - 1);||| 34 long long l = 0, ans = 0;||| 35 for (int r = 0; r < n - 1; ++r) {||| 36 while (r >= l && query(1, 0, n - 1, l, r) == 1) {||| 37 ++l;||| 38 }||| 39 ans = max(ans, r - l + 2);||| 40 }||| 41 printf(""%lld\n"", ans);||| 42 }||| 43 int main() {||| 44 int t = 1;||| 45 scanf(""%d"", &t);||| 46 while (t--) solve();||| 47 }||| "	34 long long l = 0, ans = 1;
8	285	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 long long x;||| 8 scanf(""%lld"", &x);||| 9 int di = x / 3;||| 10 if (x % 3 == 2) {||| 11 di++;||| 12 } else if (x % 3 == 1) {||| 13 }||| 14 printf(""%lld %d\n"", x - 2 * di, di);||| 15 }||| 16 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 long long x;||| 8 scanf(""%lld"", &x);||| 9 int di = x / 3;||| 10 if (x % 3 == 2) {||| 11 di++;||| 12 } else if (x % 3 == 1) {||| 13 }||| 14 printf(""%d %d\n"", x - 2 * di, di);||| 15 }||| 16 }||| "	"14 printf(""%lld %d\n"", x - 2 * di, di);"
8	475	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MX = 1e7 + 123;||| 4 long long arr[MX];||| 5 long long brr[MX];||| 6 long long crr[MX];||| 7 void solve() {||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n;||| 12 cin >> n;||| 13 if (n % 3 == 0) {||| 14 cout << n / 3 << "" "" << n / 3 << '\n';||| 15 } else if (n % 3 == 1) {||| 16 cout << n / 3 + 1 << "" "" << n / 3 << '\n';||| 17 } else if (n % 3 == 2) {||| 18 cout << n / 3 << "" "" << n / 3 + 1 << '\n';||| 19 }||| 20 }||| 21 }||| 22 int32_t main() {||| 23 ios_base::sync_with_stdio(0);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 ;||| 27 solve();||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MX = 1e7 + 123;||| 4 long long arr[MX];||| 5 long long brr[MX];||| 6 long long crr[MX];||| 7 void solve() {||| 8 long long t;||| 9 cin >> t;||| 10 while (t--) {||| 11 long long n;||| 12 cin >> n;||| 13 if (n % 3 == 0) {||| 14 cout << n / 3 << "" "" << n / 3 << '\n';||| 15 } else if (n % 3 == 1) {||| 16 cout << n / 3 + 1 << "" "" << n / 3 << '\n';||| 17 } else if (n % 3 == 2) {||| 18 cout << n / 3 << "" "" << n / 3 + 2 << '\n';||| 19 }||| 20 }||| 21 }||| 22 int32_t main() {||| 23 ios_base::sync_with_stdio(0);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 ;||| 27 solve();||| 28 return 0;||| 29 }||| "	"18 cout << n / 3 << "" "" << n / 3 + 1 << '\n';"
8	385	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, i;||| 4 scanf(""%d"", &t);||| 5 long n[t], n1[t], n2[t];||| 6 for (i = 0; i < t; i++) {||| 7 scanf(""%ld"", &n[i]);||| 8 if ((n[i] % 3) == 1) {||| 9 n1[i] = (n[i] / 3) + 1;||| 10 n2[i] = n1[i] - 1;||| 11 } else if ((n[i] % 3) == 2) {||| 12 n1[i] = n[i] / 3;||| 13 n2[i] = n1[i] + 1;||| 14 } else if ((n[i] % 3) == 0) {||| 15 n1[i] = n[i] / 3;||| 16 n2[i] = n1[i];||| 17 }||| 18 }||| 19 for (i = 0; i < t; i++) printf(""%ld %ld\n"", n1[i], n2[i]);||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t, i;||| 4 scanf(""%d"", &t);||| 5 long n[t], n1[t], n2[t];||| 6 for (i = 0; i < t; i++) {||| 7 scanf(""%ld"", &n[i]);||| 8 if ((n[i] % 3) == 1) {||| 9 n1[i] = (n[i] / 3) + 1;||| 10 n2[i] = n1[i] - 1;||| 11 } else if ((n[i] % 3) == 2) {||| 12 n1[i] = n[i] / 3;||| 13 n2[i] = n1[i] + 1;||| 14 } else if ((n[i] % 3) == 0) {||| 15 n1[i] = n[i] / 3;||| 16 n2[i] = n1[i];||| 17 }||| 18 }||| 19 for (i = 0; i < t; i++) printf(""%ld %d"", n1[i], n2[i]);||| 20 }||| "	"19 for (i = 0; i < t; i++) printf(""%ld %ld\n"", n1[i], n2[i]);"
8	349	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 unsigned int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 unsigned long long n;||| 8 cin >> n;||| 9 unsigned long long rem = n % 3;||| 10 if (n < 3) {||| 11 if (n == 1)||| 12 cout << 1 << "" "" << 0 << ""\n"";||| 13 else {||| 14 cout << 0 << "" "" << 1 << ""\n"";||| 15 }||| 16 } else {||| 17 if (rem == 1) {||| 18 cout << (n / 3) + 1 << "" "" << (n / 3) << ""\n"";||| 19 } else if (rem == 2) {||| 20 cout << (n / 3) << "" "" << (n / 3) + 1 << ""\n"";||| 21 } else {||| 22 cout << (n / 3) << "" "" << (n / 3) << ""\n"";||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 unsigned int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 unsigned long long n;||| 8 cin >> n;||| 9 unsigned long long rem = n % 3;||| 10 if (n < 3) {||| 11 if (n == 1)||| 12 cout << 1 << "" "" << 0 << ""\n"";||| 13 else {||| 14 cout << 0 << "" "" << 2 << ""\n"";||| 15 }||| 16 } else {||| 17 if (rem == 1) {||| 18 cout << (n / 3) + 1 << "" "" << (n / 3) << ""\n"";||| 19 } else if (rem == 2) {||| 20 cout << (n / 3) << "" "" << (n / 3) + 1 << ""\n"";||| 21 } else {||| 22 cout << (n / 3) << "" "" << (n / 3) << ""\n"";||| 23 }||| 24 }||| 25 }||| 26 return 0;||| 27 }||| "	"14 cout << 0 << "" "" << 1 << ""\n"";"
8	280	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 10e9 + 7;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 if (n % 3 == 0) {||| 12 cout << (n / 3) << "" "" << (n / 3) << ""\n"";||| 13 } else if (n % 3 == 1) {||| 14 cout << ((n - 1) / 3) + 1 << "" "" << ((n - 1) / 3) << ""\n"";||| 15 } else if (n % 3 == 2) {||| 16 cout << ((n - 1) / 3) << "" "" << ((n - 1) / 3) + 1 << ""\n"";||| 17 }||| 18 }||| 19 return 0;||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 10e9 + 7;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long n;||| 10 cin >> n;||| 11 if (n % 3 == 0) {||| 12 cout << (n / 3) << "" "" << (n / 3) << ""\n"";||| 13 } else if (n % 3 == 1) {||| 14 cout << ((n - 1) / 3) + 1 << "" "" << ((n - 1) / 3) << ""\n"";||| 15 } else if (n % 3 == 2) {||| 16 cout << ((n - 1) / 3) << "" "" << ceil((n - 1) / 3) + 1 << ""\n"";||| 17 }||| 18 }||| 19 return 0;||| 20 }||| "	"16 cout << ((n - 1) / 3) << "" "" << ((n - 1) / 3) + 1 << ""\n"";"
8	373	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 if (n == 1) {||| 7 cout << ""1 0"";||| 8 return;||| 9 } else if (n == 2) {||| 10 cout << ""0 1"";||| 11 return;||| 12 }||| 13 long long a = n / 3;||| 14 long long b = (n - a) / 2;||| 15 if (a + b * 2 != n) {||| 16 a++;||| 17 }||| 18 cout << a << ' ' << b;||| 19 }||| 20 int main() {||| 21 int T = 1;||| 22 cin >> T;||| 23 while (T--) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 if (n == 1) {||| 7 cout << ""1 0"";||| 8 return;||| 9 } else if (n == 2) {||| 10 cout << ""0 1"";||| 11 return;||| 12 }||| 13 long long a = n / 3;||| 14 long long b = (n - a) / 2;||| 15 if (a + b * 2 != n) {||| 16 b++;||| 17 }||| 18 cout << a << ' ' << b;||| 19 }||| 20 int main() {||| 21 int T = 1;||| 22 cin >> T;||| 23 while (T--) {||| 24 solve();||| 25 cout << ""\n"";||| 26 }||| 27 return 0;||| 28 }||| "	16 a++;
8	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""avx,avx2,fma"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 unsigned int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long int n;||| 13 cin >> n;||| 14 if (n % 3 == 0)||| 15 cout << n / 3 << "" "" << n / 3 << endl;||| 16 else if (n % 3 == 1)||| 17 cout << n / 3 + 1 << "" "" << n / 3 << endl;||| 18 else||| 19 cout << n / 3 << "" "" << n / 3 + 1 << endl;||| 20 }||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""avx,avx2,fma"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 unsigned int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 long long int n;||| 13 cin >> n;||| 14 if (n % 3 == 0)||| 15 cout << n / 3 << "" "" << n / 3 << endl;||| 16 else if (n % 3 == 0)||| 17 cout << n / 3 + 1 << "" "" << n / 3 << endl;||| 18 else||| 19 cout << n / 3 << "" "" << n / 3 + 1 << endl;||| 20 }||| 21 }||| "	16 else if (n % 3 == 1)
8	323	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int n;||| 4 scanf(""%d"", &n);||| 5 while (n--) {||| 6 double a;||| 7 scanf(""%lf"", &a);||| 8 double s = round(a / 3);||| 9 printf(""%.0f %.0f\n"", a - (s * 2), s);||| 10 }||| 11 return 0;||| 12 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int n;||| 4 scanf(""%d"", &n);||| 5 while (n--) {||| 6 double a;||| 7 scanf(""%lf"", &a);||| 8 double s = round(a / 3);||| 9 printf(""%.0lf %.0lf\n"", a - (s * 2), s);||| 10 }||| 11 return 0;||| 12 }||| "	"9 printf(""%.0f %.0f\n"", a - (s * 2), s);"
8	213	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n;||| 4 long long fn;||| 5 long long f(long long x) { return fabs(fn - 3.0 * x); }||| 6 void out_pair(long long x) {||| 7 cout << (int)(fn - 2.0 * x) << ' ' << (int)x << '\n';||| 8 return;||| 9 }||| 10 int main() {||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n;||| 14 fn = (long long)n;||| 15 if (n % 3 == 0) {||| 16 out_pair(fn / 3.0);||| 17 } else {||| 18 if (ceil(fn / 3.0) <= fn / 2.0) {||| 19 if (f(ceil(fn / 3.0)) < f(floor(fn / 3.0))) {||| 20 out_pair(ceil(fn / 3.0));||| 21 } else||| 22 out_pair(floor(fn / 3.0));||| 23 } else||| 24 out_pair(floor(fn / 3.0));||| 25 }||| 26 }||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n;||| 4 long long fn;||| 5 long long f(long long x) { return fabs(fn - 3.0 * x); }||| 6 void out_pair(long long x) {||| 7 cout << (int)(fn - 2.0 * x) << ' ' << (int)x << '\n';||| 8 return;||| 9 }||| 10 int main() {||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n;||| 14 fn = (long long)n;||| 15 if (n % 3 == 0) {||| 16 out_pair(fn / 3.0);||| 17 } else {||| 18 if (ceil(fn / 3.0) < fn / 2.0) {||| 19 if (f(ceil(fn / 3.0)) < f(floor(fn / 3.0))) {||| 20 out_pair(ceil(fn / 3.0));||| 21 } else||| 22 out_pair(floor(fn / 3.0));||| 23 } else||| 24 out_pair(floor(fn / 3.0));||| 25 }||| 26 }||| 27 return 0;||| 28 }||| 	18 if (ceil(fn / 3.0) <= fn / 2.0) {
8	458	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 int main() {||| 5 long long t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long n;||| 9 cin >> n;||| 10 long long c1, c2, c3, c4;||| 11 for (long long i = 0; i < 1e3; i++) {||| 12 if ((n - i) % 3 == 0) {||| 13 c2 = (n - i) / 3;||| 14 c1 = c2 + i;||| 15 break;||| 16 }||| 17 }||| 18 long long diff1 = c1 - c2;||| 19 for (long long i = 0; i < 1e3; i++) {||| 20 if ((n - 2 * i) % 3 == 0) {||| 21 c3 = (n - 2 * i) / 3;||| 22 c4 = c3 + i;||| 23 break;||| 24 }||| 25 }||| 26 long long diff2 = c4 - c3;||| 27 if (diff1 <= diff2) {||| 28 cout << c1 << "" "" << c2 << '\n';||| 29 } else {||| 30 cout << c3 << "" "" << c4 << '\n';||| 31 }||| 32 }||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 int main() {||| 5 long long t;||| 6 cin >> t;||| 7 while (t--) {||| 8 long long n;||| 9 cin >> n;||| 10 long long c1, c2, c3, c4;||| 11 for (long long i = 0; i < 1e3; i++) {||| 12 if ((n - i) % 3 == 0) {||| 13 c2 = (n - i) / 3;||| 14 c1 = c2 + i;||| 15 break;||| 16 }||| 17 }||| 18 long long diff1 = c1 - c2;||| 19 for (long long i = 0; i < 1e3; i++) {||| 20 if ((n - 2 * i) % 3 == 0) {||| 21 c3 = (n - 2 * i) / 3;||| 22 c4 = c3 + i;||| 23 break;||| 24 }||| 25 }||| 26 long long diff2 = c4 - c3;||| 27 if (diff1 <= diff2) {||| 28 cout << c2 << "" "" << c1 << '\n';||| 29 } else {||| 30 cout << c3 << "" "" << c4 << '\n';||| 31 }||| 32 }||| 33 return 0;||| 34 }||| "	"28 cout << c1 << "" "" << c2 << '\n';"
9	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T min_(T a, T b) {||| 5 return a > b ? b : a;||| 6 }||| 7 template <typename T, typename... Ts>||| 8 T min_(T first, Ts... last) {||| 9 return min_(first, min_(last...));||| 10 }||| 11 template <typename T, typename T1>||| 12 T amax(T& a, T1 b) {||| 13 if (b > a) a = b;||| 14 return a;||| 15 }||| 16 template <typename T, typename T1>||| 17 T amin(T& a, T1 b) {||| 18 if (b < a) a = b;||| 19 return a;||| 20 }||| 21 template <class T, class S>||| 22 std::ostream& operator<<(std::ostream& os, const std::pair<T, S>& t) {||| 23 os << ""("" << t.first << "", "" << t.second << "")"";||| 24 return os;||| 25 }||| 26 template <typename T>||| 27 ostream& operator<<(ostream& out, const vector<T>& v) {||| 28 out << ""["";||| 29 size_t last = v.size() - 1;||| 30 for (size_t i = 0; i < v.size(); ++i) {||| 31 out << v[i];||| 32 if (i != last) out << "", "";||| 33 }||| 34 out << ""]"";||| 35 return out;||| 36 }||| 37 void solve() {||| 38 string s;||| 39 cin >> s;||| 40 int n = s.length();||| 41 int cnt[27];||| 42 memset(cnt, 0, sizeof cnt);||| 43 int red = 0;||| 44 for (auto i = 0; i < n; i++) {||| 45 if (cnt[s[i] - 'a'] >= 2) continue;||| 46 cnt[s[i] - 'a']++;||| 47 red++;||| 48 }||| 49 cout << red / 2 << '\n';||| 50 }||| 51 int32_t main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(nullptr);||| 54 int T = 1;||| 55 cin >> T;||| 56 while (T--) {||| 57 solve();||| 58 }||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T min_(T a, T b) {||| 5 return a > b ? b : a;||| 6 }||| 7 template <typename T, typename... Ts>||| 8 T min_(T first, Ts... last) {||| 9 return min_(first, min_(last...));||| 10 }||| 11 template <typename T, typename T1>||| 12 T amax(T& a, T1 b) {||| 13 if (b > a) a = b;||| 14 return a;||| 15 }||| 16 template <typename T, typename T1>||| 17 T amin(T& a, T1 b) {||| 18 if (b < a) a = b;||| 19 return a;||| 20 }||| 21 template <class T, class S>||| 22 std::ostream& operator<<(std::ostream& os, const std::pair<T, S>& t) {||| 23 os << ""("" << t.first << "", "" << t.second << "")"";||| 24 return os;||| 25 }||| 26 template <typename T>||| 27 ostream& operator<<(ostream& out, const vector<T>& v) {||| 28 out << ""["";||| 29 size_t last = v.size() - 1;||| 30 for (size_t i = 0; i < v.size(); ++i) {||| 31 out << v[i];||| 32 if (i != last) out << "", "";||| 33 }||| 34 out << ""]"";||| 35 return out;||| 36 }||| 37 void solve() {||| 38 string s;||| 39 cin >> s;||| 40 int n = s.length();||| 41 int cnt[27];||| 42 memset(cnt, 0, sizeof cnt);||| 43 int red = 0;||| 44 for (auto i = 0; i < n; i++) {||| 45 if (cnt[s[i] - 'a'] > 2) continue;||| 46 cnt[s[i] - 'a']++;||| 47 red++;||| 48 }||| 49 cout << red / 2 << '\n';||| 50 }||| 51 int32_t main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(nullptr);||| 54 int T = 1;||| 55 cin >> T;||| 56 while (T--) {||| 57 solve();||| 58 }||| 59 }||| "	45 if (cnt[s[i] - 'a'] >= 2) continue;
9	398	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s;||| 11 cin >> s;||| 12 long long a[26] = {0};||| 13 long long cnt = 0;||| 14 for (long long i = 0; i < s.size(); i++) {||| 15 a[s[i] - 97]++;||| 16 }||| 17 for (long long i = 0; i < 26; i++) {||| 18 if (a[i] <= 2)||| 19 cnt += a[i];||| 20 else||| 21 cnt += 2;||| 22 }||| 23 cout << cnt / 2 << ""\n"";||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 string s;||| 11 cin >> s;||| 12 long long a[26] = {0};||| 13 long long cnt = 0;||| 14 for (long long i = 0; i < s.size(); i++) {||| 15 a[s[i] - 97]++;||| 16 }||| 17 for (long long i = 0; i < 26; i++) {||| 18 if (a[i] <= 3)||| 19 cnt += a[i];||| 20 else||| 21 cnt += 3;||| 22 }||| 23 cout << cnt / 2 << ""\n"";||| 24 }||| 25 return 0;||| 26 }||| "	18 if (a[i] <= 2)
9	149	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 char s = '1';||| 5 int num = 0;||| 6 } e[60];||| 7 char a[60];||| 8 int main() {||| 9 int t;||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 for (int i = 0; i < 55; i++) {||| 13 e[i].s = '1';||| 14 e[i].num = 0;||| 15 }||| 16 int n;||| 17 scanf(""%s"", a);||| 18 int len = strlen(a);||| 19 if (len == 1) {||| 20 printf(""0\n"");||| 21 continue;||| 22 }||| 23 int num = 0;||| 24 for (int i = 0; i < len; i++) {||| 25 int flag = 0;||| 26 for (int j = 0; j < len; j++) {||| 27 if (a[i] == e[j].s) {||| 28 e[j].num++;||| 29 flag = 1;||| 30 }||| 31 }||| 32 if (flag == 0) {||| 33 e[num].s = a[i];||| 34 e[num].num++;||| 35 num++;||| 36 }||| 37 }||| 38 int num1 = 0, numn = 0;||| 39 for (int i = 0; i < num; i++) {||| 40 if (e[i].num == 1) num1++;||| 41 if (e[i].num >= 2) numn++;||| 42 }||| 43 int sum = 0;||| 44 if (num1 % 2 == 1) {||| 45 sum = (num1 - 1) / 2 + numn;||| 46 } else {||| 47 sum = num1 / 2 + numn;||| 48 }||| 49 printf(""%d\n"", sum);||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 char s = '1';||| 5 int num = 0;||| 6 } e[60];||| 7 char a[60];||| 8 int main() {||| 9 int t;||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 for (int i = 0; i <= 10; i++) {||| 13 e[i].s = '1';||| 14 e[i].num = 0;||| 15 }||| 16 int n;||| 17 scanf(""%s"", a);||| 18 int len = strlen(a);||| 19 if (len == 1) {||| 20 printf(""0\n"");||| 21 continue;||| 22 }||| 23 int num = 0;||| 24 for (int i = 0; i < len; i++) {||| 25 int flag = 0;||| 26 for (int j = 0; j < len; j++) {||| 27 if (a[i] == e[j].s) {||| 28 e[j].num++;||| 29 flag = 1;||| 30 }||| 31 }||| 32 if (flag == 0) {||| 33 e[num].s = a[i];||| 34 e[num].num++;||| 35 num++;||| 36 }||| 37 }||| 38 int num1 = 0, numn = 0;||| 39 for (int i = 0; i < num; i++) {||| 40 if (e[i].num == 1) num1++;||| 41 if (e[i].num >= 2) numn++;||| 42 }||| 43 int sum = 0;||| 44 if (num1 % 2 == 1) {||| 45 sum = (num1 - 1) / 2 + numn;||| 46 } else {||| 47 sum = num1 / 2 + numn;||| 48 }||| 49 printf(""%d\n"", sum);||| 50 }||| 51 return 0;||| 52 }||| "	12 for (int i = 0; i < 55; i++) {
9	135	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dr[] = {-1, 0, 1, 0, -1, 1, 1, -1};||| 4 int dc[] = {0, 1, 0, -1, 1, 1, -1, -1};||| 5 using namespace std;||| 6 long long q, n, k;||| 7 int cnt[26 + 7];||| 8 int main() {||| 9 cin >> q;||| 10 while (q--) {||| 11 memset(cnt, 0, sizeof(cnt));||| 12 string tmp;||| 13 cin >> tmp;||| 14 for (int i = 0; i < tmp.length(); i++) {||| 15 cnt[tmp[i] - 97]++;||| 16 }||| 17 if (0) {||| 18 for (int i = 0; i < 26; i++) cout << cnt[i] << "" "";||| 19 cout << endl;||| 20 }||| 21 long long single = 0, more = 0;||| 22 for (int i = 0; i < 26; i++) {||| 23 if (cnt[i] == 1)||| 24 single++;||| 25 else if (cnt[i] > 1)||| 26 more++;||| 27 }||| 28 single = floor(single / 2);||| 29 cout << single + more << endl;||| 30 }||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dr[] = {-1, 0, 1, 0, -1, 1, 1, -1};||| 4 int dc[] = {0, 1, 0, -1, 1, 1, -1, -1};||| 5 using namespace std;||| 6 long long q, n, k;||| 7 int cnt[26 + 7];||| 8 int main() {||| 9 cin >> q;||| 10 while (q--) {||| 11 memset(cnt, 0, sizeof(cnt));||| 12 string tmp;||| 13 cin >> tmp;||| 14 for (int i = 0; i < tmp.length(); i++) {||| 15 cnt[tmp[i] - 97]++;||| 16 }||| 17 if (1) {||| 18 for (int i = 0; i < 26; i++) cout << cnt[i] << "" "";||| 19 cout << endl;||| 20 }||| 21 long long single = 0, more = 0;||| 22 for (int i = 0; i < 26; i++) {||| 23 if (cnt[i] == 1)||| 24 single++;||| 25 else if (cnt[i] > 1)||| 26 more++;||| 27 }||| 28 single = floor(single / 2);||| 29 cout << single + more << endl;||| 30 }||| 31 }||| "	17 if (0) {
9	22	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool test = 1;||| 4 void solve() {||| 5 string s;||| 6 cin >> s;||| 7 int hash[26] = {0};||| 8 for (auto x : s) {||| 9 hash[x - 'a']++;||| 10 }||| 11 long long sum = 0;||| 12 for (int i = 0; i < 26; i++) {||| 13 sum += (hash[i] > 2) ? 2 : hash[i];||| 14 }||| 15 cout << sum / 2 << endl;||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(0);||| 19 cout.tie(0);||| 20 cin.tie(0);||| 21 if (test) {||| 22 int t;||| 23 cin >> t;||| 24 while (t--) solve();||| 25 } else||| 26 solve();||| 27 return 0;||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool test = 1;||| 4 void solve() {||| 5 string s;||| 6 cin >> s;||| 7 int hash[26] = {0};||| 8 for (auto x : s) {||| 9 hash[x - 'a']++;||| 10 }||| 11 long long sum = 0;||| 12 for (int i = 0; i < 26; i++) {||| 13 sum += (hash[i] > 3) ? 2 : hash[i];||| 14 }||| 15 cout << sum / 2 << endl;||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(0);||| 19 cout.tie(0);||| 20 cin.tie(0);||| 21 if (test) {||| 22 int t;||| 23 cin >> t;||| 24 while (t--) solve();||| 25 } else||| 26 solve();||| 27 return 0;||| 28 }||| 	13 sum += (hash[i] > 2) ? 2 : hash[i];
9	19	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 string s;||| 10 cin >> s;||| 11 sort(s.begin(), s.end());||| 12 int n = s.size();||| 13 for (int i = 0; i <= n - 3; i++) {||| 14 if (s[i] == s[i + 1] && s[i + 1] == s[i + 2]) {||| 15 s[i] = '*';||| 16 }||| 17 }||| 18 int c = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 if (s[i] != '*') {||| 21 c++;||| 22 }||| 23 }||| 24 cout << (c) / 2 << ""\n"";||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 string s;||| 10 cin >> s;||| 11 sort(s.begin(), s.end());||| 12 int n = s.size();||| 13 for (int i = 0; i < n - 3; i++) {||| 14 if (s[i] == s[i + 1] && s[i + 1] == s[i + 2]) {||| 15 s[i] = '*';||| 16 }||| 17 }||| 18 int c = 0;||| 19 for (int i = 0; i < n; i++) {||| 20 if (s[i] != '*') {||| 21 c++;||| 22 }||| 23 }||| 24 cout << (c) / 2 << ""\n"";||| 25 }||| 26 }||| "	13 for (int i = 0; i <= n - 3; i++) {
10	322	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fast() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 int a[200005];||| 9 map<int, vector<int> > mp;||| 10 void solve() {||| 11 int n, k;||| 12 cin >> n >> k;||| 13 mp.clear();||| 14 memset(a, 0, n * sizeof(a[0]));||| 15 for (int i = 0; i < n; i++) {||| 16 int x;||| 17 cin >> x;||| 18 if (mp[x].size() < k) mp[x].push_back(i);||| 19 }||| 20 int m = 0;||| 21 for (auto p : mp) m += p.second.size();||| 22 m -= m % k;||| 23 int color = 0;||| 24 bool ok = 0;||| 25 for (auto e : mp) {||| 26 for (auto c : e.second) {||| 27 a[c] = ++color;||| 28 color %= k;||| 29 if (--m == 0) {||| 30 ok = 1;||| 31 break;||| 32 }||| 33 }||| 34 if (ok) break;||| 35 }||| 36 if (ok) {||| 37 for (int i = 0; i < n; i++) cout << a[i] << "" "";||| 38 cout << '\n';||| 39 }||| 40 }||| 41 int main() {||| 42 fast();||| 43 int t = 1;||| 44 cin >> t;||| 45 for (int i = 0; i < t; i++) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void fast() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 }||| 8 int a[200001];||| 9 map<int, vector<int> > mp;||| 10 void solve() {||| 11 int n, k;||| 12 cin >> n >> k;||| 13 mp.clear();||| 14 memset(a, 0, n * sizeof(a[0]));||| 15 for (int i = 0; i < n; i++) {||| 16 int x;||| 17 cin >> x;||| 18 if (mp[i].size() < k) mp[x].push_back(i);||| 19 }||| 20 int m = 0;||| 21 for (auto p : mp) m += p.second.size();||| 22 m -= m % k;||| 23 int color = 0;||| 24 bool ok = 0;||| 25 for (auto e : mp) {||| 26 for (auto c : e.second) {||| 27 a[c] = ++color;||| 28 color %= k;||| 29 if (--m == 0) {||| 30 ok = 1;||| 31 break;||| 32 }||| 33 }||| 34 if (ok) break;||| 35 }||| 36 if (ok) {||| 37 for (int i = 0; i < n; i++) cout << a[i] << "" "";||| 38 cout << '\n';||| 39 }||| 40 }||| 41 int main() {||| 42 fast();||| 43 int t = 1;||| 44 cin >> t;||| 45 for (int i = 0; i < t; i++) {||| 46 solve();||| 47 }||| 48 return 0;||| 49 }||| "	8 int a[200005];
10	107	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int tam = 1e9 + 5;||| 4 void solve() {||| 5 int n, k;||| 6 cin >> n >> k;||| 7 vector<int> f[n + 1];||| 8 for (int i = 1; i <= n; i++) {||| 9 int aux;||| 10 cin >> aux;||| 11 f[aux].push_back(i - 1);||| 12 }||| 13 vector<int> ans(n);||| 14 vector<vector<int>> r;||| 15 int t = 0;||| 16 for (int i = 1; i <= n; i++) {||| 17 if ((int)f[i].size() >= k) {||| 18 int c = 1;||| 19 for (auto &first : f[i]) {||| 20 ans[first] = c;||| 21 c++;||| 22 if (c > k) break;||| 23 }||| 24 } else {||| 25 t += (int)f[i].size();||| 26 r.push_back(f[i]);||| 27 }||| 28 }||| 29 if (t >= k) {||| 30 if (t % k) t -= (t % k);||| 31 int j = 1;||| 32 int c = 1;||| 33 for (auto &ri : r) {||| 34 for (auto &rii : ri) {||| 35 ans[rii] = c;||| 36 j++;||| 37 c++;||| 38 if (c > k) {||| 39 c = 1;||| 40 }||| 41 if (j > t) break;||| 42 }||| 43 if (j > t) break;||| 44 }||| 45 }||| 46 for (auto &ai : ans) cout << ai << ' ';||| 47 cout << '\n';||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 int t;||| 53 cin >> t;||| 54 while (t--) solve();||| 55 return 0;||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int tam = 1e9 + 5;||| 4 void solve() {||| 5 int n, k;||| 6 cin >> n >> k;||| 7 vector<int> f[n + 1];||| 8 for (int i = 1; i <= n; i++) {||| 9 int aux;||| 10 cin >> aux;||| 11 f[aux].push_back(i - 1);||| 12 }||| 13 vector<int> ans(n);||| 14 vector<vector<int>> r;||| 15 int t = 0;||| 16 for (int i = 1; i <= n; i++) {||| 17 if ((int)f[i].size() >= k) {||| 18 int c = 1;||| 19 for (auto &first : f[i]) {||| 20 ans[first] = c;||| 21 c++;||| 22 if (c > k) break;||| 23 }||| 24 } else {||| 25 t += (int)f[i].size();||| 26 r.push_back(f[i]);||| 27 }||| 28 }||| 29 if (t >= k) {||| 30 if (t % k) t -= (t % k);||| 31 int j = 1;||| 32 int c = 1;||| 33 for (auto &ri : r) {||| 34 for (auto &rii : ri) {||| 35 ans[rii] = c;||| 36 j++;||| 37 c++;||| 38 if (c > k) {||| 39 c = 1;||| 40 } else if (j > t)||| 41 break;||| 42 }||| 43 if (j > t) break;||| 44 }||| 45 }||| 46 for (auto &ai : ans) cout << ai << ' ';||| 47 cout << '\n';||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 int t;||| 53 cin >> t;||| 54 while (t--) solve();||| 55 return 0;||| 56 }||| 	40 }
11	129	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<int>> arr(5, vector<int>(200005));||| 4 int main() {||| 5 int t, n, i, ans, a, b, c, d, e, m, j, s, curr;||| 6 string s1;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n;||| 10 for (i = 0; i < n; i++) {||| 11 cin >> s1;||| 12 a = 0;||| 13 b = 0;||| 14 c = 0;||| 15 d = 0;||| 16 e = 0;||| 17 m = s1.size();||| 18 for (j = 0; j < m; j++) {||| 19 if (s1[j] == 'a')||| 20 a++;||| 21 else if (s1[j] == 'b')||| 22 b++;||| 23 else if (s1[j] == 'c')||| 24 c++;||| 25 else if (s1[j] == 'd')||| 26 d++;||| 27 else if (s1[j] == 'e')||| 28 e++;||| 29 }||| 30 arr[0][i] = a - (m - a);||| 31 arr[1][i] = b - (m - b);||| 32 arr[2][i] = c - (m - c);||| 33 arr[3][i] = d - (m - d);||| 34 arr[4][i] = e - (m - e);||| 35 }||| 36 for (i = 0; i < 5; i++)||| 37 sort(arr[i].begin(), arr[i].begin() + n, greater<int>());||| 38 ans = 0;||| 39 for (i = 0; i < 5; i++) {||| 40 curr = 0;||| 41 j = 0;||| 42 s = 0;||| 43 while (j < n && arr[i][j] > 0) {||| 44 s += arr[i][j];||| 45 curr++;||| 46 j++;||| 47 }||| 48 while (j < n && (s + arr[i][j]) > 0) {||| 49 s += arr[i][j];||| 50 curr++;||| 51 j++;||| 52 }||| 53 ans = max(ans, curr);||| 54 }||| 55 cout << ans << endl;||| 56 }||| 57 return 0;||| 58 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<vector<int>> arr(5, vector<int>(200005));||| 4 int main() {||| 5 int t, n, i, ans, a, b, c, d, e, m, j, s, curr;||| 6 string s1;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n;||| 10 for (i = 0; i < n; i++) {||| 11 cin >> s1;||| 12 a = 0;||| 13 b = 0;||| 14 c = 0;||| 15 d = 0;||| 16 e = 0;||| 17 m = s1.size();||| 18 for (j = 0; j < m; j++) {||| 19 if (s1[j] == 'a')||| 20 a++;||| 21 else if (s1[j] == 'b')||| 22 b++;||| 23 else if (s1[j] == 'c')||| 24 c++;||| 25 else if (s1[j] == 'd')||| 26 d++;||| 27 else if (s1[i] == 'e')||| 28 e++;||| 29 }||| 30 arr[0][i] = a - (m - a);||| 31 arr[1][i] = b - (m - b);||| 32 arr[2][i] = c - (m - c);||| 33 arr[3][i] = d - (m - d);||| 34 arr[4][i] = e - (m - e);||| 35 }||| 36 for (i = 0; i < 5; i++)||| 37 sort(arr[i].begin(), arr[i].begin() + n, greater<int>());||| 38 ans = 0;||| 39 for (i = 0; i < 5; i++) {||| 40 curr = 0;||| 41 j = 0;||| 42 s = 0;||| 43 while (j < n && arr[i][j] > 0) {||| 44 s += arr[i][j];||| 45 curr++;||| 46 j++;||| 47 }||| 48 while (j < n && (s + arr[i][j]) > 0) {||| 49 s += arr[i][j];||| 50 curr++;||| 51 j++;||| 52 }||| 53 ans = max(ans, curr);||| 54 }||| 55 cout << ans << endl;||| 56 }||| 57 return 0;||| 58 }||| 	27 else if (s1[j] == 'e')
11	270	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5 * 10000;||| 4 const long long mod = 1000000007;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n), b(n), c(n), d(n), e(n);||| 9 string str;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> str;||| 12 int qtd[] = {0, 0, 0, 0, 0};||| 13 for (char c : str) {||| 14 qtd[c - 'a']++;||| 15 }||| 16 a[i] = 2 * qtd[0] - str.length();||| 17 b[i] = 2 * qtd[1] - str.length();||| 18 c[i] = 2 * qtd[2] - str.length();||| 19 d[i] = 2 * qtd[3] - str.length();||| 20 e[i] = 2 * qtd[4] - str.length();||| 21 }||| 22 sort(a.rbegin(), a.rend());||| 23 sort(b.rbegin(), b.rend());||| 24 sort(c.rbegin(), c.rend());||| 25 sort(d.rbegin(), d.rend());||| 26 sort(e.rbegin(), e.rend());||| 27 int ans = 0;||| 28 int sum = 0, i = 0;||| 29 while (i < n && sum + a[i] > 0) {||| 30 sum += a[i];||| 31 i++;||| 32 }||| 33 ans = max(ans, i);||| 34 sum = 0, i = 0;||| 35 while (i < n && sum + b[i] > 0) {||| 36 sum += b[i];||| 37 i++;||| 38 }||| 39 ans = max(ans, i);||| 40 sum = 0, i = 0;||| 41 while (i < n && sum + c[i] > 0) {||| 42 sum += c[i];||| 43 i++;||| 44 }||| 45 ans = max(ans, i);||| 46 sum = 0, i = 0;||| 47 while (i < n && sum + d[i] > 0) {||| 48 sum += d[i];||| 49 i++;||| 50 }||| 51 ans = max(ans, i);||| 52 sum = 0, i = 0;||| 53 while (i < n && sum + e[i] > 0) {||| 54 sum += e[i];||| 55 i++;||| 56 }||| 57 ans = max(ans, i);||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 int tt = 1;||| 64 cin >> tt;||| 65 while (tt--) solve();||| 66 return 0;||| 67 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5 * 10000;||| 4 const long long mod = 1000000007;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n), b(n), c(n), d(n), e(n);||| 9 string str;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> str;||| 12 int qtd[] = {0, 0, 0, 0, 0};||| 13 for (char c : str) {||| 14 qtd[c - 'a']++;||| 15 }||| 16 a[i] = 2 * qtd[0] - str.length();||| 17 b[i] = 2 * qtd[1] - str.length();||| 18 c[i] = 2 * qtd[2] - str.length();||| 19 d[i] = 2 * qtd[3] - str.length();||| 20 e[i] = 2 * qtd[4] - str.length();||| 21 }||| 22 sort(a.rbegin(), a.rend());||| 23 sort(b.rbegin(), b.rend());||| 24 sort(c.rbegin(), c.rend());||| 25 sort(d.rbegin(), d.rend());||| 26 sort(e.rbegin(), e.rend());||| 27 int ans = 0;||| 28 int sum = 0, i = 0;||| 29 while (i < n && sum + a[i] > 0) {||| 30 sum += a[i];||| 31 i++;||| 32 }||| 33 ans = max(ans, i);||| 34 sum = 0, i = 0;||| 35 while (i < n && sum + b[i] > 0) {||| 36 sum += b[i];||| 37 i++;||| 38 }||| 39 ans = max(ans, i);||| 40 sum = 0, i = 0;||| 41 while (i < n && sum + c[i] > 0) {||| 42 sum += c[i];||| 43 i++;||| 44 }||| 45 ans = max(ans, i);||| 46 sum = 0, i = 0;||| 47 while (i < n && sum + d[i] > 0) {||| 48 sum += d[i];||| 49 i++;||| 50 }||| 51 ans = max(ans, i);||| 52 sum = 0, i = 0;||| 53 while (i < n && sum + d[i] > 0) {||| 54 sum += d[i];||| 55 i++;||| 56 }||| 57 ans = max(ans, i);||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 int tt = 1;||| 64 cin >> tt;||| 65 while (tt--) solve();||| 66 return 0;||| 67 }||| 	53 while (i < n && sum + e[i] > 0) {
11	276	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5 * 10000;||| 4 const long long mod = 1000000007;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n), b(n), c(n), d(n), e(n);||| 9 string str;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> str;||| 12 int qtd[] = {0, 0, 0, 0, 0};||| 13 for (char c : str) {||| 14 qtd[c - 'a']++;||| 15 }||| 16 a[i] = 2 * qtd[0] - str.length();||| 17 b[i] = 2 * qtd[1] - str.length();||| 18 c[i] = 2 * qtd[2] - str.length();||| 19 d[i] = 2 * qtd[3] - str.length();||| 20 e[i] = 2 * qtd[4] - str.length();||| 21 }||| 22 sort(a.rbegin(), a.rend());||| 23 sort(b.rbegin(), b.rend());||| 24 sort(c.rbegin(), c.rend());||| 25 sort(d.rbegin(), d.rend());||| 26 sort(e.rbegin(), e.rend());||| 27 int ans = 0;||| 28 int sum = 0, i = 0;||| 29 while (i < n && sum + a[i] > 0) {||| 30 sum += a[i];||| 31 i++;||| 32 }||| 33 ans = max(ans, i);||| 34 sum = 0, i = 0;||| 35 while (i < n && sum + b[i] > 0) {||| 36 sum += b[i];||| 37 i++;||| 38 }||| 39 ans = max(ans, i);||| 40 sum = 0, i = 0;||| 41 while (i < n && sum + c[i] > 0) {||| 42 sum += c[i];||| 43 i++;||| 44 }||| 45 ans = max(ans, i);||| 46 sum = 0, i = 0;||| 47 while (i < n && sum + d[i] > 0) {||| 48 sum += d[i];||| 49 i++;||| 50 }||| 51 ans = max(ans, i);||| 52 sum = 0, i = 0;||| 53 while (i < n && sum + e[i] > 0) {||| 54 sum += e[i];||| 55 i++;||| 56 }||| 57 ans = max(ans, i);||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 int tt = 1;||| 64 cin >> tt;||| 65 while (tt--) solve();||| 66 return 0;||| 67 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5 * 10000;||| 4 const long long mod = 1000000007;||| 5 void solve() {||| 6 int n;||| 7 cin >> n;||| 8 vector<int> a(n), b(n), c(n), d(n), e(n);||| 9 string str;||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> str;||| 12 int qtd[] = {0, 0, 0, 0, 0};||| 13 for (char c : str) {||| 14 qtd[c - 'a']++;||| 15 }||| 16 a[i] = 2 * qtd[0] - str.length();||| 17 b[i] = 2 * qtd[1] - str.length();||| 18 c[i] = 2 * qtd[2] - str.length();||| 19 d[i] = 2 * qtd[3] - str.length();||| 20 e[i] = 2 * qtd[4] - str.length();||| 21 }||| 22 sort(a.rbegin(), a.rend());||| 23 sort(b.rbegin(), b.rend());||| 24 sort(c.rbegin(), c.rend());||| 25 sort(d.rbegin(), d.rend());||| 26 sort(e.rbegin(), e.rend());||| 27 int ans = 0;||| 28 int sum = 0, i = 0;||| 29 while (i < n && sum + a[i] > 0) {||| 30 sum += a[i];||| 31 i++;||| 32 }||| 33 ans = max(ans, i);||| 34 sum = 0, i = 0;||| 35 while (i < n && sum + b[i] > 0) {||| 36 sum += b[i];||| 37 i++;||| 38 }||| 39 ans = max(ans, i);||| 40 sum = 0, i = 0;||| 41 while (i < n && sum + c[i] > 0) {||| 42 sum += c[i];||| 43 i++;||| 44 }||| 45 ans = max(ans, i);||| 46 sum = 0, i = 0;||| 47 while (i < n && sum + d[i] > 0) {||| 48 sum += d[i];||| 49 i++;||| 50 }||| 51 ans = max(ans, i);||| 52 sum = 0, i = 0;||| 53 while (i < n && sum + e[i] > 0) {||| 54 sum += d[i];||| 55 i++;||| 56 }||| 57 ans = max(ans, i);||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 int tt = 1;||| 64 cin >> tt;||| 65 while (tt--) solve();||| 66 return 0;||| 67 }||| 	54 sum += e[i];
11	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 long long zs, a, b, c, d, e;||| 5 } s[200005];||| 6 bool cmpa(node x, node y) { return x.a * 2 - x.zs > y.a * 2 - y.zs; }||| 7 bool cmpb(node x, node y) { return x.b * 2 - x.zs > y.b * 2 - y.zs; }||| 8 bool cmpc(node x, node y) { return x.c * 2 - x.zs > y.c * 2 - y.zs; }||| 9 bool cmpd(node x, node y) { return x.d * 2 - x.zs > y.d * 2 - y.zs; }||| 10 bool cmpe(node x, node y) { return x.e * 2 - x.zs > y.e * 2 - y.zs; }||| 11 int main() {||| 12 long long t, n, i, j, k, a, b, c, d, e, su, zd;||| 13 string sr;||| 14 scanf(""%lld"", &t);||| 15 while (t--) {||| 16 scanf(""%lld"", &n);||| 17 for (i = 1; i <= n; i++) {||| 18 cin >> sr;||| 19 for (j = a = b = c = d = e = 0; j <= sr.length() - 1; j++) {||| 20 if (sr[j] == 'a') a++;||| 21 if (sr[j] == 'b') b++;||| 22 if (sr[j] == 'c') c++;||| 23 if (sr[j] == 'd') d++;||| 24 if (sr[j] == 'e') e++;||| 25 }||| 26 s[i].a = a, s[i].b = b, s[i].c = c, s[i].d = d, s[i].e = e;||| 27 s[i].zs = a + b + c + d + e;||| 28 }||| 29 sort(s + 1, s + 1 + n, cmpa), zd = 0;||| 30 for (i = 1, a = su = 0; i <= n; i++) {||| 31 a += s[i].a;||| 32 su += s[i].zs;||| 33 if (a * 2 > su)||| 34 zd = max(zd, i);||| 35 else||| 36 break;||| 37 }||| 38 sort(s + 1, s + 1 + n, cmpb);||| 39 for (i = 1, b = su = 0; i <= n; i++) {||| 40 b += s[i].b;||| 41 su += s[i].zs;||| 42 if (b * 2 > su)||| 43 zd = max(zd, i);||| 44 else||| 45 break;||| 46 }||| 47 sort(s + 1, s + 1 + n, cmpc);||| 48 for (i = 1, c = su = 0; i <= n; i++) {||| 49 c += s[i].c;||| 50 su += s[i].zs;||| 51 if (c * 2 > su)||| 52 zd = max(zd, i);||| 53 else||| 54 break;||| 55 }||| 56 sort(s + 1, s + 1 + n, cmpd);||| 57 for (i = 1, d = su = 0; i <= n; i++) {||| 58 d += s[i].d;||| 59 su += s[i].zs;||| 60 if (d * 2 > su)||| 61 zd = max(zd, i);||| 62 else||| 63 break;||| 64 }||| 65 sort(s + 1, s + 1 + n, cmpe);||| 66 for (i = 1, e = su = 0; i <= n; i++) {||| 67 e += s[i].e;||| 68 su += s[i].zs;||| 69 if (e * 2 > su)||| 70 zd = max(zd, i);||| 71 else||| 72 break;||| 73 }||| 74 printf(""%lld\n"", zd);||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct node {||| 4 long long zs, a, b, c, d, e;||| 5 } s[200005];||| 6 bool cmpa(node x, node y) { return x.a * 2 - x.zs > y.a * 2 - y.zs; }||| 7 bool cmpb(node x, node y) { return x.b * 2 - x.zs > y.b * 2 - y.zs; }||| 8 bool cmpc(node x, node y) { return x.c * 2 - x.zs > y.c * 2 - y.zs; }||| 9 bool cmpd(node x, node y) { return x.d * 2 - x.zs > y.d * 2 - y.zs; }||| 10 bool cmpe(node x, node y) { return x.e * 2 - x.zs > y.e * 2 - y.zs; }||| 11 int main() {||| 12 long long t, n, i, j, k, a, b, c, d, e, su, zd;||| 13 string sr;||| 14 scanf(""%lld"", &t);||| 15 while (t--) {||| 16 scanf(""%lld"", &n);||| 17 for (i = 1; i <= n; i++) {||| 18 cin >> sr;||| 19 for (j = a = b = c = d = e = 0; j <= sr.length() - 1; j++) {||| 20 if (sr[j] == 'a') a++;||| 21 if (sr[j] == 'b') b++;||| 22 if (sr[j] == 'c') c++;||| 23 if (sr[j] == 'd') d++;||| 24 if (sr[j] == 'e') e++;||| 25 }||| 26 s[i].a = a, s[i].b = b, s[i].c = c, s[i].d = d, s[i].e = e;||| 27 s[i].zs = a + b + c + d + e;||| 28 }||| 29 sort(s + 1, s + 1 + n, cmpa), zd = 0;||| 30 for (i = 1, a = su = 0; i <= n; i++) {||| 31 a += s[i].a;||| 32 su += s[i].zs;||| 33 if (a * 2 > su)||| 34 zd = max(zd, i);||| 35 else||| 36 break;||| 37 }||| 38 sort(s + 1, s + 1 + n, cmpb);||| 39 for (i = 1, b = su = 0; i <= n; i++) {||| 40 b += s[i].b;||| 41 su += s[i].zs;||| 42 if (b * 2 > su)||| 43 zd = max(zd, i);||| 44 else||| 45 break;||| 46 }||| 47 sort(s + 1, s + 1 + n, cmpc);||| 48 for (i = 1, c = su = 0; i <= n; i++) {||| 49 c += s[i].c;||| 50 su += s[i].zs;||| 51 if (c * 2 > su)||| 52 zd = max(zd, i);||| 53 else||| 54 break;||| 55 }||| 56 sort(s + 1, s + 1 + n, cmpa);||| 57 for (i = 1, d = su = 0; i <= n; i++) {||| 58 d += s[i].d;||| 59 su += s[i].zs;||| 60 if (d * 2 > su)||| 61 zd = max(zd, i);||| 62 else||| 63 break;||| 64 }||| 65 sort(s + 1, s + 1 + n, cmpa);||| 66 for (i = 1, e = su = 0; i <= n; i++) {||| 67 e += s[i].e;||| 68 su += s[i].zs;||| 69 if (e * 2 > su)||| 70 zd = max(zd, i);||| 71 else||| 72 break;||| 73 }||| 74 printf(""%lld\n"", zd);||| 75 }||| 76 return 0;||| 77 }||| "	56 sort(s + 1, s + 1 + n, cmpd);
11	242	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n;||| 5 char li[400001];||| 6 int num[200001][5];||| 7 int wat[200001];||| 8 int l = 1, r = 0;||| 9 int res;||| 10 int getsum(int u) {||| 11 int orz = 0;||| 12 for (int i = 1; i <= 5; i++) {||| 13 orz += num[u][i];||| 14 }||| 15 return orz;||| 16 }||| 17 int getrest(int u, int v) { return num[u][v] * 2 - getsum(u); }||| 18 void dfs(int u) {||| 19 int ans = 0;||| 20 l = 1;||| 21 r = 0;||| 22 int rst = 0;||| 23 for (int i = 1; i <= n; i++) {||| 24 int tmp = getrest(i, u);||| 25 wat[++r] = tmp;||| 26 }||| 27 sort(wat + 1, wat + 1 + r);||| 28 while (l <= r) {||| 29 if (rst + wat[r] > 0) {||| 30 ans++;||| 31 rst += wat[r];||| 32 r--;||| 33 continue;||| 34 }||| 35 break;||| 36 }||| 37 res = max(res, ans);||| 38 }||| 39 int main() {||| 40 cin >> t;||| 41 while (t--) {||| 42 cin >> n;||| 43 memset(num, 0, sizeof(num));||| 44 res = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 scanf(""%s"", li + 1);||| 47 int len = strlen(li + 1);||| 48 for (int j = 1; j <= len; j++) {||| 49 num[i][li[j] - 'a' + 1]++;||| 50 }||| 51 }||| 52 for (int i = 1; i <= 5; i++) dfs(i);||| 53 cout << res << endl;||| 54 }||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n;||| 5 char li[400001];||| 6 int num[200001][5];||| 7 int wat[200001];||| 8 int l = 1, r = 0;||| 9 int res;||| 10 int getsum(int u) {||| 11 int orz = 0;||| 12 for (int i = 1; i <= 5; i++) {||| 13 orz += num[u][i];||| 14 }||| 15 return orz;||| 16 }||| 17 int getrest(int u, int v) { return num[u][v] * 2 - getsum(u); }||| 18 void dfs(int u) {||| 19 int ans = 0;||| 20 l = 1;||| 21 r = 0;||| 22 int rst = 0;||| 23 for (int i = 1; i <= n; i++) {||| 24 int tmp = getrest(i, u);||| 25 wat[++r] = tmp;||| 26 sort(wat + 1, wat + 1 + r);||| 27 while (l <= r) {||| 28 if (rst + wat[r] > 0) {||| 29 ans++;||| 30 rst += wat[r];||| 31 r--;||| 32 continue;||| 33 }||| 34 break;||| 35 }||| 36 res = max(res, ans);||| 37 }||| 38 }||| 39 int main() {||| 40 cin >> t;||| 41 while (t--) {||| 42 cin >> n;||| 43 memset(num, 0, sizeof(num));||| 44 res = 0;||| 45 for (int i = 1; i <= n; i++) {||| 46 scanf(""%s"", li + 1);||| 47 int len = strlen(li + 1);||| 48 for (int j = 1; j <= len; j++) {||| 49 num[i][li[j] - 'a' + 1]++;||| 50 }||| 51 }||| 52 for (int i = 1; i <= 5; i++) dfs(i);||| 53 cout << res << endl;||| 54 }||| 55 }||| "	26 }
11	13	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string lt = ""abcde"";||| 4 bool Sort(const pair<long long int, long long int> &a,||| 5 const pair<long long int, long long int> &b) {||| 6 if (a.first - a.second > b.first - b.second) return true;||| 7 return false;||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 long long int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long int n;||| 17 cin >> n;||| 18 vector<string> v;||| 19 string s;||| 20 for (long long int i = 1; i <= n; i++) {||| 21 cin >> s;||| 22 v.push_back(s);||| 23 }||| 24 long long int mx = 0;||| 25 for (long long int i = 0; i < 5; i++) {||| 26 long long int cn = 0, ot = 0;||| 27 vector<pair<long long int, long long int> > v1;||| 28 long long int c = 0;||| 29 for (long long int j = 0; j < n; j++) {||| 30 s = v[j];||| 31 long long int c1 = 0, c2 = 0;||| 32 for (long long int k = 0; k < v[j].size(); k++) {||| 33 if (v[j][k] == lt[i])||| 34 c1 += 1;||| 35 else||| 36 c2 += 1;||| 37 }||| 38 if (c1 > c2) {||| 39 cn += c1;||| 40 ot += c2;||| 41 c += 1;||| 42 } else {||| 43 v1.push_back(make_pair(c1, c2));||| 44 }||| 45 }||| 46 sort(v1.begin(), v1.end(), Sort);||| 47 for (long long int j = 0; j < v1.size(); j++) {||| 48 if (cn + v1[j].first > ot + v1[j].second) {||| 49 c += 1;||| 50 cn += v1[j].first;||| 51 ot += v1[j].second;||| 52 }||| 53 }||| 54 mx = max(mx, c);||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string lt = ""abcde"";||| 4 bool Sort(const pair<long long int, long long int> &a,||| 5 const pair<long long int, long long int> &b) {||| 6 if (a.first - a.second < b.first - b.second) return true;||| 7 return false;||| 8 }||| 9 int main() {||| 10 ios_base::sync_with_stdio(false);||| 11 cin.tie(0);||| 12 cout.tie(0);||| 13 long long int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 long long int n;||| 17 cin >> n;||| 18 vector<string> v;||| 19 string s;||| 20 for (long long int i = 1; i <= n; i++) {||| 21 cin >> s;||| 22 v.push_back(s);||| 23 }||| 24 long long int mx = 0;||| 25 for (long long int i = 0; i < 4; i++) {||| 26 long long int cn = 0, ot = 0;||| 27 vector<pair<long long int, long long int> > v1;||| 28 long long int c = 0;||| 29 for (long long int j = 0; j < n; j++) {||| 30 s = v[j];||| 31 long long int c1 = 0, c2 = 0;||| 32 for (long long int k = 0; k < v[j].size(); k++) {||| 33 if (v[j][k] == lt[i])||| 34 c1 += 1;||| 35 else||| 36 c2 += 1;||| 37 }||| 38 if (c1 > c2) {||| 39 cn += c1;||| 40 ot += c2;||| 41 c += 1;||| 42 } else {||| 43 v1.push_back(make_pair(c1, c2));||| 44 }||| 45 }||| 46 sort(v1.begin(), v1.end(), Sort);||| 47 for (long long int j = 0; j < v1.size(); j++) {||| 48 if (cn + v1[j].first > ot + v1[j].second) {||| 49 c += 1;||| 50 cn += v1[j].first;||| 51 ot += v1[j].second;||| 52 }||| 53 }||| 54 mx = max(mx, c);||| 55 }||| 56 cout << mx << '\n';||| 57 }||| 58 }||| "	6 if (a.first - a.second > b.first - b.second) return true;
12	100	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std::chrono;||| 4 void solve() {||| 5 long long int n, i, m = 0, q = 0, mx = -20000000000000000,||| 6 mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0,||| 7 sum = 0, pdt = 1, l = 0, r = 0;||| 8 cin >> n >> m >> k;||| 9 if (k == 0) {||| 10 if (n % 2 == 0)||| 11 cout << ""YES"" << endl;||| 12 else||| 13 cout << ""NO"" << endl;||| 14 return;||| 15 }||| 16 if (m == 1) {||| 17 cout << ""NO"" << endl;||| 18 return;||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (m % 2 == 1) {||| 22 l = (n * (m - 1)) / 2;||| 23 if (k > l) {||| 24 cout << ""NO"" << endl;||| 25 return;||| 26 }||| 27 }||| 28 if (k % 2 == 0)||| 29 cout << ""YES"" << endl;||| 30 else||| 31 cout << ""NO"" << endl;||| 32 return;||| 33 }||| 34 q = m / 2;||| 35 if (q > k) {||| 36 cout << ""NO"" << endl;||| 37 return;||| 38 }||| 39 k -= q;||| 40 n--;||| 41 if (n == 0) {||| 42 cout << ""YES"" << endl;||| 43 return;||| 44 }||| 45 if (k % 2 == 0)||| 46 cout << ""YES"" << endl;||| 47 else||| 48 cout << ""NO"" << endl;||| 49 return;||| 50 }||| 51 int main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 cout.tie(NULL);||| 55 long long int t = 1;||| 56 cin >> t;||| 57 while (t--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std::chrono;||| 4 void solve() {||| 5 long long int n, i, m = 0, q = 0, mx = -20000000000000000,||| 6 mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0,||| 7 sum = 0, pdt = 1, l = 0, r = 0;||| 8 cin >> n >> m >> k;||| 9 if (k % 2 == 0) {||| 10 if (n % 2 == 0)||| 11 cout << ""YES"" << endl;||| 12 else||| 13 cout << ""NO"" << endl;||| 14 return;||| 15 }||| 16 if (m == 1) {||| 17 cout << ""NO"" << endl;||| 18 return;||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (m % 2 == 1) {||| 22 l = (n * (m - 1)) / 2;||| 23 if (k > l) {||| 24 cout << ""NO"" << endl;||| 25 return;||| 26 }||| 27 }||| 28 if (k % 2 == 0)||| 29 cout << ""YES"" << endl;||| 30 else||| 31 cout << ""NO"" << endl;||| 32 return;||| 33 }||| 34 q = m / 2;||| 35 if (q > k) {||| 36 cout << ""NO"" << endl;||| 37 return;||| 38 }||| 39 k -= q;||| 40 n--;||| 41 if (n == 0) {||| 42 cout << ""YES"" << endl;||| 43 return;||| 44 }||| 45 if (k % 2 == 0)||| 46 cout << ""YES"" << endl;||| 47 else||| 48 cout << ""NO"" << endl;||| 49 return;||| 50 }||| 51 int main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 cout.tie(NULL);||| 55 long long int t = 1;||| 56 cin >> t;||| 57 while (t--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	9 if (k == 0) {
12	379	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std::chrono;||| 4 void solve() {||| 5 long long int n, i, m = 0, q = 0, mx = -20000000000000000,||| 6 mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0,||| 7 sum = 0, pdt = 1, l = 0, r = 0;||| 8 cin >> n >> m >> k;||| 9 if (k == 0) {||| 10 if (n % 2 == 0)||| 11 cout << ""YES"" << endl;||| 12 else||| 13 cout << ""NO"" << endl;||| 14 return;||| 15 }||| 16 if (m == 1) {||| 17 cout << ""NO"" << endl;||| 18 return;||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (m % 2 == 1) {||| 22 l = (n * (m - 1)) / 2;||| 23 if (k > l) {||| 24 cout << ""NO"" << endl;||| 25 return;||| 26 }||| 27 }||| 28 if (k % 2 == 0)||| 29 cout << ""YES"" << endl;||| 30 else||| 31 cout << ""NO"" << endl;||| 32 return;||| 33 }||| 34 q = m / 2;||| 35 if (q > k) {||| 36 cout << ""NO"" << endl;||| 37 return;||| 38 }||| 39 k -= q;||| 40 n--;||| 41 if (n == 0) {||| 42 cout << ""YES"" << endl;||| 43 return;||| 44 }||| 45 if (k % 2 == 0)||| 46 cout << ""YES"" << endl;||| 47 else||| 48 cout << ""NO"" << endl;||| 49 return;||| 50 }||| 51 int main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 cout.tie(NULL);||| 55 long long int t = 1;||| 56 cin >> t;||| 57 while (t--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std::chrono;||| 4 void solve() {||| 5 long long int n, i, m = 0, q = 0, mx = -20000000000000000,||| 6 mn = 20000000000000000, k = 0, j = 0, c = 0, d = 0, t = 0,||| 7 sum = 0, pdt = 1, l = 0, r = 0;||| 8 cin >> n >> m >> k;||| 9 if (k == 0) {||| 10 if (n % 2 == 0)||| 11 cout << ""YES"" << endl;||| 12 else||| 13 cout << ""NO"" << endl;||| 14 return;||| 15 }||| 16 if (m == 1) {||| 17 cout << ""NO"" << endl;||| 18 return;||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (m % 2 == 1) {||| 22 l = (n * (m - 1)) / 2;||| 23 if (k > l) {||| 24 cout << ""NO"" << endl;||| 25 return;||| 26 }||| 27 }||| 28 if (k % 2 == 0)||| 29 cout << ""YES"" << endl;||| 30 else||| 31 cout << ""NO"" << endl;||| 32 return;||| 33 }||| 34 q = m / 2;||| 35 if (q < k) {||| 36 cout << ""NO"" << endl;||| 37 return;||| 38 }||| 39 k -= q;||| 40 n--;||| 41 if (n == 0) {||| 42 cout << ""YES"" << endl;||| 43 return;||| 44 }||| 45 if (k % 2 == 0)||| 46 cout << ""YES"" << endl;||| 47 else||| 48 cout << ""NO"" << endl;||| 49 return;||| 50 }||| 51 int main() {||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 cout.tie(NULL);||| 55 long long int t = 1;||| 56 cin >> t;||| 57 while (t--) {||| 58 solve();||| 59 }||| 60 return 0;||| 61 }||| "	35 if (q > k) {
12	408	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, k, p;||| 8 cin >> n >> m >> k;||| 9 p = (n * m) / 2 - k;||| 10 if (n == m) {||| 11 if (k % 2 == 0)||| 12 cout << ""yes\n"";||| 13 else||| 14 cout << ""no\n"";||| 15 } else if (n % 2 != 0) {||| 16 if ((k - m / 2) % 2 == 0 && k >= m / 2)||| 17 cout << ""yes\n"";||| 18 else||| 19 cout << ""no\n"";||| 20 } else if (m % 2 != 0) {||| 21 if ((p - n / 2) % 2 == 0 && p >= n / 2)||| 22 cout << ""yes\n"";||| 23 else||| 24 cout << ""no\n"";||| 25 } else if (n > m) {||| 26 if (k % 2 == 0)||| 27 cout << ""yes\n"";||| 28 else||| 29 cout << ""no\n"";||| 30 } else {||| 31 if (p % 2 == 0)||| 32 cout << ""yes\n"";||| 33 else||| 34 cout << ""no\n"";||| 35 }||| 36 }||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, m, k, p;||| 8 cin >> n >> m >> k;||| 9 p = (n * m) / 2 - k;||| 10 if (n == m) {||| 11 if (k % 2 == 0)||| 12 cout << ""yes\n"";||| 13 else||| 14 cout << ""no\n"";||| 15 } else if (n % 2 != 0) {||| 16 if ((k - m / 2) % 2 == 0 && k >= m / 2)||| 17 cout << ""yes\n"";||| 18 else||| 19 cout << ""no\n"";||| 20 } else if (m % 2 != 0) {||| 21 if ((p - n / 2) % 2 == 0 && p >= n / 2)||| 22 cout << ""yes\n"";||| 23 else||| 24 cout << ""no\n"";||| 25 } else if (n > m) {||| 26 if (k % m == 0)||| 27 cout << ""yes\n"";||| 28 else||| 29 cout << ""no\n"";||| 30 } else {||| 31 if (p % n == 0)||| 32 cout << ""yes\n"";||| 33 else||| 34 cout << ""no\n"";||| 35 }||| 36 }||| 37 }||| "	26 if (k % 2 == 0)
12	625	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,no-stack-protector,unroll-loops,fast-math"")||| 3 #pragma GCC target( \||| 4 ""sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native"")||| 5 #pragma GCC optimize(2)||| 6 using namespace std;||| 7 const int maxn = 2e5 + 1010;||| 8 const int mod = 1e9 + 7;||| 9 const int MOD = 10007;||| 10 inline int read() {||| 11 int x = 0;||| 12 bool t = false;||| 13 char ch = getchar();||| 14 while ((ch < '0' || ch > '9') && ch != '-') ch = getchar();||| 15 if (ch == '-') t = true, ch = getchar();||| 16 while (ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();||| 17 return t ? -x : x;||| 18 }||| 19 long long n, m, k;||| 20 void solve() {||| 21 scanf(""%lld%lld%lld"", &n, &m, &k);||| 22 if ((k == 0 && n % 2 == 0) || (k * 2 == n * m && m % 2 == 0)) {||| 23 puts(""Yes"");||| 24 return;||| 25 }||| 26 if ((k == 0 && n % 2 == 1) || (k * 2 == n * m && m % 2 == 1)) {||| 27 puts(""No"");||| 28 return;||| 29 }||| 30 if (n == 1 || m == 1) {||| 31 puts(""No"");||| 32 return;||| 33 }||| 34 if (n % 2 == 1) {||| 35 long long num = m / 2;||| 36 if (k < num)||| 37 puts(""No"");||| 38 else {||| 39 n--;||| 40 k -= num;||| 41 if (k % 2)||| 42 puts(""No"");||| 43 else||| 44 puts(""Yes"");||| 45 }||| 46 } else if (m % 2 == 1) {||| 47 long long sum = n * m / 2;||| 48 long long num = n / 2;||| 49 long long res = sum - num;||| 50 if (k % 2 || res < k)||| 51 puts(""No"");||| 52 else||| 53 puts(""Yes"");||| 54 } else {||| 55 if (k % 2)||| 56 puts(""No"");||| 57 else||| 58 puts(""Yes"");||| 59 }||| 60 }||| 61 int main() {||| 62 long long t = 1;||| 63 scanf(""%lld"", &t);||| 64 while (t--) {||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,no-stack-protector,unroll-loops,fast-math"")||| 3 #pragma GCC target( \||| 4 ""sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native"")||| 5 #pragma GCC optimize(2)||| 6 using namespace std;||| 7 const int maxn = 2e5 + 1010;||| 8 const int mod = 1e9 + 7;||| 9 const int MOD = 10007;||| 10 inline int read() {||| 11 int x = 0;||| 12 bool t = false;||| 13 char ch = getchar();||| 14 while ((ch < '0' || ch > '9') && ch != '-') ch = getchar();||| 15 if (ch == '-') t = true, ch = getchar();||| 16 while (ch <= '9' && ch >= '0') x = x * 10 + ch - 48, ch = getchar();||| 17 return t ? -x : x;||| 18 }||| 19 long long n, m, k;||| 20 void solve() {||| 21 scanf(""%lld%lld%lld"", &n, &m, &k);||| 22 if ((k == 0 && n % 2 == 0) || (k * 2 == n * m && m % 2 == 0)) {||| 23 puts(""Yes"");||| 24 return;||| 25 }||| 26 if ((k == 0 && n % 2 == 1) || (k * 2 == n * m && m % 2 == 1)) {||| 27 puts(""No"");||| 28 return;||| 29 }||| 30 if (n == 1 || m == 1) {||| 31 puts(""No"");||| 32 return;||| 33 }||| 34 if (n % 2 == 1) {||| 35 long long num = m / 2;||| 36 if (k < num)||| 37 puts(""No"");||| 38 else {||| 39 n--;||| 40 k -= num;||| 41 if (k % 2)||| 42 puts(""No"");||| 43 else||| 44 puts(""Yes"");||| 45 }||| 46 } else if (m % 2 == 1) {||| 47 long long sum = n * m / 2;||| 48 long long num = n / 2;||| 49 long long res = sum - num;||| 50 if (k % 2 || res > k)||| 51 puts(""No"");||| 52 else||| 53 puts(""Yes"");||| 54 } else {||| 55 if (k % 2)||| 56 puts(""No"");||| 57 else||| 58 puts(""Yes"");||| 59 }||| 60 }||| 61 int main() {||| 62 long long t = 1;||| 63 scanf(""%lld"", &t);||| 64 while (t--) {||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| "	50 if (k % 2 || res < k)
12	261	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n, m, k;||| 5 cin >> n >> m >> k;||| 6 long long int a = m / 2;||| 7 if (k > n * a) {||| 8 cout << ""NO "" << endl;||| 9 return;||| 10 }||| 11 if (k == 0) {||| 12 if (n % 2 == 0) {||| 13 cout << ""YES"" << endl;||| 14 return;||| 15 } else {||| 16 cout << ""NO"" << endl;||| 17 return;||| 18 }||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (k % 2 == 0) {||| 22 cout << ""YES"" << endl;||| 23 return;||| 24 } else {||| 25 cout << ""NO "" << endl;||| 26 return;||| 27 }||| 28 } else {||| 29 if (k >= m / 2) {||| 30 k = k - m / 2;||| 31 n--;||| 32 if (k % 2 == 0) {||| 33 cout << ""YES"" << endl;||| 34 return;||| 35 } else {||| 36 cout << ""NO "" << endl;||| 37 return;||| 38 }||| 39 } else {||| 40 cout << ""NO "" << endl;||| 41 return;||| 42 }||| 43 }||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 long long int t;||| 50 cin >> t;||| 51 while (t--) solve();||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n, m, k;||| 5 cin >> n >> m >> k;||| 6 long long int a = m / 2;||| 7 if (k > n * a) {||| 8 cout << ""NO "" << endl;||| 9 return;||| 10 }||| 11 if (k == 0) {||| 12 if (n % 2 == 0) {||| 13 cout << ""YES"" << endl;||| 14 return;||| 15 } else {||| 16 cout << ""NO"" << endl;||| 17 return;||| 18 }||| 19 }||| 20 if (n % 2 == 0) {||| 21 if (k % 2 == 0) {||| 22 cout << ""YES"" << endl;||| 23 return;||| 24 } else {||| 25 cout << ""NO "" << endl;||| 26 return;||| 27 }||| 28 } else {||| 29 if (k > m / 2) {||| 30 k = k - m / 2;||| 31 n--;||| 32 if (k % 2 == 0) {||| 33 cout << ""YES"" << endl;||| 34 return;||| 35 } else {||| 36 cout << ""NO "" << endl;||| 37 return;||| 38 }||| 39 } else {||| 40 cout << ""NO "" << endl;||| 41 return;||| 42 }||| 43 }||| 44 }||| 45 int main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(0);||| 48 cout.tie(0);||| 49 long long int t;||| 50 cin >> t;||| 51 while (t--) solve();||| 52 }||| "	29 if (k >= m / 2) {
12	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void no() {||| 4 cout << ""NO"" << '\n';||| 5 ;||| 6 }||| 7 void yes() {||| 8 cout << ""YES"" << '\n';||| 9 ;||| 10 }||| 11 void solve() {||| 12 int n, m, k;||| 13 cin >> n >> m >> k;||| 14 if (k > (n) * (m / 2)) {||| 15 no();||| 16 return;||| 17 }||| 18 if (n % 2 == 0) {||| 19 if (k % 2 == 0) {||| 20 yes();||| 21 return;||| 22 } else {||| 23 no();||| 24 return;||| 25 }||| 26 } else {||| 27 if (k < m / 2) {||| 28 no();||| 29 return;||| 30 } else {||| 31 if ((k - m / 2) % 2 == 0 && n % 2) {||| 32 yes();||| 33 return;||| 34 } else {||| 35 no();||| 36 return;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 int main() {||| 42 ios::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 int t = 1;||| 46 cin >> t;||| 47 while (t--) solve();||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void no() {||| 4 cout << ""NO"" << '\n';||| 5 ;||| 6 }||| 7 void yes() {||| 8 cout << ""YES"" << '\n';||| 9 ;||| 10 }||| 11 void solve() {||| 12 int n, m, k;||| 13 cin >> n >> m >> k;||| 14 if (k > (n) * (m / 2)) {||| 15 no();||| 16 return;||| 17 }||| 18 if (n % 2 == 0) {||| 19 if (k % 2 == 0) {||| 20 yes();||| 21 return;||| 22 } else {||| 23 no();||| 24 return;||| 25 }||| 26 } else {||| 27 if (k <= m / 2) {||| 28 no();||| 29 return;||| 30 } else {||| 31 if ((k - m / 2) % 2 == 0 && n % 2) {||| 32 yes();||| 33 return;||| 34 } else {||| 35 no();||| 36 return;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 int main() {||| 42 ios::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 int t = 1;||| 46 cin >> t;||| 47 while (t--) solve();||| 48 return 0;||| 49 }||| "	27 if (k < m / 2) {
12	648	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n, m, k;||| 5 int main(void) {||| 6 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 7 cin >> t;||| 8 for (int test_case = 0; test_case < t; test_case++) {||| 9 cin >> n >> m >> k;||| 10 bool flag = false;||| 11 if (n % 2 == 0 && m % 2 == 0) {||| 12 if (k % 2 == 0) {||| 13 flag = true;||| 14 }||| 15 } else if (n % 2 == 0) {||| 16 if (m == 1) {||| 17 if (k == 0) flag = true;||| 18 } else {||| 19 if (k % 2 == 0) {||| 20 if (2 * k <= (m - 1) * n) {||| 21 flag = true;||| 22 }||| 23 }||| 24 }||| 25 } else {||| 26 if (n == 1) {||| 27 if (2 * k == m * n) {||| 28 flag = true;||| 29 }||| 30 } else {||| 31 if (k >= m / 2) {||| 32 k -= m / 2;||| 33 if (k % 2 == 0) {||| 34 flag = true;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 if (flag) {||| 40 cout << ""YES""||| 41 << ""\n"";||| 42 } else {||| 43 cout << ""NO""||| 44 << ""\n"";||| 45 }||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n, m, k;||| 5 int main(void) {||| 6 ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 7 cin >> t;||| 8 for (int test_case = 0; test_case < t; test_case++) {||| 9 cin >> n >> m >> k;||| 10 bool flag = false;||| 11 if (n % 2 == 0 && m % 2 == 0) {||| 12 if (k % 2 == 0) {||| 13 flag = true;||| 14 }||| 15 } else if (n % 2 == 0) {||| 16 if (m == 1) {||| 17 if (k == 0) flag = true;||| 18 } else {||| 19 if (k % 2 == 0) {||| 20 if (2 * k <= (m - 1) * n) {||| 21 flag = true;||| 22 }||| 23 }||| 24 }||| 25 } else {||| 26 if (n == 1) {||| 27 if (2 * k == m * n) {||| 28 flag = true;||| 29 }||| 30 } else {||| 31 if (k > m / 2) {||| 32 k -= m / 2;||| 33 if (k % 2 == 0) {||| 34 flag = true;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 if (flag) {||| 40 cout << ""YES""||| 41 << ""\n"";||| 42 } else {||| 43 cout << ""NO""||| 44 << ""\n"";||| 45 }||| 46 }||| 47 }||| "	31 if (k >= m / 2) {
12	430	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void chmax(T& a, const T& b) {||| 5 a = max(a, b);||| 6 }||| 7 template <class T>||| 8 void chmin(T& a, const T& b) {||| 9 a = min(a, b);||| 10 }||| 11 using ll = long long;||| 12 using P = pair<int, int>;||| 13 using VI = vector<int>;||| 14 using VVI = vector<VI>;||| 15 using VL = vector<ll>;||| 16 using VVL = vector<VL>;||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 int tt;||| 21 cin >> tt;||| 22 while (tt--) {||| 23 int n, m, k;||| 24 cin >> n >> m >> k;||| 25 int k1 = k, k2 = n * m / 2 - k1;||| 26 bool flipped = false;||| 27 if (m % 2) {||| 28 flipped = true;||| 29 swap(n, m);||| 30 swap(k1, k2);||| 31 }||| 32 if (n % 2 == 0) {||| 33 cout << (k2 % 2 == 0 ? ""YES"" : ""NO"") << '\n';||| 34 } else {||| 35 int r = m / 2;||| 36 bool ok = r <= k1 && r % 2 == k1 % 2 && k2 % 2 == 0;||| 37 cout << (ok ? ""YES"" : ""NO"") << '\n';||| 38 }||| 39 }||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void chmax(T& a, const T& b) {||| 5 a = max(a, b);||| 6 }||| 7 template <class T>||| 8 void chmin(T& a, const T& b) {||| 9 a = min(a, b);||| 10 }||| 11 using ll = long long;||| 12 using P = pair<int, int>;||| 13 using VI = vector<int>;||| 14 using VVI = vector<VI>;||| 15 using VL = vector<ll>;||| 16 using VVL = vector<VL>;||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 int tt;||| 21 cin >> tt;||| 22 while (tt--) {||| 23 int n, m, k;||| 24 cin >> n >> m >> k;||| 25 int k1 = k, k2 = n * m / 2 - k1;||| 26 bool flipped = false;||| 27 if (m % 2) {||| 28 flipped = true;||| 29 swap(n, m);||| 30 swap(k1, k2);||| 31 }||| 32 if (m % 2 == 0) {||| 33 cout << (k2 % 2 == 0 ? ""YES"" : ""NO"") << '\n';||| 34 } else {||| 35 int r = m / 2;||| 36 bool ok = r <= k1 && r % 2 == k1 % 2 && k2 % 2 == 0;||| 37 cout << (ok ? ""YES"" : ""NO"") << '\n';||| 38 }||| 39 }||| 40 }||| "	32 if (n % 2 == 0) {
12	385	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long gcd(unsigned long long a, unsigned long long b) {||| 4 if (a == 0) return b;||| 5 if (b == 0) return a;||| 6 if (a == 1 || b == 1) return 1;||| 7 if (a == b) return a;||| 8 if (a > b)||| 9 return gcd(b, a % b);||| 10 else||| 11 return gcd(a, b % a);||| 12 }||| 13 int32_t main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(NULL);||| 16 cout.tie(NULL);||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 int long long n, m, k;||| 21 cin >> n >> m >> k;||| 22 if (n == 1) {||| 23 if (k == m * n / 2)||| 24 cout << ""YES""||| 25 << ""\n"";||| 26 else||| 27 cout << ""NO""||| 28 << ""\n"";||| 29 continue;||| 30 }||| 31 if (m == 1) {||| 32 if (k == 0)||| 33 cout << ""YES""||| 34 << ""\n"";||| 35 else||| 36 cout << ""NO""||| 37 << ""\n"";||| 38 continue;||| 39 }||| 40 if (n % 2 == 0 && m % 2 == 0) {||| 41 if (k % 2 == 0)||| 42 cout << ""YES""||| 43 << ""\n"";||| 44 else||| 45 cout << ""NO""||| 46 << ""\n"";||| 47 } else if (n % 2 == 1 && m % 2 == 0) {||| 48 if (k < m / 2)||| 49 cout << ""NO""||| 50 << ""\n"";||| 51 else if (k >= m / 2 && (k - m / 2) % 2 == 0)||| 52 cout << ""YES""||| 53 << ""\n"";||| 54 else||| 55 cout << ""NO""||| 56 << ""\n"";||| 57 } else {||| 58 if (k > (m - 1) * n / 2)||| 59 cout << ""NO""||| 60 << ""\n"";||| 61 else if (k % 2 == 0 || k == (m - 1) * n / 2)||| 62 cout << ""YES""||| 63 << ""\n"";||| 64 else||| 65 cout << ""NO""||| 66 << ""\n"";||| 67 }||| 68 }||| 69 return 0;||| 70 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long gcd(unsigned long long a, unsigned long long b) {||| 4 if (a == 0) return b;||| 5 if (b == 0) return a;||| 6 if (a == 1 || b == 1) return 1;||| 7 if (a == b) return a;||| 8 if (a > b)||| 9 return gcd(b, a % b);||| 10 else||| 11 return gcd(a, b % a);||| 12 }||| 13 int32_t main() {||| 14 ios_base::sync_with_stdio(false);||| 15 cin.tie(NULL);||| 16 cout.tie(NULL);||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 int long long n, m, k;||| 21 cin >> n >> m >> k;||| 22 if (n == 1) {||| 23 if (k == m * n / 2)||| 24 cout << ""YES""||| 25 << ""\n"";||| 26 else||| 27 cout << ""NO""||| 28 << ""\n"";||| 29 continue;||| 30 }||| 31 if (m == 1) {||| 32 if (k == 0)||| 33 cout << ""YES""||| 34 << ""\n"";||| 35 else||| 36 cout << ""NO""||| 37 << ""\n"";||| 38 continue;||| 39 }||| 40 if (n % 2 == 0 && m % 2 == 0) {||| 41 if (k % 2 == 0)||| 42 cout << ""YES""||| 43 << ""\n"";||| 44 else||| 45 cout << ""NO""||| 46 << ""\n"";||| 47 } else if (n % 2 == 1 && m % 2 == 0) {||| 48 if (k < m / 2)||| 49 cout << ""NO""||| 50 << ""\n"";||| 51 else if (k > m / 2 && (k - m / 2) % 2 == 0)||| 52 cout << ""YES""||| 53 << ""\n"";||| 54 else||| 55 cout << ""NO""||| 56 << ""\n"";||| 57 } else {||| 58 if (k > (m - 1) * n / 2)||| 59 cout << ""NO""||| 60 << ""\n"";||| 61 else if (k % 2 == 0 || k == (m - 1) * n / 2)||| 62 cout << ""YES""||| 63 << ""\n"";||| 64 else||| 65 cout << ""NO""||| 66 << ""\n"";||| 67 }||| 68 }||| 69 return 0;||| 70 }||| "	51 else if (k >= m / 2 && (k - m / 2) % 2 == 0)
12	647	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n, m, k;||| 8 cin >> n >> m >> k;||| 9 if (n % 2 == 0 && m % 2 == 0) {||| 10 if (k % 2)||| 11 cout << ""NO"" << '\n';||| 12 else||| 13 cout << ""YES"" << '\n';||| 14 } else if (n % 2 == 1 && m % 2 == 0) {||| 15 if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - m) / 2 &&||| 16 ((n * m / 2 - k) % 2 == 0))||| 17 cout << ""YES"" << '\n';||| 18 else||| 19 cout << ""NO"" << '\n';||| 20 } else {||| 21 if (k >= 0 && k <= (n * m - n) / 2 && (k % 2 == 0))||| 22 cout << ""YES"" << '\n';||| 23 else||| 24 cout << ""NO"" << '\n';||| 25 }||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n, m, k;||| 8 cin >> n >> m >> k;||| 9 if (n % 2 == 0 && m % 2 == 0) {||| 10 if (k % 2)||| 11 cout << ""NO"" << '\n';||| 12 else||| 13 cout << ""YES"" << '\n';||| 14 } else if (n % 2 == 1 && m % 2 == 0) {||| 15 if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - n) / 2 &&||| 16 ((n * m / 2 - k) % 2 == 0))||| 17 cout << ""YES"" << '\n';||| 18 else||| 19 cout << ""NO"" << '\n';||| 20 } else {||| 21 if (k >= 0 && k <= (n * m - n) / 2 && (k % 2 == 0))||| 22 cout << ""YES"" << '\n';||| 23 else||| 24 cout << ""NO"" << '\n';||| 25 }||| 26 }||| 27 }||| "	15 if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - m) / 2 &&
12	142	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int maxn = 2 * 1e5 + 10;||| 4 int main() {||| 5 long long int t;||| 6 cin >> t;||| 7 while (t-- > 0) {||| 8 long long int n, m, k;||| 9 cin >> n >> m >> k;||| 10 if (n % 2 == 0 && m % 2 == 0 && k % 2 == 0) {||| 11 cout << ""YES"" << endl;||| 12 continue;||| 13 }||| 14 if (n % 2 == 0 && m % 2 == 1 && k % 2 == 0 && (n * m) - (k * 2) >= n) {||| 15 cout << ""YES"" << endl;||| 16 continue;||| 17 }||| 18 k = (n * m) / 2 - k;||| 19 if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= m) {||| 20 cout << ""YES"" << endl;||| 21 continue;||| 22 }||| 23 cout << ""NO"" << endl;||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int maxn = 2 * 1e5 + 10;||| 4 int main() {||| 5 long long int t;||| 6 cin >> t;||| 7 while (t-- > 0) {||| 8 long long int n, m, k;||| 9 cin >> n >> m >> k;||| 10 if (n % 2 == 0 && m % 2 == 0 && k % 2 == 0) {||| 11 cout << ""YES"" << endl;||| 12 continue;||| 13 }||| 14 if (n % 2 == 0 && m % 2 == 1 && k % 2 == 0 && (n * m) - (k * 2) >= n) {||| 15 cout << ""YES"" << endl;||| 16 continue;||| 17 }||| 18 k = (n * m) / 2 - k;||| 19 if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= n) {||| 20 cout << ""YES"" << endl;||| 21 continue;||| 22 }||| 23 cout << ""NO"" << endl;||| 24 }||| 25 return 0;||| 26 }||| "	19 if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= m) {
13	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int idx[] = {-1, 1, 0, 0}, idy[] = {0, 0, -1, 1};||| 4 void print(int n, int m, int k) {||| 5 cout << ""YES""||| 6 << ""\n"";||| 7 vector<vector<int>> g(n, vector<int>(m, -1));||| 8 auto isvalid = [&](int i, int j) -> bool {||| 9 if (i >= 0 && j >= 0 && i < n && j < m) {||| 10 return true;||| 11 }||| 12 return false;||| 13 };||| 14 auto findMatch = [&](int i, int j, int ni, int nj) -> int {||| 15 for (int num = 0; num < 26; num++) {||| 16 bool flag = false;||| 17 for (int dir = 0; dir < 4; dir++) {||| 18 int nx = i + idx[dir], ny = j + idy[dir];||| 19 int nxx = ni + idx[dir], nyy = nj + idy[dir];||| 20 if (isvalid(nx, ny) && g[nx][ny] == num) flag = true;||| 21 if (isvalid(nxx, nyy) && g[nxx][nyy] == num) flag = true;||| 22 }||| 23 if (flag) continue;||| 24 return num;||| 25 }||| 26 assert(false);||| 27 return -1;||| 28 };||| 29 if (n % 2) {||| 30 for (int i = 0; i < m; i += 2) {||| 31 int c = findMatch(n - 1, i, n - 1, i + 1);||| 32 g[n - 1][i] = g[n - 1][i + 1] = c;||| 33 k--;||| 34 }||| 35 } else if (m % 2) {||| 36 for (int i = 0; i < n; i += 2) {||| 37 int c = findMatch(i, m - 1, i + 1, m - 1);||| 38 g[i][m - 1] = g[i + 1][m - 1] = c;||| 39 }||| 40 }||| 41 int v = 0, h = n - (1 + (n % 2));||| 42 while (k--) {||| 43 if (h < 0) h = n - (1 + (n % 2)), v += 2;||| 44 auto c = findMatch(h, v, h, v + 1);||| 45 g[h][v] = g[h][v + 1] = c;||| 46 h--;||| 47 }||| 48 for (int i = 0; i < n; i++) {||| 49 for (int j = 0; j < m; j++) {||| 50 if (g[i][j] != -1) continue;||| 51 auto c = findMatch(i, j, i + 1, j);||| 52 g[i][j] = g[i + 1][j] = c;||| 53 }||| 54 }||| 55 for (int i = 0; i < n; i++) {||| 56 for (int j = 0; j < m; j++) {||| 57 assert(g[i][j] != -1);||| 58 cout << char(g[i][j] + 'a');||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 }||| 63 void runCase(int tc) {||| 64 int n, m, k;||| 65 cin >> n >> m >> k;||| 66 int hor = k, ver = (n * m / 2) - k;||| 67 if (n % 2 != 0) {||| 68 int need = m / 2;||| 69 if (hor < need) {||| 70 cout << ""NO""||| 71 << ""\n"";||| 72 return;||| 73 }||| 74 hor -= need;||| 75 if (hor % 2 != 0) {||| 76 cout << ""NO""||| 77 << ""\n"";||| 78 } else {||| 79 print(n, m, k);||| 80 }||| 81 } else if (m % 2 != 0) {||| 82 int need = n / 2;||| 83 if (ver < need) {||| 84 cout << ""NO""||| 85 << ""\n"";||| 86 return;||| 87 }||| 88 ver -= need;||| 89 if (ver % 2 != 0) {||| 90 cout << ""NO""||| 91 << ""\n"";||| 92 } else||| 93 print(n, m, k);||| 94 } else {||| 95 if (k % 2 != 0) {||| 96 cout << ""NO""||| 97 << ""\n"";||| 98 } else||| 99 print(n, m, k);||| 100 }||| 101 }||| 102 int main() {||| 103 ios_base::sync_with_stdio(false), cin.tie(0);||| 104 int t = 1;||| 105 cin >> t;||| 106 for (int tc = 1; tc <= t; tc++) runCase(tc);||| 107 return 0;||| 108 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int idx[] = {-1, 1, 0, 0}, idy[] = {0, 0, -1, 1};||| 4 void print(int n, int m, int k) {||| 5 cout << ""YES""||| 6 << ""\n"";||| 7 vector<vector<int>> g(n, vector<int>(m, -1));||| 8 auto isvalid = [&](int i, int j) -> bool {||| 9 if (i >= 0 && j >= 0 && i < n && j < m) {||| 10 return true;||| 11 }||| 12 return false;||| 13 };||| 14 auto findMatch = [&](int i, int j, int ni, int nj) -> int {||| 15 for (int num = 0; num < 26; num++) {||| 16 bool flag = false;||| 17 for (int dir = 0; dir < 4; dir++) {||| 18 int nx = i + idx[dir], ny = j + idy[dir];||| 19 int nxx = ni + idx[dir], nyy = nj + idy[dir];||| 20 if (isvalid(nx, ny) && g[nx][ny] == num) flag = true;||| 21 if (isvalid(nxx, nyy) && g[nxx][nyy] == num) flag = true;||| 22 }||| 23 if (flag) continue;||| 24 return num;||| 25 }||| 26 assert(false);||| 27 return -1;||| 28 };||| 29 if (n % 2) {||| 30 for (int i = 0; i < m; i += 2) {||| 31 int c = findMatch(n - 1, i, n - 1, i + 1);||| 32 g[n - 1][i] = g[n - 1][i + 1] = c;||| 33 k -= 2;||| 34 }||| 35 } else if (m % 2) {||| 36 for (int i = 0; i < n; i += 2) {||| 37 int c = findMatch(i, m - 1, i + 1, m - 1);||| 38 g[i][m - 1] = g[i + 1][m - 1] = c;||| 39 }||| 40 }||| 41 int v = 0, h = n - (1 + (n % 2));||| 42 while (k--) {||| 43 if (h < 0) h = n - (1 + (n % 2)), v += 2;||| 44 auto c = findMatch(h, v, h, v + 1);||| 45 g[h][v] = g[h][v + 1] = c;||| 46 h--;||| 47 }||| 48 for (int i = 0; i < n; i++) {||| 49 for (int j = 0; j < m; j++) {||| 50 if (g[i][j] != -1) continue;||| 51 auto c = findMatch(i, j, i + 1, j);||| 52 g[i][j] = g[i + 1][j] = c;||| 53 }||| 54 }||| 55 for (int i = 0; i < n; i++) {||| 56 for (int j = 0; j < m; j++) {||| 57 assert(g[i][j] != -1);||| 58 cout << char(g[i][j] + 'a');||| 59 }||| 60 cout << ""\n"";||| 61 }||| 62 }||| 63 void runCase(int tc) {||| 64 int n, m, k;||| 65 cin >> n >> m >> k;||| 66 int hor = k, ver = (n * m / 2) - k;||| 67 if (n % 2 != 0) {||| 68 int need = m / 2;||| 69 if (hor < need) {||| 70 cout << ""NO""||| 71 << ""\n"";||| 72 return;||| 73 }||| 74 hor -= need;||| 75 if (hor % 2 != 0) {||| 76 cout << ""NO""||| 77 << ""\n"";||| 78 } else {||| 79 print(n, m, k);||| 80 }||| 81 } else if (m % 2 != 0) {||| 82 int need = n / 2;||| 83 if (ver < need) {||| 84 cout << ""NO""||| 85 << ""\n"";||| 86 return;||| 87 }||| 88 ver -= need;||| 89 if (ver % 2 != 0) {||| 90 cout << ""NO""||| 91 << ""\n"";||| 92 } else||| 93 print(n, m, k);||| 94 } else {||| 95 if (k % 2 != 0) {||| 96 cout << ""NO""||| 97 << ""\n"";||| 98 } else||| 99 print(n, m, k);||| 100 }||| 101 }||| 102 int main() {||| 103 ios_base::sync_with_stdio(false), cin.tie(0);||| 104 int t = 1;||| 105 cin >> t;||| 106 for (int tc = 1; tc <= t; tc++) runCase(tc);||| 107 return 0;||| 108 }||| "	33 k--;
13	102	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, a, b, num[110][110], cur;||| 4 int ans[110][110];||| 5 void solve() {||| 6 cin >> n >> m >> k;||| 7 if (n % 2 == 0)||| 8 a = 0;||| 9 else||| 10 a = m / 2;||| 11 b = n * m / 2;||| 12 if (m % 2 == 1) b -= n / 2;||| 13 if (k >= a && k <= b && ((k - a) & 1) == 0) {||| 14 cout << ""YES\n"";||| 15 cur = 0;||| 16 if (n & 1) {||| 17 for (int i = 0; i < m; i += 2) {||| 18 num[n - 1][i] = num[n - 1][i + 1] = cur++;||| 19 k--;||| 20 }||| 21 }||| 22 if (m & 1) {||| 23 for (int i = 0; i < n; i += 2) {||| 24 num[i][m - 1] = num[i + 1][m - 1] = cur++;||| 25 }||| 26 }||| 27 for (int i = 0; i < n / 2 * 2; i += 2) {||| 28 for (int j = 0; j < m / 2 * 2; j += 2) {||| 29 if (k) {||| 30 k -= 2;||| 31 num[i][j] = num[i][j + 1] = cur++;||| 32 num[i + 1][j] = num[i + 1][j + 1] = cur++;||| 33 } else {||| 34 num[i][j] = num[i + 1][j] = cur++;||| 35 num[i][j + 1] = num[i + 1][j + 1] = cur++;||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i <= n - 1; i++)||| 40 for (int j = 0; j <= m - 1; j++) ans[i][j] = -1;||| 41 for (int i = 0; i <= n - 1; i++) {||| 42 for (int j = 0; j <= m - 1; j++) {||| 43 if (ans[i][j] != -1) continue;||| 44 if (i != n - 1 && num[i][j] == num[i + 1][j]) {||| 45 for (int t = 0; t <= 26 - 1; t++) {||| 46 if (i && t == ans[i - 1][j]) continue;||| 47 if (j && t == ans[i][j - 1]) continue;||| 48 if (j && t == ans[i + 1][j - 1]) continue;||| 49 if (j != m - 1 && t == ans[i][j + 1]) continue;||| 50 ans[i][j] = ans[i + 1][j] = t;||| 51 break;||| 52 }||| 53 } else {||| 54 for (int t = 0; t <= 26 - 1; t++) {||| 55 if (i && t == ans[i - 1][j]) continue;||| 56 if (i && t == ans[i - 1][j + 1]) continue;||| 57 if (j && t == ans[i][j - 1]) continue;||| 58 if (j != m - 2 && t == ans[i][j + 2]) continue;||| 59 ans[i][j] = ans[i][j + 1] = t;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 for (int i = 0; i <= n - 1; i++) {||| 66 for (int j = 0; j <= m - 1; j++) cout << char('a' + ans[i][j]);||| 67 cout << endl;||| 68 }||| 69 } else||| 70 cout << ""NO\n"";||| 71 }||| 72 int main() {||| 73 int T;||| 74 T = 1;||| 75 cin >> T;||| 76 while (T--) solve();||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, a, b, num[110][110], cur;||| 4 int ans[110][110];||| 5 void solve() {||| 6 cin >> n >> m >> k;||| 7 if (n % 2 == 0)||| 8 a = 0;||| 9 else||| 10 a = m / 2;||| 11 b = n * m / 2;||| 12 if (m % 2 == 1) b -= n / 2;||| 13 if (k >= a && k <= b && ((k - a) & 1) == 0) {||| 14 cout << ""YES\n"";||| 15 cur = 0;||| 16 if (n & 1) {||| 17 for (int i = 0; i < m; i += 2) {||| 18 num[n - 1][i] = num[n - 1][i + 1] = cur++;||| 19 k--;||| 20 }||| 21 }||| 22 if (m & 1) {||| 23 for (int i = 0; i < n; i += 2) {||| 24 num[i][m - 1] = num[i + 1][m - 1] = cur++;||| 25 }||| 26 }||| 27 for (int i = 0; i < n / 2 * 2; i += 2) {||| 28 for (int j = 0; j < m * 2 / 2; j += 2) {||| 29 if (k) {||| 30 k -= 2;||| 31 num[i][j] = num[i][j + 1] = cur++;||| 32 num[i + 1][j] = num[i + 1][j + 1] = cur++;||| 33 } else {||| 34 num[i][j] = num[i + 1][j] = cur++;||| 35 num[i][j + 1] = num[i + 1][j + 1] = cur++;||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i <= n - 1; i++)||| 40 for (int j = 0; j <= m - 1; j++) ans[i][j] = -1;||| 41 for (int i = 0; i <= n - 1; i++) {||| 42 for (int j = 0; j <= m - 1; j++) {||| 43 if (ans[i][j] != -1) continue;||| 44 if (i != n - 1 && num[i][j] == num[i + 1][j]) {||| 45 for (int t = 0; t <= 4 - 1; t++) {||| 46 if (i && t == ans[i - 1][j]) continue;||| 47 if (j && t == ans[i][j - 1]) continue;||| 48 if (j && t == ans[i + 1][j - 1]) continue;||| 49 if (j != m - 1 && t == ans[i][j + 1]) continue;||| 50 ans[i][j] = ans[i + 1][j] = t;||| 51 break;||| 52 }||| 53 } else {||| 54 for (int t = 0; t <= 4 - 1; t++) {||| 55 if (i && t == ans[i - 1][j]) continue;||| 56 if (i && t == ans[i - 1][j + 1]) continue;||| 57 if (j && t == ans[i][j - 1]) continue;||| 58 if (j != m - 2 && t == ans[i][j + 2]) continue;||| 59 ans[i][j] = ans[i][j + 1] = t;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 for (int i = 0; i <= n - 1; i++) {||| 66 for (int j = 0; j <= m - 1; j++) cout << char('a' + ans[i][j]);||| 67 cout << endl;||| 68 }||| 69 } else||| 70 cout << ""NO\n"";||| 71 }||| 72 int main() {||| 73 int T;||| 74 T = 1;||| 75 cin >> T;||| 76 while (T--) solve();||| 77 return 0;||| 78 }||| "	28 for (int j = 0; j < m / 2 * 2; j += 2) {
13	371	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, a, b, num[110][110], cur;||| 4 int ans[110][110];||| 5 void solve() {||| 6 cin >> n >> m >> k;||| 7 if (n % 2 == 0)||| 8 a = 0;||| 9 else||| 10 a = m / 2;||| 11 b = n * m / 2;||| 12 if (m % 2 == 1) b -= n / 2;||| 13 if (k >= a && k <= b && ((k - a) & 1) == 0) {||| 14 cout << ""YES\n"";||| 15 cur = 0;||| 16 if (n & 1) {||| 17 for (int i = 0; i < m; i += 2) {||| 18 num[n - 1][i] = num[n - 1][i + 1] = cur++;||| 19 k--;||| 20 }||| 21 }||| 22 if (m & 1) {||| 23 for (int i = 0; i < n; i += 2) {||| 24 num[i][m - 1] = num[i + 1][m - 1] = cur++;||| 25 }||| 26 }||| 27 for (int i = 0; i < n / 2 * 2; i += 2) {||| 28 for (int j = 0; j < m / 2 * 2; j += 2) {||| 29 if (k) {||| 30 k -= 2;||| 31 num[i][j] = num[i][j + 1] = cur++;||| 32 num[i + 1][j] = num[i + 1][j + 1] = cur++;||| 33 } else {||| 34 num[i][j] = num[i + 1][j] = cur++;||| 35 num[i][j + 1] = num[i + 1][j + 1] = cur++;||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i <= n - 1; i++)||| 40 for (int j = 0; j <= m - 1; j++) ans[i][j] = -1;||| 41 for (int i = 0; i <= n - 1; i++) {||| 42 for (int j = 0; j <= m - 1; j++) {||| 43 if (ans[i][j] != -1) continue;||| 44 if (i != n - 1 && num[i][j] == num[i + 1][j]) {||| 45 for (int t = 0; t <= 26 - 1; t++) {||| 46 if (i && t == ans[i - 1][j]) continue;||| 47 if (j && t == ans[i][j - 1]) continue;||| 48 if (j && t == ans[i + 1][j - 1]) continue;||| 49 if (j != m - 1 && t == ans[i][j + 1]) continue;||| 50 ans[i][j] = ans[i + 1][j] = t;||| 51 break;||| 52 }||| 53 } else {||| 54 for (int t = 0; t <= 26 - 1; t++) {||| 55 if (i && t == ans[i - 1][j]) continue;||| 56 if (i && t == ans[i - 1][j + 1]) continue;||| 57 if (j && t == ans[i][j - 1]) continue;||| 58 if (j != m - 2 && t == ans[i][j + 2]) continue;||| 59 ans[i][j] = ans[i][j + 1] = t;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 for (int i = 0; i <= n - 1; i++) {||| 66 for (int j = 0; j <= m - 1; j++) cout << char('a' + ans[i][j]);||| 67 cout << endl;||| 68 }||| 69 } else||| 70 cout << ""NO\n"";||| 71 }||| 72 int main() {||| 73 int T;||| 74 T = 1;||| 75 cin >> T;||| 76 while (T--) solve();||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, k, a, b, num[110][110], cur;||| 4 int ans[110][110];||| 5 void solve() {||| 6 cin >> n >> m >> k;||| 7 if (n % 2 == 0)||| 8 a = 0;||| 9 else||| 10 a = m / 2;||| 11 b = n * m / 2;||| 12 if (m % 2 == 1) b -= n / 2;||| 13 if (k >= a && k <= b && ((k - a) & 1) == 0) {||| 14 cout << ""YES\n"";||| 15 cur = 0;||| 16 if (n & 1) {||| 17 for (int i = 0; i < m; i += 2) {||| 18 num[n - 1][i] = num[n - 1][i + 1] = cur++;||| 19 k--;||| 20 }||| 21 }||| 22 if (m & 1) {||| 23 for (int i = 0; i < n; i += 2) {||| 24 num[i][m - 1] = num[i + 1][m - 1] = cur++;||| 25 }||| 26 }||| 27 for (int i = 0; i < n / 2 * 2; i += 2) {||| 28 for (int j = 0; j < m * 2 / 2; j += 2) {||| 29 if (k) {||| 30 k -= 2;||| 31 num[i][j] = num[i][j + 1] = cur++;||| 32 num[i + 1][j] = num[i + 1][j + 1] = cur++;||| 33 } else {||| 34 num[i][j] = num[i + 1][j] = cur++;||| 35 num[i][j + 1] = num[i + 1][j + 1] = cur++;||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i <= n - 1; i++)||| 40 for (int j = 0; j <= m - 1; j++) ans[i][j] = -1;||| 41 for (int i = 0; i <= n - 1; i++) {||| 42 for (int j = 0; j <= m - 1; j++) {||| 43 if (ans[i][j] != -1) continue;||| 44 if (i != n - 1 && num[i][j] == num[i + 1][j]) {||| 45 for (int t = 0; t <= 26 - 1; t++) {||| 46 if (i && t == ans[i - 1][j]) continue;||| 47 if (j && t == ans[i][j - 1]) continue;||| 48 if (j && t == ans[i + 1][j - 1]) continue;||| 49 if (j != m - 1 && t == ans[i][j + 1]) continue;||| 50 ans[i][j] = ans[i + 1][j] = t;||| 51 break;||| 52 }||| 53 } else {||| 54 for (int t = 0; t <= 26 - 1; t++) {||| 55 if (i && t == ans[i - 1][j]) continue;||| 56 if (i && t == ans[i - 1][j + 1]) continue;||| 57 if (j && t == ans[i][j - 1]) continue;||| 58 if (j != m - 2 && t == ans[i][j + 2]) continue;||| 59 ans[i][j] = ans[i][j + 1] = t;||| 60 break;||| 61 }||| 62 }||| 63 }||| 64 }||| 65 for (int i = 0; i <= n - 1; i++) {||| 66 for (int j = 0; j <= m - 1; j++) cout << char('a' + ans[i][j]);||| 67 cout << endl;||| 68 }||| 69 } else||| 70 cout << ""NO\n"";||| 71 }||| 72 int main() {||| 73 int T;||| 74 T = 1;||| 75 cin >> T;||| 76 while (T--) solve();||| 77 return 0;||| 78 }||| "	28 for (int j = 0; j < m / 2 * 2; j += 2) {
13	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n, m, k;||| 5 char domino[100][100];||| 6 bool vst[100][100];||| 7 void solve(int r, int c, int& cnt, bool block) {||| 8 if (vst[r][c]) return;||| 9 vst[r][c] = true;||| 10 if (cnt == 0) {||| 11 if (block) {||| 12 domino[r][c] = domino[r + 1][c] = 'a';||| 13 domino[r][c + 1] = domino[r + 1][c + 1] = 'b';||| 14 } else {||| 15 domino[r][c] = domino[r + 1][c] = 'c';||| 16 domino[r][c + 1] = domino[r + 1][c + 1] = 'd';||| 17 }||| 18 } else {||| 19 if (block) {||| 20 domino[r][c] = domino[r][c + 1] = 'a';||| 21 domino[r + 1][c] = domino[r + 1][c + 1] = 'b';||| 22 } else {||| 23 domino[r][c] = domino[r][c + 1] = 'c';||| 24 domino[r + 1][c] = domino[r + 1][c + 1] = 'd';||| 25 }||| 26 cnt -= 2;||| 27 }||| 28 if (c + 2 > m - 1) {||| 29 if (r + 2 > n - 1) {||| 30 return;||| 31 } else {||| 32 solve(r + 2, c, cnt, !block);||| 33 }||| 34 } else {||| 35 solve(r, c + 2, cnt, !block);||| 36 if (r + 2 < n - 1) solve(r + 2, c, cnt, !block);||| 37 }||| 38 }||| 39 int main(void) {||| 40 cin >> t;||| 41 for (int test_case = 0; test_case < t; test_case++) {||| 42 memset(domino, 0, sizeof(domino));||| 43 memset(vst, false, sizeof vst);||| 44 cin >> n >> m >> k;||| 45 bool flag = false;||| 46 if (n % 2 == 0 && m % 2 == 0) {||| 47 if (k % 2 == 0) {||| 48 flag = true;||| 49 }||| 50 } else if (n % 2 == 0) {||| 51 if (m == 1) {||| 52 if (k == 0) {||| 53 flag = true;||| 54 }||| 55 } else {||| 56 if (k % 2 == 0) {||| 57 if (k <= (m - 1) * (n) / 2) {||| 58 flag = true;||| 59 }||| 60 }||| 61 }||| 62 } else {||| 63 if (n == 1) {||| 64 if (k == m * n / 2) {||| 65 flag = true;||| 66 }||| 67 } else {||| 68 if (k >= m / 2) {||| 69 if ((k - m / 2) % 2 == 0) {||| 70 flag = true;||| 71 }||| 72 }||| 73 }||| 74 }||| 75 if (!flag) {||| 76 cout << ""NO""||| 77 << ""\n"";||| 78 continue;||| 79 }||| 80 cout << ""YES""||| 81 << ""\n"";||| 82 if (n % 2 == 0 && m % 2 == 0) {||| 83 solve(0, 0, k, true);||| 84 } else if (n % 2 == 0) {||| 85 bool block = true;||| 86 for (int i = 0; i < n - 1; i += 2) {||| 87 if (block) {||| 88 domino[i][0] = 'e';||| 89 domino[i + 1][0] = 'e';||| 90 block = !block;||| 91 } else {||| 92 domino[i][0] = 'f';||| 93 domino[i + 1][0] = 'f';||| 94 block = !block;||| 95 }||| 96 }||| 97 solve(0, 1, k, true);||| 98 } else {||| 99 bool block = true;||| 100 for (int i = 0; i < m - 1; i += 2) {||| 101 if (block) {||| 102 domino[0][i] = 'e';||| 103 domino[0][i + 1] = 'e';||| 104 block = !block;||| 105 } else {||| 106 domino[0][i] = 'f';||| 107 domino[0][i + 1] = 'f';||| 108 block = !block;||| 109 }||| 110 }||| 111 k -= m / 2;||| 112 solve(1, 0, k, true);||| 113 }||| 114 for (int i = 0; i < n; i++) {||| 115 for (int j = 0; j < m; j++) {||| 116 cout << domino[i][j];||| 117 }||| 118 cout << ""\n"";||| 119 }||| 120 }||| 121 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t;||| 4 int n, m, k;||| 5 char domino[100][100];||| 6 bool vst[100][100];||| 7 void solve(int r, int c, int& cnt, bool block) {||| 8 if (vst[r][c]) return;||| 9 vst[r][c] = true;||| 10 if (cnt == 0) {||| 11 if (block) {||| 12 domino[r][c] = domino[r + 1][c] = 'a';||| 13 domino[r][c + 1] = domino[r + 1][c + 1] = 'b';||| 14 } else {||| 15 domino[r][c] = domino[r + 1][c] = 'c';||| 16 domino[r][c + 1] = domino[r + 1][c + 1] = 'd';||| 17 }||| 18 } else {||| 19 if (block) {||| 20 domino[r][c] = domino[r][c + 1] = 'a';||| 21 domino[r + 1][c] = domino[r + 1][c + 1] = 'b';||| 22 } else {||| 23 domino[r][c] = domino[r][c + 1] = 'c';||| 24 domino[r + 1][c] = domino[r + 1][c + 1] = 'd';||| 25 }||| 26 cnt -= 2;||| 27 }||| 28 if (c + 2 > m - 1) {||| 29 if (r + 2 > n - 1) {||| 30 return;||| 31 } else {||| 32 solve(r + 2, c, cnt, !block);||| 33 }||| 34 } else {||| 35 solve(r, c + 2, cnt, !block);||| 36 if (r + 2 < n - 1) solve(r + 2, c, cnt, !block);||| 37 }||| 38 }||| 39 int main(void) {||| 40 cin >> t;||| 41 for (int test_case = 0; test_case < t; test_case++) {||| 42 memset(domino, 0, sizeof(domino));||| 43 memset(vst, false, sizeof vst);||| 44 cin >> n >> m >> k;||| 45 bool flag = false;||| 46 if (n % 2 == 0 && m % 2 == 0) {||| 47 if (k % 2 == 0) {||| 48 flag = true;||| 49 }||| 50 } else if (n % 2 == 0) {||| 51 if (m == 1) {||| 52 if (k == 0) {||| 53 flag = true;||| 54 }||| 55 } else {||| 56 if (k % 2 == 0) {||| 57 if (k <= (m - 1) * (n) / 2) {||| 58 flag = true;||| 59 }||| 60 }||| 61 }||| 62 } else {||| 63 if (n == 1) {||| 64 if (k == m * n / 2) {||| 65 flag = true;||| 66 }||| 67 } else {||| 68 if (k >= m / 2) {||| 69 if ((k - m / 2) % 2 == 0) {||| 70 flag = true;||| 71 }||| 72 }||| 73 }||| 74 }||| 75 if (!flag) {||| 76 cout << ""NO""||| 77 << ""\n"";||| 78 continue;||| 79 }||| 80 cout << ""YES""||| 81 << ""\n"";||| 82 if (n % 2 == 0 && m % 2 == 0) {||| 83 solve(0, 0, k, true);||| 84 } else if (n % 2 == 0) {||| 85 bool block = true;||| 86 for (int i = 0; i < n - 1; i += 2) {||| 87 if (block) {||| 88 domino[i][0] = 'e';||| 89 domino[i + 1][0] = 'e';||| 90 block = !block;||| 91 } else {||| 92 domino[i][0] = 'f';||| 93 domino[i + 1][0] = 'f';||| 94 block = !block;||| 95 }||| 96 }||| 97 solve(0, 1, k, true);||| 98 } else {||| 99 bool block = true;||| 100 for (int i = 0; i < n - 1; i += 2) {||| 101 if (block) {||| 102 domino[0][i] = 'e';||| 103 domino[0][i + 1] = 'e';||| 104 block = !block;||| 105 } else {||| 106 domino[0][i] = 'f';||| 107 domino[0][i + 1] = 'f';||| 108 block = !block;||| 109 }||| 110 }||| 111 k -= m / 2;||| 112 solve(1, 0, k, true);||| 113 }||| 114 for (int i = 0; i < n; i++) {||| 115 for (int j = 0; j < m; j++) {||| 116 cout << domino[i][j];||| 117 }||| 118 cout << ""\n"";||| 119 }||| 120 }||| 121 }||| "	100 for (int i = 0; i < m - 1; i += 2) {
13	308	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 105;||| 4 long long n, m, k, xx, t, cnt, cnt1, bb[N][N];||| 5 char ans[N][N], ans1[N][N];||| 6 void go(int i, int j) {||| 7 if (k > 0) {||| 8 if (bb[i][j] == 1) {||| 9 ans[i][j] = 'a';||| 10 ans[i][j + 1] = 'a';||| 11 ans[i + 1][j] = 'b';||| 12 ans[i + 1][j + 1] = 'b';||| 13 } else {||| 14 ans[i][j] = 'c';||| 15 ans[i][j + 1] = 'c';||| 16 ans[i + 1][j] = 'd';||| 17 ans[i + 1][j + 1] = 'd';||| 18 }||| 19 k -= 2;||| 20 } else {||| 21 if (bb[i][j] == 1) {||| 22 ans[i][j] = 'a';||| 23 ans[i + 1][j] = 'a';||| 24 ans[i][j + 1] = 'b';||| 25 ans[i + 1][j + 1] = 'b';||| 26 } else {||| 27 ans[i][j] = 'c';||| 28 ans[i + 1][j] = 'c';||| 29 ans[i][j + 1] = 'd';||| 30 ans[i + 1][j + 1] = 'd';||| 31 }||| 32 }||| 33 }||| 34 int main() {||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> m >> k;||| 38 if (n % 2 == 0 && m % 2 == 0) {||| 39 if (k % 2 == 0) {||| 40 cout << ""YES"" << endl;||| 41 cnt1 = 0;||| 42 for (int i = 1; i <= n; i += 2) {||| 43 cnt1++;||| 44 cnt = cnt1 % 2;||| 45 for (int j = 1; j <= m; j += 2) {||| 46 bb[i][j] = bb[i][j + 1] = cnt;||| 47 bb[i + 1][j] = bb[i + 1][j + 1] = cnt;||| 48 cnt++;||| 49 cnt %= 2;||| 50 }||| 51 }||| 52 for (int i = 1; i <= n; i += 2) {||| 53 for (int j = 1; j <= m; j += 2) {||| 54 go(i, j);||| 55 }||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 for (int j = 1; j <= m; j++) {||| 59 cout << ans[i][j] << """";||| 60 }||| 61 cout << endl;||| 62 }||| 63 continue;||| 64 }||| 65 cout << ""NO"" << endl;||| 66 continue;||| 67 }||| 68 long long fff = 0;||| 69 if (n % 2 == 1) swap(n, m), k = (n * m) / 2 - k, fff = 1;||| 70 if (k % 2 == 1) {||| 71 cout << ""NO"" << endl;||| 72 continue;||| 73 }||| 74 xx = n * m - n;||| 75 xx /= 2;||| 76 if (k > xx) {||| 77 cout << ""NO"" << endl;||| 78 continue;||| 79 }||| 80 for (int i = 1; i <= n; i += 2) {||| 81 cnt1++;||| 82 cnt = cnt1 % 2;||| 83 for (int j = 1; j <= m; j += 2) {||| 84 bb[i][j] = bb[i][j + 1] = cnt;||| 85 bb[i + 1][j] = bb[i + 1][j + 1] = cnt;||| 86 cnt++;||| 87 cnt %= 2;||| 88 }||| 89 }||| 90 for (int i = 1; i <= n; i++) {||| 91 for (int j = 1; j <= m; j++) {||| 92 }||| 93 }||| 94 for (int i = 1; i <= n; i += 2) {||| 95 for (int j = 1; j < m; j += 2) {||| 96 go(i, j);||| 97 }||| 98 }||| 99 for (int i = 1; i <= n; i++) {||| 100 if (bb[i][m] == 1)||| 101 ans[i][m] = 'a';||| 102 else||| 103 ans[i][m] = 'c';||| 104 }||| 105 cout << ""YES"" << endl;||| 106 for (int i = 1; i <= n; i++) {||| 107 for (int j = 1; j <= m; j++) {||| 108 if (fff) ans1[j][i] = ans[i][j];||| 109 }||| 110 }||| 111 if (fff) swap(n, m);||| 112 for (int i = 1; i <= n; i++) {||| 113 for (int j = 1; j <= m; j++) {||| 114 if (fff)||| 115 cout << ans1[i][j] << """";||| 116 else||| 117 cout << ans[i][j] << """";||| 118 }||| 119 cout << endl;||| 120 }||| 121 }||| 122 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 105;||| 4 long long n, m, k, xx, t, cnt, cnt1, bb[N][N];||| 5 char ans[N][N], ans1[N][N];||| 6 void go(int i, int j) {||| 7 if (k > 0) {||| 8 if (bb[i][j] == 1) {||| 9 ans[i][j] = 'a';||| 10 ans[i][j + 1] = 'a';||| 11 ans[i + 1][j] = 'b';||| 12 ans[i + 1][j + 1] = 'b';||| 13 } else {||| 14 ans[i][j] = 'c';||| 15 ans[i][j + 1] = 'c';||| 16 ans[i + 1][j] = 'd';||| 17 ans[i + 1][j + 1] = 'd';||| 18 }||| 19 k -= 2;||| 20 } else {||| 21 if (bb[i][j] == 1) {||| 22 ans[i][j] = 'a';||| 23 ans[i + 1][j] = 'a';||| 24 ans[i][j + 1] = 'b';||| 25 ans[i + 1][j + 1] = 'b';||| 26 } else {||| 27 ans[i][j] = 'c';||| 28 ans[i + 1][j] = 'c';||| 29 ans[i][j + 1] = 'd';||| 30 ans[i + 1][j + 1] = 'd';||| 31 }||| 32 }||| 33 }||| 34 int main() {||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> m >> k;||| 38 if (n % 2 == 0 && m % 2 == 0) {||| 39 if (k % 2 == 0) {||| 40 cout << ""YES"" << endl;||| 41 cnt1 = 0;||| 42 for (int i = 1; i <= n; i += 2) {||| 43 cnt1++;||| 44 cnt = cnt1 % 2;||| 45 for (int j = 1; j <= m; j += 2) {||| 46 bb[i][j] = bb[i][j + 1] = cnt;||| 47 bb[i + 1][j] = bb[i + 1][j + 1] = cnt;||| 48 cnt++;||| 49 cnt %= 2;||| 50 }||| 51 }||| 52 for (int i = 1; i <= n; i += 2) {||| 53 for (int j = 1; j <= m; j += 2) {||| 54 go(i, j);||| 55 }||| 56 }||| 57 for (int i = 1; i <= n; i++) {||| 58 for (int j = 1; j <= n; j++) {||| 59 cout << ans[i][j] << """";||| 60 }||| 61 cout << endl;||| 62 }||| 63 continue;||| 64 }||| 65 cout << ""NO"" << endl;||| 66 continue;||| 67 }||| 68 long long fff = 0;||| 69 if (n % 2 == 1) swap(n, m), k = (n * m) / 2 - k, fff = 1;||| 70 if (k % 2 == 1) {||| 71 cout << ""NO"" << endl;||| 72 continue;||| 73 }||| 74 xx = n * m - n;||| 75 xx /= 2;||| 76 if (k > xx) {||| 77 cout << ""NO"" << endl;||| 78 continue;||| 79 }||| 80 for (int i = 1; i <= n; i += 2) {||| 81 cnt1++;||| 82 cnt = cnt1 % 2;||| 83 for (int j = 1; j <= m; j += 2) {||| 84 bb[i][j] = bb[i][j + 1] = cnt;||| 85 bb[i + 1][j] = bb[i + 1][j + 1] = cnt;||| 86 cnt++;||| 87 cnt %= 2;||| 88 }||| 89 }||| 90 for (int i = 1; i <= n; i++) {||| 91 for (int j = 1; j <= m; j++) {||| 92 }||| 93 }||| 94 for (int i = 1; i <= n; i += 2) {||| 95 for (int j = 1; j < m; j += 2) {||| 96 go(i, j);||| 97 }||| 98 }||| 99 for (int i = 1; i <= n; i++) {||| 100 if (bb[i][m] == 1)||| 101 ans[i][m] = 'a';||| 102 else||| 103 ans[i][m] = 'c';||| 104 }||| 105 cout << ""YES"" << endl;||| 106 for (int i = 1; i <= n; i++) {||| 107 for (int j = 1; j <= m; j++) {||| 108 if (fff) ans1[j][i] = ans[i][j];||| 109 }||| 110 }||| 111 if (fff) swap(n, m);||| 112 for (int i = 1; i <= n; i++) {||| 113 for (int j = 1; j <= m; j++) {||| 114 if (fff)||| 115 cout << ans1[i][j] << """";||| 116 else||| 117 cout << ans[i][j] << """";||| 118 }||| 119 cout << endl;||| 120 }||| 121 }||| 122 }||| "	58 for (int j = 1; j <= m; j++) {
13	35	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 void test_case() {||| 5 int n, m, k;||| 6 cin >> n >> m >> k;||| 7 vector<vector<char>> table(n, vector<char>(m, '0'));||| 8 int horizontal = 0;||| 9 if (n % 2 == 1) horizontal = m / 2;||| 10 int max_h = n * (m / 2);||| 11 if (max_h < k)||| 12 cout << ""NO\n"";||| 13 else if (k >= horizontal && (k - horizontal) % 2 == 0) {||| 14 cout << ""YES\n"";||| 15 string alphabet = ""abcdefghijklmnopqrstuvwxyz"";||| 16 for (int i = 0; i < n / 2; i++) {||| 17 for (int j = 0; j < m; j++) {||| 18 table[2 * i][j] = alphabet[(j + 2 * i) % 26];||| 19 table[2 * i + 1][j] = alphabet[(j + 2 * i) % 26];||| 20 }||| 21 }||| 22 for (int j = 0; j < horizontal; j++) {||| 23 table[n - 1][j * 2] = alphabet[(n + j * 2) % 26];||| 24 table[n - 1][j * 2 + 1] = alphabet[(n + j * 2) % 26];||| 25 }||| 26 int delta = k - horizontal;||| 27 int s = 0, e = 0;||| 28 while (delta) {||| 29 delta -= 2;||| 30 table[s * 2][e * 2 + 1] = table[s * 2][e * 2];||| 31 table[s * 2 + 1][e * 2] = table[s * 2 + 1][e * 2 + 1];||| 32 e++;||| 33 if (e == m / 2) {||| 34 s++;||| 35 e = 0;||| 36 }||| 37 }||| 38 for (auto v : table) {||| 39 for (auto u : v) cout << u;||| 40 cout << '\n';||| 41 }||| 42 } else||| 43 cout << ""NO\n"";||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 int N;||| 49 cin >> N;||| 50 while (N--) {||| 51 test_case();||| 52 }||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 void test_case() {||| 5 int n, m, k;||| 6 cin >> n >> m >> k;||| 7 vector<vector<char>> table(n, vector<char>(m, '0'));||| 8 int horizontal = 0;||| 9 if (n % 2 == 1) horizontal = m / 2;||| 10 int max_h = n * (m / 2);||| 11 if (max_h < k)||| 12 cout << ""NO\n"";||| 13 else if (k >= horizontal && (k - horizontal) % 2 == 0) {||| 14 cout << ""YES\n"";||| 15 string alphabet = ""abcdefghijklmnopqrstuvwxyz"";||| 16 for (int i = 0; i < n / 2; i++) {||| 17 for (int j = 0; j < m; j++) {||| 18 table[2 * i][j] = alphabet[(j + 2 * i) % 26];||| 19 table[2 * i + 1][j] = alphabet[(j + 2 * i) % 26];||| 20 }||| 21 }||| 22 for (int j = 0; j < horizontal / 2; j++) {||| 23 table[n - 1][j * 2] = alphabet[(n + j * 2) % 26];||| 24 table[n - 1][j * 2 + 1] = alphabet[(n + j * 2) % 26];||| 25 }||| 26 int delta = k - horizontal;||| 27 int s = 0, e = 0;||| 28 while (delta) {||| 29 delta -= 2;||| 30 table[s * 2][e * 2 + 1] = table[s * 2][e * 2];||| 31 table[s * 2 + 1][e * 2] = table[s * 2 + 1][e * 2 + 1];||| 32 e++;||| 33 if (e == m / 2) {||| 34 s++;||| 35 e = 0;||| 36 }||| 37 }||| 38 for (auto v : table) {||| 39 for (auto u : v) cout << u;||| 40 cout << '\n';||| 41 }||| 42 } else||| 43 cout << ""NO\n"";||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 int N;||| 49 cin >> N;||| 50 while (N--) {||| 51 test_case();||| 52 }||| 53 }||| "	22 for (int j = 0; j < horizontal; j++) {
13	69	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 5, LMAX = 3e18 + 13, IMAX = 2e9 + 13, mod = 998244353;||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long T;||| 8 cin >> T;||| 9 while (T--) {||| 10 long long n, m, k;||| 11 cin >> n >> m >> k;||| 12 bool swapped = false;||| 13 if (n & 1) {||| 14 swap(n, m);||| 15 k = ((n * m) / 2) - k;||| 16 swapped = true;||| 17 }||| 18 if (k & 1) {||| 19 cout << ""NO\n"";||| 20 continue;||| 21 }||| 22 char a[n][m];||| 23 for (long long i = 0; i < n; ++i)||| 24 for (long long j = 0; j < m; ++j) a[i][j] = '\0';||| 25 for (long long i = 0; i < n and i < n - 1 and k; i += 2) {||| 26 long long c = 0;||| 27 for (long long j = 0; j < m and j < m - 1 and k; j += 2) {||| 28 a[i][j] = c + 'a';||| 29 a[i][j + 1] = c + 'a';||| 30 a[i + 1][j] = 'a' + (c + 1) % 2;||| 31 a[i + 1][j + 1] = 'a' + (c + 1) % 2;||| 32 c = (c + 1) % 2;||| 33 k -= 2;||| 34 }||| 35 }||| 36 if (k > 0) {||| 37 cout << ""NO\n"";||| 38 continue;||| 39 }||| 40 long long p = 0;||| 41 for (long long j = 0; j < m; j += 2) {||| 42 long long c = 0;||| 43 for (long long i = 0; i < n and i < n - 1; i += 2) {||| 44 if (a[i][j] == '\0') {||| 45 a[i][j] = c + 10 * p + 'j';||| 46 a[i + 1][j] = c + 10 * p + 'j';||| 47 c = (c + 1) % 2;||| 48 if (j < m - 1) {||| 49 a[i][j + 1] = c + 10 * p + 'j';||| 50 a[i + 1][j + 1] = c + 10 * p + 'j';||| 51 }||| 52 }||| 53 }||| 54 p++;||| 55 p %= 2;||| 56 }||| 57 cout << ""YES\n"";||| 58 if (swapped) {||| 59 for (long long i = 0; i < m; ++i) {||| 60 for (long long j = 0; j < n; ++j) cout << a[j][i];||| 61 cout << ""\n"";||| 62 }||| 63 } else {||| 64 for (long long i = 0; i < n; ++i) {||| 65 for (long long j = 0; j < m; ++j) cout << a[i][j];||| 66 cout << ""\n"";||| 67 }||| 68 }||| 69 }||| 70 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 5, LMAX = 3e18 + 13, IMAX = 2e9 + 13, mod = 998244353;||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long T;||| 8 cin >> T;||| 9 while (T--) {||| 10 long long n, m, k;||| 11 cin >> n >> m >> k;||| 12 bool swapped = false;||| 13 if (n & 1) {||| 14 swap(n, m);||| 15 k = ((n * m) / 2) - k;||| 16 swapped = true;||| 17 }||| 18 if (k & 1) {||| 19 cout << ""NO\n"";||| 20 continue;||| 21 }||| 22 char a[n][m];||| 23 for (long long i = 0; i < n; ++i)||| 24 for (long long j = 0; j < m; ++j) a[i][j] = '\0';||| 25 for (long long i = 0; i < n and i < n - 1 and k; i += 2) {||| 26 long long c = 0;||| 27 for (long long j = 0; j < m and j < m - 1 and k; j += 2) {||| 28 a[i][j] = c + 'a';||| 29 a[i][j + 1] = c + 'a';||| 30 a[i + 1][j] = 'a' + (c + 1) % 2;||| 31 a[i + 1][j + 1] = 'a' + (c + 1) % 2;||| 32 c = (c + 1) % 2;||| 33 k -= 2;||| 34 }||| 35 }||| 36 if (k > 0) {||| 37 cout << ""NO\n"";||| 38 continue;||| 39 }||| 40 long long p = 0;||| 41 for (long long j = 0; j < m; j += 2) {||| 42 long long c = 0;||| 43 for (long long i = 0; i < n and i < n - 1; i += 2) {||| 44 if (a[i][j] == '\0') {||| 45 a[i][j] = c + 10 * p + 'j';||| 46 a[i + 1][j] = c + 10 * p + 'j';||| 47 c = (c + 1) % 2;||| 48 if (j < m - 1) a[i][j + 1] = c + 10 * p + 'j';||| 49 a[i + 1][j + 1] = c + 10 * p + 'j';||| 50 }||| 51 }||| 52 p++;||| 53 p %= 2;||| 54 }||| 55 cout << ""YES\n"";||| 56 if (swapped) {||| 57 for (long long i = 0; i < m; ++i) {||| 58 for (long long j = 0; j < n; ++j) cout << a[j][i];||| 59 cout << ""\n"";||| 60 }||| 61 } else {||| 62 for (long long i = 0; i < n; ++i) {||| 63 for (long long j = 0; j < m; ++j) cout << a[i][j];||| 64 cout << ""\n"";||| 65 }||| 66 }||| 67 }||| 68 }||| "	48 if (j < m - 1) {
13	258	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 110;||| 4 const int INF = 0x3f3f3f3f;||| 5 const long long MOD = 1e9 + 7;||| 6 int n, m, k, f;||| 7 char s[MAXN][MAXN];||| 8 bool check(int x, int y, int f, char w) {||| 9 int res = 1;||| 10 if (f) {||| 11 res &= s[x][y - 1] != w;||| 12 res &= s[x - 1][y] != w;||| 13 res &= s[x - 1][y + 1] != w;||| 14 } else {||| 15 res &= s[x][y - 1] != w;||| 16 res &= s[x + 1][y - 1] != w;||| 17 res &= s[x - 1][y] != w;||| 18 }||| 19 return res;||| 20 }||| 21 void work(int x, int y, int f) {||| 22 for (char w = 'a'; w <= 'z'; w++) {||| 23 if (check(x, y, f, w)) {||| 24 s[x][y] = w;||| 25 if (f)||| 26 s[x][y + 1] = w;||| 27 else||| 28 s[x + 1][y] = w;||| 29 return;||| 30 }||| 31 }||| 32 }||| 33 bool ok(int n, int m, int k) {||| 34 k -= m >> 1;||| 35 if (!(k >= 0 && k % 2 == 0)) return false;||| 36 for (int j = 1; j <= m; j += 2) work(1, j, 1);||| 37 for (int i = 2; i <= n; i += 2) {||| 38 for (int j = 1; j <= m; j += 2) {||| 39 if (k >= 2) {||| 40 k -= 2;||| 41 work(i, j, 1), work(i + 1, j, 1);||| 42 } else {||| 43 work(i, j, 0), work(i, j + 1, 0);||| 44 }||| 45 }||| 46 }||| 47 return true;||| 48 }||| 49 inline void run() {||| 50 cin >> n >> m >> k;||| 51 for (int i = (int)(0); i <= (int)(105); i++)||| 52 for (int j = (int)(0); j <= (int)(105); j++) s[i][j] = '?';||| 53 int c = 0, d = 0;||| 54 if (m & 1) swap(n, m), k = n * m / 2 - k, c = 1;||| 55 if (n & 1)||| 56 f = ok(n, m, k), d = 1;||| 57 else||| 58 f = k % 2 == 0;||| 59 if (!f) return cout << (""NO"") << '\n', void();||| 60 cout << (""YES"") << '\n';||| 61 if (d) {||| 62 if (c) {||| 63 for (int j = (int)(1); j <= (int)(m); j++) {||| 64 for (int i = (int)(1); i <= (int)(n); i++) cout << s[i][j];||| 65 cout << '\n';||| 66 }||| 67 } else {||| 68 for (int i = (int)(1); i <= (int)(n); i++) {||| 69 for (int j = (int)(1); j <= (int)(m); j++) cout << s[i][j];||| 70 cout << '\n';||| 71 }||| 72 }||| 73 } else {||| 74 for (int i = 1; i <= n; i += 2) {||| 75 for (int j = 1; j <= m; j += 2) {||| 76 if (k >= 2) {||| 77 k -= 2;||| 78 work(i, j, 1), work(i + 1, j, 1);||| 79 } else {||| 80 work(i, j, 0), work(i, j + 1, 0);||| 81 }||| 82 }||| 83 }||| 84 for (int i = (int)(1); i <= (int)(n); i++) {||| 85 for (int j = (int)(1); j <= (int)(m); j++) cout << s[i][j];||| 86 cout << '\n';||| 87 }||| 88 }||| 89 }||| 90 int main() {||| 91 ios_base::sync_with_stdio(false);||| 92 cin.tie(nullptr), cout.tie(nullptr);||| 93 int T;||| 94 for (cin >> T; T--;) run();||| 95 return 0;||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 110;||| 4 const int INF = 0x3f3f3f3f;||| 5 const long long MOD = 1e9 + 7;||| 6 int n, m, k, f;||| 7 char s[MAXN][MAXN];||| 8 bool check(int x, int y, int f, char w) {||| 9 int res = 1;||| 10 if (f) {||| 11 res &= s[x][y - 1] != w;||| 12 res &= s[x - 1][y] != w;||| 13 res &= s[x - 1][y + 1] != w;||| 14 } else {||| 15 res &= s[x][y - 1] != w;||| 16 res &= s[x + 1][y - 1] != w;||| 17 res &= s[x - 1][y] != w;||| 18 }||| 19 return res;||| 20 }||| 21 void work(int x, int y, int f) {||| 22 for (char w = 'a'; w <= 'z'; w++) {||| 23 if (check(x, y, f, w)) {||| 24 s[x][y] = w;||| 25 if (f)||| 26 s[x][y + 1] = w;||| 27 else||| 28 s[x + 1][y] = w;||| 29 return;||| 30 }||| 31 }||| 32 }||| 33 bool ok(int n, int m, int k) {||| 34 k -= m >> 1;||| 35 if (!(k >= 0 && k % 2 == 0)) return false;||| 36 for (int j = 1; j <= m; j += 2) work(1, j, 1);||| 37 for (int i = 2; i <= n; i += 2) {||| 38 for (int j = 1; j <= m; j += 2) {||| 39 if (k >= 2) {||| 40 k -= 2;||| 41 work(i, j, 1), work(i + 1, j, 1);||| 42 } else {||| 43 work(i, 1, 0), work(i, j + 1, 0);||| 44 }||| 45 }||| 46 }||| 47 return true;||| 48 }||| 49 inline void run() {||| 50 cin >> n >> m >> k;||| 51 for (int i = (int)(0); i <= (int)(105); i++)||| 52 for (int j = (int)(0); j <= (int)(105); j++) s[i][j] = '?';||| 53 int c = 0, d = 0;||| 54 if (m & 1) swap(n, m), k = n * m / 2 - k, c = 1;||| 55 if (n & 1)||| 56 f = ok(n, m, k), d = 1;||| 57 else||| 58 f = k % 2 == 0;||| 59 if (!f) return cout << (""NO"") << '\n', void();||| 60 cout << (""YES"") << '\n';||| 61 if (d) {||| 62 if (c) {||| 63 for (int j = (int)(1); j <= (int)(m); j++) {||| 64 for (int i = (int)(1); i <= (int)(n); i++) cout << s[i][j];||| 65 cout << '\n';||| 66 }||| 67 } else {||| 68 for (int i = (int)(1); i <= (int)(n); i++) {||| 69 for (int j = (int)(1); j <= (int)(m); j++) cout << s[i][j];||| 70 cout << '\n';||| 71 }||| 72 }||| 73 } else {||| 74 for (int i = 1; i <= n; i += 2) {||| 75 for (int j = 1; j <= m; j += 2) {||| 76 if (k >= 2) {||| 77 k -= 2;||| 78 work(i, j, 1), work(i + 1, j, 1);||| 79 } else {||| 80 work(i, j, 0), work(i, j + 1, 0);||| 81 }||| 82 }||| 83 }||| 84 for (int i = (int)(1); i <= (int)(n); i++) {||| 85 for (int j = (int)(1); j <= (int)(m); j++) cout << s[i][j];||| 86 cout << '\n';||| 87 }||| 88 }||| 89 }||| 90 int main() {||| 91 ios_base::sync_with_stdio(false);||| 92 cin.tie(nullptr), cout.tie(nullptr);||| 93 int T;||| 94 for (cin >> T; T--;) run();||| 95 return 0;||| 96 }||| "	43 work(i, j, 0), work(i, j + 1, 0);
13	35	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 void test_case() {||| 5 int n, m, k;||| 6 cin >> n >> m >> k;||| 7 vector<vector<char>> table(n, vector<char>(m, '0'));||| 8 int horizontal = 0;||| 9 if (n % 2 == 1) horizontal = m / 2;||| 10 int max_h = n * (m / 2);||| 11 if (max_h < k)||| 12 cout << ""NO\n"";||| 13 else if (k >= horizontal && (k - horizontal) % 2 == 0) {||| 14 cout << ""YES\n"";||| 15 string alphabet = ""abcdefghijklmnopqrstuvwxyz"";||| 16 for (int i = 0; i < n / 2; i++) {||| 17 for (int j = 0; j < m; j++) {||| 18 table[2 * i][j] = alphabet[(j + 2 * i) % 26];||| 19 table[2 * i + 1][j] = alphabet[(j + 2 * i) % 26];||| 20 }||| 21 }||| 22 for (int j = 0; j < horizontal; j++) {||| 23 table[n - 1][j * 2] = alphabet[(n + j * 2) % 26];||| 24 table[n - 1][j * 2 + 1] = alphabet[(n + j * 2) % 26];||| 25 }||| 26 int delta = k - horizontal;||| 27 int s = 0, e = 0;||| 28 while (delta) {||| 29 delta -= 2;||| 30 table[s * 2][e * 2 + 1] = table[s * 2][e * 2];||| 31 table[s * 2 + 1][e * 2] = table[s * 2 + 1][e * 2 + 1];||| 32 e++;||| 33 if (e == m / 2) {||| 34 s++;||| 35 e = 0;||| 36 }||| 37 }||| 38 for (auto v : table) {||| 39 for (auto u : v) cout << u;||| 40 cout << '\n';||| 41 }||| 42 } else||| 43 cout << ""NO\n"";||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 int N;||| 49 cin >> N;||| 50 while (N--) {||| 51 test_case();||| 52 }||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 void test_case() {||| 5 int n, m, k;||| 6 cin >> n >> m >> k;||| 7 vector<vector<char>> table(n, vector<char>(m, '0'));||| 8 int horizontal = 0;||| 9 if (n % 2 == 1) horizontal = m / 2;||| 10 int max_h = n * (m / 2);||| 11 if (max_h < k)||| 12 cout << ""NO\n"";||| 13 else if (k >= horizontal && (k - horizontal) % 2 == 0) {||| 14 cout << ""YES\n"";||| 15 string alphabet = ""abcdefghijklmnopqrstuvwxyz"";||| 16 for (int i = 0; i < n / 2; i++) {||| 17 for (int j = 0; j < m; j++) {||| 18 table[2 * i][j] = alphabet[(j + 2 * i) % 26];||| 19 table[2 * i + 1][j] = alphabet[(j + 2 * i) % 26];||| 20 }||| 21 }||| 22 for (int j = 0; j < horizontal / 2; j++) {||| 23 table[n - 1][j * 2] = alphabet[(n + j * 2) % 26];||| 24 table[n - 1][j * 2 + 1] = alphabet[(n + j * 2) % 26];||| 25 }||| 26 int delta = k - horizontal;||| 27 int s = 0, e = 0;||| 28 while (delta) {||| 29 delta -= 2;||| 30 table[s * 2][e * 2 + 1] = table[s * 2][e * 2];||| 31 table[s * 2 + 1][e * 2] = table[s * 2 + 1][e * 2 + 1];||| 32 e++;||| 33 if (e == m / 2) {||| 34 s++;||| 35 e = 0;||| 36 }||| 37 }||| 38 for (auto v : table) {||| 39 for (auto u : v) cout << u;||| 40 cout << '\n';||| 41 }||| 42 } else||| 43 cout << ""NO\n"";||| 44 }||| 45 int main() {||| 46 ios::sync_with_stdio(0);||| 47 cin.tie(0);||| 48 int N;||| 49 cin >> N;||| 50 while (N--) {||| 51 test_case();||| 52 }||| 53 }||| "	22 for (int j = 0; j < horizontal; j++) {
14	208	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 2e5 + 50;||| 4 long long n, dp[maxn], k, a[maxn], b[maxn], tp[maxn];||| 5 void solve() {||| 6 for (long long i = 1; i <= n; i++) b[i] = i - a[i];||| 7 long long pos = 1, ans = 1e18;||| 8 for (long long i = 1; i <= n; i++) {||| 9 dp[i] = (b[i] >= 0);||| 10 for (long long j = 1; j <= i - 1; j++) {||| 11 if (b[i] >= 0 and a[i] > a[j] and b[j] <= b[i]) {||| 12 dp[i] = max(dp[i], dp[j] + 1);||| 13 }||| 14 }||| 15 if (dp[i] >= k and b[i] >= 0) {||| 16 ans = min(ans, b[i]);||| 17 }||| 18 }||| 19 if (ans != 1e18)||| 20 cout << ans << '\n';||| 21 else||| 22 cout << -1 << '\n';||| 23 }||| 24 void input() {||| 25 cin >> n >> k;||| 26 for (long long i = 1; i <= n; i++) cin >> a[i], dp[i] = 0;||| 27 }||| 28 signed main() {||| 29 ios_base::sync_with_stdio(false), cin.tie(0);||| 30 ;||| 31 long long tt;||| 32 cin >> tt;||| 33 while (tt--) {||| 34 input();||| 35 solve();||| 36 }||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 2e5 + 50;||| 4 long long n, dp[maxn], k, a[maxn], b[maxn], tp[maxn];||| 5 void solve() {||| 6 for (long long i = 1; i <= n; i++) b[i] = i - a[i];||| 7 long long pos = 1, ans = 1e18;||| 8 for (long long i = 1; i <= n; i++) {||| 9 dp[i] = (b[i] >= 0);||| 10 for (long long j = 1; j <= i - 1; j++) {||| 11 if (b[i] >= 0 and a[i] > a[j] and b[j] <= b[i]) {||| 12 dp[i] = max(dp[i], dp[j] + 1);||| 13 }||| 14 if (dp[i] >= k and b[i] >= 0) {||| 15 ans = min(ans, b[i]);||| 16 }||| 17 }||| 18 }||| 19 if (ans != 1e18)||| 20 cout << ans << '\n';||| 21 else||| 22 cout << -1 << '\n';||| 23 }||| 24 void input() {||| 25 cin >> n >> k;||| 26 for (long long i = 1; i <= n; i++) cin >> a[i], dp[i] = 0;||| 27 }||| 28 signed main() {||| 29 ios_base::sync_with_stdio(false), cin.tie(0);||| 30 ;||| 31 long long tt;||| 32 cin >> tt;||| 33 while (tt--) {||| 34 input();||| 35 solve();||| 36 }||| 37 }||| 	14 }
14	20	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int task(vector<int> &nums, int k) {||| 4 int n = nums.size();||| 5 vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));||| 6 for (int i = 1; i <= n; i++) {||| 7 for (int j = 1; j <= i; j++) {||| 8 dp[i][j] =||| 9 max(dp[i - 1][j], dp[i - 1][j - 1] + ((nums[i - 1] == j) ? 1 : 0));||| 10 }||| 11 }||| 12 int ans = INT_MAX;||| 13 for (int i = k; i <= n; i++) {||| 14 for (int j = 1; j <= n; j++) {||| 15 if (dp[i][j] >= k) {||| 16 ans = min(ans, i - j);||| 17 }||| 18 }||| 19 }||| 20 if (ans == INT_MAX) {||| 21 return -1;||| 22 }||| 23 return ans;||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(nullptr);||| 28 int t;||| 29 cin >> t;||| 30 for (int i = 0; i < t; i++) {||| 31 int n, k;||| 32 cin >> n >> k;||| 33 vector<int> nums(n);||| 34 for (int j = 0; j < n; j++) {||| 35 cin >> nums[j];||| 36 }||| 37 int ans = task(nums, k);||| 38 cout << ans << '\n';||| 39 }||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int task(vector<int> &nums, int k) {||| 4 int n = nums.size();||| 5 vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));||| 6 for (int i = 1; i <= n; i++) {||| 7 for (int j = 1; j <= n; j++) {||| 8 dp[i][j] =||| 9 max(dp[i - 1][j], dp[i - 1][j - 1] + ((nums[i - 1] == j) ? 1 : 0));||| 10 }||| 11 }||| 12 int ans = INT_MAX;||| 13 for (int i = k; i <= n; i++) {||| 14 for (int j = 1; j <= n; j++) {||| 15 if (dp[i][j] >= k) {||| 16 ans = min(ans, i - j);||| 17 }||| 18 }||| 19 }||| 20 if (ans == INT_MAX) {||| 21 return -1;||| 22 }||| 23 return ans;||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(nullptr);||| 28 int t;||| 29 cin >> t;||| 30 for (int i = 0; i < t; i++) {||| 31 int n, k;||| 32 cin >> n >> k;||| 33 vector<int> nums(n);||| 34 for (int j = 0; j < n; j++) {||| 35 cin >> nums[j];||| 36 }||| 37 int ans = task(nums, k);||| 38 cout << ans << '\n';||| 39 }||| 40 }||| 	7 for (int j = 1; j <= i; j++) {
14	93	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<int> a(n);||| 7 for (int i = 0; i < n; i++) cin >> a[i];||| 8 int dp[n + 1][n + 1];||| 9 memset(dp, 0, sizeof(dp));||| 10 for (int i = 1; i <= n; i++) {||| 11 for (int j = 1; j <= i; j++) {||| 12 dp[i][j] = dp[i - 1][j];||| 13 dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + (a[i - 1] == j));||| 14 }||| 15 }||| 16 for (int i = n; i >= k; i--) {||| 17 if (dp[n][i] >= k) {||| 18 cout << n - i << endl;||| 19 return;||| 20 }||| 21 }||| 22 cout << -1 << endl;||| 23 }||| 24 int main() {||| 25 int t;||| 26 cin >> t;||| 27 for (int i = 0; i < t; i++) {||| 28 solve();||| 29 }||| 30 return 0;||| 31 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<int> a(n);||| 7 for (int i = 0; i < n; i++) cin >> a[i];||| 8 int dp[n + 1][n + 1];||| 9 memset(dp, 0, sizeof(dp));||| 10 for (int i = 1; i <= n; i++) {||| 11 for (int j = 0; j <= i; j++) {||| 12 dp[i][j] = dp[i - 1][j];||| 13 dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + (a[i - 1] == j));||| 14 }||| 15 }||| 16 for (int i = n; i >= k; i--) {||| 17 if (dp[n][i] >= k) {||| 18 cout << n - i << endl;||| 19 return;||| 20 }||| 21 }||| 22 cout << -1 << endl;||| 23 }||| 24 int main() {||| 25 int t;||| 26 cin >> t;||| 27 for (int i = 0; i < t; i++) {||| 28 solve();||| 29 }||| 30 return 0;||| 31 }||| 	11 for (int j = 1; j <= i; j++) {
14	41	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2002;||| 4 void solve() {||| 5 int n, k;||| 6 cin >> n >> k;||| 7 int ans = -1;||| 8 vector<int> a(n + 1, 0);||| 9 vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));||| 10 for (int i = 1; i <= n; i++) cin >> a[i];||| 11 for (int i = 1; i <= n; i++) {||| 12 dp[i][0] = dp[i - 1][0] + (i == a[i]);||| 13 for (int cnt = 1; cnt <= i; cnt++) {||| 14 dp[i][cnt] =||| 15 max(dp[i - 1][cnt - 1], dp[i - 1][cnt] + ((i - cnt) == a[i]));||| 16 }||| 17 }||| 18 for (int i = n; i >= 0; i--)||| 19 if (dp[n][i] >= k) ans = i;||| 20 cout << ans << endl;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int t;||| 26 cin >> t;||| 27 while (t--) {||| 28 solve();||| 29 }||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2002;||| 4 void solve() {||| 5 int n, k;||| 6 cin >> n >> k;||| 7 int ans = -1;||| 8 vector<int> a(n + 1, 0);||| 9 vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));||| 10 for (int i = 1; i <= n; i++) cin >> a[i];||| 11 for (int i = 1; i <= n; i++) {||| 12 dp[i][0] = dp[i - 1][0] + (i == a[i]);||| 13 for (int cnt = 1; cnt <= i; cnt++) {||| 14 dp[i][cnt] =||| 15 max(dp[i - 1][cnt - 1], dp[i - 1][cnt] + ((i - cnt) == a[i]));||| 16 }||| 17 }||| 18 for (int i = n; i > 0; i--)||| 19 if (dp[n][i] >= k) ans = i;||| 20 cout << ans << endl;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(nullptr);||| 25 int t;||| 26 cin >> t;||| 27 while (t--) {||| 28 solve();||| 29 }||| 30 }||| 	18 for (int i = n; i >= 0; i--)
14	124	1 #include <bits/stdc++.h>||| 2 long long mod = 1000000007;||| 3 using namespace std;||| 4 long long ceiling(long long a, long long b) {||| 5 if (a % b == 0)||| 6 return a / b;||| 7 else||| 8 return a / b + 1;||| 9 }||| 10 long long power(long long a, long long b) {||| 11 if (b == 0)||| 12 return 1;||| 13 else if (b % 2 == 1) {||| 14 long long k = power(a, b / 2) % mod;||| 15 return (((a * k) % mod) * k) % mod;||| 16 } else {||| 17 long long k = power(a, b / 2) % mod;||| 18 return (k * k) % mod;||| 19 }||| 20 }||| 21 long long gcd(long long a, long long b) {||| 22 if (a > b) swap(a, b);||| 23 if (a == 0) return b;||| 24 return gcd(b % a, a);||| 25 }||| 26 bool comparePairs(vector<long long> &a, vector<long long> &b) {||| 27 long long cnt = 0;||| 28 for (int i = 0; i < 5; i++) {||| 29 if (a[i] < b[i]) cnt++;||| 30 }||| 31 return cnt >= 3;||| 32 }||| 33 int main() {||| 34 ios_base::sync_with_stdio(false);||| 35 cin.tie(NULL);||| 36 long long q;||| 37 cin >> q;||| 38 while (q--) {||| 39 long long n, k, i, j;||| 40 cin >> n >> k;||| 41 vector<long long> a(n);||| 42 for (i = 0; i < n; i++) {||| 43 cin >> a[i];||| 44 }||| 45 vector<vector<long long>> dp(n + 1, vector<long long>(n + 1, 0));||| 46 long long ans = -1;||| 47 for (i = 1; i < n + 1; i++) {||| 48 for (j = 1; j < i + 1; j++) {||| 49 long long k = (a[i - 1] == j) ? 1 : 0;||| 50 dp[i][j] = max(k + dp[i - 1][j - 1], dp[i - 1][j]);||| 51 }||| 52 }||| 53 for (i = 0; i <= n; i++) {||| 54 if (dp[n][i] >= k) ans = max(ans, i);||| 55 }||| 56 if (ans != -1)||| 57 cout << n - ans << endl;||| 58 else||| 59 cout << -1 << endl;||| 60 }||| 61 }||| 	1 #include <bits/stdc++.h>||| 2 long long mod = 1000000007;||| 3 using namespace std;||| 4 long long ceiling(long long a, long long b) {||| 5 if (a % b == 0)||| 6 return a / b;||| 7 else||| 8 return a / b + 1;||| 9 }||| 10 long long power(long long a, long long b) {||| 11 if (b == 0)||| 12 return 1;||| 13 else if (b % 2 == 1) {||| 14 long long k = power(a, b / 2) % mod;||| 15 return (((a * k) % mod) * k) % mod;||| 16 } else {||| 17 long long k = power(a, b / 2) % mod;||| 18 return (k * k) % mod;||| 19 }||| 20 }||| 21 long long gcd(long long a, long long b) {||| 22 if (a > b) swap(a, b);||| 23 if (a == 0) return b;||| 24 return gcd(b % a, a);||| 25 }||| 26 bool comparePairs(vector<long long> &a, vector<long long> &b) {||| 27 long long cnt = 0;||| 28 for (int i = 0; i < 5; i++) {||| 29 if (a[i] < b[i]) cnt++;||| 30 }||| 31 return cnt >= 3;||| 32 }||| 33 int main() {||| 34 ios_base::sync_with_stdio(false);||| 35 cin.tie(NULL);||| 36 long long q;||| 37 cin >> q;||| 38 while (q--) {||| 39 long long n, k, i, j;||| 40 cin >> n >> k;||| 41 vector<long long> a(n);||| 42 for (i = 0; i < n; i++) {||| 43 cin >> a[i];||| 44 }||| 45 vector<vector<long long>> dp(n + 1, vector<long long>(n + 1, 0));||| 46 long long ans = -1;||| 47 for (i = 1; i < n + 1; i++) {||| 48 for (j = 1; j < n + 1; j++) {||| 49 long long k = (a[i - 1] == j) ? 1 : 0;||| 50 dp[i][j] = max(k + dp[i - 1][j - 1], dp[i - 1][j]);||| 51 }||| 52 }||| 53 for (i = 0; i <= n; i++) {||| 54 if (dp[n][i] >= k) ans = max(ans, i);||| 55 }||| 56 if (ans != -1)||| 57 cout << n - ans << endl;||| 58 else||| 59 cout << -1 << endl;||| 60 }||| 61 }||| 	48 for (j = 1; j < i + 1; j++) {
14	161	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v(n);||| 7 vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12));||| 8 for (long long i = 0; i < n; i++) cin >> v[i];||| 9 dp[0][0] = dp[0][1] = 0;||| 10 if (v[0] == 1) dp[0][0] = 1;||| 11 for (long long i = 1; i < n; i++) {||| 12 for (long long j = 0; j < n; j++) {||| 13 if (dp[i - 1][j] >= 0) {||| 14 long long add = 0;||| 15 if (v[i] == i + 1 - j) add = 1;||| 16 dp[i][j] = max(dp[i][j], dp[i - 1][j] + add);||| 17 if (j + 1 <= n) {||| 18 dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]);||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i < n; i++) {||| 24 if (dp[n - 1][i] >= k) {||| 25 cout << i << '\n';||| 26 return;||| 27 }||| 28 }||| 29 cout << -1 << '\n';||| 30 }||| 31 int main() {||| 32 ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) solve();||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v(n);||| 7 vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12));||| 8 for (long long i = 0; i < n; i++) cin >> v[i];||| 9 dp[0][0] = dp[0][1] = 0;||| 10 if (v[0] == 1) dp[0][0] = 1;||| 11 for (long long i = 1; i < n; i++) {||| 12 for (long long j = 0; j < i; j++) {||| 13 if (dp[i - 1][j] >= 0) {||| 14 long long add = 0;||| 15 if (v[i] == i + 1 - j) add = 1;||| 16 dp[i][j] = max(dp[i][j], dp[i - 1][j] + add);||| 17 if (j + 1 <= n) {||| 18 dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]);||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i < n; i++) {||| 24 if (dp[n - 1][i] >= k) {||| 25 cout << i << '\n';||| 26 return;||| 27 }||| 28 }||| 29 cout << -1 << '\n';||| 30 }||| 31 int main() {||| 32 ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) solve();||| 37 }||| 	12 for (long long j = 0; j < n; j++) {
14	109	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long N = 2e3 + 10;||| 5 long long dp[N][N];||| 6 long long n, k;||| 7 long long A[N];||| 8 long long dfs(long long i, long long removed) {||| 9 if (removed < 0) {||| 10 return -MOD;||| 11 }||| 12 if (i == 0) {||| 13 return removed == 0 ? 0 : -MOD;||| 14 }||| 15 long long &ans = dp[i][removed];||| 16 if (ans != -1) {||| 17 return ans;||| 18 }||| 19 ans =||| 20 max(dfs(i - 1, removed) + (A[i] == i - removed), dfs(i - 1, removed - 1));||| 21 return ans;||| 22 }||| 23 void Perform() {||| 24 cin >> n >> k;||| 25 for (long long i = 0; i <= n; ++i) {||| 26 for (long long j = 0; j <= n; ++j) {||| 27 dp[i][j] = -1;||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; ++i) {||| 31 cin >> A[i];||| 32 }||| 33 for (long long i = 0; i <= n; ++i) {||| 34 if (dfs(n, i) >= k) {||| 35 cout << i << ""\n"";||| 36 return;||| 37 }||| 38 }||| 39 cout << ""-1\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(0);||| 44 long long tc = 1;||| 45 cin >> tc;||| 46 while (tc--) {||| 47 Perform();||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long N = 2e3 + 10;||| 5 long long dp[N][N];||| 6 long long n, k;||| 7 long long A[N];||| 8 long long dfs(long long i, long long removed) {||| 9 if (removed < 0) {||| 10 return -MOD;||| 11 }||| 12 if (i == 0) {||| 13 return removed == 0 ? 0 : -MOD;||| 14 }||| 15 long long &ans = dp[i][removed];||| 16 if (ans != -1) {||| 17 return ans;||| 18 }||| 19 ans =||| 20 max(dfs(i - 1, removed) + (A[i] == i - removed), dfs(i - 1, removed - 1));||| 21 return ans;||| 22 }||| 23 void Perform() {||| 24 cin >> n >> k;||| 25 for (long long i = 0; i <= n; ++i) {||| 26 for (long long j = 0; j <= k; ++j) {||| 27 dp[i][j] = -1;||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; ++i) {||| 31 cin >> A[i];||| 32 }||| 33 for (long long i = 0; i <= n; ++i) {||| 34 if (dfs(n, i) >= k) {||| 35 cout << i << ""\n"";||| 36 return;||| 37 }||| 38 }||| 39 cout << ""-1\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(0);||| 44 long long tc = 1;||| 45 cin >> tc;||| 46 while (tc--) {||| 47 Perform();||| 48 }||| 49 return 0;||| 50 }||| "	26 for (long long j = 0; j <= n; ++j) {
14	9	"1 #include <bits/stdc++.h>||| 2 const int NMAX = 2e3;||| 3 int a[1 + NMAX];||| 4 int dp[1 + NMAX][1 + NMAX];||| 5 int main() {||| 6 int tests;||| 7 std::cin >> tests;||| 8 while (tests--) {||| 9 int n, k;||| 10 std::cin >> n >> k;||| 11 for (int i = 1; i <= n; ++i) std::cin >> a[i];||| 12 for (int i = 0; i <= n; ++i) {||| 13 for (int del = 0; del <= k; ++del) dp[i][del] = 0;||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 dp[i][0] = dp[i - 1][0] + (a[i] == i);||| 17 for (int del = 1; del <= i; ++del)||| 18 dp[i][del] =||| 19 std::max(dp[i - 1][del - 1], dp[i - 1][del] + (a[i] == i - del));||| 20 }||| 21 bool found = false;||| 22 for (int del = 0; del <= n; ++del) {||| 23 if (dp[n][del] >= k) {||| 24 std::cout << del << '\n';||| 25 found = true;||| 26 break;||| 27 }||| 28 }||| 29 if (!found) std::cout << ""-1\n"";||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 const int NMAX = 2e3;||| 3 int a[1 + NMAX];||| 4 int dp[1 + NMAX][1 + NMAX];||| 5 int main() {||| 6 int tests;||| 7 std::cin >> tests;||| 8 while (tests--) {||| 9 int n, k;||| 10 std::cin >> n >> k;||| 11 for (int i = 1; i <= n; ++i) std::cin >> a[i];||| 12 for (int i = 0; i <= n; ++i) {||| 13 for (int del = 0; del <= k; ++del) dp[i][del] = 0;||| 14 }||| 15 for (int i = 1; i <= n; ++i) {||| 16 dp[i][0] = dp[i - 1][0] + (a[i] == i);||| 17 for (int del = 1; del <= k; ++del)||| 18 dp[i][del] =||| 19 std::max(dp[i - 1][del - 1], dp[i - 1][del] + (a[i] == i - del));||| 20 }||| 21 bool found = false;||| 22 for (int del = 0; del <= k; ++del) {||| 23 if (dp[n][del] >= k) {||| 24 std::cout << del << '\n';||| 25 found = true;||| 26 break;||| 27 }||| 28 }||| 29 if (!found) std::cout << ""-1\n"";||| 30 }||| 31 return 0;||| 32 }||| "	17 for (int del = 1; del <= i; ++del)
14	16	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print() { cout << ""\n""; }||| 4 template <typename T>||| 5 void print(const T& x) {||| 6 cout << x;||| 7 }||| 8 template <typename T, typename... R>||| 9 void print(const T& x, const R&... r) {||| 10 cout << x;||| 11 print(r...);||| 12 }||| 13 template <typename T>||| 14 void _prints(const T& x) {||| 15 cout << x;||| 16 }||| 17 template <typename T, typename... R>||| 18 void _prints(const T& x, const R&... r) {||| 19 cout << x << "" "";||| 20 _prints(r...);||| 21 }||| 22 template <typename T>||| 23 void prints(const T& x) {||| 24 cout << x << "" "";||| 25 }||| 26 template <typename T, typename... R>||| 27 void prints(const T& x, const R&... r) {||| 28 _prints(x, r...);||| 29 print();||| 30 }||| 31 template <typename T>||| 32 void read(T& x) {||| 33 cin >> x;||| 34 }||| 35 template <typename T, typename... R>||| 36 void read(T& x, R&... r) {||| 37 cin >> x;||| 38 read(r...);||| 39 }||| 40 template <typename _T>||| 41 void _debug(const char* s, _T x) {||| 42 cerr << s << "" = "" << x << ""\n"";||| 43 }||| 44 template <typename _T, typename... R>||| 45 void _debug(const char* s, _T x, R... r) {||| 46 while (*s != ',') cerr << *s++;||| 47 cerr << "" = "" << x << "", "";||| 48 _debug(s + 1, r...);||| 49 }||| 50 int _int(const char& c) {||| 51 if (c >= 'a' && c <= 'z') return c - 'a';||| 52 if (c >= 'A' && c <= 'Z') return c - 'A';||| 53 if (c >= '0' && c <= '9') return c - '0';||| 54 return c;||| 55 }||| 56 using ll = long long;||| 57 using ld = long double;||| 58 const int N = 2e3 + 5, INF = 1e9, MOD = 1e9 + 7;||| 59 int dp[N][N];||| 60 int32_t main() {||| 61 ios_base::sync_with_stdio(0);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 int t = 1;||| 65 read(t);||| 66 for (int tt = 0; tt < t; tt++) {||| 67 int n, k;||| 68 read(n, k);||| 69 vector<int> arr(n + 1);||| 70 for (int i = 1; i <= n; i++) {||| 71 read(arr[i]);||| 72 }||| 73 for (int i = 0; i < n; i++) {||| 74 for (int j = 0; j <= i; j++) {||| 75 bool flag = (arr[i + 1] == j + 1);||| 76 dp[i + 1][j] = max(dp[i + 1][j], dp[i][j]);||| 77 dp[i + 1][j + 1] = max(dp[i + 1][j + 1], dp[i][j] + flag);||| 78 }||| 79 }||| 80 int ans = INF;||| 81 for (int i = 0; i <= n; i++) {||| 82 if (dp[n][i] >= k) ans = min(ans, n - i);||| 83 }||| 84 memset(dp, 0, sizeof(dp));||| 85 print(ans != INF ? ans : -1);||| 86 print();||| 87 }||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print() { cout << ""\n""; }||| 4 template <typename T>||| 5 void print(const T& x) {||| 6 cout << x;||| 7 }||| 8 template <typename T, typename... R>||| 9 void print(const T& x, const R&... r) {||| 10 cout << x;||| 11 print(r...);||| 12 }||| 13 template <typename T>||| 14 void _prints(const T& x) {||| 15 cout << x;||| 16 }||| 17 template <typename T, typename... R>||| 18 void _prints(const T& x, const R&... r) {||| 19 cout << x << "" "";||| 20 _prints(r...);||| 21 }||| 22 template <typename T>||| 23 void prints(const T& x) {||| 24 cout << x << "" "";||| 25 }||| 26 template <typename T, typename... R>||| 27 void prints(const T& x, const R&... r) {||| 28 _prints(x, r...);||| 29 print();||| 30 }||| 31 template <typename T>||| 32 void read(T& x) {||| 33 cin >> x;||| 34 }||| 35 template <typename T, typename... R>||| 36 void read(T& x, R&... r) {||| 37 cin >> x;||| 38 read(r...);||| 39 }||| 40 template <typename _T>||| 41 void _debug(const char* s, _T x) {||| 42 cerr << s << "" = "" << x << ""\n"";||| 43 }||| 44 template <typename _T, typename... R>||| 45 void _debug(const char* s, _T x, R... r) {||| 46 while (*s != ',') cerr << *s++;||| 47 cerr << "" = "" << x << "", "";||| 48 _debug(s + 1, r...);||| 49 }||| 50 int _int(const char& c) {||| 51 if (c >= 'a' && c <= 'z') return c - 'a';||| 52 if (c >= 'A' && c <= 'Z') return c - 'A';||| 53 if (c >= '0' && c <= '9') return c - '0';||| 54 return c;||| 55 }||| 56 using ll = long long;||| 57 using ld = long double;||| 58 const int N = 2e3 + 5, INF = 1e9, MOD = 1e9 + 7;||| 59 int dp[N][N];||| 60 int32_t main() {||| 61 ios_base::sync_with_stdio(0);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 int t = 1;||| 65 read(t);||| 66 for (int tt = 0; tt < t; tt++) {||| 67 int n, k;||| 68 read(n, k);||| 69 vector<int> arr(n + 1);||| 70 for (int i = 1; i <= n; i++) {||| 71 read(arr[i]);||| 72 }||| 73 for (int i = 0; i < n; i++) {||| 74 for (int j = 0; j <= i; j++) {||| 75 bool flag = (arr[i + 1] == j + 1);||| 76 dp[i + 1][j] = max(dp[i + 1][j], dp[i][j]);||| 77 dp[i + 1][j + 1] = max(dp[i + 1][j + 1], dp[i][j] + flag);||| 78 }||| 79 }||| 80 int ans = INF;||| 81 for (int i = 0; i < n; i++) {||| 82 if (dp[n][i] >= k) ans = min(ans, n - i);||| 83 }||| 84 memset(dp, 0, sizeof(dp));||| 85 print(ans != INF ? ans : -1);||| 86 print();||| 87 }||| 88 return 0;||| 89 }||| "	81 for (int i = 0; i <= n; i++) {
14	161	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v(n);||| 7 vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12));||| 8 for (long long i = 0; i < n; i++) cin >> v[i];||| 9 dp[0][0] = dp[0][1] = 0;||| 10 if (v[0] == 1) dp[0][0] = 1;||| 11 for (long long i = 1; i < n; i++) {||| 12 for (long long j = 0; j <= i; j++) {||| 13 if (dp[i - 1][j] >= 0) {||| 14 long long add = 0;||| 15 if (v[i] == i + 1 - j) add = 1;||| 16 dp[i][j] = max(dp[i][j], dp[i - 1][j] + add);||| 17 if (j + 1 <= n) {||| 18 dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]);||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i <= n; i++) {||| 24 if (dp[n - 1][i] >= k) {||| 25 cout << i << '\n';||| 26 return;||| 27 }||| 28 }||| 29 cout << -1 << '\n';||| 30 }||| 31 int main() {||| 32 ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) solve();||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v(n);||| 7 vector<vector<long long>> dp(n + 5, vector<long long>(n + 5, -1e12));||| 8 for (long long i = 0; i < n; i++) cin >> v[i];||| 9 dp[0][0] = dp[0][1] = 0;||| 10 if (v[0] == 1) dp[0][0] = 1;||| 11 for (long long i = 1; i < n; i++) {||| 12 for (long long j = 0; j < i; j++) {||| 13 if (dp[i - 1][j] >= 0) {||| 14 long long add = 0;||| 15 if (v[i] == i + 1 - j) add = 1;||| 16 dp[i][j] = max(dp[i][j], dp[i - 1][j] + add);||| 17 if (j + 1 <= n) {||| 18 dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]);||| 19 }||| 20 }||| 21 }||| 22 }||| 23 for (long long i = 0; i < n; i++) {||| 24 if (dp[n - 1][i] >= k) {||| 25 cout << i << '\n';||| 26 return;||| 27 }||| 28 }||| 29 cout << -1 << '\n';||| 30 }||| 31 int main() {||| 32 ios::sync_with_stdio(false);||| 33 cin.tie(0);||| 34 int t;||| 35 cin >> t;||| 36 while (t--) solve();||| 37 }||| 	12 for (long long j = 0; j <= i; j++) {
14	43	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2004;||| 4 int nums[maxn];||| 5 int dp[maxn][maxn];||| 6 int n, k;||| 7 void solve() {||| 8 cin >> n >> k;||| 9 for (int i = 1; i <= n; i++) cin >> nums[i];||| 10 for (int i = 1; i <= n; i++) {||| 11 for (int j = 0; j <= i - 1; j++) {||| 12 dp[i][j] = dp[i - 1][j] + (i - j == nums[i]);||| 13 }||| 14 for (int j = 1; j < i; j++) {||| 15 dp[i][j] = max(dp[i][j], dp[i - 1][j - 1]);||| 16 }||| 17 }||| 18 int ans = -1;||| 19 for (int i = 0; i <= n; i++) {||| 20 if (dp[n][i] >= k) {||| 21 ans = i;||| 22 break;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 for (int i = 0; i <= n; i++)||| 27 for (int u = 0; u <= n; u++) dp[i][u] = 0;||| 28 }||| 29 int main() {||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 solve();||| 34 }||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2004;||| 4 int nums[maxn];||| 5 int dp[maxn][maxn];||| 6 int n, k;||| 7 void solve() {||| 8 cin >> n >> k;||| 9 for (int i = 1; i <= n; i++) cin >> nums[i];||| 10 for (int i = 1; i <= n; i++) {||| 11 for (int j = 0; j <= i - 1; j++) {||| 12 dp[i][j] = dp[i - 1][j] + (i - j == nums[i]);||| 13 }||| 14 for (int j = 1; j < i; j++) {||| 15 dp[i][j] = max(dp[i][j], dp[i - 1][j - 1]);||| 16 }||| 17 }||| 18 int ans = -1;||| 19 for (int i = 1; i <= n; i++) {||| 20 if (dp[n][i] >= k) {||| 21 ans = i;||| 22 break;||| 23 }||| 24 }||| 25 cout << ans << endl;||| 26 for (int i = 0; i <= n; i++)||| 27 for (int u = 0; u <= n; u++) dp[i][u] = 0;||| 28 }||| 29 int main() {||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 solve();||| 34 }||| 35 }||| 	19 for (int i = 0; i <= n; i++) {
14	221	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long N = 2e3 + 10;||| 5 long long dp[N][N];||| 6 long long n, k;||| 7 long long A[N];||| 8 long long dfs(long long i, long long removed) {||| 9 if (removed < 0) {||| 10 return -MOD;||| 11 }||| 12 if (i == 0) {||| 13 return removed == 0 ? 0 : -MOD;||| 14 }||| 15 long long &ans = dp[i][removed];||| 16 if (ans != -1) {||| 17 return ans;||| 18 }||| 19 ans = dfs(i - 1, removed) + (A[i] == i - removed);||| 20 ans = max(ans, dfs(i - 1, removed - 1));||| 21 return ans;||| 22 }||| 23 void Perform() {||| 24 cin >> n >> k;||| 25 for (long long i = 0; i <= n; ++i) {||| 26 for (long long j = 0; j <= n; ++j) {||| 27 dp[i][j] = -1;||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; ++i) {||| 31 cin >> A[i];||| 32 }||| 33 for (long long i = 0; i <= n; ++i) {||| 34 if (dfs(n, i) >= k) {||| 35 cout << i << ""\n"";||| 36 return;||| 37 }||| 38 }||| 39 cout << ""-1\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(0);||| 44 long long tc = 1;||| 45 cin >> tc;||| 46 while (tc--) {||| 47 Perform();||| 48 }||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1e9 + 7;||| 4 const long long N = 2e3 + 10;||| 5 long long dp[N][N];||| 6 long long n, k;||| 7 long long A[N];||| 8 long long dfs(long long i, long long removed) {||| 9 if (removed < 0) {||| 10 return -MOD;||| 11 }||| 12 if (i == 0) {||| 13 return removed == 0 ? 0 : -MOD;||| 14 }||| 15 long long &ans = dp[i][removed];||| 16 if (ans != -1) {||| 17 return ans;||| 18 }||| 19 ans = dfs(i - 1, removed) + (A[i] == i - removed);||| 20 ans = max(ans, dfs(i - 1, removed - 1));||| 21 return ans;||| 22 }||| 23 void Perform() {||| 24 cin >> n >> k;||| 25 for (long long i = 0; i <= n; ++i) {||| 26 for (long long j = 0; j <= k; ++j) {||| 27 dp[i][j] = -1;||| 28 }||| 29 }||| 30 for (long long i = 1; i <= n; ++i) {||| 31 cin >> A[i];||| 32 }||| 33 for (long long i = 0; i <= n; ++i) {||| 34 if (dfs(n, i) >= k) {||| 35 cout << i << ""\n"";||| 36 return;||| 37 }||| 38 }||| 39 cout << ""-1\n"";||| 40 }||| 41 int32_t main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(0);||| 44 long long tc = 1;||| 45 cin >> tc;||| 46 while (tc--) {||| 47 Perform();||| 48 }||| 49 return 0;||| 50 }||| "	26 for (long long j = 0; j <= n; ++j) {
14	191	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T;||| 4 int n, k;||| 5 int a[2010];||| 6 int dp[2010][2010], mx[2010];||| 7 template <typename Tp>||| 8 void read(Tp &x) {||| 9 x = 0;||| 10 int f = 1;||| 11 char c = getchar();||| 12 while (c < '0' || c > '9') {||| 13 if (c == '-') f = -1;||| 14 c = getchar();||| 15 }||| 16 while (c >= '0' && c <= '9') {||| 17 x = x * 10 + c - '0';||| 18 c = getchar();||| 19 }||| 20 x *= f;||| 21 }||| 22 int main() {||| 23 read(T);||| 24 while (T--) {||| 25 read(n), read(k);||| 26 for (int i = 1; i <= n; i++) read(a[i]);||| 27 for (int i = 1; i <= n; i++) {||| 28 for (int j = 0; j < i; j++) {||| 29 dp[i][j] = mx[i - j - 1] + (i - j == a[i]);||| 30 }||| 31 for (int j = 0; j <= i; j++) mx[j] = max(mx[j], dp[i][i - j]);||| 32 }||| 33 bool flag = false;||| 34 for (int i = 0; i < n; i++) {||| 35 if (dp[n][i] >= k) {||| 36 flag = true;||| 37 printf(""%d\n"", i);||| 38 break;||| 39 }||| 40 }||| 41 if (!flag) printf(""-1\n"");||| 42 for (int i = 1; i <= n; i++)||| 43 for (int j = 0; j <= n; j++) dp[i][j] = mx[j] = 0;||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T;||| 4 int n, k;||| 5 int a[2010];||| 6 int dp[2010][2010], mx[2010];||| 7 template <typename Tp>||| 8 void read(Tp &x) {||| 9 x = 0;||| 10 int f = 1;||| 11 char c = getchar();||| 12 while (c < '0' || c > '9') {||| 13 if (c == '-') f = -1;||| 14 c = getchar();||| 15 }||| 16 while (c >= '0' && c <= '9') {||| 17 x = x * 10 + c - '0';||| 18 c = getchar();||| 19 }||| 20 x *= f;||| 21 }||| 22 int main() {||| 23 read(T);||| 24 while (T--) {||| 25 read(n), read(k);||| 26 for (int i = 1; i <= n; i++) read(a[i]);||| 27 for (int i = 1; i <= n; i++) {||| 28 for (int j = 0; j < i; j++) {||| 29 dp[i][j] = mx[i - j - 1] + (i - j == a[i]);||| 30 }||| 31 for (int j = 0; j <= i; j++) mx[j] = max(mx[j], dp[i][i - j]);||| 32 }||| 33 bool flag = false;||| 34 for (int i = 0; i < n; i++) {||| 35 if (dp[n][i] >= k) {||| 36 flag = true;||| 37 printf(""%d\n"", i);||| 38 break;||| 39 }||| 40 }||| 41 if (!flag) printf(""-1\n"");||| 42 for (int i = 1; i <= n; i++)||| 43 for (int j = 0; j < n; j++) dp[i][j] = mx[j] = 0;||| 44 }||| 45 return 0;||| 46 }||| "	43 for (int j = 0; j <= n; j++) dp[i][j] = mx[j] = 0;
14	192	"1 #include <bits/stdc++.h>||| 2 constexpr int N = 2005;||| 3 int T, n, k;||| 4 int a[N], f[N][N];||| 5 int main() {||| 6 std::ios::sync_with_stdio(false), std::cin.tie(nullptr);||| 7 std::cin >> T;||| 8 while (T--) {||| 9 std::cin >> n >> k;||| 10 for (int i = 1; i <= n; ++i) std::cin >> a[i], a[i] = i - a[i];||| 11 for (int i = 1; i <= n; ++i)||| 12 for (int j = 0; j <= i; ++j) {||| 13 f[i][j] = f[i - 1][j];||| 14 if (a[i] == j) ++f[i][j];||| 15 if (j) f[i][j] = std::max(f[i][j], f[i - 1][j - 1]);||| 16 }||| 17 bool ok = false;||| 18 for (int i = 0; i <= n; ++i)||| 19 if (f[n][i] >= k) {||| 20 std::cout << i << '\n';||| 21 ok = true;||| 22 break;||| 23 }||| 24 if (!ok) std::cout << ""-1\n"";||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 constexpr int N = 2005;||| 3 int T, n, k;||| 4 int a[N], f[N][N];||| 5 int main() {||| 6 std::ios::sync_with_stdio(false), std::cin.tie(nullptr);||| 7 std::cin >> T;||| 8 while (T--) {||| 9 std::cin >> n >> k;||| 10 for (int i = 1; i <= n; ++i) std::cin >> a[i], a[i] = i - a[i];||| 11 for (int i = 1; i <= n; ++i)||| 12 for (int j = 0; j <= i; ++j) {||| 13 f[i][j] = f[i - 1][j];||| 14 if (a[i] == j) ++f[i][j];||| 15 if (j) f[i][j] = std::max(f[i][j], f[i - 1][j - 1]);||| 16 }||| 17 bool ok = false;||| 18 for (int i = 1; i <= n; ++i)||| 19 if (f[n][i] >= k) {||| 20 std::cout << i << '\n';||| 21 ok = true;||| 22 break;||| 23 }||| 24 if (!ok) std::cout << ""-1\n"";||| 25 }||| 26 return 0;||| 27 }||| "	18 for (int i = 0; i <= n; ++i)
14	118	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 using namespace std;||| 4 template <typename... Args>||| 5 void logger(string vars, Args &&...values) {||| 6 cout << vars << "" = "";||| 7 string delim = """";||| 8 }||| 9 inline string toString(int x) {||| 10 string ans = """";||| 11 bool negtive = x < 0;||| 12 x = abs(x);||| 13 while (x) ans.push_back(x % 10 + '0'), x /= 10;||| 14 if (ans.size() == 0) ans = ""0"";||| 15 if (negtive) ans.push_back('-');||| 16 for (int i = 0; i < ans.size() / 2; i++)||| 17 swap(ans[i], ans[ans.size() - 1 - i]);||| 18 return ans;||| 19 }||| 20 inline int toInt(const string &str) {||| 21 int ans = 0;||| 22 bool negtive = str[0] == '-';||| 23 for (int i = negtive; i < str.size(); i++) ans = ans * 10 + str[i] - '0';||| 24 if (negtive) ans *= -1;||| 25 return ans;||| 26 }||| 27 inline int gcd(int x, int y) { return x ? gcd(y % x, x) : y; }||| 28 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 29 long long d = a;||| 30 if (b == 0)||| 31 x = 1, y = 0;||| 32 else {||| 33 d = exgcd(b, a % b, y, x), y -= a / b * x;||| 34 }||| 35 return d;||| 36 }||| 37 const int mod = 998244353;||| 38 inline int read() {||| 39 int ans = 0;||| 40 char last = ' ', ch = getchar();||| 41 while (!(ch >= '0' && ch <= '9')) last = ch, ch = getchar();||| 42 while (ch >= '0' && ch <= '9')||| 43 ans = (ans << 3) + (ans << 1) + ch - '0', ch = getchar();||| 44 return ans;||| 45 }||| 46 inline int QPow(long long a, long long b) {||| 47 long long ans = 1;||| 48 if (b < 0) return 0;||| 49 while (b) {||| 50 if (b & 1) ans = ans * a;||| 51 a = a * a;||| 52 b >>= 1;||| 53 }||| 54 return ans;||| 55 }||| 56 inline int QPow(long long a, long long b, const int &mod) {||| 57 long long ans = 1;||| 58 while (b) {||| 59 if (b & 1) ans = ans * a % mod;||| 60 a = a * a % mod;||| 61 b >>= 1;||| 62 }||| 63 return ans;||| 64 }||| 65 const double PI = 3.141592653589793115997963468544185161590576171875;||| 66 const double e = 2.718281828459045;||| 67 void ask(int x) {||| 68 cout << '?' << ' ' << x << endl;||| 69 cout.flush();||| 70 ;||| 71 }||| 72 void decide(int x) {||| 73 cout << ""! "" << x << endl;||| 74 cout.flush();||| 75 ;||| 76 }||| 77 short _min(short a, short b) { return a < b ? a : b; }||| 78 const int inf = (long long)1 << 60;||| 79 const int inf2 = 10000;||| 80 const double eps = 1e-10;||| 81 int db_cmp(double x, double y) {||| 82 if (fabs(x - y) < eps) return 0;||| 83 if (x > y) return 1;||| 84 return -1;||| 85 }||| 86 const int maxn = 2002;||| 87 int arr[maxn];||| 88 int dp[maxn][maxn];||| 89 int main() {||| 90 ios::sync_with_stdio(false);||| 91 cin.tie(0);||| 92 cout.tie(0);||| 93 int t, n, k;||| 94 cin >> t;||| 95 while (t--) {||| 96 cin >> n >> k;||| 97 for (int i = 1; i <= n; i++) cin >> arr[i];||| 98 dp[1][1] = 0;||| 99 dp[1][0] = arr[1] == 1;||| 100 for (int i = 2; i <= n; i++) {||| 101 for (int j = 1; j <= i; j++) {||| 102 dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j] + (arr[i] == i - j));||| 103 }||| 104 dp[i][0] = (arr[i] == i) + dp[i - 1][0];||| 105 dp[i][i] = 0;||| 106 }||| 107 int ans = -1;||| 108 for (int i = 0; i <= n; i++)||| 109 if (dp[n][i] >= k) {||| 110 ans = i;||| 111 break;||| 112 }||| 113 cout << ans << '\n';||| 114 for (int i = 1; i <= n; i++)||| 115 for (int j = 1; j <= n; j++) dp[i][j] = 0;||| 116 }||| 117 return 0;||| 118 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 using namespace std;||| 4 template <typename... Args>||| 5 void logger(string vars, Args &&...values) {||| 6 cout << vars << "" = "";||| 7 string delim = """";||| 8 }||| 9 inline string toString(int x) {||| 10 string ans = """";||| 11 bool negtive = x < 0;||| 12 x = abs(x);||| 13 while (x) ans.push_back(x % 10 + '0'), x /= 10;||| 14 if (ans.size() == 0) ans = ""0"";||| 15 if (negtive) ans.push_back('-');||| 16 for (int i = 0; i < ans.size() / 2; i++)||| 17 swap(ans[i], ans[ans.size() - 1 - i]);||| 18 return ans;||| 19 }||| 20 inline int toInt(const string &str) {||| 21 int ans = 0;||| 22 bool negtive = str[0] == '-';||| 23 for (int i = negtive; i < str.size(); i++) ans = ans * 10 + str[i] - '0';||| 24 if (negtive) ans *= -1;||| 25 return ans;||| 26 }||| 27 inline int gcd(int x, int y) { return x ? gcd(y % x, x) : y; }||| 28 long long exgcd(long long a, long long b, long long &x, long long &y) {||| 29 long long d = a;||| 30 if (b == 0)||| 31 x = 1, y = 0;||| 32 else {||| 33 d = exgcd(b, a % b, y, x), y -= a / b * x;||| 34 }||| 35 return d;||| 36 }||| 37 const int mod = 998244353;||| 38 inline int read() {||| 39 int ans = 0;||| 40 char last = ' ', ch = getchar();||| 41 while (!(ch >= '0' && ch <= '9')) last = ch, ch = getchar();||| 42 while (ch >= '0' && ch <= '9')||| 43 ans = (ans << 3) + (ans << 1) + ch - '0', ch = getchar();||| 44 return ans;||| 45 }||| 46 inline int QPow(long long a, long long b) {||| 47 long long ans = 1;||| 48 if (b < 0) return 0;||| 49 while (b) {||| 50 if (b & 1) ans = ans * a;||| 51 a = a * a;||| 52 b >>= 1;||| 53 }||| 54 return ans;||| 55 }||| 56 inline int QPow(long long a, long long b, const int &mod) {||| 57 long long ans = 1;||| 58 while (b) {||| 59 if (b & 1) ans = ans * a % mod;||| 60 a = a * a % mod;||| 61 b >>= 1;||| 62 }||| 63 return ans;||| 64 }||| 65 const double PI = 3.141592653589793115997963468544185161590576171875;||| 66 const double e = 2.718281828459045;||| 67 void ask(int x) {||| 68 cout << '?' << ' ' << x << endl;||| 69 cout.flush();||| 70 ;||| 71 }||| 72 void decide(int x) {||| 73 cout << ""! "" << x << endl;||| 74 cout.flush();||| 75 ;||| 76 }||| 77 short _min(short a, short b) { return a < b ? a : b; }||| 78 const int inf = (long long)1 << 60;||| 79 const int inf2 = 10000;||| 80 const double eps = 1e-10;||| 81 int db_cmp(double x, double y) {||| 82 if (fabs(x - y) < eps) return 0;||| 83 if (x > y) return 1;||| 84 return -1;||| 85 }||| 86 const int maxn = 2002;||| 87 int arr[maxn];||| 88 int dp[maxn][maxn];||| 89 int main() {||| 90 ios::sync_with_stdio(false);||| 91 cin.tie(0);||| 92 cout.tie(0);||| 93 int t, n, k;||| 94 cin >> t;||| 95 while (t--) {||| 96 cin >> n >> k;||| 97 for (int i = 1; i <= n; i++) cin >> arr[i];||| 98 dp[1][1] = 0;||| 99 dp[1][0] = arr[1] == 1;||| 100 for (int i = 2; i <= n; i++) {||| 101 for (int j = 1; j <= i; j++) {||| 102 dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j] + (arr[i] == i - j));||| 103 }||| 104 dp[i][0] = (arr[i] == i) + dp[i - 1][0];||| 105 dp[i][i] = 0;||| 106 }||| 107 int ans = -1;||| 108 for (int i = 1; i <= n; i++)||| 109 if (dp[n][i] >= k) {||| 110 ans = i;||| 111 break;||| 112 }||| 113 cout << ans << '\n';||| 114 for (int i = 1; i <= n; i++)||| 115 for (int j = 1; j <= n; j++) dp[i][j] = 0;||| 116 }||| 117 return 0;||| 118 }||| "	108 for (int i = 0; i <= n; i++)
14	181	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""avx2"")||| 4 using namespace std;||| 5 const int mxN = 2000;||| 6 int t, n, k;||| 7 int a[mxN];||| 8 int dp[mxN + 1][mxN + 1];||| 9 void solve() {||| 10 cin >> n >> k;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i];||| 13 }||| 14 for (int i = 1; i <= n; ++i) {||| 15 for (int j = 1; j <= i; ++j) {||| 16 dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1]);||| 17 if (a[i - 1] == j) dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 1);||| 18 }||| 19 }||| 20 for (int i = n; i >= 0; --i) {||| 21 if (dp[n][i] >= k) {||| 22 cout << n - i << '\n';||| 23 return;||| 24 }||| 25 }||| 26 cout << -1 << '\n';||| 27 return;||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 31 ;||| 32 cin >> t;||| 33 for (int x = 0; x < t; ++x) {||| 34 solve();||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""avx2"")||| 4 using namespace std;||| 5 const int mxN = 2000;||| 6 int t, n, k;||| 7 int a[mxN];||| 8 int dp[mxN + 1][mxN + 1];||| 9 void solve() {||| 10 cin >> n >> k;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i];||| 13 }||| 14 for (int i = 1; i <= n; ++i) {||| 15 for (int j = 1; j <= n; ++j) {||| 16 dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1]);||| 17 if (a[i - 1] == j) dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 1);||| 18 }||| 19 }||| 20 for (int i = n; i >= 0; --i) {||| 21 if (dp[n][i] >= k) {||| 22 cout << n - i << '\n';||| 23 return;||| 24 }||| 25 }||| 26 cout << -1 << '\n';||| 27 return;||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 31 ;||| 32 cin >> t;||| 33 for (int x = 0; x < t; ++x) {||| 34 solve();||| 35 }||| 36 }||| "	15 for (int j = 1; j <= i; ++j) {
14	40	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 constexpr ll mod = 1000000007;||| 5 int main() {||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(nullptr);||| 8 cout << fixed << setprecision(20);||| 9 int T;||| 10 cin >> T;||| 11 while (T--) {||| 12 int n, k;||| 13 cin >> n >> k;||| 14 vector<int> p(n);||| 15 for (int i = 0; i < n; i++) {||| 16 cin >> p[i];||| 17 p[i]--;||| 18 }||| 19 vector<int> f(n + 1, -1);||| 20 f[0] = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 vector<int> dp(n + 1, -1);||| 23 dp[0] = 0;||| 24 for (int j = 0; j <= i; j++) {||| 25 if (p[i] == i - j) {||| 26 dp[j] = max(dp[j], f[j] + 1);||| 27 } else {||| 28 dp[j] = max(dp[j], f[j]);||| 29 }||| 30 dp[j + 1] = max(dp[j + 1], f[j]);||| 31 }||| 32 swap(dp, f);||| 33 }||| 34 int ans = -1;||| 35 for (int i = 0; i <= n; i++) {||| 36 if (f[i] >= k) {||| 37 ans = i;||| 38 break;||| 39 }||| 40 }||| 41 cout << ans << '\n';||| 42 }||| 43 return 0;||| 44 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 constexpr ll mod = 1000000007;||| 5 int main() {||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(nullptr);||| 8 cout << fixed << setprecision(20);||| 9 int T;||| 10 cin >> T;||| 11 while (T--) {||| 12 int n, k;||| 13 cin >> n >> k;||| 14 vector<int> p(n);||| 15 for (int i = 0; i < n; i++) {||| 16 cin >> p[i];||| 17 p[i]--;||| 18 }||| 19 vector<int> f(n + 1, -1);||| 20 f[0] = 0;||| 21 for (int i = 0; i < n; i++) {||| 22 vector<int> dp(n + 1, -1);||| 23 dp[0] = 0;||| 24 for (int j = 0; j <= i; j++) {||| 25 if (p[i] == i - j) {||| 26 dp[j] = max(dp[j], f[j] + 1);||| 27 } else {||| 28 dp[j] = max(dp[j], f[j]);||| 29 }||| 30 dp[j + 1] = max(dp[j + 1], dp[j]);||| 31 }||| 32 swap(dp, f);||| 33 }||| 34 int ans = -1;||| 35 for (int i = 0; i <= n; i++) {||| 36 if (f[i] >= k) {||| 37 ans = i;||| 38 break;||| 39 }||| 40 }||| 41 cout << ans << '\n';||| 42 }||| 43 return 0;||| 44 }||| 	30 dp[j + 1] = max(dp[j + 1], f[j]);
15	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const LL mod = 1e9 + 7;||| 5 int n, k, u, v;||| 6 vector<int> graph[205];||| 7 LL dp[205][205];||| 8 bool vis[205];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &k);||| 14 for (int i = 1; i < n; ++i) {||| 15 scanf(""%d%d"", &u, &v);||| 16 graph[u].push_back(v);||| 17 graph[v].push_back(u);||| 18 }||| 19 if (k > 2) {||| 20 LL ans = 0;||| 21 for (int i = 1; i <= n; ++i) {||| 22 fill_n(vis + 1, n, false);||| 23 vis[i] = true;||| 24 vector<int> cnt(graph[i].size(), 0);||| 25 queue<tuple<int, int, int>> quu;||| 26 for (int j = 0; j < graph[i].size(); ++j) {||| 27 quu.push({graph[i][j], j, 1});||| 28 }||| 29 int nowHeight = 1;||| 30 while (!quu.empty()) {||| 31 auto cur = quu.front();||| 32 quu.pop();||| 33 vis[get<0>(cur)] = true;||| 34 if (get<2>(cur) > nowHeight) {||| 35 dp[0][0] = 1;||| 36 for (int j = 1; j <= graph[i].size(); ++j) {||| 37 for (int l = 0; l <= k; ++l) {||| 38 dp[j][l] = (dp[j - 1][l] + dp[j][l]) % mod;||| 39 if (l > 0) {||| 40 dp[j][l] =||| 41 (dp[j - 1][l - 1] * cnt[j - 1] % mod + dp[j][l]) % mod;||| 42 }||| 43 }||| 44 }||| 45 ans = (ans + dp[graph[i].size()][k]) % mod;||| 46 for (int j = 0; j <= graph[i].size(); ++j) {||| 47 for (int l = 0; l <= k; ++l) {||| 48 dp[j][l] = 0;||| 49 }||| 50 }||| 51 fill_n(cnt.begin(), graph[i].size(), 0);||| 52 ++nowHeight;||| 53 }||| 54 ++cnt[get<1>(cur)];||| 55 for (auto nxt : graph[get<0>(cur)]) {||| 56 if (vis[nxt]) continue;||| 57 quu.push({nxt, get<1>(cur), get<2>(cur) + 1});||| 58 }||| 59 }||| 60 dp[0][0] = 1;||| 61 for (int j = 1; j <= graph[i].size(); ++j) {||| 62 for (int l = 0; l <= k; ++l) {||| 63 dp[j][l] = (dp[j - 1][l] + dp[j][l]) % mod;||| 64 if (l > 0) {||| 65 dp[j][l] = (dp[j - 1][l - 1] * cnt[j - 1] % mod + dp[j][l]) % mod;||| 66 }||| 67 }||| 68 }||| 69 ans = (ans + dp[graph[i].size()][k]) % mod;||| 70 for (int j = 0; j <= graph[i].size(); ++j) {||| 71 for (int l = 0; l <= k; ++l) {||| 72 dp[j][l] = 0;||| 73 }||| 74 }||| 75 fill_n(cnt.begin(), graph[i].size(), 0);||| 76 }||| 77 printf(""%lld\n"", ans);||| 78 } else {||| 79 printf(""%lld\n"", 1ll * n * (n - 1) / 2 % mod);||| 80 }||| 81 for (int i = 1; i <= n; ++i) {||| 82 graph[i].clear();||| 83 }||| 84 }||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 const LL mod = 1e9 + 7;||| 5 int n, k, u, v;||| 6 vector<int> graph[205];||| 7 LL dp[205][205];||| 8 bool vis[205];||| 9 int main() {||| 10 int t;||| 11 scanf(""%d"", &t);||| 12 while (t--) {||| 13 scanf(""%d%d"", &n, &k);||| 14 for (int i = 1; i < n; ++i) {||| 15 scanf(""%d%d"", &u, &v);||| 16 graph[u].push_back(v);||| 17 graph[v].push_back(u);||| 18 }||| 19 if (k > 2) {||| 20 LL ans = 0;||| 21 for (int i = 1; i <= n; ++i) {||| 22 fill_n(vis + 1, n, false);||| 23 vis[i] = true;||| 24 vector<int> cnt(graph[i].size(), 0);||| 25 queue<tuple<int, int, int>> quu;||| 26 for (int j = 0; j < graph[i].size(); ++j) {||| 27 quu.push({graph[i][j], j, 1});||| 28 }||| 29 int nowHeight = 1;||| 30 while (!quu.empty()) {||| 31 auto cur = quu.front();||| 32 quu.pop();||| 33 vis[get<0>(cur)] = true;||| 34 if (get<2>(cur) > nowHeight) {||| 35 dp[0][0] = 1;||| 36 for (int j = 1; j <= graph[i].size(); ++j) {||| 37 for (int l = 0; l <= k; ++l) {||| 38 dp[j][l] = (dp[j - 1][l] + dp[i][l]) % mod;||| 39 if (l > 0) {||| 40 dp[j][l] =||| 41 (dp[j - 1][l - 1] * cnt[j - 1] % mod + dp[j][l]) % mod;||| 42 }||| 43 }||| 44 }||| 45 ans = (ans + dp[graph[i].size()][k]) % mod;||| 46 for (int j = 0; j <= graph[i].size(); ++j) {||| 47 for (int l = 0; l <= k; ++l) {||| 48 dp[j][l] = 0;||| 49 }||| 50 }||| 51 fill_n(cnt.begin(), graph[i].size(), 0);||| 52 ++nowHeight;||| 53 }||| 54 ++cnt[get<1>(cur)];||| 55 for (auto nxt : graph[get<0>(cur)]) {||| 56 if (vis[nxt]) continue;||| 57 quu.push({nxt, get<1>(cur), get<2>(cur) + 1});||| 58 }||| 59 }||| 60 dp[0][0] = 1;||| 61 for (int j = 1; j <= graph[i].size(); ++j) {||| 62 for (int l = 0; l <= k; ++l) {||| 63 dp[j][l] = (dp[j - 1][l] + dp[i][l]) % mod;||| 64 if (l > 0) {||| 65 dp[j][l] = (dp[j - 1][l - 1] * cnt[j - 1] % mod + dp[j][l]) % mod;||| 66 }||| 67 }||| 68 }||| 69 ans = (ans + dp[graph[i].size()][k]) % mod;||| 70 for (int j = 0; j <= graph[i].size(); ++j) {||| 71 for (int l = 0; l <= k; ++l) {||| 72 dp[j][l] = 0;||| 73 }||| 74 }||| 75 fill_n(cnt.begin(), graph[i].size(), 0);||| 76 }||| 77 printf(""%lld\n"", ans);||| 78 } else {||| 79 printf(""%lld\n"", 1ll * n * (n - 1) / 2 % mod);||| 80 }||| 81 for (int i = 1; i <= n; ++i) {||| 82 graph[i].clear();||| 83 }||| 84 }||| 85 return 0;||| 86 }||| "	38 dp[j][l] = (dp[j - 1][l] + dp[j][l]) % mod;
15	283	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 using ld = long double;||| 6 template <typename T1, typename T2>||| 7 inline void chkmin(T1& x, const T2& y) {||| 8 if (y < x) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void chkmax(T1& x, const T2& y) {||| 12 if (x < y) x = y;||| 13 }||| 14 mt19937 rnd(time(0));||| 15 const int MAXN = 10e3 + 228;||| 16 vector<int> g[MAXN];||| 17 int d[MAXN];||| 18 int mod = 1000000007;||| 19 int mul(int a, int b) { return 1ll * a * b % mod; }||| 20 int add(int a, int b) {||| 21 if (a + b >= mod) return a + b - mod;||| 22 return a + b;||| 23 }||| 24 int sub(int a, int b) {||| 25 if (a - b < 0) return a - b + mod;||| 26 return a - b;||| 27 }||| 28 int binpow(int a, int b) {||| 29 int res = 1;||| 30 while (b) {||| 31 if (b & 1) res = mul(res, a);||| 32 a = mul(a, a);||| 33 b >>= 1;||| 34 }||| 35 return res;||| 36 }||| 37 int inv(int x) { return binpow(x, mod - 2); }||| 38 int fact[MAXN];||| 39 int rfact[MAXN];||| 40 int cnk(int n, int k) {||| 41 if (n < 0 || k > n) return 0;||| 42 return mul(fact[n], mul(rfact[k], rfact[n - k]));||| 43 }||| 44 int tpc[MAXN];||| 45 void dfs(int v, int p, int tp) {||| 46 d[v] = d[p] + 1;||| 47 tpc[v] = tp;||| 48 for (int i : g[v]) {||| 49 if (i != p) {||| 50 int ntp = tp;||| 51 if (v == p) ntp = i;||| 52 dfs(i, v, ntp);||| 53 }||| 54 }||| 55 }||| 56 signed main() {||| 57 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 58 cout.precision(20), cout.setf(ios::fixed);||| 59 fact[0] = 1;||| 60 for (int i = 1; i < MAXN; ++i) fact[i] = mul(fact[i - 1], i);||| 61 rfact[MAXN - 1] = inv(fact[MAXN - 1]);||| 62 for (int i = MAXN - 2; i >= 0; --i) rfact[i] = mul(rfact[i + 1], i + 1);||| 63 int t;||| 64 cin >> t;||| 65 while (t--) {||| 66 int n, k;||| 67 cin >> n >> k;||| 68 for (int i = 1; i <= n; ++i) g[i].clear();||| 69 for (int i = 0; i < n - 1; ++i) {||| 70 int a, b;||| 71 cin >> a >> b;||| 72 g[a].push_back(b);||| 73 g[b].push_back(a);||| 74 }||| 75 if (k == 2) {||| 76 cout << n * (n - 1) / 2 << '\n';||| 77 continue;||| 78 }||| 79 int ans = 0;||| 80 for (int i = 1; i <= n; ++i) {||| 81 fill(d, d + n + 1, 0);||| 82 dfs(i, i, -1);||| 83 for (int dd = 2; dd <= n; ++dd) {||| 84 vector<int> cnts(n + 1);||| 85 for (int j = 1; j <= n; ++j) {||| 86 if (d[j] == dd) {||| 87 cnts[tpc[j]]++;||| 88 }||| 89 }||| 90 vector<int> itms;||| 91 for (int i : cnts) {||| 92 if (i) itms.push_back(i);||| 93 }||| 94 vector<int> dp(n + 1, 0);||| 95 dp[0] = 1;||| 96 for (int j : itms) {||| 97 vector<int> ndp = dp;||| 98 for (int x = 1; x <= 1; ++x) {||| 99 for (int gg = 0; gg + x <= n; ++gg) {||| 100 ndp[gg + x] = add(ndp[gg + x], mul(dp[gg], cnk(j, x)));||| 101 }||| 102 }||| 103 swap(dp, ndp);||| 104 }||| 105 ans = add(ans, dp[k]);||| 106 }||| 107 }||| 108 cout << ans << '\n';||| 109 }||| 110 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ull = unsigned long long;||| 5 using ld = long double;||| 6 template <typename T1, typename T2>||| 7 inline void chkmin(T1& x, const T2& y) {||| 8 if (y < x) x = y;||| 9 }||| 10 template <typename T1, typename T2>||| 11 inline void chkmax(T1& x, const T2& y) {||| 12 if (x < y) x = y;||| 13 }||| 14 mt19937 rnd(time(0));||| 15 const int MAXN = 10e3 + 228;||| 16 vector<int> g[MAXN];||| 17 int d[MAXN];||| 18 int mod = 1000000007;||| 19 int mul(int a, int b) { return 1ll * a * b % mod; }||| 20 int add(int a, int b) {||| 21 if (a + b >= mod) return a + b - mod;||| 22 return a + b;||| 23 }||| 24 int sub(int a, int b) {||| 25 if (a - b < 0) return a - b + mod;||| 26 return a - b;||| 27 }||| 28 int binpow(int a, int b) {||| 29 int res = 1;||| 30 while (b) {||| 31 if (b & 1) res = mul(res, a);||| 32 a = mul(a, a);||| 33 b >>= 1;||| 34 }||| 35 return res;||| 36 }||| 37 int inv(int x) { return binpow(x, mod - 2); }||| 38 int fact[MAXN];||| 39 int rfact[MAXN];||| 40 int cnk(int n, int k) {||| 41 if (n < 0 || k > n) return 0;||| 42 return mul(fact[n], mul(rfact[k], rfact[n - k]));||| 43 }||| 44 int tpc[MAXN];||| 45 void dfs(int v, int p, int tp) {||| 46 d[v] = d[p] + 1;||| 47 tpc[v] = tp;||| 48 for (int i : g[v]) {||| 49 if (i != p) {||| 50 int ntp = tp;||| 51 if (v == p) ntp = i;||| 52 dfs(i, v, ntp);||| 53 }||| 54 }||| 55 }||| 56 signed main() {||| 57 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 58 cout.precision(20), cout.setf(ios::fixed);||| 59 fact[0] = 1;||| 60 for (int i = 1; i < MAXN; ++i) fact[i] = mul(fact[i - 1], i);||| 61 rfact[MAXN - 1] = inv(fact[MAXN - 1]);||| 62 for (int i = MAXN - 2; i >= 0; --i) rfact[i] = mul(rfact[i + 1], i + 1);||| 63 int t;||| 64 cin >> t;||| 65 while (t--) {||| 66 int n, k;||| 67 cin >> n >> k;||| 68 for (int i = 1; i <= n; ++i) g[i].clear();||| 69 for (int i = 0; i < n - 1; ++i) {||| 70 int a, b;||| 71 cin >> a >> b;||| 72 g[a].push_back(b);||| 73 g[b].push_back(a);||| 74 }||| 75 if (k == 2) {||| 76 cout << n * (n - 1) / 2 << '\n';||| 77 continue;||| 78 }||| 79 int ans = 0;||| 80 for (int i = 1; i <= n; ++i) {||| 81 fill(d, d + n + 1, 0);||| 82 dfs(i, i, -1);||| 83 for (int dd = 2; dd <= n; ++dd) {||| 84 vector<int> cnts(n + 1);||| 85 for (int j = 1; j <= n; ++j) {||| 86 if (d[j] == dd) {||| 87 cnts[tpc[j]]++;||| 88 }||| 89 }||| 90 vector<int> itms;||| 91 for (int i : cnts) {||| 92 if (i) itms.push_back(i);||| 93 }||| 94 vector<int> dp(n + 1, 0);||| 95 dp[0] = 1;||| 96 for (int j : itms) {||| 97 vector<int> ndp = dp;||| 98 for (int x = 1; x <= j; ++x) {||| 99 for (int gg = 0; gg + x <= n; ++gg) {||| 100 ndp[gg + x] = add(ndp[gg + x], mul(dp[gg], cnk(j, x)));||| 101 }||| 102 }||| 103 swap(dp, ndp);||| 104 }||| 105 ans = add(ans, dp[k]);||| 106 }||| 107 }||| 108 cout << ans << '\n';||| 109 }||| 110 }||| 	98 for (int x = 1; x <= 1; ++x) {
15	12	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long nax = 125, mod = 1e9 + 7;||| 4 long long add(long long x, long long y) {||| 5 x += y;||| 6 if (x >= mod) x -= mod;||| 7 return x;||| 8 }||| 9 long long mul(long long x, long long y) { return x * y % mod; }||| 10 vector<long long> g[nax];||| 11 long long vis[nax], cnt[nax], dp[nax][nax];||| 12 long long find(long long n, long long k) {||| 13 for (long long i = 0; i <= n; i++)||| 14 for (long long j = 0; j <= k; j++) dp[i][j] = 0;||| 15 dp[0][0] = 1;||| 16 for (long long i = 0; i < n; i++)||| 17 for (long long j = 0; j <= k; j++) {||| 18 dp[i + 1][j] = add(dp[i + 1][j], dp[i][j]);||| 19 dp[i + 1][j + 1] = add(dp[i + 1][j + 1], mul(dp[i][j], cnt[i]));||| 20 }||| 21 return dp[n][k];||| 22 }||| 23 int32_t main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 long long n, k;||| 28 cin >> n >> k;||| 29 for (long long i = 0; i < n; i++) g[i].clear();||| 30 for (long long i = 1; i < n; i++) {||| 31 long long x, y;||| 32 cin >> x >> y;||| 33 g[--x].push_back(--y);||| 34 g[y].push_back(x);||| 35 }||| 36 if (k == 2) {||| 37 cout << (n * (n - 1) / 2) % mod << '\n';||| 38 continue;||| 39 }||| 40 long long res = 0;||| 41 for (long long x = 0; x < n; x++) {||| 42 memset(vis, 0, sizeof(vis));||| 43 vis[x] = 1;||| 44 vector<pair<long long, long long> > e;||| 45 long long m = g[x].size();||| 46 for (long long i = 0; i < m; i++) {||| 47 long long y = g[x][i];||| 48 e.push_back({y, i});||| 49 cnt[i] = 1;||| 50 vis[y] = 1;||| 51 }||| 52 while (!e.empty()) {||| 53 res = add(res, find(m, k));||| 54 vector<pair<long long, long long> > ee;||| 55 for (auto p : e) {||| 56 cnt[p.second]--;||| 57 for (auto y : g[p.first])||| 58 if (!vis[y]) {||| 59 ee.push_back({y, p.second});||| 60 vis[y] = 1;||| 61 cnt[p.second]++;||| 62 }||| 63 }||| 64 e = ee;||| 65 }||| 66 }||| 67 cout << res << '\n';||| 68 }||| 69 return 0;||| 70 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long nax = 125, mod = 1e9 + 7;||| 4 long long add(long long x, long long y) {||| 5 x += y;||| 6 if (x >= mod) x -= mod;||| 7 return x;||| 8 }||| 9 long long mul(long long x, long long y) { return x * y % mod; }||| 10 vector<long long> g[nax];||| 11 long long vis[nax], cnt[nax], dp[nax][nax];||| 12 long long find(long long n, long long k) {||| 13 for (long long i = 0; i <= n; i++)||| 14 for (long long j = 0; j <= k; j++) dp[i][j] = 0;||| 15 dp[0][0] = 1;||| 16 for (long long i = 0; i < n; i++)||| 17 for (long long j = 0; j < k; j++) {||| 18 dp[i + 1][j] = add(dp[i + 1][j], dp[i][j]);||| 19 dp[i + 1][j + 1] = add(dp[i + 1][j + 1], mul(dp[i][j], cnt[i]));||| 20 }||| 21 return dp[n][k];||| 22 }||| 23 int32_t main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 long long n, k;||| 28 cin >> n >> k;||| 29 for (long long i = 0; i < n; i++) g[i].clear();||| 30 for (long long i = 1; i < n; i++) {||| 31 long long x, y;||| 32 cin >> x >> y;||| 33 g[--x].push_back(--y);||| 34 g[y].push_back(x);||| 35 }||| 36 if (k == 2) {||| 37 cout << (n * (n - 1) / 2) % mod << '\n';||| 38 continue;||| 39 }||| 40 long long res = 0;||| 41 for (long long x = 0; x < n; x++) {||| 42 memset(vis, 0, sizeof(vis));||| 43 vis[x] = 1;||| 44 vector<pair<long long, long long> > e;||| 45 long long m = g[x].size();||| 46 for (long long i = 0; i < m; i++) {||| 47 long long y = g[x][i];||| 48 e.push_back({y, i});||| 49 cnt[i] = 1;||| 50 vis[y] = 1;||| 51 }||| 52 while (!e.empty()) {||| 53 res = add(res, find(m, k));||| 54 vector<pair<long long, long long> > ee;||| 55 for (auto p : e) {||| 56 cnt[p.second]--;||| 57 for (auto y : g[p.first])||| 58 if (!vis[y]) {||| 59 ee.push_back({y, p.second});||| 60 vis[y] = 1;||| 61 cnt[p.second]++;||| 62 }||| 63 }||| 64 e = ee;||| 65 }||| 66 }||| 67 cout << res << '\n';||| 68 }||| 69 return 0;||| 70 }||| 	17 for (long long j = 0; j <= k; j++) {
15	92	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int c[101][101];||| 5 int C(int n, int r) {||| 6 if (n == r || r == 0) return 1;||| 7 if (~c[n][r]) return c[n][r];||| 8 return c[n][r] = (C(n - 1, r - 1) + C(n - 1, r)) % mod;||| 9 }||| 10 void solve(int tc) {||| 11 int n, k;||| 12 cin >> n >> k;||| 13 vector<vector<int>> g(n + 1);||| 14 vector<int> deg(n + 1);||| 15 for (int i = 1; i < n; ++i) {||| 16 int u, v;||| 17 cin >> u >> v;||| 18 g[u].push_back(v);||| 19 g[v].push_back(u);||| 20 }||| 21 if (k <= 2) {||| 22 cout << C(n, k) << '\n';||| 23 return;||| 24 }||| 25 int ans = 0;||| 26 for (int i = 1; i <= n; ++i) {||| 27 if (g[i].size() >= k) {||| 28 vector<vector<int>> dep(g[i].size(), vector<int>(n + 1));||| 29 vector<int> dep_cnt(n + 1, 0);||| 30 for (int j = 0; j < g[i].size(); ++j) {||| 31 function<void(int, int, int)> dfs = [&](int u, int p, int d) {||| 32 dep[j][d]++;||| 33 for (int v : g[u])||| 34 if (v != p) dfs(v, u, d + 1);||| 35 };||| 36 dfs(g[i][j], i, 1);||| 37 }||| 38 for (int d = 1; d <= n; ++d) {||| 39 vector<vector<int>> dp(k, vector<int>(g[i].size(), 0));||| 40 int cnt = 0;||| 41 for (int j = 0; j < g[i].size(); ++j) {||| 42 cnt += !!dep[j][d];||| 43 dp[0][j] = dep[j][d];||| 44 }||| 45 if (cnt < k) break;||| 46 for (int l = 1; l < k; ++l) {||| 47 long long sum = 0;||| 48 for (int j = l; j < g[i].size(); ++j) {||| 49 sum = (sum + dp[l - 1][j - 1]) % mod;||| 50 dp[l][j] = sum * dp[0][j] % mod;||| 51 }||| 52 }||| 53 for (int j = k - 1; j < g[i].size(); ++j)||| 54 ans = (ans + dp[k - 1][j]) % mod;||| 55 }||| 56 }||| 57 }||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(nullptr);||| 63 memset(c, -1, sizeof c);||| 64 int t = 1;||| 65 cin >> t;||| 66 for (int i = 1; i <= t; ++i) solve(i);||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int c[101][101];||| 5 int C(int n, int r) {||| 6 if (n == r || r == 0) return 1;||| 7 if (~c[n][r]) return c[n][r];||| 8 return c[n][r] = (C(n - 1, r - 1) + C(n - 1, r)) % mod;||| 9 }||| 10 void solve(int tc) {||| 11 int n, k;||| 12 cin >> n >> k;||| 13 vector<vector<int>> g(n + 1);||| 14 vector<int> deg(n + 1);||| 15 for (int i = 1; i < n; ++i) {||| 16 int u, v;||| 17 cin >> u >> v;||| 18 g[u].push_back(v);||| 19 g[v].push_back(u);||| 20 }||| 21 if (k <= 2) {||| 22 cout << C(n, k) << '\n';||| 23 return;||| 24 }||| 25 int ans = 0;||| 26 for (int i = 1; i <= n; ++i) {||| 27 if (g[i].size() >= k) {||| 28 vector<vector<int>> dep(g[i].size(), vector<int>(n + 1));||| 29 vector<int> dep_cnt(n + 1, 0);||| 30 for (int j = 0; j < g[i].size(); ++j) {||| 31 function<void(int, int, int)> dfs = [&](int u, int p, int d) {||| 32 dep[j][d]++;||| 33 for (int v : g[u])||| 34 if (v != p) dfs(v, u, d + 1);||| 35 };||| 36 dfs(g[i][j], i, 1);||| 37 }||| 38 for (int d = 1; d <= n; ++d) {||| 39 vector<vector<int>> dp(k, vector<int>(g[i].size(), 0));||| 40 int cnt = 0;||| 41 for (int j = 0; j < g[i].size(); ++j) {||| 42 cnt += !!dep[j][d];||| 43 dp[0][j] = dep[j][d];||| 44 }||| 45 if (cnt < k) break;||| 46 for (int l = 1; l < k; ++l) {||| 47 int sum = 0;||| 48 for (int j = l; j < g[i].size(); ++j) {||| 49 sum = (sum + dp[l - 1][j - 1]) % mod;||| 50 dp[l][j] = sum * dp[0][j] % mod;||| 51 }||| 52 }||| 53 for (int j = k - 1; j < g[i].size(); ++j)||| 54 ans = (ans + dp[k - 1][j]) % mod;||| 55 }||| 56 }||| 57 }||| 58 cout << ans << '\n';||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(nullptr);||| 63 memset(c, -1, sizeof c);||| 64 int t = 1;||| 65 cin >> t;||| 66 for (int i = 1; i <= t; ++i) solve(i);||| 67 return 0;||| 68 }||| 	47 long long sum = 0;
15	154	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename _T>||| 4 inline void read(_T &x) {||| 5 x = 0;||| 6 char s = getchar();||| 7 long long f = 1;||| 8 while (s < '0' || s > '9') {||| 9 f = 1;||| 10 if (s == '-') f = -1;||| 11 s = getchar();||| 12 }||| 13 while ('0' <= s && s <= '9') {||| 14 x = (x << 3) + (x << 1) + s - '0';||| 15 s = getchar();||| 16 }||| 17 x *= f;||| 18 }||| 19 const long long np = 105;||| 20 const long long mod = 1e9 + 7;||| 21 long long fac[np], inv[np];||| 22 inline long long power(long long a, long long b) {||| 23 long long res(1);||| 24 while (b) {||| 25 if (b & 1) res = res * a, res %= mod;||| 26 a = a * a;||| 27 a %= mod;||| 28 b >>= 1;||| 29 }||| 30 return res;||| 31 }||| 32 inline long long c(long long n_, long long m_) {||| 33 return ((fac[n_] * inv[n_ - m_] % mod) * inv[m_]) % mod;||| 34 }||| 35 long long head[np], nxt[np * 2], ver[np * 2], tit;||| 36 inline void add(long long x, long long y) {||| 37 ver[++tit] = y;||| 38 nxt[tit] = head[x];||| 39 head[x] = tit;||| 40 }||| 41 long long dep[np], maxn;||| 42 long long sub[np][np];||| 43 long long dp[np][np];||| 44 long long n, k;||| 45 inline void dfs(long long x, long long ff, long long id) {||| 46 dep[x] = dep[ff] + 1;||| 47 maxn = max(dep[x], maxn);||| 48 sub[id][dep[x]]++;||| 49 for (long long i = head[x], v; i; i = nxt[i]) {||| 50 v = ver[i];||| 51 if (v == ff) continue;||| 52 dfs(v, x, id);||| 53 }||| 54 }||| 55 signed main() {||| 56 fac[0] = 1;||| 57 for (long long i = 1; i <= 100; i++) fac[i] = fac[i - 1] * i, fac[i] %= mod;||| 58 for (long long i = 0; i <= 100; i++) inv[i] = power(fac[i], mod - 2);||| 59 long long T;||| 60 read(T);||| 61 while (T--) {||| 62 read(n);||| 63 read(k);||| 64 for (long long i = 1, a, b; i < n; i++) {||| 65 read(a);||| 66 read(b);||| 67 add(a, b);||| 68 add(b, a);||| 69 }||| 70 if (k == 2) {||| 71 long long ans = c(n, 2);||| 72 printf(""%lld\n"", ans);||| 73 memset(head, 0, sizeof(head));||| 74 tit = 0;||| 75 continue;||| 76 }||| 77 long long Ans = 0;||| 78 for (long long i = 1; i <= n; i++) {||| 79 dep[i] = 1;||| 80 long long ql = 0;||| 81 maxn = 0;||| 82 for (long long q = head[i]; q; q = nxt[q]) dfs(ver[q], i, ++ql);||| 83 if (ql >= k) {||| 84 for (long long h = 1; h <= maxn; h++) {||| 85 dp[0][0] = 1;||| 86 for (long long a = 1; a <= ql; a++)||| 87 for (long long b = 0; b <= k; b++)||| 88 dp[a][b] =||| 89 (dp[a - 1][b] + (dp[a - 1][b - 1] * sub[a][h]) % mod) % mod;||| 90 Ans += dp[ql][k];||| 91 Ans %= mod;||| 92 }||| 93 }||| 94 memset(sub, 0, sizeof(sub));||| 95 memset(dp, 0, sizeof(dp));||| 96 memset(dep, 0, sizeof(dep));||| 97 }||| 98 printf(""%lld\n"", Ans);||| 99 for (long long i = 1; i <= n; i++) head[i] = 0;||| 100 tit = 0;||| 101 }||| 102 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename _T>||| 4 inline void read(_T &x) {||| 5 x = 0;||| 6 char s = getchar();||| 7 long long f = 1;||| 8 while (s < '0' || s > '9') {||| 9 f = 1;||| 10 if (s == '-') f = -1;||| 11 s = getchar();||| 12 }||| 13 while ('0' <= s && s <= '9') {||| 14 x = (x << 3) + (x << 1) + s - '0';||| 15 s = getchar();||| 16 }||| 17 x *= f;||| 18 }||| 19 const long long np = 105;||| 20 const long long mod = 1e9 + 7;||| 21 long long fac[np], inv[np];||| 22 inline long long power(long long a, long long b) {||| 23 long long res(1);||| 24 while (b) {||| 25 if (b & 1) res = res * a, res %= mod;||| 26 a = a * a;||| 27 a %= mod;||| 28 b >>= 1;||| 29 }||| 30 return res;||| 31 }||| 32 inline long long c(long long n_, long long m_) {||| 33 return ((fac[n_] * inv[n_ - m_] % mod) * inv[m_]) % mod;||| 34 }||| 35 long long head[np], nxt[np * 2], ver[np * 2], tit;||| 36 inline void add(long long x, long long y) {||| 37 ver[++tit] = y;||| 38 nxt[tit] = head[x];||| 39 head[x] = tit;||| 40 }||| 41 long long dep[np], maxn;||| 42 long long sub[np][np];||| 43 long long dp[np][np];||| 44 long long n, k;||| 45 inline void dfs(long long x, long long ff, long long id) {||| 46 dep[x] = dep[ff] + 1;||| 47 maxn = max(dep[x], maxn);||| 48 sub[id][dep[x]]++;||| 49 for (long long i = head[x], v; i; i = nxt[i]) {||| 50 v = ver[i];||| 51 if (v == ff) continue;||| 52 dfs(v, x, id);||| 53 }||| 54 }||| 55 signed main() {||| 56 fac[0] = 1;||| 57 for (long long i = 1; i <= 100; i++) fac[i] = fac[i - 1] * i, fac[i] %= mod;||| 58 for (long long i = 0; i <= 100; i++) inv[i] = power(fac[i], mod - 2);||| 59 long long T;||| 60 read(T);||| 61 while (T--) {||| 62 read(n);||| 63 read(k);||| 64 for (long long i = 1, a, b; i < n; i++) {||| 65 read(a);||| 66 read(b);||| 67 add(a, b);||| 68 add(b, a);||| 69 }||| 70 if (k == 2) {||| 71 long long ans = c(n, 2);||| 72 printf(""%lld\n"", ans);||| 73 memset(head, 0, sizeof(head));||| 74 tit = 0;||| 75 continue;||| 76 }||| 77 long long Ans = 0;||| 78 for (long long i = 1; i <= n; i++) {||| 79 dep[i] = 1;||| 80 long long ql = 0;||| 81 maxn = 0;||| 82 for (long long q = head[i]; q; q = nxt[q]) dfs(ver[q], i, ++ql);||| 83 if (ql >= k) {||| 84 for (long long h = 2; h <= maxn; h++) {||| 85 dp[0][0] = 1;||| 86 for (long long a = 1; a <= ql; a++)||| 87 for (long long b = 1; b <= k; b++)||| 88 dp[a][b] =||| 89 (dp[a - 1][b] + (dp[a - 1][b - 1] * sub[a][h]) % mod) % mod;||| 90 Ans += dp[ql][k];||| 91 Ans %= mod;||| 92 }||| 93 }||| 94 memset(sub, 0, sizeof(sub));||| 95 memset(dp, 0, sizeof(dp));||| 96 memset(dep, 0, sizeof(dep));||| 97 }||| 98 printf(""%lld\n"", Ans);||| 99 for (long long i = 1; i <= n; i++) head[i] = 0;||| 100 tit = 0;||| 101 }||| 102 }||| "	84 for (long long h = 1; h <= maxn; h++) {
15	162	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename _T>||| 4 inline void read(_T &x) {||| 5 x = 0;||| 6 char s = getchar();||| 7 long long f = 1;||| 8 while (s < '0' || s > '9') {||| 9 f = 1;||| 10 if (s == '-') f = -1;||| 11 s = getchar();||| 12 }||| 13 while ('0' <= s && s <= '9') {||| 14 x = (x << 3) + (x << 1) + s - '0';||| 15 s = getchar();||| 16 }||| 17 x *= f;||| 18 }||| 19 const long long np = 105;||| 20 const long long mod = 1e9 + 7;||| 21 long long fac[np], inv[np];||| 22 inline long long power(long long a, long long b) {||| 23 long long res(1);||| 24 while (b) {||| 25 if (b & 1) res = res * a, res %= mod;||| 26 a = a * a;||| 27 a %= mod;||| 28 b >>= 1;||| 29 }||| 30 return res;||| 31 }||| 32 inline long long c(long long n_, long long m_) {||| 33 return ((fac[n_] * inv[n_ - m_] % mod) * inv[m_]) % mod;||| 34 }||| 35 long long head[np], nxt[np * 2], ver[np * 2], tit;||| 36 inline void add(long long x, long long y) {||| 37 ver[++tit] = y;||| 38 nxt[tit] = head[x];||| 39 head[x] = tit;||| 40 }||| 41 long long dep[np], maxn;||| 42 long long sub[np][np];||| 43 long long dp[np][np];||| 44 long long n, k;||| 45 inline void dfs(long long x, long long ff, long long id) {||| 46 dep[x] = dep[ff] + 1;||| 47 maxn = max(dep[x], maxn);||| 48 sub[id][dep[x]]++;||| 49 for (long long i = head[x], v; i; i = nxt[i]) {||| 50 v = ver[i];||| 51 if (v == ff) continue;||| 52 dfs(v, x, id);||| 53 }||| 54 }||| 55 signed main() {||| 56 fac[0] = 1;||| 57 for (long long i = 1; i <= 100; i++) fac[i] = fac[i - 1] * i, fac[i] %= mod;||| 58 for (long long i = 0; i <= 100; i++) inv[i] = power(fac[i], mod - 2);||| 59 long long T;||| 60 read(T);||| 61 while (T--) {||| 62 read(n);||| 63 read(k);||| 64 for (long long i = 1, a, b; i < n; i++) {||| 65 read(a);||| 66 read(b);||| 67 add(a, b);||| 68 add(b, a);||| 69 }||| 70 if (k == 2) {||| 71 long long ans = c(n, 2);||| 72 printf(""%lld\n"", ans);||| 73 memset(head, 0, sizeof(head));||| 74 tit = 0;||| 75 continue;||| 76 }||| 77 long long Ans = 0;||| 78 for (long long i = 1; i <= n; i++) {||| 79 dep[i] = 1;||| 80 long long ql = 0;||| 81 maxn = 0;||| 82 for (long long q = head[i]; q; q = nxt[q]) dfs(ver[q], i, ++ql);||| 83 if (ql >= k) {||| 84 for (long long h = 1; h <= maxn; h++) {||| 85 dp[0][0] = 1;||| 86 for (long long a = 1; a <= ql; a++)||| 87 for (long long b = 0; b <= k; b++)||| 88 dp[a][b] =||| 89 (dp[a - 1][b] + (dp[a - 1][b - 1] * sub[a][h]) % mod) % mod;||| 90 Ans += dp[ql][k];||| 91 Ans %= mod;||| 92 }||| 93 }||| 94 memset(sub, 0, sizeof(sub));||| 95 memset(dp, 0, sizeof(dp));||| 96 memset(dep, 0, sizeof(dep));||| 97 }||| 98 printf(""%lld\n"", Ans);||| 99 for (long long i = 1; i <= n; i++) head[i] = 0;||| 100 tit = 0;||| 101 }||| 102 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename _T>||| 4 inline void read(_T &x) {||| 5 x = 0;||| 6 char s = getchar();||| 7 long long f = 1;||| 8 while (s < '0' || s > '9') {||| 9 f = 1;||| 10 if (s == '-') f = -1;||| 11 s = getchar();||| 12 }||| 13 while ('0' <= s && s <= '9') {||| 14 x = (x << 3) + (x << 1) + s - '0';||| 15 s = getchar();||| 16 }||| 17 x *= f;||| 18 }||| 19 const long long np = 105;||| 20 const long long mod = 1e9 + 7;||| 21 long long fac[np], inv[np];||| 22 inline long long power(long long a, long long b) {||| 23 long long res(1);||| 24 while (b) {||| 25 if (b & 1) res = res * a, res %= mod;||| 26 a = a * a;||| 27 a %= mod;||| 28 b >>= 1;||| 29 }||| 30 return res;||| 31 }||| 32 inline long long c(long long n_, long long m_) {||| 33 return ((fac[n_] * inv[n_ - m_] % mod) * inv[m_]) % mod;||| 34 }||| 35 long long head[np], nxt[np * 2], ver[np * 2], tit;||| 36 inline void add(long long x, long long y) {||| 37 ver[++tit] = y;||| 38 nxt[tit] = head[x];||| 39 head[x] = tit;||| 40 }||| 41 long long dep[np], maxn;||| 42 long long sub[np][np];||| 43 long long dp[np][np];||| 44 long long n, k;||| 45 inline void dfs(long long x, long long ff, long long id) {||| 46 dep[x] = dep[ff] + 1;||| 47 maxn = max(dep[x], maxn);||| 48 sub[id][dep[x]]++;||| 49 for (long long i = head[x], v; i; i = nxt[i]) {||| 50 v = ver[i];||| 51 if (v == ff) continue;||| 52 dfs(v, x, id);||| 53 }||| 54 }||| 55 signed main() {||| 56 fac[0] = 1;||| 57 for (long long i = 1; i <= 100; i++) fac[i] = fac[i - 1] * i, fac[i] %= mod;||| 58 for (long long i = 0; i <= 100; i++) inv[i] = power(fac[i], mod - 2);||| 59 long long T;||| 60 read(T);||| 61 while (T--) {||| 62 read(n);||| 63 read(k);||| 64 for (long long i = 1, a, b; i < n; i++) {||| 65 read(a);||| 66 read(b);||| 67 add(a, b);||| 68 add(b, a);||| 69 }||| 70 if (k == 2) {||| 71 long long ans = c(n, 2);||| 72 printf(""%lld\n"", ans);||| 73 memset(head, 0, sizeof(head));||| 74 tit = 0;||| 75 continue;||| 76 }||| 77 long long Ans = 0;||| 78 for (long long i = 1; i <= n; i++) {||| 79 dep[i] = 1;||| 80 long long ql = 0;||| 81 maxn = 0;||| 82 for (long long q = head[i]; q; q = nxt[q]) dfs(ver[q], i, ++ql);||| 83 if (ql >= k) {||| 84 for (long long h = 1; h <= maxn; h++) {||| 85 dp[0][0] = 1;||| 86 for (long long a = 1; a <= ql; a++)||| 87 for (long long b = 1; b <= k; b++)||| 88 dp[a][b] =||| 89 (dp[a - 1][b] + (dp[a - 1][b - 1] * sub[a][h]) % mod) % mod;||| 90 Ans += dp[ql][k];||| 91 Ans %= mod;||| 92 }||| 93 }||| 94 memset(sub, 0, sizeof(sub));||| 95 memset(dp, 0, sizeof(dp));||| 96 memset(dep, 0, sizeof(dep));||| 97 }||| 98 printf(""%lld\n"", Ans);||| 99 for (long long i = 1; i <= n; i++) head[i] = 0;||| 100 tit = 0;||| 101 }||| 102 }||| "	87 for (long long b = 0; b <= k; b++)
15	109	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod1 = 998244353;||| 4 const long long mod2 = 1000000007;||| 5 int t, n, k, u, v;||| 6 vector<int> con[105];||| 7 int dp[105][105];||| 8 int cnt[105][105];||| 9 int par[105];||| 10 int res, mx;||| 11 int dfs(int i, int p = -1) {||| 12 par[i] = p;||| 13 int ret = -1;||| 14 for (int j = 0, l = con[i].size(); j < l; ++j)||| 15 if (con[i][j] != p) ret = max(ret, dfs(con[i][j], i));||| 16 return ++ret;||| 17 }||| 18 int cnts(int i, int d) {||| 19 if (cnt[i][d] != -1) return cnt[i][d];||| 20 if (d == 0) return cnt[i][d] = 1;||| 21 int ret = 0;||| 22 for (int j = 0, l = con[i].size(); j < l; ++j)||| 23 if (con[i][j] != par[i]) ret += cnts(con[i][j], d - 1);||| 24 return cnt[i][d] = ret;||| 25 }||| 26 void Q() {||| 27 cin >> n >> k;||| 28 res = 0;||| 29 for (int i = 1; i <= (n); ++i) con[i].clear();||| 30 for (int i = 1; i < n; ++i) {||| 31 cin >> u >> v;||| 32 con[u].push_back(v);||| 33 con[v].push_back(u);||| 34 }||| 35 if (k == 2) {||| 36 cout << 1ll * (n - 1) * n / 2 % mod2 << endl;||| 37 return;||| 38 }||| 39 for (int r = 1; r <= n; ++r) {||| 40 memset(cnt, -1, sizeof(cnt));||| 41 mx = dfs(r);||| 42 for (int d = 1; d <= mx; ++d) {||| 43 memset(dp, 0, sizeof(dp));||| 44 dp[0][0] = 1;||| 45 for (int i = 0, l = con[r].size(); i <= l; ++i)||| 46 for (int j = 0; j <= i && j <= k; ++j) {||| 47 dp[i + 1][j] += dp[i][j];||| 48 if (dp[i + 1][j] >= mod2) dp[i + 1][j] -= mod2;||| 49 if (i != l) {||| 50 dp[i + 1][j + 1] += 1ll * dp[i][j] * cnts(con[r][i], d - 1) % mod2;||| 51 if (dp[i + 1][j + 1] >= mod2) dp[i + 1][j + 1] -= mod2;||| 52 }||| 53 }||| 54 res += dp[con[r].size()][k];||| 55 if (res >= mod2) res -= mod2;||| 56 }||| 57 }||| 58 cout << res << endl;||| 59 }||| 60 int main() {||| 61 cin >> t;||| 62 while (t--) Q();||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod1 = 998244353;||| 4 const long long mod2 = 1000000007;||| 5 int t, n, k, u, v;||| 6 vector<int> con[105];||| 7 int dp[105][105];||| 8 int cnt[105][105];||| 9 int par[105];||| 10 int res, mx;||| 11 int dfs(int i, int p = -1) {||| 12 par[i] = p;||| 13 int ret = -1;||| 14 for (int j = 0, l = con[i].size(); j < l; ++j)||| 15 if (con[i][j] != p) ret = max(ret, dfs(con[i][j], i));||| 16 return ++ret;||| 17 }||| 18 int cnts(int i, int d) {||| 19 if (cnt[i][d] != -1) return cnt[i][d];||| 20 if (d == 0) return cnt[i][d] = 1;||| 21 int ret = 0;||| 22 for (int j = 0, l = con[i].size(); j < l; ++j)||| 23 if (con[i][j] != par[i]) ret += cnts(con[i][j], d - 1);||| 24 return cnt[i][d] = ret;||| 25 }||| 26 void Q() {||| 27 cin >> n >> k;||| 28 res = 0;||| 29 for (int i = 1; i <= (n); ++i) con[i].clear();||| 30 for (int i = 1; i < n; ++i) {||| 31 cin >> u >> v;||| 32 con[u].push_back(v);||| 33 con[v].push_back(u);||| 34 }||| 35 if (k == 2) {||| 36 cout << 1ll * (n - 1) * n / 2 % mod2 << endl;||| 37 return;||| 38 }||| 39 for (int r = 1; r <= n; ++r) {||| 40 memset(cnt, -1, sizeof(cnt));||| 41 mx = dfs(r);||| 42 for (int d = 1; d <= mx; ++d) {||| 43 memset(dp, 0, sizeof(dp));||| 44 dp[0][0] = 1;||| 45 for (int i = 0, l = con[r].size(); i <= l; ++i)||| 46 for (int j = 0; j <= i && j <= k; ++j) {||| 47 dp[i + 1][j] += dp[i][j];||| 48 if (dp[i + 1][j] >= mod2) dp[i + 1][j] -= mod2;||| 49 if (i != l) {||| 50 dp[i + 1][j + 1] += 1ll * dp[i][j] * cnts(con[r][i], d - 1);||| 51 if (dp[i + 1][j + 1] >= mod2) dp[i + 1][j + 1] -= mod2;||| 52 }||| 53 }||| 54 res += dp[con[r].size()][k];||| 55 if (res >= mod2) res -= mod2;||| 56 }||| 57 }||| 58 cout << res << endl;||| 59 }||| 60 int main() {||| 61 cin >> t;||| 62 while (t--) Q();||| 63 return 0;||| 64 }||| 	50 dp[i + 1][j + 1] += 1ll * dp[i][j] * cnts(con[r][i], d - 1) % mod2;
15	4	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long add(long long a, long long b) { return (a + b) % mod; }||| 5 long long sub(long long a, long long b) { return ((a - b) % mod + mod) % mod; }||| 6 long long mul(long long a, long long b) { return (a * b) % mod; }||| 7 long long power(long long a, long long b) {||| 8 if (b == 0) return 1LL;||| 9 long long tmp = power(a, b / 2);||| 10 tmp = mul(tmp, tmp);||| 11 if (b & 1) tmp = mul(tmp, a);||| 12 return tmp;||| 13 }||| 14 const int maxn = 105;||| 15 long long dp[maxn][maxn], fact[maxn], ifact[maxn], ans;||| 16 vector<int> adjlist[maxn];||| 17 int n, k, depth[maxn], groupsize[maxn][maxn];||| 18 void precalc() {||| 19 fact[0] = ifact[0] = 1;||| 20 for (int i = 1; i < maxn; i++) {||| 21 fact[i] = mul(i, fact[i - 1]);||| 22 ifact[i] = power(fact[i], mod - 2);||| 23 }||| 24 }||| 25 long long ncr(long long n, long long r) {||| 26 if (r > n) return 0LL;||| 27 return mul(fact[n], mul(ifact[n - r], ifact[r]));||| 28 }||| 29 void pivot(int p) {||| 30 if (adjlist[p].size() < k) return;||| 31 memset(depth, 0, sizeof(depth));||| 32 memset(dp, 0, sizeof(dp));||| 33 memset(groupsize, 0, sizeof(groupsize));||| 34 depth[p] = 1;||| 35 queue<pair<int, int>> q;||| 36 for (auto u : adjlist[p]) {||| 37 q.push({u, u});||| 38 depth[u] = 2;||| 39 }||| 40 while (!q.empty()) {||| 41 pair<int, int> cur = q.front();||| 42 q.pop();||| 43 groupsize[cur.second][depth[cur.first]]++;||| 44 for (auto u : adjlist[cur.first]) {||| 45 if (depth[u] != 0) continue;||| 46 depth[u] = depth[cur.first] + 1;||| 47 q.push({u, cur.second});||| 48 }||| 49 }||| 50 for (int i = 0; i <= adjlist[p].size(); i++) {||| 51 dp[i][0] = 1;||| 52 }||| 53 for (int d = 2; d < maxn; d++) {||| 54 int tot = 0;||| 55 for (auto u : adjlist[p]) {||| 56 tot += min(groupsize[u][d], 1);||| 57 }||| 58 if (tot < k) break;||| 59 for (int i = 0; i < adjlist[p].size(); i++) {||| 60 for (int j = 1; j <= min(i + 1, k); j++) {||| 61 dp[i + 1][j] =||| 62 add(dp[i][j], mul(dp[i][j - 1], groupsize[adjlist[p][i]][d]));||| 63 }||| 64 }||| 65 ans = add(ans, dp[adjlist[p].size()][k]);||| 66 }||| 67 }||| 68 void solve() {||| 69 ans = 0;||| 70 memset(dp, 0, sizeof(dp));||| 71 cin >> n >> k;||| 72 for (int i = 1; i <= n; i++) {||| 73 adjlist[i].clear();||| 74 }||| 75 for (int i = 1; i < n; i++) {||| 76 int u, v;||| 77 cin >> u >> v;||| 78 adjlist[u].push_back(v);||| 79 adjlist[v].push_back(u);||| 80 }||| 81 if (k == 2) {||| 82 cout << ncr(n, 2);||| 83 return;||| 84 }||| 85 for (int i = 1; i <= n; i++) {||| 86 pivot(i);||| 87 }||| 88 cout << ans;||| 89 }||| 90 int main() {||| 91 ios_base::sync_with_stdio(false);||| 92 cin.tie(NULL);||| 93 cout.tie(NULL);||| 94 ;||| 95 precalc();||| 96 int t;||| 97 cin >> t;||| 98 while (t--) {||| 99 solve();||| 100 cout << '\n';||| 101 }||| 102 return 0;||| 103 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 long long add(long long a, long long b) { return (a + b) % mod; }||| 5 long long sub(long long a, long long b) { return ((a - b) % mod + mod) % mod; }||| 6 long long mul(long long a, long long b) { return (a * b) % mod; }||| 7 long long power(long long a, long long b) {||| 8 if (b == 0) return 1LL;||| 9 long long tmp = power(a, b / 2);||| 10 tmp = mul(tmp, tmp);||| 11 if (b & 1) tmp = mul(tmp, a);||| 12 return tmp;||| 13 }||| 14 const int maxn = 105;||| 15 long long dp[maxn][maxn], fact[maxn], ifact[maxn], ans;||| 16 vector<int> adjlist[maxn];||| 17 int n, k, depth[maxn], groupsize[maxn][maxn];||| 18 void precalc() {||| 19 fact[0] = ifact[0] = 1;||| 20 for (int i = 1; i < maxn; i++) {||| 21 fact[i] = mul(i, fact[i - 1]);||| 22 ifact[i] = power(fact[i], mod - 2);||| 23 }||| 24 }||| 25 long long ncr(long long n, long long r) {||| 26 if (r > n) return 0LL;||| 27 return mul(fact[n], mul(ifact[n - r], ifact[r]));||| 28 }||| 29 void pivot(int p) {||| 30 if (adjlist[p].size() < k) return;||| 31 memset(depth, 0, sizeof(depth));||| 32 memset(dp, 0, sizeof(dp));||| 33 memset(groupsize, 0, sizeof(groupsize));||| 34 depth[p] = 1;||| 35 queue<pair<int, int>> q;||| 36 for (auto u : adjlist[p]) {||| 37 q.push({u, u});||| 38 depth[u] = 2;||| 39 }||| 40 while (!q.empty()) {||| 41 pair<int, int> cur = q.front();||| 42 q.pop();||| 43 groupsize[cur.second][depth[cur.first]]++;||| 44 for (auto u : adjlist[cur.first]) {||| 45 if (depth[u] != 0) continue;||| 46 depth[u] = depth[cur.first] + 1;||| 47 q.push({u, cur.second});||| 48 }||| 49 }||| 50 for (int i = 0; i <= adjlist[p].size(); i++) {||| 51 dp[i][0] = 1;||| 52 }||| 53 for (int d = 2; d < maxn; d++) {||| 54 int tot = 0;||| 55 for (auto u : adjlist[p]) {||| 56 tot += min(groupsize[u][d], 1);||| 57 }||| 58 if (tot < k) break;||| 59 for (int i = 0; i < adjlist[p].size(); i++) {||| 60 for (int j = 1; j <= min(i + 1, k); j++) {||| 61 dp[i + 1][j] =||| 62 add(dp[i][j], mul(dp[i][j - 1], groupsize[adjlist[p][i]][d]));||| 63 }||| 64 }||| 65 }||| 66 ans = add(ans, dp[adjlist[p].size()][k]);||| 67 }||| 68 void solve() {||| 69 ans = 0;||| 70 memset(dp, 0, sizeof(dp));||| 71 cin >> n >> k;||| 72 for (int i = 1; i <= n; i++) {||| 73 adjlist[i].clear();||| 74 }||| 75 for (int i = 1; i < n; i++) {||| 76 int u, v;||| 77 cin >> u >> v;||| 78 adjlist[u].push_back(v);||| 79 adjlist[v].push_back(u);||| 80 }||| 81 if (k == 2) {||| 82 cout << ncr(n, 2);||| 83 return;||| 84 }||| 85 for (int i = 1; i <= n; i++) {||| 86 pivot(i);||| 87 }||| 88 cout << ans;||| 89 }||| 90 int main() {||| 91 ios_base::sync_with_stdio(false);||| 92 cin.tie(NULL);||| 93 cout.tie(NULL);||| 94 ;||| 95 precalc();||| 96 int t;||| 97 cin >> t;||| 98 while (t--) {||| 99 solve();||| 100 cout << '\n';||| 101 }||| 102 return 0;||| 103 }||| 	65 ans = add(ans, dp[adjlist[p].size()][k]);
15	298	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using VL = vector<ll>;||| 5 using VVL = vector<VL>;||| 6 using VI = vector<int>;||| 7 using VVI = vector<VI>;||| 8 const ll MOD = 1e9 + 7;||| 9 VVI G;||| 10 VI V;||| 11 VVL M;||| 12 ll f(int i, int j) {||| 13 if (j < 0 or j > i) return 0;||| 14 ll& res = M[i][j];||| 15 if (res != -1) return res;||| 16 if (j == 0) return res = 1;||| 17 return res = (f(i - 1, j) + V[i - 1] * f(i - 1, j - 1)) % MOD;||| 18 }||| 19 void dfs(int x, int p, int d, VI& V) {||| 20 if (d >= (int)V.size())||| 21 V.push_back(1);||| 22 else||| 23 ++V[d];||| 24 for (int y : G[x])||| 25 if (y != p) dfs(y, x, d + 1, V);||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(0);||| 29 cin.tie(0);||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 int n, k;||| 34 cin >> n >> k;||| 35 G = VVI(n);||| 36 for (int r = 0; r < n - 1; ++r) {||| 37 int x, y;||| 38 cin >> x >> y;||| 39 --x;||| 40 --y;||| 41 G[x].push_back(y);||| 42 G[y].push_back(x);||| 43 }||| 44 if (k == 2)||| 45 cout << n * (n - 1) / 2 << endl;||| 46 else {||| 47 ll res = 0;||| 48 for (int x = 0; x < n; ++x) {||| 49 int m = G[x].size();||| 50 VVI T(m);||| 51 int mx = 0;||| 52 for (int i = 0; i < m; ++i) {||| 53 dfs(G[x][i], x, 0, T[i]);||| 54 mx = max(mx, (int)T[i].size());||| 55 }||| 56 for (int d = 0; d < mx; ++d) {||| 57 V.clear();||| 58 for (int i = 0; i < m; ++i)||| 59 if (d < (int)T[i].size()) V.push_back(T[i][d]);||| 60 int q = V.size();||| 61 if (q >= k) {||| 62 M = VVL(q + 1, VL(k + 1, -1));||| 63 res = (res + f(q, k)) % MOD;||| 64 }||| 65 }||| 66 }||| 67 cout << res << endl;||| 68 }||| 69 }||| 70 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using VL = vector<ll>;||| 5 using VVL = vector<VL>;||| 6 using VI = vector<int>;||| 7 using VVI = vector<VI>;||| 8 const ll MOD = 1e9 + 7;||| 9 VVI G;||| 10 VI V;||| 11 VVL M;||| 12 ll f(int i, int j) {||| 13 if (j < 0 or j > i) return 0;||| 14 ll& res = M[i][j];||| 15 if (res != -1) return res;||| 16 if (j == 0) return res = 1;||| 17 return res = (f(i - 1, j) + V[j - 1] * f(i - 1, j - 1)) % MOD;||| 18 }||| 19 void dfs(int x, int p, int d, VI& V) {||| 20 if (d >= (int)V.size())||| 21 V.push_back(1);||| 22 else||| 23 ++V[d];||| 24 for (int y : G[x])||| 25 if (y != p) dfs(y, x, d + 1, V);||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(0);||| 29 cin.tie(0);||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 int n, k;||| 34 cin >> n >> k;||| 35 G = VVI(n);||| 36 for (int r = 0; r < n - 1; ++r) {||| 37 int x, y;||| 38 cin >> x >> y;||| 39 --x;||| 40 --y;||| 41 G[x].push_back(y);||| 42 G[y].push_back(x);||| 43 }||| 44 if (k == 2)||| 45 cout << n * (n - 1) / 2 << endl;||| 46 else {||| 47 ll res = 0;||| 48 for (int x = 0; x < n; ++x) {||| 49 int m = G[x].size();||| 50 VVI T(m);||| 51 int mx = 0;||| 52 for (int i = 0; i < m; ++i) {||| 53 dfs(G[x][i], x, 0, T[i]);||| 54 mx = max(mx, (int)T[i].size());||| 55 }||| 56 for (int d = 0; d < mx; ++d) {||| 57 V.clear();||| 58 for (int i = 0; i < m; ++i)||| 59 if (d < (int)T[i].size()) V.push_back(T[i][d]);||| 60 int q = V.size();||| 61 if (q >= k) {||| 62 M = VVL(q + 1, VL(k + 1, -1));||| 63 res = (res + f(q, k)) % MOD;||| 64 }||| 65 }||| 66 }||| 67 cout << res << endl;||| 68 }||| 69 }||| 70 }||| 	17 return res = (f(i - 1, j) + V[i - 1] * f(i - 1, j - 1)) % MOD;
16	205	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace __detail;||| 4 template <typename A, typename B>||| 5 inline void chmin(A &a, B b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename A, typename B>||| 9 inline void chmax(A &a, B b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int getMinimum(string s, int start) {||| 13 int mn = start;||| 14 for (int i = start; i < s.length(); i++) {||| 15 if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[start] - 'a')) {||| 16 mn = i;||| 17 }||| 18 }||| 19 return mn;||| 20 }||| 21 void solve() {||| 22 int n;||| 23 string s;||| 24 cin >> n;||| 25 cin >> s;||| 26 set<int> st;||| 27 for (int i = 0; i < n; i++) {||| 28 int mn = getMinimum(s, i);||| 29 char temp = s[i];||| 30 s[i] = s[mn];||| 31 s[mn] = temp;||| 32 if (i != mn) {||| 33 st.insert(i);||| 34 st.insert(mn);||| 35 }||| 36 }||| 37 int sz = st.size();||| 38 cout << sz << endl;||| 39 }||| 40 int main() {||| 41 ios::sync_with_stdio(false);||| 42 cin.tie(NULL);||| 43 cout.tie(NULL);||| 44 ;||| 45 int t;||| 46 cin >> t;||| 47 while (t--) {||| 48 solve();||| 49 }||| 50 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace __detail;||| 4 template <typename A, typename B>||| 5 inline void chmin(A &a, B b) {||| 6 if (a > b) a = b;||| 7 }||| 8 template <typename A, typename B>||| 9 inline void chmax(A &a, B b) {||| 10 if (a < b) a = b;||| 11 }||| 12 int getMinimum(string s, int start) {||| 13 int mn = start;||| 14 for (int i = start; i < s.length(); i++) {||| 15 if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[mn] - 'a')) {||| 16 mn = i;||| 17 }||| 18 }||| 19 return mn;||| 20 }||| 21 void solve() {||| 22 int n;||| 23 string s;||| 24 cin >> n;||| 25 cin >> s;||| 26 set<int> st;||| 27 for (int i = 0; i < n; i++) {||| 28 int mn = getMinimum(s, i);||| 29 char temp = s[i];||| 30 s[i] = s[mn];||| 31 s[mn] = temp;||| 32 if (i != mn) {||| 33 st.insert(i);||| 34 st.insert(mn);||| 35 }||| 36 }||| 37 int sz = st.size();||| 38 cout << sz << endl;||| 39 }||| 40 int main() {||| 41 ios::sync_with_stdio(false);||| 42 cin.tie(NULL);||| 43 cout.tie(NULL);||| 44 ;||| 45 int t;||| 46 cin >> t;||| 47 while (t--) {||| 48 solve();||| 49 }||| 50 }||| 	15 if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[start] - 'a')) {
16	3	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int b[50];||| 4 int c[50];||| 5 int change(string s) {||| 6 if (s == ""a"") return 1;||| 7 if (s == ""b"") return 2;||| 8 if (s == ""c"") return 3;||| 9 if (s == ""d"") return 4;||| 10 if (s == ""e"") return 5;||| 11 if (s == ""f"") return 6;||| 12 if (s == ""g"") return 7;||| 13 if (s == ""h"") return 8;||| 14 if (s == ""i"") return 9;||| 15 if (s == ""j"") return 10;||| 16 if (s == ""k"") return 11;||| 17 if (s == ""l"") return 12;||| 18 if (s == ""m"") return 13;||| 19 if (s == ""n"") return 14;||| 20 if (s == ""o"") return 15;||| 21 if (s == ""p"") return 16;||| 22 if (s == ""q"") return 17;||| 23 if (s == ""r"") return 18;||| 24 if (s == ""s"") return 19;||| 25 if (s == ""t"") return 20;||| 26 if (s == ""u"") return 21;||| 27 if (s == ""v"") return 22;||| 28 if (s == ""w"") return 23;||| 29 if (s == ""x"") return 24;||| 30 if (s == ""y"") return 25;||| 31 if (s == ""z"") return 26;||| 32 }||| 33 int main() {||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 int n;||| 38 cin >> n;||| 39 string stringg;||| 40 cin >> stringg;||| 41 int f = 0;||| 42 for (int i = 0; i < stringg.size(); i++) {||| 43 string k;||| 44 k = stringg.substr(i, 1);||| 45 f++;||| 46 b[f] = change(k);||| 47 }||| 48 for (int i = 1; i <= n; i++) {||| 49 c[i] = b[i];||| 50 }||| 51 sort(c + 1, c + n + 1);||| 52 int cnt = 0;||| 53 for (int i = 1; i <= n; i++) {||| 54 if (b[i] != c[i]) cnt++;||| 55 }||| 56 cout << cnt << endl;||| 57 memset(b, 127, sizeof(b));||| 58 memset(c, 127, sizeof(c));||| 59 }||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int b[50];||| 4 int c[50];||| 5 int change(string s) {||| 6 if (s == ""a"") return 1;||| 7 if (s == ""b"") return 2;||| 8 if (s == ""c"") return 3;||| 9 if (s == ""d"") return 4;||| 10 if (s == ""e"") return 5;||| 11 if (s == ""f"") return 6;||| 12 if (s == ""g"") return 7;||| 13 if (s == ""h"") return 8;||| 14 if (s == ""i"") return 9;||| 15 if (s == ""k"") return 10;||| 16 if (s == ""j"") return 11;||| 17 if (s == ""l"") return 12;||| 18 if (s == ""m"") return 13;||| 19 if (s == ""n"") return 14;||| 20 if (s == ""o"") return 15;||| 21 if (s == ""p"") return 16;||| 22 if (s == ""q"") return 17;||| 23 if (s == ""r"") return 18;||| 24 if (s == ""s"") return 19;||| 25 if (s == ""t"") return 20;||| 26 if (s == ""u"") return 21;||| 27 if (s == ""v"") return 22;||| 28 if (s == ""w"") return 23;||| 29 if (s == ""x"") return 24;||| 30 if (s == ""y"") return 25;||| 31 if (s == ""z"") return 26;||| 32 }||| 33 int main() {||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 int n;||| 38 cin >> n;||| 39 string stringg;||| 40 cin >> stringg;||| 41 int f = 0;||| 42 for (int i = 0; i < stringg.size(); i++) {||| 43 string k;||| 44 k = stringg.substr(i, 1);||| 45 f++;||| 46 b[f] = change(k);||| 47 }||| 48 for (int i = 1; i <= n; i++) {||| 49 c[i] = b[i];||| 50 }||| 51 sort(c + 1, c + n + 1);||| 52 int cnt = 0;||| 53 for (int i = 1; i <= n; i++) {||| 54 if (b[i] != c[i]) cnt++;||| 55 }||| 56 cout << cnt << endl;||| 57 memset(b, 127, sizeof(b));||| 58 memset(c, 127, sizeof(c));||| 59 }||| 60 }||| "	"15 if (s == ""j"") return 10;"
16	17	"1 #include <bits/stdc++.h>||| 2 void sort(char string[], int len);||| 3 int main() {||| 4 int tc;||| 5 scanf(""%d"", &tc);||| 6 for (int i = 0; i < tc; i++) {||| 7 int len;||| 8 scanf(""%d"", &len);||| 9 char string[len];||| 10 scanf(""%s"", &string);||| 11 char dup[len];||| 12 int l = 0;||| 13 while (l < len) {||| 14 dup[l] = string[l];||| 15 l++;||| 16 }||| 17 sort(string, len);||| 18 int count = 0;||| 19 for (int i = 0; i < len; i++) {||| 20 if (dup[i] != string[i]) {||| 21 count++;||| 22 }||| 23 }||| 24 printf(""%d\n"", count);||| 25 }||| 26 return 0;||| 27 }||| 28 void sort(char string[], int len) {||| 29 for (int i = 0; i < len - 1; i++) {||| 30 for (int j = 0; j < len - 1 - i; j++) {||| 31 if (string[j] > string[j + 1]) {||| 32 int temp;||| 33 temp = string[j];||| 34 string[j] = string[j + 1];||| 35 string[j + 1] = temp;||| 36 }||| 37 }||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 void sort(char string[], int len);||| 3 int main() {||| 4 int tc;||| 5 scanf(""%d"", &tc);||| 6 for (int i = 0; i < tc; i++) {||| 7 int len;||| 8 scanf(""%d"", &len);||| 9 char string[len];||| 10 scanf(""%s"", &string);||| 11 char dup[len];||| 12 int l = 0;||| 13 while (l <= len) {||| 14 dup[l] = string[l];||| 15 l++;||| 16 }||| 17 sort(string, len);||| 18 int count = 0;||| 19 for (int i = 0; i < len; i++) {||| 20 if (dup[i] != string[i]) {||| 21 count++;||| 22 }||| 23 }||| 24 printf(""%d"", count);||| 25 }||| 26 return 0;||| 27 }||| 28 void sort(char string[], int len) {||| 29 for (int i = 0; i < len - 1; i++) {||| 30 for (int j = 0; j < len - 1 - i; j++) {||| 31 if (string[j] > string[j + 1]) {||| 32 int temp;||| 33 temp = string[j];||| 34 string[j] = string[j + 1];||| 35 string[j + 1] = temp;||| 36 }||| 37 }||| 38 }||| 39 }||| "	13 while (l < len) {
16	61	"1 #include <bits/stdc++.h>||| 2 void sort(char string[], int len);||| 3 int main() {||| 4 int tc;||| 5 scanf(""%d"", &tc);||| 6 for (int i = 0; i < tc; i++) {||| 7 int len;||| 8 scanf(""%d"", &len);||| 9 char string[len];||| 10 scanf(""%s"", &string);||| 11 char dup[len];||| 12 int l = 0;||| 13 while (l < len) {||| 14 dup[l] = string[l];||| 15 l++;||| 16 }||| 17 sort(string, len);||| 18 int count = 0;||| 19 for (int i = 0; i < len; i++) {||| 20 if (dup[i] != string[i]) {||| 21 count++;||| 22 }||| 23 }||| 24 printf(""%d\n"", count);||| 25 }||| 26 return 0;||| 27 }||| 28 void sort(char string[], int len) {||| 29 for (int i = 0; i < len - 1; i++) {||| 30 for (int j = 0; j < len - 1 - i; j++) {||| 31 if (string[j] > string[j + 1]) {||| 32 int temp;||| 33 temp = string[j];||| 34 string[j] = string[j + 1];||| 35 string[j + 1] = temp;||| 36 }||| 37 }||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 void sort(char string[], int len);||| 3 int main() {||| 4 int tc;||| 5 scanf(""%d"", &tc);||| 6 for (int i = 0; i < tc; i++) {||| 7 int len;||| 8 scanf(""%d"", &len);||| 9 char string[len];||| 10 scanf(""%s"", &string);||| 11 char dup[len];||| 12 int l = 0;||| 13 while (l <= len) {||| 14 dup[l] = string[l];||| 15 l++;||| 16 }||| 17 sort(string, len);||| 18 int count = 0;||| 19 for (int i = 0; i < len; i++) {||| 20 if (dup[i] != string[i]) {||| 21 count++;||| 22 }||| 23 }||| 24 printf(""%d\n"", count);||| 25 }||| 26 return 0;||| 27 }||| 28 void sort(char string[], int len) {||| 29 for (int i = 0; i < len - 1; i++) {||| 30 for (int j = 0; j < len - 1 - i; j++) {||| 31 if (string[j] > string[j + 1]) {||| 32 int temp;||| 33 temp = string[j];||| 34 string[j] = string[j + 1];||| 35 string[j + 1] = temp;||| 36 }||| 37 }||| 38 }||| 39 }||| "	13 while (l < len) {
17	78	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using ull = unsigned long long;||| 6 using uint = unsigned;||| 7 inline ll popcnt(ull a) { return __builtin_popcountll(a); }||| 8 ll intpow(ll a, ll b) {||| 9 ll ans = 1;||| 10 while (b) {||| 11 if (b & 1) ans *= a;||| 12 a *= a;||| 13 b /= 2;||| 14 }||| 15 return ans;||| 16 }||| 17 ll intpow(ll a, ll b, ll m) {||| 18 ll ans = 1;||| 19 while (b) {||| 20 if (b & 1) (ans *= a) %= m;||| 21 (a *= a) %= m;||| 22 b /= 2;||| 23 }||| 24 return ans;||| 25 }||| 26 template <class T>||| 27 inline bool chmax(T& a, T b) {||| 28 if (a < b) {||| 29 a = b;||| 30 return 1;||| 31 }||| 32 return 0;||| 33 }||| 34 template <class T>||| 35 inline bool chmin(T& a, T b) {||| 36 if (a > b) {||| 37 a = b;||| 38 return 1;||| 39 }||| 40 return 0;||| 41 }||| 42 template <class T>||| 43 using vc = vector<T>;||| 44 template <class T>||| 45 using vvc = vector<vc<T>>;||| 46 template <class T>||| 47 using vvvc = vector<vvc<T>>;||| 48 template <class T>||| 49 using vvvvc = vector<vvvc<T>>;||| 50 template <class T>||| 51 using pq = priority_queue<T>;||| 52 template <class T>||| 53 using pqg = priority_queue<T, vector<T>, greater<T>>;||| 54 template <class T>||| 55 void scan(T& a) {||| 56 cin >> a;||| 57 }||| 58 template <class T>||| 59 void scan(vector<T>& a) {||| 60 for (auto&& i : a) scan(i);||| 61 }||| 62 void in() {}||| 63 template <class Head, class... Tail>||| 64 void in(Head& head, Tail&... tail) {||| 65 scan(head);||| 66 in(tail...);||| 67 }||| 68 void print() { cout << ' '; }||| 69 template <class T>||| 70 void print(const T& a) {||| 71 cout << a;||| 72 }||| 73 template <class T>||| 74 void print(const vector<T>& a) {||| 75 if (a.empty()) return;||| 76 print(a[0]);||| 77 for (auto i = a.begin(); ++i != a.end();) {||| 78 cout << ' ';||| 79 print(*i);||| 80 }||| 81 }||| 82 int out() {||| 83 cout << '\n';||| 84 return 0;||| 85 }||| 86 template <class T>||| 87 int out(const T& t) {||| 88 print(t);||| 89 cout << '\n';||| 90 return 0;||| 91 }||| 92 template <class Head, class... Tail>||| 93 int out(const Head& head, const Tail&... tail) {||| 94 print(head);||| 95 cout << ' ';||| 96 out(tail...);||| 97 return 0;||| 98 }||| 99 void solve() {||| 100 long long n;||| 101 in(n);||| 102 vector<vector<long long>> r(n, vector<long long>(5));||| 103 in(r);||| 104 long long id = 0;||| 105 for (long long i = 1; i < n; ++i) {||| 106 long long cnt = 0;||| 107 for (long long j = 0; j < 5; ++j) {||| 108 if (r[id][j] > r[i][j]) ++cnt;||| 109 }||| 110 if (cnt >= 3) {||| 111 id = i;||| 112 }||| 113 };||| 114 for (long long i = 0; i < n; ++i) {||| 115 if (id == i) continue;||| 116 long long cnt = 0;||| 117 for (long long j = 0; j < 5; ++j) {||| 118 if (r[id][j] < r[i][j]) ++cnt;||| 119 }||| 120 if (cnt < 3) {||| 121 out(-1);||| 122 return;||| 123 }||| 124 }||| 125 out(id + 1);||| 126 }||| 127 signed main() {||| 128 ios::sync_with_stdio(false);||| 129 cin.tie(0);||| 130 long long t;||| 131 in(t);||| 132 for (long long i = 0; i < t; ++i) solve();||| 133 return 0;||| 134 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using ull = unsigned long long;||| 6 using uint = unsigned;||| 7 inline ll popcnt(ull a) { return __builtin_popcountll(a); }||| 8 ll intpow(ll a, ll b) {||| 9 ll ans = 1;||| 10 while (b) {||| 11 if (b & 1) ans *= a;||| 12 a *= a;||| 13 b /= 2;||| 14 }||| 15 return ans;||| 16 }||| 17 ll intpow(ll a, ll b, ll m) {||| 18 ll ans = 1;||| 19 while (b) {||| 20 if (b & 1) (ans *= a) %= m;||| 21 (a *= a) %= m;||| 22 b /= 2;||| 23 }||| 24 return ans;||| 25 }||| 26 template <class T>||| 27 inline bool chmax(T& a, T b) {||| 28 if (a < b) {||| 29 a = b;||| 30 return 1;||| 31 }||| 32 return 0;||| 33 }||| 34 template <class T>||| 35 inline bool chmin(T& a, T b) {||| 36 if (a > b) {||| 37 a = b;||| 38 return 1;||| 39 }||| 40 return 0;||| 41 }||| 42 template <class T>||| 43 using vc = vector<T>;||| 44 template <class T>||| 45 using vvc = vector<vc<T>>;||| 46 template <class T>||| 47 using vvvc = vector<vvc<T>>;||| 48 template <class T>||| 49 using vvvvc = vector<vvvc<T>>;||| 50 template <class T>||| 51 using pq = priority_queue<T>;||| 52 template <class T>||| 53 using pqg = priority_queue<T, vector<T>, greater<T>>;||| 54 template <class T>||| 55 void scan(T& a) {||| 56 cin >> a;||| 57 }||| 58 template <class T>||| 59 void scan(vector<T>& a) {||| 60 for (auto&& i : a) scan(i);||| 61 }||| 62 void in() {}||| 63 template <class Head, class... Tail>||| 64 void in(Head& head, Tail&... tail) {||| 65 scan(head);||| 66 in(tail...);||| 67 }||| 68 void print() { cout << ' '; }||| 69 template <class T>||| 70 void print(const T& a) {||| 71 cout << a;||| 72 }||| 73 template <class T>||| 74 void print(const vector<T>& a) {||| 75 if (a.empty()) return;||| 76 print(a[0]);||| 77 for (auto i = a.begin(); ++i != a.end();) {||| 78 cout << ' ';||| 79 print(*i);||| 80 }||| 81 }||| 82 int out() {||| 83 cout << '\n';||| 84 return 0;||| 85 }||| 86 template <class T>||| 87 int out(const T& t) {||| 88 print(t);||| 89 cout << '\n';||| 90 return 0;||| 91 }||| 92 template <class Head, class... Tail>||| 93 int out(const Head& head, const Tail&... tail) {||| 94 print(head);||| 95 cout << ' ';||| 96 out(tail...);||| 97 return 0;||| 98 }||| 99 void solve() {||| 100 long long n;||| 101 in(n);||| 102 vector<vector<long long>> r(n, vector<long long>(5));||| 103 in(r);||| 104 long long id = 0;||| 105 for (long long i = 1; i < n; ++i) {||| 106 long long cnt = 0;||| 107 for (long long j = 0; j < 5; ++j) {||| 108 if (r[id][j] < r[i][j]) ++cnt;||| 109 }||| 110 if (cnt >= 3) {||| 111 id = i;||| 112 }||| 113 }||| 114 for (long long i = 0; i < n; ++i) {||| 115 if (id == i) continue;||| 116 long long cnt = 0;||| 117 for (long long j = 0; j < 5; ++j) {||| 118 if (r[id][j] < r[i][j]) ++cnt;||| 119 }||| 120 if (cnt < 3) {||| 121 out(-1);||| 122 return;||| 123 }||| 124 }||| 125 out(id + 1);||| 126 }||| 127 signed main() {||| 128 ios::sync_with_stdio(false);||| 129 cin.tie(0);||| 130 long long t;||| 131 in(t);||| 132 for (long long i = 0; i < t; ++i) solve();||| 133 return 0;||| 134 }||| 	108 if (r[id][j] > r[i][j]) ++cnt;
17	189	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 const int M = 1e9 + 7;||| 5 long long gcd(long long a, long long b) {||| 6 if (b == 0) return a;||| 7 return gcd(b, a % b);||| 8 }||| 9 void quickSort(int a[], int b[], int l, int r) {||| 10 int p = a[(l + r) / 2];||| 11 int i = l, j = r;||| 12 while (i < j) {||| 13 while (a[i] < p) {||| 14 i++;||| 15 }||| 16 while (a[j] > p) {||| 17 j--;||| 18 }||| 19 if (i <= j) {||| 20 int temp = a[i];||| 21 a[i] = a[j];||| 22 a[j] = temp;||| 23 temp = b[i];||| 24 b[i] = b[j];||| 25 b[j] = temp;||| 26 i++;||| 27 j--;||| 28 }||| 29 }||| 30 if (i < r) {||| 31 quickSort(a, b, i, r);||| 32 }||| 33 if (l < j) {||| 34 quickSort(a, b, l, j);||| 35 }||| 36 }||| 37 int main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 int t;||| 41 cin >> t;||| 42 while (t--) {||| 43 int n, a[N][6];||| 44 cin >> n;||| 45 for (int i = 1; i <= n; i++)||| 46 for (int j = 1; j <= 5; j++) cin >> a[i][j];||| 47 int v = 1;||| 48 for (int i = 2; i <= n; i++) {||| 49 int cnt = 0;||| 50 for (int j = 1; j <= 5; j++)||| 51 if (a[i][j] < a[v][j]) ++cnt;||| 52 if (cnt >= 3) v = i;||| 53 }||| 54 bool ok = 0;||| 55 for (int i = 1; i <= n; i++) {||| 56 if (i == v) continue;||| 57 int cnt = 0;||| 58 for (int j = 1; j <= 5; j++)||| 59 if (a[v][j] > a[i][j]) ++cnt;||| 60 if (cnt >= 3) {||| 61 cout << -1 << endl;||| 62 ok = 1;||| 63 break;||| 64 }||| 65 }||| 66 if (!ok) cout << v << endl;||| 67 }||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 const int M = 1e9 + 7;||| 5 long long gcd(long long a, long long b) {||| 6 if (b == 0) return a;||| 7 return gcd(b, a % b);||| 8 }||| 9 void quickSort(int a[], int b[], int l, int r) {||| 10 int p = a[(l + r) / 2];||| 11 int i = l, j = r;||| 12 while (i < j) {||| 13 while (a[i] < p) {||| 14 i++;||| 15 }||| 16 while (a[j] > p) {||| 17 j--;||| 18 }||| 19 if (i <= j) {||| 20 int temp = a[i];||| 21 a[i] = a[j];||| 22 a[j] = temp;||| 23 temp = b[i];||| 24 b[i] = b[j];||| 25 b[j] = temp;||| 26 i++;||| 27 j--;||| 28 }||| 29 }||| 30 if (i < r) {||| 31 quickSort(a, b, i, r);||| 32 }||| 33 if (l < j) {||| 34 quickSort(a, b, l, j);||| 35 }||| 36 }||| 37 int main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 int t;||| 41 cin >> t;||| 42 while (t--) {||| 43 int n, a[N][6];||| 44 cin >> n;||| 45 for (int i = 1; i <= n; i++)||| 46 for (int j = 1; j <= 5; j++) cin >> a[i][j];||| 47 int v = 1;||| 48 for (int i = 2; i <= n; i++) {||| 49 int cnt = 0;||| 50 for (int j = 1; j <= 5; j++)||| 51 if (a[i][j] < a[v][j]) ++cnt;||| 52 if (cnt >= 3) v = i;||| 53 }||| 54 bool ok = 0;||| 55 for (int i = 1; i <= n; i++) {||| 56 if (i == v) continue;||| 57 int cnt = 0;||| 58 for (int j = 1; j <= 5; j++)||| 59 if (a[v][j] > a[i][j]) ++cnt;||| 60 if (cnt >= 3) {||| 61 cout << -1;||| 62 ok = 1;||| 63 break;||| 64 }||| 65 }||| 66 if (!ok) cout << v << endl;||| 67 }||| 68 }||| 	61 cout << -1 << endl;
17	268	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 bool comp(vector<long long> a, vector<long long> b) {||| 5 long long cnt1 = 0, cnt2 = 0;||| 6 for (long long i = long long(0); i <= long long(4); i++) {||| 7 if (a[i] < b[i])||| 8 cnt1++;||| 9 else||| 10 cnt2++;||| 11 }||| 12 return cnt1 > cnt2;||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(0);||| 16 cin.tie(0);||| 17 cout.tie(0);||| 18 int T;||| 19 cin >> T;||| 20 while (T--) {||| 21 long long n, i, j, k, l, m;||| 22 cin >> n;||| 23 vector<vector<long long> > r(n, vector<long long>(5));||| 24 for (long long i = long long(0); i <= long long(n - 1); i++)||| 25 for (long long j = long long(0); j <= long long(4); j++) cin >> r[i][j];||| 26 if (n == 1) {||| 27 cout << ""1\n"";||| 28 continue;||| 29 }||| 30 vector<vector<long long> > z = r;||| 31 sort(r.begin(), r.end(), comp);||| 32 long long cnt = 0;||| 33 for (long long i = long long(1); i <= long long(n - 1); i++) {||| 34 long long temp = 0;||| 35 for (long long j = long long(0); j <= long long(4); j++) {||| 36 if (r[0][j] < r[i][j]) temp++;||| 37 }||| 38 if (temp >= 3)||| 39 cnt++;||| 40 else||| 41 break;||| 42 }||| 43 if (cnt == n - 1) {||| 44 for (long long i = long long(0); i <= long long(n - 1); i++) {||| 45 long long temp = 0;||| 46 for (long long j = long long(0); j <= long long(4); j++) {||| 47 if (r[0][j] == z[i][j]) temp++;||| 48 }||| 49 if (temp == 5) {||| 50 cout << i + 1 << ""\n"";||| 51 break;||| 52 }||| 53 }||| 54 } else||| 55 cout << ""-1\n"";||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 bool comp(vector<long long> a, vector<long long> b) {||| 5 long long cnt1 = 0, cnt2 = 0;||| 6 for (long long i = long long(0); i <= long long(4); i++) {||| 7 if (a[0] < b[0])||| 8 cnt1++;||| 9 else||| 10 cnt2++;||| 11 }||| 12 return cnt1 > cnt2;||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(0);||| 16 cin.tie(0);||| 17 cout.tie(0);||| 18 int T;||| 19 cin >> T;||| 20 while (T--) {||| 21 long long n, i, j, k, l, m;||| 22 cin >> n;||| 23 vector<vector<long long> > r(n, vector<long long>(5));||| 24 for (long long i = long long(0); i <= long long(n - 1); i++)||| 25 for (long long j = long long(0); j <= long long(4); j++) cin >> r[i][j];||| 26 if (n == 1) {||| 27 cout << ""1\n"";||| 28 continue;||| 29 }||| 30 vector<vector<long long> > z = r;||| 31 sort(r.begin(), r.end(), comp);||| 32 long long cnt = 0;||| 33 for (long long i = long long(1); i <= long long(n - 1); i++) {||| 34 long long temp = 0;||| 35 for (long long j = long long(0); j <= long long(4); j++) {||| 36 if (r[0][j] < r[i][j]) temp++;||| 37 }||| 38 if (temp >= 3)||| 39 cnt++;||| 40 else||| 41 break;||| 42 }||| 43 if (cnt == n - 1) {||| 44 for (long long i = long long(0); i <= long long(n - 1); i++) {||| 45 long long temp = 0;||| 46 for (long long j = long long(0); j <= long long(4); j++) {||| 47 if (r[0][j] == z[i][j]) temp++;||| 48 }||| 49 if (temp == 5) {||| 50 cout << i + 1 << ""\n"";||| 51 break;||| 52 }||| 53 }||| 54 } else||| 55 cout << ""-1\n"";||| 56 }||| 57 return 0;||| 58 }||| "	7 if (a[i] < b[i])
17	237	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 const long long MOD = 1e9 + 7;||| 7 const long long MOD2 = 998244353;||| 8 const long long dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};||| 9 long long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }||| 10 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 11 long long modpow(long long a, long long b, long long m) {||| 12 a %= m;||| 13 long long res = 1;||| 14 while (b) {||| 15 if (b & 1) res = (res * a) % m;||| 16 a = (a * a) % m;||| 17 b >>= 1;||| 18 }||| 19 return res;||| 20 }||| 21 long long bpow(long long a, long long b) {||| 22 if (b < 0) {||| 23 return 0;||| 24 }||| 25 long long res = 1;||| 26 while (b) {||| 27 if (b & 1) res = res * a;||| 28 a = a * a;||| 29 b >>= 1;||| 30 }||| 31 return res;||| 32 }||| 33 long long modinv(long long a, long long m = MOD) { return modpow(a, m - 2, m); }||| 34 const int N = 2e5 + 5;||| 35 vector<int> adj[N];||| 36 int main() {||| 37 ios::sync_with_stdio(0);||| 38 cin.tie(0);||| 39 cout.tie(0);||| 40 int T = 1;||| 41 cin >> T;||| 42 while (T--) {||| 43 long long n;||| 44 cin >> n;||| 45 vector<vector<long long> > rank(n + 1, vector<long long>(5));||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 0; j < 5; j++) {||| 48 long long x;||| 49 cin >> x;||| 50 rank[i][j] = x;||| 51 }||| 52 }||| 53 long long ans = 1;||| 54 for (long long i = 2; i <= n; i++) {||| 55 int cnt = 0;||| 56 for (int j = 0; j < 5; j++) {||| 57 if (rank[ans][j] > rank[i][j]) {||| 58 cnt++;||| 59 }||| 60 }||| 61 if (cnt >= 3) {||| 62 ans = i;||| 63 }||| 64 }||| 65 for (long long i = 1; i <= n; i++) {||| 66 if (i == ans) {||| 67 continue;||| 68 }||| 69 long long cnt = 0;||| 70 for (long long j = 0; j < 5; j++) {||| 71 if (rank[ans][j] > rank[i][j]) {||| 72 cnt++;||| 73 }||| 74 }||| 75 if (cnt >= 3) {||| 76 ans = -1;||| 77 break;||| 78 }||| 79 }||| 80 cout << ans << '\n';||| 81 }||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 const long long MOD = 1e9 + 7;||| 7 const long long MOD2 = 998244353;||| 8 const long long dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};||| 9 long long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }||| 10 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 11 long long modpow(long long a, long long b, long long m) {||| 12 a %= m;||| 13 long long res = 1;||| 14 while (b) {||| 15 if (b & 1) res = (res * a) % m;||| 16 a = (a * a) % m;||| 17 b >>= 1;||| 18 }||| 19 return res;||| 20 }||| 21 long long bpow(long long a, long long b) {||| 22 if (b < 0) {||| 23 return 0;||| 24 }||| 25 long long res = 1;||| 26 while (b) {||| 27 if (b & 1) res = res * a;||| 28 a = a * a;||| 29 b >>= 1;||| 30 }||| 31 return res;||| 32 }||| 33 long long modinv(long long a, long long m = MOD) { return modpow(a, m - 2, m); }||| 34 const int N = 2e5 + 5;||| 35 vector<int> adj[N];||| 36 int main() {||| 37 ios::sync_with_stdio(0);||| 38 cin.tie(0);||| 39 cout.tie(0);||| 40 int T = 1;||| 41 cin >> T;||| 42 while (T--) {||| 43 long long n;||| 44 cin >> n;||| 45 vector<vector<long long> > rank(n + 1, vector<long long>(5));||| 46 for (long long i = 1; i <= n; i++) {||| 47 for (long long j = 0; j < 5; j++) {||| 48 long long x;||| 49 cin >> x;||| 50 rank[i][j] = x;||| 51 }||| 52 }||| 53 long long ans = 1;||| 54 for (long long i = 2; i <= n; i++) {||| 55 int cnt = 0;||| 56 for (int j = 0; j < 5; j++) {||| 57 if (rank[ans][j] < rank[i][j]) {||| 58 cnt++;||| 59 }||| 60 }||| 61 if (cnt >= 3) {||| 62 ans = i;||| 63 }||| 64 }||| 65 for (long long i = 1; i <= n; i++) {||| 66 if (i == ans) {||| 67 continue;||| 68 }||| 69 long long cnt = 0;||| 70 for (long long j = 0; j < 5; j++) {||| 71 if (rank[ans][j] < rank[i][j]) {||| 72 cnt++;||| 73 }||| 74 }||| 75 if (cnt >= 3) {||| 76 ans = -1;||| 77 break;||| 78 }||| 79 }||| 80 cout << ans << '\n';||| 81 }||| 82 }||| "	57 if (rank[ans][j] > rank[i][j]) {
18	100	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<vector<int>> v(k, vector<int>(2));||| 7 vector<bool> b(2 * n + 1, false);||| 8 int ans = 0;||| 9 for (int i = 0; i < k; i++) {||| 10 cin >> v[i][0] >> v[i][1];||| 11 if (v[i][0] > v[i][1]) {||| 12 swap(v[i][0], v[i][1]);||| 13 }||| 14 b[v[i][0]] = true;||| 15 b[v[i][1]] = true;||| 16 int s = v[i][0];||| 17 int e = v[i][1];||| 18 int cnt = 0;||| 19 for (int j = 0; j < i; j++) {||| 20 if (s < v[j][0] && e > v[j][0] && e < v[j][1]) {||| 21 ans++;||| 22 } else if (s > v[j][0] && e > v[j][1] && s < v[j][1]) {||| 23 ans++;||| 24 }||| 25 }||| 26 }||| 27 vector<int> pos;||| 28 for (int i = 1; i <= 2 * n; i++) {||| 29 if (b[i] == false) {||| 30 pos.push_back(i);||| 31 }||| 32 }||| 33 for (int i = 0; i < ((int)pos.size()) / 2; i++) {||| 34 int s = pos[i];||| 35 int e = pos[i + n - k];||| 36 int cnt = 0;||| 37 for (int j = 0; j < v.size(); j++) {||| 38 if (s < v[j][0] && e > v[j][0] && e < v[j][1]) {||| 39 ans++;||| 40 } else if (s > v[j][0] && e > v[j][1] && s < v[j][1]) {||| 41 ans++;||| 42 }||| 43 }||| 44 v.push_back({s, e});||| 45 }||| 46 cout << ans << ""\n"";||| 47 }||| 48 int main() {||| 49 ios_base::sync_with_stdio(false);||| 50 cin.tie(0);||| 51 cout.tie(0);||| 52 int t = 1;||| 53 cin >> t;||| 54 for (int i = 1; i <= t; i++) {||| 55 solve();||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<vector<int>> v(k, vector<int>(2));||| 7 vector<bool> b(n + 1, false);||| 8 int ans = 0;||| 9 for (int i = 0; i < k; i++) {||| 10 cin >> v[i][0] >> v[i][1];||| 11 if (v[i][0] > v[i][1]) {||| 12 swap(v[i][0], v[i][1]);||| 13 }||| 14 b[v[i][0]] = true;||| 15 b[v[i][1]] = true;||| 16 int s = v[i][0];||| 17 int e = v[i][1];||| 18 int cnt = 0;||| 19 for (int j = 0; j < i; j++) {||| 20 if (s < v[j][0] && e > v[j][0] && e < v[j][1]) {||| 21 ans++;||| 22 } else if (s > v[j][0] && e > v[j][1] && s < v[j][1]) {||| 23 ans++;||| 24 }||| 25 }||| 26 }||| 27 vector<int> pos;||| 28 for (int i = 1; i <= 2 * n; i++) {||| 29 if (b[i] == false) {||| 30 pos.push_back(i);||| 31 }||| 32 }||| 33 for (int i = 0; i < ((int)pos.size()) / 2; i++) {||| 34 int s = pos[i];||| 35 int e = pos[i + n - k];||| 36 int cnt = 0;||| 37 for (int j = 0; j < v.size(); j++) {||| 38 if (s < v[j][0] && e > v[j][0] && e < v[j][1]) {||| 39 ans++;||| 40 } else if (s > v[j][0] && e > v[j][1] && s < v[j][1]) {||| 41 ans++;||| 42 }||| 43 }||| 44 v.push_back({s, e});||| 45 }||| 46 cout << ans << ""\n"";||| 47 }||| 48 int main() {||| 49 ios_base::sync_with_stdio(false);||| 50 cin.tie(0);||| 51 cout.tie(0);||| 52 int t = 1;||| 53 cin >> t;||| 54 for (int i = 1; i <= t; i++) {||| 55 solve();||| 56 }||| 57 return 0;||| 58 }||| "	7 vector<bool> b(2 * n + 1, false);
18	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, N, K, id[101 * 2], a[101], b[101];||| 4 bool vis[101 * 2];||| 5 int get() {||| 6 int x = 0;||| 7 char c = getchar();||| 8 while (c < '0' || c > '9') c = getchar();||| 9 while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();||| 10 return x;||| 11 }||| 12 bool cross(int a, int b, int c, int d) {||| 13 if (a > b) swap(a, b);||| 14 if (c > a && c < b) return d < a || d > b;||| 15 if (d > a && d < b) return c < a || c > b;||| 16 return 0;||| 17 }||| 18 int main() {||| 19 T = get();||| 20 while (T--) {||| 21 N = get(), K = get();||| 22 for (int i = 1; i <= N * 2; i++) vis[i] = 0;||| 23 for (int i = 1; i <= K; i++)||| 24 a[i] = get(), b[i] = get(), vis[a[i]] = 1, vis[b[i]] = 1;||| 25 int j = 1;||| 26 for (int i = 1; i <= N - K << 1; i++) {||| 27 while (vis[j]) j++;||| 28 id[i] = j++;||| 29 }||| 30 for (int i = K + 1; i <= N; i++) a[i] = id[i - K], b[i] = id[i + N - K * 2];||| 31 int ans = 0;||| 32 for (int i = 1; i <= N; i++)||| 33 for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[j]);||| 34 cout << ans << '\n';||| 35 }||| 36 return 0;||| 37 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int T, N, K, id[101 * 2], a[101], b[101];||| 4 bool vis[101 * 2];||| 5 int get() {||| 6 int x = 0;||| 7 char c = getchar();||| 8 while (c < '0' || c > '9') c = getchar();||| 9 while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();||| 10 return x;||| 11 }||| 12 bool cross(int a, int b, int c, int d) {||| 13 if (a > b) swap(a, b);||| 14 if (c > a && c < b) return d < a || d > b;||| 15 if (d > a && d < b) return c < a || c > b;||| 16 return 0;||| 17 }||| 18 int main() {||| 19 T = get();||| 20 while (T--) {||| 21 N = get(), K = get();||| 22 for (int i = 1; i <= N * 2; i++) vis[i] = 0;||| 23 for (int i = 1; i <= K; i++)||| 24 a[i] = get(), b[i] = get(), vis[a[i]] = 1, vis[b[i]] = 1;||| 25 int j = 1;||| 26 for (int i = 1; i <= N - K << 1; i++) {||| 27 while (vis[j]) j++;||| 28 id[i] = j++;||| 29 }||| 30 for (int i = K + 1; i <= N; i++) a[i] = id[i - K], b[i] = id[i + N - K * 2];||| 31 int ans = 0;||| 32 for (int i = 1; i <= N; i++)||| 33 for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[i]);||| 34 cout << ans << '\n';||| 35 }||| 36 return 0;||| 37 }||| 	33 for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[j]);
18	137	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<long long> &a) {||| 4 for (long long i = 0; i < a.size(); i++) cin >> a[i];||| 5 }||| 6 void read(vector<string> &a) {||| 7 for (long long i = 0; i < a.size(); i++) cin >> a[i];||| 8 }||| 9 bool intersect(pair<long long, long long> c, pair<long long, long long> d) {||| 10 if (c.first > d.first) swap(c, d);||| 11 return c.second > d.first and c.second < d.second;||| 12 }||| 13 void solve() {||| 14 long long n, k;||| 15 cin >> n >> k;||| 16 vector<pair<long long, long long>> a;||| 17 vector<bool> used(2 * n + 1, false);||| 18 for (long long i = 0; i < k; i++) {||| 19 long long x, y;||| 20 cin >> x >> y;||| 21 if (x < y)||| 22 a.push_back({x, y});||| 23 else||| 24 a.push_back({y, x});||| 25 used[x] = used[y] = true;||| 26 }||| 27 vector<long long> left;||| 28 for (long long i = 1; i <= 2 * n; i++) {||| 29 if (!used[i]) left.push_back(i);||| 30 }||| 31 for (long long i = 0; i < n - k; i++) {||| 32 a.push_back({left[i], left[n - k + i]});||| 33 }||| 34 long long ans = 0;||| 35 for (long long i = 0; i < n; i++) {||| 36 for (long long j = i + 1; j < n; j++) {||| 37 if (intersect(a[i], a[j])) ans++;||| 38 }||| 39 }||| 40 cout << ans << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 long long t = 1;||| 46 cin >> t;||| 47 while (t--) {||| 48 solve();||| 49 }||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void read(vector<long long> &a) {||| 4 for (long long i = 0; i < a.size(); i++) cin >> a[i];||| 5 }||| 6 void read(vector<string> &a) {||| 7 for (long long i = 0; i < a.size(); i++) cin >> a[i];||| 8 }||| 9 bool intersect(pair<long long, long long> c, pair<long long, long long> d) {||| 10 if (c.first > d.first) swap(c, d);||| 11 return c.second > d.first and c.second < d.second;||| 12 }||| 13 void solve() {||| 14 long long n, k;||| 15 cin >> n >> k;||| 16 vector<pair<long long, long long>> a;||| 17 vector<bool> used(2 * n + 1, false);||| 18 for (long long i = 0; i < k; i++) {||| 19 long long x, y;||| 20 cin >> x >> y;||| 21 if (x < y)||| 22 a.push_back({x, y});||| 23 else||| 24 a.push_back({y, x});||| 25 used[x] = used[y] = true;||| 26 }||| 27 vector<long long> left;||| 28 for (long long i = 1; i <= 2 * n; i++) {||| 29 if (!used[i]) left.push_back(i);||| 30 }||| 31 for (long long i = 1; i <= n - k; i++) {||| 32 a.push_back({left[i], left[n - k + i]});||| 33 }||| 34 long long ans = 0;||| 35 for (long long i = 0; i < n; i++) {||| 36 for (long long j = i + 1; j < n; j++) {||| 37 if (intersect(a[i], a[j])) ans++;||| 38 }||| 39 }||| 40 cout << ans << ""\n"";||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 long long t = 1;||| 46 cin >> t;||| 47 while (t--) {||| 48 solve();||| 49 }||| 50 }||| "	31 for (long long i = 0; i < n - k; i++) {
18	71	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n, k;||| 8 cin >> n >> k;||| 9 int free[210]{0};||| 10 int a[105], b[105];||| 11 long long int l = 2 * n;||| 12 for (int i = 0; i < k; i++) {||| 13 l -= 2;||| 14 cin >> a[i] >> b[i];||| 15 free[a[i]]++;||| 16 free[b[i]]++;||| 17 }||| 18 long long int ans = ((n - k) * (n - k - 1)) / 2;||| 19 for (int i = 0; i < k; i++) {||| 20 int x = a[i];||| 21 int y = b[i];||| 22 if (x > y) swap(x, y);||| 23 long long int cnt = 0;||| 24 for (int j = x + 1; j < y; j++) {||| 25 if (!free[j]) cnt++;||| 26 }||| 27 ans += min(cnt, l - cnt);||| 28 for (int j = i + 1; j < k; j++) {||| 29 int u = a[j];||| 30 int v = b[j];||| 31 if ((x < u && u < y) ^ (x < v && v < y)) ans++;||| 32 }||| 33 }||| 34 cout << ans << endl;||| 35 }||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n, k;||| 8 cin >> n >> k;||| 9 int free[210]{0};||| 10 int a[105], b[105];||| 11 long long int l = 2 * n;||| 12 for (int i = 0; i < k; i++) {||| 13 l -= 2;||| 14 cin >> a[i] >> b[i];||| 15 free[a[i]]++;||| 16 free[b[i]]++;||| 17 }||| 18 long long int ans = ((n - k) * (n - k - 1)) / 2;||| 19 for (int i = 0; i < k; i++) {||| 20 int x = a[i];||| 21 int y = b[i];||| 22 if (x > y) swap(x, y);||| 23 long long int cnt = 0;||| 24 for (int j = x + 1; j < y; j++) {||| 25 if (!free[j]) cnt++;||| 26 }||| 27 ans += min(cnt, l - cnt);||| 28 for (int j = i + 1; i < k; i++) {||| 29 int u = a[j];||| 30 int v = b[j];||| 31 if ((x < u && u < y) ^ (x < v && v < y)) ans++;||| 32 }||| 33 }||| 34 cout << ans << endl;||| 35 }||| 36 }||| 	28 for (int j = i + 1; j < k; j++) {
18	68	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 205;||| 4 long long n, k;||| 5 vector<long long> lst;||| 6 vector<pair<long long, long long> > Pair;||| 7 bool vs[N];||| 8 void in() {||| 9 cin >> n >> k;||| 10 for (long long i = 1; i <= 2 * n; i++) vs[i] = false;||| 11 lst.clear(), Pair.clear();||| 12 for (long long i = 1; i <= k; i++) {||| 13 long long u, v;||| 14 cin >> u >> v;||| 15 vs[u] = vs[v] = true;||| 16 Pair.push_back({min(u, v), max(u, v)});||| 17 }||| 18 for (long long i = 1; i <= 2 * n; i++) {||| 19 if (!vs[i]) lst.push_back(i);||| 20 }||| 21 for (long long i = 0; i < lst.size() / 2; i++)||| 22 Pair.push_back({lst[i], lst[i + lst.size() / 2]});||| 23 }||| 24 long long getNum(long long u, long long v) {||| 25 long long a = Pair[u].first, b = Pair[u].second;||| 26 long long c = Pair[v].first, d = Pair[v].second;||| 27 if (a < c && c < b && (d > b || d < a)) return 1;||| 28 if (a < d && d < b && (c > b || c < a)) return 1;||| 29 return 0;||| 30 }||| 31 void process() {||| 32 long long res = 0;||| 33 for (long long i = 0; i < Pair.size(); i++) {||| 34 for (long long j = 0; j < i; j++) {||| 35 res += getNum(i, j);||| 36 }||| 37 }||| 38 cout << res << '\n';||| 39 }||| 40 int main() {||| 41 if (fopen(""trash.inp"", ""r""))||| 42 freopen(""trash.inp"", ""r"", stdin), freopen(""trash.out"", ""w"", stdout);||| 43 ios::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0);||| 45 int T;||| 46 cin >> T;||| 47 while (T--) {||| 48 in();||| 49 process();||| 50 }||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 105;||| 4 long long n, k;||| 5 vector<long long> lst;||| 6 vector<pair<long long, long long> > Pair;||| 7 bool vs[N];||| 8 void in() {||| 9 cin >> n >> k;||| 10 for (long long i = 1; i <= n; i++) vs[i] = false;||| 11 lst.clear(), Pair.clear();||| 12 for (long long i = 1; i <= k; i++) {||| 13 long long u, v;||| 14 cin >> u >> v;||| 15 vs[u] = vs[v] = true;||| 16 Pair.push_back({min(u, v), max(u, v)});||| 17 }||| 18 for (long long i = 1; i <= 2 * n; i++) {||| 19 if (!vs[i]) lst.push_back(i);||| 20 }||| 21 for (long long i = 0; i < lst.size() / 2; i++)||| 22 Pair.push_back({lst[i], lst[i + lst.size() / 2]});||| 23 }||| 24 long long getNum(long long u, long long v) {||| 25 long long a = Pair[u].first, b = Pair[u].second;||| 26 long long c = Pair[v].first, d = Pair[v].second;||| 27 if (a < c && c < b && (d > b || d < a)) return 1;||| 28 if (a < d && d < b && (c > b || c < a)) return 1;||| 29 return 0;||| 30 }||| 31 void process() {||| 32 long long res = 0;||| 33 for (long long i = 0; i < Pair.size(); i++) {||| 34 for (long long j = 0; j < i; j++) {||| 35 res += getNum(i, j);||| 36 }||| 37 }||| 38 cout << res << '\n';||| 39 }||| 40 int main() {||| 41 if (fopen(""trash.inp"", ""r""))||| 42 freopen(""trash.inp"", ""r"", stdin), freopen(""trash.out"", ""w"", stdout);||| 43 ios::sync_with_stdio(0);||| 44 cin.tie(0), cout.tie(0);||| 45 int T;||| 46 cin >> T;||| 47 while (T--) {||| 48 in();||| 49 process();||| 50 }||| 51 }||| "	3 const long long N = 205;
19	42	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using P = pair<ll, ll>;||| 5 using vec = vector<ll>;||| 6 using vecp = vector<P>;||| 7 using mat = vector<vec>;||| 8 using matp = vector<vecp>;||| 9 const ll MOD = 998244353;||| 10 const ll INF = 1e18;||| 11 ll Pow(ll a, ll n) {||| 12 if (n == 0) return 1;||| 13 if (n == 1) return a;||| 14 if (n % 2 == 1) return (a * Pow(a, n - 1));||| 15 ll t = Pow(a, n / 2);||| 16 return (t * t);||| 17 }||| 18 int main() {||| 19 ll T;||| 20 cin >> T;||| 21 for (long long l = 0; l < (T); ++l) {||| 22 ll N;||| 23 cin >> N;||| 24 vec A(N);||| 25 for (long long i = 0; i < (N); ++i) cin >> A.at(i);||| 26 if (N == 1) {||| 27 if (A.at(0) == 0) {||| 28 cout << ""YES"" << endl;||| 29 } else {||| 30 cout << ""NO"" << endl;||| 31 }||| 32 continue;||| 33 }||| 34 ll t = 0;||| 35 for (long long i = 0; i < (N); ++i) {||| 36 for (long long tmp = 0; tmp < (Pow(3, N - 1)); ++tmp) {||| 37 ll k = 0, s = tmp;||| 38 for (long long j = 0; j < (N); ++j) {||| 39 if (j == i) {||| 40 continue;||| 41 }||| 42 if (s % 3 == 1)||| 43 k += A.at(j);||| 44 else if (s % 3 == 2)||| 45 k -= A.at(j);||| 46 s /= 3;||| 47 }||| 48 if (k == A.at(i)) t = 1;||| 49 }||| 50 }||| 51 if (t == 1) {||| 52 cout << ""YES"" << endl;||| 53 } else {||| 54 cout << ""NO"" << endl;||| 55 }||| 56 }||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using P = pair<ll, ll>;||| 5 using vec = vector<ll>;||| 6 using vecp = vector<P>;||| 7 using mat = vector<vec>;||| 8 using matp = vector<vecp>;||| 9 const ll MOD = 998244353;||| 10 const ll INF = 1e18;||| 11 ll Pow(ll a, ll n) {||| 12 if (n == 0) return 1;||| 13 if (n == 1) return a;||| 14 if (n % 2 == 1) return (a * Pow(a, n - 1));||| 15 ll t = Pow(a, n / 2);||| 16 return (t * t);||| 17 }||| 18 int main() {||| 19 ll T;||| 20 cin >> T;||| 21 for (long long l = 0; l < (T); ++l) {||| 22 ll N;||| 23 cin >> N;||| 24 vec A(N);||| 25 for (long long i = 0; i < (N); ++i) cin >> A.at(i);||| 26 if (N == 1) {||| 27 if (A.at(0) == 0) {||| 28 cout << ""YES"" << endl;||| 29 } else {||| 30 cout << ""NO"" << endl;||| 31 }||| 32 continue;||| 33 }||| 34 ll t = 0;||| 35 for (long long i = 0; i < (N); ++i) {||| 36 for (long long tmp = 0; tmp < (Pow(3, N - 1)); ++tmp) {||| 37 ll k = 0, s = tmp;||| 38 for (long long j = 0; j < (N); ++j) {||| 39 if (j == i) {||| 40 continue;||| 41 }||| 42 if (s % 3 == 1)||| 43 k += A.at(j);||| 44 else if (s % 3 == 2)||| 45 k -= A.at(i);||| 46 s /= 3;||| 47 }||| 48 if (k == A.at(i)) t = 1;||| 49 }||| 50 }||| 51 if (t == 1) {||| 52 cout << ""YES"" << endl;||| 53 } else {||| 54 cout << ""NO"" << endl;||| 55 }||| 56 }||| 57 }||| "	45 k -= A.at(j);
19	181	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int a[20], n;||| 5 int main() {||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n;||| 10 for (int i = 0; i < n; i++) cin >> a[i];||| 11 long long x = 1;||| 12 for (int i = 0; i < n; i++) x *= 3;||| 13 bool ans = 0;||| 14 for (int i = 1; i < x; i++) {||| 15 int sum = 0;||| 16 long long y = i;||| 17 for (int j = 0; j < n; j++) {||| 18 if (y % 3 == 2)||| 19 sum -= a[j];||| 20 else if (y % 3)||| 21 sum += a[j];||| 22 y /= 3;||| 23 }||| 24 if (!sum) {||| 25 ans = 1;||| 26 break;||| 27 }||| 28 }||| 29 if (ans)||| 30 cout << ""YES\n"";||| 31 else||| 32 cout << ""NO\n"";||| 33 }||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int a[20], n;||| 5 int main() {||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 cin >> n;||| 10 for (int i = 0; i < n; i++) cin >> a[i];||| 11 long long x = 1;||| 12 for (int i = 0; i < n; i++) x *= 3;||| 13 bool ans = 0;||| 14 for (int i = 1; i < x; i++) {||| 15 int sum = 0;||| 16 long long y = i;||| 17 for (int j = 0; j < n; j++) {||| 18 if (y % 3 == 2)||| 19 sum -= a[i];||| 20 else if (y % 3)||| 21 sum += a[i];||| 22 y /= 3;||| 23 }||| 24 if (!sum) {||| 25 ans = 1;||| 26 break;||| 27 }||| 28 }||| 29 if (ans)||| 30 cout << ""YES\n"";||| 31 else||| 32 cout << ""NO\n"";||| 33 }||| 34 return 0;||| 35 }||| "	19 sum -= a[j];
20	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k;||| 4 struct node {||| 5 int left;||| 6 int right;||| 7 int color;||| 8 bool operator<(const node &b) const { return right < b.right; }||| 9 };||| 10 int t[10005];||| 11 int last[105], weight[10005];||| 12 bool vis[105];||| 13 pair<int, int> ans[105];||| 14 int main() {||| 15 int x;||| 16 vector<node> que;||| 17 scanf(""%d%d"", &n, &k);||| 18 for (int i = 1; i <= n * k; i++) {||| 19 scanf(""%d"", &x);||| 20 if (last[x]) que.push_back((node){last[x], i, x});||| 21 last[x] = i;||| 22 }||| 23 int limit = (n + k - 2) / (k - 1);||| 24 sort(que.begin(), que.end());||| 25 for (auto i : que) {||| 26 if (vis[i.color]) continue;||| 27 int times = 0;||| 28 for (int j = i.left; j <= i.right; j++) times = max(times, weight[j]);||| 29 if (times < limit) {||| 30 ans[i.color] = make_pair(i.left, i.right);||| 31 vis[i.color] = 1;||| 32 for (int j = i.left; j <= i.right; j++) weight[j]++;||| 33 }||| 34 }||| 35 for (int i = 1; i <= n; i++) printf(""%d %d\n"", ans[i].first, ans[i].second);||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k;||| 4 struct node {||| 5 int left;||| 6 int right;||| 7 int color;||| 8 bool operator<(const node &b) const { return right > b.right; }||| 9 };||| 10 int t[10005];||| 11 int last[105], weight[10005];||| 12 bool vis[105];||| 13 pair<int, int> ans[105];||| 14 int main() {||| 15 int x;||| 16 vector<node> que;||| 17 scanf(""%d%d"", &n, &k);||| 18 for (int i = 1; i <= n * k; i++) {||| 19 scanf(""%d"", &x);||| 20 if (last[x]) que.push_back((node){last[x], i, x});||| 21 last[x] = i;||| 22 }||| 23 int limit = (n + k - 2) / (k - 1);||| 24 sort(que.begin(), que.end());||| 25 for (auto i : que) {||| 26 if (vis[i.color]) continue;||| 27 int times = 0;||| 28 for (int j = i.left; j <= i.right; j++) times = max(times, weight[j]);||| 29 if (times < limit) {||| 30 ans[i.color] = make_pair(i.left, i.right);||| 31 vis[i.color] = 1;||| 32 for (int j = i.left; j <= i.right; j++) weight[j]++;||| 33 }||| 34 }||| 35 for (int i = 1; i <= n; i++) printf(""%d %d\n"", ans[i].first, ans[i].second);||| 36 return 0;||| 37 }||| "	8 bool operator<(const node &b) const { return right < b.right; }
20	23	"1 #include <bits/stdc++.h>||| 2 struct interval {||| 3 int l, r;||| 4 int operator<(const interval &i) const { return r < i.r; }||| 5 } is[10005];||| 6 int n, k, a[10005], tot, app[105][105], cnt[10005], ci, lim, sel[105];||| 7 int sell[105], selr[105];||| 8 int main() {||| 9 scanf(""%d%d"", &n, &k);||| 10 tot = n * k;||| 11 lim = (n + k - 2) / (k - 1);||| 12 for (int i = 1; i <= tot; ++i) {||| 13 scanf(""%d"", a + i);||| 14 app[a[i]][++cnt[a[i]]] = i;||| 15 }||| 16 for (int i = 1; i <= n; ++i)||| 17 for (int j = 1; j < k; ++j) is[++ci] = (interval){app[i][j], app[i][j + 1]};||| 18 std::sort(is + 1, is + ci + 1);||| 19 memset(cnt, 0, sizeof cnt);||| 20 for (int i = 1; i <= ci; ++i)||| 21 if (!sel[a[is[i].l]]) {||| 22 int can = 1;||| 23 for (int j = is[i].l; j <= is[i].r; ++j) can &= cnt[j] < lim;||| 24 if (can) {||| 25 for (int j = is[i].l; j <= is[i].r; ++j) ++cnt[j];||| 26 sell[a[is[i].l]] = is[i].l;||| 27 selr[a[is[i].r]] = is[i].r;||| 28 sel[a[is[i].l]] = 1;||| 29 }||| 30 }||| 31 for (int i = 1; i <= n; ++i) printf(""%d %d\n"", sell[i], selr[i]);||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 struct interval {||| 3 int l, r;||| 4 int operator<(const interval &i) const { return r < i.r; }||| 5 } is[10005];||| 6 int n, k, a[10005], tot, app[105][105], cnt[105], ci, lim, sel[105];||| 7 int sell[105], selr[105];||| 8 int main() {||| 9 scanf(""%d%d"", &n, &k);||| 10 tot = n * k;||| 11 lim = (n + k - 2) / (k - 1);||| 12 for (int i = 1; i <= tot; ++i) {||| 13 scanf(""%d"", a + i);||| 14 app[a[i]][++cnt[a[i]]] = i;||| 15 }||| 16 for (int i = 1; i <= n; ++i)||| 17 for (int j = 1; j < k; ++j) is[++ci] = (interval){app[i][j], app[i][j + 1]};||| 18 std::sort(is + 1, is + ci + 1);||| 19 memset(cnt, 0, sizeof cnt);||| 20 for (int i = 1; i <= ci; ++i)||| 21 if (!sel[a[is[i].l]]) {||| 22 int can = 1;||| 23 for (int j = is[i].l; j <= is[i].r; ++j) can &= cnt[j] < lim;||| 24 if (can) {||| 25 for (int j = is[i].l; j <= is[i].r; ++j) ++cnt[j];||| 26 sell[a[is[i].l]] = is[i].l;||| 27 selr[a[is[i].r]] = is[i].r;||| 28 sel[a[is[i].l]] = 1;||| 29 }||| 30 }||| 31 for (int i = 1; i <= n; ++i) printf(""%d %d\n"", sell[i], selr[i]);||| 32 return 0;||| 33 }||| "	6 int n, k, a[10005], tot, app[105][105], cnt[10005], ci, lim, sel[105];
20	60	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 1e2 + 14;||| 4 int n, k, a[MAX_N], b[MAX_N], c[MAX_N * MAX_N];||| 5 uint8_t blocked[MAX_N * MAX_N];||| 6 int main() {||| 7 ios::sync_with_stdio(0), cin.tie(0);||| 8 cin >> n >> k;||| 9 for (int i = 0; i < n * k; ++i) {||| 10 cin >> c[i];||| 11 --c[i];||| 12 if (!b[c[i]]) {||| 13 int j = i - 1;||| 14 while (j >= 0 && c[j] != c[i]) --j;||| 15 if (j >= 0 &&||| 16 *max_element(blocked + j, blocked + i) < (n + k - 2) / (k - 1)) {||| 17 a[c[i]] = j;||| 18 b[c[i]] = i;||| 19 while (j < i) ++blocked[j++];||| 20 }||| 21 }||| 22 }||| 23 assert(*min_element(b, b + n));||| 24 for (int i = 0; i < n; ++i) cout << a[i] + 1 << ' ' << b[i] + 1 << '\n';||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX_N = 1e2 + 14;||| 4 int n, k, a[MAX_N], b[MAX_N], c[MAX_N * MAX_N];||| 5 uint8_t blocked[MAX_N * MAX_N];||| 6 int main() {||| 7 ios::sync_with_stdio(0), cin.tie(0);||| 8 cin >> n >> k;||| 9 for (int i = 0; i < n * k; ++i) {||| 10 cin >> c[i];||| 11 --c[i];||| 12 if (!b[c[i]]) {||| 13 int j = i - 1;||| 14 while (j >= 0 && c[j] != c[i]) --j;||| 15 if (j >= 0 &&||| 16 *max_element(blocked + j, blocked + i) <= (n + k - 2) / (k - 1)) {||| 17 a[c[i]] = j;||| 18 b[c[i]] = i;||| 19 while (j < i) ++blocked[j++];||| 20 }||| 21 }||| 22 }||| 23 assert(*min_element(b, b + n));||| 24 for (int i = 0; i < n; ++i) cout << a[i] + 1 << ' ' << b[i] + 1 << '\n';||| 25 }||| 	16 *max_element(blocked + j, blocked + i) < (n + k - 2) / (k - 1)) {
21	40	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power(long long a, long long b, long long md) {||| 4 return (!b ? 1||| 5 : (b & 1 ? a * power(a * a % md, b / 2, md) % md||| 6 : power(a * a % md, b / 2, md) % md));||| 7 }||| 8 const int xn = 4e5 + 10;||| 9 const int xm = -20 + 10;||| 10 const int sq = 320;||| 11 const int inf = 1e9 + 10;||| 12 const long long INF = 1e18 + 10;||| 13 const long double eps = 1e-15;||| 14 const int mod = 998244353;||| 15 const int base = 257;||| 16 int n, dp[xn], ps[xn], ans;||| 17 pair<pair<int, int>, int> a[xn];||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 ;||| 23 cin >> n;||| 24 for (int i = 1; i <= n; ++i) {||| 25 int fl;||| 26 cin >> a[i].first.first >> a[i].first.second >> a[i].second;||| 27 dp[i] = a[i].first.first - a[i].first.second;||| 28 int lb = 0, rb = i;||| 29 while (1 < rb - lb) {||| 30 int mid = lb + rb >> 1;||| 31 if (a[mid].first.first < a[i].first.second)||| 32 lb = mid;||| 33 else||| 34 rb = mid;||| 35 }||| 36 dp[i] = (dp[i] + ps[i - 1]) % mod;||| 37 dp[i] = (dp[i] - ps[lb] + mod) % mod;||| 38 ps[i] = (ps[i - 1] + dp[i]) % mod;||| 39 }||| 40 ans = a[n].first.first + 1;||| 41 for (int i = 1; i <= n; ++i)||| 42 if (a[i].second) ans = (ans + dp[i]) % mod;||| 43 cout << ans % mod << '\n';||| 44 return 0;||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power(long long a, long long b, long long md) {||| 4 return (!b ? 1||| 5 : (b & 1 ? a * power(a * a % md, b / 2, md) % md||| 6 : power(a * a % md, b / 2, md) % md));||| 7 }||| 8 const int xn = 4e5 + 10;||| 9 const int xm = -20 + 10;||| 10 const int sq = 320;||| 11 const int inf = 1e9 + 10;||| 12 const long long INF = 1e18 + 10;||| 13 const long double eps = 1e-15;||| 14 const int mod = 998244353;||| 15 const int base = 257;||| 16 int n, dp[xn], ps[xn], ans;||| 17 pair<pair<int, int>, int> a[xn];||| 18 int main() {||| 19 ios::sync_with_stdio(0);||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 ;||| 23 cin >> n;||| 24 for (int i = 1; i <= n; ++i) {||| 25 int fl;||| 26 cin >> a[i].first.first >> a[i].first.second >> a[i].second;||| 27 dp[i] = a[i].first.first - a[i].first.second;||| 28 int lb = 0, rb = i;||| 29 while (1 < rb - lb) {||| 30 int mid = lb + rb >> 1;||| 31 if (a[mid].first.first < a[i].first.second)||| 32 lb = mid;||| 33 else||| 34 rb = mid;||| 35 }||| 36 dp[i] = (dp[i] + ps[i - 1]) % mod;||| 37 dp[i] = (dp[i] - ps[lb] + mod) % mod;||| 38 ps[i] = (ps[i - 1] + dp[i]) % mod;||| 39 }||| 40 ans = a[n].first.first + 1;||| 41 for (int i = 1; i <= n; ++i)||| 42 if (a[i].second) ans = (ans + dp[i]) % mod;||| 43 cout << ans << '\n';||| 44 return 0;||| 45 }||| 	43 cout << ans % mod << '\n';
21	39	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long> x, y, s, dp;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 x.push_back(0);||| 8 y.push_back(0);||| 9 s.push_back(0);||| 10 dp.push_back(0);||| 11 for (int i = 1; i < n + 1; i++) {||| 12 x.push_back(0);||| 13 y.push_back(0);||| 14 s.push_back(0);||| 15 dp.push_back(0);||| 16 cin >> x[i] >> y[i] >> s[i];||| 17 }||| 18 for (int i = 1; i < n + 1; i++) {||| 19 int tmp = lower_bound(x.begin(), x.end(), y[i]) - x.begin();||| 20 dp[i] = dp[i - 1] + dp[i - 1] - dp[tmp - 1] + (x[i] - y[i]);||| 21 dp[i] = (dp[i] + (long long)(998244353)) % (long long)(998244353);||| 22 }||| 23 long long ans = x[n] + 1;||| 24 ans %= (long long)(998244353);||| 25 for (int i = 1; i < n + 1; i++) {||| 26 if (s[i]) {||| 27 ans += dp[i] - dp[i - 1];||| 28 ans = (ans + (long long)(998244353)) % (long long)(998244353);||| 29 }||| 30 }||| 31 cout << ans << endl;||| 32 }||| 33 signed main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 ;||| 37 int t;||| 38 t = 1;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> x, y, s, dp;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 x.push_back(0);||| 8 y.push_back(0);||| 9 s.push_back(0);||| 10 dp.push_back(0);||| 11 for (int i = 1; i < n + 1; i++) {||| 12 x.push_back(0);||| 13 y.push_back(0);||| 14 s.push_back(0);||| 15 dp.push_back(0);||| 16 cin >> x[i] >> y[i] >> s[i];||| 17 }||| 18 for (int i = 1; i < n + 1; i++) {||| 19 int tmp = lower_bound(x.begin(), x.end(), y[i]) - x.begin();||| 20 dp[i] = dp[i - 1] + dp[i - 1] - dp[tmp - 1] + (x[i] - y[i]);||| 21 dp[i] = (dp[i] + (long long)(998244353)) % (long long)(998244353);||| 22 }||| 23 long long ans = x[n] + 1;||| 24 ans %= (long long)(998244353);||| 25 for (int i = 1; i < n + 1; i++) {||| 26 if (s[i]) {||| 27 ans += dp[i] - dp[i - 1];||| 28 ans = (ans + (long long)(998244353)) % (long long)(998244353);||| 29 }||| 30 }||| 31 cout << ans << endl;||| 32 }||| 33 signed main() {||| 34 ios::sync_with_stdio(0);||| 35 cin.tie(0);||| 36 ;||| 37 int t;||| 38 t = 1;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 }||| 	3 vector<long long> x, y, s, dp;
22	156	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 int n, k;||| 8 cin >> n >> k;||| 9 vector<vector<int>> indices(k);||| 10 for (int i = 0; i < k; i++) {||| 11 int q;||| 12 cin >> q;||| 13 while (q--) {||| 14 int x;||| 15 cin >> x;||| 16 indices[i].push_back(x - 1);||| 17 }||| 18 sort(indices[i].begin(), indices[i].end());||| 19 }||| 20 if (n == 1) {||| 21 cout << ""ACCEPTED\n"";||| 22 return 0;||| 23 }||| 24 vector<int> have(k);||| 25 vector<ll> already(k);||| 26 vector<int> first(n, -1);||| 27 vector<vector<ll>> mask_zero(k);||| 28 vector<vector<ll>> mask_one(k);||| 29 for (int i = 0; i < k; i++) {||| 30 for (auto index : indices[i]) {||| 31 if (first[index] == -1) {||| 32 first[index] = i;||| 33 have[i] += 1;||| 34 } else {||| 35 already[i] |= (1LL << index);||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i < k; i++) {||| 40 mask_zero[i].resize(indices[i].size() + 1);||| 41 mask_one[i].resize(indices[i].size() + 1);||| 42 for (int zero = 0; zero <= (int)indices[i].size(); zero++) {||| 43 mask_zero[i][zero] = (1LL << n) - 1;||| 44 mask_one[i][zero] = 0;||| 45 for (int j = 0; j < (int)indices[i].size(); j++) {||| 46 if (j + 1 <= zero) {||| 47 mask_zero[i][zero] &= ~(1LL << indices[i][j]);||| 48 } else {||| 49 mask_one[i][zero] |= (1LL << indices[i][j]);||| 50 }||| 51 }||| 52 }||| 53 }||| 54 auto bad = [&]() -> void {||| 55 cout << ""REJECTED\n"";||| 56 exit(0);||| 57 };||| 58 for (int i = 0; i < n; i++) {||| 59 if (first[i] == -1) {||| 60 bad();||| 61 }||| 62 }||| 63 set<ll> good;||| 64 for (int zero = 0; zero <= n; zero++) {||| 65 ll x = (1LL << n) - 1;||| 66 ll y = (1LL << (n - zero)) - 1;||| 67 good.insert(x - y);||| 68 }||| 69 ll value = 1;||| 70 function<void(int)> dfs = [&](int depth) -> void {||| 71 if (depth == k) {||| 72 if (!good.count(value)) {||| 73 bad();||| 74 }||| 75 return;||| 76 }||| 77 int base_one = __builtin_popcountll(value & already[depth]);||| 78 int base_zero = (int)indices[depth].size() - have[depth] - base_one;||| 79 for (int zero = 0; zero <= have[depth]; zero++) {||| 80 int real_zero = base_zero + zero;||| 81 ll tmp = value;||| 82 value &= mask_zero[depth][real_zero];||| 83 value |= mask_one[depth][real_zero];||| 84 dfs(depth + 1);||| 85 value = tmp;||| 86 }||| 87 };||| 88 dfs(0);||| 89 assert(value == 1);||| 90 cout << ""ACCEPTED\n"";||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 int n, k;||| 8 cin >> n >> k;||| 9 vector<vector<int>> indices(k);||| 10 for (int i = 0; i < k; i++) {||| 11 int q;||| 12 cin >> q;||| 13 while (q--) {||| 14 int x;||| 15 cin >> x;||| 16 indices[i].push_back(x - 1);||| 17 }||| 18 sort(indices[i].begin(), indices[i].end());||| 19 }||| 20 if (n == 1) {||| 21 cout << ""ACCEPTED\n"";||| 22 return 0;||| 23 }||| 24 vector<int> have(k);||| 25 vector<ll> already(k);||| 26 vector<int> first(n, -1);||| 27 vector<vector<ll>> mask_zero(k);||| 28 vector<vector<ll>> mask_one(k);||| 29 for (int i = 0; i < k; i++) {||| 30 for (auto index : indices[i]) {||| 31 if (first[index] == -1) {||| 32 first[index] = i;||| 33 have[i] += 1;||| 34 } else {||| 35 already[i] |= (1LL << index);||| 36 }||| 37 }||| 38 }||| 39 for (int i = 0; i < k; i++) {||| 40 mask_zero[i].resize(indices[i].size() + 1);||| 41 mask_one[i].resize(indices[i].size() + 1);||| 42 for (int zero = 0; zero <= (int)indices[i].size(); zero++) {||| 43 mask_zero[i][zero] = (1LL << n) - 1;||| 44 mask_one[i][zero] = 0;||| 45 for (int j = 0; j < (int)indices[i].size(); j++) {||| 46 if (j + 1 <= zero) {||| 47 mask_zero[i][zero] &= ~(1LL << indices[i][j]);||| 48 } else {||| 49 mask_one[i][zero] |= (1LL << indices[i][j]);||| 50 }||| 51 }||| 52 }||| 53 }||| 54 auto bad = [&]() -> void {||| 55 cout << ""REJECTED\n"";||| 56 exit(0);||| 57 };||| 58 for (int i = 0; i < n; i++) {||| 59 if (first[i] == -1) {||| 60 bad();||| 61 }||| 62 }||| 63 set<ll> good;||| 64 for (int zero = 0; zero <= n; zero++) {||| 65 ll x = (1LL << n) - 1;||| 66 ll y = (1LL << (n - zero)) - 1;||| 67 good.insert(x - y);||| 68 }||| 69 ll value = 1;||| 70 function<void(int)> dfs = [&](int depth) -> void {||| 71 if (depth == k) {||| 72 if (!good.count(value)) {||| 73 bad();||| 74 }||| 75 return;||| 76 }||| 77 int base_one = __builtin_popcountll(value & already[depth]);||| 78 int base_zero = (int)indices[depth].size() - have[depth] - base_one;||| 79 for (int zero = 0; zero <= have[depth]; zero++) {||| 80 int real_zero = base_zero + zero;||| 81 ll tmp = value;||| 82 value &= mask_zero[depth][real_zero];||| 83 value |= mask_one[depth][zero];||| 84 dfs(depth + 1);||| 85 value = tmp;||| 86 }||| 87 };||| 88 dfs(0);||| 89 assert(value == 1);||| 90 cout << ""ACCEPTED\n"";||| 91 return 0;||| 92 }||| "	83 value |= mask_one[depth][real_zero];
22	186	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 50;||| 4 const int inf = 1 << 30;||| 5 long long read() {||| 6 long long a = 0;||| 7 char b = 1, c;||| 8 do||| 9 if ((c = getchar()) == 45) b = -1;||| 10 while (c < 48 || c > 57);||| 11 do a = (a << 3) + (a << 1) + (c & 15);||| 12 while ((c = getchar()) > 47 && c < 58);||| 13 return a * b;||| 14 }||| 15 void write(long long x, char c) {||| 16 if (x < 0) putchar(45), x = -x;||| 17 char a[20], s = 0;||| 18 do a[++s] = x % 10 | 48;||| 19 while (x /= 10);||| 20 do putchar(a[s]);||| 21 while (--s);||| 22 putchar(c);||| 23 }||| 24 int a[N], s[N];||| 25 long long g[N][N];||| 26 set<long long> q;||| 27 bool dfs(long long res, int i) {||| 28 if (!i) return q.count(res);||| 29 int t = __builtin_popcountll(res & g[i][s[i]]);||| 30 res &= ~g[i][s[i]];||| 31 for (int j = t + a[i]; j >= t; --j) {||| 32 if (!dfs(res | g[i][j], i - 1)) {||| 33 return 0;||| 34 }||| 35 }||| 36 return 1;||| 37 }||| 38 bool solve() {||| 39 int n = read(), m = read();||| 40 if (n == 1) return 1;||| 41 long long res = (1LL << n) - 1;||| 42 for (int i = m; i >= 1; --i) {||| 43 s[i] = read();||| 44 for (int j = 1; j <= s[i]; ++j) {||| 45 g[i][j] = 1LL << read() - 1;||| 46 if (res & g[i][j]) {||| 47 ++a[i];||| 48 res ^= g[i][j];||| 49 }||| 50 g[i][j] |= g[i][j - 1];||| 51 }||| 52 }||| 53 if (res) return 0;||| 54 for (int i = 0; i <= n; ++i) {||| 55 q.insert(res);||| 56 res |= 1LL << i;||| 57 }||| 58 return dfs(0, m);||| 59 }||| 60 int main() { puts(solve() ? ""ACCEPTED"" : ""REJECTED""); }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 50;||| 4 const int inf = 1 << 30;||| 5 long long read() {||| 6 long long a = 0;||| 7 char b = 1, c;||| 8 do||| 9 if ((c = getchar()) == 45) b = -1;||| 10 while (c < 48 || c > 57);||| 11 do a = (a << 3) + (a << 1) + (c & 15);||| 12 while ((c = getchar()) > 47 && c < 58);||| 13 return a * b;||| 14 }||| 15 void write(long long x, char c) {||| 16 if (x < 0) putchar(45), x = -x;||| 17 char a[20], s = 0;||| 18 do a[++s] = x % 10 | 48;||| 19 while (x /= 10);||| 20 do putchar(a[s]);||| 21 while (--s);||| 22 putchar(c);||| 23 }||| 24 int a[N], s[N];||| 25 long long g[N][N];||| 26 set<long long> q;||| 27 bool dfs(long long res, int i) {||| 28 if (!i) return q.count(res);||| 29 int t = __builtin_popcountll(res & g[i][s[i]]);||| 30 res &= ~g[i][s[i]];||| 31 for (int j = t + a[i]; j >= t; --j) {||| 32 if (!dfs(res | g[i][j], i - 1)) {||| 33 return 0;||| 34 }||| 35 }||| 36 return 1;||| 37 }||| 38 bool solve() {||| 39 int n = read(), m = read();||| 40 if (n == 1) return 1;||| 41 long long res = (1LL << n) - 1;||| 42 for (int i = m; i >= 1; --i) {||| 43 s[i] = read();||| 44 for (int j = 1; j <= s[i]; ++j) {||| 45 g[i][j] = 1LL << read();||| 46 if (res & g[i][j]) {||| 47 ++a[i];||| 48 res ^= g[i][j];||| 49 }||| 50 g[i][j] |= g[i][j - 1];||| 51 }||| 52 }||| 53 if (res) return 0;||| 54 for (int i = 0; i <= n; ++i) {||| 55 q.insert(res);||| 56 res |= 1LL << i;||| 57 }||| 58 return dfs(0, m);||| 59 }||| 60 int main() { puts(solve() ? ""ACCEPTED"" : ""REJECTED""); }||| "	45 g[i][j] = 1LL << read() - 1;
22	216	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 char ch = getchar();||| 5 long long nega = 1;||| 6 while (!isdigit(ch)) {||| 7 if (ch == '-') nega = -1;||| 8 ch = getchar();||| 9 }||| 10 long long ans = 0;||| 11 while (isdigit(ch)) {||| 12 ans = ans * 10 + ch - 48;||| 13 ch = getchar();||| 14 }||| 15 if (nega == -1) return -ans;||| 16 return ans;||| 17 }||| 18 void print(vector<long long> x) {||| 19 for (long long i = 0; i < (long long)x.size(); i++)||| 20 printf(""%lld%c"", x[i], "" \n""[i == (long long)x.size() - 1]);||| 21 }||| 22 long long f[45][45], st[45], siz[45], q[45], n, k, ful;||| 23 long long popcnt(long long x) { return __builtin_popcountll(x); }||| 24 long long lowbit(long long x) { return x & (-x); }||| 25 void dfs(long long dep, long long cur) {||| 26 if (dep == k + 1) {||| 27 if (cur != ful && lowbit(cur ^ ful) != cur + 1) {||| 28 cout << ""REJECTED\n"";||| 29 exit(0);||| 30 }||| 31 return;||| 32 }||| 33 long long go = popcnt(cur & f[dep][q[dep]]);||| 34 cur &= (~f[dep][q[dep]]);||| 35 for (long long j = go; j <= go + popcnt(siz[dep]); j++) {||| 36 dfs(dep + 1, cur | f[dep][j]);||| 37 }||| 38 }||| 39 signed main() {||| 40 cin >> n >> k;||| 41 ful = (1LL << n) - 1;||| 42 if (n == 1) {||| 43 cout << ""ACCEPTED\n"";||| 44 return 0;||| 45 }||| 46 for (long long i = 1; i <= k; i++) {||| 47 q[i] = read();||| 48 long long tmp = 0;||| 49 for (long long j = 1; j <= q[i]; j++)||| 50 f[i][j] = f[i][j - 1] | (1LL << (read() - 1));||| 51 tmp = f[i][q[i]];||| 52 siz[i] = (st[i - 1] ^ ful) & tmp;||| 53 st[i] = st[i - 1] | tmp;||| 54 }||| 55 dfs(1, 0);||| 56 if (popcnt(st[k]) != n) {||| 57 cout << ""REJECTED\n"";||| 58 return 0;||| 59 }||| 60 cout << ""ACCEPTED\n"";||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline long long read() {||| 4 char ch = getchar();||| 5 long long nega = 1;||| 6 while (!isdigit(ch)) {||| 7 if (ch == '-') nega = -1;||| 8 ch = getchar();||| 9 }||| 10 long long ans = 0;||| 11 while (isdigit(ch)) {||| 12 ans = ans * 10 + ch - 48;||| 13 ch = getchar();||| 14 }||| 15 if (nega == -1) return -ans;||| 16 return ans;||| 17 }||| 18 void print(vector<long long> x) {||| 19 for (long long i = 0; i < (long long)x.size(); i++)||| 20 printf(""%lld%c"", x[i], "" \n""[i == (long long)x.size() - 1]);||| 21 }||| 22 long long f[45][45], st[45], siz[45], q[45], n, k, ful;||| 23 long long popcnt(long long x) { return __builtin_popcountll(x); }||| 24 long long lowbit(long long x) { return x & (-x); }||| 25 void dfs(long long dep, long long cur) {||| 26 if (dep == k + 1) {||| 27 if (cur != ful && lowbit(cur ^ ful) != cur + 1) {||| 28 cout << ""REJECTED\n"";||| 29 exit(0);||| 30 }||| 31 return;||| 32 }||| 33 long long go = popcnt(f[dep][q[dep]]);||| 34 cur &= (~f[dep][q[dep]]);||| 35 for (long long j = go; j <= go + popcnt(siz[dep]); j++) {||| 36 dfs(dep + 1, cur | f[dep][j]);||| 37 }||| 38 }||| 39 signed main() {||| 40 cin >> n >> k;||| 41 ful = (1LL << n) - 1;||| 42 if (n == 1) {||| 43 cout << ""ACCEPTED\n"";||| 44 return 0;||| 45 }||| 46 for (long long i = 1; i <= k; i++) {||| 47 q[i] = read();||| 48 long long tmp = 0;||| 49 for (long long j = 1; j <= q[i]; j++)||| 50 f[i][j] = f[i][j - 1] | (1LL << (read() - 1));||| 51 tmp = f[i][q[i]];||| 52 siz[i] = (st[i - 1] ^ ful) & tmp;||| 53 st[i] = st[i - 1] | tmp;||| 54 }||| 55 dfs(1, 0);||| 56 if (popcnt(st[k]) != n) {||| 57 cout << ""REJECTED\n"";||| 58 return 0;||| 59 }||| 60 cout << ""ACCEPTED\n"";||| 61 return 0;||| 62 }||| "	33 long long go = popcnt(cur & f[dep][q[dep]]);
22	205	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k;||| 4 int len[45];||| 5 bool fl;||| 6 int q[15][45];||| 7 int a[45];||| 8 void yes() { cout << ""ACCEPTED"" << endl; }||| 9 void no() { cout << ""REJECTED"" << endl; }||| 10 void recur(int pos) {||| 11 if (pos == k + 1) {||| 12 for (int i = 1; i <= n; i++) {||| 13 if (a[i] == -1) {||| 14 fl = 0;||| 15 return;||| 16 }||| 17 }||| 18 for (int i = 1; i <= n; i++) {||| 19 if (i > 1 && a[i] < a[i - 1]) {||| 20 fl = 0;||| 21 return;||| 22 }||| 23 }||| 24 } else {||| 25 int tmp[45];||| 26 for (int i = 1; i <= n; i++) {||| 27 tmp[i] = a[i];||| 28 }||| 29 int sum = 0;||| 30 int sum2 = 0;||| 31 int nw = 0;||| 32 for (int i = 1; i <= len[pos]; i++) {||| 33 int cur = q[pos][i];||| 34 if (a[cur] == -1) {||| 35 ++nw;||| 36 } else if (a[cur] == 0) {||| 37 ++sum;||| 38 } else {||| 39 ++sum2;||| 40 }||| 41 }||| 42 for (int w = 0; w <= nw; w++) {||| 43 for (int i = 1; i <= len[pos]; i++) {||| 44 int cur = q[pos][i];||| 45 if (i <= sum + w) {||| 46 a[cur] = 0;||| 47 } else {||| 48 a[cur] = 1;||| 49 }||| 50 }||| 51 recur(pos + 1);||| 52 if (!fl) return;||| 53 for (int i = 1; i <= n; i++) {||| 54 a[i] = tmp[i];||| 55 }||| 56 }||| 57 }||| 58 }||| 59 void solve() {||| 60 fl = 1;||| 61 cin >> n >> k;||| 62 if (k == 0) {||| 63 if (n == 1) {||| 64 yes();||| 65 } else {||| 66 no();||| 67 }||| 68 return;||| 69 }||| 70 for (int i = 1; i <= k; i++) {||| 71 cin >> len[i];||| 72 for (int j = 1; j <= len[i]; j++) {||| 73 cin >> q[i][j];||| 74 }||| 75 }||| 76 memset(a, -1, sizeof(a));||| 77 recur(1);||| 78 if (fl)||| 79 yes();||| 80 else||| 81 no();||| 82 }||| 83 int main() {||| 84 solve();||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, k;||| 4 int len[45];||| 5 bool fl;||| 6 int q[15][45];||| 7 int a[45];||| 8 void yes() { cout << ""ACCEPTED"" << endl; }||| 9 void no() { cout << ""REJECTED"" << endl; }||| 10 void recur(int pos) {||| 11 if (pos == k + 1) {||| 12 for (int i = 1; i <= n; i++) {||| 13 if (a[i] == -1) {||| 14 fl = 0;||| 15 return;||| 16 }||| 17 }||| 18 for (int i = 1; i <= n; i++) {||| 19 if (i > 1 && a[i] < a[i - 1]) {||| 20 fl = 0;||| 21 return;||| 22 }||| 23 }||| 24 } else {||| 25 int tmp[45];||| 26 for (int i = 1; i <= n; i++) {||| 27 tmp[i] = a[i];||| 28 }||| 29 int sum = 0;||| 30 int sum2 = 0;||| 31 int nw = 0;||| 32 for (int i = 1; i <= len[pos]; i++) {||| 33 int cur = q[pos][i];||| 34 if (a[cur] == -1) {||| 35 ++nw;||| 36 } else if (a[cur] == 0) {||| 37 ++sum;||| 38 } else {||| 39 ++sum2;||| 40 }||| 41 }||| 42 for (int w = 0; w <= nw; w++) {||| 43 for (int i = 1; i <= len[pos]; i++) {||| 44 int cur = q[pos][i];||| 45 if (i <= sum + w) {||| 46 a[cur] = 0;||| 47 } else {||| 48 a[cur] = 1;||| 49 }||| 50 }||| 51 recur(pos + 1);||| 52 if (!fl) return;||| 53 for (int i = 1; i <= n; i++) {||| 54 a[i] = tmp[i];||| 55 }||| 56 }||| 57 }||| 58 }||| 59 void solve() {||| 60 fl = 1;||| 61 cin >> n >> k;||| 62 if (k == 0) {||| 63 if (n == 1) {||| 64 yes();||| 65 } else {||| 66 no();||| 67 }||| 68 }||| 69 for (int i = 1; i <= k; i++) {||| 70 cin >> len[i];||| 71 for (int j = 1; j <= len[i]; j++) {||| 72 cin >> q[i][j];||| 73 }||| 74 }||| 75 memset(a, -1, sizeof(a));||| 76 recur(1);||| 77 if (fl)||| 78 yes();||| 79 else||| 80 no();||| 81 }||| 82 int main() {||| 83 solve();||| 84 return 0;||| 85 }||| "	68 return;
24	285	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1000000007;||| 4 const long long maxN = 1e5 + 5;||| 5 void debug(vector<long long> vec) {||| 6 long long n = vec.size();||| 7 for (long long i = 0; i < n; i++) cout << vec[i] << "" "";||| 8 cout << endl;||| 9 return;||| 10 }||| 11 long long gcd(long long a, long long b) {||| 12 if (b > a) {||| 13 return gcd(b, a);||| 14 }||| 15 if (b == 0) {||| 16 return a;||| 17 }||| 18 return gcd(b, a % b);||| 19 }||| 20 long long power(long long x, long long y, long long p) {||| 21 long long res = 1;||| 22 x = x % p;||| 23 if (x == 0) return 0;||| 24 while (y > 0) {||| 25 if (y & 1) res = (res * x) % p;||| 26 y = y >> 1;||| 27 x = (x * x) % p;||| 28 }||| 29 return res;||| 30 }||| 31 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 32 void solve() {||| 33 long long n;||| 34 cin >> n;||| 35 long long ans = n / 10;||| 36 if (n % 10 == 9) {||| 37 cout << ans + 1 << endl;||| 38 } else {||| 39 cout << ans << endl;||| 40 }||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 44 long long t = 1;||| 45 cin >> t;||| 46 while (t--) {||| 47 solve();||| 48 }||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = 1000000007;||| 4 const long long maxN = 1e5 + 5;||| 5 void debug(vector<long long> vec) {||| 6 long long n = vec.size();||| 7 for (long long i = 0; i < n; i++) cout << vec[i] << "" "";||| 8 cout << endl;||| 9 return;||| 10 }||| 11 long long gcd(long long a, long long b) {||| 12 if (b > a) {||| 13 return gcd(b, a);||| 14 }||| 15 if (b == 0) {||| 16 return a;||| 17 }||| 18 return gcd(b, a % b);||| 19 }||| 20 long long power(long long x, long long y, long long p) {||| 21 long long res = 1;||| 22 x = x % p;||| 23 if (x == 0) return 0;||| 24 while (y > 0) {||| 25 if (y & 1) res = (res * x) % p;||| 26 y = y >> 1;||| 27 x = (x * x) % p;||| 28 }||| 29 return res;||| 30 }||| 31 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 32 void solve() {||| 33 long long n;||| 34 cin >> n;||| 35 long long ans = n / 10;||| 36 if (n % 9 == 0) {||| 37 cout << ans + 1 << endl;||| 38 } else {||| 39 cout << ans << endl;||| 40 }||| 41 }||| 42 int32_t main() {||| 43 ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 44 long long t = 1;||| 45 cin >> t;||| 46 while (t--) {||| 47 solve();||| 48 }||| 49 }||| "	36 if (n % 10 == 9) {
25	191	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool equ(string s, string t, int n, int m, int l) {||| 4 if (m == t.length()) return 1;||| 5 if (l == 1 && n == 0) {||| 6 if (m == t.length() - 1) {||| 7 if (s[n] == t[m]) return 1;||| 8 }||| 9 return 0;||| 10 }||| 11 int a, b;||| 12 a = b = 0;||| 13 if (s[n] != t[m]) return 0;||| 14 if (n > 0) a = equ(s, t, n - 1, m + 1, 1);||| 15 if (n < s.length() - 1 && l != 1) {||| 16 b = equ(s, t, n + 1, m + 1, l);||| 17 }||| 18 return a || b;||| 19 }||| 20 void solve() {||| 21 string s, t;||| 22 cin >> s >> t;||| 23 if (s.length() == 1) {||| 24 if (s == t) {||| 25 cout << ""YES"";||| 26 return;||| 27 }||| 28 cout << ""NO"";||| 29 return;||| 30 }||| 31 int ans = 0;||| 32 int j = 0;||| 33 for (auto i : s) {||| 34 if (i == t[0]) {||| 35 ans = equ(s, t, j, 0, 0);||| 36 if (ans == 1) {||| 37 cout << ""YES"";||| 38 return;||| 39 }||| 40 }||| 41 j++;||| 42 }||| 43 cout << ""NO"";||| 44 }||| 45 int32_t main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(NULL);||| 48 cout.tie(NULL);||| 49 int t;||| 50 cin >> t;||| 51 while (t--) {||| 52 solve();||| 53 cout << ""\n"";||| 54 }||| 55 cerr << ""time taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs""||| 56 << ""\n"";||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool equ(string s, string t, int n, int m, int l) {||| 4 if (m == t.length()) return 1;||| 5 if (l == 1 && n == 0) {||| 6 if (m == t.length() - 1) {||| 7 if (s[n] == t[m]) return 1;||| 8 }||| 9 return 0;||| 10 }||| 11 int a, b;||| 12 a = b = 0;||| 13 if (s[n] != t[m]) return 0;||| 14 if (n > 0) a = equ(s, t, n - 1, m + 1, 1);||| 15 if (n < s.length() - 1 && l != 1) {||| 16 b = equ(s, t, n + 1, m + 1, l);||| 17 }||| 18 return a || b;||| 19 }||| 20 void solve() {||| 21 string s, t;||| 22 cin >> s >> t;||| 23 if (t.length() == 1) {||| 24 if (s == t) {||| 25 cout << ""YES"";||| 26 return;||| 27 }||| 28 cout << ""NO"";||| 29 return;||| 30 }||| 31 int ans = 0;||| 32 int j = 0;||| 33 for (auto i : s) {||| 34 if (i == t[0]) {||| 35 ans = equ(s, t, j, 0, 0);||| 36 if (ans == 1) {||| 37 cout << ""YES"";||| 38 return;||| 39 }||| 40 }||| 41 j++;||| 42 }||| 43 cout << ""NO"";||| 44 }||| 45 int32_t main() {||| 46 ios_base::sync_with_stdio(false);||| 47 cin.tie(NULL);||| 48 cout.tie(NULL);||| 49 int t;||| 50 cin >> t;||| 51 while (t--) {||| 52 solve();||| 53 cout << ""\n"";||| 54 }||| 55 cerr << ""time taken : "" << (float)clock() / CLOCKS_PER_SEC << "" secs""||| 56 << ""\n"";||| 57 return 0;||| 58 }||| "	23 if (s.length() == 1) {
25	47	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int MOD = 998244353;||| 4 int f[300001];||| 5 int pow(int n, int i) {||| 6 int a = n, ans = 1;||| 7 while (i > 0) {||| 8 if (i & 1) {||| 9 ans = (ans * 1LL * a) % MOD;||| 10 }||| 11 a = (a * 1LL * a) % MOD;||| 12 i = i >> 1;||| 13 }||| 14 return ans;||| 15 }||| 16 void dfs_visit(map<string, vector<string>> adj, map<string, int>& col,||| 17 string s) {||| 18 col[s] = 1;||| 19 for (auto u : adj[s]) {||| 20 if (col[u] == 0) {||| 21 dfs_visit(adj, col, u);||| 22 }||| 23 }||| 24 }||| 25 int dfs_helper(map<string, vector<string>> adj, map<string, int>& col) {||| 26 int conn = 0;||| 27 for (auto u : adj) {||| 28 if (col[u.first] == 0) {||| 29 conn++;||| 30 dfs_visit(adj, col, u.first);||| 31 }||| 32 }||| 33 return conn;||| 34 }||| 35 int inv(int n) { return pow(n, MOD - 2); }||| 36 int nCr(int n, int r) {||| 37 if (r > n)||| 38 return 0;||| 39 else {||| 40 int res = f[n];||| 41 res = (res * 1LL * inv(f[r])) % MOD;||| 42 res = (res * 1LL * inv(f[n - r])) % MOD;||| 43 return res;||| 44 }||| 45 }||| 46 bool exists(string s, string b) {||| 47 int n = s.length(), t = b.length();||| 48 if (t > n) return false;||| 49 for (int i = 0; i < (int)(n - t + 1); ++i) {||| 50 if (s.substr(i, t) == b) return true;||| 51 }||| 52 return false;||| 53 }||| 54 int main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 cout.tie(NULL);||| 58 int q;||| 59 string s, t, a, b = """";||| 60 cin >> q;||| 61 while (q--) {||| 62 cin >> s >> t;||| 63 int n = t.length();||| 64 int f = 0;||| 65 for (int i = 0; i < (int)(n); ++i) {||| 66 a = t.substr(i + 1, min(i, n - 1 - i));||| 67 reverse((a).begin(), (a).end());||| 68 if (t.substr(i - min(i, n - 1 - i), a.length()) == a) {||| 69 b = i < n - 1 - i ? t.substr(2 * i + 1) : """";||| 70 reverse((b).begin(), (b).end());||| 71 b += t.substr(0, i + 1);||| 72 if (exists(s, b)) {||| 73 cout << ""YES""||| 74 << ""\n"";||| 75 f = 1;||| 76 break;||| 77 }||| 78 }||| 79 }||| 80 if (f == 0)||| 81 cout << ""NO""||| 82 << ""\n"";||| 83 }||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int MOD = 998244353;||| 4 int f[300001];||| 5 int pow(int n, int i) {||| 6 int a = n, ans = 1;||| 7 while (i > 0) {||| 8 if (i & 1) {||| 9 ans = (ans * 1LL * a) % MOD;||| 10 }||| 11 a = (a * 1LL * a) % MOD;||| 12 i = i >> 1;||| 13 }||| 14 return ans;||| 15 }||| 16 void dfs_visit(map<string, vector<string>> adj, map<string, int>& col,||| 17 string s) {||| 18 col[s] = 1;||| 19 for (auto u : adj[s]) {||| 20 if (col[u] == 0) {||| 21 dfs_visit(adj, col, u);||| 22 }||| 23 }||| 24 }||| 25 int dfs_helper(map<string, vector<string>> adj, map<string, int>& col) {||| 26 int conn = 0;||| 27 for (auto u : adj) {||| 28 if (col[u.first] == 0) {||| 29 conn++;||| 30 dfs_visit(adj, col, u.first);||| 31 }||| 32 }||| 33 return conn;||| 34 }||| 35 int inv(int n) { return pow(n, MOD - 2); }||| 36 int nCr(int n, int r) {||| 37 if (r > n)||| 38 return 0;||| 39 else {||| 40 int res = f[n];||| 41 res = (res * 1LL * inv(f[r])) % MOD;||| 42 res = (res * 1LL * inv(f[n - r])) % MOD;||| 43 return res;||| 44 }||| 45 }||| 46 bool exists(string s, string b) {||| 47 int n = s.length(), t = b.length();||| 48 if (t > n) return false;||| 49 for (int i = 0; i < (int)(n - t + 1); ++i) {||| 50 if (s.substr(i, t) == b) return true;||| 51 }||| 52 return false;||| 53 }||| 54 int main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 cout.tie(NULL);||| 58 int q;||| 59 string s, t, a, b = """";||| 60 cin >> q;||| 61 while (q--) {||| 62 cin >> s >> t;||| 63 int n = t.length();||| 64 int f = 0;||| 65 for (int i = 0; i < (int)(n); ++i) {||| 66 a = t.substr(i + 1, min(i, n - 1 - i));||| 67 reverse((a).begin(), (a).end());||| 68 if (t.substr(i - min(i, n - 1 - i), a.length()) == a) {||| 69 b = i < n - 1 - i ? t.substr(2 * i + 1) : """";||| 70 reverse((b).begin(), (b).end());||| 71 b += t.substr(0, i + 1);||| 72 if (exists(s, b)) {||| 73 cout << ""YES""||| 74 << ""\n"";||| 75 f = 1;||| 76 }||| 77 }||| 78 }||| 79 if (f == 0)||| 80 cout << ""NO""||| 81 << ""\n"";||| 82 }||| 83 }||| "	76 break;
25	2	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 bool Is_tp(string t, int k);||| 5 string Trans_t(string t, int tp);||| 6 string rv(string s);||| 7 int main() {||| 8 ll t;||| 9 cin >> t;||| 10 for (ll i = 0; i < t; i++) {||| 11 string s, t;||| 12 cin >> s >> t;||| 13 bool find = 0;||| 14 for (int j = 0; j < t.size(); j++) {||| 15 if (Is_tp(t, j)) {||| 16 int f = s.find(Trans_t(t, j));||| 17 if (f != -1) {||| 18 cout << ""YES"" << endl;||| 19 find = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 if (!find) {||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| 28 return 0;||| 29 }||| 30 bool Is_tp(string t, int k) {||| 31 if (k == 0 || k == t.size() - 1) {||| 32 return 1;||| 33 }||| 34 if (k < t.size() / 2) {||| 35 if (t.substr(0, k) == rv(t.substr(k + 1, k))) {||| 36 return 1;||| 37 } else {||| 38 return 0;||| 39 }||| 40 } else {||| 41 if (t.substr(k + 1, t.size() - k - 1) ==||| 42 rv(t.substr(2 * k + 1 - t.size(), t.size() - k - 1))) {||| 43 return 1;||| 44 } else {||| 45 return 0;||| 46 }||| 47 }||| 48 return 0;||| 49 }||| 50 string Trans_t(string t, int tp) {||| 51 string ans;||| 52 if (tp < t.size() / 2) {||| 53 ans = rv(t.substr(tp, t.size() - tp));||| 54 } else {||| 55 ans = t.substr(0, tp + 1);||| 56 }||| 57 return ans;||| 58 }||| 59 string rv(string s) {||| 60 string t = s;||| 61 for (int i = 0; i < s.size(); i++) {||| 62 t[i] = s[s.size() - i - 1];||| 63 }||| 64 return t;||| 65 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 bool Is_tp(string t, int k);||| 5 string Trans_t(string t, int tp);||| 6 string rv(string s);||| 7 int main() {||| 8 ll t;||| 9 cin >> t;||| 10 for (ll i = 0; i < t; i++) {||| 11 string s, t;||| 12 cin >> s >> t;||| 13 bool find = 0;||| 14 for (int j = 0; j < t.size(); j++) {||| 15 if (Is_tp(t, j)) {||| 16 int f = s.find(Trans_t(t, j));||| 17 if (f != -1) {||| 18 cout << ""YES"" << endl;||| 19 find = 1;||| 20 break;||| 21 }||| 22 }||| 23 }||| 24 if (!find) {||| 25 cout << ""NO"" << endl;||| 26 }||| 27 }||| 28 return 0;||| 29 }||| 30 bool Is_tp(string t, int k) {||| 31 if (k == 0 || k == t.size() - 1) {||| 32 return 1;||| 33 }||| 34 if (k <= t.size() / 2) {||| 35 if (t.substr(0, k) == rv(t.substr(k + 1, k))) {||| 36 return 1;||| 37 } else {||| 38 return 0;||| 39 }||| 40 } else {||| 41 if (t.substr(k + 1, t.size() - k - 1) ==||| 42 rv(t.substr(2 * k + 1 - t.size(), t.size() - k - 1))) {||| 43 return 1;||| 44 } else {||| 45 return 0;||| 46 }||| 47 }||| 48 return 0;||| 49 }||| 50 string Trans_t(string t, int tp) {||| 51 string ans;||| 52 if (tp < t.size() / 2) {||| 53 ans = rv(t.substr(tp, t.size() - tp));||| 54 } else {||| 55 ans = t.substr(0, tp + 1);||| 56 }||| 57 return ans;||| 58 }||| 59 string rv(string s) {||| 60 string t = s;||| 61 for (int i = 0; i < s.size(); i++) {||| 62 t[i] = s[s.size() - i - 1];||| 63 }||| 64 return t;||| 65 }||| "	34 if (k < t.size() / 2) {
25	278	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> p[300005], q[300005], f(500005), a(500005),||| 4 g(400005, 100), h(400005, 0);||| 5 vector<vector<long long int>> b(400005, vector<long long int>(20, 0));||| 6 long long int gcd(long long int a, long long int b) {||| 7 if (b == 0) return a;||| 8 return gcd(b, a % b);||| 9 }||| 10 long long int bpow(long long int a, long long int b) {||| 11 long long int res = 1;||| 12 while (b > 0) {||| 13 if (b & 1) res = (res * a) % 998244353;||| 14 a = (a * a) % 998244353;||| 15 b >>= 1;||| 16 }||| 17 return res % 998244353;||| 18 }||| 19 void fact(long long int i) {||| 20 f[0] = 1;||| 21 for (long long int k = 1; k <= i; k++) {||| 22 (f[k] = f[k - 1] * k) %= 998244353;||| 23 }||| 24 }||| 25 long long int isprime(long long int n) {||| 26 if (n == 1) return 0;||| 27 for (long long int i = 2; i <= sqrt(n); i++)||| 28 if (n % i == 0) return 0;||| 29 return 1;||| 30 }||| 31 long long int find(long long int x) {||| 32 if (f[x] == x)||| 33 return x;||| 34 else||| 35 return f[x] = find(f[x]);||| 36 }||| 37 bool cmp(long long int x, long long int y) { return x < y; }||| 38 void check() {||| 39 cout << ""HI""||| 40 << ""\n"";||| 41 }||| 42 long long int comb(long long int i, long long int j) {||| 43 if (j > i) return 0;||| 44 long long int k = f[i];||| 45 long long int g = (f[j] * (f[i - j])) % 998244353;||| 46 long long int h = bpow(g, 998244353 - 2);||| 47 return (k * h) % 998244353;||| 48 }||| 49 pair<long double, long double> az(long double a, long double b, long double c,||| 50 long double d, long double u) {||| 51 long double x1 = (a - c) * cos(u) - (b - d) * sin(u) + c;||| 52 long double y1 = (a - c) * sin(u) + (b - d) * cos(u) + d;||| 53 return {x1, y1};||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(NULL);||| 58 long long int t;||| 59 cin >> t;||| 60 while (t--) {||| 61 string s, g;||| 62 cin >> s >> g;||| 63 long long int f = 0;||| 64 for (long long int i = 0; i < s.size(); i++) {||| 65 string a = """";||| 66 for (long long int j = i; j < s.size() && a.size() <= g.size(); j++) {||| 67 a += s[j];||| 68 if (a.size() == g.size() && a == g) {||| 69 f = 1;||| 70 break;||| 71 }||| 72 string b = a;||| 73 for (long long int k = j - 1; k >= 0 && b.size() <= g.size(); k--) {||| 74 b += s[k];||| 75 if (b.size() == g.size() && b == g) {||| 76 f = 1;||| 77 break;||| 78 }||| 79 }||| 80 if (f) break;||| 81 }||| 82 if (f) break;||| 83 }||| 84 if (f) {||| 85 cout << ""YES""||| 86 << ""\n"";||| 87 } else {||| 88 cout << ""NO""||| 89 << ""\n"";||| 90 }||| 91 }||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long int> p[300005], q[300005], f(500005), a(500005),||| 4 g(400005, 100), h(400005, 0);||| 5 vector<vector<long long int>> b(400005, vector<long long int>(20, 0));||| 6 long long int gcd(long long int a, long long int b) {||| 7 if (b == 0) return a;||| 8 return gcd(b, a % b);||| 9 }||| 10 long long int bpow(long long int a, long long int b) {||| 11 long long int res = 1;||| 12 while (b > 0) {||| 13 if (b & 1) res = (res * a) % 998244353;||| 14 a = (a * a) % 998244353;||| 15 b >>= 1;||| 16 }||| 17 return res % 998244353;||| 18 }||| 19 void fact(long long int i) {||| 20 f[0] = 1;||| 21 for (long long int k = 1; k <= i; k++) {||| 22 (f[k] = f[k - 1] * k) %= 998244353;||| 23 }||| 24 }||| 25 long long int isprime(long long int n) {||| 26 if (n == 1) return 0;||| 27 for (long long int i = 2; i <= sqrt(n); i++)||| 28 if (n % i == 0) return 0;||| 29 return 1;||| 30 }||| 31 long long int find(long long int x) {||| 32 if (f[x] == x)||| 33 return x;||| 34 else||| 35 return f[x] = find(f[x]);||| 36 }||| 37 bool cmp(long long int x, long long int y) { return x < y; }||| 38 void check() {||| 39 cout << ""HI""||| 40 << ""\n"";||| 41 }||| 42 long long int comb(long long int i, long long int j) {||| 43 if (j > i) return 0;||| 44 long long int k = f[i];||| 45 long long int g = (f[j] * (f[i - j])) % 998244353;||| 46 long long int h = bpow(g, 998244353 - 2);||| 47 return (k * h) % 998244353;||| 48 }||| 49 pair<long double, long double> az(long double a, long double b, long double c,||| 50 long double d, long double u) {||| 51 long double x1 = (a - c) * cos(u) - (b - d) * sin(u) + c;||| 52 long double y1 = (a - c) * sin(u) + (b - d) * cos(u) + d;||| 53 return {x1, y1};||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(NULL);||| 58 long long int t;||| 59 cin >> t;||| 60 while (t--) {||| 61 string s, g;||| 62 cin >> s >> g;||| 63 long long int f = 0;||| 64 for (long long int i = 0; i < g.size(); i++) {||| 65 string a = """";||| 66 for (long long int j = i; j < s.size() && a.size() <= g.size(); j++) {||| 67 a += s[j];||| 68 if (a.size() == g.size() && a == g) {||| 69 f = 1;||| 70 break;||| 71 }||| 72 string b = a;||| 73 for (long long int k = j - 1; k >= 0 && b.size() <= g.size(); k--) {||| 74 b += s[k];||| 75 if (b.size() == g.size() && b == g) {||| 76 f = 1;||| 77 break;||| 78 }||| 79 }||| 80 if (f) break;||| 81 }||| 82 if (f) break;||| 83 }||| 84 if (f) {||| 85 cout << ""YES""||| 86 << ""\n"";||| 87 } else {||| 88 cout << ""NO""||| 89 << ""\n"";||| 90 }||| 91 }||| 92 }||| "	64 for (long long int i = 0; i < s.size(); i++) {
26	3	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power(long long a, long long n, long long md) {||| 4 if (n == 0) return 1;||| 5 if (n == 1) return a % md;||| 6 if (n % 2 == 0) {||| 7 long long t = power(a, n / 2, md) % md;||| 8 return (t * t) % md;||| 9 }||| 10 return ((a % md) * power(a, n - 1, md) % md) % md;||| 11 }||| 12 vector<bool> prime;||| 13 void sievefunc(long long n) {||| 14 prime.assign(n + 1, 1);||| 15 for (long long p = 2; p * p <= n; p++) {||| 16 if (prime[p] == 1) {||| 17 for (long long i = p * p; i <= n; i += p) prime[i] = 0;||| 18 }||| 19 }||| 20 }||| 21 vector<long long> primes;||| 22 void primenumbers_in_vec(long long n) {||| 23 sievefunc(n);||| 24 for (long long i = 2; i < n; i++)||| 25 if (prime[i]) primes.push_back(i);||| 26 }||| 27 bool ispos(string s, long long till, long long tga, long long tqa,||| 28 long long tgb, long long tqb) {||| 29 long long ga = 0, qa = 0, gb = 0, qb = 0;||| 30 for (long long i = 0; i <= till; i++) {||| 31 if (i % 2 == 0) {||| 32 if (s[i] == '1')||| 33 ga++;||| 34 else if (s[i] == '?')||| 35 qa++;||| 36 } else {||| 37 if (s[i] == '1')||| 38 gb++;||| 39 else if (s[i] == '?')||| 40 qb++;||| 41 }||| 42 }||| 43 long long rem1 = 5 - (till + 2) / 2;||| 44 long long rem2 = 5 - (till + 1) / 2;||| 45 if (ga + qa > gb + rem2) return 1;||| 46 if (gb + qb > ga + rem1) return 1;||| 47 return 0;||| 48 }||| 49 void func() {||| 50 string s;||| 51 cin >> s;||| 52 long long tga = 0, tqa = 0, tgb = 0, tqb = 0;||| 53 for (long long i = 0; i < 10; i++) {||| 54 if (i % 2 == 0) {||| 55 if (s[i] == '1')||| 56 tga++;||| 57 else if (s[i] == '?')||| 58 tqa++;||| 59 } else {||| 60 if (s[i] == '1')||| 61 tgb++;||| 62 else if (s[i] == '?')||| 63 tqb++;||| 64 }||| 65 }||| 66 for (long long i = 1; i < 10; i++) {||| 67 if (ispos(s, i, tga, tqa, tgb, tqb)) {||| 68 cout << i + 1 << ""\n"";||| 69 return;||| 70 }||| 71 }||| 72 cout << 10 << ""\n"";||| 73 return;||| 74 }||| 75 int32_t main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(NULL);||| 78 long long test = 1;||| 79 cin >> test;||| 80 while (test--) func();||| 81 return 0;||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power(long long a, long long n, long long md) {||| 4 if (n == 0) return 1;||| 5 if (n == 1) return a % md;||| 6 if (n % 2 == 0) {||| 7 long long t = power(a, n / 2, md) % md;||| 8 return (t * t) % md;||| 9 }||| 10 return ((a % md) * power(a, n - 1, md) % md) % md;||| 11 }||| 12 vector<bool> prime;||| 13 void sievefunc(long long n) {||| 14 prime.assign(n + 1, 1);||| 15 for (long long p = 2; p * p <= n; p++) {||| 16 if (prime[p] == 1) {||| 17 for (long long i = p * p; i <= n; i += p) prime[i] = 0;||| 18 }||| 19 }||| 20 }||| 21 vector<long long> primes;||| 22 void primenumbers_in_vec(long long n) {||| 23 sievefunc(n);||| 24 for (long long i = 2; i < n; i++)||| 25 if (prime[i]) primes.push_back(i);||| 26 }||| 27 bool ispos(string s, long long till, long long tga, long long tqa,||| 28 long long tgb, long long tqb) {||| 29 long long ga = 0, qa = 0, gb = 0, qb = 0;||| 30 for (long long i = 0; i <= till; i++) {||| 31 if (i % 2 == 0) {||| 32 if (s[i] == '1')||| 33 ga++;||| 34 else if (s[i] == '?')||| 35 qa++;||| 36 } else {||| 37 if (s[i] == '1')||| 38 gb++;||| 39 else if (s[i] == '?')||| 40 qb++;||| 41 }||| 42 }||| 43 long long rem1 = 5 - (till + 2) / 2;||| 44 long long rem2 = 5 - (till + 1) / 2;||| 45 if (ga + qa > gb + rem2) return 1;||| 46 if (gb + qb > ga + rem1) return 1;||| 47 return 0;||| 48 }||| 49 void func() {||| 50 string s;||| 51 cin >> s;||| 52 long long tga = 0, tqa = 0, tgb = 0, tqb = 0;||| 53 for (long long i = 0; i < 10; i++) {||| 54 if (i % 2 == 0) {||| 55 if (s[i] == '1')||| 56 tga++;||| 57 else if (s[i] == '?')||| 58 tqa++;||| 59 } else {||| 60 if (s[i] == '1')||| 61 tgb++;||| 62 else if (s[i] == '?')||| 63 tqb++;||| 64 }||| 65 }||| 66 for (long long i = 1; i <= 10; i++) {||| 67 if (ispos(s, i, tga, tqa, tgb, tqb)) {||| 68 cout << i + 1 << ""\n"";||| 69 return;||| 70 }||| 71 }||| 72 cout << 10 << ""\n"";||| 73 return;||| 74 }||| 75 int32_t main() {||| 76 ios_base::sync_with_stdio(false);||| 77 cin.tie(NULL);||| 78 long long test = 1;||| 79 cin >> test;||| 80 while (test--) func();||| 81 return 0;||| 82 }||| "	66 for (long long i = 1; i < 10; i++) {
26	239	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long a = 1e9 + 7;||| 4 long long power(long long n, long long m, long long p) {||| 5 int res = 1;||| 6 while (m > 0) {||| 7 if (n & 1) {||| 8 res = (res * n) % p;||| 9 }||| 10 n = (n * n) % p;||| 11 m >>= 1;||| 12 }||| 13 return res % p;||| 14 }||| 15 bool prime(long long b) {||| 16 for (long long i = 2; i <= sqrt(b); i++) {||| 17 if (b % i == 0) return false;||| 18 }||| 19 return true;||| 20 }||| 21 int main() {||| 22 long long t;||| 23 cin >> t;||| 24 while (t--) {||| 25 string s;||| 26 cin >> s;||| 27 long long decide = 0, cnt1 = 0, cnt = 0, decide2 = 0, ans = -1;||| 28 for (int i = 0; i < 10; i++) {||| 29 if (i % 2 == 0) {||| 30 if (s[i] == '1')||| 31 cnt1++;||| 32 else if (s[i] == '?')||| 33 decide++;||| 34 } else {||| 35 if (s[i] == '1')||| 36 cnt++;||| 37 else if (s[i] == '?')||| 38 decide2++;||| 39 }||| 40 if (cnt1 + decide > cnt + (10 - i) / 2 ||||| 41 cnt + decide2 > cnt1 + (9 - i) / 2) {||| 42 ans = i + 1;||| 43 break;||| 44 }||| 45 }||| 46 if (ans == -1)||| 47 cout << 10 << ""\n"";||| 48 else||| 49 cout << ans << ""\n"";||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long a = 1e9 + 7;||| 4 long long power(long long n, long long m, long long p) {||| 5 int res = 1;||| 6 while (m > 0) {||| 7 if (n & 1) {||| 8 res = (res * n) % p;||| 9 }||| 10 n = (n * n) % p;||| 11 m >>= 1;||| 12 }||| 13 return res % p;||| 14 }||| 15 bool prime(long long b) {||| 16 for (long long i = 2; i <= sqrt(b); i++) {||| 17 if (b % i == 0) return false;||| 18 }||| 19 return true;||| 20 }||| 21 int main() {||| 22 long long t;||| 23 cin >> t;||| 24 while (t--) {||| 25 string s;||| 26 cin >> s;||| 27 long long decide = 0, cnt1 = 0, cnt = 0, decide2 = 0, ans = -1;||| 28 for (int i = 0; i < 10; i++) {||| 29 if (i % 2 == 0) {||| 30 if (s[i] == '1')||| 31 cnt1++;||| 32 else if (s[i] == '?')||| 33 decide++;||| 34 } else {||| 35 if (s[i] == '1')||| 36 cnt++;||| 37 else if (s[i] == '?')||| 38 decide2++;||| 39 }||| 40 if (cnt1 + decide > cnt + (10 - i) / 2 ||||| 41 cnt + decide2 > cnt1 + (10 - i) / 2) {||| 42 ans = i + 1;||| 43 break;||| 44 }||| 45 }||| 46 if (ans == -1)||| 47 cout << 10 << ""\n"";||| 48 else||| 49 cout << ans << ""\n"";||| 50 }||| 51 return 0;||| 52 }||| "	41 cnt + decide2 > cnt1 + (9 - i) / 2) {
26	207	"1 #include <bits/stdc++.h>||| 2 const unsigned int MOD = 1000000007;||| 3 using namespace std;||| 4 int end(int w1, int w2, int rem1, int rem2) {||| 5 if (w1 > w2 + rem2 || w2 > w1 + rem1) {||| 6 return 1;||| 7 } else {||| 8 return 0;||| 9 }||| 10 }||| 11 int m1(string s) {||| 12 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 13 int ans = 0;||| 14 for (int i = 0; i < 10; i++) {||| 15 if (end(w1, w2, rem1, rem2)) {||| 16 return ans;||| 17 }||| 18 if (s[i] == '1' || s[i] == '?') {||| 19 w1++;||| 20 rem1--;||| 21 } else if (s[i] == '0') {||| 22 rem1--;||| 23 }||| 24 ans++;||| 25 i++;||| 26 if (end(w1, w2, rem1, rem2)) {||| 27 return ans;||| 28 }||| 29 if (s[i] == '1') {||| 30 w2++;||| 31 rem2--;||| 32 } else if (s[i] == '0' || s[i] == '?') {||| 33 rem2--;||| 34 }||| 35 ans++;||| 36 }||| 37 return 10;||| 38 }||| 39 int m2(string s) {||| 40 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 41 int ans = 0;||| 42 for (int i = 0; i < 10; i++) {||| 43 if (end(w1, w2, rem1, rem2)) {||| 44 return ans;||| 45 }||| 46 if (s[i] == '1') {||| 47 w1++;||| 48 rem1--;||| 49 } else if (s[i] == '0' || s[i] == '?') {||| 50 rem1--;||| 51 }||| 52 ans++;||| 53 if (end(w1, w2, rem1, rem2)) {||| 54 return ans;||| 55 }||| 56 i++;||| 57 if (s[i] == '1' || s[i] == '?') {||| 58 w2++;||| 59 rem2--;||| 60 } else if (s[i] == '0') {||| 61 rem2--;||| 62 }||| 63 ans++;||| 64 }||| 65 return 10;||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 int t;||| 71 cin >> t;||| 72 for (int tt = 0; tt < t; tt++) {||| 73 string s;||| 74 cin >> s;||| 75 cout << min(m1(s), m2(s)) << ""\n"";||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 const unsigned int MOD = 1000000007;||| 3 using namespace std;||| 4 int end(int w1, int w2, int rem1, int rem2) {||| 5 if (w1 > w2 + rem2 || w2 > w1 + rem1) {||| 6 return 1;||| 7 } else {||| 8 return 0;||| 9 }||| 10 }||| 11 int m1(string s) {||| 12 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 13 int ans = 0;||| 14 for (int i = 0; i < 10; i++) {||| 15 if (end(w1, w2, rem1, rem2)) {||| 16 return ans;||| 17 }||| 18 if (s[i] == '1' || s[i] == '?') {||| 19 w1++;||| 20 rem1--;||| 21 } else if (s[i] == '0') {||| 22 rem1--;||| 23 }||| 24 ans++;||| 25 i++;||| 26 if (end(w1, w2, rem1, rem2)) {||| 27 return ans;||| 28 }||| 29 if (s[i] == '1') {||| 30 w2++;||| 31 rem2++;||| 32 } else if (s[i] == '0' || s[i] == '?') {||| 33 rem2--;||| 34 }||| 35 ans++;||| 36 }||| 37 return 10;||| 38 }||| 39 int m2(string s) {||| 40 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 41 int ans = 0;||| 42 for (int i = 0; i < 10; i++) {||| 43 if (end(w1, w2, rem1, rem2)) {||| 44 return ans;||| 45 }||| 46 if (s[i] == '1') {||| 47 w1++;||| 48 rem1--;||| 49 } else if (s[i] == '0' || s[i] == '?') {||| 50 rem1--;||| 51 }||| 52 ans++;||| 53 if (end(w1, w2, rem1, rem2)) {||| 54 return ans;||| 55 }||| 56 i++;||| 57 if (s[i] == '1' || s[i] == '?') {||| 58 w2++;||| 59 rem2--;||| 60 } else if (s[i] == '0') {||| 61 rem2--;||| 62 }||| 63 ans++;||| 64 }||| 65 return 10;||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 int t;||| 71 cin >> t;||| 72 for (int tt = 0; tt < t; tt++) {||| 73 string s;||| 74 cin >> s;||| 75 cout << min(m1(s), m2(s)) << ""\n"";||| 76 }||| 77 return 0;||| 78 }||| "	31 rem2--;
26	247	"1 #include <bits/stdc++.h>||| 2 const unsigned int MOD = 1000000007;||| 3 using namespace std;||| 4 int end(int w1, int w2, int rem1, int rem2) {||| 5 if (w1 > w2 + rem2 || w2 > w1 + rem1) {||| 6 return 1;||| 7 } else {||| 8 return 0;||| 9 }||| 10 }||| 11 int m1(string s) {||| 12 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 13 int ans = 0;||| 14 for (int i = 0; i < 10; i++) {||| 15 if (end(w1, w2, rem1, rem2)) {||| 16 return ans;||| 17 }||| 18 if (s[i] == '1' || s[i] == '?') {||| 19 w1++;||| 20 rem1--;||| 21 } else if (s[i] == '0') {||| 22 rem1--;||| 23 }||| 24 ans++;||| 25 i++;||| 26 if (end(w1, w2, rem1, rem2)) {||| 27 return ans;||| 28 }||| 29 if (s[i] == '1') {||| 30 w2++;||| 31 rem2--;||| 32 } else if (s[i] == '0' || s[i] == '?') {||| 33 rem2--;||| 34 }||| 35 ans++;||| 36 }||| 37 return 10;||| 38 }||| 39 int m2(string s) {||| 40 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 41 int ans = 0;||| 42 for (int i = 0; i < 10; i++) {||| 43 if (end(w1, w2, rem1, rem2)) {||| 44 return ans;||| 45 }||| 46 if (s[i] == '1') {||| 47 w1++;||| 48 rem1--;||| 49 } else if (s[i] == '0' || s[i] == '?') {||| 50 rem1--;||| 51 }||| 52 ans++;||| 53 if (end(w1, w2, rem1, rem2)) {||| 54 return ans;||| 55 }||| 56 i++;||| 57 if (s[i] == '1' || s[i] == '?') {||| 58 w2++;||| 59 rem2--;||| 60 } else if (s[i] == '0') {||| 61 rem2--;||| 62 }||| 63 ans++;||| 64 }||| 65 return 10;||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 int t;||| 71 cin >> t;||| 72 for (int tt = 0; tt < t; tt++) {||| 73 string s;||| 74 cin >> s;||| 75 cout << min(m1(s), m2(s)) << ""\n"";||| 76 }||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 const unsigned int MOD = 1000000007;||| 3 using namespace std;||| 4 int end(int w1, int w2, int rem1, int rem2) {||| 5 if (w1 > w2 + rem2 || w2 < w1 + rem1) {||| 6 return 1;||| 7 } else {||| 8 return 0;||| 9 }||| 10 }||| 11 int m1(string s) {||| 12 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 13 int ans = 0;||| 14 for (int i = 0; i < 10; i++) {||| 15 if (end(w1, w2, rem1, rem2)) {||| 16 return ans;||| 17 }||| 18 if (s[i] == '1' || s[i] == '?') {||| 19 w1++;||| 20 rem1--;||| 21 } else if (s[i] == '0') {||| 22 rem1--;||| 23 }||| 24 ans++;||| 25 i++;||| 26 if (end(w1, w2, rem1, rem2)) {||| 27 return ans;||| 28 }||| 29 if (s[i] == '1') {||| 30 w2++;||| 31 rem2--;||| 32 } else if (s[i] == '0' || s[i] == '?') {||| 33 rem2--;||| 34 }||| 35 ans++;||| 36 }||| 37 return 10;||| 38 }||| 39 int m2(string s) {||| 40 int w1 = 0, w2 = 0, rem1 = 5, rem2 = 5;||| 41 int ans = 0;||| 42 for (int i = 0; i < 10; i++) {||| 43 if (end(w1, w2, rem1, rem2)) {||| 44 return ans;||| 45 }||| 46 if (s[i] == '1') {||| 47 w1++;||| 48 rem1--;||| 49 } else if (s[i] == '0' || s[i] == '?') {||| 50 rem1--;||| 51 }||| 52 ans++;||| 53 if (end(w1, w2, rem1, rem2)) {||| 54 return ans;||| 55 }||| 56 i++;||| 57 if (s[i] == '1' || s[i] == '?') {||| 58 w2++;||| 59 rem2--;||| 60 } else if (s[i] == '0') {||| 61 rem2--;||| 62 }||| 63 ans++;||| 64 }||| 65 return 10;||| 66 }||| 67 int main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(NULL);||| 70 int t;||| 71 cin >> t;||| 72 for (int tt = 0; tt < t; tt++) {||| 73 string s;||| 74 cin >> s;||| 75 cout << min(m1(s), m2(s)) << ""\n"";||| 76 }||| 77 return 0;||| 78 }||| "	5 if (w1 > w2 + rem2 || w2 > w1 + rem1) {
26	175	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool prime(long long x) {||| 4 if (x == 2) {||| 5 return true;||| 6 }||| 7 if (x <= 1) {||| 8 return false;||| 9 }||| 10 for (int i = 2; i < sqrt(x); i++) {||| 11 if (x % i == 0) {||| 12 return false;||| 13 }||| 14 }||| 15 return true;||| 16 }||| 17 void printv(vector<long long> v) {||| 18 for (int i = 0; i < v.size(); i++) {||| 19 cout << v[i] << "" "";||| 20 }||| 21 cout << endl;||| 22 }||| 23 string Y = ""YES\n"";||| 24 string N = ""NO\n"";||| 25 int rec(string s, int pos, int team1, int team2) {||| 26 if (team1 < team2) {||| 27 if (5 - (ceil((pos * 1.0) / 2)) < (team2 - team1)) {||| 28 return pos;||| 29 }||| 30 } else {||| 31 if (5 - (pos / 2) < (team1 - team2)) {||| 32 return pos;||| 33 }||| 34 }||| 35 if (pos == 10) {||| 36 return 10;||| 37 }||| 38 int h = 10;||| 39 if (pos % 2 == 0) {||| 40 if (s[pos] == '1') {||| 41 h = min(h, rec(s, pos + 1, team1 + 1, team2));||| 42 } else if (s[pos] == '0') {||| 43 h = min(h, rec(s, pos + 1, team1, team2));||| 44 } else {||| 45 int x =||| 46 min(rec(s, pos + 1, team1 + 1, team2), rec(s, pos + 1, team1, team2));||| 47 h = min(x, h);||| 48 }||| 49 } else {||| 50 if (s[pos] == '1') {||| 51 h = min(h, rec(s, pos + 1, team1, team2 + 1));||| 52 } else if (s[pos] == '0') {||| 53 h = min(h, rec(s, pos + 1, team1, team2));||| 54 } else {||| 55 int x =||| 56 min(rec(s, pos + 1, team1, team2 + 1), rec(s, pos + 1, team1, team2));||| 57 h = min(x, h);||| 58 }||| 59 }||| 60 return h;||| 61 }||| 62 signed main() {||| 63 ios_base::sync_with_stdio(false);||| 64 cin.tie(NULL);||| 65 cout.tie(NULL);||| 66 int t;||| 67 cin >> t;||| 68 for (int pop = 0; pop < t; pop++) {||| 69 string q;||| 70 cin >> q;||| 71 int c = rec(q, 0, 0, 0);||| 72 cout << c << endl;||| 73 }||| 74 return 0;||| 75 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool prime(long long x) {||| 4 if (x == 2) {||| 5 return true;||| 6 }||| 7 if (x <= 1) {||| 8 return false;||| 9 }||| 10 for (int i = 2; i < sqrt(x); i++) {||| 11 if (x % i == 0) {||| 12 return false;||| 13 }||| 14 }||| 15 return true;||| 16 }||| 17 void printv(vector<long long> v) {||| 18 for (int i = 0; i < v.size(); i++) {||| 19 cout << v[i] << "" "";||| 20 }||| 21 cout << endl;||| 22 }||| 23 string Y = ""YES\n"";||| 24 string N = ""NO\n"";||| 25 int rec(string s, int pos, int team1, int team2) {||| 26 if (team1 < team2) {||| 27 if (5 - (ceil((pos * 1.0) / 2)) < (team2 - team1)) {||| 28 return pos;||| 29 }||| 30 } else {||| 31 if (5 - (pos / 2) < (team1 - team2)) {||| 32 return pos;||| 33 }||| 34 }||| 35 if (pos == 10) {||| 36 return 10;||| 37 }||| 38 int h = 10;||| 39 if (pos % 2 == 0) {||| 40 if (s[pos] == '1') {||| 41 h = min(h, rec(s, pos + 1, team1 + 1, team2));||| 42 } else if (s[pos] == '0') {||| 43 h = min(h, rec(s, pos + 1, team1, team2));||| 44 } else {||| 45 int x =||| 46 min(rec(s, pos + 1, team1 + 1, team2), rec(s, pos + 1, team1, team2));||| 47 h = min(x, h);||| 48 }||| 49 } else {||| 50 if (s[pos] == '1') {||| 51 h = min(h, rec(s, pos + 1, team1, team2 + 1));||| 52 } else if (s[pos] == '0') {||| 53 h = min(h, rec(s, pos + 1, team1, team2));||| 54 } else {||| 55 int x =||| 56 min(rec(s, pos + 1, team1, team2 + 1), rec(s, pos + 1, team1, team2));||| 57 h = min(x, h);||| 58 }||| 59 }||| 60 return h;||| 61 }||| 62 signed main() {||| 63 ios_base::sync_with_stdio(false);||| 64 cin.tie(NULL);||| 65 cout.tie(NULL);||| 66 int t;||| 67 cin >> t;||| 68 for (int pop = 0; pop < t; pop++) {||| 69 string q;||| 70 cin >> q;||| 71 int c = rec(q, 1, 0, 0);||| 72 cout << c << endl;||| 73 }||| 74 return 0;||| 75 }||| "	71 int c = rec(q, 0, 0, 0);
26	98	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double PI = acosl(-1);||| 4 bool compare_int(int a, int b) { return (a > b); }||| 5 bool compare_string(string a, string b) { return a.size() < b.size(); }||| 6 bool compare_pair(const pair<int, int> &a, const pair<int, int> &b) {||| 7 if (a.second == b.second)||| 8 return a.first < b.first;||| 9 else||| 10 return (a.second > b.second);||| 11 }||| 12 bool cmp(pair<string, int> x, pair<string, int> y) {||| 13 return (x.second < y.second);||| 14 }||| 15 void NA() {||| 16 printf(""NO\n"");||| 17 exit(0);||| 18 }||| 19 void YA() {||| 20 printf(""YES\n"");||| 21 exit(0);||| 22 }||| 23 int32_t main() {||| 24 ios::sync_with_stdio(false);||| 25 cin.tie(0);||| 26 cout.tie(0);||| 27 int t;||| 28 cin >> t;||| 29 while (t--) {||| 30 string s;||| 31 cin >> s;||| 32 vector<int> dp1(6, 0), dp2(6, 0), goal1(6, 0), goal2(6, 0);||| 33 for (int i = 0, k = 1; i < 10; i += 2, k++) {||| 34 if (i == 0) {||| 35 s[i] == '0' ? dp1[k] = 0 : dp1[k] = 1;||| 36 s[i] == '1' ? goal1[k] = 1 : goal1[k] = 0;||| 37 } else {||| 38 dp1[k] = (s[i] == '0' ? dp1[k - 1] : dp1[k - 1] + 1);||| 39 goal1[k] = (s[i] == '1' ? goal1[k - 1] + 1 : goal1[k - 1]);||| 40 }||| 41 }||| 42 for (int i = 1, k = 1; i < 10; i += 2, k++) {||| 43 if (i == 1) {||| 44 s[i] == '0' ? dp2[k] = 0 : dp2[k] = 1;||| 45 s[i] == '1' ? goal2[k] = 1 : goal2[k] = 0;||| 46 } else {||| 47 dp2[k] = (s[i] == '0' ? dp2[k - 1] : dp2[k - 1] + 1);||| 48 goal2[k] = (s[i] == '1' ? goal2[k - 1] + 1 : goal2[k - 1]);||| 49 }||| 50 }||| 51 int Min = 10;||| 52 for (int i = 5; i > 0; i--) {||| 53 if (dp1[i] > goal2[i - 1] + (5 - i + 1) or||| 54 goal1[i] + (5 - i) < dp2[i - 1])||| 55 Min = min(Min, i + i - 1);||| 56 else||| 57 break;||| 58 }||| 59 for (int i = 5; i > 0; i--) {||| 60 if (dp2[i] > goal1[i] + (5 - i) or goal2[i] + (5 - i) < dp1[i])||| 61 Min = min(Min, i + i);||| 62 else||| 63 break;||| 64 }||| 65 cout << Min << endl;||| 66 }||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long double PI = acosl(-1);||| 4 bool compare_int(int a, int b) { return (a > b); }||| 5 bool compare_string(string a, string b) { return a.size() < b.size(); }||| 6 bool compare_pair(const pair<int, int> &a, const pair<int, int> &b) {||| 7 if (a.second == b.second)||| 8 return a.first < b.first;||| 9 else||| 10 return (a.second > b.second);||| 11 }||| 12 bool cmp(pair<string, int> x, pair<string, int> y) {||| 13 return (x.second < y.second);||| 14 }||| 15 void NA() {||| 16 printf(""NO\n"");||| 17 exit(0);||| 18 }||| 19 void YA() {||| 20 printf(""YES\n"");||| 21 exit(0);||| 22 }||| 23 int32_t main() {||| 24 ios::sync_with_stdio(false);||| 25 cin.tie(0);||| 26 cout.tie(0);||| 27 int t;||| 28 cin >> t;||| 29 while (t--) {||| 30 string s;||| 31 cin >> s;||| 32 vector<int> dp1(6, 0), dp2(6, 0), goal1(6, 0), goal2(6, 0);||| 33 for (int i = 0, k = 1; i < 10; i += 2, k++) {||| 34 if (i == 0) {||| 35 s[i] == '0' ? dp1[k] = 0 : dp1[k] = 1;||| 36 s[i] == '1' ? goal1[k] = 1 : goal1[k] = 0;||| 37 } else {||| 38 dp1[k] = (s[i] == '0' ? dp1[k - 1] : dp1[k - 1] + 1);||| 39 goal1[k] = (s[i] == '1' ? goal1[k - 1] + 1 : goal1[k - 1]);||| 40 }||| 41 }||| 42 for (int i = 1, k = 1; i < 10; i += 2, k++) {||| 43 if (i == 1) {||| 44 s[i] == '0' ? dp2[k] = 0 : dp2[k] = 1;||| 45 s[i] == '1' ? goal2[k] = 1 : goal2[k] = 0;||| 46 } else {||| 47 dp2[k] = (s[i] == '0' ? dp2[k - 1] : dp2[k - 1] + 1);||| 48 goal2[k] = (s[i] == '1' ? goal2[k - 1] + 1 : goal2[k - 1]);||| 49 }||| 50 }||| 51 int Min = 10;||| 52 for (int i = 5; i > 0; i--) {||| 53 if (dp1[i] > goal2[i - 1] + (5 - i + 1) or dp1[i] + (5 - i) < dp2[i - 1])||| 54 Min = min(Min, i + i - 1);||| 55 else||| 56 break;||| 57 }||| 58 for (int i = 5; i > 0; i--) {||| 59 if (dp2[i] > goal1[i] + (5 - i) or dp2[i] + (5 - i) < dp1[i])||| 60 Min = min(Min, i + i);||| 61 else||| 62 break;||| 63 }||| 64 cout << Min << endl;||| 65 }||| 66 }||| "	53 if (dp1[i] > goal2[i - 1] + (5 - i + 1) or
26	222	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1000000007;||| 4 const long long N = 10000000;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 cout.precision(numeric_limits<double>::max_digits10);||| 10 long long q;||| 11 cin >> q;||| 12 while (q--) {||| 13 string s;||| 14 cin >> s;||| 15 string s1 = s;||| 16 long long i = 0, j = 1;||| 17 long long scrA = 0, scrB = 0, ans1 = 10, ans2 = 10;||| 18 while (i < 10) {||| 19 if (i % 2 == 0) {||| 20 if (s[i] == '1' || s[i] == '?') scrA++;||| 21 if (scrB + (5 - i / 2) < scrA) {||| 22 ans1 = i + 1;||| 23 break;||| 24 }||| 25 i++;||| 26 }||| 27 if (i % 2) {||| 28 if (s[i] == '1') scrB++;||| 29 if (scrB + (4 - i / 2) < scrA) {||| 30 ans1 = i + 1;||| 31 break;||| 32 }||| 33 i++;||| 34 }||| 35 }||| 36 i = 0;||| 37 scrA = 0;||| 38 scrB = 0;||| 39 while (i < 10) {||| 40 if (i % 2 == 0) {||| 41 if (s[i] == '1') scrA++;||| 42 if (scrA + (4 - i / 2) < scrB) {||| 43 ans2 = i + 1;||| 44 break;||| 45 }||| 46 i++;||| 47 }||| 48 if (i % 2) {||| 49 if (s[i] == '?' || s[i] == '1') scrB++;||| 50 if (scrA + (4 - i / 2) < scrB) {||| 51 ans2 = i + 1;||| 52 break;||| 53 }||| 54 i++;||| 55 }||| 56 }||| 57 cout << min(ans1, ans2) << '\n';||| 58 }||| 59 return 0;||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1000000007;||| 4 const long long N = 10000000;||| 5 int32_t main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 cout.precision(numeric_limits<double>::max_digits10);||| 10 long long q;||| 11 cin >> q;||| 12 while (q--) {||| 13 string s;||| 14 cin >> s;||| 15 string s1 = s;||| 16 long long i = 0, j = 1;||| 17 long long scrA = 0, scrB = 0, ans1 = 10, ans2 = 10;||| 18 while (i < 10) {||| 19 if (i % 2 == 0) {||| 20 if (s[i] == '1' || s[i] == '?') scrA++;||| 21 if (scrB + (5 - i / 2) < scrA) {||| 22 ans1 = i + 1;||| 23 break;||| 24 }||| 25 i++;||| 26 }||| 27 if (i % 2) {||| 28 if (s[i] == '1') scrB++;||| 29 if (scrB + (5 - i / 2) < scrA) {||| 30 ans1 = i + 1;||| 31 break;||| 32 }||| 33 i++;||| 34 }||| 35 }||| 36 i = 0;||| 37 scrA = 0;||| 38 scrB = 0;||| 39 while (i < 10) {||| 40 if (i % 2 == 0) {||| 41 if (s[i] == '1') scrA++;||| 42 if (scrA + (4 - i / 2) < scrB) {||| 43 ans2 = i + 1;||| 44 break;||| 45 }||| 46 i++;||| 47 }||| 48 if (i % 2) {||| 49 if (s[i] == '?' || s[i] == '1') scrB++;||| 50 if (scrA + (4 - i / 2) < scrB) {||| 51 ans2 = i + 1;||| 52 break;||| 53 }||| 54 i++;||| 55 }||| 56 }||| 57 cout << min(ans1, ans2) << '\n';||| 58 }||| 59 return 0;||| 60 }||| 	29 if (scrB + (4 - i / 2) < scrA) {
26	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 string s;||| 5 cin >> s;||| 6 int ans = 10;||| 7 {||| 8 int me = 0, his = 0, mybaki = 5, hisbaki = 5;||| 9 for (int i = 0; i < 10; i++) {||| 10 if (i % 2 == 0) {||| 11 mybaki--;||| 12 if (s[i] != '0') me++;||| 13 } else {||| 14 hisbaki--;||| 15 if (s[i] == '1') his++;||| 16 }||| 17 if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1);||| 18 }||| 19 }||| 20 {||| 21 int me = 0, his = 0, mybaki = 5, hisbaki = 5;||| 22 for (int i = 0; i < 10; i++) {||| 23 if (i % 2 == 0) {||| 24 mybaki--;||| 25 if (s[i] == '1') me++;||| 26 } else {||| 27 hisbaki--;||| 28 if (s[i] != '0') his++;||| 29 }||| 30 if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1);||| 31 }||| 32 }||| 33 cout << ans << (""\n"");||| 34 }||| 35 int main() {||| 36 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 37 int t;||| 38 cin >> t;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 string s;||| 5 cin >> s;||| 6 int ans = 10;||| 7 {||| 8 int me = 0, his = 0, mybaki = 5, hisbaki = 5;||| 9 for (int i = 0; i < 10; i++) {||| 10 if (i % 2 == 0) {||| 11 mybaki--;||| 12 if (s[i] != '0') me++;||| 13 } else {||| 14 hisbaki--;||| 15 if (s[i] == '1') his++;||| 16 }||| 17 if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1);||| 18 }||| 19 }||| 20 {||| 21 int me = 0, his = 0, mybaki = 5, hisbaki = 5;||| 22 for (int i = 0; i < 10; i++) {||| 23 if (i % 2 == 0) {||| 24 mybaki--;||| 25 if (s[i] != '0') me++;||| 26 } else {||| 27 hisbaki--;||| 28 if (s[i] == '1') his++;||| 29 }||| 30 if (me + mybaki < his || his + hisbaki < me) ans = min(ans, i + 1);||| 31 }||| 32 }||| 33 cout << ans << (""\n"");||| 34 }||| 35 int main() {||| 36 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 37 int t;||| 38 cin >> t;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	25 if (s[i] == '1') me++;
27	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void sove() {||| 4 string a, b;||| 5 cin >> a >> b;||| 6 int n = a.size(), m = b.size();||| 7 int i = n - 1, j = m - 1;||| 8 while (i >= 0 && j >= 0) {||| 9 if (a[i] == b[j]) {||| 10 i--;||| 11 j--;||| 12 } else {||| 13 i -= 2;||| 14 }||| 15 }||| 16 if (j == -1)||| 17 cout << ""YES"" << endl;||| 18 else||| 19 cout << ""NO"" << endl;||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 int t;||| 24 cin >> t;||| 25 while (t--) sove();||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void sove() {||| 4 string a, b;||| 5 cin >> a >> b;||| 6 int n = a.size(), m = b.size();||| 7 int i = n - 1, j = m - 1;||| 8 while (i >= 0 && j >= 0) {||| 9 if (a[i] == a[j]) {||| 10 i--;||| 11 j--;||| 12 } else {||| 13 i -= 2;||| 14 }||| 15 }||| 16 if (j == -1)||| 17 cout << ""YES"" << endl;||| 18 else||| 19 cout << ""NO"" << endl;||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 int t;||| 24 cin >> t;||| 25 while (t--) sove();||| 26 return 0;||| 27 }||| "	9 if (a[i] == b[j]) {
27	74	"1 #include <bits/stdc++.h>||| 2 using i64 = long long;||| 3 int main() {||| 4 std::ios::sync_with_stdio(false);||| 5 std::cin.tie(nullptr);||| 6 int q;||| 7 std::cin >> q;||| 8 while (q--) {||| 9 std::string s, t;||| 10 std::cin >> s >> t;||| 11 int lens = s.size(), lent = t.size();||| 12 if (lent > lens) {||| 13 std::cout << ""NO"" << '\n';||| 14 continue;||| 15 }||| 16 int pre = lens, fg = 0;||| 17 for (int i = lens - 1, j = lent - 1; i >= 0; i--) {||| 18 if (s[i] == t[j] && (pre - i) % 2 == 1) {||| 19 j--, pre = i;||| 20 }||| 21 if (j == -1) {||| 22 fg = 1;||| 23 break;||| 24 }||| 25 }||| 26 if (fg) {||| 27 std::cout << ""YES"" << '\n';||| 28 } else||| 29 std::cout << ""NO"" << '\n';||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using i64 = long long;||| 3 int main() {||| 4 std::ios::sync_with_stdio(false);||| 5 std::cin.tie(nullptr);||| 6 int q;||| 7 std::cin >> q;||| 8 while (q--) {||| 9 std::string s, t;||| 10 std::cin >> s >> t;||| 11 int lens = s.size(), lent = t.size();||| 12 if (lent > lens) {||| 13 std::cout << ""NO"" << '\n';||| 14 continue;||| 15 }||| 16 int pre = lens, fg = 0;||| 17 for (int i = lens - 1, j = lent - 1; i >= 0; i--) {||| 18 if (s[i] == t[j] && (pre - i) % 2 == 1) {||| 19 j--, pre = i;||| 20 }||| 21 if (j == 0) {||| 22 fg = 1;||| 23 break;||| 24 }||| 25 }||| 26 if (fg) {||| 27 std::cout << ""YES"" << '\n';||| 28 } else||| 29 std::cout << ""NO"" << '\n';||| 30 }||| 31 return 0;||| 32 }||| "	21 if (j == -1) {
28	48	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void read(T &x) {||| 5 cin >> x;||| 6 }||| 7 template <class H, class T>||| 8 void read(pair<H, T> &p) {||| 9 cin >> p.first >> p.second;||| 10 }||| 11 template <class T, size_t S>||| 12 void read(array<T, S> &a) {||| 13 for (T &i : a) read(i);||| 14 }||| 15 template <class T>||| 16 void read(vector<T> &v) {||| 17 for (T &i : v) read(i);||| 18 }||| 19 template <class H, class... T>||| 20 void read(H &h, T &...t) {||| 21 read(h);||| 22 read(t...);||| 23 }||| 24 template <class H, class T>||| 25 ostream &operator<<(ostream &o, pair<H, T> &p) {||| 26 o << p.first << "" "" << p.second;||| 27 return o;||| 28 }||| 29 template <class T, size_t S>||| 30 ostream &operator<<(ostream &o, array<T, S> &a) {||| 31 string s;||| 32 for (T i : a) o << s << i, s = "" "";||| 33 return o;||| 34 }||| 35 template <class T>||| 36 ostream &operator<<(ostream &o, vector<T> &v) {||| 37 string s;||| 38 for (T i : v) o << s << i, s = "" "";||| 39 return o;||| 40 }||| 41 template <class T>||| 42 void write(T x) {||| 43 cout << x;||| 44 }||| 45 template <class H, class... T>||| 46 void write(const H &h, const T &...t) {||| 47 write(h);||| 48 write(t...);||| 49 }||| 50 void print() { write('\n'); }||| 51 template <class H, class... T>||| 52 void print(const H &h, const T &...t) {||| 53 write(h);||| 54 if (sizeof...(t)) write(' ');||| 55 print(t...);||| 56 }||| 57 template <class T>||| 58 bool ckmin(T &a, const T b) {||| 59 return (b < a) ? a = b, 1 : 0;||| 60 }||| 61 template <class T>||| 62 bool ckmax(T &a, const T b) {||| 63 return (a < b) ? a = b, 1 : 0;||| 64 }||| 65 using ll = long long;||| 66 void solve() {||| 67 int n, m;||| 68 read(n, m);||| 69 vector<int> a(n), cnt(n);||| 70 read(a);||| 71 for (int &i : a) --i;||| 72 for (int i = 0; i < n; ++i) {||| 73 int here;||| 74 if (a[i] > i)||| 75 here = n + i - a[i];||| 76 else||| 77 here = i - a[i];||| 78 ++cnt[here];||| 79 }||| 80 vector<int> cand, ans;||| 81 for (int i = 0; i < n; ++i)||| 82 if (cnt[i] + m * 2 >= n) cand.push_back(i);||| 83 for (int x : cand) {||| 84 vector<int> b(n), pos(n);||| 85 iota((b).begin(), (b).end(), 0);||| 86 rotate(b.begin(), b.begin() + (n - x), b.end());||| 87 for (int i = 0; i < n; ++i) pos[b[i]] = i;||| 88 int c = 0;||| 89 for (int i = 0; i < n; ++i) {||| 90 if (a[i] != b[i]) {||| 91 int need = pos[a[i]];||| 92 swap(b[i], b[need]);||| 93 pos[b[i]] = i, pos[b[need]] = need;||| 94 ++c;||| 95 }||| 96 }||| 97 if (c <= m) ans.push_back(x);||| 98 }||| 99 write(ans.size());||| 100 for (int i : ans) write(' ', i);||| 101 print();||| 102 }||| 103 int main() {||| 104 cin.tie(0)->sync_with_stdio(0);||| 105 int t;||| 106 read(t);||| 107 while (t--) solve();||| 108 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 void read(T &x) {||| 5 cin >> x;||| 6 }||| 7 template <class H, class T>||| 8 void read(pair<H, T> &p) {||| 9 cin >> p.first >> p.second;||| 10 }||| 11 template <class T, size_t S>||| 12 void read(array<T, S> &a) {||| 13 for (T &i : a) read(i);||| 14 }||| 15 template <class T>||| 16 void read(vector<T> &v) {||| 17 for (T &i : v) read(i);||| 18 }||| 19 template <class H, class... T>||| 20 void read(H &h, T &...t) {||| 21 read(h);||| 22 read(t...);||| 23 }||| 24 template <class H, class T>||| 25 ostream &operator<<(ostream &o, pair<H, T> &p) {||| 26 o << p.first << "" "" << p.second;||| 27 return o;||| 28 }||| 29 template <class T, size_t S>||| 30 ostream &operator<<(ostream &o, array<T, S> &a) {||| 31 string s;||| 32 for (T i : a) o << s << i, s = "" "";||| 33 return o;||| 34 }||| 35 template <class T>||| 36 ostream &operator<<(ostream &o, vector<T> &v) {||| 37 string s;||| 38 for (T i : v) o << s << i, s = "" "";||| 39 return o;||| 40 }||| 41 template <class T>||| 42 void write(T x) {||| 43 cout << x;||| 44 }||| 45 template <class H, class... T>||| 46 void write(const H &h, const T &...t) {||| 47 write(h);||| 48 write(t...);||| 49 }||| 50 void print() { write('\n'); }||| 51 template <class H, class... T>||| 52 void print(const H &h, const T &...t) {||| 53 write(h);||| 54 if (sizeof...(t)) write(' ');||| 55 print(t...);||| 56 }||| 57 template <class T>||| 58 bool ckmin(T &a, const T b) {||| 59 return (b < a) ? a = b, 1 : 0;||| 60 }||| 61 template <class T>||| 62 bool ckmax(T &a, const T b) {||| 63 return (a < b) ? a = b, 1 : 0;||| 64 }||| 65 using ll = long long;||| 66 void solve() {||| 67 int n, m;||| 68 read(n, m);||| 69 vector<int> a(n), cnt(n);||| 70 read(a);||| 71 for (int &i : a) --i;||| 72 for (int i = 0; i < n; ++i) {||| 73 int here;||| 74 if (a[i] > i)||| 75 here = n + i - a[i];||| 76 else||| 77 here = i - a[i];||| 78 ++cnt[here];||| 79 }||| 80 vector<int> cand, ans;||| 81 for (int i = 0; i < n; ++i)||| 82 if (cnt[i] + m * 2 >= n) cand.push_back(i);||| 83 for (int x : cand) {||| 84 vector<int> b(n), pos(n);||| 85 iota((b).begin(), (b).end(), 0);||| 86 rotate(b.begin(), b.begin() + (n - x), b.end());||| 87 for (int i = 0; i < n; ++i) pos[b[i]] = i;||| 88 int c = 0;||| 89 for (int i = 0; i < n; ++i) {||| 90 if (a[i] != b[i]) {||| 91 int need = pos[a[i]];||| 92 swap(b[i], b[need]);||| 93 pos[a[i]] = i, pos[b[i]] = need;||| 94 ++c;||| 95 }||| 96 }||| 97 if (c <= m) ans.push_back(x);||| 98 }||| 99 write(ans.size());||| 100 for (int i : ans) write(' ', i);||| 101 print();||| 102 }||| 103 int main() {||| 104 cin.tie(0)->sync_with_stdio(0);||| 105 int t;||| 106 read(t);||| 107 while (t--) solve();||| 108 }||| "	93 pos[b[i]] = i, pos[b[need]] = need;
28	173	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O2"")||| 3 using namespace std;||| 4 using namespace std::chrono;||| 5 long long mul(long long a, long long b) { return (a * b) % 1000000007; }||| 6 long long modinv(long long a) {||| 7 long long b = 1000000007 - 2;||| 8 long long A = a;||| 9 long long c = 1;||| 10 for (long long i = 0; i < 62; i++) {||| 11 if ((long long)1 << i & (b)) {||| 12 c = mul(c, A);||| 13 }||| 14 A *= A;||| 15 A %= 1000000007;||| 16 }||| 17 return c;||| 18 }||| 19 long long mul(long long a, long long b, long long c) {||| 20 return mul(mul(a, b), c);||| 21 }||| 22 long long nCr(long long n, long long r) {||| 23 long long num = 1;||| 24 long long den = 1;||| 25 long long k = max(r, n - r);||| 26 for (long long i = k + 1; i <= n; i++) {||| 27 num = mul(num, i);||| 28 }||| 29 for (long long i = 1; i <= n - k; i++) {||| 30 den = mul(den, i);||| 31 }||| 32 return mul(num, modinv(den));||| 33 }||| 34 long long gcd(long long x, long long y) {||| 35 if (y > x) {||| 36 return gcd(y, x);||| 37 } else if (y == 0) {||| 38 return x;||| 39 } else {||| 40 return gcd(y, x % y);||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(NULL);||| 46 ;||| 47 long long T;||| 48 cin >> T;||| 49 while (T--) {||| 50 long long n, m;||| 51 cin >> n >> m;||| 52 vector<long long> A(n + 1, 0);||| 53 vector<long long> pos(n + 1, 0);||| 54 vector<long long> correct(n + 1, 0);||| 55 for (long long i = 1; i < n + 1; i++) {||| 56 cin >> A[i];||| 57 pos[A[i]] = i;||| 58 }||| 59 map<long long, long long> mp;||| 60 for (long long i = 1; i < n + 1; i++) {||| 61 mp[A[i] - i]++;||| 62 }||| 63 vector<long long> ans;||| 64 for (long long i = 0; i < n; i++) {||| 65 long long total = mp[-1 * (i)];||| 66 if (i > 0) {||| 67 total += mp[(n - i)];||| 68 }||| 69 if (total >= (n - 2 * m)) {||| 70 for (long long j = 1; j < i + 1; j++) {||| 71 correct[j] = j + n - i;||| 72 }||| 73 for (long long j = i + 1; j < n + 1; j++) {||| 74 correct[j] = j - i;||| 75 }||| 76 vector<bool> visited(n + 1, 0);||| 77 total = 0;||| 78 for (long long i = 1; i < n + 1; i++) {||| 79 long long r = i;||| 80 ;||| 81 long long len = 0;||| 82 while (visited[r] == 0) {||| 83 visited[r] = 1;||| 84 len++;||| 85 r = pos[correct[r]];||| 86 }||| 87 if (len) {||| 88 total += len - 1;||| 89 }||| 90 }||| 91 if (total <= m) {||| 92 ans.push_back(i);||| 93 }||| 94 }||| 95 }||| 96 cout << ans.size() << "" "";||| 97 for (long long i = 0; i < ans.size(); i++) {||| 98 cout << ans[i] << "" "";||| 99 }||| 100 cout << endl;||| 101 ;||| 102 }||| 103 return 0;||| 104 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O2"")||| 3 using namespace std;||| 4 using namespace std::chrono;||| 5 long long mul(long long a, long long b) { return (a * b) % 1000000007; }||| 6 long long modinv(long long a) {||| 7 long long b = 1000000007 - 2;||| 8 long long A = a;||| 9 long long c = 1;||| 10 for (long long i = 0; i < 62; i++) {||| 11 if ((long long)1 << i & (b)) {||| 12 c = mul(c, A);||| 13 }||| 14 A *= A;||| 15 A %= 1000000007;||| 16 }||| 17 return c;||| 18 }||| 19 long long mul(long long a, long long b, long long c) {||| 20 return mul(mul(a, b), c);||| 21 }||| 22 long long nCr(long long n, long long r) {||| 23 long long num = 1;||| 24 long long den = 1;||| 25 long long k = max(r, n - r);||| 26 for (long long i = k + 1; i <= n; i++) {||| 27 num = mul(num, i);||| 28 }||| 29 for (long long i = 1; i <= n - k; i++) {||| 30 den = mul(den, i);||| 31 }||| 32 return mul(num, modinv(den));||| 33 }||| 34 long long gcd(long long x, long long y) {||| 35 if (y > x) {||| 36 return gcd(y, x);||| 37 } else if (y == 0) {||| 38 return x;||| 39 } else {||| 40 return gcd(y, x % y);||| 41 }||| 42 }||| 43 int32_t main() {||| 44 ios_base::sync_with_stdio(false);||| 45 cin.tie(NULL);||| 46 ;||| 47 long long T;||| 48 cin >> T;||| 49 while (T--) {||| 50 long long n, m;||| 51 cin >> n >> m;||| 52 vector<long long> A(n + 1, 0);||| 53 vector<long long> pos(n + 1, 0);||| 54 vector<long long> correct(n + 1, 0);||| 55 for (long long i = 1; i < n + 1; i++) {||| 56 cin >> A[i];||| 57 pos[A[i]] = i;||| 58 }||| 59 map<long long, long long> mp;||| 60 for (long long i = 1; i < n + 1; i++) {||| 61 mp[A[i] - i]++;||| 62 }||| 63 vector<long long> ans;||| 64 for (long long i = 0; i < n; i++) {||| 65 long long total = mp[-1 * (i)];||| 66 if (i > 0) {||| 67 total += mp[(n - i)];||| 68 }||| 69 if (total >= (n - 2 * m)) {||| 70 for (long long j = 1; j < i + 1; j++) {||| 71 correct[j] = j + n - i;||| 72 }||| 73 for (long long j = i + 1; j < n + 1; j++) {||| 74 correct[j] = j - i;||| 75 }||| 76 vector<bool> visited(n + 1, 0);||| 77 total = 0;||| 78 for (long long i = 1; i < n + 1; i++) {||| 79 long long r = i;||| 80 ;||| 81 long long len = 0;||| 82 if (visited[r] == 0) {||| 83 visited[r] = 1;||| 84 len++;||| 85 r = pos[correct[r]];||| 86 }||| 87 if (len) {||| 88 total += len - 1;||| 89 }||| 90 }||| 91 if (total <= m) {||| 92 ans.push_back(i);||| 93 }||| 94 }||| 95 }||| 96 cout << ans.size() << "" "";||| 97 for (long long i = 0; i < ans.size(); i++) {||| 98 cout << ans[i] << "" "";||| 99 }||| 100 cout << endl;||| 101 ;||| 102 }||| 103 return 0;||| 104 }||| "	82 while (visited[r] == 0) {
28	161	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long> vis(3e5 + 10, 0);||| 4 vector<long long> temp;||| 5 class graph {||| 6 private:||| 7 long long v;||| 8 list<long long>* adj;||| 9 ||| 10 public:||| 11 graph(long long x) {||| 12 v = x + 1;||| 13 adj = new list<long long>[v];||| 14 }||| 15 void adedge(long long a, long long b) {||| 16 adj[a].push_back(b);||| 17 adj[b].push_back(a);||| 18 }||| 19 void dfs(long long s);||| 20 void bfs(long long s);||| 21 };||| 22 void graph::dfs(long long s) {||| 23 vis[s] = 1;||| 24 temp.push_back(s);||| 25 list<long long>::iterator it;||| 26 for (it = adj[s].begin(); it != adj[s].end(); it++) {||| 27 if (!vis[*it]) {||| 28 dfs(*it);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(NULL);||| 35 long long t;||| 36 cin >> t;||| 37 while (t--) {||| 38 long long i, j, k, l, m, n;||| 39 cin >> n >> m;||| 40 long long arr[n + 1];||| 41 long long cnt[n];||| 42 memset(cnt, 0, sizeof cnt);||| 43 for (i = 1; i <= n; i++) {||| 44 cin >> arr[i];||| 45 long long pos = i, num = arr[i];||| 46 if (pos >= num)||| 47 cnt[pos - num] += 1;||| 48 else||| 49 cnt[n - num + pos] += 1;||| 50 }||| 51 vector<long long> ans;||| 52 for (i = 0; i < n; i++) {||| 53 long long a1 = cnt[i];||| 54 long long rem = n - cnt[i];||| 55 if (rem - 1 <= m)||| 56 ans.push_back(i);||| 57 else {||| 58 if (cnt[i] >= n - 2 * m) {||| 59 vector<long long> v2(n + 1, 0);||| 60 vector<long long> v1(n + 1, 0);||| 61 graph g(n);||| 62 for (j = 0; j <= n; j++) vis[j] = 0;||| 63 for (j = 1; j <= n; j++) {||| 64 long long x = n - i + 1;||| 65 if (j <= i)||| 66 v1[j] = n - i + j;||| 67 else||| 68 v1[j] = j - i;||| 69 if (arr[j] > n - i)||| 70 v2[j] = i - (n - arr[j]);||| 71 else||| 72 v2[j] = arr[j] + i;||| 73 g.adedge(j, v2[j]);||| 74 }||| 75 long long tot = 0;||| 76 for (j = 1; j <= n; j++) {||| 77 if (!vis[j]) {||| 78 temp.clear();||| 79 g.dfs(j);||| 80 tot += (long long)temp.size() - 1;||| 81 }||| 82 }||| 83 if (tot <= m) ans.push_back(i);||| 84 }||| 85 }||| 86 }||| 87 cout << (long long)ans.size() << "" "";||| 88 for (auto it : ans) cout << it << "" "";||| 89 cout << ""\n"";||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<long long> vis(3e5 + 10, 0);||| 4 vector<long long> temp;||| 5 class graph {||| 6 private:||| 7 long long v;||| 8 list<long long>* adj;||| 9 ||| 10 public:||| 11 graph(long long x) {||| 12 v = x + 1;||| 13 adj = new list<long long>[v];||| 14 }||| 15 void adedge(long long a, long long b) {||| 16 adj[a].push_back(b);||| 17 adj[b].push_back(a);||| 18 }||| 19 void dfs(long long s);||| 20 void bfs(long long s);||| 21 };||| 22 void graph::dfs(long long s) {||| 23 vis[s] = 1;||| 24 temp.push_back(s);||| 25 list<long long>::iterator it;||| 26 for (it = adj[s].begin(); it != adj[s].end(); it++) {||| 27 if (!vis[*it]) {||| 28 dfs(*it);||| 29 }||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(NULL);||| 35 long long t;||| 36 cin >> t;||| 37 while (t--) {||| 38 long long i, j, k, l, m, n;||| 39 cin >> n >> m;||| 40 long long arr[n + 1];||| 41 long long cnt[n];||| 42 memset(cnt, 0, sizeof cnt);||| 43 for (i = 1; i <= n; i++) {||| 44 cin >> arr[i];||| 45 long long pos = i, num = arr[i];||| 46 if (pos >= num)||| 47 cnt[pos - num] += 1;||| 48 else||| 49 cnt[n - num + pos] += 1;||| 50 }||| 51 vector<long long> ans;||| 52 for (i = 0; i < n; i++) {||| 53 long long a1 = cnt[i];||| 54 long long rem = n - cnt[i];||| 55 if (rem - 1 <= m)||| 56 ans.push_back(i);||| 57 else {||| 58 if (cnt[i] >= n - 2 * m) {||| 59 vector<long long> v2(n + 1, 0);||| 60 vector<long long> v1(n + 1, 0);||| 61 graph g(n);||| 62 for (j = 0; j <= n; j++) vis[j] = 0;||| 63 for (j = 1; j <= n; j++) {||| 64 long long x = n - i + 1;||| 65 if (j <= i)||| 66 v1[j] = n - i + j;||| 67 else||| 68 v1[j] = j - i;||| 69 if (arr[j] > n - i)||| 70 v2[j] = i - (n - arr[j]);||| 71 else||| 72 v2[j] = arr[j] + i;||| 73 g.adedge(j, v1[j]);||| 74 }||| 75 long long tot = 0;||| 76 for (j = 1; j <= n; j++) {||| 77 if (!vis[j]) {||| 78 temp.clear();||| 79 g.dfs(j);||| 80 tot += (long long)temp.size() - 1;||| 81 }||| 82 }||| 83 if (tot <= m) ans.push_back(i);||| 84 }||| 85 }||| 86 }||| 87 cout << (long long)ans.size() << "" "";||| 88 for (auto it : ans) cout << it << "" "";||| 89 cout << ""\n"";||| 90 }||| 91 return 0;||| 92 }||| "	73 g.adedge(j, v2[j]);
28	200	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Maxn = 300005;||| 4 int T, n, m, ct, x[Maxn], fa[Maxn], cnt[Maxn], ans[Maxn];||| 5 int get_fa(int x) { return x == fa[x] ? x : fa[x] = get_fa(fa[x]); }||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 ct = 0;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) cnt[i] = 0;||| 12 for (int i = 0; i < n; i++) {||| 13 scanf(""%d"", &x[i]);||| 14 x[i]--;||| 15 cnt[(i - x[i] + n) % n]++;||| 16 }||| 17 for (int i = 0; i < n; i++)||| 18 if (cnt[i] + 2 * m >= n) {||| 19 int tmp = 0;||| 20 for (int j = 0; j < n; j++) fa[j] = j;||| 21 for (int j = 0; j < n; j++)||| 22 if (get_fa(x[j]) != get_fa((j - i + n) % n))||| 23 tmp++, fa[get_fa((j - i + n) % n)] = get_fa(x[j]);||| 24 if (tmp <= m) ans[++ct] = i;||| 25 }||| 26 printf(""%d "", ct);||| 27 for (int i = 1; i <= ct; i++) printf(""%d "", ans[i]);||| 28 puts("""");||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Maxn = 300005;||| 4 int T, n, m, ct, x[Maxn], fa[Maxn], cnt[Maxn], ans[Maxn];||| 5 int get_fa(int x) { return x == fa[x] ? x : fa[x] = get_fa(fa[x]); }||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 ct = 0;||| 10 scanf(""%d%d"", &n, &m);||| 11 for (int i = 0; i < n; i++) cnt[i] = 0;||| 12 for (int i = 0; i < n; i++) {||| 13 scanf(""%d"", &x[i]);||| 14 x[i]--;||| 15 cnt[(i - x[i] + n) % n]++;||| 16 }||| 17 for (int i = 0; i < n; i++)||| 18 if (cnt[i] + 2 * m >= n) {||| 19 int tmp = 0;||| 20 for (int j = 0; j < n; j++) fa[i] = i;||| 21 for (int j = 0; j < n; j++)||| 22 if (get_fa(x[j]) != get_fa((j - i + n) % n))||| 23 tmp++, fa[get_fa((j - i + n) % n)] = get_fa(x[j]);||| 24 if (tmp <= m) ans[++ct] = i;||| 25 }||| 26 printf(""%d "", ct);||| 27 for (int i = 1; i <= ct; i++) printf(""%d "", ans[i]);||| 28 puts("""");||| 29 }||| 30 return 0;||| 31 }||| "	20 for (int j = 0; j < n; j++) fa[j] = j;
29	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 constexpr int N = 1e5 + 5;||| 7 constexpr int mod = 1e9 + 7;||| 8 constexpr int LOG = 18;||| 9 template <typename T>||| 10 void dout(const T& x) {||| 11 cout << x << ' ';||| 12 }||| 13 template <typename T, typename... Ts>||| 14 void dout(const T& v, const Ts&... args) {||| 15 dout(v);||| 16 dout(args...);||| 17 }||| 18 template <typename... Ts>||| 19 void vout(const Ts&... args) {||| 20 dout(args...);||| 21 cout << ""\n"";||| 22 exit(0);||| 23 }||| 24 struct seg_tree {||| 25 seg_tree(int n) : t(n << 2){};||| 26 void upd(int pos, int i, int l, int r) {||| 27 if (l + 1 == r) {||| 28 t[i] = 1;||| 29 return;||| 30 }||| 31 int mid = (l + r) >> 1;||| 32 if (pos < mid)||| 33 upd(pos, (i << 1) + 1, l, mid);||| 34 else||| 35 upd(pos, (i << 1) + 2, mid, r);||| 36 t[i] = t[(i << 1) + 1] + t[(i << 1) + 2];||| 37 }||| 38 int get(int l, int r, int i, int cl, int cr) {||| 39 if (l >= r) return 0;||| 40 if (l == cl && r == cr) return t[i];||| 41 int mid = (cl + cr) >> 1;||| 42 return (get(l, min(mid, r), (i << 1) + 1, cl, mid) +||| 43 get(max(l, mid), r, (i << 1) + 2, mid, cr));||| 44 }||| 45 void upd(int l, int r, ll val, int i, int cl, int cr) {||| 46 if (l >= r) return;||| 47 if (l == cl && r == cr) {||| 48 t[i] += val;||| 49 return;||| 50 }||| 51 int mid = (cl + cr) >> 1;||| 52 upd(l, min(mid, r), val, (i << 1) + 1, cl, mid);||| 53 upd(max(l, mid), r, val, (i << 1) + 2, mid, cr);||| 54 }||| 55 ll get(int pos, int i, int l, int r) {||| 56 if (l + 1 == r) return t[i];||| 57 int mid = (l + r) >> 1;||| 58 return (t[i] + (pos < mid ? get(pos, (i << 1) + 1, l, mid)||| 59 : get(pos, (i << 1) + 2, mid, r)));||| 60 }||| 61 ||| 62 private:||| 63 vector<ll> t;||| 64 };||| 65 int n;||| 66 vector<int> a;||| 67 void solve() {||| 68 cin >> n;||| 69 a.resize(n);||| 70 for (int& v : a) cin >> v;||| 71 ll pref_sum = 0;||| 72 ll f = 0;||| 73 ll s = 0;||| 74 int m = *max_element(a.begin(), a.end());||| 75 m++;||| 76 seg_tree tr1(m);||| 77 seg_tree tr2(m);||| 78 int cnt = 0;||| 79 for (int v : a) {||| 80 pref_sum += v;||| 81 f += pref_sum;||| 82 cnt++;||| 83 s += ll(v) * (cnt - 1);||| 84 for (int i = 0, j = 0; i < m; i += v, j++) {||| 85 f -= tr1.get(i, min(m, i + v), 0, 0, m) * ll(v) * j;||| 86 tr2.upd(i, min(m, i + v), -j * ll(v), 0, 0, m);||| 87 }||| 88 s += tr2.get(v, 0, 0, m);||| 89 tr1.upd(v, 0, 0, m);||| 90 cout << f + s << ' ';||| 91 }||| 92 }||| 93 int main() {||| 94 ios::sync_with_stdio(false);||| 95 cin.tie(nullptr);||| 96 cout.tie(nullptr);||| 97 solve();||| 98 return 0;||| 99 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 using pii = pair<int, int>;||| 6 constexpr int N = 1e5 + 5;||| 7 constexpr int mod = 1e9 + 7;||| 8 constexpr int LOG = 18;||| 9 template <typename T>||| 10 void dout(const T& x) {||| 11 cout << x << ' ';||| 12 }||| 13 template <typename T, typename... Ts>||| 14 void dout(const T& v, const Ts&... args) {||| 15 dout(v);||| 16 dout(args...);||| 17 }||| 18 template <typename... Ts>||| 19 void vout(const Ts&... args) {||| 20 dout(args...);||| 21 cout << ""\n"";||| 22 exit(0);||| 23 }||| 24 struct seg_tree {||| 25 seg_tree(int n) : t(n << 2){};||| 26 void upd(int pos, int i, int l, int r) {||| 27 if (l + 1 == r) {||| 28 t[i] = 1;||| 29 return;||| 30 }||| 31 int mid = (l + r) >> 1;||| 32 if (pos < mid)||| 33 upd(pos, (i << 1) + 1, l, mid);||| 34 else||| 35 upd(pos, (i << 1) + 2, mid, r);||| 36 t[i] = t[(i << 1) + 1] + t[(i << 1) + 2];||| 37 }||| 38 int get(int l, int r, int i, int cl, int cr) {||| 39 if (l >= r) return 0;||| 40 if (l == cl && r == cr) return t[i];||| 41 int mid = (cl + cr) >> 1;||| 42 return (get(l, min(mid, r), (i << 1) + 1, cl, mid) +||| 43 get(max(l, mid), r, (i << 1) + 2, mid, cr));||| 44 }||| 45 void upd(int l, int r, int val, int i, int cl, int cr) {||| 46 if (l >= r) return;||| 47 if (l == cl && r == cr) {||| 48 t[i] += val;||| 49 return;||| 50 }||| 51 int mid = (cl + cr) >> 1;||| 52 upd(l, min(mid, r), val, (i << 1) + 1, cl, mid);||| 53 upd(max(l, mid), r, val, (i << 1) + 2, mid, cr);||| 54 }||| 55 ll get(int pos, int i, int l, int r) {||| 56 if (l + 1 == r) return t[i];||| 57 int mid = (l + r) >> 1;||| 58 return (t[i] + (pos < mid ? get(pos, (i << 1) + 1, l, mid)||| 59 : get(pos, (i << 1) + 2, mid, r)));||| 60 }||| 61 ||| 62 private:||| 63 vector<int> t;||| 64 };||| 65 int n;||| 66 vector<int> a;||| 67 void solve() {||| 68 cin >> n;||| 69 a.resize(n);||| 70 for (int& v : a) cin >> v;||| 71 ll pref_sum = 0;||| 72 ll f = 0;||| 73 ll s = 0;||| 74 int m = *max_element(a.begin(), a.end());||| 75 m++;||| 76 seg_tree tr1(m);||| 77 seg_tree tr2(m);||| 78 int cnt = 0;||| 79 for (int v : a) {||| 80 pref_sum += v;||| 81 f += pref_sum;||| 82 cnt++;||| 83 s += ll(v) * (cnt - 1);||| 84 for (int i = 0, j = 0; i < m; i += v, j++) {||| 85 f -= tr1.get(i, min(m, i + v), 0, 0, m) * ll(v) * j;||| 86 tr2.upd(i, min(m, i + v), -j * ll(v), 0, 0, m);||| 87 }||| 88 s += tr2.get(v, 0, 0, m);||| 89 tr1.upd(v, 0, 0, m);||| 90 cout << f + s << ' ';||| 91 }||| 92 }||| 93 int main() {||| 94 ios::sync_with_stdio(false);||| 95 cin.tie(nullptr);||| 96 cout.tie(nullptr);||| 97 solve();||| 98 return 0;||| 99 }||| "	45 void upd(int l, int r, ll val, int i, int cl, int cr) {
29	86	"1 #include <bits/stdc++.h>||| 2 const double pi = acos(-1.0);||| 3 const double eps = 1e-9;||| 4 using namespace std;||| 5 const int N = 5e5 + 10;||| 6 struct Fenwick {||| 7 long long ft[N];||| 8 long long sum(int r) {||| 9 long long result = 0;||| 10 for (; r >= 0; r = (r & (r + 1)) - 1) result += ft[r];||| 11 return result;||| 12 }||| 13 long long sum(int l, int r) { return (l > r ? 0ll : sum(r) - sum(l - 1)); }||| 14 void inc(int i, long long delta) {||| 15 for (; i < N; i = (i | (i + 1))) ft[i] += delta;||| 16 }||| 17 } ft1, ft2;||| 18 void solve() {||| 19 int n;||| 20 cin >> n;||| 21 int MX = 3e5;||| 22 long long pref = 0, ans = 0;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x);||| 27 for (int j = x; j <= MX; j += x) {||| 28 int l = j;||| 29 int r = min(MX, l + x - 1);||| 30 ans -= ft2.sum(l, r) * j;||| 31 ft1.inc(l, x);||| 32 }||| 33 ft2.inc(x, 1);||| 34 cout << ans << "" "";||| 35 pref += x;||| 36 }||| 37 }||| 38 int main() {||| 39 ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);||| 40 cout.setf(ios::fixed), cout.precision(10);||| 41 int step = 1;||| 42 for (int i = 0; i < step; i++) {||| 43 solve();||| 44 }||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 const double pi = acos(-1.0);||| 3 const double eps = 1e-9;||| 4 using namespace std;||| 5 const int N = 5e5 + 10;||| 6 struct Fenwick {||| 7 long long ft[N];||| 8 long long sum(int r) {||| 9 long long result = 0;||| 10 for (; r >= 0; r = (r & (r + 1)) - 1) result += ft[r];||| 11 return result;||| 12 }||| 13 long long sum(int l, int r) { return (l > r ? 0ll : sum(r) - sum(l - 1)); }||| 14 void inc(int i, long long delta) {||| 15 for (; i < N; i = (i | (i + 1))) ft[i] += delta;||| 16 }||| 17 } ft1, ft2;||| 18 void solve() {||| 19 int n;||| 20 cin >> n;||| 21 int MX = 3e5;||| 22 long long pref = 0, ans = 0;||| 23 for (int i = 1; i <= n; i++) {||| 24 int x;||| 25 cin >> x;||| 26 ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x - 1);||| 27 for (int j = x; j <= MX; j += x) {||| 28 int l = j;||| 29 int r = min(MX, l + x - 1);||| 30 ans -= ft2.sum(l, r) * j;||| 31 ft1.inc(l, x);||| 32 }||| 33 ft2.inc(x, 1);||| 34 cout << ans << "" "";||| 35 pref += x;||| 36 }||| 37 }||| 38 int main() {||| 39 ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);||| 40 cout.setf(ios::fixed), cout.precision(10);||| 41 int step = 1;||| 42 for (int i = 0; i < step; i++) {||| 43 solve();||| 44 }||| 45 }||| "	26 ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x);
29	10	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class T = int>||| 5 T rd() {||| 6 T res = 0;||| 7 T fg = 1;||| 8 char ch = getchar();||| 9 while (!isdigit(ch)) {||| 10 if (ch == '-') fg = -1;||| 11 ch = getchar();||| 12 }||| 13 while (isdigit(ch)) res = (res << 1) + (res << 3) + (ch ^ 48), ch = getchar();||| 14 return res * fg;||| 15 }||| 16 const int N = 300010;||| 17 template <typename T = int>||| 18 struct Fenwick {||| 19 const int n;||| 20 T t[N];||| 21 Fenwick(int n) : n(n) { memset(t, 0, sizeof t); }||| 22 void add(int k, T v) {||| 23 for (; k <= n; k += k & -k) t[k] += v;||| 24 }||| 25 T qsum(int k) {||| 26 T v = 0;||| 27 for (; k; k -= k & -k) v += t[k];||| 28 return v;||| 29 }||| 30 T get(int l, int r) { return qsum(r) - qsum(l - 1); }||| 31 };||| 32 int n;||| 33 int a[N];||| 34 int main() {||| 35 n = rd();||| 36 for (int i = 1; i <= n; i++) a[i] = rd();||| 37 Fenwick<ll> f1(300000), f2(300000);||| 38 ll pre = 0, ans = 0;||| 39 for (int i = 1; i <= n; i++) {||| 40 ans += 1ll * a[i] * (i - 1);||| 41 ans += pre;||| 42 ans -= f1.qsum(a[i]);||| 43 for (int j = a[i]; j <= 300000; j += a[i]) {||| 44 int l = j, r = min(300000, j + a[i] - 1);||| 45 ans -= f2.get(l, r) * j;||| 46 f1.add(l, a[i]);||| 47 }||| 48 f2.add(a[i], 1);||| 49 pre += a[i];||| 50 printf(""%lld%c"", ans, "" \n""[i == n]);||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 template <class T = int>||| 5 T rd() {||| 6 T res = 0;||| 7 T fg = 1;||| 8 char ch = getchar();||| 9 while (!isdigit(ch)) {||| 10 if (ch == '-') fg = -1;||| 11 ch = getchar();||| 12 }||| 13 while (isdigit(ch)) res = (res << 1) + (res << 3) + (ch ^ 48), ch = getchar();||| 14 return res * fg;||| 15 }||| 16 const int N = 300010;||| 17 template <typename T = int>||| 18 struct Fenwick {||| 19 const int n;||| 20 T t[N];||| 21 Fenwick(int n) : n(n) { memset(t, 0, sizeof t); }||| 22 void add(int k, T v) {||| 23 for (; k <= n; k += k & -k) t[k] += v;||| 24 }||| 25 T qsum(int k) {||| 26 T v = 0;||| 27 for (; k; k -= k & -k) v += t[k];||| 28 return v;||| 29 }||| 30 T get(int l, int r) { return qsum(r) - qsum(l - 1); }||| 31 };||| 32 int n;||| 33 int a[N];||| 34 int main() {||| 35 n = rd();||| 36 for (int i = 1; i <= n; i++) a[i] = rd();||| 37 Fenwick<ll> f1(300000), f2(300000);||| 38 ll pre = 0, ans = 0;||| 39 for (int i = 1; i <= n; i++) {||| 40 ans += a[i] * (i - 1);||| 41 ans += pre;||| 42 ans -= f1.qsum(a[i]);||| 43 for (int j = a[i]; j <= 300000; j += a[i]) {||| 44 int l = j, r = min(300000, j + a[i] - 1);||| 45 ans -= f2.get(l, r) * j;||| 46 f1.add(l, a[i]);||| 47 }||| 48 f2.add(a[i], 1);||| 49 pre += a[i];||| 50 printf(""%lld%c"", ans, "" \n""[i == n]);||| 51 }||| 52 return 0;||| 53 }||| "	40 ans += 1ll * a[i] * (i - 1);
29	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct fenwick {||| 5 int n;||| 6 vector<T> t;||| 7 T sum(int r) {||| 8 if (r < 0) return 0;||| 9 r = min(r, n - 1);||| 10 T ans = 0;||| 11 for (; r >= 0; r = (r & (r + 1)) - 1) ans += t[r];||| 12 return ans;||| 13 }||| 14 T sum(int l, int r) { return sum(r) - sum(l - 1); }||| 15 void inc(int x, T y) {||| 16 for (; x < n; x |= x + 1) t[x] += y;||| 17 }||| 18 fenwick(int n) : n(n), t(n, 0) {}||| 19 };||| 20 constexpr int SPLIT = 550;||| 21 constexpr int MAX = 3e5 + 5;||| 22 int main() {||| 23 ios_base::sync_with_stdio(0);||| 24 int n;||| 25 cin >> n;||| 26 vector<int> a(n);||| 27 for (int i = 0; i < n; i++) {||| 28 cin >> a[i];||| 29 }||| 30 vector<long long> res_ans(n);||| 31 long long ans = 0;||| 32 {||| 33 fenwick<int> cnt(MAX);||| 34 fenwick<long long> sum(MAX);||| 35 fenwick<long long> remd(MAX);||| 36 for (int i = 0; i < n; i++) {||| 37 int num = a[i];||| 38 int cnt_lo = cnt.sum(num);||| 39 int cnt_hi = i - cnt_lo;||| 40 ans += sum.sum(num);||| 41 ans += num * 1ll * cnt_hi;||| 42 ans += num * 1ll * cnt_lo;||| 43 ans += remd.sum(num);||| 44 if (num < SPLIT) {||| 45 for (int j = 0; j < i; j++) {||| 46 if (a[j] > num) ans += a[j] % num;||| 47 }||| 48 } else {||| 49 ans += sum.sum(MAX) - sum.sum(num);||| 50 int prev = cnt.sum(num - 1);||| 51 for (int cur = num; cur < MAX; cur += num) {||| 52 int nowcnt = cnt.sum(cur + num - 1);||| 53 ans -= (nowcnt - prev) * 1ll * cur;||| 54 prev = nowcnt;||| 55 }||| 56 }||| 57 cnt.inc(num, 1);||| 58 sum.inc(num, num);||| 59 for (int j = num; j < MAX; j += num) {||| 60 remd.inc(j, -num);||| 61 }||| 62 res_ans[i] = ans;||| 63 }||| 64 }||| 65 fenwick<long long> remd2(MAX);||| 66 fenwick<long long> cnt2(MAX);||| 67 for (auto it : res_ans) cout << it << "" "";||| 68 cout << endl;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct fenwick {||| 5 int n;||| 6 vector<T> t;||| 7 T sum(int r) {||| 8 if (r < 0) return 0;||| 9 r = min(r, n - 1);||| 10 T ans = 0;||| 11 for (; r >= 0; r = (r & (r + 1)) - 1) ans += t[r];||| 12 return ans;||| 13 }||| 14 T sum(int l, int r) { return sum(r) - sum(l - 1); }||| 15 void inc(int x, T y) {||| 16 for (; x < n; x |= x + 1) t[x] += y;||| 17 }||| 18 fenwick(int n) : n(n), t(n, 0) {}||| 19 };||| 20 constexpr int SPLIT = 550;||| 21 constexpr int MAX = 3e5 + 5;||| 22 int main() {||| 23 ios_base::sync_with_stdio(0);||| 24 int n;||| 25 cin >> n;||| 26 vector<int> a(n);||| 27 for (int i = 0; i < n; i++) {||| 28 cin >> a[i];||| 29 }||| 30 vector<long long> res_ans(n);||| 31 long long ans = 0;||| 32 {||| 33 fenwick<int> cnt(MAX);||| 34 fenwick<long long> sum(MAX);||| 35 fenwick<long long> remd(MAX);||| 36 for (int i = 0; i < n; i++) {||| 37 int num = a[i];||| 38 int cnt_lo = cnt.sum(num);||| 39 int cnt_hi = i - cnt_lo;||| 40 ans += sum.sum(num);||| 41 ans += num * 1ll * cnt_hi;||| 42 ans += num * 1ll * cnt_lo;||| 43 ans += remd.sum(num);||| 44 if (num < SPLIT) {||| 45 for (int j = 0; j < i; j++) {||| 46 if (a[j] > num) ans += a[j] % num;||| 47 }||| 48 } else {||| 49 ans += sum.sum(MAX) - sum.sum(num);||| 50 int prev = cnt.sum(num - 1);||| 51 for (int cur = num; cur < MAX; cur += num) {||| 52 int nowcnt = cnt.sum(cur + num - 1);||| 53 ans -= (nowcnt - prev) * cur;||| 54 prev = nowcnt;||| 55 }||| 56 }||| 57 cnt.inc(num, 1);||| 58 sum.inc(num, num);||| 59 for (int j = num; j < MAX; j += num) {||| 60 remd.inc(j, -num);||| 61 }||| 62 res_ans[i] = ans;||| 63 }||| 64 }||| 65 fenwick<long long> remd2(MAX);||| 66 fenwick<long long> cnt2(MAX);||| 67 for (auto it : res_ans) cout << it << "" "";||| 68 cout << endl;||| 69 }||| "	53 ans -= (nowcnt - prev) * 1ll * cur;
29	17	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 7e5 + 113;||| 4 struct fenw {||| 5 vector<long long> t;||| 6 void init() { t.assign(N, 0); }||| 7 long long getsum(int r) {||| 8 long long result = 0;||| 9 for (; r >= 0; r = (r & (r + 1)) - 1) result += t[r];||| 10 return result;||| 11 }||| 12 void inc(int i, long long delta) {||| 13 for (; i < N; i = (i | (i + 1))) t[i] += delta;||| 14 }||| 15 long long sum_pos(int pos) {||| 16 if (pos == 0) return getsum(pos);||| 17 return getsum(pos);||| 18 }||| 19 void inc_segment(int l, int r, long long val) {||| 20 inc(l, val);||| 21 inc(r + 1, -val);||| 22 }||| 23 long long sum_segment(int l, int r) { return getsum(r) - getsum(l - 1); }||| 24 };||| 25 signed main() {||| 26 cin.tie(NULL);||| 27 ios_base::sync_with_stdio(false);||| 28 int n;||| 29 cin >> n;||| 30 fenw f1, f2, f3;||| 31 f1.init(), f2.init(), f3.init();||| 32 long long res = 0;||| 33 for (int i = 0; i < n; i++) {||| 34 int a;||| 35 cin >> a;||| 36 long long pr = 0;||| 37 res += f3.sum_pos(a) + (long long)a * i;||| 38 for (int j = a - 1; j < N; j += a) {||| 39 res += f1.sum_segment(j - a + 1, j) - f2.sum_segment(j - a + 1, j) * pr;||| 40 f3.inc_segment(j - a + 1, j, -pr);||| 41 pr += a;||| 42 }||| 43 f1.inc(a, a);||| 44 f2.inc(a, 1);||| 45 cout << res << ' ';||| 46 }||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4e5 + 113;||| 4 struct fenw {||| 5 vector<long long> t;||| 6 void init() { t.assign(N, 0); }||| 7 long long getsum(int r) {||| 8 long long result = 0;||| 9 for (; r >= 0; r = (r & (r + 1)) - 1) result += t[r];||| 10 return result;||| 11 }||| 12 void inc(int i, long long delta) {||| 13 for (; i < N; i = (i | (i + 1))) t[i] += delta;||| 14 }||| 15 long long sum_pos(int pos) {||| 16 if (pos == 0) return getsum(pos);||| 17 return getsum(pos);||| 18 }||| 19 void inc_segment(int l, int r, long long val) {||| 20 inc(l, val);||| 21 inc(r + 1, -val);||| 22 }||| 23 long long sum_segment(int l, int r) { return getsum(r) - getsum(l - 1); }||| 24 };||| 25 signed main() {||| 26 cin.tie(NULL);||| 27 ios_base::sync_with_stdio(false);||| 28 int n;||| 29 cin >> n;||| 30 fenw f1, f2, f3;||| 31 f1.init(), f2.init(), f3.init();||| 32 long long res = 0;||| 33 for (int i = 0; i < n; i++) {||| 34 int a;||| 35 cin >> a;||| 36 long long pr = 0;||| 37 res += f3.sum_pos(a) + (long long)a * i;||| 38 for (int j = a - 1; j < 20; j += a) {||| 39 res += f1.sum_segment(j - a + 1, j) - f2.sum_segment(j - a + 1, j) * pr;||| 40 f3.inc_segment(j - a + 1, j, -pr);||| 41 pr += a;||| 42 }||| 43 f1.inc(a, a);||| 44 f2.inc(a, 1);||| 45 cout << res << ' ';||| 46 }||| 47 }||| 	3 const int N = 7e5 + 113;
29	56	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char c = getchar();||| 6 while (!isdigit(c)) f ^= c == '-', c = getchar();||| 7 while (isdigit(c)) r = (r << 1) + (r << 3) + (c & 15), c = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 3e5 + 7;||| 11 int n, m, a[N];||| 12 struct b1t {||| 13 long long c[M];||| 14 inline void add(int p, int x) {||| 15 for (; p <= m; p += ((p) & -(p))) c[p] += x;||| 16 }||| 17 inline long long ask(int p) {||| 18 long long res = 0;||| 19 for (; p; p -= ((p) & -(p))) res += c[p];||| 20 return res;||| 21 }||| 22 } T1, T2;||| 23 int main() {||| 24 n = read();||| 25 for (int i = 1; i <= n; i++) a[i] = read(), m = max(m, a[i]);||| 26 long long ans = 0, sum = 0;||| 27 for (int j = 1; j <= n; j++) {||| 28 int x = a[j];||| 29 ans += sum + 1ll * (j - 1) * x - T2.ask(x), sum += x;||| 30 for (int i = x; i <= m; i += x) ans -= x * (j - 1 - T1.ask(i - 1));||| 31 T1.add(x, 1);||| 32 for (int i = x; i <= m; i += x) T2.add(i, x);||| 33 printf(""%lld "", ans);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int f = 1, r = 0;||| 5 char c = getchar();||| 6 while (!isdigit(c)) f ^= c == '-', c = getchar();||| 7 while (isdigit(c)) r = (r << 1) + (r << 3) + (c & 15), c = getchar();||| 8 return f ? r : -r;||| 9 }||| 10 const int N = 2e5 + 7, M = 3e5 + 7;||| 11 int n, m, a[N];||| 12 struct b1t {||| 13 long long c[M];||| 14 inline void add(int p, int x) {||| 15 for (; p <= m; p += ((p) & -(p))) c[p] += x;||| 16 }||| 17 inline long long ask(int p) {||| 18 long long res = 0;||| 19 for (; p; p -= ((p) & -(p))) res += c[p];||| 20 return res;||| 21 }||| 22 } T1, T2;||| 23 int main() {||| 24 n = read();||| 25 for (int i = 1; i <= n; i++) a[i] = read(), m = max(m, a[i]);||| 26 long long ans = 0, sum = 0;||| 27 for (int j = 1; j <= n; j++) {||| 28 int x = a[j];||| 29 ans += sum + (j - 1) * x - T2.ask(x), sum += x;||| 30 for (int i = x; i <= m; i += x) ans -= x * (j - 1 - T1.ask(i - 1));||| 31 T1.add(x, 1);||| 32 for (int i = x; i <= m; i += x) T2.add(i, x);||| 33 printf(""%lld "", ans);||| 34 }||| 35 return 0;||| 36 }||| "	29 ans += sum + 1ll * (j - 1) * x - T2.ask(x), sum += x;
30	113	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int f[1000005];||| 4 int Find(int first) {||| 5 if (f[first] == first) return first;||| 6 return f[first] = Find(f[first]);||| 7 }||| 8 int cnt[1000005];||| 9 int prime[1000005];||| 10 vector<int> v[1000005];||| 11 void solve() {||| 12 int n, q;||| 13 scanf(""%d %d"", &n, &q);||| 14 int a[200005];||| 15 for (int i = 1; i <= 1000000; i++) f[i] = i;||| 16 for (int i = 1; i <= n; i++) {||| 17 scanf(""%d"", &a[i]);||| 18 cnt[a[i]]++;||| 19 }||| 20 fill(prime, prime + 1000005, 1);||| 21 for (int i = 2; i < 1000005; i++) {||| 22 if (prime[i]) {||| 23 for (int j = i * 2; j < 1000005; j += i) prime[j] = 0;||| 24 }||| 25 }||| 26 for (int i = 2; i < 1000005; i++) {||| 27 int last = -1;||| 28 if (prime[i])||| 29 for (int j = i; j < 1000005; j += i) {||| 30 if (cnt[j]) {||| 31 if (last == -1)||| 32 last = Find(j);||| 33 else {||| 34 f[Find(j)] = last;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 for (int i = 2; i < 1000005; i++) {||| 40 int last = -1;||| 41 if (prime[i]) {||| 42 for (int j = i; j < 1000005; j += i) {||| 43 if (cnt[j]) {||| 44 last = Find(j);||| 45 break;||| 46 }||| 47 }||| 48 for (int j = i; j < 1000005; j += i) {||| 49 if (cnt[j - 1]) {||| 50 v[j].push_back(last);||| 51 }||| 52 }||| 53 }||| 54 }||| 55 for (int i = 1; i <= n; i++) {||| 56 v[a[i] + 1].push_back(Find(a[i]));||| 57 }||| 58 vector<pair<int, int> > s;||| 59 for (int i = 1; i <= 1000001; i++) {||| 60 if (v[i].size()) {||| 61 sort(v[i].begin(), v[i].end());||| 62 v[i].resize(unique(v[i].begin(), v[i].end()) - v[i].begin());||| 63 for (int j = 0; j < v[i].size(); j++) {||| 64 for (int k = j + 1; k < v[i].size(); k++) {||| 65 if (v[i][j] < v[i][k])||| 66 s.push_back(make_pair(v[i][j], v[i][k]));||| 67 else {||| 68 s.push_back(make_pair(v[i][k], v[i][j]));||| 69 }||| 70 }||| 71 }||| 72 }||| 73 }||| 74 sort(s.begin(), s.end());||| 75 while (q--) {||| 76 int first, second;||| 77 scanf(""%d %d"", &first, &second);||| 78 first = Find(a[first]);||| 79 second = Find(a[second]);||| 80 if (first > second) swap(first, second);||| 81 if (first == second)||| 82 printf(""0\n"");||| 83 else {||| 84 auto it = lower_bound(s.begin(), s.end(), make_pair(first, second));||| 85 if (it != s.end() && *it == make_pair(first, second))||| 86 printf(""1\n"");||| 87 else||| 88 printf(""2\n"");||| 89 }||| 90 }||| 91 }||| 92 int main() {||| 93 int t = 1;||| 94 while (t--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int f[1000005];||| 4 int Find(int first) {||| 5 if (f[first] == first) return first;||| 6 return f[first] = Find(f[first]);||| 7 }||| 8 int cnt[1000005];||| 9 int prime[1000005];||| 10 vector<int> v[1000005];||| 11 void solve() {||| 12 int n, q;||| 13 scanf(""%d %d"", &n, &q);||| 14 int a[200005];||| 15 for (int i = 1; i <= 1000000; i++) f[i] = i;||| 16 for (int i = 1; i <= n; i++) {||| 17 scanf(""%d"", &a[i]);||| 18 cnt[a[i]]++;||| 19 }||| 20 fill(prime, prime + 1000005, 1);||| 21 for (int i = 2; i < 1000005; i++) {||| 22 if (prime[i]) {||| 23 for (int j = i * 2; j < 1000005; j += i) prime[j] = 0;||| 24 }||| 25 }||| 26 for (int i = 2; i < 1000005; i++) {||| 27 int last = -1;||| 28 if (prime[i])||| 29 for (int j = i; j < 1000005; j += i) {||| 30 if (cnt[j]) {||| 31 if (last == -1)||| 32 last = Find(j);||| 33 else {||| 34 f[Find(j)] = last;||| 35 }||| 36 }||| 37 }||| 38 }||| 39 for (int i = 2; i < 1000005; i++) {||| 40 int last = -1;||| 41 if (prime[i]) {||| 42 for (int j = i; j < 1000005; j += i) {||| 43 if (cnt[j]) {||| 44 last = Find(j);||| 45 break;||| 46 }||| 47 }||| 48 for (int j = i; j < 1000005; j += i) {||| 49 if (cnt[j - 1]) {||| 50 v[j].push_back(last);||| 51 }||| 52 }||| 53 }||| 54 }||| 55 for (int i = 1; i <= n; i++) {||| 56 v[a[i] + 1].push_back(Find(a[i]));||| 57 }||| 58 vector<pair<int, int> > s;||| 59 for (int i = 1; i <= 1000000; i++) {||| 60 if (v[i].size()) {||| 61 sort(v[i].begin(), v[i].end());||| 62 v[i].resize(unique(v[i].begin(), v[i].end()) - v[i].begin());||| 63 for (int j = 0; j < v[i].size(); j++) {||| 64 for (int k = j + 1; k < v[i].size(); k++) {||| 65 if (v[i][j] < v[i][k])||| 66 s.push_back(make_pair(v[i][j], v[i][k]));||| 67 else {||| 68 s.push_back(make_pair(v[i][k], v[i][j]));||| 69 }||| 70 }||| 71 }||| 72 }||| 73 }||| 74 sort(s.begin(), s.end());||| 75 while (q--) {||| 76 int first, second;||| 77 scanf(""%d %d"", &first, &second);||| 78 first = Find(a[first]);||| 79 second = Find(a[second]);||| 80 if (first > second) swap(first, second);||| 81 if (first == second)||| 82 printf(""0\n"");||| 83 else {||| 84 auto it = lower_bound(s.begin(), s.end(), make_pair(first, second));||| 85 if (it != s.end() && *it == make_pair(first, second))||| 86 printf(""1\n"");||| 87 else||| 88 printf(""2\n"");||| 89 }||| 90 }||| 91 }||| 92 int main() {||| 93 int t = 1;||| 94 while (t--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	59 for (int i = 1; i <= 1000001; i++) {
30	24	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 333333, maxm = 1111111, mod = 998244353;||| 4 template <typename T>||| 5 inline void read(T &x) {||| 6 x = 0;||| 7 bool f = 0;||| 8 char ch = getchar();||| 9 while (ch < '0' || ch > '9') f |= ch == '-', ch = getchar();||| 10 while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();||| 11 if (f) x = -x;||| 12 }||| 13 int n, m, q, a[maxn], pr[maxn], pl, mn[maxm], fa[maxn], id[maxn], at[maxm];||| 14 bool vis[maxm];||| 15 map<pair<int, int>, bool> mp;||| 16 inline int getfa(int x) { return x == fa[x] ? x : fa[x] = getfa(fa[x]); }||| 17 inline void unite(int x, int y) {||| 18 x = getfa(x);||| 19 y = getfa(y);||| 20 if (x != y) fa[x] = y;||| 21 }||| 22 inline bool check(int x, int y) {||| 23 x = getfa(x);||| 24 y = getfa(y);||| 25 return x == y;||| 26 }||| 27 int main() {||| 28 read(n);||| 29 read(q);||| 30 for (int i = (1); i <= (n); i++) read(a[i]), m = max(m, a[i] + 1);||| 31 for (int i = (2); i <= (m); i++) {||| 32 if (!vis[i]) pr[++pl] = i, at[i] = pl + n, mn[i] = i;||| 33 for (int j = (1); j <= (pl); j++) {||| 34 if (i * pr[j] > m) break;||| 35 vis[i * pr[j]] = true;||| 36 mn[i * pr[j]] = pr[j];||| 37 if (i % pr[j] == 0) break;||| 38 }||| 39 }||| 40 for (int i = (1); i <= (n + pl); i++) fa[i] = i;||| 41 for (int i = (1); i <= (n); i++) {||| 42 int x = a[i];||| 43 while (x != 1) unite(i, at[mn[x]]), x /= mn[x];||| 44 }||| 45 for (int i = (1); i <= (n + pl); i++) id[i] = getfa(i);||| 46 for (int i = (1); i <= (n); i++) {||| 47 int x = a[i], tmp[111], tl = 0;||| 48 while (x != 1) tmp[++tl] = id[at[mn[x]]], x /= mn[x];||| 49 x = a[i] + 1;||| 50 while (x != 1) tmp[++tl] = id[at[mn[x]]], x /= mn[x];||| 51 sort(tmp + 1, tmp + tl + 1);||| 52 tl = unique(tmp + 1, tmp + tl + 1) - tmp - 1;||| 53 for (int j = (1); j <= (tl); j++)||| 54 for (int k = (1); k <= (tl); k++) mp[make_pair(tmp[j], tmp[k])] = true;||| 55 }||| 56 while (q--) {||| 57 int s, t;||| 58 read(s);||| 59 read(t);||| 60 s = id[s];||| 61 t = id[t];||| 62 if (s == t)||| 63 puts(""0"");||| 64 else if (mp[make_pair(s, t)])||| 65 puts(""1"");||| 66 else||| 67 puts(""2"");||| 68 }||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 333333, maxm = 1111111, mod = 998244353;||| 4 template <typename T>||| 5 inline void read(T &x) {||| 6 x = 0;||| 7 bool f = 0;||| 8 char ch = getchar();||| 9 while (ch < '0' || ch > '9') f |= ch == '-', ch = getchar();||| 10 while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();||| 11 if (f) x = -x;||| 12 }||| 13 int n, m, q, a[maxn], pr[maxn], pl, mn[maxm], fa[maxn], id[maxn], at[maxn];||| 14 bool vis[maxm];||| 15 map<pair<int, int>, bool> mp;||| 16 inline int getfa(int x) { return x == fa[x] ? x : fa[x] = getfa(fa[x]); }||| 17 inline void unite(int x, int y) {||| 18 x = getfa(x);||| 19 y = getfa(y);||| 20 if (x != y) fa[x] = y;||| 21 }||| 22 inline bool check(int x, int y) {||| 23 x = getfa(x);||| 24 y = getfa(y);||| 25 return x == y;||| 26 }||| 27 int main() {||| 28 read(n);||| 29 read(q);||| 30 for (int i = (1); i <= (n); i++) read(a[i]), m = max(m, a[i] + 1);||| 31 for (int i = (2); i <= (m); i++) {||| 32 if (!vis[i]) pr[++pl] = i, at[i] = pl + n, mn[i] = i;||| 33 for (int j = (1); j <= (pl); j++) {||| 34 if (i * pr[j] > m) break;||| 35 vis[i * pr[j]] = true;||| 36 mn[i * pr[j]] = pr[j];||| 37 if (i % pr[j] == 0) break;||| 38 }||| 39 }||| 40 for (int i = (1); i <= (n + pl); i++) fa[i] = i;||| 41 for (int i = (1); i <= (n); i++) {||| 42 int x = a[i];||| 43 while (x != 1) unite(i, at[mn[x]]), x /= mn[x];||| 44 }||| 45 for (int i = (1); i <= (n + pl); i++) id[i] = getfa(i);||| 46 for (int i = (1); i <= (n); i++) {||| 47 int x = a[i], tmp[111], tl = 0;||| 48 while (x != 1) tmp[++tl] = id[at[mn[x]]], x /= mn[x];||| 49 x = a[i] + 1;||| 50 while (x != 1) tmp[++tl] = id[at[mn[x]]], x /= mn[x];||| 51 sort(tmp + 1, tmp + tl + 1);||| 52 tl = unique(tmp + 1, tmp + tl + 1) - tmp - 1;||| 53 for (int j = (1); j <= (tl); j++)||| 54 for (int k = (1); k <= (tl); k++) mp[make_pair(tmp[j], tmp[k])] = true;||| 55 }||| 56 while (q--) {||| 57 int s, t;||| 58 read(s);||| 59 read(t);||| 60 s = id[s];||| 61 t = id[t];||| 62 if (s == t)||| 63 puts(""0"");||| 64 else if (mp[make_pair(s, t)])||| 65 puts(""1"");||| 66 else||| 67 puts(""2"");||| 68 }||| 69 }||| "	13 int n, m, q, a[maxn], pr[maxn], pl, mn[maxm], fa[maxn], id[maxn], at[maxm];
31	51	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1000005], tans[22][1000005], b[1000005], c[1000005];||| 4 void solve(int k, int l, int r) {||| 5 if (l >= r) return;||| 6 int lim = (1 << (k - 1));||| 7 for (int i = 0; i < (1 << k); i++) b[i] = -1e9, c[i] = 1e9;||| 8 int mid = l - 1;||| 9 while (mid < r && ((a[mid + 1] >> (k - 1)) & 1) == 0) mid++;||| 10 int mn = max(0, lim - m), mx = min((1 << k) - 1, lim + m);||| 11 for (int i = l; i <= r; i++) {||| 12 int u = a[i] & ((1 << k) - 1);||| 13 for (int j = mn; j < lim; j++) b[u ^ j] = max(b[u ^ j], j);||| 14 for (int j = lim; j <= mx; j++) c[u ^ j] = min(c[u ^ j], j);||| 15 }||| 16 for (int i = 0; i < (1 << k); i++) tans[k][i] = min(tans[k][i], c[i] - b[i]);||| 17 solve(k - 1, l, mid);||| 18 solve(k - 1, mid + 1, r);||| 19 }||| 20 int k;||| 21 int main() {||| 22 scanf(""%d%d"", &n, &k);||| 23 m = ((1 << k) - 1) / (n - 1);||| 24 for (int j = 1; j <= k; j++)||| 25 for (int i = 0; i < (1 << j); i++) tans[j][i] = m;||| 26 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 27 sort(a + 1, a + n + 1);||| 28 solve(k, 1, n);||| 29 for (int i = 0; i < (1 << k); i++) {||| 30 int ans = 1e9;||| 31 for (int j = 1; j <= k; j++) ans = min(ans, tans[j][i & ((1 << j) - 1)]);||| 32 printf(""%d "", ans);||| 33 }||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, a[1000005], tans[22][1000005], b[1000005], c[1000005];||| 4 void solve(int k, int l, int r) {||| 5 if (l >= r) return;||| 6 int lim = (1 << (k - 1));||| 7 for (int i = 0; i < (1 << k); i++) b[i] = -1e9, c[i] = 1e9;||| 8 int mid = l;||| 9 while (mid < r && ((a[mid + 1] >> (k - 1)) & 1) == 0) mid++;||| 10 int mn = max(0, lim - m), mx = min((1 << k) - 1, lim + m);||| 11 for (int i = l; i <= r; i++) {||| 12 int u = a[i] & ((1 << k) - 1);||| 13 for (int j = mn; j < lim; j++) b[u ^ j] = max(b[u ^ j], j);||| 14 for (int j = lim; j <= mx; j++) c[u ^ j] = min(c[u ^ j], j);||| 15 }||| 16 for (int i = 0; i < (1 << k); i++) tans[k][i] = min(tans[k][i], c[i] - b[i]);||| 17 solve(k - 1, l, mid);||| 18 solve(k - 1, mid + 1, r);||| 19 }||| 20 int k;||| 21 int main() {||| 22 scanf(""%d%d"", &n, &k);||| 23 m = ((1 << k) - 1) / (n - 1);||| 24 for (int j = 1; j <= k; j++)||| 25 for (int i = 0; i < (1 << j); i++) tans[j][i] = m;||| 26 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 27 sort(a + 1, a + n + 1);||| 28 solve(k, 1, n);||| 29 for (int i = 0; i < (1 << k); i++) {||| 30 int ans = 1e9;||| 31 for (int j = 1; j <= k; j++) ans = min(ans, tans[j][i & ((1 << j) - 1)]);||| 32 printf(""%d "", ans);||| 33 }||| 34 return 0;||| 35 }||| "	8 int mid = l - 1;
31	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int K = 19, N = 1 << K, INF = 0x3f3f3f3f;||| 4 int n, k, cnt[N], a[N], ans[K][N];||| 5 vector<int> b[N], c[N];||| 6 void ckmin(int &x, int y) {||| 7 if (y < x) x = y;||| 8 }||| 9 void calc(vector<int> v, int s, int t) {||| 10 if (v.size() < 2) return;||| 11 if (s < t) {||| 12 for (int i = 0; i < 1 << t; i++)||| 13 ckmin(ans[s][i], abs((v[0] ^ i) - (v[1] ^ i)));||| 14 return;||| 15 }||| 16 for (int i = 0; i < 1 << (s + 1); i++) c[i].clear();||| 17 for (int i = 0; i < 1 << t; i++)||| 18 for (auto u : v) {||| 19 int to = i ^ (1 << s);||| 20 c[to ^ u].push_back(to), to = i ^ (((1 << (s - t)) - 1) << t),||| 21 c[to ^ u].push_back(to);||| 22 }||| 23 for (int i = 0; i < 1 << (s + 1); i++) {||| 24 int mn = INF;||| 25 sort(c[i].begin(), c[i].end());||| 26 for (int j = 1; j < c[i].size(); j++) ckmin(mn, c[i][j] - c[i][j - 1]);||| 27 ckmin(ans[s][i], mn);||| 28 }||| 29 return;||| 30 }||| 31 int main() {||| 32 scanf(""%d%d"", &n, &k);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 34 int p = 0;||| 35 for (int i = 1; i <= k; i++) {||| 36 int mx = 0;||| 37 for (int j = 0; j < 1 << k; j++) cnt[j] = 0;||| 38 for (int j = 0; j < n; j++) cnt[a[j] >> i]++;||| 39 for (int j = 0; j < 1 << k; j++) mx = max(mx, cnt[j]);||| 40 if (mx > 1) {||| 41 p = i;||| 42 break;||| 43 }||| 44 }||| 45 memset(ans, 0x3f, sizeof(ans));||| 46 for (int i = p - 1; i < k; i++) {||| 47 for (int j = 0; j < 1 << (k - i - 1); j++) b[j].clear();||| 48 for (int j = 0; j < n; j++)||| 49 b[a[j] >> (i + 1)].push_back(a[j] & ((1 << (i + 1)) - 1));||| 50 for (int j = 0; j < 1 << (k - i - 1); j++) calc(b[j], i, p);||| 51 }||| 52 for (int i = 0; i < 1 << k; i++) {||| 53 int mn = INF;||| 54 for (int j = p - 1; j < k; j++) ckmin(mn, ans[j][i & ((1 << (j + 1)) - 1)]);||| 55 printf(""%d "", mn);||| 56 }||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int K = 19, N = 1 << K, INF = 0x3f3f3f3f;||| 4 int n, k, cnt[N], a[N], ans[K][K];||| 5 vector<int> b[N], c[N];||| 6 void ckmin(int &x, int y) {||| 7 if (y < x) x = y;||| 8 }||| 9 void calc(vector<int> v, int s, int t) {||| 10 if (v.size() < 2) return;||| 11 if (s < t) {||| 12 for (int i = 0; i < 1 << t; i++)||| 13 ckmin(ans[s][i], abs((v[0] ^ i) - (v[1] ^ i)));||| 14 return;||| 15 }||| 16 for (int i = 0; i < 1 << (s + 1); i++) c[i].clear();||| 17 for (int i = 0; i < 1 << t; i++)||| 18 for (auto u : v) {||| 19 int to = i ^ (1 << s);||| 20 c[to ^ u].push_back(to), to = i ^ (((1 << (s - t)) - 1) << t),||| 21 c[to ^ u].push_back(to);||| 22 }||| 23 for (int i = 0; i < 1 << (s + 1); i++) {||| 24 int mn = INF;||| 25 sort(c[i].begin(), c[i].end());||| 26 for (int j = 1; j < c[i].size(); j++) ckmin(mn, c[i][j] - c[i][j - 1]);||| 27 ckmin(ans[s][i], mn);||| 28 }||| 29 return;||| 30 }||| 31 int main() {||| 32 scanf(""%d%d"", &n, &k);||| 33 for (int i = 0; i < n; i++) scanf(""%d"", &a[i]);||| 34 int p = 0;||| 35 for (int i = 1; i <= k; i++) {||| 36 int mx = 0;||| 37 for (int j = 0; j < 1 << k; j++) cnt[j] = 0;||| 38 for (int j = 0; j < n; j++) cnt[a[j] >> i]++;||| 39 for (int j = 0; j < 1 << k; j++) mx = max(mx, cnt[j]);||| 40 if (mx > 1) {||| 41 p = i;||| 42 break;||| 43 }||| 44 }||| 45 memset(ans, 0x3f, sizeof(ans));||| 46 for (int i = p - 1; i < k; i++) {||| 47 for (int j = 0; j < 1 << (k - i - 1); j++) b[j].clear();||| 48 for (int j = 0; j < n; j++)||| 49 b[a[j] >> (i + 1)].push_back(a[j] & ((1 << (i + 1)) - 1));||| 50 for (int j = 0; j < 1 << (k - i - 1); j++) calc(b[j], i, p);||| 51 }||| 52 for (int i = 0; i < 1 << k; i++) {||| 53 int mn = INF;||| 54 for (int j = p - 1; j < k; j++) ckmin(mn, ans[j][i & ((1 << (j + 1)) - 1)]);||| 55 printf(""%d "", mn);||| 56 }||| 57 }||| "	4 int n, k, cnt[N], a[N], ans[K][N];
31	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Node {||| 4 static const int MAX = 1 << 22;||| 5 int low{MAX};||| 6 int high{-MAX};||| 7 int diff{MAX};||| 8 operator bool() const { return low < MAX; }||| 9 };||| 10 void merge(vector<Node> &v, const int &start, const int &half_step) {||| 11 for (int i = start; i < start + half_step; ++i) {||| 12 const int only_diff = min(v[i].diff, v[i + half_step].diff);||| 13 const int diff1 = min(only_diff, v[i + half_step].low - v[i].high);||| 14 const int diff2 = min(only_diff, (v[i].low ^ half_step) -||| 15 (v[i + half_step].high ^ half_step));||| 16 v[i].diff = diff1;||| 17 v[i + half_step].diff = diff2;||| 18 const int low1 = min(v[i].low, v[i + half_step].low);||| 19 const int low2 =||| 20 min(v[i].low ^ half_step, v[i + half_step].low ^ half_step);||| 21 v[i].low = low1;||| 22 v[i + half_step].low = low2;||| 23 const int high1 = max(v[i].high, v[i + half_step].high);||| 24 const int high2 =||| 25 max(v[i].high ^ half_step, v[i + half_step].high ^ half_step);||| 26 v[i].high = high1;||| 27 v[i + half_step].high = high2;||| 28 }||| 29 }||| 30 int main() {||| 31 int n, k;||| 32 cin >> n >> k;||| 33 int num = 1 << k;||| 34 vector<Node> first_round(num);||| 35 for (; n > 0; --n) {||| 36 int a;||| 37 cin >> a;||| 38 first_round[a].low = a;||| 39 first_round[a].high = a;||| 40 }||| 41 for (int deg = 0; deg < k; ++deg) {||| 42 const int half_step = 1 << deg;||| 43 const int step = 2 * half_step;||| 44 for (int i = 0; i < num; i += step) merge(first_round, i, half_step);||| 45 }||| 46 for (int i = 0; i < num; ++i) cout << first_round[i].diff << "" "";||| 47 cout << endl;||| 48 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Node {||| 4 static const int MAX = 1 << 21;||| 5 int low{MAX};||| 6 int high{-1};||| 7 int diff{MAX};||| 8 operator bool() const { return low < MAX; }||| 9 };||| 10 void merge(vector<Node> &v, const int &start, const int &half_step) {||| 11 for (int i = start; i < start + half_step; ++i) {||| 12 const int only_diff = min(v[i].diff, v[i + half_step].diff);||| 13 const int diff1 = min(only_diff, v[i + half_step].low - v[i].high);||| 14 const int diff2 = min(only_diff, (v[i].low ^ half_step) -||| 15 (v[i + half_step].high ^ half_step));||| 16 v[i].diff = diff1;||| 17 v[i + half_step].diff = diff2;||| 18 const int low1 = min(v[i].low, v[i + half_step].low);||| 19 const int low2 =||| 20 min(v[i].low ^ half_step, v[i + half_step].low ^ half_step);||| 21 v[i].low = low1;||| 22 v[i + half_step].low = low2;||| 23 const int high1 = max(v[i].high, v[i + half_step].high);||| 24 const int high2 =||| 25 max(v[i].high ^ half_step, v[i + half_step].high ^ half_step);||| 26 v[i].high = high1;||| 27 v[i + half_step].high = high2;||| 28 }||| 29 }||| 30 int main() {||| 31 int n, k;||| 32 cin >> n >> k;||| 33 int num = 1 << k;||| 34 vector<Node> first_round(num);||| 35 for (; n > 0; --n) {||| 36 int a;||| 37 cin >> a;||| 38 first_round[a].low = a;||| 39 first_round[a].high = a;||| 40 }||| 41 for (int deg = 0; deg < k; ++deg) {||| 42 const int half_step = 1 << deg;||| 43 const int step = 2 * half_step;||| 44 for (int i = 0; i < num; i += step) merge(first_round, i, half_step);||| 45 }||| 46 for (int i = 0; i < num; ++i) cout << first_round[i].diff << "" "";||| 47 cout << endl;||| 48 }||| "	4 static const int MAX = 1 << 22;
34	139	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n, k;||| 5 cin >> n >> k;||| 6 vector<long long int> v(n);||| 7 for (long long int i = 0; i < n; i++) cin >> v[i];||| 8 long long int ans = -1e7, m1 = 0, m2 = INT_MAX;||| 9 m1 = v[0];||| 10 m2 = 1;||| 11 for (long long int i = 1; i < n; i++) {||| 12 long long int c = m2 * (i + 1) - k * (m1 | v[i]);||| 13 ans = max(ans, c);||| 14 long long int mm = (ans + (k) * (v[i])) / (i + 1);||| 15 for (long long int j = i - 1; j >= mm - 1; j--) {||| 16 if (j < 0) break;||| 17 long long int c2 = (i + 1) * (j + 1) - k * (v[i] | v[j]);||| 18 ans = max(ans, c2);||| 19 }||| 20 if (v[i] < m1) {||| 21 m2 = i, m1 = v[i];||| 22 }||| 23 }||| 24 cout << ans << ""\n"";||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 28 long long int t = 1;||| 29 cin >> t;||| 30 for (long long int i = 1; i <= t; i++) {||| 31 solve();||| 32 }||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n, k;||| 5 cin >> n >> k;||| 6 vector<long long int> v(n);||| 7 for (long long int i = 0; i < n; i++) cin >> v[i];||| 8 long long int ans = -1e7, m1 = 0, m2 = INT_MAX;||| 9 m1 = v[0];||| 10 m2 = 1;||| 11 for (long long int i = 1; i < n; i++) {||| 12 long long int c = m2 * (i + 1) - k * (m1 | v[i]);||| 13 ans = max(ans, c);||| 14 long long int mm = (ans + (k) * (v[i])) / (i + 1);||| 15 for (long long int j = i - 1; j >= mm - 1; j--) {||| 16 if (j <= 0) break;||| 17 long long int c2 = (i + 1) * (j + 1) - k * (v[i] | v[j]);||| 18 ans = max(ans, c2);||| 19 }||| 20 if (v[i] < m1) {||| 21 m2 = i, m1 = v[i];||| 22 }||| 23 }||| 24 cout << ans << ""\n"";||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 28 long long int t = 1;||| 29 cin >> t;||| 30 for (long long int i = 1; i <= t; i++) {||| 31 solve();||| 32 }||| 33 }||| "	16 if (j < 0) break;
34	195	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long power(unsigned long long a, unsigned long long p,||| 4 unsigned long long mod = 1e9 + 7) {||| 5 unsigned long long res = 1, run = p % mod;||| 6 while (p > 0) {||| 7 if (p & 1) {||| 8 res = (res * run) % mod;||| 9 }||| 10 p = (p >> 1);||| 11 run = (run * run) % mod;||| 12 }||| 13 return res;||| 14 }||| 15 unsigned long long inverse(unsigned long long a,||| 16 unsigned long long mod = 1e9 + 7) {||| 17 return power(a, mod - 2, mod);||| 18 }||| 19 unsigned long long gcd(unsigned long long a, unsigned long long b) {||| 20 if (b == 0) return a;||| 21 return gcd(b, a % b);||| 22 }||| 23 void pre() {}||| 24 void solve() {||| 25 long long n, k;||| 26 cin >> n >> k;||| 27 vector<long long> a(n);||| 28 for (auto &x : a) cin >> x;||| 29 long long ans = INT_MIN;||| 30 for (long long i = max(1LL, n - 2 * k); i < n; i++) {||| 31 for (long long j = i + 1; j <= n; j++) {||| 32 ans = max(ans, i * j - k * (a[i - 1] | a[j - 1]));||| 33 }||| 34 }||| 35 cout << ans << '\n';||| 36 }||| 37 int main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 long long t = 1;||| 41 cin >> t;||| 42 pre();||| 43 while (t--) {||| 44 solve();||| 45 }||| 46 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long power(unsigned long long a, unsigned long long p,||| 4 unsigned long long mod = 1e9 + 7) {||| 5 unsigned long long res = 1, run = p % mod;||| 6 while (p > 0) {||| 7 if (p & 1) {||| 8 res = (res * run) % mod;||| 9 }||| 10 p = (p >> 1);||| 11 run = (run * run) % mod;||| 12 }||| 13 return res;||| 14 }||| 15 unsigned long long inverse(unsigned long long a,||| 16 unsigned long long mod = 1e9 + 7) {||| 17 return power(a, mod - 2, mod);||| 18 }||| 19 unsigned long long gcd(unsigned long long a, unsigned long long b) {||| 20 if (b == 0) return a;||| 21 return gcd(b, a % b);||| 22 }||| 23 void pre() {}||| 24 void solve() {||| 25 long long n, k;||| 26 cin >> n >> k;||| 27 vector<long long> a(n);||| 28 for (auto &x : a) cin >> x;||| 29 long long ans = INT_MIN;||| 30 for (long long i = max(0LL, n - 2 * k); i <= n; i++) {||| 31 for (long long j = i + 1; j <= n; j++) {||| 32 ans = max(ans, i * j - k * (a[i - 1] | a[j - 1]));||| 33 }||| 34 }||| 35 cout << ans << '\n';||| 36 }||| 37 int main() {||| 38 ios_base::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 long long t = 1;||| 41 cin >> t;||| 42 pre();||| 43 while (t--) {||| 44 solve();||| 45 }||| 46 }||| 	30 for (long long i = max(1LL, n - 2 * k); i < n; i++) {
34	252	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T>||| 21 void _print(stack<T> v);||| 22 template <class T>||| 23 void _print(list<T> v);||| 24 template <class T>||| 25 void _print(priority_queue<T> v);||| 26 template <class T>||| 27 void _print(priority_queue<T> v) {||| 28 cerr << ""{ "";||| 29 while (!v.empty()) {||| 30 _print(v.top());||| 31 cerr << "" "";||| 32 v.pop();||| 33 }||| 34 cerr << "" }"";||| 35 }||| 36 template <class T>||| 37 void _print(stack<T> v) {||| 38 cerr << ""["";||| 39 while (!v.empty()) {||| 40 _print(v.top());||| 41 cerr << "" "";||| 42 v.pop();||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(list<T> v) {||| 48 cerr << ""["";||| 49 for (auto i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(pair<T, V> p) {||| 57 cerr << ""{"";||| 58 _print(p.first);||| 59 cerr << "","";||| 60 _print(p.second);||| 61 cerr << ""}"";||| 62 }||| 63 template <class T>||| 64 void _print(vector<T> v) {||| 65 cerr << ""[ "";||| 66 for (T i : v) {||| 67 _print(i);||| 68 cerr << "" "";||| 69 }||| 70 cerr << ""]"";||| 71 }||| 72 template <class T>||| 73 void _print(set<T> v) {||| 74 cerr << ""[ "";||| 75 for (T i : v) {||| 76 _print(i);||| 77 cerr << "" "";||| 78 }||| 79 cerr << ""]"";||| 80 }||| 81 template <class T>||| 82 void _print(multiset<T> v) {||| 83 cerr << ""[ "";||| 84 for (T i : v) {||| 85 _print(i);||| 86 cerr << "" "";||| 87 }||| 88 cerr << ""]"";||| 89 }||| 90 template <class T, class V>||| 91 void _print(map<T, V> v) {||| 92 cerr << ""[ "";||| 93 for (auto i : v) {||| 94 _print(i);||| 95 cerr << "" "";||| 96 }||| 97 cerr << ""]"";||| 98 }||| 99 long long power(long long a, long long b) {||| 100 long long res = 1;||| 101 while (b) {||| 102 if (b & 1) {||| 103 res *= a;||| 104 }||| 105 b /= 2;||| 106 a *= a;||| 107 }||| 108 return res;||| 109 }||| 110 long long mod_pow(long long a, long long b, long long mod) {||| 111 long long res = 1;||| 112 while (b) {||| 113 if (b & 1) {||| 114 res = (res * a) % mod;||| 115 }||| 116 b /= 2;||| 117 a = (a * a) % mod;||| 118 }||| 119 return (res % mod);||| 120 }||| 121 void usaco(string filename = """") {||| 122 if (((int)(filename).size())) {||| 123 freopen((filename + "".in"").c_str(), ""r"", stdin);||| 124 freopen((filename + "".out"").c_str(), ""w"", stdout);||| 125 }||| 126 }||| 127 void solve() {||| 128 long long n, k;||| 129 cin >> n >> k;||| 130 vector<long long> a(n + 1, 0);||| 131 for (int i = 1; i <= n; ++i) cin >> a[i];||| 132 long long ans = -1e18;||| 133 for (int j = n; j >= max(n - 500, 1ll); --j) {||| 134 for (int i = j - 1; i >= max(n - 500, 1ll); --i) {||| 135 long long val = i * 1ll * j;||| 136 val -= k * (a[i] | a[j]);||| 137 ans = max(ans, val);||| 138 }||| 139 }||| 140 cout << ans << ""\n"";||| 141 }||| 142 int main() {||| 143 cout << setprecision(15) << fixed;||| 144 ios_base::sync_with_stdio(false);||| 145 cin.tie(NULL);||| 146 cout.tie(NULL);||| 147 int test = 1, testcase = 1;||| 148 cin >> test;||| 149 while (test--) {||| 150 solve();||| 151 }||| 152 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T>||| 21 void _print(stack<T> v);||| 22 template <class T>||| 23 void _print(list<T> v);||| 24 template <class T>||| 25 void _print(priority_queue<T> v);||| 26 template <class T>||| 27 void _print(priority_queue<T> v) {||| 28 cerr << ""{ "";||| 29 while (!v.empty()) {||| 30 _print(v.top());||| 31 cerr << "" "";||| 32 v.pop();||| 33 }||| 34 cerr << "" }"";||| 35 }||| 36 template <class T>||| 37 void _print(stack<T> v) {||| 38 cerr << ""["";||| 39 while (!v.empty()) {||| 40 _print(v.top());||| 41 cerr << "" "";||| 42 v.pop();||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(list<T> v) {||| 48 cerr << ""["";||| 49 for (auto i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(pair<T, V> p) {||| 57 cerr << ""{"";||| 58 _print(p.first);||| 59 cerr << "","";||| 60 _print(p.second);||| 61 cerr << ""}"";||| 62 }||| 63 template <class T>||| 64 void _print(vector<T> v) {||| 65 cerr << ""[ "";||| 66 for (T i : v) {||| 67 _print(i);||| 68 cerr << "" "";||| 69 }||| 70 cerr << ""]"";||| 71 }||| 72 template <class T>||| 73 void _print(set<T> v) {||| 74 cerr << ""[ "";||| 75 for (T i : v) {||| 76 _print(i);||| 77 cerr << "" "";||| 78 }||| 79 cerr << ""]"";||| 80 }||| 81 template <class T>||| 82 void _print(multiset<T> v) {||| 83 cerr << ""[ "";||| 84 for (T i : v) {||| 85 _print(i);||| 86 cerr << "" "";||| 87 }||| 88 cerr << ""]"";||| 89 }||| 90 template <class T, class V>||| 91 void _print(map<T, V> v) {||| 92 cerr << ""[ "";||| 93 for (auto i : v) {||| 94 _print(i);||| 95 cerr << "" "";||| 96 }||| 97 cerr << ""]"";||| 98 }||| 99 long long power(long long a, long long b) {||| 100 long long res = 1;||| 101 while (b) {||| 102 if (b & 1) {||| 103 res *= a;||| 104 }||| 105 b /= 2;||| 106 a *= a;||| 107 }||| 108 return res;||| 109 }||| 110 long long mod_pow(long long a, long long b, long long mod) {||| 111 long long res = 1;||| 112 while (b) {||| 113 if (b & 1) {||| 114 res = (res * a) % mod;||| 115 }||| 116 b /= 2;||| 117 a = (a * a) % mod;||| 118 }||| 119 return (res % mod);||| 120 }||| 121 void usaco(string filename = """") {||| 122 if (((int)(filename).size())) {||| 123 freopen((filename + "".in"").c_str(), ""r"", stdin);||| 124 freopen((filename + "".out"").c_str(), ""w"", stdout);||| 125 }||| 126 }||| 127 void solve() {||| 128 long long n, k;||| 129 cin >> n >> k;||| 130 vector<long long> a(n + 1, 0);||| 131 for (int i = 1; i <= n; ++i) cin >> a[i];||| 132 long long ans = -1e18;||| 133 for (int j = n; j >= max(n - 250, 1ll); --j) {||| 134 for (int i = j - 1; i >= max(n - 250, 1ll); --i) {||| 135 long long val = i * j;||| 136 val -= k * (a[i] | a[j]);||| 137 ans = max(ans, val);||| 138 }||| 139 }||| 140 cout << ans << ""\n"";||| 141 }||| 142 int main() {||| 143 cout << setprecision(15) << fixed;||| 144 ios_base::sync_with_stdio(false);||| 145 cin.tie(NULL);||| 146 cout.tie(NULL);||| 147 int test = 1, testcase = 1;||| 148 cin >> test;||| 149 while (test--) {||| 150 solve();||| 151 }||| 152 }||| "	133 for (int j = n; j >= max(n - 500, 1ll); --j) {
35	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m;||| 5 cin >> n >> m;||| 6 ++m;||| 7 int ans = 0;||| 8 for (int i = 30; i >= 0 && n < m; --i) {||| 9 if ((n >> i & 1) == (m >> i & 1)) continue;||| 10 if (m >> i & 1) ans ^= 1 << i, n ^= 1 << i;||| 11 }||| 12 cout << ans << '\n';||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(NULL);||| 17 int T;||| 18 cin >> T;||| 19 while (T--) {||| 20 solve();||| 21 }||| 22 return 0;||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, m;||| 5 cin >> n >> m;||| 6 ++m;||| 7 int ans = 0;||| 8 for (int i = 30; i >= 0 && n < m; ++i) {||| 9 if ((n >> i & 1) == (m >> i & 1)) continue;||| 10 if (m >> i & 1) ans ^= 1 << i, n ^= 1 << i;||| 11 }||| 12 cout << ans << '\n';||| 13 }||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(NULL);||| 17 int T;||| 18 cin >> T;||| 19 while (T--) {||| 20 solve();||| 21 }||| 22 return 0;||| 23 }||| 	8 for (int i = 30; i >= 0 && n < m; --i) {
35	86	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<pair<int, int>> vc;||| 5 void fun(int l, int r, int x) {||| 6 if (r <= m) {||| 7 int _l = (l ^ n) & (~x);||| 8 int _r = _l + x;||| 9 vc.push_back({_l, _r});||| 10 } else {||| 11 int mid = (l + r) >> 1;||| 12 fun(l, mid, x >> 1);||| 13 if (m > mid) fun(mid + 1, r, x >> 1);||| 14 }||| 15 }||| 16 void solve() {||| 17 scanf(""%d %d"", &n, &m);||| 18 vc.clear();||| 19 int x = 1;||| 20 while (x <= m) x <<= 1;||| 21 fun(0, x - 1, x - 1);||| 22 sort(vc.begin(), vc.end());||| 23 int ans = 0;||| 24 for (auto &it : vc) {||| 25 if (it.first != ans) {||| 26 break;||| 27 } else {||| 28 ans = it.second + 1;||| 29 }||| 30 }||| 31 printf(""%d\n"", ans);||| 32 }||| 33 int main() {||| 34 int T;||| 35 scanf(""%d"", &T);||| 36 while (T--) solve();||| 37 return 0;||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<pair<int, int>> vc;||| 5 void fun(int l, int r, int x) {||| 6 if (r <= m) {||| 7 int _l = (l ^ n) & (~x);||| 8 int _r = _l + x;||| 9 vc.push_back({_l, _r});||| 10 } else {||| 11 int mid = (l + r) >> 1;||| 12 fun(l, mid, x >> 1);||| 13 if (m > mid) fun(mid + 1, r, x >> 1);||| 14 }||| 15 }||| 16 void solve() {||| 17 scanf(""%d %d"", &n, &m);||| 18 vc.clear();||| 19 int x = 1;||| 20 while (x < m) x <<= 1;||| 21 fun(0, x - 1, x - 1);||| 22 sort(vc.begin(), vc.end());||| 23 int ans = 0;||| 24 for (auto &it : vc) {||| 25 if (it.first != ans) {||| 26 break;||| 27 } else {||| 28 ans = it.second + 1;||| 29 }||| 30 }||| 31 printf(""%d\n"", ans);||| 32 }||| 33 int main() {||| 34 int T;||| 35 scanf(""%d"", &T);||| 36 while (T--) solve();||| 37 return 0;||| 38 }||| "	20 while (x <= m) x <<= 1;
35	163	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, m;||| 8 cin >> n >> m;||| 9 if (n == 0) {||| 10 cout << m + 1 << endl;||| 11 continue;||| 12 }||| 13 bitset<35> b(n);||| 14 long long high = 1;||| 15 long long cnt = 0;||| 16 while (high <= max(n + 1, m + 1)) {||| 17 high *= 2;||| 18 cnt++;||| 19 }||| 20 cnt--;||| 21 long long l = 0, r = high - 1;||| 22 bitset<35> ans;||| 23 for (long long i = cnt; i >= 0; i--) {||| 24 long long mid = (l + r) / 2;||| 25 if (mid > m) {||| 26 ans[i] = 0;||| 27 if (b[i] == 0) {||| 28 r = mid;||| 29 } else {||| 30 l = mid + 1;||| 31 }||| 32 } else {||| 33 if (b[i] == 0) {||| 34 ans[i] = 1;||| 35 } else {||| 36 ans[i] = 0;||| 37 }||| 38 l = mid + 1;||| 39 }||| 40 }||| 41 long long ans_num = 0;||| 42 for (long long i = 0; i <= cnt; i++) {||| 43 ans_num += (ans[i] << i);||| 44 }||| 45 cout << ans_num << endl;||| 46 }||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long n, m;||| 8 cin >> n >> m;||| 9 if (n == 0) {||| 10 cout << m + 1 << endl;||| 11 continue;||| 12 }||| 13 bitset<35> b(n);||| 14 long long high = 1;||| 15 long long cnt = 0;||| 16 while (high < max(n + 1, m + 1)) {||| 17 high *= 2;||| 18 cnt++;||| 19 }||| 20 cnt--;||| 21 long long l = 0, r = high - 1;||| 22 bitset<35> ans;||| 23 for (long long i = cnt; i >= 0; i--) {||| 24 long long mid = (l + r) / 2;||| 25 if (mid > m) {||| 26 ans[i] = 0;||| 27 if (b[i] == 0) {||| 28 r = mid;||| 29 } else {||| 30 l = mid + 1;||| 31 }||| 32 } else {||| 33 if (b[i] == 0) {||| 34 ans[i] = 1;||| 35 } else {||| 36 ans[i] = 0;||| 37 }||| 38 l = mid + 1;||| 39 }||| 40 }||| 41 long long ans_num = 0;||| 42 for (long long i = 0; i <= cnt; i++) {||| 43 ans_num += (ans[i] << i);||| 44 }||| 45 cout << ans_num << endl;||| 46 }||| 47 }||| 	16 while (high <= max(n + 1, m + 1)) {
35	184	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1000000000000000;||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long x;||| 8 cin >> x;||| 9 while (x--) {||| 10 long long n;||| 11 long long m;||| 12 cin >> n >> m;||| 13 m++;||| 14 long long ans = 0;||| 15 if (n > m) {||| 16 cout << 0 << endl;||| 17 continue;||| 18 }||| 19 for (long long i = 32; i >= 0; i--) {||| 20 long long ni = (n >> i & 1);||| 21 long long mi = (m >> i & 1);||| 22 if (ni == mi)||| 23 continue;||| 24 else if (ni == 0 && mi == 1) {||| 25 ans = ans | (1 << i);||| 26 } else if (ni == 1 && mi == 0) {||| 27 break;||| 28 }||| 29 }||| 30 cout << ans << endl;||| 31 }||| 32 return 0;||| 33 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF = 1000000000000000;||| 4 int32_t main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 long long x;||| 8 cin >> x;||| 9 while (x--) {||| 10 long long n;||| 11 long long m;||| 12 cin >> n >> m;||| 13 m++;||| 14 long long ans = 0;||| 15 if (n > m) {||| 16 cout << 0 << endl;||| 17 continue;||| 18 }||| 19 for (long long i = 32; i >= 0; i--) {||| 20 long long ni = (n >> i & 1);||| 21 long long mi = (m >> i & 1);||| 22 if (ni == mi)||| 23 continue;||| 24 else if (ni == 0 && mi == 1) {||| 25 ans = ans | (1 << i);||| 26 } else if (ni == 0 && mi == 1) {||| 27 break;||| 28 }||| 29 }||| 30 cout << ans << endl;||| 31 }||| 32 return 0;||| 33 }||| 	26 } else if (ni == 1 && mi == 0) {
36	109	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 100;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 if (n <= 26) {||| 8 for (int i = 1; i <= n; ++i) {||| 9 cout << char('a' + i - 1);||| 10 }||| 11 cout << endl;||| 12 return;||| 13 }||| 14 if (n & 1) {||| 15 for (int i = 1; i <= n / 2; ++i) cout << ""a"";||| 16 cout << ""bc"";||| 17 for (int i = n / 2 + 3; i <= n; ++i) cout << ""a"";||| 18 } else {||| 19 for (int i = 1; i <= n / 2; ++i) cout << ""a"";||| 20 cout << ""b"";||| 21 for (int i = n / 2 + 2; i <= n; ++i) cout << ""a"";||| 22 }||| 23 cout << endl;||| 24 }||| 25 signed main() {||| 26 ios::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 int T = 1;||| 30 cin >> T;||| 31 while (T--) {||| 32 solve();||| 33 }||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 100;||| 4 void solve() {||| 5 int n;||| 6 cin >> n;||| 7 if (n <= 26) {||| 8 for (int i = 1; i <= n; ++i) {||| 9 cout << ('a' + i - 1);||| 10 }||| 11 cout << endl;||| 12 return;||| 13 }||| 14 if (n & 1) {||| 15 for (int i = 1; i <= n / 2; ++i) cout << ""a"";||| 16 cout << ""bc"";||| 17 for (int i = n / 2 + 3; i <= n; ++i) cout << ""a"";||| 18 } else {||| 19 for (int i = 1; i <= n / 2; ++i) cout << ""a"";||| 20 cout << ""b"";||| 21 for (int i = n / 2 + 2; i <= n; ++i) cout << ""a"";||| 22 }||| 23 cout << endl;||| 24 }||| 25 signed main() {||| 26 ios::sync_with_stdio(0);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 int T = 1;||| 30 cin >> T;||| 31 while (T--) {||| 32 solve();||| 33 }||| 34 }||| "	9 cout << char('a' + i - 1);
36	195	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int n;||| 66 cin >> n;||| 67 if (n == 1) {||| 68 cout << ""a\n"";||| 69 return;||| 70 }||| 71 for (int i = 0; i < n / 2; i++) {||| 72 cout << 'a';||| 73 }||| 74 cout << 'b';||| 75 for (int i = 0; i < n / 2 - 1; i++) {||| 76 cout << 'a';||| 77 }||| 78 if (n % 2 == 1) {||| 79 cout << 'c';||| 80 }||| 81 cout << ""\n"";||| 82 return;||| 83 }||| 84 int main() {||| 85 ios_base::sync_with_stdio(false);||| 86 cin.tie(NULL);||| 87 cout.tie(NULL);||| 88 int t;||| 89 cin >> t;||| 90 while (t--) {||| 91 solve();||| 92 }||| 93 return 0;||| 94 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int n;||| 66 cin >> n;||| 67 if (n == 1) {||| 68 cout << 'a';||| 69 return;||| 70 }||| 71 for (int i = 0; i < n / 2; i++) {||| 72 cout << 'a';||| 73 }||| 74 cout << 'b';||| 75 for (int i = 0; i < n / 2 - 1; i++) {||| 76 cout << 'a';||| 77 }||| 78 if (n % 2 == 1) {||| 79 cout << 'c';||| 80 }||| 81 cout << ""\n"";||| 82 return;||| 83 }||| 84 int main() {||| 85 ios_base::sync_with_stdio(false);||| 86 cin.tie(NULL);||| 87 cout.tie(NULL);||| 88 int t;||| 89 cin >> t;||| 90 while (t--) {||| 91 solve();||| 92 }||| 93 return 0;||| 94 }||| "	"68 cout << ""a\n"";"
36	136	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 if (n == 1) {||| 13 cout << ""v\n"";||| 14 continue;||| 15 }||| 16 cout << string(n / 2, 'a') + (n & 1 ? ""bv"" : ""b"") + string(n / 2 - 1, 'a')||| 17 << ""\n"";||| 18 }||| 19 return 0;||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 if (n == 1) {||| 13 cout << ""v\n"";||| 14 continue;||| 15 }||| 16 cout << string(n / 2, 'a') + (n & 1 ? ""bb"" : ""a"") + string(n / 2 - 1, 'a')||| 17 << ""\n"";||| 18 }||| 19 return 0;||| 20 }||| "	"16 cout << string(n / 2, 'a') + (n & 1 ? ""bv"" : ""b"") + string(n / 2 - 1, 'a')"
36	229	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 if (n == 1) {||| 13 cout << ""v\n"";||| 14 continue;||| 15 }||| 16 cout << string(n / 2, 'a') + (n & 1 ? ""bv"" : ""b"") + string(n / 2 - 1, 'a')||| 17 << ""\n"";||| 18 }||| 19 return 0;||| 20 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 if (n == 1) {||| 13 cout << ""v\n"";||| 14 continue;||| 15 }||| 16 cout << string(n / 2, 'a') + (n & 1 ? ""bv"" : ""a"") + string(n / 2 - 1, 'a')||| 17 << ""\n"";||| 18 }||| 19 return 0;||| 20 }||| "	"16 cout << string(n / 2, 'a') + (n & 1 ? ""bv"" : ""b"") + string(n / 2 - 1, 'a')"
37	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200020, MOD = 998244353;||| 4 inline int read() {||| 5 int s = 0, w = 1;||| 6 char ch = getchar();||| 7 while (ch > '9' || ch < '0') {||| 8 if (ch == '-') w = -1;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();||| 12 return s * w;||| 13 }||| 14 int T, n, u, v, f[N];||| 15 bool flag;||| 16 vector<int> e[N];||| 17 int dfs(int k, int fa, int gr) {||| 18 int cnt = 0;||| 19 for (int i = 0; i < e[k].size(); i++) {||| 20 int to = e[k][i];||| 21 if (to == fa) continue;||| 22 cnt = cnt + dfs(to, k, gr);||| 23 }||| 24 if (cnt % gr == 0) return 1;||| 25 if ((cnt + 1) % gr == 0) return 0;||| 26 flag = 0;||| 27 return 0;||| 28 }||| 29 int main() {||| 30 T = read();||| 31 while (T--) {||| 32 n = read();||| 33 for (int i = 1; i <= n; i++) e[i].clear();||| 34 memset(f, 0, sizeof(f)), f[1] = 1;||| 35 for (int i = 1; i <= n - 1; i++) {||| 36 f[1] = f[1] * 2 % MOD;||| 37 u = read(), v = read();||| 38 e[u].push_back(v), e[v].push_back(u);||| 39 }||| 40 for (int i = 2; i <= n - 1; i++)||| 41 if ((n - 1) % i == 0) {||| 42 flag = 1;||| 43 if (dfs(1, 0, i) == 1 && flag) f[i] = 1;||| 44 }||| 45 for (int i = n - 1; i >= 1; i--)||| 46 for (int j = 2; i * j <= n - 1; j++) f[i] = f[i] - f[i * j];||| 47 f[1] = (f[1] + MOD) % MOD;||| 48 for (int i = 1; i <= n; i++) printf(""%d "", f[i]);||| 49 printf(""\n"");||| 50 }||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 200020, MOD = 998244353;||| 4 inline int read() {||| 5 int s = 0, w = 1;||| 6 char ch = getchar();||| 7 while (ch > '9' || ch < '0') {||| 8 if (ch == '-') w = -1;||| 9 ch = getchar();||| 10 }||| 11 while (ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();||| 12 return s * w;||| 13 }||| 14 int T, n, u, v, f[N];||| 15 bool flag;||| 16 vector<int> e[N];||| 17 int dfs(int k, int fa, int gr) {||| 18 int cnt = 0;||| 19 for (int i = 0; i < e[k].size(); i++) {||| 20 int to = e[k][i];||| 21 if (to == fa) continue;||| 22 cnt = cnt + dfs(to, k, gr);||| 23 }||| 24 if (cnt % k == 0) return 1;||| 25 if ((cnt + 1) % k == 0) return 0;||| 26 flag = 0;||| 27 return 0;||| 28 }||| 29 int main() {||| 30 T = read();||| 31 while (T--) {||| 32 n = read();||| 33 for (int i = 1; i <= n; i++) e[i].clear();||| 34 memset(f, 0, sizeof(f)), f[1] = 1;||| 35 for (int i = 1; i <= n - 1; i++) {||| 36 f[1] = f[1] * 2 % MOD;||| 37 u = read(), v = read();||| 38 e[u].push_back(v), e[v].push_back(u);||| 39 }||| 40 for (int i = 2; i <= n - 1; i++)||| 41 if ((n - 1) % i == 0) {||| 42 flag = 1;||| 43 if (dfs(1, 0, i) == 1 && flag) f[i] = 1;||| 44 }||| 45 for (int i = n - 1; i >= 1; i--)||| 46 for (int j = 2; i * j <= n - 1; j++) f[i] = f[i] - f[i * j];||| 47 f[1] = (f[1] + MOD) % MOD;||| 48 for (int i = 1; i <= n; i++) printf(""%d "", f[i]);||| 49 printf(""\n"");||| 50 }||| 51 return 0;||| 52 }||| "	24 if (cnt % gr == 0) return 1;
37	145	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int recur_depth = 0;||| 4 const long long sz = 1e5 + 10, mod = 998244353;||| 5 vector<long long> g[sz];||| 6 long long ans[sz], dp[sz];||| 7 void dfs(long long u, long long p, long long k) {||| 8 for (long long& v : g[u]) {||| 9 if (v == p) continue;||| 10 dfs(v, u, k);||| 11 if (dp[v] % k != 0)||| 12 dp[v]++;||| 13 else||| 14 dp[u]++;||| 15 }||| 16 }||| 17 int main() {||| 18 long long t;||| 19 cin >> t;||| 20 while (t--) {||| 21 long long n;||| 22 scanf(""%lld"", &n);||| 23 for (long long i = 1; i <= n - 1; ++i) {||| 24 long long u, v;||| 25 scanf(""%lld"", &u), scanf(""%lld"", &v);||| 26 g[u].push_back(v);||| 27 g[v].push_back(u);||| 28 }||| 29 long long m = n - 1;||| 30 ans[1] = 1;||| 31 for (long long i = 1; i <= m; ++i) ans[1] = (ans[1] * 2) % mod;||| 32 for (long long i = 2; i <= m; i++) {||| 33 if (m % i == 0) {||| 34 for (long long j = 1; j <= n; ++j) dp[j] = 0;||| 35 dfs(1, -1, i);||| 36 bool ok = 1;||| 37 for (long long j = 1; j <= n; ++j) ok &= (dp[j] % i == 0);||| 38 ans[i] = ok;||| 39 }||| 40 }||| 41 for (long long i = n; i >= 1; --i)||| 42 for (long long j = i + i; j <= n; j += i) ans[i] -= ans[j];||| 43 for (long long i = 1; i <= n; ++i) {||| 44 if (ans[i] < 0) ans[i] += mod;||| 45 printf(""%lld "", ans[i]);||| 46 }||| 47 printf(""\n"");||| 48 for (long long i = 1; i <= n; ++i) g[i].clear(), ans[i] = 0;||| 49 }||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int recur_depth = 0;||| 4 const long long sz = 1e5 + 10, mod = 998244353;||| 5 vector<long long> g[sz];||| 6 long long ans[sz], dp[sz];||| 7 void dfs(long long u, long long p, long long k) {||| 8 for (long long& v : g[u]) {||| 9 if (v == p) continue;||| 10 dfs(v, u, k);||| 11 if (dp[v] % k != 0)||| 12 dp[v]++;||| 13 else||| 14 dp[u]++;||| 15 }||| 16 }||| 17 int main() {||| 18 long long t;||| 19 cin >> t;||| 20 while (t--) {||| 21 long long n;||| 22 scanf(""%lld"", &n);||| 23 for (long long i = 1; i <= n - 1; ++i) {||| 24 long long u, v;||| 25 scanf(""%lld"", &u), scanf(""%lld"", &v);||| 26 g[u].push_back(v);||| 27 g[v].push_back(u);||| 28 }||| 29 long long m = n - 1;||| 30 ans[1] = 1;||| 31 for (long long i = 1; i <= m; ++i) ans[1] = (ans[1] * 2) % mod;||| 32 for (long long i = 2; i <= m; i++) {||| 33 if (m % i == 0) {||| 34 for (long long j = 1; j <= n; ++j) dp[i] = 0;||| 35 dfs(1, -1, i);||| 36 bool ok = 1;||| 37 for (long long j = 1; j <= n; ++j) ok &= (dp[j] % i == 0);||| 38 ans[i] = ok;||| 39 }||| 40 }||| 41 for (long long i = n; i >= 1; --i)||| 42 for (long long j = i + i; j <= n; j += i) ans[i] -= ans[j];||| 43 for (long long i = 1; i <= n; ++i) {||| 44 if (ans[i] < 0) ans[i] += mod;||| 45 printf(""%lld "", ans[i]);||| 46 }||| 47 printf(""\n"");||| 48 for (long long i = 1; i <= n; ++i) g[i].clear(), ans[i] = 0;||| 49 }||| 50 return 0;||| 51 }||| "	34 for (long long j = 1; j <= n; ++j) dp[j] = 0;
37	76	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""-O3"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 mt19937_64 rnd(time(0));||| 6 long long MOD = 998244353;||| 7 const long double E = 1e-10;||| 8 long long n, m, k, T, ans[500005];||| 9 vector<long long> c[500005];||| 10 long long binpow(long long h, long long r, long long md) {||| 11 long long l = 1;||| 12 while (r) {||| 13 if (r & 1) l = (l * h) % md;||| 14 h = (h * h) % md;||| 15 r /= 2;||| 16 }||| 17 return l;||| 18 }||| 19 long long read() {||| 20 char c = getchar();||| 21 while (!isdigit(c)) {||| 22 c = getchar();||| 23 }||| 24 long long res = 0;||| 25 while (isdigit(c)) {||| 26 res = res * 10 + c - '0';||| 27 c = getchar();||| 28 }||| 29 return res;||| 30 }||| 31 long long gcd(long long x, long long y) {||| 32 while (x && y) {||| 33 if (x < y) swap(x, y);||| 34 x %= y;||| 35 }||| 36 return x + y;||| 37 }||| 38 pair<long long, long long> dfs(int h, int p = -1) {||| 39 long long z = 0;||| 40 for (int i = 0; i < c[h].size(); i++)||| 41 if (c[h][i] != p) {||| 42 pair<long long, long long> u = dfs(c[h][i], h);||| 43 if (!u.first) return make_pair(0, 0);||| 44 z += u.second;||| 45 }||| 46 if (z % T == 0)||| 47 return make_pair(1, 1);||| 48 else if ((z + 1) % T == 0)||| 49 return make_pair(1, 0);||| 50 else||| 51 return make_pair(0, 0);||| 52 }||| 53 void solve() {||| 54 cin >> n;||| 55 long long x = n - 1, p = sqrt(x);||| 56 vector<long long> v;||| 57 for (int i = 1; i <= n; i++) ans[i] = 0, c[i].clear();||| 58 for (int i = 1; i <= p; i++)||| 59 if (x % i == 0) {||| 60 v.push_back(i);||| 61 if (x / i != i) v.push_back(x / i);||| 62 }||| 63 for (int i = 1; i < n; i++) {||| 64 long long x, y;||| 65 cin >> x >> y;||| 66 c[x].push_back(y);||| 67 c[y].push_back(x);||| 68 }||| 69 ans[1] = binpow(2, n - 1, MOD);||| 70 for (int i = 1; i < v.size(); i++) {||| 71 T = v[i];||| 72 pair<long long, long long> o = dfs(1);||| 73 if (o.first && o.second) ans[v[i]] = 1;||| 74 }||| 75 for (int i = n; i > 0; i--) {||| 76 for (int j = i * 2; j <= n; j += i) ans[i] -= ans[j];||| 77 }||| 78 for (int i = 1; i <= n; i++) cout << ans[i] << "" "";||| 79 cout << ""\n"";||| 80 }||| 81 int main() {||| 82 ios_base::sync_with_stdio(0);||| 83 cin.tie(0);||| 84 long long t = 1;||| 85 cin >> t;||| 86 while (t--) {||| 87 solve();||| 88 }||| 89 return 0;||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""-O3"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 mt19937_64 rnd(time(0));||| 6 long long MOD = 998244353;||| 7 const long double E = 1e-10;||| 8 long long n, m, k, T, ans[500005];||| 9 vector<long long> c[500005];||| 10 long long binpow(long long h, long long r, long long md) {||| 11 long long l = 1;||| 12 while (r) {||| 13 if (r & 1) l = (l * h) % md;||| 14 h = (h * h) % md;||| 15 r /= 2;||| 16 }||| 17 return l;||| 18 }||| 19 long long read() {||| 20 char c = getchar();||| 21 while (!isdigit(c)) {||| 22 c = getchar();||| 23 }||| 24 long long res = 0;||| 25 while (isdigit(c)) {||| 26 res = res * 10 + c - '0';||| 27 c = getchar();||| 28 }||| 29 return res;||| 30 }||| 31 long long gcd(long long x, long long y) {||| 32 while (x && y) {||| 33 if (x < y) swap(x, y);||| 34 x %= y;||| 35 }||| 36 return x + y;||| 37 }||| 38 pair<long long, long long> dfs(int h, int p = -1) {||| 39 long long z = 0;||| 40 for (int i = 0; i < c[h].size(); i++)||| 41 if (c[h][i] != p) {||| 42 pair<long long, long long> u = dfs(c[h][i], h);||| 43 if (!u.second) return make_pair(0, 0);||| 44 z += u.second;||| 45 }||| 46 if (z % T == 0)||| 47 return make_pair(1, 1);||| 48 else if ((z + 1) % T == 0)||| 49 return make_pair(1, 0);||| 50 else||| 51 return make_pair(0, 0);||| 52 }||| 53 void solve() {||| 54 cin >> n;||| 55 long long x = n - 1, p = sqrt(x);||| 56 vector<long long> v;||| 57 for (int i = 1; i <= n; i++) ans[i] = 0, c[i].clear();||| 58 for (int i = 1; i <= p; i++)||| 59 if (x % i == 0) {||| 60 v.push_back(i);||| 61 if (x / i != i) v.push_back(x / i);||| 62 }||| 63 for (int i = 1; i < n; i++) {||| 64 long long x, y;||| 65 cin >> x >> y;||| 66 c[x].push_back(y);||| 67 c[y].push_back(x);||| 68 }||| 69 ans[1] = binpow(2, n - 1, MOD);||| 70 for (int i = 1; i < v.size(); i++) {||| 71 T = v[i];||| 72 pair<long long, long long> o = dfs(1);||| 73 if (o.first && o.second) ans[v[i]] = 1;||| 74 }||| 75 for (int i = n; i > 0; i--) {||| 76 for (int j = i * 2; j <= n; j += i) ans[i] -= ans[j];||| 77 }||| 78 for (int i = 1; i <= n; i++) cout << ans[i] << "" "";||| 79 cout << ""\n"";||| 80 }||| 81 int main() {||| 82 ios_base::sync_with_stdio(0);||| 83 cin.tie(0);||| 84 long long t = 1;||| 85 cin >> t;||| 86 while (t--) {||| 87 solve();||| 88 }||| 89 return 0;||| 90 }||| "	43 if (!u.first) return make_pair(0, 0);
37	30	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n;||| 4 vector<int> g[100100];||| 5 long long ans[100100];||| 6 bool extra[100100];||| 7 bool poss(int c, int l, int k) {||| 8 int cv = 0;||| 9 for (int i : g[c]) {||| 10 if (i == l) continue;||| 11 if (!poss(i, c, k)) return false;||| 12 cv += extra[i];||| 13 }||| 14 if (cv % k == 0) {||| 15 extra[c] = true;||| 16 return true;||| 17 }||| 18 if ((cv + 1) % k == 0) {||| 19 extra[c] = false;||| 20 return true;||| 21 }||| 22 return false;||| 23 }||| 24 int main() {||| 25 scanf(""%d"", &t);||| 26 while (t--) {||| 27 scanf(""%d"", &n);||| 28 long long ctot = 1;||| 29 for (int i = 1; i < n; i++) {||| 30 int n1, n2;||| 31 scanf("" %d%d"", &n1, &n2);||| 32 g[n1].push_back(n2);||| 33 g[n2].push_back(n1);||| 34 ctot *= 2;||| 35 ctot %= 998244353;||| 36 }||| 37 ans[1] = ctot;||| 38 for (int i = n; i > 1; i--) {||| 39 ans[i] = 0;||| 40 if ((n - 1) % i) continue;||| 41 for (int j = i * 2; j <= n; j += i)||| 42 if (ans[j]) ans[i] = 1;||| 43 if (ans[i]) continue;||| 44 for (int j = 1; j <= n; j++) extra[j] = false;||| 45 bool cv = poss(1, -1, i);||| 46 if (cv && extra[1]) ans[i] = 1;||| 47 }||| 48 for (int i = n; i >= 1; i--) {||| 49 for (int j = i * 2; j <= n; j += i) ans[i] -= ans[j];||| 50 ans[i] += 998244353;||| 51 ans[i] %= 998244353;||| 52 }||| 53 for (int i = 1; i <= n; i++) printf(""%lld "", ans[i]);||| 54 printf(""\n"");||| 55 for (int i = 1; i <= n; i++) g[i].clear();||| 56 }||| 57 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, n;||| 4 vector<int> g[100100];||| 5 long long ans[100100];||| 6 bool extra[100100];||| 7 bool poss(int c, int l, int k) {||| 8 int cv = 0;||| 9 for (int i : g[c]) {||| 10 if (i == l) continue;||| 11 if (!poss(i, c, k)) return false;||| 12 cv += extra[i];||| 13 }||| 14 if (cv % k == 0) {||| 15 extra[c] = true;||| 16 return true;||| 17 }||| 18 if ((cv + 1) % k == 0) {||| 19 extra[c] = false;||| 20 return true;||| 21 }||| 22 return false;||| 23 }||| 24 int main() {||| 25 scanf(""%d"", &t);||| 26 while (t--) {||| 27 scanf(""%d"", &n);||| 28 long long ctot = 1;||| 29 for (int i = 1; i < n; i++) {||| 30 int n1, n2;||| 31 scanf("" %d%d"", &n1, &n2);||| 32 g[n1].push_back(n2);||| 33 g[n2].push_back(n1);||| 34 ctot *= 2;||| 35 ctot %= 998244353;||| 36 }||| 37 ans[1] = ctot;||| 38 for (int i = n; i > 1; i--) {||| 39 ans[i] = 0;||| 40 if ((n - 1) % i) continue;||| 41 for (int j = i * 2; j <= n; j += i)||| 42 if (ans[j]) ans[i] = 1;||| 43 if (ans[i]) continue;||| 44 for (int j = 1; j <= n; j++) extra[j] = false;||| 45 bool cv = poss(1, -1, i);||| 46 if (cv && extra[1]) ans[i] = 1;||| 47 }||| 48 for (int i = n; i >= 1; i--) {||| 49 for (int j = i * 2; j <= n; j++) ans[i] -= ans[j];||| 50 ans[i] += 998244353;||| 51 ans[i] %= 998244353;||| 52 }||| 53 for (int i = 1; i <= n; i++) printf(""%lld "", ans[i]);||| 54 printf(""\n"");||| 55 for (int i = 1; i <= n; i++) g[i].clear();||| 56 }||| 57 }||| "	49 for (int j = i * 2; j <= n; j += i) ans[i] -= ans[j];
37	28	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 using ll = long long;||| 7 using ld = long double;||| 8 const ll MOD = 998244353;||| 9 const ll root = 3;||| 10 ll binpow(ll a, ll b) {||| 11 ll res = 1;||| 12 while (b) {||| 13 if (b & 1) res = (res * a) % MOD;||| 14 a = (a * a) % MOD;||| 15 b >>= 1;||| 16 }||| 17 return res;||| 18 }||| 19 ll modInv(ll a) { return binpow(a, MOD - 2); }||| 20 const int INF = 0x3f3f3f3f;||| 21 const int NINF = 0xc0c0c0c0;||| 22 const ll INFLL = 0x3f3f3f3f3f3f3f3f;||| 23 const ll NINFLL = 0xc0c0c0c0c0c0c0c0;||| 24 const int mxN = 100001;||| 25 int n;||| 26 vector<int> adj[mxN];||| 27 int ans[mxN];||| 28 ll calc(int u, int p = -1) {||| 29 ll curr = 1;||| 30 for (int v : adj[u]) {||| 31 if (v ^ p) {||| 32 curr = (curr * 2LL * calc(v, u)) % MOD;||| 33 }||| 34 }||| 35 return curr;||| 36 }||| 37 bool die = false;||| 38 int go(int u, int k, int p = -1) {||| 39 int curr = 0;||| 40 for (int v : adj[u]) {||| 41 if (v ^ p) {||| 42 curr += go(v, k, u);||| 43 }||| 44 }||| 45 if (curr % k == 0)||| 46 return 1;||| 47 else if ((curr + 1) % k == 0)||| 48 return 0;||| 49 die = 1;||| 50 return 0;||| 51 }||| 52 int check(int k) {||| 53 if (k == 1) {||| 54 return calc(0);||| 55 }||| 56 for (int i = (0); i < (n); ++i) {||| 57 if (adj[i].size() > 1) {||| 58 die = false;||| 59 bool ok = go(i, k);||| 60 if (die == 0 && ok == 1) return 1;||| 61 return 0;||| 62 }||| 63 }||| 64 }||| 65 void solve() {||| 66 cin >> n;||| 67 for (int i = (0); i < (n + 1); ++i) {||| 68 ans[i] = 0;||| 69 adj[i].clear();||| 70 }||| 71 for (int i = (0); i < (n - 1); ++i) {||| 72 int a, b;||| 73 cin >> a >> b;||| 74 a--;||| 75 b--;||| 76 adj[a].push_back(b);||| 77 adj[b].push_back(a);||| 78 }||| 79 if (n == 2) {||| 80 cout << ""2 0\n"";||| 81 return;||| 82 }||| 83 for (int d = 1; d * d <= n - 1; d++) {||| 84 if ((n - 1) % d == 0) {||| 85 ans[d] = check(d);||| 86 ans[(n - 1) / d] = check((n - 1) / d);||| 87 }||| 88 }||| 89 for (int i = (n)-1; i >= (1); --i) {||| 90 for (int j = i + i; j < n; j += i) {||| 91 ans[i] = (ans[i] - ans[j] + MOD) % MOD;||| 92 }||| 93 }||| 94 for (int i = (1); i < (n + 1); ++i) {||| 95 cout << ans[i] << "" "";||| 96 }||| 97 cout << ""\n"";||| 98 }||| 99 int main() {||| 100 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 101 cin.tie(0)->sync_with_stdio(0);||| 102 int T = 1;||| 103 cin >> T;||| 104 for (int tc = 1; tc <= T; tc++) {||| 105 solve();||| 106 }||| 107 return 0;||| 108 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 using ll = long long;||| 7 using ld = long double;||| 8 const ll MOD = 998244353;||| 9 const ll root = 3;||| 10 ll binpow(ll a, ll b) {||| 11 ll res = 1;||| 12 while (b) {||| 13 if (b & 1) res = (res * a) % MOD;||| 14 a = (a * a) % MOD;||| 15 b >>= 1;||| 16 }||| 17 return res;||| 18 }||| 19 ll modInv(ll a) { return binpow(a, MOD - 2); }||| 20 const int INF = 0x3f3f3f3f;||| 21 const int NINF = 0xc0c0c0c0;||| 22 const ll INFLL = 0x3f3f3f3f3f3f3f3f;||| 23 const ll NINFLL = 0xc0c0c0c0c0c0c0c0;||| 24 const int mxN = 100001;||| 25 int n;||| 26 vector<int> adj[mxN];||| 27 int ans[mxN];||| 28 ll calc(int u, int p = -1) {||| 29 ll curr = 1;||| 30 for (int v : adj[u]) {||| 31 if (v ^ p) {||| 32 curr = (curr * 2LL * calc(v, u)) % MOD;||| 33 }||| 34 }||| 35 return curr;||| 36 }||| 37 bool die = false;||| 38 int go(int u, int k, int p = -1) {||| 39 int curr = 0;||| 40 for (int v : adj[u]) {||| 41 if (v ^ p) {||| 42 curr += go(v, k, u);||| 43 }||| 44 }||| 45 if (curr % k == 0)||| 46 return 1;||| 47 else if ((curr - 1) % k == 0)||| 48 return 0;||| 49 die = 1;||| 50 return 0;||| 51 }||| 52 int check(int k) {||| 53 if (k == 1) {||| 54 return calc(0);||| 55 }||| 56 for (int i = (0); i < (n); ++i) {||| 57 if (adj[i].size() > 1) {||| 58 die = false;||| 59 bool ok = go(i, k);||| 60 if (die == 0 && ok == 1) return 1;||| 61 return 0;||| 62 }||| 63 }||| 64 }||| 65 void solve() {||| 66 cin >> n;||| 67 for (int i = (0); i < (n + 1); ++i) {||| 68 ans[i] = 0;||| 69 adj[i].clear();||| 70 }||| 71 for (int i = (0); i < (n - 1); ++i) {||| 72 int a, b;||| 73 cin >> a >> b;||| 74 a--;||| 75 b--;||| 76 adj[a].push_back(b);||| 77 adj[b].push_back(a);||| 78 }||| 79 if (n == 2) {||| 80 cout << ""2 0\n"";||| 81 return;||| 82 }||| 83 for (int d = 1; d * d <= n - 1; d++) {||| 84 if ((n - 1) % d == 0) {||| 85 ans[d] = check(d);||| 86 ans[(n - 1) / d] = check((n - 1) / d);||| 87 }||| 88 }||| 89 for (int i = (n)-1; i >= (1); --i) {||| 90 for (int j = i + i; j < n; j += i) {||| 91 ans[i] = (ans[i] - ans[j] + MOD) % MOD;||| 92 }||| 93 }||| 94 for (int i = (1); i < (n + 1); ++i) {||| 95 cout << ans[i] << "" "";||| 96 }||| 97 cout << ""\n"";||| 98 }||| 99 int main() {||| 100 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 101 cin.tie(0)->sync_with_stdio(0);||| 102 int T = 1;||| 103 cin >> T;||| 104 for (int tc = 1; tc <= T; tc++) {||| 105 solve();||| 106 }||| 107 return 0;||| 108 }||| "	47 else if ((curr + 1) % k == 0)
38	349	"1 #include <bits/stdc++.h>||| 2 using ll = long long;||| 3 using namespace std;||| 4 int mod = 1e9 + 7;||| 5 string to_string(string& s) { return '""' + s + '""'; }||| 6 string to_string(bool& b) { return b ? ""true"" : ""false""; }||| 7 string to_string(const char* s) {||| 8 string t;||| 9 return to_string(t = s);||| 10 }||| 11 template <class A, class B>||| 12 string to_string(pair<A, B>& p) {||| 13 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 14 }||| 15 template <class A>||| 16 string to_string(A& v) {||| 17 string s;||| 18 for (auto& x : v) s += (s.empty() ? """" : "", "") + to_string(x);||| 19 return ""{"" + s + ""}"";||| 20 }||| 21 template <class... Ts>||| 22 void _debug(Ts&... args) {||| 23 (..., (cerr << "" "" << to_string(args)));||| 24 cerr << '\n';||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(nullptr);||| 29 cout.tie(nullptr);||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 ll n;||| 34 cin >> n;||| 35 if (n <= 5) {||| 36 cout << 15 << '\n';||| 37 continue;||| 38 }||| 39 if (n % 2 != 0) n++;||| 40 cout << n * 5 / 2 << '\n';||| 41 }||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using ll = long long;||| 3 using namespace std;||| 4 int mod = 1e9 + 7;||| 5 string to_string(string& s) { return '""' + s + '""'; }||| 6 string to_string(bool& b) { return b ? ""true"" : ""false""; }||| 7 string to_string(const char* s) {||| 8 string t;||| 9 return to_string(t = s);||| 10 }||| 11 template <class A, class B>||| 12 string to_string(pair<A, B>& p) {||| 13 return ""("" + to_string(p.first) + "", "" + to_string(p.second) + "")"";||| 14 }||| 15 template <class A>||| 16 string to_string(A& v) {||| 17 string s;||| 18 for (auto& x : v) s += (s.empty() ? """" : "", "") + to_string(x);||| 19 return ""{"" + s + ""}"";||| 20 }||| 21 template <class... Ts>||| 22 void _debug(Ts&... args) {||| 23 (..., (cerr << "" "" << to_string(args)));||| 24 cerr << '\n';||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(nullptr);||| 29 cout.tie(nullptr);||| 30 int t;||| 31 cin >> t;||| 32 while (t--) {||| 33 ll n;||| 34 cin >> n;||| 35 if (n <= 3) {||| 36 cout << 15 << '\n';||| 37 continue;||| 38 }||| 39 if (n % 2 != 0) n++;||| 40 cout << n * 5 / 2 << '\n';||| 41 }||| 42 }||| "	35 if (n <= 5) {
39	129	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 int dp[1005];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int W, H;||| 13 cin >> W >> H;||| 14 int x1, y1, x2, y2;||| 15 cin >> x1 >> y1 >> x2 >> y2;||| 16 int w, h;||| 17 cin >> w >> h;||| 18 int res = INT_MAX;||| 19 if (x1 >= w) {||| 20 res = 0;||| 21 } else if (x2 - x1 + w <= W && h <= H) {||| 22 res = min(res, w + (x2 - x1) - x2);||| 23 }||| 24 if (W - x2 >= w) {||| 25 res = 0;||| 26 } else if (x2 - x1 + w <= W) {||| 27 res = min(res, w + (x2 - x1) - (W - x1));||| 28 }||| 29 if (y1 >= h) {||| 30 res = 0;||| 31 } else if (y2 - y1 + h <= H) {||| 32 res = min(res, h + (y2 - y1) - y2);||| 33 }||| 34 if (H - y2 >= h) {||| 35 res = 0;||| 36 } else if (y2 - y1 + h <= H) {||| 37 res = min(res, h + (y2 - y1) - (H - y1));||| 38 }||| 39 if (h > H || w > W) res = -1;||| 40 if (res == INT_MAX) res = -1;||| 41 cout << res << '\n';||| 42 }||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MOD = 1e9 + 7;||| 4 int dp[1005];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int W, H;||| 13 cin >> W >> H;||| 14 int x1, y1, x2, y2;||| 15 cin >> x1 >> y1 >> x2 >> y2;||| 16 int w, h;||| 17 cin >> w >> h;||| 18 int res = INT_MAX;||| 19 if (x1 >= w) {||| 20 res = 0;||| 21 } else if (x2 - x1 + w <= W && h <= H) {||| 22 res = min(res, w + (x2 - x1) - x2);||| 23 }||| 24 if (W - x2 >= w) {||| 25 res = 0;||| 26 } else if (x2 - x1 + w <= W) {||| 27 res = min(res, w + (x2 - x1) - (W - x1));||| 28 }||| 29 if (y1 >= h) {||| 30 res = 0;||| 31 } else if (y2 - y1 + w <= H) {||| 32 res = min(res, h + (y2 - y1) - y2);||| 33 }||| 34 if (H - y2 >= h) {||| 35 res = 0;||| 36 } else if (y2 - y1 + h <= H) {||| 37 res = min(res, h + (y2 - y1) - (H - y1));||| 38 }||| 39 if (h > H || w > W) res = -1;||| 40 if (res == INT_MAX) res = -1;||| 41 cout << res << '\n';||| 42 }||| 43 }||| 	31 } else if (y2 - y1 + h <= H) {
39	246	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int W, H, w, h;||| 8 cin >> W >> H;||| 9 long long int x1, y1, x2, y2;||| 10 cin >> x1 >> y1 >> x2 >> y2;||| 11 cin >> w >> h;||| 12 long long int disth, distw;||| 13 distw = max(x1, W - x2);||| 14 disth = max(y1, H - y2);||| 15 long long int ans1 = INT_MAX, ans2 = INT_MAX;||| 16 if (h <= disth || w <= distw) {||| 17 cout << 0 << endl;||| 18 } else if (h + abs(y2 - y1) > H && w + abs(x2 - x1) > W) {||| 19 cout << -1 << endl;||| 20 } else {||| 21 if (h + y2 - y1 <= H) {||| 22 ans1 = abs(disth - h);||| 23 }||| 24 if (w + abs(x2 - x1) <= W) {||| 25 ans2 = abs(distw - w);||| 26 }||| 27 cout << min(ans1, ans2) << endl;||| 28 }||| 29 }||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int W, H, w, h;||| 8 cin >> W >> H;||| 9 long long int x1, y1, x2, y2;||| 10 cin >> x1 >> y1 >> x2 >> y2;||| 11 cin >> w >> h;||| 12 long long int disth, distw;||| 13 distw = max(x1, w - x2);||| 14 disth = max(y1, h - y2);||| 15 long long int ans1 = INT_MAX, ans2 = INT_MAX;||| 16 if (h <= disth || w <= distw) {||| 17 cout << 0 << endl;||| 18 } else if (h + abs(y2 - y1) > H && w + abs(x2 - x1) > W) {||| 19 cout << -1 << endl;||| 20 } else {||| 21 if (h + y2 - y1 <= H) {||| 22 ans1 = abs(disth - h);||| 23 }||| 24 if (w + abs(x2 - x1) <= W) {||| 25 ans2 = abs(distw - w);||| 26 }||| 27 cout << min(ans1, ans2) << endl;||| 28 }||| 29 }||| 30 }||| 	13 distw = max(x1, W - x2);
39	24	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 T lcm(T a, T b) {||| 9 return a * b / gcd(a, b);||| 10 }||| 11 int main() {||| 12 int t;||| 13 scanf(""%d"", &t);||| 14 long long W, H, w, h, x1, y1, x2, y2, x3, y3, x4, y4, mih, miw;||| 15 while (t--) {||| 16 scanf(""%lld%lld%lld%lld%lld%lld%lld%lld"", &W, &H, &x1, &y1, &x2, &y2, &w,||| 17 &h);||| 18 double mid1 = (x1 + x2) / 2.0;||| 19 double mid2 = (y1 + y2) / 2.0;||| 20 double mid3 = W / 2.0;||| 21 double mid4 = H / 2.0;||| 22 double ans = -1;||| 23 if (mid1 < mid3 && mid2 >= mid4) {||| 24 x3 = W, y3 = 0;||| 25 x4 = W - w, y4 = h;||| 26 mih = y4 - y1, miw = x2 - x4;||| 27 if (mih <= 0 || miw <= 0) {||| 28 ans = 0.0;||| 29 } else if (H - y2 >= mih && x1 >= miw) {||| 30 ans = min((double)mih, (double)miw);||| 31 } else if (H - y2 >= mih && x1 < miw) {||| 32 ans = (double)mih;||| 33 } else if (H - y2 < mih && x1 >= miw) {||| 34 ans = (double)miw;||| 35 } else {||| 36 ans = -1;||| 37 }||| 38 } else if (mid1 < mid3 && mid2 < mid4) {||| 39 x3 = W, y3 = H;||| 40 x4 = W - w, y4 = H - h;||| 41 mih = y2 - y4, miw = x2 - x4;||| 42 if (mih <= 0 || miw <= 0) {||| 43 ans = 0.0;||| 44 } else if (y1 >= mih && x1 >= miw) {||| 45 ans = min((double)mih, (double)miw);||| 46 } else if (y1 >= mih && x1 < miw) {||| 47 ans = (double)mih;||| 48 } else if (y1 < mih && x1 >= miw) {||| 49 ans = (double)miw;||| 50 } else {||| 51 ans = -1;||| 52 }||| 53 } else if (mid1 >= mid3 && mid2 < mid4) {||| 54 x3 = 0, y3 = H;||| 55 x4 = w, y4 = H - h;||| 56 mih = y2 - y4, miw = x4 - x1;||| 57 if (mih <= 0 || miw <= 0) {||| 58 ans = 0.0;||| 59 } else if (y1 >= mih && W - x2 >= miw) {||| 60 ans = min((double)mih, (double)miw);||| 61 } else if (y1 >= mih && W - x2 < miw) {||| 62 ans = (double)mih;||| 63 } else if (y1 < mih && W - x2 >= miw) {||| 64 ans = (double)miw;||| 65 } else {||| 66 ans = -1;||| 67 }||| 68 } else {||| 69 x3 = 0, y3 = 0;||| 70 x4 = w, y4 = h;||| 71 mih = y4 - y1, miw = x4 - x1;||| 72 if (mih <= 0 || miw <= 0) {||| 73 ans = 0.0;||| 74 } else if (H - y2 >= mih && W - x2 >= miw) {||| 75 ans = min((double)mih, (double)miw);||| 76 } else if (H - y2 >= mih && W - x2 < miw) {||| 77 ans = (double)mih;||| 78 } else if (H - y2 < mih && W - x2 >= miw) {||| 79 ans = (double)miw;||| 80 } else {||| 81 ans = -1;||| 82 }||| 83 }||| 84 if (ans == -1) {||| 85 printf(""-1\n"");||| 86 } else {||| 87 printf(""%.9lf\n"", ans);||| 88 }||| 89 }||| 90 return 0;||| 91 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 T lcm(T a, T b) {||| 9 return a * b / gcd(a, b);||| 10 }||| 11 int main() {||| 12 int t;||| 13 scanf(""%d"", &t);||| 14 long long W, H, w, h, x1, y1, x2, y2, x3, y3, x4, y4, mih, miw;||| 15 while (t--) {||| 16 scanf(""%lld%lld%lld%lld%lld%lld%lld%lld"", &W, &H, &x1, &y1, &x2, &y2, &w,||| 17 &h);||| 18 double mid1 = (x1 + x2) / 2.0;||| 19 double mid2 = (y1 + y2) / 2.0;||| 20 double mid3 = W / 2.0;||| 21 double mid4 = H / 2.0;||| 22 double ans = -1;||| 23 if (mid1 < mid3 && mid2 >= mid4) {||| 24 x3 = W, y3 = 0;||| 25 x4 = W - w, y4 = h;||| 26 mih = y4 - y1, miw = x2 - x4;||| 27 if (mih <= 0 || miw <= 0) {||| 28 ans = 0.0;||| 29 } else if (H - y2 >= mih && x1 >= miw) {||| 30 ans = min((double)mih, (double)miw);||| 31 } else if (H - y2 >= mih && x1 < miw) {||| 32 ans = (double)mih;||| 33 } else if (H - y2 < mih && x1 >= miw) {||| 34 ans = (double)miw;||| 35 } else {||| 36 ans = -1;||| 37 }||| 38 } else if (mid1 < mid3 && mid2 < mid4) {||| 39 x3 = W, y3 = H;||| 40 x4 = W - w, y4 = H - h;||| 41 mih = y2 - y4, miw = x2 - x4;||| 42 if (mih <= 0 || miw <= 0) {||| 43 ans = 0.0;||| 44 } else if (y1 >= mih && x1 >= miw) {||| 45 ans = min((double)mih, (double)miw);||| 46 } else if (y1 >= mih && x1 < miw) {||| 47 ans = (double)mih;||| 48 } else if (y1 < mih && x1 >= miw) {||| 49 ans = (double)miw;||| 50 } else {||| 51 ans = -1;||| 52 }||| 53 } else if (mid1 >= mid3 && mid2 < mid4) {||| 54 x3 = 0, y3 = H;||| 55 x4 = w, y4 = H - h;||| 56 mih = y4 - y2, miw = x4 - x1;||| 57 if (mih <= 0 || miw <= 0) {||| 58 ans = 0.0;||| 59 } else if (y1 >= mih && W - x2 >= miw) {||| 60 ans = min((double)mih, (double)miw);||| 61 } else if (y1 >= mih && W - x2 < miw) {||| 62 ans = (double)mih;||| 63 } else if (y1 < mih && W - x2 >= miw) {||| 64 ans = (double)miw;||| 65 } else {||| 66 ans = -1;||| 67 }||| 68 } else {||| 69 x3 = 0, y3 = 0;||| 70 x4 = w, y4 = h;||| 71 mih = y4 - y1, miw = x4 - x1;||| 72 if (mih <= 0 || miw <= 0) {||| 73 ans = 0.0;||| 74 } else if (H - y2 >= mih && W - x2 >= miw) {||| 75 ans = min((double)mih, (double)miw);||| 76 } else if (H - y2 >= mih && W - x2 < miw) {||| 77 ans = (double)mih;||| 78 } else if (H - y2 < mih && W - x2 >= miw) {||| 79 ans = (double)miw;||| 80 } else {||| 81 ans = -1;||| 82 }||| 83 }||| 84 if (ans == -1) {||| 85 printf(""-1\n"");||| 86 } else {||| 87 printf(""%.9lf\n"", ans);||| 88 }||| 89 }||| 90 return 0;||| 91 }||| "	56 mih = y2 - y4, miw = x4 - x1;
39	281	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int min(int a, int b) {||| 4 if (a <= b)||| 5 return a;||| 6 else||| 7 return b;||| 8 }||| 9 int min_dis(int W, int H, int x1, int y1, int x2, int y2, int w, int h) {||| 10 int dis = 1e9;||| 11 if (h > H || w > W) {||| 12 return -1;||| 13 } else {||| 14 if ((x2 - x1 + w) > W && (y2 - y1 + h) > H) {||| 15 return -1;||| 16 } else {||| 17 if (w + (x2 - x1) <= W) {||| 18 dis = min(dis, min(w - x1, w - (W - x2)));||| 19 }||| 20 if (h + (y2 - y1) <= H) {||| 21 dis = min(dis, min(h - (H - y2), h - y1));||| 22 }||| 23 }||| 24 }||| 25 if (dis < 0) {||| 26 dis = 0;||| 27 }||| 28 return dis;||| 29 }||| 30 int main() {||| 31 int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 int W, H;||| 35 cin >> W >> H;||| 36 int x1, y1, x2, y2;||| 37 cin >> x1 >> y1 >> x2 >> y2;||| 38 int w, h;||| 39 cin >> w >> h;||| 40 int dis = min_dis(W, H, x1, y1, x2, y2, w, h);||| 41 cout << dis << endl;||| 42 }||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int min(int a, int b) {||| 4 if (a <= b)||| 5 return a;||| 6 else||| 7 return b;||| 8 }||| 9 int min_dis(int W, int H, int x1, int y1, int x2, float y2, int w, int h) {||| 10 int dis = 1e9;||| 11 if (h > H || w > W) {||| 12 return -1;||| 13 } else {||| 14 if ((x2 - x1 + w) > W && (y2 - y1 + h) > H) {||| 15 return -1;||| 16 } else {||| 17 if (w + (x2 - x1) <= W) {||| 18 dis = min(dis, min(w - x1, w - (W - x2)));||| 19 }||| 20 if (h + (y2 - y1) <= H) {||| 21 dis = min(dis, min(h - (H - y2), h - y1));||| 22 }||| 23 }||| 24 }||| 25 if (dis < 0) {||| 26 dis = 0;||| 27 }||| 28 return dis;||| 29 }||| 30 int main() {||| 31 int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 int W, H;||| 35 cin >> W >> H;||| 36 int x1, y1, x2, y2;||| 37 cin >> x1 >> y1 >> x2 >> y2;||| 38 int w, h;||| 39 cin >> w >> h;||| 40 int dis = min_dis(W, H, x1, y1, x2, y2, w, h);||| 41 cout << dis << endl;||| 42 }||| 43 }||| 	9 int min_dis(int W, int H, int x1, int y1, int x2, int y2, int w, int h) {
39	37	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int h, w, H, W, minn = 999999999;||| 8 cin >> w >> h;||| 9 int xx, dx, xy, dy;||| 10 cin >> xx >> xy >> dx >> dy;||| 11 cin >> W >> H;||| 12 if (W + dx - xx <= w) {||| 13 if (W <= xx)||| 14 minn = 0;||| 15 else||| 16 minn = min(minn, W - xx);||| 17 dx = w - dx;||| 18 if (W <= dx)||| 19 minn = 0;||| 20 else||| 21 minn = min(minn, W - dx);||| 22 }||| 23 if (H + dy - xy <= h) {||| 24 if (H <= xy)||| 25 minn = 0;||| 26 else||| 27 minn = min(minn, H - xy);||| 28 dy = h - dy;||| 29 if (H <= dy)||| 30 minn = 0;||| 31 else||| 32 minn = min(minn, H - dy);||| 33 }||| 34 if (minn == 999999999)||| 35 cout << ""-1\n"";||| 36 else||| 37 cout << minn << "".0000000\n"";||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int h, w, H, W, minn = 999999999;||| 8 cin >> w >> h;||| 9 int xx, dx, xy, dy;||| 10 cin >> xx >> xy >> dx >> dy;||| 11 cin >> W >> H;||| 12 if (W + dx - xx <= w) {||| 13 if (W <= xx)||| 14 minn = 0;||| 15 else||| 16 minn = min(minn, W - xx);||| 17 dx = w - dx;||| 18 if (W <= dx)||| 19 minn = 0;||| 20 else||| 21 minn = min(minn, W - dx);||| 22 }||| 23 if (H + dy - xy <= h) {||| 24 if (H <= xy)||| 25 minn = 0;||| 26 else||| 27 minn = min(minn, H - xy);||| 28 dy = H - dy;||| 29 if (H <= dy)||| 30 minn = 0;||| 31 else||| 32 minn = min(minn, H - dy);||| 33 }||| 34 if (minn == 999999999)||| 35 cout << ""-1\n"";||| 36 else||| 37 cout << minn << "".0000000\n"";||| 38 }||| 39 }||| "	28 dy = h - dy;
39	57	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int W, H, w, h;||| 8 int x1, y1, x2, y2;||| 9 cin >> W >> H;||| 10 cin >> x1 >> y1 >> x2 >> y2;||| 11 cin >> w >> h;||| 12 int ans = INT_MAX;||| 13 if (x2 + (w - x1) <= W) {||| 14 ans = min(ans, (w - x1));||| 15 }||| 16 if (x1 - (w - (W - x2)) >= 0) {||| 17 ans = min(ans, (w - (W - x2)));||| 18 }||| 19 if (y2 + (h - y1) <= H) {||| 20 ans = min(ans, (h - y1));||| 21 }||| 22 if (y1 - (h - (H - y2)) >= 0) {||| 23 ans = min(ans, (h - (H - y2)));||| 24 }||| 25 if (ans == INT_MAX) {||| 26 cout << -1 << endl;||| 27 } else {||| 28 cout << max(0, ans) << endl;||| 29 }||| 30 }||| 31 return 0;||| 32 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int W, H, w, h;||| 8 int x1, y1, x2, y2;||| 9 cin >> W >> H;||| 10 cin >> x1 >> y1 >> x2 >> y2;||| 11 cin >> w >> h;||| 12 int ans = INT_MAX;||| 13 if (x2 + (w - x1) <= W) {||| 14 ans = min(ans, (w - x1));||| 15 }||| 16 if (x1 - (w - (W - x2)) > 0) {||| 17 ans = min(ans, (w - (W - x2)));||| 18 }||| 19 if (y2 + (h - y1) <= H) {||| 20 ans = min(ans, (h - y1));||| 21 }||| 22 if (y1 - (h - (H - y2)) > 0) {||| 23 ans = min(ans, (h - (H - y2)));||| 24 }||| 25 if (ans == INT_MAX) {||| 26 cout << -1 << endl;||| 27 } else {||| 28 cout << max(0, ans) << endl;||| 29 }||| 30 }||| 31 return 0;||| 32 }||| 	16 if (x1 - (w - (W - x2)) >= 0) {
40	0	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int x, long long int y, long long int p) {||| 4 long long int res = 1;||| 5 x = x % p;||| 6 while (y > 0) {||| 7 if (y & 1) res = (res * x) % p;||| 8 y = y >> 1;||| 9 x = (x * x) % p;||| 10 }||| 11 return res;||| 12 }||| 13 long long int modInverse(long long int n, long long int p) {||| 14 return power(n, p - 2, p);||| 15 }||| 16 long long int nCrModPFermat(long long int n, long long int r, long long int p) {||| 17 if (r == 0) return 1;||| 18 long long int fac[n + 1];||| 19 fac[0] = 1;||| 20 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 21 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 22 p;||| 23 }||| 24 long long int log2_32bit(long long int x) {||| 25 long long int res = 0;||| 26 while (x >>= 1) res++;||| 27 return res;||| 28 }||| 29 long long int isPowerof2(long long int x) { return (x && !(x & x - 1)); }||| 30 int main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 long long int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 long long int n;||| 38 cin >> n;||| 39 long long int a[n];||| 40 for (long long int i = 0; i < n; i++) cin >> a[i];||| 41 ;||| 42 long long int b[n];||| 43 for (int i = 0; i < n; i++) {||| 44 cin >> b[i];||| 45 }||| 46 if (n == 1) {||| 47 cout << 0 << ""\n"";||| 48 continue;||| 49 }||| 50 long long int ans = 1000000007;||| 51 long long int pre[n - 1];||| 52 pre[0] = b[0];||| 53 for (int i = 1; i < n - 1; i++) {||| 54 pre[i] = pre[i - 1] + b[i];||| 55 }||| 56 long long int suf[n - 1];||| 57 suf[n - 2] = a[n - 1];||| 58 for (int i = n - 2; i >= 1; i--) {||| 59 suf[i - 1] = suf[i] + a[i];||| 60 }||| 61 for (int i = 0; i < n; i++) {||| 62 if (i == 0) {||| 63 ans = min(ans, suf[i]);||| 64 } else if (i == n - 1) {||| 65 ans = min(ans, pre[i - 1]);||| 66 } else {||| 67 ans = min(ans, max(suf[i], pre[i - 1]));||| 68 }||| 69 }||| 70 cout << ans << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int x, long long int y, long long int p) {||| 4 long long int res = 1;||| 5 x = x % p;||| 6 while (y > 0) {||| 7 if (y & 1) res = (res * x) % p;||| 8 y = y >> 1;||| 9 x = (x * x) % p;||| 10 }||| 11 return res;||| 12 }||| 13 long long int modInverse(long long int n, long long int p) {||| 14 return power(n, p - 2, p);||| 15 }||| 16 long long int nCrModPFermat(long long int n, long long int r, long long int p) {||| 17 if (r == 0) return 1;||| 18 long long int fac[n + 1];||| 19 fac[0] = 1;||| 20 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 21 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 22 p;||| 23 }||| 24 long long int log2_32bit(long long int x) {||| 25 long long int res = 0;||| 26 while (x >>= 1) res++;||| 27 return res;||| 28 }||| 29 long long int isPowerof2(long long int x) { return (x && !(x & x - 1)); }||| 30 int main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 long long int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 long long int n;||| 38 cin >> n;||| 39 long long int a[n];||| 40 for (long long int i = 0; i < n; i++) cin >> a[i];||| 41 ;||| 42 long long int b[n];||| 43 for (int i = 0; i < n; i++) {||| 44 cin >> b[i];||| 45 }||| 46 if (n == 1) {||| 47 cout << 0 << ""\n"";||| 48 continue;||| 49 }||| 50 long long int ans = 1000000007;||| 51 long long int pre[n - 1];||| 52 pre[0] = b[0];||| 53 for (int i = 1; i < n - 1; i++) {||| 54 pre[i] = pre[i - 1] + b[i];||| 55 }||| 56 long long int suf[n - 1];||| 57 suf[n - 2] = a[n - 1];||| 58 for (int i = n - 2; i >= 1; i--) {||| 59 suf[i - 1] = suf[i] + a[i];||| 60 }||| 61 for (int i = 0; i < n; i++) {||| 62 if (i == 0) {||| 63 ans = min(ans, suf[i]);||| 64 } else if (i == n) {||| 65 ans = min(ans, pre[i - 1]);||| 66 } else {||| 67 ans = min(ans, max(suf[i], pre[i - 1]));||| 68 }||| 69 }||| 70 cout << ans << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	64 } else if (i == n - 1) {
40	240	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""sse,sse2,sse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 const long long INF = 1e10;||| 7 void solve() {||| 8 int m;||| 9 cin >> m;||| 10 vector<long long> a(m), b(m), s1(m + 1), s2(m + 1);||| 11 for (int i = 0; i < a.size(); ++i) cin >> a[i];||| 12 ;||| 13 for (int i = 0; i < b.size(); ++i) cin >> b[i];||| 14 ;||| 15 for (int i = 0; i < m; ++i) s1[i + 1] = s1[i] + a[i];||| 16 for (int i = 0; i < m; ++i) s2[i + 1] = s2[i] + b[i];||| 17 if (m == 1) {||| 18 cout << 0 << '\n';||| 19 return;||| 20 }||| 21 int l = 1, r = m + 1;||| 22 while (l + 1 != r) {||| 23 int j = (l + r) / 2;||| 24 if (s1[m] - s1[j] >= s2[j - 1])||| 25 l = j;||| 26 else||| 27 r = j;||| 28 }||| 29 long long minn = INF;||| 30 for (int i = max(1, l - 3); i < min(m + 1, r + 3); ++i) {||| 31 minn = min(minn, max(s1[m] - s1[i], s2[i - 1]));||| 32 }||| 33 cout << minn << '\n';||| 34 }||| 35 signed main() {||| 36 int t = 1;||| 37 cin >> t;||| 38 for (; t > 0; --t) solve();||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(""Ofast"")||| 4 #pragma GCC target(""sse,sse2,sse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 const long long INF = 1e10;||| 7 void solve() {||| 8 int m;||| 9 cin >> m;||| 10 vector<long long> a(m), b(m), s1(m + 1), s2(m + 1);||| 11 for (int i = 0; i < a.size(); ++i) cin >> a[i];||| 12 ;||| 13 for (int i = 0; i < b.size(); ++i) cin >> b[i];||| 14 ;||| 15 for (int i = 0; i < m; ++i) s1[i + 1] = s1[i] + a[i];||| 16 for (int i = 0; i < m; ++i) s2[i + 1] = s2[i] + b[i];||| 17 if (m == 1) {||| 18 cout << 0 << '\n';||| 19 return;||| 20 }||| 21 int l = 1, r = m + 1;||| 22 while (l + 1 != r) {||| 23 int j = (l + r) / 2;||| 24 if (s1[m] - s1[j] >= s2[j - 1])||| 25 r = j;||| 26 else||| 27 l = j;||| 28 }||| 29 long long minn = INF;||| 30 for (int i = max(1, l - 3); i < min(m + 1, r + 3); ++i) {||| 31 minn = min(minn, max(s1[m] - s1[i], s2[i - 1]));||| 32 }||| 33 cout << minn << '\n';||| 34 }||| 35 signed main() {||| 36 int t = 1;||| 37 cin >> t;||| 38 for (; t > 0; --t) solve();||| 39 }||| "	25 l = j;
40	86	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 const double eps = 1e-9;||| 5 const double pi = acos(-1);||| 6 const int inf = 0x3f3f3f3f;||| 7 void Print(vector<string> v) {||| 8 for (auto i : v) cout << i << endl;||| 9 }||| 10 bool lexo_inc(string a, string b) { return a < b; }||| 11 bool lexo_dec(string a, string b) { return a > b; }||| 12 long long binarySearch(long long arr[], long long l, long long r, long long x) {||| 13 if (r >= l) {||| 14 long long mid = l + (r - l) / 2;||| 15 if (arr[mid] == x) return mid;||| 16 if (arr[mid] > x) return binarySearch(arr, l, mid - 1, x);||| 17 return binarySearch(arr, mid + 1, r, x);||| 18 }||| 19 return -1;||| 20 }||| 21 int main() {||| 22 long long T;||| 23 cin >> T;||| 24 for (long long i = 0; i < T; i++) {||| 25 long long m;||| 26 cin >> m;||| 27 vector<long long> r1(m), r2(m);||| 28 vector<long long> bsum1, sum2;||| 29 long long sum = 0;||| 30 for (long long i = 0; i < m; i++) {||| 31 cin >> r1[i];||| 32 sum += r1[i];||| 33 }||| 34 sum -= r1[0];||| 35 for (long long i = 1; i < m; i++) {||| 36 bsum1.push_back(sum);||| 37 sum -= r1[i];||| 38 }||| 39 bsum1.push_back(sum);||| 40 sum = 0;||| 41 for (long long i = 0; i < m; i++) {||| 42 cin >> r2[i];||| 43 sum2.push_back(sum);||| 44 sum += r2[i];||| 45 }||| 46 long long ans = inf;||| 47 for (long long i = 0; i < m; i++) {||| 48 long long x = max(bsum1[i], sum2[i]);||| 49 ans = min(ans, x);||| 50 }||| 51 cout << ans << endl;||| 52 }||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 const double eps = 1e-9;||| 5 const double pi = acos(-1);||| 6 const int inf = 0x3f3f3f3f;||| 7 void Print(vector<string> v) {||| 8 for (auto i : v) cout << i << endl;||| 9 }||| 10 bool lexo_inc(string a, string b) { return a < b; }||| 11 bool lexo_dec(string a, string b) { return a > b; }||| 12 long long binarySearch(long long arr[], long long l, long long r, long long x) {||| 13 if (r >= l) {||| 14 long long mid = l + (r - l) / 2;||| 15 if (arr[mid] == x) return mid;||| 16 if (arr[mid] > x) return binarySearch(arr, l, mid - 1, x);||| 17 return binarySearch(arr, mid + 1, r, x);||| 18 }||| 19 return -1;||| 20 }||| 21 int main() {||| 22 long long T;||| 23 cin >> T;||| 24 for (long long i = 0; i < T; i++) {||| 25 long long m;||| 26 cin >> m;||| 27 vector<long long> r1(m), r2(m);||| 28 vector<long long> bsum1, sum2;||| 29 long long sum = 0;||| 30 for (long long i = 0; i < m; i++) {||| 31 cin >> r1[i];||| 32 sum += r1[i];||| 33 }||| 34 sum -= r1[0];||| 35 for (long long i = 1; i < m; i++) {||| 36 bsum1.push_back(sum);||| 37 sum -= r1[1];||| 38 }||| 39 bsum1.push_back(sum);||| 40 sum = 0;||| 41 for (long long i = 0; i < m; i++) {||| 42 cin >> r2[i];||| 43 sum2.push_back(sum);||| 44 sum += r2[i];||| 45 }||| 46 long long ans = inf;||| 47 for (long long i = 0; i < m; i++) {||| 48 long long x = max(bsum1[i], sum2[i]);||| 49 ans = min(ans, x);||| 50 }||| 51 cout << ans << endl;||| 52 }||| 53 }||| 	37 sum -= r1[i];
40	72	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void want() {||| 4 long long n;||| 5 cin >> n;||| 6 long long i, j;||| 7 long long A[2][n];||| 8 long long sum1 = 0;||| 9 long long sum2 = 0;||| 10 for (j = 0; j < 2; j++) {||| 11 for (i = 0; i < n; i++) {||| 12 cin >> A[j][i];||| 13 }||| 14 }||| 15 long long pre = 0, suf = 0;||| 16 for (i = 0; i < n - 1; i++) {||| 17 pre += A[1][i];||| 18 }||| 19 long long ans = pre;||| 20 for (i = n - 2; i >= 0; i--) {||| 21 pre -= A[1][i];||| 22 suf += A[0][i + 1];||| 23 ans = min(ans, max(pre, suf));||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(false);||| 29 cin.tie(0);||| 30 cout.tie(0);||| 31 long long t;||| 32 cin >> t;||| 33 while (t--) {||| 34 want();||| 35 }||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void want() {||| 4 long long n;||| 5 cin >> n;||| 6 long long i, j;||| 7 long long A[2][n];||| 8 long long sum1 = 0;||| 9 long long sum2 = 0;||| 10 for (j = 0; j < 2; j++) {||| 11 for (i = 0; i < n; i++) {||| 12 cin >> A[j][i];||| 13 }||| 14 }||| 15 long long pre = 0, suf = 0;||| 16 for (i = 0; i < n - 1; i++) {||| 17 pre += A[1][i];||| 18 }||| 19 long long ans = pre;||| 20 for (i = n - 2; i > 0; i--) {||| 21 pre -= A[1][i];||| 22 suf += A[0][i + 1];||| 23 ans = min(ans, max(pre, suf));||| 24 }||| 25 cout << ans << endl;||| 26 }||| 27 int main() {||| 28 ios_base::sync_with_stdio(false);||| 29 cin.tie(0);||| 30 cout.tie(0);||| 31 long long t;||| 32 cin >> t;||| 33 while (t--) {||| 34 want();||| 35 }||| 36 }||| 	20 for (i = n - 2; i >= 0; i--) {
40	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 vector<vector<int>> ar(2, vector<int>());||| 7 vector<int> pref;||| 8 vector<int> suf;||| 9 for (int q = 0; q < t; ++q) {||| 10 int m;||| 11 cin >> m;||| 12 ar[0].resize(m);||| 13 ar[1].resize(m);||| 14 pref.resize(m);||| 15 suf.resize(m);||| 16 int sum1 = 0;||| 17 int sum2 = 0;||| 18 for (int i = 0; i < 2; ++i) {||| 19 for (int j = 0; j < m; ++j) {||| 20 cin >> ar[i][j];||| 21 if (i == 0)||| 22 sum1 += ar[i][j];||| 23 else||| 24 sum2 += ar[i][j];||| 25 }||| 26 }||| 27 suf[m - 1] = ar[1][m - 1];||| 28 for (int i = m - 2; i > -1; --i) {||| 29 suf[i] = ar[1][i] + suf[i + 1];||| 30 }||| 31 pref[0] = ar[0][0];||| 32 int ans = 1e9;||| 33 for (int i = 1; i < m; ++i) {||| 34 pref[i] = ar[0][i] + pref[i - 1];||| 35 }||| 36 for (int i = 0; i < m; ++i) {||| 37 ans = min(ans, max(sum1 - pref[i], sum2 - suf[i]));||| 38 }||| 39 cout << ans << ""\n"";||| 40 }||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 vector<vector<int>> ar(2, vector<int>());||| 7 vector<int> pref;||| 8 vector<int> suf;||| 9 for (int q = 0; q < t; ++q) {||| 10 int m;||| 11 cin >> m;||| 12 ar[0].resize(m);||| 13 ar[1].resize(m);||| 14 pref.resize(m);||| 15 suf.resize(m);||| 16 int sum1 = 0;||| 17 int sum2 = 0;||| 18 for (int i = 0; i < 2; ++i) {||| 19 for (int j = 0; j < m; ++j) {||| 20 cin >> ar[i][j];||| 21 if (i == 0)||| 22 sum1 += ar[i][j];||| 23 else||| 24 sum2 += ar[i][j];||| 25 }||| 26 }||| 27 suf[m - 1] = ar[1][m - 1];||| 28 for (int i = m - 2; i > -1; --i) {||| 29 suf[i] = ar[1][i] + suf[i + 1];||| 30 }||| 31 pref[0] = ar[0][0];||| 32 int ans = 1e9;||| 33 for (int i = 0; i < m; ++i) {||| 34 pref[i] = ar[0][i] + pref[i - 1];||| 35 }||| 36 for (int i = 0; i < m; ++i) {||| 37 ans = min(ans, max(sum1 - pref[i], sum2 - suf[i]));||| 38 }||| 39 cout << ans << ""\n"";||| 40 }||| 41 }||| "	33 for (int i = 1; i < m; ++i) {
40	244	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int m;||| 5 cin >> m;||| 6 int a[2][m], i, j;||| 7 for (j = 0; j < 2; j++) {||| 8 for (i = 0; i < m; i++) {||| 9 cin >> a[j][i];||| 10 }||| 11 }||| 12 for (i = 0; i < 2; i++) {||| 13 for (j = 1; j < m; j++) {||| 14 a[i][j] += a[i][j - 1];||| 15 }||| 16 }||| 17 int ans = INT_MAX;||| 18 for (i = 0; i < m; i++) {||| 19 int sum;||| 20 if (i == 0) {||| 21 sum = a[0][m - 1] - a[0][0];||| 22 }||| 23 if (i == (m - 1)) {||| 24 if ((m - 2) >= 0)||| 25 sum = a[1][m - 2];||| 26 else||| 27 sum = 0;||| 28 }||| 29 if (i > 0 && i < (m - 1)) {||| 30 int sum2;||| 31 int sum3 = a[0][m - 1] - a[0][i];||| 32 sum2 = a[1][i - 1];||| 33 sum = max(sum2, sum3);||| 34 }||| 35 ans = min(ans, sum);||| 36 }||| 37 cout << ans << '\n';||| 38 }||| 39 int main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 int tt;||| 43 cin >> tt;||| 44 for (int i = 1; i <= tt; ++i) solve();||| 45 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int m;||| 5 cin >> m;||| 6 int a[2][m], i, j;||| 7 for (j = 0; j < 2; j++) {||| 8 for (i = 0; i < m; i++) {||| 9 cin >> a[j][i];||| 10 }||| 11 }||| 12 for (i = 0; i < 2; i++) {||| 13 for (j = 1; j < m; j++) {||| 14 a[i][j] += a[i][j - 1];||| 15 }||| 16 }||| 17 int ans = INT_MAX;||| 18 for (i = 0; i < m; i++) {||| 19 int sum;||| 20 if (i == 0) {||| 21 sum = a[0][m - 1] - a[0][0];||| 22 }||| 23 if (i == (m - 1)) {||| 24 if ((m - 2) > 0)||| 25 sum = a[1][m - 2];||| 26 else||| 27 sum = 0;||| 28 }||| 29 if (i > 0 && i < (m - 1)) {||| 30 int sum2;||| 31 int sum3 = a[0][m - 1] - a[0][i];||| 32 sum2 = a[1][i - 1];||| 33 sum = max(sum2, sum3);||| 34 }||| 35 ans = min(ans, sum);||| 36 }||| 37 cout << ans << '\n';||| 38 }||| 39 int main() {||| 40 ios::sync_with_stdio(0);||| 41 cin.tie(0);||| 42 int tt;||| 43 cin >> tt;||| 44 for (int i = 1; i <= tt; ++i) solve();||| 45 }||| 	24 if ((m - 2) >= 0)
40	243	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 300010, M = 1005;||| 4 long long t, n, p[N], s[N], m, a[3][N];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> m;||| 11 for (int i = 1; i <= 2; i++) {||| 12 for (int j = 1; j <= m; j++) {||| 13 cin >> a[i][j];||| 14 }||| 15 }||| 16 s[m + 1] = 0;||| 17 for (int i = 1; i <= m; i++) {||| 18 p[i] = p[i - 1] + a[2][i];||| 19 }||| 20 for (int i = m; i >= 1; i--) {||| 21 s[i] = s[i + 1] + a[1][i];||| 22 }||| 23 long long res = 2e18;||| 24 for (int i = 1; i <= m; i++) {||| 25 long long x = max(p[i - 1], s[i + 1]);||| 26 res = min(res, x);||| 27 }||| 28 if (m == 1) res = 0;||| 29 cout << res << ""\n"";||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 300010, M = 1005;||| 4 long long t, n, p[N], s[N], m, a[3][N];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> m;||| 11 for (int i = 1; i <= 2; i++) {||| 12 for (int j = 1; j <= m; j++) {||| 13 cin >> a[i][j];||| 14 }||| 15 }||| 16 s[n + 1] = 0;||| 17 for (int i = 1; i <= m; i++) {||| 18 p[i] = p[i - 1] + a[2][i];||| 19 }||| 20 for (int i = m; i >= 1; i--) {||| 21 s[i] = s[i + 1] + a[1][i];||| 22 }||| 23 long long res = 2e18;||| 24 for (int i = 1; i <= m; i++) {||| 25 long long x = max(p[i - 1], s[i + 1]);||| 26 res = min(res, x);||| 27 }||| 28 if (m == 1) res = 0;||| 29 cout << res << ""\n"";||| 30 }||| 31 return 0;||| 32 }||| "	16 s[m + 1] = 0;
41	84	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 5;||| 4 long long h[N], e[N], nx[N], idx;||| 5 long long k, T, t, n, m, ans, cnt;||| 6 long long a[N], pre[10][N];||| 7 bool vis[N];||| 8 char s[N];||| 9 char str[10][10] = {"" "", "" abc"", "" acb"", "" bac"", "" bca"", "" cab"", "" cba""};||| 10 priority_queue<long long, vector<long long>, greater<long long> > q;||| 11 void init() {||| 12 char x;||| 13 for (long long i = 1; i <= 6; i++) {||| 14 for (long long x = 1, y = 1; x <= n; x++, y++) {||| 15 if (y > 3) y = 1;||| 16 pre[i][x] = pre[i][x - 1] + (s[x] != str[i][y]);||| 17 }||| 18 }||| 19 }||| 20 signed main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(0), cout.tie(0);||| 23 cin >> n >> m >> s + 1;||| 24 init();||| 25 while (m--) {||| 26 long long l, r, res = 0x3f3f3f3f;||| 27 cin >> l >> r;||| 28 if (l == r)||| 29 cout << 0 << '\n';||| 30 else if (r - l == 1) {||| 31 if (s[l] != s[r])||| 32 cout << 0 << '\n';||| 33 else||| 34 cout << 1 << '\n';||| 35 } else {||| 36 for (long long i = 1; i <= 6; i++)||| 37 res = min(res, pre[i][r] - pre[i][l - 1]);||| 38 cout << res << '\n';||| 39 }||| 40 }||| 41 return 0;||| 42 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 2e5 + 5;||| 4 long long h[N], e[N], nx[N], idx;||| 5 long long k, T, t, n, m, ans, cnt;||| 6 long long a[N], pre[10][N];||| 7 bool vis[N];||| 8 char s[N];||| 9 char str[10][10] = {"" abc"", "" acb"", "" bac"", "" bca"", "" cab"", "" cba""};||| 10 priority_queue<long long, vector<long long>, greater<long long> > q;||| 11 void init() {||| 12 char x;||| 13 for (long long i = 1; i <= 6; i++) {||| 14 for (long long x = 1, y = 1; x <= n; x++, y++) {||| 15 if (y > 3) y = 1;||| 16 pre[i][x] = pre[i][x - 1] + (s[x] != str[i][y]);||| 17 }||| 18 }||| 19 }||| 20 signed main() {||| 21 ios::sync_with_stdio(false);||| 22 cin.tie(0), cout.tie(0);||| 23 cin >> n >> m >> s + 1;||| 24 init();||| 25 while (m--) {||| 26 long long l, r, res = 0x3f3f3f3f;||| 27 cin >> l >> r;||| 28 if (l == r)||| 29 cout << 0 << '\n';||| 30 else if (r - l == 1) {||| 31 if (s[l] != s[r])||| 32 cout << 0 << '\n';||| 33 else||| 34 cout << 1 << '\n';||| 35 } else {||| 36 for (long long i = 1; i <= 6; i++)||| 37 res = min(res, pre[i][r] - pre[i][l - 1]);||| 38 cout << res << '\n';||| 39 }||| 40 }||| 41 return 0;||| 42 }||| "	"9 char str[10][10] = {"" "", "" abc"", "" acb"", "" bac"", "" bca"", "" cab"", "" cba""};"
41	134	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 const int inf = 1e9;||| 5 int n, m, v[maxn], l[maxn], ans[maxn], r[maxn], p[maxn];||| 6 char c;||| 7 int main() {||| 8 cin >> n >> m;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> c;||| 11 v[i] = c - 'a';||| 12 }||| 13 vector<int> k;||| 14 for (int i = 0; i < 3; i++) k.push_back(i);||| 15 for (int i = 1; i <= m; i++) ans[i] = inf;||| 16 for (int i = 1; i <= m; i++) cin >> l[i] >> r[i];||| 17 do {||| 18 for (int i = 1; i <= n; i++) {||| 19 p[i] = p[i - 1] + (k[i % 3] != v[i]);||| 20 }||| 21 for (int i = 1; i <= m; i++) ans[i] = min(ans[i], p[r[i]] - p[l[i] - 1]);||| 22 } while (next_permutation(k.begin(), k.end()));||| 23 for (int i = 1; i <= m; i++) cout << ans[i] << ""\n"";||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 const int inf = 1e9;||| 5 int n, m, v[maxn], l[maxn], ans[maxn], r[maxn], p[maxn];||| 6 char c;||| 7 int main() {||| 8 cin >> n >> m;||| 9 for (int i = 1; i <= n; i++) {||| 10 cin >> c;||| 11 v[i] = c - 'a';||| 12 }||| 13 vector<int> k;||| 14 for (int i = 0; i < 3; i++) k.push_back(i);||| 15 for (int i = 1; i <= m; i++) ans[i] = inf;||| 16 for (int i = 1; i <= m; i++) cin >> l[i] >> r[i];||| 17 do {||| 18 for (int i = 1; i <= n; i++) {||| 19 p[i] = p[i - 1] + (p[i % 3] != v[i]);||| 20 }||| 21 for (int i = 1; i <= m; i++) ans[i] = min(ans[i], p[r[i]] - p[l[i] - 1]);||| 22 } while (next_permutation(k.begin(), k.end()));||| 23 for (int i = 1; i <= m; i++) cout << ans[i] << ""\n"";||| 24 }||| "	19 p[i] = p[i - 1] + (k[i % 3] != v[i]);
41	137	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 200005;||| 4 int sum[6][MAX];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 ;||| 9 int n, m, l, r;||| 10 string s, temp[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 11 cin >> n >> m;||| 12 cin >> s;||| 13 for (int i = 0; i < 6; i++) {||| 14 for (int j = 0; j < n; j++) {||| 15 if (temp[i][j % 3] != s[j]) sum[i][j] = 1;||| 16 if (j > 0) sum[i][j] += sum[i][j - 1];||| 17 }||| 18 }||| 19 for (int i = 0; i < m; i++) {||| 20 cin >> l >> r;||| 21 int ans = 2e9;||| 22 for (int j = 0; j < 6; j++) {||| 23 if (l > 0)||| 24 ans = min(ans, sum[j][r - 1] - sum[j][l - 2]);||| 25 else||| 26 ans = min(ans, sum[j][r - 1]);||| 27 }||| 28 cout << ans << endl;||| 29 }||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 200005;||| 4 int sum[6][MAX];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 ;||| 9 int n, m, l, r;||| 10 string s, temp[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 11 cin >> n >> m;||| 12 cin >> s;||| 13 for (int i = 0; i < 6; i++) {||| 14 for (int j = 0; j < n; j++) {||| 15 if (temp[i][j % 3] != s[j]) sum[i][j] = 1;||| 16 if (j > 0) sum[i][j] += sum[i][j - 1];||| 17 }||| 18 }||| 19 for (int i = 0; i < m; i++) {||| 20 cin >> l >> r;||| 21 int ans = 2e9;||| 22 for (int j = 0; j < 6; j++) {||| 23 if (i > 0)||| 24 ans = min(ans, sum[j][r - 1] - sum[j][l - 2]);||| 25 else||| 26 ans = min(ans, sum[j][r - 1]);||| 27 }||| 28 cout << ans << endl;||| 29 }||| 30 }||| "	23 if (l > 0)
41	26	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MXN = 3e5 + 10;||| 4 long long n, q;||| 5 long long A[MXN], ps[6][MXN][3];||| 6 vector<long long> perm[6];||| 7 int main() {||| 8 ios::sync_with_stdio(0);||| 9 cin.tie(0);||| 10 cout.tie(0);||| 11 perm[0] = {0, 1, 2};||| 12 for (int i = 1; i < 6; i++) {||| 13 perm[i] = perm[i - 1];||| 14 next_permutation(perm[i].begin(), perm[i].end());||| 15 }||| 16 cin >> n >> q;||| 17 for (int i = 1; i <= n; i++) {||| 18 char ch;||| 19 cin >> ch;||| 20 A[i] = (ch - 'a');||| 21 }||| 22 for (int j = 0; j < 6; j++) {||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int k = 0; k < 3; k++) {||| 25 ps[j][i][k] = ps[j][i - 1][(k + 2) % 3] + (perm[j][k] != A[i]);||| 26 }||| 27 }||| 28 }||| 29 while (q--) {||| 30 long long ans = n, l, r;||| 31 cin >> l >> r;||| 32 for (int j = 0; j < 6; j++) {||| 33 long long now = ps[j][r][(r - l) % 3] - ps[j][l - 1][2];||| 34 ans = min(ans, now);||| 35 }||| 36 cout << ans << '\n';||| 37 }||| 38 return 0;||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MXN = 3e5 + 10;||| 4 long long n, q;||| 5 long long A[MXN], ps[6][MXN][3];||| 6 vector<long long> perm[6];||| 7 int main() {||| 8 ios::sync_with_stdio(0);||| 9 cin.tie(0);||| 10 cout.tie(0);||| 11 perm[0] = {0, 1, 2};||| 12 for (int i = 1; i < 6; i++) {||| 13 perm[i] = perm[i - 1];||| 14 next_permutation(perm[i].begin(), perm[i].end());||| 15 }||| 16 cin >> n >> q;||| 17 for (int i = 1; i <= n; i++) {||| 18 char ch;||| 19 cin >> ch;||| 20 A[i] = (ch - 'a');||| 21 }||| 22 for (int j = 0; j < 6; j++) {||| 23 for (int i = 1; i <= n; i++) {||| 24 for (int k = 0; k < 3; k++) {||| 25 ps[j][i][k] = ps[j][i - 1][(k + 2) & 3] + (perm[j][k] != A[i]);||| 26 }||| 27 }||| 28 }||| 29 while (q--) {||| 30 long long ans = n, l, r;||| 31 cin >> l >> r;||| 32 for (int j = 0; j < 6; j++) {||| 33 long long now = ps[j][r][(r - l) & 3] - ps[j][l - 1][2];||| 34 ans = min(ans, now);||| 35 }||| 36 cout << ans << '\n';||| 37 }||| 38 return 0;||| 39 }||| 	25 ps[j][i][k] = ps[j][i - 1][(k + 2) % 3] + (perm[j][k] != A[i]);
41	21	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 int queryn;||| 6 string s;||| 7 cin >> n >> queryn;||| 8 cin >> s;||| 9 int dp[6][n];||| 10 int query[queryn][2];||| 11 string com[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 12 for (int i = 0; i < queryn; i++) {||| 13 cin >> query[i][0] >> query[i][1];||| 14 }||| 15 for (int k = 0; k < 6; k++) {||| 16 int cost = 0;||| 17 for (int i = 0, it = 0; i < n; i++, it++) {||| 18 it = it % 3;||| 19 if (s[i] != com[k][it]) {||| 20 dp[k][i] = ++cost;||| 21 } else {||| 22 dp[k][i] = cost;||| 23 }||| 24 }||| 25 }||| 26 for (int w = 0; w < queryn; w++) {||| 27 int sum = 100000000;||| 28 for (int k = 0; k < 6; k++) {||| 29 sum = min(dp[k][query[w][1] - 1] -||| 30 ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0),||| 31 sum);||| 32 }||| 33 cout << sum << endl;||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 int queryn;||| 6 string s;||| 7 cin >> n >> queryn;||| 8 cin >> s;||| 9 int dp[6][n];||| 10 int query[queryn][2];||| 11 string com[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 12 for (int i = 0; i < queryn; i++) {||| 13 cin >> query[i][0] >> query[i][1];||| 14 }||| 15 for (int k = 0; k < 6; k++) {||| 16 int cost = 0;||| 17 for (int i = 0, it = 0; i < n; i++, it++) {||| 18 it = it % 3;||| 19 if (s[i] != com[k][it]) {||| 20 dp[k][i] = ++cost;||| 21 } else {||| 22 dp[k][i] = cost;||| 23 }||| 24 }||| 25 }||| 26 for (int w = 0; w < queryn; w++) {||| 27 int sum = 100000000;||| 28 for (int k = 0; k < 6; k++) {||| 29 sum = min(dp[k][query[w][1] - 1] -||| 30 ((query[w][0] - 2 > 0) ? dp[k][query[w][0] - 2] : 0),||| 31 sum);||| 32 }||| 33 cout << sum << endl;||| 34 }||| 35 return 0;||| 36 }||| "	30 ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0),
41	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 int queryn;||| 6 string s;||| 7 cin >> n >> queryn;||| 8 cin >> s;||| 9 int dp[6][n];||| 10 int query[queryn][2];||| 11 string com[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 12 for (int i = 0; i < queryn; i++) {||| 13 cin >> query[i][0] >> query[i][1];||| 14 }||| 15 for (int k = 0; k < 6; k++) {||| 16 int cost = 0;||| 17 for (int i = 0, it = 0; i < n; i++, it++) {||| 18 it = it % 3;||| 19 if (s[i] != com[k][it]) {||| 20 dp[k][i] = ++cost;||| 21 } else {||| 22 dp[k][i] = cost;||| 23 }||| 24 }||| 25 }||| 26 for (int w = 0; w < queryn; w++) {||| 27 int sum = 100000000;||| 28 for (int k = 0; k < 6; k++) {||| 29 sum = min(dp[k][query[w][1] - 1] -||| 30 ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0),||| 31 sum);||| 32 }||| 33 cout << sum << endl;||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 int queryn;||| 6 string s;||| 7 cin >> n >> queryn;||| 8 cin >> s;||| 9 int dp[6][n];||| 10 int query[queryn][2];||| 11 string com[6] = {""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""};||| 12 for (int i = 0; i < queryn; i++) {||| 13 cin >> query[i][0] >> query[i][1];||| 14 }||| 15 for (int k = 0; k < 6; k++) {||| 16 int cost = 0;||| 17 for (int i = 0, it = 0; i < n; i++, it++) {||| 18 it = it % 3;||| 19 if (s[i] != com[k][it]) {||| 20 dp[k][i] = ++cost;||| 21 } else {||| 22 dp[k][i] = cost;||| 23 }||| 24 }||| 25 }||| 26 for (int w = 0; w < queryn; w++) {||| 27 int sum = 10000000;||| 28 for (int k = 0; k < 6; k++) {||| 29 sum = min(dp[k][query[w][1] - 1] -||| 30 ((query[w][0] - 2 > 0) ? dp[k][query[w][0] - 2] : 0),||| 31 sum);||| 32 }||| 33 cout << sum << endl;||| 34 }||| 35 return 0;||| 36 }||| "	27 int sum = 100000000;
42	83	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Data {||| 4 int l, r, w;||| 5 Data(int a, int b, int c) {||| 6 l = a;||| 7 r = b;||| 8 w = c;||| 9 }||| 10 Data(){};||| 11 };||| 12 bool cmp(Data a, Data b) { return a.w < b.w; }||| 13 int tree[4 * 1000005], lazy[4 * 1000005];||| 14 void push(int indx) {||| 15 tree[2 * indx] += lazy[indx];||| 16 tree[2 * indx + 1] += lazy[indx];||| 17 lazy[2 * indx] += lazy[indx];||| 18 lazy[2 * indx + 1] += lazy[indx];||| 19 lazy[indx] = 0;||| 20 }||| 21 void update(int node, int st, int en, int l, int r, int val) {||| 22 if (st > r || en < l) return;||| 23 if (st >= l && en <= r) {||| 24 lazy[node] += val;||| 25 tree[node] += val;||| 26 } else {||| 27 int mid = (st + en) / 2;||| 28 push(node);||| 29 update(2 * node, st, mid, l, r, val);||| 30 update(2 * node + 1, mid + 1, en, l, r, val);||| 31 tree[node] = min(tree[2 * node], tree[2 * node + 1]);||| 32 }||| 33 }||| 34 int query(int node, int st, int en, int l, int r) {||| 35 if (st > r || en < l) return 1e8;||| 36 if (st >= l && en <= r) {||| 37 return tree[node];||| 38 }||| 39 int m = (st + en) / 2;||| 40 push(node);||| 41 return min(query(2 * node, st, m, l, r),||| 42 query(2 * node + 1, m + 1, en, l, r));||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(0);||| 46 cin.tie(0);||| 47 cout.tie(0);||| 48 int n, m;||| 49 cin >> n >> m;||| 50 std::vector<Data> v(n);||| 51 for (int i = 0; i < n; ++i) {||| 52 int l, r, w;||| 53 cin >> l >> r >> w;||| 54 v[i] = Data(l, r, w);||| 55 }||| 56 sort(v.begin(), v.end(), cmp);||| 57 int i = 0, j = 0, ans = 1e9;||| 58 while (j < n) {||| 59 int a = v[j].l;||| 60 if (a != 1) ++a;||| 61 update(1, 1, m, a, v[j].r, 1);||| 62 ++j;||| 63 int x = query(1, 1, m, 1, m);||| 64 while (x != 0) {||| 65 ans = min(ans, v[j - 1].w - v[i].w);||| 66 a = v[i].l;||| 67 int b = v[i].r;||| 68 if (a != 1) ++a;||| 69 if (a <= b) update(1, 1, m, a, b, -1);||| 70 ++i;||| 71 x = query(1, 1, m, 1, m);||| 72 }||| 73 }||| 74 cout << ans << '\n';||| 75 return 0;||| 76 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Data {||| 4 int l, r, w;||| 5 Data(int a, int b, int c) {||| 6 l = a;||| 7 r = b;||| 8 w = c;||| 9 }||| 10 Data(){};||| 11 };||| 12 bool cmp(Data a, Data b) { return a.w < b.w; }||| 13 int tree[4 * 1000005], lazy[4 * 1000005];||| 14 void push(int indx) {||| 15 tree[2 * indx] += lazy[indx];||| 16 tree[2 * indx + 1] += lazy[indx];||| 17 lazy[2 * indx] += lazy[indx];||| 18 lazy[2 * indx + 1] += lazy[indx];||| 19 lazy[indx] = 0;||| 20 }||| 21 void update(int node, int st, int en, int l, int r, int val) {||| 22 if (st > r || en < l) return;||| 23 if (st >= l && en <= r) {||| 24 lazy[node] += val;||| 25 tree[node] += val;||| 26 } else {||| 27 int mid = (st + en) / 2;||| 28 push(node);||| 29 update(2 * node, st, mid, l, r, val);||| 30 update(2 * node + 1, mid + 1, en, l, r, val);||| 31 tree[node] = min(tree[2 * node], tree[2 * node + 1]);||| 32 }||| 33 }||| 34 int query(int node, int st, int en, int l, int r) {||| 35 if (st > r || en < l) return 1e8;||| 36 if (st >= l && en <= r) {||| 37 return tree[node];||| 38 }||| 39 int m = (st + en) / 2;||| 40 push(node);||| 41 return min(query(2 * node, st, m, l, r),||| 42 query(2 * node + 1, m + 1, en, l, r));||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(0);||| 46 cin.tie(0);||| 47 cout.tie(0);||| 48 int n, m;||| 49 cin >> n >> m;||| 50 std::vector<Data> v(n);||| 51 for (int i = 0; i < n; ++i) {||| 52 int l, r, w;||| 53 cin >> l >> r >> w;||| 54 v[i] = Data(l, r, w);||| 55 }||| 56 sort(v.begin(), v.end(), cmp);||| 57 int i = 0, j = 0, ans = 1e9;||| 58 while (j < n) {||| 59 int a = v[j].l;||| 60 if (a != 1) ++a;||| 61 update(1, 1, m, a, v[j].r, 1);||| 62 ++j;||| 63 int x = query(1, 1, m, 1, m);||| 64 while (x != 0) {||| 65 ans = min(ans, v[j - 1].w - v[i].w);||| 66 a = v[i].l;||| 67 int b = v[i].r;||| 68 if (a != 1) --a;||| 69 if (a <= b) update(1, 1, m, a, b, -1);||| 70 ++i;||| 71 x = query(1, 1, m, 1, m);||| 72 }||| 73 }||| 74 cout << ans << '\n';||| 75 return 0;||| 76 }||| 	68 if (a != 1) ++a;
42	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st[4 * 1000001];||| 4 int lazy[4 * 1000001];||| 5 void build(int si, int ss, int se) {||| 6 if (ss == se) {||| 7 return;||| 8 }||| 9 int mid = (ss + se) / 2;||| 10 build(2 * si, ss, mid);||| 11 build(2 * si + 1, mid + 1, se);||| 12 st[si] = min(st[2 * si], st[2 * si + 1]);||| 13 }||| 14 void update(int si, int ss, int se, int qs, int qe, int x) {||| 15 if (lazy[si] != 0) {||| 16 int lz_sum = lazy[si];||| 17 st[si] += lz_sum;||| 18 lazy[si] = 0;||| 19 if (ss != se) {||| 20 lazy[2 * si] += lz_sum;||| 21 lazy[2 * si + 1] += lz_sum;||| 22 }||| 23 }||| 24 if (ss > qe || se < qs) return;||| 25 if (ss >= qs && se <= qe) {||| 26 st[si] += x;||| 27 if (ss != se) {||| 28 lazy[2 * si] += x;||| 29 lazy[2 * si + 1] += x;||| 30 }||| 31 return;||| 32 }||| 33 int mid = (ss + se) / 2;||| 34 update(2 * si, ss, mid, qs, qe, x);||| 35 update(2 * si + 1, mid + 1, se, qs, qe, x);||| 36 st[si] = min(st[2 * si], st[2 * si + 1]);||| 37 }||| 38 int query(int si, int ss, int se, int qs, int qe) {||| 39 if (lazy[si] != 0) {||| 40 int lz_sum = lazy[si];||| 41 st[si] += lz_sum;||| 42 lazy[si] = 0;||| 43 if (ss != se) {||| 44 lazy[2 * si] += lz_sum;||| 45 lazy[2 * si + 1] += lz_sum;||| 46 }||| 47 }||| 48 if (ss > qe || se < qs) return INT_MAX;||| 49 if (ss >= qs && se <= qe) {||| 50 return st[si];||| 51 }||| 52 int mid = (ss + se) / 2;||| 53 return min(query(2 * si, ss, mid, qs, qe),||| 54 query(2 * si + 1, mid + 1, se, qs, qe));||| 55 }||| 56 struct seg {||| 57 int l, r, w;||| 58 };||| 59 int main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(NULL);||| 62 int n, m;||| 63 cin >> n >> m;||| 64 vector<seg> vec(n + 1);||| 65 for (int i = 1; i <= n; i++) cin >> vec[i].l >> vec[i].r >> vec[i].w;||| 66 sort(vec.begin(), vec.end(), [](seg a, seg b) { return a.w < b.w; });||| 67 int j = 0;||| 68 int ans = INT_MAX;||| 69 for (int i = 1; i <= n; i++) {||| 70 while (j < n && query(1, 1, m, 1, m - 1) == 0) {||| 71 j++;||| 72 update(1, 1, m, vec[j].l, vec[j].r - 1, 1);||| 73 }||| 74 if (query(1, 1, m, 1, m - 1) != 0) ans = min(vec[j].w - vec[i].w, ans);||| 75 update(1, 1, m, vec[i].l, vec[i].r - 1, -1);||| 76 }||| 77 cout << ans << ""\n"";||| 78 return 0;||| 79 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st[4 * 1000001];||| 4 int lazy[4 * 1000001];||| 5 void build(int si, int ss, int se) {||| 6 if (ss == se) {||| 7 return;||| 8 }||| 9 int mid = (ss + se) / 2;||| 10 build(2 * si, ss, mid);||| 11 build(2 * si + 1, mid + 1, se);||| 12 st[si] = min(st[2 * si], st[2 * si + 1]);||| 13 }||| 14 void update(int si, int ss, int se, int qs, int qe, int x) {||| 15 if (lazy[si] > 0) {||| 16 int lz_sum = lazy[si];||| 17 st[si] += lz_sum;||| 18 lazy[si] = 0;||| 19 if (ss != se) {||| 20 lazy[2 * si] += lz_sum;||| 21 lazy[2 * si + 1] += lz_sum;||| 22 }||| 23 }||| 24 if (ss > qe || se < qs) return;||| 25 if (ss >= qs && se <= qe) {||| 26 st[si] += x;||| 27 if (ss != se) {||| 28 lazy[2 * si] += x;||| 29 lazy[2 * si + 1] += x;||| 30 }||| 31 return;||| 32 }||| 33 int mid = (ss + se) / 2;||| 34 update(2 * si, ss, mid, qs, qe, x);||| 35 update(2 * si + 1, mid + 1, se, qs, qe, x);||| 36 st[si] = min(st[2 * si], st[2 * si + 1]);||| 37 }||| 38 int query(int si, int ss, int se, int qs, int qe) {||| 39 if (lazy[si] > 0) {||| 40 int lz_sum = lazy[si];||| 41 st[si] += lz_sum;||| 42 lazy[si] = 0;||| 43 if (ss != se) {||| 44 lazy[2 * si] += lz_sum;||| 45 lazy[2 * si + 1] += lz_sum;||| 46 }||| 47 }||| 48 if (ss > qe || se < qs) return INT_MAX;||| 49 if (ss >= qs && se <= qe) {||| 50 return st[si];||| 51 }||| 52 int mid = (ss + se) / 2;||| 53 return min(query(2 * si, ss, mid, qs, qe),||| 54 query(2 * si + 1, mid + 1, se, qs, qe));||| 55 }||| 56 struct seg {||| 57 int l, r, w;||| 58 };||| 59 int main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(NULL);||| 62 int n, m;||| 63 cin >> n >> m;||| 64 vector<seg> vec(n + 1);||| 65 for (int i = 1; i <= n; i++) cin >> vec[i].l >> vec[i].r >> vec[i].w;||| 66 sort(vec.begin(), vec.end(), [](seg a, seg b) { return a.w < b.w; });||| 67 int j = 0;||| 68 int ans = INT_MAX;||| 69 for (int i = 1; i <= n; i++) {||| 70 while (j < n && query(1, 1, m, 1, m - 1) == 0) {||| 71 j++;||| 72 update(1, 1, m, vec[j].l, vec[j].r - 1, 1);||| 73 }||| 74 if (query(1, 1, m, 1, m - 1) != 0) ans = min(vec[j].w - vec[i].w, ans);||| 75 update(1, 1, m, vec[i].l, vec[i].r - 1, -1);||| 76 }||| 77 cout << ans << ""\n"";||| 78 return 0;||| 79 }||| "	15 if (lazy[si] != 0) {
42	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st[4 * 1000001];||| 4 int lazy[4 * 1000001];||| 5 void build(int si, int ss, int se) {||| 6 if (ss == se) {||| 7 return;||| 8 }||| 9 int mid = (ss + se) / 2;||| 10 build(2 * si, ss, mid);||| 11 build(2 * si + 1, mid + 1, se);||| 12 st[si] = min(st[2 * si], st[2 * si + 1]);||| 13 }||| 14 void update(int si, int ss, int se, int qs, int qe, int x) {||| 15 if (lazy[si] != 0) {||| 16 int lz_sum = lazy[si];||| 17 st[si] += lz_sum;||| 18 lazy[si] = 0;||| 19 if (ss != se) {||| 20 lazy[2 * si] += lz_sum;||| 21 lazy[2 * si + 1] += lz_sum;||| 22 }||| 23 }||| 24 if (ss > qe || se < qs) return;||| 25 if (ss >= qs && se <= qe) {||| 26 st[si] += x;||| 27 if (ss != se) {||| 28 lazy[2 * si] += x;||| 29 lazy[2 * si + 1] += x;||| 30 }||| 31 return;||| 32 }||| 33 int mid = (ss + se) / 2;||| 34 update(2 * si, ss, mid, qs, qe, x);||| 35 update(2 * si + 1, mid + 1, se, qs, qe, x);||| 36 st[si] = min(st[2 * si], st[2 * si + 1]);||| 37 }||| 38 int query(int si, int ss, int se, int qs, int qe) {||| 39 if (lazy[si] != 0) {||| 40 int lz_sum = lazy[si];||| 41 st[si] += lz_sum;||| 42 lazy[si] = 0;||| 43 if (ss != se) {||| 44 lazy[2 * si] += lz_sum;||| 45 lazy[2 * si + 1] += lz_sum;||| 46 }||| 47 }||| 48 if (ss > qe || se < qs) return INT_MAX;||| 49 if (ss >= qs && se <= qe) {||| 50 return st[si];||| 51 }||| 52 int mid = (ss + se) / 2;||| 53 return min(query(2 * si, ss, mid, qs, qe),||| 54 query(2 * si + 1, mid + 1, se, qs, qe));||| 55 }||| 56 struct seg {||| 57 int l, r, w;||| 58 };||| 59 int main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(NULL);||| 62 int n, m;||| 63 cin >> n >> m;||| 64 vector<seg> vec(n + 1);||| 65 for (int i = 1; i <= n; i++) cin >> vec[i].l >> vec[i].r >> vec[i].w;||| 66 sort(vec.begin(), vec.end(), [](seg a, seg b) { return a.w < b.w; });||| 67 int j = 0;||| 68 int ans = INT_MAX;||| 69 for (int i = 1; i <= n; i++) {||| 70 while (j < n && query(1, 1, m, 1, m - 1) <= 0) {||| 71 j++;||| 72 update(1, 1, m, vec[j].l, vec[j].r - 1, 1);||| 73 }||| 74 if (query(1, 1, m, 1, m - 1) > 0)||| 75 ans = min(vec[j].w - vec[i].w, ans);||| 76 else||| 77 break;||| 78 update(1, 1, m, vec[i].l, vec[i].r - 1, -1);||| 79 }||| 80 cout << ans << ""\n"";||| 81 return 0;||| 82 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int st[4 * 1000001];||| 4 int lazy[4 * 1000001];||| 5 void build(int si, int ss, int se) {||| 6 if (ss == se) {||| 7 return;||| 8 }||| 9 int mid = (ss + se) / 2;||| 10 build(2 * si, ss, mid);||| 11 build(2 * si + 1, mid + 1, se);||| 12 st[si] = min(st[2 * si], st[2 * si + 1]);||| 13 }||| 14 void update(int si, int ss, int se, int qs, int qe, int x) {||| 15 if (lazy[si] > 0) {||| 16 int lz_sum = lazy[si];||| 17 st[si] += lz_sum;||| 18 lazy[si] = 0;||| 19 if (ss != se) {||| 20 lazy[2 * si] += lz_sum;||| 21 lazy[2 * si + 1] += lz_sum;||| 22 }||| 23 }||| 24 if (ss > qe || se < qs) return;||| 25 if (ss >= qs && se <= qe) {||| 26 st[si] += x;||| 27 if (ss != se) {||| 28 lazy[2 * si] += x;||| 29 lazy[2 * si + 1] += x;||| 30 }||| 31 return;||| 32 }||| 33 int mid = (ss + se) / 2;||| 34 update(2 * si, ss, mid, qs, qe, x);||| 35 update(2 * si + 1, mid + 1, se, qs, qe, x);||| 36 st[si] = min(st[2 * si], st[2 * si + 1]);||| 37 }||| 38 int query(int si, int ss, int se, int qs, int qe) {||| 39 if (lazy[si] > 0) {||| 40 int lz_sum = lazy[si];||| 41 st[si] += lz_sum;||| 42 lazy[si] = 0;||| 43 if (ss != se) {||| 44 lazy[2 * si] += lz_sum;||| 45 lazy[2 * si + 1] += lz_sum;||| 46 }||| 47 }||| 48 if (ss > qe || se < qs) return INT_MAX;||| 49 if (ss >= qs && se <= qe) {||| 50 return st[si];||| 51 }||| 52 int mid = (ss + se) / 2;||| 53 return min(query(2 * si, ss, mid, qs, qe),||| 54 query(2 * si + 1, mid + 1, se, qs, qe));||| 55 }||| 56 struct seg {||| 57 int l, r, w;||| 58 };||| 59 int main() {||| 60 ios_base::sync_with_stdio(false);||| 61 cin.tie(NULL);||| 62 int n, m;||| 63 cin >> n >> m;||| 64 vector<seg> vec(n + 1);||| 65 for (int i = 1; i <= n; i++) cin >> vec[i].l >> vec[i].r >> vec[i].w;||| 66 sort(vec.begin(), vec.end(), [](seg a, seg b) { return a.w < b.w; });||| 67 int j = 0;||| 68 int ans = INT_MAX;||| 69 for (int i = 1; i <= n; i++) {||| 70 while (j < n && query(1, 1, m, 1, m - 1) <= 0) {||| 71 j++;||| 72 update(1, 1, m, vec[j].l, vec[j].r - 1, 1);||| 73 }||| 74 if (query(1, 1, m, 1, m - 1) > 0)||| 75 ans = min(vec[j].w - vec[i].w, ans);||| 76 else||| 77 break;||| 78 update(1, 1, m, vec[i].l, vec[i].r - 1, -1);||| 79 }||| 80 cout << ans << ""\n"";||| 81 return 0;||| 82 }||| "	15 if (lazy[si] != 0) {
44	184	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const char nl = '\n';||| 4 const int MAX_N = 100011;||| 5 const long long INF = (1 << 29) + 123;||| 6 const long long MOD = 1000000007;||| 7 const long double PI = 4 * atan((long double)1);||| 8 template <typename T>||| 9 bool ckmin(T& a, const T& b) {||| 10 return a > b ? a = b, 1 : 0;||| 11 }||| 12 template <typename T>||| 13 bool ckmax(T& a, const T& b) {||| 14 return b > a ? a = b, 1 : 0;||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << H << "" "";||| 20 dbg_out(T...);||| 21 }||| 22 template <typename T>||| 23 class SafeVector : public vector<T> {||| 24 public:||| 25 using vector<T>::vector;||| 26 typename vector<T>::reference operator[](size_t n) {||| 27 return vector<T>::at(n);||| 28 }||| 29 typename vector<T>::const_reference operator[](size_t n) const {||| 30 return vector<T>::at(n);||| 31 }||| 32 };||| 33 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 34 const int MX = 1 << 20;||| 35 int main() {||| 36 ios_base::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 cout.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) {||| 42 int c, d;||| 43 cin >> c >> d;||| 44 if ((c - d) % 2)||| 45 cout << -1 << nl;||| 46 else if (c == d && c == 0)||| 47 cout << 0 << nl;||| 48 else if (c == d)||| 49 cout << 1 << nl;||| 50 else||| 51 cout << 2 << nl;||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const char nl = '\n';||| 4 const int MAX_N = 100011;||| 5 const long long INF = (1 << 29) + 123;||| 6 const long long MOD = 1000000007;||| 7 const long double PI = 4 * atan((long double)1);||| 8 template <typename T>||| 9 bool ckmin(T& a, const T& b) {||| 10 return a > b ? a = b, 1 : 0;||| 11 }||| 12 template <typename T>||| 13 bool ckmax(T& a, const T& b) {||| 14 return b > a ? a = b, 1 : 0;||| 15 }||| 16 void dbg_out() { cerr << endl; }||| 17 template <typename Head, typename... Tail>||| 18 void dbg_out(Head H, Tail... T) {||| 19 cerr << H << "" "";||| 20 dbg_out(T...);||| 21 }||| 22 template <typename T>||| 23 class SafeVector : public vector<T> {||| 24 public:||| 25 using vector<T>::vector;||| 26 typename vector<T>::reference operator[](size_t n) {||| 27 return vector<T>::at(n);||| 28 }||| 29 typename vector<T>::const_reference operator[](size_t n) const {||| 30 return vector<T>::at(n);||| 31 }||| 32 };||| 33 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 34 const int MX = 1 << 20;||| 35 int main() {||| 36 ios_base::sync_with_stdio(false);||| 37 cin.tie(0);||| 38 cout.tie(0);||| 39 int t;||| 40 cin >> t;||| 41 while (t--) {||| 42 int c, d;||| 43 cin >> c >> d;||| 44 if ((c - d) % 2 == 1)||| 45 cout << -1 << nl;||| 46 else if (c == d && c == 0)||| 47 cout << 0 << nl;||| 48 else if (c == d)||| 49 cout << 1 << nl;||| 50 else||| 51 cout << 2 << nl;||| 52 }||| 53 return 0;||| 54 }||| "	44 if ((c - d) % 2)
44	140	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e5 + 5;||| 4 long long power(long long x, long long n) {||| 5 long long res = 1;||| 6 while (n) {||| 7 if (n & 1) res = 1LL * res * x % mod;||| 8 x = 1LL * x * x % mod;||| 9 n >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 bool isPrime(long long n) {||| 14 static long long i = 2;||| 15 if (n == 0 || n == 1) {||| 16 return false;||| 17 }||| 18 if (n == i) return true;||| 19 if (n % i == 0) {||| 20 return false;||| 21 }||| 22 i++;||| 23 return isPrime(n);||| 24 }||| 25 int32_t main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(NULL);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 long long c, d;||| 32 cin >> c >> d;||| 33 if (c == 0 && d == 0) {||| 34 cout << 0 << '\n';||| 35 continue;||| 36 }||| 37 long long diff = abs(c - d);||| 38 if (diff == 0) {||| 39 cout << 1 << '\n';||| 40 } else if ((c + d) & 1) {||| 41 cout << -1 << '\n';||| 42 } else {||| 43 cout << 2 << '\n';||| 44 }||| 45 }||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e5 + 5;||| 4 long long power(long long x, long long n) {||| 5 long long res = 1;||| 6 while (n) {||| 7 if (n & 1) res = 1LL * res * x % mod;||| 8 x = 1LL * x * x % mod;||| 9 n >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 bool isPrime(long long n) {||| 14 static long long i = 2;||| 15 if (n == 0 || n == 1) {||| 16 return false;||| 17 }||| 18 if (n == i) return true;||| 19 if (n % i == 0) {||| 20 return false;||| 21 }||| 22 i++;||| 23 return isPrime(n);||| 24 }||| 25 int32_t main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(NULL);||| 28 long long t;||| 29 cin >> t;||| 30 while (t--) {||| 31 long long c, d;||| 32 cin >> c >> d;||| 33 if (c == 0 && d == 0) {||| 34 cout << 0 << '\n';||| 35 continue;||| 36 }||| 37 long long diff = abs(c - d);||| 38 if (diff == 0) {||| 39 cout << 1 << '\n';||| 40 } else if ((c + d) % 1) {||| 41 cout << -1 << '\n';||| 42 } else {||| 43 cout << 2 << '\n';||| 44 }||| 45 }||| 46 return 0;||| 47 }||| 	40 } else if ((c + d) & 1) {
44	277	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a, b;||| 5 cin >> a >> b;||| 6 if (abs(a - b) % 2 == 1) {||| 7 cout << -1 << '\n';||| 8 } else if (a == b && a == 0) {||| 9 cout << 0 << '\n';||| 10 } else if (a == b) {||| 11 cout << 1 << '\n';||| 12 } else {||| 13 cout << 2 << '\n';||| 14 }||| 15 }||| 16 signed main() {||| 17 ios_base::sync_with_stdio(0);||| 18 cin.tie(0);||| 19 int t;||| 20 cin >> t;||| 21 while (t--) solve();||| 22 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a, b;||| 5 cin >> a >> b;||| 6 if ((a - b) % 2 == 1) {||| 7 cout << -1 << '\n';||| 8 } else if (a == b && a == 0) {||| 9 cout << 0 << '\n';||| 10 } else if (a == b) {||| 11 cout << 1 << '\n';||| 12 } else {||| 13 cout << 2 << '\n';||| 14 }||| 15 }||| 16 signed main() {||| 17 ios_base::sync_with_stdio(0);||| 18 cin.tie(0);||| 19 int t;||| 20 cin >> t;||| 21 while (t--) solve();||| 22 }||| 	6 if (abs(a - b) % 2 == 1) {
44	134	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int x, y;||| 8 cin >> x >> y;||| 9 int d = abs(x - y);||| 10 if (d == 1) {||| 11 cout << -1 << '\n';||| 12 } else if (d == 0) {||| 13 if (x == 0) {||| 14 cout << 0 << '\n';||| 15 } else {||| 16 cout << 1 << '\n';||| 17 }||| 18 } else if (d == 2) {||| 19 cout << 2 << '\n';||| 20 } else {||| 21 if (d % 2 == 0) {||| 22 if (x == 0 || y == 0) {||| 23 cout << 2 << '\n';||| 24 } else {||| 25 cout << 2 << '\n';||| 26 }||| 27 } else||| 28 cout << -1 << '\n';||| 29 }||| 30 }||| 31 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int x, y;||| 8 cin >> x >> y;||| 9 int d = abs(x - y);||| 10 if (d == 1) {||| 11 cout << -1 << '\n';||| 12 } else if (d == 0) {||| 13 if (x == 0) {||| 14 cout << 0 << '\n';||| 15 } else {||| 16 cout << 1 << '\n';||| 17 }||| 18 } else if (d == 2) {||| 19 cout << 2 << '\n';||| 20 } else {||| 21 if (d % 2 == 0) {||| 22 if (x == 0 || y == 0) {||| 23 cout << 2 << '\n';||| 24 } else {||| 25 cout << 3 << '\n';||| 26 }||| 27 } else||| 28 cout << -1 << '\n';||| 29 }||| 30 }||| 31 }||| 	25 cout << 2 << '\n';
44	154	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 long long c, d;||| 8 cin >> c >> d;||| 9 if (abs(c - d) % 2 != 0) {||| 10 cout << -1 << endl;||| 11 } else if (c == d && c == 0) {||| 12 cout << 0 << endl;||| 13 } else if (abs(c) == abs(d) && c != 0) {||| 14 cout << 1 << endl;||| 15 } else if (((c > 0 && d < 0) || (c < 0 && d > 0)) && abs(c) != abs(d)) {||| 16 if (c > d) {||| 17 if (abs(c) > abs(d)) {||| 18 cout << 2 << endl;||| 19 } else {||| 20 cout << -1 << endl;||| 21 }||| 22 }||| 23 if (c < d) {||| 24 if (abs(c) < abs(d)) {||| 25 cout << 2 << endl;||| 26 } else {||| 27 cout << -1 << endl;||| 28 }||| 29 }||| 30 } else {||| 31 cout << 2 << endl;||| 32 }||| 33 }||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 long long c, d;||| 8 cin >> c >> d;||| 9 if (abs(c - d) % 2 != 0) {||| 10 cout << -1 << endl;||| 11 } else if (c == d && c == 0) {||| 12 cout << 0 << endl;||| 13 } else if (abs(c) == abs(d) && c != 0) {||| 14 cout << 1 << endl;||| 15 } else if (((c > 0 && d < 0) || (c < 0 && d > 0)) && abs(c) != abs(d)) {||| 16 if (c > d) {||| 17 if (abs(c) > abs(d)) {||| 18 cout << 2 << endl;||| 19 } else {||| 20 cout << -1 << endl;||| 21 }||| 22 }||| 23 if (c < d) {||| 24 if (abs(c) < abs(d)) {||| 25 cout << 2 << endl;||| 26 } else {||| 27 cout << -1 << endl;||| 28 }||| 29 } else {||| 30 cout << 2 << endl;||| 31 }||| 32 }||| 33 }||| 34 }||| 	29 }
44	214	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void show(int ans[], int n) {||| 4 for (int i = (0); i < (n); ++i) {||| 5 cout << ans[i] << "" "";||| 6 }||| 7 cout << ""\n"";||| 8 }||| 9 bool isPrime(int n) {||| 10 for (int i = 2; i <= sqrt(n); ++i) {||| 11 if (n % i == 0) {||| 12 return false;||| 13 }||| 14 }||| 15 return true;||| 16 }||| 17 int gcd(int a, int b) {||| 18 while (a) {||| 19 b %= a;||| 20 a ^= b;||| 21 b ^= a;||| 22 a ^= b;||| 23 }||| 24 return b;||| 25 }||| 26 int tempa[10000];||| 27 void mergesort(int* a, int n1, int n2) {||| 28 int a1, a2, n12;||| 29 int i, j;||| 30 if (n1 < n2) {||| 31 n12 = (n1 + n2) / 2;||| 32 mergesort(a, n1, n12);||| 33 mergesort(a, n12 + 1, n2);||| 34 for (i = n1; i <= n2; i++) {||| 35 tempa[i] = a[i];||| 36 }||| 37 a1 = n1;||| 38 a2 = n12 + 1;||| 39 for (i = n1; (a1 <= n12 && a2 <= n2); i++) {||| 40 if (tempa[a1] <= tempa[a2]) {||| 41 a[i] = tempa[a1];||| 42 a1++;||| 43 } else {||| 44 a[i] = tempa[a2];||| 45 a2++;||| 46 }||| 47 }||| 48 if (a1 > n12) {||| 49 for (j = a2; j <= n2; j++, i++) {||| 50 a[i] = tempa[j];||| 51 }||| 52 } else {||| 53 for (j = a1; j <= n12; j++, i++) {||| 54 a[i] = tempa[j];||| 55 }||| 56 }||| 57 }||| 58 }||| 59 bool sorted(string arr, int n) {||| 60 for (int i = 0; i < n - 1; ++i) {||| 61 if (arr[i + 1] != arr[i]) return false;||| 62 }||| 63 return true;||| 64 }||| 65 void bubbleSort(int* arr, int n) {||| 66 for (int i = (0); i < (n); ++i) {||| 67 for (int j = i; j < n; ++j) {||| 68 }||| 69 }||| 70 }||| 71 int solve() {||| 72 int _test;||| 73 cin >> _test;||| 74 while (_test--) {||| 75 int c, d, a = 0, b = 0;||| 76 cin >> c >> d;||| 77 if (c == d)||| 78 cout << (c != 0) << ""\n"";||| 79 else if (abs(c - d) & 1) {||| 80 cout << (-1) << ""\n"";||| 81 } else||| 82 cout << (2) << ""\n"";||| 83 }||| 84 return 0;||| 85 }||| 86 int main() {||| 87 ios_base::sync_with_stdio(false);||| 88 cin.tie(0);||| 89 solve();||| 90 return 0;||| 91 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void show(int ans[], int n) {||| 4 for (int i = (0); i < (n); ++i) {||| 5 cout << ans[i] << "" "";||| 6 }||| 7 cout << ""\n"";||| 8 }||| 9 bool isPrime(int n) {||| 10 for (int i = 2; i <= sqrt(n); ++i) {||| 11 if (n % i == 0) {||| 12 return false;||| 13 }||| 14 }||| 15 return true;||| 16 }||| 17 int gcd(int a, int b) {||| 18 while (a) {||| 19 b %= a;||| 20 a ^= b;||| 21 b ^= a;||| 22 a ^= b;||| 23 }||| 24 return b;||| 25 }||| 26 int tempa[10000];||| 27 void mergesort(int* a, int n1, int n2) {||| 28 int a1, a2, n12;||| 29 int i, j;||| 30 if (n1 < n2) {||| 31 n12 = (n1 + n2) / 2;||| 32 mergesort(a, n1, n12);||| 33 mergesort(a, n12 + 1, n2);||| 34 for (i = n1; i <= n2; i++) {||| 35 tempa[i] = a[i];||| 36 }||| 37 a1 = n1;||| 38 a2 = n12 + 1;||| 39 for (i = n1; (a1 <= n12 && a2 <= n2); i++) {||| 40 if (tempa[a1] <= tempa[a2]) {||| 41 a[i] = tempa[a1];||| 42 a1++;||| 43 } else {||| 44 a[i] = tempa[a2];||| 45 a2++;||| 46 }||| 47 }||| 48 if (a1 > n12) {||| 49 for (j = a2; j <= n2; j++, i++) {||| 50 a[i] = tempa[j];||| 51 }||| 52 } else {||| 53 for (j = a1; j <= n12; j++, i++) {||| 54 a[i] = tempa[j];||| 55 }||| 56 }||| 57 }||| 58 }||| 59 bool sorted(string arr, int n) {||| 60 for (int i = 0; i < n - 1; ++i) {||| 61 if (arr[i + 1] != arr[i]) return false;||| 62 }||| 63 return true;||| 64 }||| 65 void bubbleSort(int* arr, int n) {||| 66 for (int i = (0); i < (n); ++i) {||| 67 for (int j = i; j < n; ++j) {||| 68 }||| 69 }||| 70 }||| 71 int solve() {||| 72 int _test;||| 73 cin >> _test;||| 74 while (_test--) {||| 75 int c, d, a = 0, b = 0;||| 76 cin >> c >> d;||| 77 if (c == d)||| 78 cout << (c != 0) << ""\n"";||| 79 else if (abs(c - d) == 1) {||| 80 cout << (-1) << ""\n"";||| 81 } else||| 82 cout << (2) << ""\n"";||| 83 }||| 84 return 0;||| 85 }||| 86 int main() {||| 87 ios_base::sync_with_stdio(false);||| 88 cin.tie(0);||| 89 solve();||| 90 return 0;||| 91 }||| "	79 else if (abs(c - d) & 1) {
44	52	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long c, d;||| 8 cin >> c >> d;||| 9 if (c == 0 && d == 0) {||| 10 cout << 0 << endl;||| 11 continue;||| 12 }||| 13 if (abs(c) == abs(d)) {||| 14 cout << 1 << endl;||| 15 continue;||| 16 }||| 17 if (abs(c - d) % 2) {||| 18 cout << -1 << endl;||| 19 continue;||| 20 }||| 21 cout << 2 << endl;||| 22 }||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long c, d;||| 8 cin >> c >> d;||| 9 if (c == 0 && d == 0) {||| 10 cout << 0 << endl;||| 11 continue;||| 12 }||| 13 if (abs(c) == abs(d)) {||| 14 cout << 1 << endl;||| 15 continue;||| 16 }||| 17 if (abs(c - d) == 1) {||| 18 cout << -1 << endl;||| 19 continue;||| 20 }||| 21 cout << 2 << endl;||| 22 }||| 23 }||| 	17 if (abs(c - d) % 2) {
45	137	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 vector<long long int> a(n);||| 10 long long int cnt = 0;||| 11 for (long long int i = 0; i < n; i++) {||| 12 cin >> a[i];||| 13 a[i] %= 2;||| 14 if (a[i] == 1)||| 15 cnt++;||| 16 else||| 17 cnt--;||| 18 }||| 19 if (cnt < -1 || cnt > 1) {||| 20 cout << -1 << endl;||| 21 continue;||| 22 }||| 23 vector<long long int> b;||| 24 for (long long int i = 0; i < n; i++)||| 25 if (a[i] == 0) b.push_back(i);||| 26 if (cnt == 0) {||| 27 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 28 for (long long int i = 0; i < n; i += 2) {||| 29 if (co1 == b.size()) {||| 30 ans1 = -1;||| 31 break;||| 32 } else {||| 33 ans1 += abs(i - b[co1]);||| 34 co1++;||| 35 }||| 36 }||| 37 co1 = 0;||| 38 for (long long int i = 1; i < n; i += 2) {||| 39 if (co1 == b.size()) {||| 40 ans2 = -1;||| 41 break;||| 42 } else {||| 43 ans2 += abs(i - b[co1]);||| 44 co1++;||| 45 }||| 46 }||| 47 if (ans1 == -1 && ans2 == -1)||| 48 cout << -1 << endl;||| 49 else if (ans1 != -1 && ans2 != -1)||| 50 cout << min(ans1, ans2) << endl;||| 51 else if (ans1 != -1)||| 52 cout << ans1 << endl;||| 53 else||| 54 cout << ans2 << endl;||| 55 } else if (cnt < 0) {||| 56 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 57 for (long long int i = 0; i < n; i += 2) {||| 58 if (co1 == b.size()) {||| 59 ans1 = -1;||| 60 break;||| 61 } else {||| 62 ans1 += abs(i - b[co1]);||| 63 co1++;||| 64 }||| 65 }||| 66 cout << ans1 << endl;||| 67 } else {||| 68 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 69 for (long long int i = 1; i < n; i += 2) {||| 70 if (co1 == b.size()) {||| 71 ans1 = -1;||| 72 break;||| 73 } else {||| 74 ans1 += abs(i - b[co1]);||| 75 co1++;||| 76 }||| 77 }||| 78 cout << ans1 << endl;||| 79 }||| 80 }||| 81 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int n;||| 8 cin >> n;||| 9 vector<long long int> a(n);||| 10 long long int cnt = 0;||| 11 for (long long int i = 0; i < n; i++) {||| 12 cin >> a[i];||| 13 a[i] %= 2;||| 14 if (a[i] == 1)||| 15 cnt++;||| 16 else||| 17 cnt--;||| 18 }||| 19 if (cnt < -1 || cnt > 1) {||| 20 cout << -1 << endl;||| 21 continue;||| 22 }||| 23 vector<long long int> b;||| 24 for (long long int i = 0; i < n; i++)||| 25 if (a[i] == 0) b.push_back(i);||| 26 if (cnt == 0) {||| 27 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 28 for (long long int i = 0; i < n; i += 2) {||| 29 if (co1 == b.size()) {||| 30 ans1 = -1;||| 31 break;||| 32 } else {||| 33 ans1 += abs(i - b[co1]);||| 34 co1++;||| 35 }||| 36 }||| 37 co1 = 0;||| 38 for (long long int i = 1; i < n; i += 2) {||| 39 if (co1 == b.size()) {||| 40 ans2 = -1;||| 41 break;||| 42 } else {||| 43 ans2 += abs(i - b[co1]);||| 44 co1++;||| 45 }||| 46 }||| 47 if (ans1 == -1 && ans2 == -1)||| 48 cout << -1 << endl;||| 49 else if (ans1 != -1 && ans2 != -1)||| 50 cout << min(ans1, ans2) << endl;||| 51 else if (ans1 != -1)||| 52 cout << ans1 << endl;||| 53 else||| 54 cout << ans2 << endl;||| 55 } else if (cnt < 0) {||| 56 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 57 for (long long int i = 0; i < n; i += 2) {||| 58 if (co1 == b.size()) {||| 59 ans1 = -1;||| 60 break;||| 61 } else {||| 62 ans1 += abs(i - b[co1]);||| 63 co1++;||| 64 }||| 65 }||| 66 cout << ans1 << endl;||| 67 } else {||| 68 long long int co1 = 0, ans1 = 0, ans2 = 0;||| 69 for (long long int i = 1; i < n; i += 2) {||| 70 if (co1 == b.size()) {||| 71 ans1 = -1;||| 72 break;||| 73 } else {||| 74 ans1 += abs(i - b[co1]);||| 75 co1++;||| 76 }||| 77 }||| 78 cout << co1 << endl;||| 79 }||| 80 }||| 81 }||| 	78 cout << ans1 << endl;
45	205	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long c, j, d, t, k, i, x, n, m, u;||| 4 signed main() {||| 5 cin >> t;||| 6 for (i = 1; i <= t; i++) {||| 7 cin >> n;||| 8 vector<long long> v;||| 9 for (j = 1; j <= n; j++) {||| 10 cin >> x;||| 11 if (x % 2 == 0) {||| 12 v.push_back(j);||| 13 }||| 14 }||| 15 if (n % 2 == 0) {||| 16 k = n / 2;||| 17 m = 0;||| 18 u = 0;||| 19 if (v.size() != k) {||| 20 cout << -1 << ""\n"";||| 21 } else {||| 22 for (j = 1; j <= k; j++) {||| 23 m = m + abs(v[j - 1] - 2 * j + 1);||| 24 u = u + abs(v[j - 1] - 2 * j);||| 25 }||| 26 if (m < u) {||| 27 cout << m << ""\n"";||| 28 } else {||| 29 cout << u << ""\n"";||| 30 }||| 31 }||| 32 } else {||| 33 k = n / 2;||| 34 m = 0;||| 35 u = 0;||| 36 if (v.size() == k) {||| 37 for (j = 1; j <= k; j++) {||| 38 m = m + abs(v[j - 1] - 2 * j);||| 39 }||| 40 cout << m << ""\n"";||| 41 } else if (v.size() == k + 1) {||| 42 for (j = 1; j <= k + 1; j++) {||| 43 u = u + abs(v[j - 1] - 2 * j + 1);||| 44 }||| 45 cout << u << ""\n"";||| 46 } else {||| 47 cout << -1 << ""\n"";||| 48 }||| 49 }||| 50 }||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long c, j, d, t, k, i, x, n, m, u;||| 4 signed main() {||| 5 cin >> t;||| 6 for (i = 1; i <= t; i++) {||| 7 cin >> n;||| 8 vector<long long> v;||| 9 for (j = 1; j <= n; j++) {||| 10 cin >> x;||| 11 if (x % 2 == 0) {||| 12 v.push_back(j);||| 13 }||| 14 }||| 15 if (n % 2 == 0) {||| 16 k = n / 2;||| 17 m = 0;||| 18 u = 0;||| 19 if (v.size() != k) {||| 20 cout << -1 << ""\n"";||| 21 } else {||| 22 for (j = 1; j <= k; j++) {||| 23 m = m + abs(v[j - 1] - 2 * j + 1);||| 24 u = u + abs(v[j - 1] - 2 * j);||| 25 }||| 26 if (m < u) {||| 27 cout << m << ""\n"";||| 28 } else {||| 29 cout << u << ""\n"";||| 30 }||| 31 }||| 32 } else {||| 33 k = n / 2;||| 34 m = 0;||| 35 u = 0;||| 36 if (v.size() == k) {||| 37 for (j = 1; j <= k; j++) {||| 38 m = m + abs(v[j - 1] - 2 * j);||| 39 }||| 40 cout << n << ""\n"";||| 41 } else if (v.size() == k + 1) {||| 42 for (j = 1; j <= k + 1; j++) {||| 43 u = u + abs(v[j - 1] - 2 * j + 1);||| 44 }||| 45 cout << u << ""\n"";||| 46 } else {||| 47 cout << -1 << ""\n"";||| 48 }||| 49 }||| 50 }||| 51 }||| "	"40 cout << m << ""\n"";"
45	250	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(void) {||| 4 int t, n, i, j, x;||| 5 int n1, n2;||| 6 int a, b, p, q;||| 7 cin >> t;||| 8 for (i = 0; i < t; i++) {||| 9 cin >> n;||| 10 n1 = 0, n2 = 0;||| 11 vector<int> v, v1, v2;||| 12 vector<int> even, odd;||| 13 for (j = 0; j < n; j++) {||| 14 cin >> x;||| 15 if (x % 2) {||| 16 n1++;||| 17 odd.push_back(j);||| 18 } else {||| 19 n2++;||| 20 even.push_back(j);||| 21 }||| 22 v.push_back(x);||| 23 v1.push_back(x);||| 24 v2.push_back(x);||| 25 }||| 26 long long max1 = 0, max2 = 0, max_total;||| 27 int k, temp;||| 28 a = 0, b = 0;||| 29 if (n % 2) {||| 30 if (abs(n1 - n2) != 1) {||| 31 cout << ""-1\n"";||| 32 } else {||| 33 if (n1 < n2) {||| 34 for (k = 0; k < n; k++) {||| 35 if (k % 2) {||| 36 while (a < n && !(v1[a] % 2)) {||| 37 a++;||| 38 }||| 39 max1 += abs(a - k);||| 40 if (a != k) {||| 41 temp = v1[a];||| 42 v1[a] = v1[k];||| 43 v1[k] = temp;||| 44 }||| 45 a++;||| 46 } else {||| 47 while (b < n && v1[b] % 2) {||| 48 b++;||| 49 }||| 50 max1 += abs(b - k);||| 51 if (b != k) {||| 52 temp = v1[b];||| 53 v1[b] = v1[k];||| 54 v1[k] = temp;||| 55 }||| 56 b++;||| 57 }||| 58 }||| 59 cout << max1 << ""\n"";||| 60 } else {||| 61 for (k = 0; k < n; k++) {||| 62 if (!(k % 2)) {||| 63 while (a < n && !(v2[a] % 2)) {||| 64 a++;||| 65 }||| 66 max2 += abs(a - k);||| 67 if (a != k) {||| 68 temp = v2[a];||| 69 v2[a] = v2[k];||| 70 v2[k] = temp;||| 71 }||| 72 a++;||| 73 } else {||| 74 while (b < n && v2[b] % 2) {||| 75 b++;||| 76 }||| 77 max2 += abs(b - k);||| 78 if (b != k) {||| 79 temp = v2[b];||| 80 v2[b] = v2[k];||| 81 v2[k] = temp;||| 82 }||| 83 b++;||| 84 }||| 85 }||| 86 cout << max2 << ""\n"";||| 87 }||| 88 }||| 89 } else {||| 90 if (n1 != n2) {||| 91 cout << ""-1\n"";||| 92 } else {||| 93 a = 0, b = 0;||| 94 for (k = 0; k < n; k++) {||| 95 if (k % 2) {||| 96 while (a < n && !(v1[a] % 2)) {||| 97 a++;||| 98 }||| 99 max1 += abs(a - k);||| 100 if (a != k) {||| 101 temp = v1[a];||| 102 v1[a] = v1[k];||| 103 v1[k] = temp;||| 104 }||| 105 a++;||| 106 } else {||| 107 while (b < n && v1[b] % 2) {||| 108 b++;||| 109 }||| 110 max1 += abs(b - k);||| 111 if (b != k) {||| 112 temp = v1[b];||| 113 v1[b] = v1[k];||| 114 v1[k] = temp;||| 115 }||| 116 b++;||| 117 }||| 118 }||| 119 a = 0, b = 0;||| 120 for (k = 0; k < n; k++) {||| 121 if (!(k % 2)) {||| 122 while (a < n && !(v2[a] % 2)) {||| 123 a++;||| 124 }||| 125 max2 += abs(a - k);||| 126 if (a != k) {||| 127 temp = v2[a];||| 128 v2[a] = v2[k];||| 129 v2[k] = temp;||| 130 }||| 131 a++;||| 132 } else {||| 133 while (b < n && v2[b] % 2) {||| 134 b++;||| 135 }||| 136 max2 += abs(b - k);||| 137 if (b != k) {||| 138 temp = v2[b];||| 139 v2[b] = v2[k];||| 140 v2[k] = temp;||| 141 }||| 142 b++;||| 143 }||| 144 }||| 145 cout << min(max1, max2) << ""\n"";||| 146 }||| 147 }||| 148 }||| 149 return 0;||| 150 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(void) {||| 4 int t, n, i, j, x;||| 5 int n1, n2;||| 6 int a, b, p, q;||| 7 cin >> t;||| 8 for (i = 0; i < t; i++) {||| 9 cin >> n;||| 10 n1 = 0, n2 = 0;||| 11 vector<int> v, v1, v2;||| 12 vector<int> even, odd;||| 13 for (j = 0; j < n; j++) {||| 14 cin >> x;||| 15 if (x % 2) {||| 16 n1++;||| 17 odd.push_back(j);||| 18 } else {||| 19 n2++;||| 20 even.push_back(j);||| 21 }||| 22 v.push_back(x);||| 23 v1.push_back(x);||| 24 v2.push_back(x);||| 25 }||| 26 long long max1 = 0, max2 = 0, max_total;||| 27 int k, temp;||| 28 a = 0, b = 0;||| 29 if (n % 2) {||| 30 if (abs(n1 - n2) != 1) {||| 31 cout << ""-1\n"";||| 32 } else {||| 33 if (n1 < n2) {||| 34 for (k = 0; k < n; k++) {||| 35 if (k % 2) {||| 36 while (a < n && !(v1[a] % 2)) {||| 37 a++;||| 38 }||| 39 max1 += abs(a - k);||| 40 if (a != k) {||| 41 temp = v1[a];||| 42 v1[a] = v1[k];||| 43 v1[k] = temp;||| 44 }||| 45 a++;||| 46 } else {||| 47 while (b < n && v1[b] % 2) {||| 48 b++;||| 49 }||| 50 max1 += abs(b - k);||| 51 if (b != k) {||| 52 temp = v1[b];||| 53 v1[b] = v1[k];||| 54 v1[k] = temp;||| 55 }||| 56 b++;||| 57 }||| 58 }||| 59 cout << max1 << ""\n"";||| 60 } else {||| 61 for (k = 0; k < n; k++) {||| 62 if (!(k % 2)) {||| 63 while (a < n && !(v2[a] % 2)) {||| 64 a++;||| 65 }||| 66 max2 += abs(a - k);||| 67 if (a != k) {||| 68 temp = v2[a];||| 69 v2[a] = v2[k];||| 70 v2[k] = temp;||| 71 }||| 72 a++;||| 73 } else {||| 74 while (b < n && v2[b] % 2) {||| 75 b++;||| 76 }||| 77 max2 += abs(b - k);||| 78 if (b != k) {||| 79 temp = v2[b];||| 80 v2[b] = v2[k];||| 81 v2[k] = temp;||| 82 }||| 83 b++;||| 84 }||| 85 }||| 86 cout << max1 << ""\n"";||| 87 }||| 88 }||| 89 } else {||| 90 if (n1 != n2) {||| 91 cout << ""-1\n"";||| 92 } else {||| 93 a = 0, b = 0;||| 94 for (k = 0; k < n; k++) {||| 95 if (k % 2) {||| 96 while (a < n && !(v1[a] % 2)) {||| 97 a++;||| 98 }||| 99 max1 += abs(a - k);||| 100 if (a != k) {||| 101 temp = v1[a];||| 102 v1[a] = v1[k];||| 103 v1[k] = temp;||| 104 }||| 105 a++;||| 106 } else {||| 107 while (b < n && v1[b] % 2) {||| 108 b++;||| 109 }||| 110 max1 += abs(b - k);||| 111 if (b != k) {||| 112 temp = v1[b];||| 113 v1[b] = v1[k];||| 114 v1[k] = temp;||| 115 }||| 116 b++;||| 117 }||| 118 }||| 119 a = 0, b = 0;||| 120 for (k = 0; k < n; k++) {||| 121 if (!(k % 2)) {||| 122 while (a < n && !(v2[a] % 2)) {||| 123 a++;||| 124 }||| 125 max2 += abs(a - k);||| 126 if (a != k) {||| 127 temp = v2[a];||| 128 v2[a] = v2[k];||| 129 v2[k] = temp;||| 130 }||| 131 a++;||| 132 } else {||| 133 while (b < n && v2[b] % 2) {||| 134 b++;||| 135 }||| 136 max2 += abs(b - k);||| 137 if (b != k) {||| 138 temp = v2[b];||| 139 v2[b] = v2[k];||| 140 v2[k] = temp;||| 141 }||| 142 b++;||| 143 }||| 144 }||| 145 cout << min(max1, max2) << ""\n"";||| 146 }||| 147 }||| 148 }||| 149 return 0;||| 150 }||| "	"86 cout << max2 << ""\n"";"
45	60	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 void maxi() {||| 5 long long n;||| 6 vector<int> v[2];||| 7 cin >> n;||| 8 v[0].clear(), v[1].clear();||| 9 for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i);||| 10 if (v[0].size() < v[1].size()) swap(v[0], v[1]);||| 11 if (v[0].size() != (n + 1) / 2) {||| 12 cout << -1 << endl;||| 13 return;||| 14 }||| 15 long long ret = n * n;||| 16 for (int i = 0; i < 2 - (n & 1); i++) {||| 17 long long x = 0;||| 18 for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j);||| 19 ret = min(ret, x);||| 20 }||| 21 cout << ret << endl;||| 22 }||| 23 int main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 maxi();||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 void maxi() {||| 5 long long n;||| 6 vector<int> v[2];||| 7 cin >> n;||| 8 v[0].clear(), v[1].clear();||| 9 for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i);||| 10 if (v[0].size() < v[1].size()) swap(v[0], v[1]);||| 11 if (v[0].size() != (n + 1) / 2) {||| 12 cout << -1 << endl;||| 13 return;||| 14 }||| 15 long long ret = n * 1;||| 16 for (int i = 0; i < 2 - (n & 1); i++) {||| 17 long long x = 0;||| 18 for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j);||| 19 ret = min(ret, x);||| 20 }||| 21 cout << ret << endl;||| 22 }||| 23 int main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 maxi();||| 28 }||| 29 return 0;||| 30 }||| 	15 long long ret = n * n;
45	227	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 void maxi() {||| 5 long long n;||| 6 vector<int> v[2];||| 7 cin >> n;||| 8 v[0].clear(), v[1].clear();||| 9 for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i);||| 10 if (v[0].size() < v[1].size()) swap(v[0], v[1]);||| 11 if (v[0].size() != (n + 1) / 2) {||| 12 cout << -1 << endl;||| 13 return;||| 14 }||| 15 long long ret = n * n;||| 16 for (int i = 0; i < 2 - (n & 1); i++) {||| 17 long long x = 0;||| 18 for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j);||| 19 ret = min(ret, x);||| 20 }||| 21 cout << ret << endl;||| 22 }||| 23 int main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 maxi();||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 5;||| 4 void maxi() {||| 5 long long n;||| 6 vector<int> v[2];||| 7 cin >> n;||| 8 v[0].clear(), v[1].clear();||| 9 for (int i = 0, x; i < n; i++) cin >> x, v[x & 1].push_back(i);||| 10 if (v[0].size() < v[1].size()) swap(v[0], v[1]);||| 11 if (v[0].size() != (n + 1) / 2) {||| 12 cout << -1 << endl;||| 13 return;||| 14 }||| 15 long long ret = n * 2;||| 16 for (int i = 0; i < 2 - (n & 1); i++) {||| 17 long long x = 0;||| 18 for (int j = 0; j < v[i].size(); j++) x += abs(v[i][j] - 2 * j);||| 19 ret = min(ret, x);||| 20 }||| 21 cout << ret << endl;||| 22 }||| 23 int main() {||| 24 long long t;||| 25 cin >> t;||| 26 while (t--) {||| 27 maxi();||| 28 }||| 29 return 0;||| 30 }||| 	15 long long ret = n * n;
46	123	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class... Args>||| 4 void debug(Args... args) {||| 5 auto tmp = {(cout << args << '\t', 0)...};||| 6 cout << endl;||| 7 }||| 8 using ll = long long;||| 9 const int N = 1e3 + 10;||| 10 const int mod = 4933;||| 11 const double eps = 1e-9;||| 12 ll a[N];||| 13 int n;||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(nullptr);||| 17 cin >> n;||| 18 for (int i = 1; i <= n; ++i) {||| 19 cin >> a[i];||| 20 }||| 21 ll ans = 0;||| 22 for (int i = 1; i <= n; i += 2) {||| 23 ll x = 0;||| 24 ll y = 0;||| 25 ll z = 1;||| 26 for (int j = i + 1; j <= n; j += 2) {||| 27 ll d = abs(x - y);||| 28 if (x == y) {||| 29 ans += max(0ll, min(a[i], a[j]) - z + 1);||| 30 } else if (x > y) {||| 31 ans += max(0ll, min(a[i], a[j] - d) - z + 1);||| 32 } else {||| 33 ans += max(0ll, min(a[i] - d, a[j]) - max(1ll, z - d) + 1);||| 34 }||| 35 y += a[j];||| 36 z = max(z, y - x);||| 37 x += a[j + 1];||| 38 }||| 39 }||| 40 cout << ans;||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class... Args>||| 4 void debug(Args... args) {||| 5 auto tmp = {(cout << args << '\t', 0)...};||| 6 cout << endl;||| 7 }||| 8 using ll = long long;||| 9 const int N = 1e3 + 10;||| 10 const int mod = 4933;||| 11 const double eps = 1e-9;||| 12 ll a[N];||| 13 int n;||| 14 int main() {||| 15 ios::sync_with_stdio(false);||| 16 cin.tie(nullptr);||| 17 cin >> n;||| 18 for (int i = 1; i <= n; ++i) {||| 19 cin >> a[i];||| 20 }||| 21 ll ans = 0;||| 22 for (int i = 1; i <= n; i += 2) {||| 23 ll x = 0;||| 24 ll y = 0;||| 25 ll z = 1;||| 26 for (int j = i + 1; j <= n; j += 2) {||| 27 int d = abs(x - y);||| 28 if (x == y) {||| 29 ans += max(0ll, min(a[i], a[j]) - z + 1);||| 30 } else if (x > y) {||| 31 ans += max(0ll, min(a[i], a[j] - d) - z + 1);||| 32 } else {||| 33 ans += max(0ll, min(a[i] - d, a[j]) - max(1ll, z - d) + 1);||| 34 }||| 35 y += a[j];||| 36 z = max(z, y - x);||| 37 x += a[j + 1];||| 38 }||| 39 }||| 40 cout << ans;||| 41 }||| 	27 ll d = abs(x - y);
46	79	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t startTime, endTime;||| 4 const long long INF_ll = 1e18;||| 5 const int INF_int = 0x3f3f3f3f;||| 6 void read(){};||| 7 template <typename _Tp, typename... _Tps>||| 8 void read(_Tp& x, _Tps&... Ar) {||| 9 x = 0;||| 10 char c = getchar();||| 11 bool flag = 0;||| 12 while (c < '0' || c > '9') flag |= (c == '-'), c = getchar();||| 13 while (c >= '0' && c <= '9')||| 14 x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();||| 15 if (flag) x = -x;||| 16 read(Ar...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) {||| 21 x = ~(x - 1);||| 22 putchar('-');||| 23 }||| 24 if (x > 9) write(x / 10);||| 25 putchar(x % 10 + '0');||| 26 }||| 27 void rd_test() {}||| 28 void Time_test() {}||| 29 int vec[300000];||| 30 int main() {||| 31 int n;||| 32 read(n);||| 33 for (int i = 1; i <= n; i++) {||| 34 read(vec[i]);||| 35 }||| 36 long long ans = 0;||| 37 int len = n;||| 38 if (len % 2 == 1) len--;||| 39 for (int i = 1; i <= len; i += 2) {||| 40 long long sum = vec[i];||| 41 long long L = 0;||| 42 for (int j = i + 1; j <= len; j++) {||| 43 if (j % 2 == 1)||| 44 L += vec[j];||| 45 else {||| 46 long long R = vec[j];||| 47 long long k = min(L, R);||| 48 if (k) {||| 49 R -= k;||| 50 L -= k;||| 51 if (L == 0) ans++;||| 52 }||| 53 if (R > 0) {||| 54 long long k = min(R, sum);||| 55 R -= k;||| 56 sum -= k;||| 57 ans += k;||| 58 }||| 59 if (R > 0) break;||| 60 }||| 61 }||| 62 }||| 63 printf(""%lld\n"", ans);||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 clock_t startTime, endTime;||| 4 const long long INF_ll = 1e18;||| 5 const int INF_int = 0x3f3f3f3f;||| 6 void read(){};||| 7 template <typename _Tp, typename... _Tps>||| 8 void read(_Tp& x, _Tps&... Ar) {||| 9 x = 0;||| 10 char c = getchar();||| 11 bool flag = 0;||| 12 while (c < '0' || c > '9') flag |= (c == '-'), c = getchar();||| 13 while (c >= '0' && c <= '9')||| 14 x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();||| 15 if (flag) x = -x;||| 16 read(Ar...);||| 17 }||| 18 template <typename T>||| 19 inline void write(T x) {||| 20 if (x < 0) {||| 21 x = ~(x - 1);||| 22 putchar('-');||| 23 }||| 24 if (x > 9) write(x / 10);||| 25 putchar(x % 10 + '0');||| 26 }||| 27 void rd_test() {}||| 28 void Time_test() {}||| 29 int vec[300000];||| 30 int main() {||| 31 int n;||| 32 read(n);||| 33 for (int i = 1; i <= n; i++) {||| 34 read(vec[i]);||| 35 }||| 36 long long ans = 0;||| 37 int len = n;||| 38 if (len % 2 == 1) len--;||| 39 for (int i = 1; i <= len; i += 2) {||| 40 long long sum = vec[i];||| 41 long long L = 0;||| 42 for (int j = i + 1; j <= len; j++) {||| 43 if (j % 2 == 1)||| 44 L += vec[j];||| 45 else {||| 46 long long R = vec[j];||| 47 long long k = min(L, R);||| 48 if (k) {||| 49 R -= k;||| 50 L -= k;||| 51 if (L == 0) ans++;||| 52 }||| 53 if (R > 0) {||| 54 long long k = min(R, sum);||| 55 R -= k;||| 56 sum -= k;||| 57 ans += k;||| 58 }||| 59 if (R > 0) break;||| 60 }||| 61 }||| 62 }||| 63 printf(""%d\n"", ans);||| 64 }||| "	"63 printf(""%lld\n"", ans);"
47	298	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<int> v;||| 7 int x, y, z, a, b, c;||| 8 int x1, y1;||| 9 cout << ""and 1 2"" << endl;||| 10 cin >> x1;||| 11 cout << ""or 1 2"" << endl;||| 12 cin >> y1;||| 13 x = x1 + y1;||| 14 cout << ""and 3 2"" << endl;||| 15 cin >> x1;||| 16 cout << ""or 3 2"" << endl;||| 17 cin >> y1;||| 18 z = x1 + y1;||| 19 cout << ""and 1 3"" << endl;||| 20 cin >> x1;||| 21 cout << ""or 1 3"" << endl;||| 22 cin >> y1;||| 23 y = x1 + y1;||| 24 a = (x - z + y) / 2;||| 25 b = (z - y + x) / 2;||| 26 c = (y + z - x) / 2;||| 27 v.push_back(a);||| 28 v.push_back(b);||| 29 v.push_back(c);||| 30 for (int i = 4; i <= n; i++) {||| 31 cout << ""and 1 "" << i << endl;||| 32 cin >> x1;||| 33 cout << ""or 1 "" << i << endl;||| 34 cin >> y1;||| 35 x = x1 + y1;||| 36 v.push_back(x - a);||| 37 }||| 38 sort(v.begin(), v.end());||| 39 cout << ""finish "" << v[k - 1] << endl;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<int> v;||| 7 int x, y, z, a, b, c;||| 8 int x1, y1;||| 9 cout << ""and 1 2"" << endl;||| 10 cin >> x1;||| 11 cout << ""or 1 2"" << endl;||| 12 cin >> y1;||| 13 x = x1 + y1;||| 14 cout << ""and 3 2"" << endl;||| 15 cin >> x1;||| 16 cout << ""or 3 2"" << endl;||| 17 cin >> y1;||| 18 z = x1 + y1;||| 19 cout << ""and 1 3"" << endl;||| 20 cin >> x1;||| 21 cout << ""or 1 3"" << endl;||| 22 cin >> y1;||| 23 y = x1 + y1;||| 24 a = (x - z + y) / 2;||| 25 b = (z - y + x) / 2;||| 26 c = (y + z - x) / 2;||| 27 v.push_back(a);||| 28 v.push_back(b);||| 29 v.push_back(c);||| 30 for (int i = 4; i <= n; i++) {||| 31 cout << ""and 1 "" << i << endl;||| 32 cin >> x1;||| 33 cout << ""or 1 "" << i << endl;||| 34 cin >> y1;||| 35 x = x1 + y1;||| 36 v.push_back(x - 1);||| 37 }||| 38 sort(v.begin(), v.end());||| 39 cout << ""finish "" << v[k - 1] << endl;||| 40 }||| "	36 v.push_back(x - a);
47	304	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void OJ() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); }||| 4 long long fp(long long a, long long b, long long m = 1000000007) {||| 5 a %= m;||| 6 if (a == 0) return 0;||| 7 long long ans = 1;||| 8 while (b) {||| 9 if (b & 1) ans = (ans * a) % m;||| 10 a = (a * a) % m;||| 11 b >>= 1;||| 12 }||| 13 return ans;||| 14 }||| 15 void solve() {||| 16 OJ();||| 17 long long t = 1;||| 18 while (t--) {||| 19 vector<long long> temp;||| 20 long long n, k;||| 21 cin >> n >> k;||| 22 cout << ""or "" << 1 << "" "" << 2 << endl;||| 23 long long o1;||| 24 cin >> o1;||| 25 cout << ""or "" << 2 << "" "" << 3 << endl;||| 26 long long o2;||| 27 cin >> o2;||| 28 cout << ""or "" << 1 << "" "" << 3 << endl;||| 29 long long o3;||| 30 cin >> o3;||| 31 cout << ""and "" << 1 << "" "" << 2 << endl;||| 32 long long a1;||| 33 cin >> a1;||| 34 cout << ""and "" << 2 << "" "" << 3 << endl;||| 35 long long a2;||| 36 cin >> a2;||| 37 cout << ""and "" << 1 << "" "" << 3 << endl;||| 38 long long a3;||| 39 cin >> a3;||| 40 long long a = (a1 | a3);||| 41 for (long long i = 30; i >= 0; i--) {||| 42 long long v = (a >> i) & 1;||| 43 if (v == 1) continue;||| 44 long long v2 = (o1 >> i) & 1, v3 = (o3 >> i) & 1;||| 45 if (v2 == 0 || v3 == 0) continue;||| 46 long long v4 = (a2 >> i) & 1;||| 47 if (v4 == 1) continue;||| 48 a |= (1 << i);||| 49 }||| 50 long long b = (a1 | a2) | (a ^ o1);||| 51 long long c = (a2 | a3) | (o3 ^ a);||| 52 temp.push_back(a);||| 53 temp.push_back(b);||| 54 temp.push_back(c);||| 55 for (long long i = 4; i <= n; i++) {||| 56 cout << ""or "" << 1 << "" "" << i << endl;||| 57 long long o;||| 58 cin >> o;||| 59 cout << ""and "" << 1 << "" "" << i << endl;||| 60 long long an;||| 61 cin >> an;||| 62 temp.push_back(an | (o ^ temp[0]));||| 63 }||| 64 sort(temp.begin(), temp.end());||| 65 cout << ""finish "" << temp[k - 1] << endl;||| 66 return;||| 67 }||| 68 }||| 69 signed main() {||| 70 solve();||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void OJ() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); }||| 4 long long fp(long long a, long long b, long long m = 1000000007) {||| 5 a %= m;||| 6 if (a == 0) return 0;||| 7 long long ans = 1;||| 8 while (b) {||| 9 if (b & 1) ans = (ans * a) % m;||| 10 a = (a * a) % m;||| 11 b >>= 1;||| 12 }||| 13 return ans;||| 14 }||| 15 void solve() {||| 16 OJ();||| 17 long long t = 1;||| 18 while (t--) {||| 19 vector<long long> temp;||| 20 long long n, k;||| 21 cin >> n >> k;||| 22 cout << ""or "" << 1 << "" "" << 2 << endl;||| 23 long long o1;||| 24 cin >> o1;||| 25 cout << ""or "" << 2 << "" "" << 3 << endl;||| 26 long long o2;||| 27 cin >> o2;||| 28 cout << ""or "" << 1 << "" "" << 3 << endl;||| 29 long long o3;||| 30 cin >> o3;||| 31 cout << ""and "" << 1 << "" "" << 2 << endl;||| 32 long long a1;||| 33 cin >> a1;||| 34 cout << ""and "" << 2 << "" "" << 3 << endl;||| 35 long long a2;||| 36 cin >> a2;||| 37 cout << ""and "" << 1 << "" "" << 3 << endl;||| 38 long long a3;||| 39 cin >> a3;||| 40 long long a = (a1 | a3);||| 41 for (long long i = 30; i >= 0; i--) {||| 42 long long v = (a >> i) & 1;||| 43 if (v == 1) continue;||| 44 long long v2 = (o1 >> i) & 1, v3 = (o3 >> i) & 1;||| 45 if (v2 == 0 || v3 == 0) continue;||| 46 long long v4 = (a2 >> i) & 1;||| 47 if (v4 == 1) continue;||| 48 a |= (1 << i);||| 49 }||| 50 long long b = (a1 | a2) | (a ^ o1);||| 51 long long c = (a2 | a3) | (o3 ^ a);||| 52 temp.push_back(a);||| 53 temp.push_back(b);||| 54 temp.push_back(c);||| 55 for (long long i = 4; i <= n; i++) {||| 56 cout << ""or "" << 1 << "" "" << i << endl;||| 57 long long o;||| 58 cin >> o;||| 59 cout << ""ans "" << 1 << "" "" << i << endl;||| 60 long long an;||| 61 cin >> an;||| 62 temp.push_back(an | (o ^ temp[0]));||| 63 }||| 64 sort(temp.begin(), temp.end());||| 65 cout << ""finish "" << temp[k - 1] << endl;||| 66 return;||| 67 }||| 68 }||| 69 signed main() {||| 70 solve();||| 71 return 0;||| 72 }||| "	"59 cout << ""and "" << 1 << "" "" << i << endl;"
47	175	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename __T1, typename __T2>||| 4 ostream &operator<<(ostream &out, pair<__T1, __T2> &__VAR) {||| 5 cout << ""["" << __VAR.first << "", "" << __VAR.second << ""]"";||| 6 return out;||| 7 }||| 8 template <typename __T>||| 9 ostream &operator<<(ostream &out, vector<__T> &__VAR) {||| 10 cout << ""["";||| 11 for (int i = 0; i <= (int)__VAR.size() - 2; i++) cout << __VAR[i] << "", "";||| 12 if (__VAR.size() > 0) cout << __VAR[__VAR.size() - 1];||| 13 cout << ""]"" << endl;||| 14 return out;||| 15 }||| 16 const int INF = 1e9;||| 17 vector<int> a, aa;||| 18 int get_or(int i, int j) {||| 19 cout << ""or "" << i << ' ' << j << endl;||| 20 int val;||| 21 cin >> val;||| 22 return val;||| 23 }||| 24 int get_and(int i, int j) {||| 25 cout << ""and "" << i << ' ' << j << endl;||| 26 int val;||| 27 cin >> val;||| 28 return val;||| 29 }||| 30 int get_a(int a_and_b, int a_and_c, int b_and_c, int a_or_b, int a_or_c,||| 31 int b_or_c) {||| 32 int A = a_and_b;||| 33 int pos = a_or_b - a_and_b;||| 34 pos -= pos & b_and_c;||| 35 A += pos & a_or_c;||| 36 return A;||| 37 }||| 38 tuple<int, int, int> solve(int a, int b, int c) {||| 39 int a_and_b = get_and(a, b);||| 40 int a_and_c = get_and(a, c);||| 41 int b_and_c = get_and(b, c);||| 42 int a_or_b = get_or(a, b);||| 43 int a_or_c = get_or(a, c);||| 44 int b_or_c = get_or(b, c);||| 45 int A = get_a(a_and_b, a_and_c, b_and_c, a_or_b, a_or_c, b_or_c);||| 46 int B = get_a(a_and_b, b_and_c, a_and_c, a_or_b, b_or_c, a_or_c);||| 47 int C = get_a(a_and_c, b_and_c, a_and_b, a_or_c, b_or_c, a_or_b);||| 48 return {A, B, C};||| 49 }||| 50 int solve2(int A, int And, int Or) {||| 51 int B = And;||| 52 int pos = Or - And;||| 53 pos -= pos & A;||| 54 return B + pos;||| 55 }||| 56 int main() {||| 57 ios_base::sync_with_stdio(0);||| 58 int N, K;||| 59 cin >> N >> K;||| 60 a.resize(N + 1, 0);||| 61 int last = 0;||| 62 for (int i = 1; i + 2 <= N; i += 3) {||| 63 auto tup = solve(i, i + 1, i + 2);||| 64 auto [A, B, C] = tup;||| 65 a[i] = A;||| 66 a[i + 1] = B;||| 67 a[i + 2] = C;||| 68 last = i + 2;||| 69 }||| 70 for (int i = last + 1; i <= N; i++) {||| 71 int And = get_and(i - 1, i);||| 72 int Or = get_or(i - 1, i);||| 73 a[i] = solve2(a[i - 1], And, Or);||| 74 }||| 75 sort(a.begin(), a.end());||| 76 cout << ""finish "" << a[K] << endl;||| 77 return 0;||| 78 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename __T1, typename __T2>||| 4 ostream &operator<<(ostream &out, pair<__T1, __T2> &__VAR) {||| 5 cout << ""["" << __VAR.first << "", "" << __VAR.second << ""]"";||| 6 return out;||| 7 }||| 8 template <typename __T>||| 9 ostream &operator<<(ostream &out, vector<__T> &__VAR) {||| 10 cout << ""["";||| 11 for (int i = 0; i <= (int)__VAR.size() - 2; i++) cout << __VAR[i] << "", "";||| 12 if (__VAR.size() > 0) cout << __VAR[__VAR.size() - 1];||| 13 cout << ""]"" << endl;||| 14 return out;||| 15 }||| 16 const int INF = 1e9;||| 17 vector<int> a, aa;||| 18 int get_or(int i, int j) {||| 19 cout << ""or "" << i << ' ' << j << endl;||| 20 int val;||| 21 cin >> val;||| 22 return val;||| 23 }||| 24 int get_and(int i, int j) {||| 25 cout << ""and "" << i << ' ' << j << endl;||| 26 int val;||| 27 cin >> val;||| 28 return val;||| 29 }||| 30 int get_a(int a_and_b, int a_and_c, int b_and_c, int a_or_b, int a_or_c,||| 31 int b_or_c) {||| 32 int A = a_and_b;||| 33 int pos = a_or_b - a_and_b;||| 34 pos -= pos & b_and_c;||| 35 A += pos & a_or_c;||| 36 return A;||| 37 }||| 38 tuple<int, int, int> solve(int a, int b, int c) {||| 39 int a_and_b = get_and(a, b);||| 40 int a_and_c = get_and(a, c);||| 41 int b_and_c = get_and(b, c);||| 42 int a_or_b = get_or(a, b);||| 43 int a_or_c = get_or(a, c);||| 44 int b_or_c = get_or(b, c);||| 45 int A = get_a(a_and_b, a_and_c, b_and_c, a_or_b, a_or_c, b_or_c);||| 46 int B = get_a(a_and_b, b_and_c, a_and_c, a_or_b, b_or_c, a_or_c);||| 47 int C = get_a(a_and_c, b_and_c, a_and_b, a_or_c, b_or_c, a_or_b);||| 48 return {A, B, C};||| 49 }||| 50 int solve2(int A, int And, int Or) {||| 51 int B = And;||| 52 int pos = And - Or;||| 53 pos -= pos & A;||| 54 return B + pos;||| 55 }||| 56 int main() {||| 57 ios_base::sync_with_stdio(0);||| 58 int N, K;||| 59 cin >> N >> K;||| 60 a.resize(N + 1, 0);||| 61 int last = 0;||| 62 for (int i = 1; i + 2 <= N; i += 3) {||| 63 auto tup = solve(i, i + 1, i + 2);||| 64 auto [A, B, C] = tup;||| 65 a[i] = A;||| 66 a[i + 1] = B;||| 67 a[i + 2] = C;||| 68 last = i + 2;||| 69 }||| 70 for (int i = last + 1; i <= N; i++) {||| 71 int And = get_and(i - 1, i);||| 72 int Or = get_or(i - 1, i);||| 73 a[i] = solve2(a[i - 1], And, Or);||| 74 }||| 75 sort(a.begin(), a.end());||| 76 cout << ""finish "" << a[K] << endl;||| 77 return 0;||| 78 }||| "	52 int pos = Or - And;
47	148	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e4 + 5;||| 4 inline int read() {||| 5 char c = getchar();||| 6 int x = 0, f = 1;||| 7 for (; c < '0' || c > '9'; c = getchar())||| 8 if (c == '-') f = 0;||| 9 for (; c <= '9' && c >= '0'; c = getchar())||| 10 x = (x << 1) + (x << 3) + (c ^ 48);||| 11 return f ? x : -x;||| 12 }||| 13 inline int abs(int x) { return x > 0 ? x : -x; }||| 14 inline int min(int a, int b) { return a < b ? a : b; }||| 15 inline int max(int a, int b) { return a > b ? a : b; }||| 16 inline void swap(int &a, int &b) { a ^= b ^= a ^= b; }||| 17 int n, k, a[M], c[M], t1, t2;||| 18 int main() {||| 19 n = read(), k = read();||| 20 for (int i = 2; i <= n; i++) {||| 21 printf(""and %d %d\n"", i - 1, i);||| 22 fflush(stdout);||| 23 scanf(""%d"", &t1);||| 24 printf(""or %d %d\n"", i - 1, i);||| 25 fflush(stdout);||| 26 scanf(""%d"", &t2);||| 27 c[i] = t1 + t2;||| 28 }||| 29 printf(""and 1 3\n"");||| 30 fflush(stdout);||| 31 scanf(""%d"", &t1);||| 32 printf(""or 1 3\n"");||| 33 fflush(stdout);||| 34 scanf(""%d"", &t2);||| 35 a[2] = c[2] - t1 - t2 + c[3] >> 1, a[1] = c[2] - a[2];||| 36 for (register int i = 3; i <= n; i++) a[i] = c[i] - a[i - 1];||| 37 sort(a + 1, a + 1 + n);||| 38 printf(""finish %d\n"", a[k]);||| 39 fflush(stdout);||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1e4 + 5;||| 4 inline int read() {||| 5 char c = getchar();||| 6 int x = 0, f = 1;||| 7 for (; c < '0' || c > '9'; c = getchar())||| 8 if (c == '-') f = 0;||| 9 for (; c <= '9' && c >= '0'; c = getchar())||| 10 x = (x << 1) + (x << 3) + (c ^ 48);||| 11 return f ? x : -x;||| 12 }||| 13 inline int abs(int x) { return x > 0 ? x : -x; }||| 14 inline int min(int a, int b) { return a < b ? a : b; }||| 15 inline int max(int a, int b) { return a > b ? a : b; }||| 16 inline void swap(int &a, int &b) { a ^= b ^= a ^= b; }||| 17 int n, k, a[M], c[M], t1, t2;||| 18 int main() {||| 19 n = read(), k = read();||| 20 for (int i = 2; i <= n; i++) {||| 21 printf(""and %d %d\n"", i - 1, i);||| 22 fflush(stdout);||| 23 scanf(""%d"", &t1);||| 24 printf(""or %d %d\n"", i - 1, i);||| 25 fflush(stdout);||| 26 scanf(""%d"", &t2);||| 27 c[i] = t1 + t2;||| 28 }||| 29 printf(""ans 1 3\n"");||| 30 fflush(stdout);||| 31 scanf(""%d"", &t1);||| 32 printf(""or 1 3\n"");||| 33 fflush(stdout);||| 34 scanf(""%d"", &t2);||| 35 a[2] = c[2] - t1 - t2 + c[3] >> 1, a[1] = c[2] - a[2];||| 36 for (register int i = 3; i <= n; i++) a[i] = c[i] - a[i - 1];||| 37 sort(a + 1, a + 1 + n);||| 38 printf(""finish %d\n"", a[k]);||| 39 fflush(stdout);||| 40 return 0;||| 41 }||| "	"29 printf(""and 1 3\n"");"
47	239	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ask1(long long a, long long b) {||| 4 cout << ""and "" << a << "" "" << b << ""\n"";||| 5 long long n;||| 6 cin >> n;||| 7 return n;||| 8 }||| 9 long long ask2(long long a, long long b) {||| 10 cout << ""or "" << a << "" "" << b << ""\n"";||| 11 long long n;||| 12 cin >> n;||| 13 return n;||| 14 }||| 15 int32_t main() {||| 16 long long T = 1;||| 17 while (T--) {||| 18 long long n, k;||| 19 cin >> n >> k;||| 20 vector<long long> v(n);||| 21 long long a12 = ask1(1, 2);||| 22 long long o12 = ask2(1, 2);||| 23 long long a23 = ask1(2, 3);||| 24 long long o23 = ask2(2, 3);||| 25 long long a13 = ask1(1, 3);||| 26 long long o13 = ask2(1, 3);||| 27 long long o123 = o12 | o23;||| 28 long long a123 = a12 & a23;||| 29 long long a = (o123 - o23 + a12 + a13 - a123);||| 30 long long b = o12 - (a - a12);||| 31 long long c = o13 - (a - a13);||| 32 v[0] = a;||| 33 v[1] = b;||| 34 v[2] = c;||| 35 for (long long i = 3; i < n; i++) {||| 36 long long ba = ask1(1, i + 1);||| 37 long long bo = ask2(1, i + 1);||| 38 v[i] = bo - (a - ba);||| 39 }||| 40 sort(v.begin(), v.end());||| 41 cout << ""finish "" << v[k - 1] << ""\n"";||| 42 }||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ask1(long long a, long long b) {||| 4 cout << ""and "" << a << "" "" << b << ""\n"";||| 5 long long n;||| 6 cin >> n;||| 7 return n;||| 8 }||| 9 long long ask2(long long a, long long b) {||| 10 cout << ""or "" << a << "" "" << b << ""\n"";||| 11 long long n;||| 12 cin >> n;||| 13 return n;||| 14 }||| 15 int32_t main() {||| 16 long long T = 1;||| 17 while (T--) {||| 18 long long n, k;||| 19 cin >> n >> k;||| 20 vector<long long> v(n);||| 21 long long a12 = ask1(1, 2);||| 22 long long o12 = ask2(1, 2);||| 23 long long a23 = ask1(2, 3);||| 24 long long o23 = ask2(2, 3);||| 25 long long a13 = ask1(1, 3);||| 26 long long o13 = ask2(1, 3);||| 27 long long o123 = o12 | o23;||| 28 long long a123 = a12 | a23;||| 29 long long a = -(o123 - o23 + a12 + a13 - a123);||| 30 long long b = o12 - (a - a12);||| 31 long long c = o13 - (a - a13);||| 32 v[0] = a;||| 33 v[1] = b;||| 34 v[2] = c;||| 35 for (long long i = 3; i < n; i++) {||| 36 long long ba = ask1(1, i + 1);||| 37 long long bo = ask2(1, i + 1);||| 38 v[i] = bo - (a - ba);||| 39 }||| 40 sort(v.begin(), v.end());||| 41 cout << ""finish "" << v[k - 1] << ""\n"";||| 42 }||| 43 }||| "	28 long long a123 = a12 & a23;
47	102	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1005];||| 4 char op[] = ""and"";||| 5 char op2[] = ""or"";||| 6 char op3[] = ""finish"";||| 7 int n, k;||| 8 void solve() {||| 9 int f = 0;||| 10 int num = 0;||| 11 int m = n / 3;||| 12 int x = 1;||| 13 vector<int> res;||| 14 int s = 1;||| 15 while (num < 6 * m) {||| 16 int sum1, sum2, sum3;||| 17 int x, y, z;||| 18 printf(""%s %d %d\n"", op, s, s + 1);||| 19 fflush(stdout);||| 20 scanf(""%d"", &x);||| 21 printf(""%s %d %d\n"", op2, s, s + 1);||| 22 fflush(stdout);||| 23 scanf(""%d"", &sum1);||| 24 sum1 += x;||| 25 printf(""%s %d %d\n"", op, s + 1, s + 2);||| 26 fflush(stdout);||| 27 scanf(""%d"", &y);||| 28 printf(""%s %d %d\n"", op2, s + 1, s + 2);||| 29 fflush(stdout);||| 30 scanf(""%d"", &sum2);||| 31 sum2 += y;||| 32 printf(""%s %d %d\n"", op, s, s + 2);||| 33 fflush(stdout);||| 34 scanf(""%d"", &z);||| 35 printf(""%s %d %d\n"", op2, s, s + 2);||| 36 fflush(stdout);||| 37 scanf(""%d"", &sum3);||| 38 sum3 += z;||| 39 y = sum1 + sum2 - sum3;||| 40 y /= 2;||| 41 x = sum1 - y;||| 42 z = sum3 - x;||| 43 res.push_back(x);||| 44 res.push_back(y);||| 45 res.push_back(z);||| 46 num += 6;||| 47 s += 3;||| 48 fflush(stdout);||| 49 }||| 50 if (m * 3 < n) {||| 51 for (int i = m * 3 + 1; i <= n; i++) {||| 52 int g = res[res.size() - 1];||| 53 int x, y;||| 54 printf(""%s %d %d\n"", op, i - 1, i);||| 55 fflush(stdout);||| 56 scanf(""%d"", &x);||| 57 printf(""%s %d %d\n"", op2, i - 1, i);||| 58 fflush(stdout);||| 59 scanf(""%d"", &y);||| 60 x += y;||| 61 res.push_back(x - g);||| 62 fflush(stdout);||| 63 }||| 64 }||| 65 sort(res.begin(), res.end());||| 66 int g = res[k - 1];||| 67 printf(""%s %d\n"", op3, g);||| 68 }||| 69 int main() {||| 70 cin >> n >> k;||| 71 solve();||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1005];||| 4 char op[] = ""and"";||| 5 char op2[] = ""or"";||| 6 char op3[] = ""finish"";||| 7 int n, k;||| 8 void solve() {||| 9 int f = 0;||| 10 int num = 0;||| 11 int m = n / 3;||| 12 int x = 1;||| 13 vector<int> res;||| 14 int s = 0;||| 15 while (num <= 6 * m) {||| 16 int sum1, sum2, sum3;||| 17 int x, y, z;||| 18 printf(""%s %d %d\n"", op, s, s + 1);||| 19 fflush(stdout);||| 20 scanf(""%d"", &x);||| 21 printf(""%s %d %d\n"", op2, s, s + 1);||| 22 fflush(stdout);||| 23 scanf(""%d"", &sum1);||| 24 sum1 += x;||| 25 printf(""%s %d %d\n"", op, s + 1, s + 2);||| 26 fflush(stdout);||| 27 scanf(""%d"", &y);||| 28 printf(""%s %d %d\n"", op2, s + 1, s + 2);||| 29 fflush(stdout);||| 30 scanf(""%d"", &sum2);||| 31 sum2 += y;||| 32 printf(""%s %d %d\n"", op, s, s + 2);||| 33 fflush(stdout);||| 34 scanf(""%d"", &z);||| 35 printf(""%s %d %d\n"", op2, s, s + 2);||| 36 fflush(stdout);||| 37 scanf(""%d"", &sum3);||| 38 sum3 += z;||| 39 y = sum1 + sum2 - sum3;||| 40 y /= 2;||| 41 x = sum1 - y;||| 42 z = sum3 - x;||| 43 res.push_back(x);||| 44 res.push_back(y);||| 45 res.push_back(z);||| 46 num += 6;||| 47 s += 3;||| 48 fflush(stdout);||| 49 }||| 50 if (m * 3 < n) {||| 51 for (int i = m * 3 + 1; i <= n; i++) {||| 52 int g = res[res.size() - 1];||| 53 int x, y;||| 54 printf(""%s %d %d\n"", op, i - 1, i);||| 55 fflush(stdout);||| 56 scanf(""%d"", &x);||| 57 printf(""%s %d %d\n"", op2, i - 1, i);||| 58 fflush(stdout);||| 59 scanf(""%d"", &y);||| 60 x += y;||| 61 res.push_back(x - g);||| 62 fflush(stdout);||| 63 }||| 64 }||| 65 sort(res.begin(), res.end());||| 66 int g = res[k - 1];||| 67 printf(""%s %d\n"", op3, g);||| 68 }||| 69 int main() {||| 70 cin >> n >> k;||| 71 solve();||| 72 return 0;||| 73 }||| "	14 int s = 1;
47	16	"1 #include <bits/stdc++.h>||| 2 namespace {||| 3 const int L = 30;||| 4 std::vector<int> GetBits(int x) {||| 5 std::vector<int> r(L);||| 6 for (int i = L - 1; i >= 0; --i) {||| 7 r[i] = (x % 2);||| 8 x /= 2;||| 9 }||| 10 return r;||| 11 }||| 12 int GetValue(const std::vector<int>& r) {||| 13 int value = 0;||| 14 for (int bit : r) {||| 15 value = (2 * value) + bit;||| 16 }||| 17 return value;||| 18 }||| 19 std::vector<int> AskAnd(int x, int y) {||| 20 printf(""and %d %d\n"", x, y);||| 21 fflush(stdout);||| 22 int answer;||| 23 scanf(""%d"", &answer);||| 24 return GetBits(answer);||| 25 }||| 26 void ApplyAndResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 27 const std::vector<int>& and_r) {||| 28 std::vector<std::vector<int>>& a = (*a_ptr);||| 29 for (int k = 0; k < L; ++k) {||| 30 if (and_r[k] == 1) {||| 31 a[x][k] = a[y][k] = 1;||| 32 } else {||| 33 if (a[x][k] == 1) {||| 34 a[y][k] = 0;||| 35 } else if (a[y][k] == 1) {||| 36 a[x][k] = 0;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 std::vector<int> AskOr(int x, int y) {||| 42 printf(""or %d %d\n"", x, y);||| 43 fflush(stdout);||| 44 int answer;||| 45 scanf(""%d"", &answer);||| 46 return GetBits(answer);||| 47 }||| 48 void ApplyOrResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 49 const std::vector<int>& or_r) {||| 50 std::vector<std::vector<int>>& a = (*a_ptr);||| 51 for (int k = 0; k < L; ++k) {||| 52 if (or_r[k] == 0) {||| 53 a[x][k] = a[y][k] = 0;||| 54 } else {||| 55 if (a[x][k] == 0) {||| 56 a[y][k] = 1;||| 57 } else if (a[y][k] == 0) {||| 58 a[x][k] = 1;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 }  // namespace||| 64 int main() {||| 65 int n, k;||| 66 scanf(""%d %d"", &n, &k);||| 67 std::vector<std::vector<int>> a(n + 1, std::vector<int>(L, -1));||| 68 std::vector<int> and_1_2 = AskAnd(1, 2);||| 69 std::vector<int> or_1_2 = AskOr(1, 2);||| 70 std::vector<int> and_1_3 = AskAnd(1, 3);||| 71 std::vector<int> or_1_3 = AskOr(1, 3);||| 72 std::vector<int> and_2_3 = AskAnd(2, 3);||| 73 std::vector<int> or_2_3 = AskOr(2, 3);||| 74 ApplyAndResult(&a, 1, 2, and_1_2);||| 75 ApplyOrResult(&a, 1, 2, or_1_2);||| 76 ApplyAndResult(&a, 2, 3, and_2_3);||| 77 ApplyOrResult(&a, 2, 3, or_2_3);||| 78 ApplyAndResult(&a, 1, 3, and_1_3);||| 79 ApplyOrResult(&a, 1, 3, or_1_3);||| 80 ApplyAndResult(&a, 1, 2, and_1_2);||| 81 ApplyOrResult(&a, 1, 2, or_1_2);||| 82 for (int i = 4; i <= n; ++i) {||| 83 std::vector<int> and_r = AskAnd(1, i);||| 84 std::vector<int> or_r = AskOr(1, i);||| 85 ApplyAndResult(&a, 1, i, and_r);||| 86 ApplyOrResult(&a, 1, i, or_r);||| 87 }||| 88 std::vector<int> array;||| 89 for (int i = 1; i <= n; ++i) {||| 90 array.push_back(GetValue(a[i]));||| 91 }||| 92 std::sort(array.begin(), array.end());||| 93 printf(""finish %d\n"", array[k - 1]);||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 namespace {||| 3 const int L = 30;||| 4 std::vector<int> GetBits(int x) {||| 5 std::vector<int> r(L);||| 6 for (int i = L - 1; i >= 0; --i) {||| 7 r[i] = (x % 2);||| 8 x /= 2;||| 9 }||| 10 return r;||| 11 }||| 12 int GetValue(const std::vector<int>& r) {||| 13 int value = 0;||| 14 for (int bit : r) {||| 15 value = (2 * value) + bit;||| 16 }||| 17 return value;||| 18 }||| 19 std::vector<int> AskAnd(int x, int y) {||| 20 printf(""and %d %d\n"", x, y);||| 21 fflush(stdout);||| 22 int answer;||| 23 scanf(""%d"", &answer);||| 24 return GetBits(answer);||| 25 }||| 26 void ApplyAndResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 27 const std::vector<int>& and_r) {||| 28 std::vector<std::vector<int>>& a = (*a_ptr);||| 29 for (int k = 0; k < L; ++k) {||| 30 if (and_r[k] == 1) {||| 31 a[x][k] = a[y][k] = 1;||| 32 } else {||| 33 if (a[x][k] == 1) {||| 34 a[y][k] = 0;||| 35 } else if (a[y][k] == 1) {||| 36 a[x][k] = 0;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 std::vector<int> AskOr(int x, int y) {||| 42 printf(""or %d %d\n"", x, y);||| 43 fflush(stdout);||| 44 int answer;||| 45 scanf(""%d"", &answer);||| 46 return GetBits(answer);||| 47 }||| 48 void ApplyOrResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 49 const std::vector<int>& or_r) {||| 50 std::vector<std::vector<int>>& a = (*a_ptr);||| 51 for (int k = 0; k < L; ++k) {||| 52 if (or_r[k] == 0) {||| 53 a[x][k] = a[y][k] = 0;||| 54 } else {||| 55 if (a[x][k] == 0) {||| 56 a[y][k] = 1;||| 57 } else if (a[y][k] == 0) {||| 58 a[x][k] = 1;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 }  // namespace||| 64 int main() {||| 65 int n, k;||| 66 scanf(""%d %d"", &n, &k);||| 67 std::vector<std::vector<int>> a(n + 1, std::vector<int>(L, -1));||| 68 std::vector<int> and_1_2 = AskAnd(1, 2);||| 69 std::vector<int> or_1_2 = AskOr(1, 2);||| 70 std::vector<int> and_1_3 = AskAnd(1, 3);||| 71 std::vector<int> or_1_3 = AskOr(1, 3);||| 72 std::vector<int> and_2_3 = AskAnd(2, 3);||| 73 std::vector<int> or_2_3 = AskOr(2, 3);||| 74 ApplyAndResult(&a, 1, 2, and_1_2);||| 75 ApplyOrResult(&a, 1, 2, or_1_2);||| 76 ApplyAndResult(&a, 2, 3, and_2_3);||| 77 ApplyOrResult(&a, 2, 3, or_2_3);||| 78 ApplyAndResult(&a, 1, 3, and_1_3);||| 79 ApplyOrResult(&a, 1, 3, or_1_3);||| 80 ApplyAndResult(&a, 1, 2, and_1_2);||| 81 ApplyOrResult(&a, 1, 2, or_1_2);||| 82 for (int i = 4; i <= n; ++i) {||| 83 std::vector<int> and_r = AskAnd(1, i);||| 84 std::vector<int> or_r = AskOr(1, i);||| 85 ApplyAndResult(&a, 1, i, and_r);||| 86 ApplyOrResult(&a, 1, i, or_r);||| 87 }||| 88 std::vector<int> array;||| 89 for (int i = 1; i <= n; ++i) {||| 90 array.push_back(GetValue(a[i]));||| 91 }||| 92 std::sort(array.begin(), array.end());||| 93 printf(""%d\n"", array[k - 1]);||| 94 return 0;||| 95 }||| "	"93 printf(""finish %d\n"", array[k - 1]);"
47	214	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long num[500005];||| 4 void solve(int x) {||| 5 long long a, o;||| 6 printf(""and 1 %d\n"", x);||| 7 fflush(stdout);||| 8 scanf(""%lld"", &a);||| 9 printf(""or 1 %d\n"", x);||| 10 fflush(stdout);||| 11 scanf(""%lld"", &o);||| 12 long long wei[40];||| 13 for (int i = 1; i <= 34; ++i) {||| 14 if (a & (1ll << (i - 1)))||| 15 wei[i] = 1;||| 16 else if (o & (1ll << (i - 1))) {||| 17 if (num[1] & (1ll << (i - 1)))||| 18 wei[i] = 0;||| 19 else||| 20 wei[i] = 1;||| 21 } else||| 22 wei[i] = 0;||| 23 }||| 24 long long now = 0;||| 25 for (int i = 1; i <= 34; ++i) {||| 26 now += wei[i] << (i - 1);||| 27 }||| 28 num[x] = now;||| 29 }||| 30 int main() {||| 31 int n, k;||| 32 scanf(""%d%d"", &n, &k);||| 33 long long a12, o12, a13, o13, a23, o23;||| 34 printf(""and 1 2\n"");||| 35 fflush(stdout);||| 36 scanf(""%lld"", &a12);||| 37 printf(""or 1 2\n"");||| 38 fflush(stdout);||| 39 scanf(""%lld"", &o12);||| 40 printf(""and 1 3\n"");||| 41 fflush(stdout);||| 42 scanf(""%lld"", &a13);||| 43 printf(""or 1 3\n"");||| 44 fflush(stdout);||| 45 scanf(""%lld"", &o13);||| 46 printf(""and 2 3\n"");||| 47 fflush(stdout);||| 48 scanf(""%lld"", &a23);||| 49 printf(""or 2 3\n"");||| 50 fflush(stdout);||| 51 scanf(""%lld"", &o23);||| 52 long long a[5][40];||| 53 for (int i = 1; i <= 34; ++i) a[1][i] = a[2][i] = a[3][i] = -1;||| 54 for (int i = 1; i <= 34; ++i) {||| 55 if (a12 & 1ll << (i - 1)) a[1][i] = 1, a[2][i] = 1;||| 56 if (a23 & 1ll << (i - 1)) a[2][i] = 1, a[3][i] = 1;||| 57 if (a13 & 1ll << (i - 1)) a[1][i] = 1, a[3][i] = 1;||| 58 if ((o12 & 1ll << (i - 1)) == 0) a[1][i] = a[2][i] = 0;||| 59 if ((o23 & 1ll << (i - 1)) == 0) a[2][i] = a[3][i] = 0;||| 60 if ((o13 & 1ll << (i - 1)) == 0) a[1][i] = a[3][i] = 0;||| 61 }||| 62 for (int i = 1; i <= 34; ++i) {||| 63 if (a[1][i] == -1) {||| 64 if (a[2][i] == 0)||| 65 a[1][i] = 1;||| 66 else||| 67 a[1][i] = 0;||| 68 } else if (a[2][i] == -1) {||| 69 if (a[1][i] == 0)||| 70 a[2][i] = 1;||| 71 else||| 72 a[2][i] = 0;||| 73 } else if (a[3][i] == -1) {||| 74 if (a[2][i] == 0)||| 75 a[3][i] = 1;||| 76 else||| 77 a[3][i] = 0;||| 78 if (a[1][i] == 0)||| 79 a[3][i] = 1;||| 80 else||| 81 a[3][i] = 0;||| 82 }||| 83 if (a[1][i] == a[2][i] && a[2][i] == a[3][i] && a[3][i] == -1)||| 84 a[1][i] = a[2][i] = a[3][i] = 0;||| 85 }||| 86 for (int i = 1; i <= 34; ++i) {||| 87 for (int j = 1; j <= 3; ++j) num[j] += a[j][i] << (long long)(i - 1);||| 88 }||| 89 for (int i = 4; i <= n; ++i) {||| 90 solve(i);||| 91 }||| 92 sort(num + 1, num + n + 1);||| 93 printf(""finish %lld"", num[k]);||| 94 fflush(stdout);||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long num[500005];||| 4 void solve(int x) {||| 5 long long a, o;||| 6 printf(""and 1 %d\n"", x);||| 7 fflush(stdout);||| 8 scanf(""%lld"", &a);||| 9 printf(""or 1 %d\n"", x);||| 10 fflush(stdout);||| 11 scanf(""%lld"", &o);||| 12 long long wei[40];||| 13 for (int i = 1; i <= 34; ++i) {||| 14 if (a & (1ll << (i - 1)))||| 15 wei[i] = 1;||| 16 else if (o & (1ll << (i - 1))) {||| 17 if (num[1] & (1ll << (i - 1)))||| 18 wei[i] = 0;||| 19 else||| 20 wei[i] = 1;||| 21 } else||| 22 wei[i] = 0;||| 23 }||| 24 long long now = 0;||| 25 for (int i = 1; i <= 34; ++i) {||| 26 now += wei[i] << (i - 1);||| 27 }||| 28 num[x] = now;||| 29 }||| 30 int main() {||| 31 int n, k;||| 32 scanf(""%d%d"", &n, &k);||| 33 long long a12, o12, a13, o13, a23, o23;||| 34 printf(""and 1 2\n"");||| 35 fflush(stdout);||| 36 scanf(""%lld"", &a12);||| 37 printf(""or 1 2\n"");||| 38 fflush(stdout);||| 39 scanf(""%lld"", &o12);||| 40 printf(""and 1 3\n"");||| 41 fflush(stdout);||| 42 scanf(""%lld"", &a13);||| 43 printf(""or 1 3\n"");||| 44 fflush(stdout);||| 45 scanf(""%lld"", &o13);||| 46 printf(""and 2 3\n"");||| 47 fflush(stdout);||| 48 scanf(""%lld"", &a23);||| 49 printf(""or 2 3\n"");||| 50 fflush(stdout);||| 51 scanf(""%lld"", &o23);||| 52 long long a[5][40];||| 53 for (int i = 1; i <= 34; ++i) a[1][i] = a[2][i] = a[3][i] = -1;||| 54 for (int i = 1; i <= 34; ++i) {||| 55 if (a12 & 1ll << (i - 1)) a[1][i] = 1, a[2][i] = 1;||| 56 if (a23 & 1ll << (i - 1)) a[2][i] = 1, a[3][i] = 1;||| 57 if (a13 & 1ll << (i - 1)) a[1][i] = 1, a[3][i] = 1;||| 58 if ((o12 & 1ll << (i - 1)) == 0) a[1][i] = a[2][i] = 0;||| 59 if ((o23 & 1ll << (i - 1)) == 0) a[2][i] = a[3][i] = 0;||| 60 if ((o13 & 1ll << (i - 1)) == 0) a[1][i] = a[3][i] = 0;||| 61 }||| 62 for (int i = 1; i <= 34; ++i) {||| 63 if (a[1][i] == -1) {||| 64 if (a[2][i] == 0)||| 65 a[1][i] = 1;||| 66 else||| 67 a[1][i] = 0;||| 68 } else if (a[2][i] == -1) {||| 69 if (a[1][i] == 0)||| 70 a[2][i] = 1;||| 71 else||| 72 a[2][i] = 1;||| 73 } else if (a[3][i] == -1) {||| 74 if (a[2][i] == 0)||| 75 a[3][i] = 1;||| 76 else||| 77 a[3][i] = 0;||| 78 if (a[1][i] == 0)||| 79 a[3][i] = 1;||| 80 else||| 81 a[3][i] = 1;||| 82 }||| 83 if (a[1][i] == a[2][i] && a[2][i] == a[3][i] && a[3][i] == -1)||| 84 a[1][i] = a[2][i] = a[3][i] = 0;||| 85 }||| 86 for (int i = 1; i <= 34; ++i) {||| 87 for (int j = 1; j <= 3; ++j) num[j] += a[j][i] << (long long)(i - 1);||| 88 }||| 89 for (int i = 4; i <= n; ++i) {||| 90 solve(i);||| 91 }||| 92 sort(num + 1, num + n + 1);||| 93 printf(""finish %lld"", num[k]);||| 94 fflush(stdout);||| 95 }||| "	72 a[2][i] = 0;
47	16	"1 #include <bits/stdc++.h>||| 2 namespace {||| 3 const int L = 30;||| 4 std::vector<int> GetBits(int x) {||| 5 std::vector<int> r(L);||| 6 for (int i = L - 1; i >= 0; --i) {||| 7 r[i] = (x % 2);||| 8 x /= 2;||| 9 }||| 10 return r;||| 11 }||| 12 int GetValue(const std::vector<int>& r) {||| 13 int value = 0;||| 14 for (int bit : r) {||| 15 value = (2 * value) + bit;||| 16 }||| 17 return value;||| 18 }||| 19 std::vector<int> AskAnd(int x, int y) {||| 20 printf(""and %d %d\n"", x, y);||| 21 fflush(stdout);||| 22 int answer;||| 23 scanf(""%d"", &answer);||| 24 return GetBits(answer);||| 25 }||| 26 void ApplyAndResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 27 const std::vector<int>& and_r) {||| 28 std::vector<std::vector<int>>& a = (*a_ptr);||| 29 for (int k = 0; k < L; ++k) {||| 30 if (and_r[k] == 1) {||| 31 a[x][k] = a[y][k] = 1;||| 32 } else {||| 33 if (a[x][k] == 1) {||| 34 a[y][k] = 0;||| 35 } else if (a[y][k] == 1) {||| 36 a[x][k] = 0;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 std::vector<int> AskOr(int x, int y) {||| 42 printf(""or %d %d\n"", x, y);||| 43 fflush(stdout);||| 44 int answer;||| 45 scanf(""%d"", &answer);||| 46 return GetBits(answer);||| 47 }||| 48 void ApplyOrResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 49 const std::vector<int>& or_r) {||| 50 std::vector<std::vector<int>>& a = (*a_ptr);||| 51 for (int k = 0; k < L; ++k) {||| 52 if (or_r[k] == 0) {||| 53 a[x][k] = a[y][k] = 0;||| 54 } else {||| 55 if (a[x][k] == 0) {||| 56 a[y][k] = 1;||| 57 } else if (a[y][k] == 0) {||| 58 a[x][k] = 1;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 }  // namespace||| 64 int main() {||| 65 int n, k;||| 66 scanf(""%d %d"", &n, &k);||| 67 std::vector<std::vector<int>> a(n + 1, std::vector<int>(L, -1));||| 68 std::vector<int> and_1_2 = AskAnd(1, 2);||| 69 std::vector<int> or_1_2 = AskOr(1, 2);||| 70 std::vector<int> and_1_3 = AskAnd(1, 3);||| 71 std::vector<int> or_1_3 = AskOr(1, 3);||| 72 std::vector<int> and_2_3 = AskAnd(2, 3);||| 73 std::vector<int> or_2_3 = AskOr(2, 3);||| 74 ApplyAndResult(&a, 1, 2, and_1_2);||| 75 ApplyOrResult(&a, 1, 2, or_1_2);||| 76 ApplyAndResult(&a, 2, 3, and_2_3);||| 77 ApplyOrResult(&a, 2, 3, or_2_3);||| 78 ApplyAndResult(&a, 1, 3, and_1_3);||| 79 ApplyOrResult(&a, 1, 3, or_1_3);||| 80 ApplyAndResult(&a, 1, 2, and_1_2);||| 81 ApplyOrResult(&a, 1, 2, or_1_2);||| 82 for (int i = 4; i <= n; ++i) {||| 83 std::vector<int> and_r = AskAnd(1, i);||| 84 std::vector<int> or_r = AskOr(1, i);||| 85 ApplyAndResult(&a, 1, i, and_r);||| 86 ApplyOrResult(&a, 1, i, or_r);||| 87 }||| 88 std::vector<int> array;||| 89 for (int i = 1; i <= n; ++i) {||| 90 array.push_back(GetValue(a[i]));||| 91 }||| 92 std::sort(array.begin(), array.end());||| 93 printf(""finish %d\n"", array[k - 1]);||| 94 return 0;||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 namespace {||| 3 const int L = 30;||| 4 std::vector<int> GetBits(int x) {||| 5 std::vector<int> r(L);||| 6 for (int i = L - 1; i >= 0; --i) {||| 7 r[i] = (x % 2);||| 8 x /= 2;||| 9 }||| 10 return r;||| 11 }||| 12 int GetValue(const std::vector<int>& r) {||| 13 int value = 0;||| 14 for (int bit : r) {||| 15 value = (2 * value) + bit;||| 16 }||| 17 return value;||| 18 }||| 19 std::vector<int> AskAnd(int x, int y) {||| 20 printf(""and %d %d\n"", x, y);||| 21 fflush(stdout);||| 22 int answer;||| 23 scanf(""%d"", &answer);||| 24 return GetBits(answer);||| 25 }||| 26 void ApplyAndResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 27 const std::vector<int>& and_r) {||| 28 std::vector<std::vector<int>>& a = (*a_ptr);||| 29 for (int k = 0; k < L; ++k) {||| 30 if (and_r[k] == 1) {||| 31 a[x][k] = a[y][k] = 1;||| 32 } else {||| 33 if (a[x][k] == 1) {||| 34 a[y][k] = 0;||| 35 } else if (a[y][k] == 1) {||| 36 a[x][k] = 0;||| 37 }||| 38 }||| 39 }||| 40 }||| 41 std::vector<int> AskOr(int x, int y) {||| 42 printf(""or %d %d\n"", x, y);||| 43 fflush(stdout);||| 44 int answer;||| 45 scanf(""%d"", &answer);||| 46 return GetBits(answer);||| 47 }||| 48 void ApplyOrResult(std::vector<std::vector<int>>* a_ptr, int x, int y,||| 49 const std::vector<int>& or_r) {||| 50 std::vector<std::vector<int>>& a = (*a_ptr);||| 51 for (int k = 0; k < L; ++k) {||| 52 if (or_r[k] == 0) {||| 53 a[x][k] = a[y][k] = 0;||| 54 } else {||| 55 if (a[x][k] == 0) {||| 56 a[y][k] = 1;||| 57 } else if (a[y][k] == 0) {||| 58 a[x][k] = 1;||| 59 }||| 60 }||| 61 }||| 62 }||| 63 }  // namespace||| 64 int main() {||| 65 int n, k;||| 66 scanf(""%d %d"", &n, &k);||| 67 std::vector<std::vector<int>> a(n + 1, std::vector<int>(L, -1));||| 68 std::vector<int> and_1_2 = AskAnd(1, 2);||| 69 std::vector<int> or_1_2 = AskOr(1, 2);||| 70 std::vector<int> and_1_3 = AskAnd(1, 3);||| 71 std::vector<int> or_1_3 = AskOr(1, 3);||| 72 std::vector<int> and_2_3 = AskAnd(2, 3);||| 73 std::vector<int> or_2_3 = AskOr(2, 3);||| 74 ApplyAndResult(&a, 1, 2, and_1_2);||| 75 ApplyOrResult(&a, 1, 2, or_1_2);||| 76 ApplyAndResult(&a, 2, 3, and_2_3);||| 77 ApplyOrResult(&a, 2, 3, or_2_3);||| 78 ApplyAndResult(&a, 1, 3, and_1_3);||| 79 ApplyOrResult(&a, 1, 3, or_1_3);||| 80 ApplyAndResult(&a, 1, 2, and_1_2);||| 81 ApplyOrResult(&a, 1, 2, or_1_2);||| 82 for (int i = 4; i <= n; ++i) {||| 83 std::vector<int> and_r = AskAnd(1, i);||| 84 std::vector<int> or_r = AskOr(1, i);||| 85 ApplyAndResult(&a, 1, i, and_r);||| 86 ApplyOrResult(&a, 1, i, or_r);||| 87 }||| 88 std::vector<int> array;||| 89 for (int i = 1; i <= n; ++i) {||| 90 array.push_back(GetValue(a[i]));||| 91 }||| 92 std::sort(array.begin(), array.end());||| 93 printf(""%d\n"", array[k - 1]);||| 94 return 0;||| 95 }||| "	"93 printf(""finish %d\n"", array[k - 1]);"
47	100	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ior(long long i, long long j) {||| 4 cout << ""or "" << i << "" "" << j << ""\n"";||| 5 cout.flush();||| 6 long long ret;||| 7 cin >> ret;||| 8 return ret;||| 9 }||| 10 long long iand(long long i, long long j) {||| 11 cout << ""and "" << i << "" "" << j << ""\n"";||| 12 cout.flush();||| 13 long long ret;||| 14 cin >> ret;||| 15 return ret;||| 16 }||| 17 void ifinish(long long n) {||| 18 cout << ""finish "" << n << ""\n"";||| 19 cout.flush();||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 long long a, b, c, d, e, f, i, j, k, m, n, o, x, y, z;||| 25 cin >> n >> k;||| 26 x = ior(1, 2) + iand(1, 2);||| 27 y = ior(2, 3) + iand(2, 3);||| 28 z = ior(3, 1) + iand(3, 1);||| 29 a = (z + x - y) / 2;||| 30 b = x - a;||| 31 c = z - a;||| 32 vector<long long> v;||| 33 v.push_back(a);||| 34 v.push_back(b);||| 35 v.push_back(c);||| 36 for (i = 4; i <= n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i));||| 37 sort(v.begin(), v.end());||| 38 ifinish(v[k - 1]);||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long ior(long long i, long long j) {||| 4 cout << ""or "" << i << "" "" << j << ""\n"";||| 5 cout.flush();||| 6 long long ret;||| 7 cin >> ret;||| 8 return ret;||| 9 }||| 10 long long iand(long long i, long long j) {||| 11 cout << ""and "" << i << "" "" << j << ""\n"";||| 12 cout.flush();||| 13 long long ret;||| 14 cin >> ret;||| 15 return ret;||| 16 }||| 17 void ifinish(long long n) {||| 18 cout << ""finish "" << n << ""\n"";||| 19 cout.flush();||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 long long a, b, c, d, e, f, i, j, k, m, n, o, x, y, z;||| 25 cin >> n >> k;||| 26 x = ior(1, 2) + iand(1, 2);||| 27 y = ior(2, 3) + iand(2, 3);||| 28 z = ior(3, 1) + iand(3, 1);||| 29 a = (z + x - y) / 2;||| 30 b = x - a;||| 31 c = z - a;||| 32 vector<long long> v;||| 33 v.push_back(a);||| 34 v.push_back(b);||| 35 v.push_back(c);||| 36 for (i = 3; i < n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i));||| 37 sort(v.begin(), v.end());||| 38 ifinish(v[k - 1]);||| 39 }||| "	36 for (i = 4; i <= n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i));
47	127	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int n, k, num, count = 0, i, j;||| 8 cin >> n >> k;||| 9 bitset<32> b[6];||| 10 for (i = 1; i < 3; i++) {||| 11 for (j = i + 1; j <= 3; j++) {||| 12 cout << ""or "" << i << "" "" << j << endl;||| 13 cin >> num;||| 14 b[count] = num;||| 15 count++;||| 16 cout << ""and "" << i << "" "" << j << endl;||| 17 cin >> num;||| 18 b[count] = num;||| 19 count++;||| 20 }||| 21 }||| 22 bitset<32> b1, b2;||| 23 for (i = 0; i < 32; i++) {||| 24 if (b[0][i] == b[1][i]) {||| 25 b1[i] = b[0][i];||| 26 b2[i] = b[0][i];||| 27 } else {||| 28 if (b[2][i] != b[4][i]) {||| 29 b1[i] = b[2][i];||| 30 b2[i] = b[4][i];||| 31 } else {||| 32 b1[i] = b[3][i];||| 33 b2[i] = b[5][i];||| 34 }||| 35 }||| 36 }||| 37 bitset<32> r, ans;||| 38 r = b1;||| 39 vector<int> vec;||| 40 vec.push_back(b1.to_ulong());||| 41 vec.push_back(b2.to_ulong());||| 42 b1 = b[2];||| 43 b2 = b[3];||| 44 for (i = 3; i <= n; i++) {||| 45 if (i > 3) {||| 46 cout << ""or "" << 1 << "" "" << i << endl;||| 47 cin >> num;||| 48 b1 = num;||| 49 cout << ""and "" << 1 << "" "" << i << endl;||| 50 cin >> num;||| 51 b2 = num;||| 52 }||| 53 for (j = 0; j < 32; j++) {||| 54 if (r[j] == 0 && b1[j] == 0)||| 55 ans[j] = 0;||| 56 else if (r[j] == 0 && b1[j] == 1)||| 57 ans[j] = 1;||| 58 }||| 59 for (j = 0; j < 32; j++) {||| 60 if (r[j] == 1 && b2[j] == 0)||| 61 ans[j] = 0;||| 62 else if (r[j] == 1 && b2[j] == 1)||| 63 ans[j] = 1;||| 64 }||| 65 vec.push_back(ans.to_ulong());||| 66 }||| 67 sort(vec.begin(), vec.end());||| 68 cout << ""finish "" << vec[k - 1] << endl;||| 69 return 0;||| 70 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int n, k, num, count = 0, i, j;||| 8 cin >> n >> k;||| 9 bitset<32> b[6];||| 10 for (i = 1; i < 3; i++) {||| 11 for (j = i + 1; j <= 3; j++) {||| 12 cout << ""or "" << i << "" "" << j << endl;||| 13 cin >> num;||| 14 b[count] = num;||| 15 count++;||| 16 cout << ""and "" << i << "" "" << j << endl;||| 17 cin >> num;||| 18 b[count] = num;||| 19 count++;||| 20 }||| 21 }||| 22 bitset<32> b1, b2;||| 23 for (i = 0; i < 32; i++) {||| 24 if (b[0][i] == b[1][i]) {||| 25 b1[i] = b[0][i];||| 26 b2[i] = b[0][i];||| 27 } else {||| 28 if (b[2][i] != b[4][i]) {||| 29 b1[i] = b[2][i];||| 30 b2[i] = b[4][i];||| 31 } else {||| 32 b1[i] = b[3][i];||| 33 b2[i] = b[5][i];||| 34 }||| 35 }||| 36 }||| 37 bitset<32> r, ans;||| 38 r = b1;||| 39 vector<int> vec;||| 40 vec.push_back(b1.to_ulong());||| 41 vec.push_back(b2.to_ulong());||| 42 b1 = b[2];||| 43 b2 = b[3];||| 44 for (i = 3; i <= n; i++) {||| 45 if (i > 3) {||| 46 cout << ""or "" << 1 << "" "" << j << endl;||| 47 cin >> num;||| 48 b1 = num;||| 49 cout << ""and "" << 1 << "" "" << j << endl;||| 50 cin >> num;||| 51 b2 = num;||| 52 }||| 53 for (j = 0; j < 32; j++) {||| 54 if (r[j] == 0 && b1[j] == 0)||| 55 ans[j] = 0;||| 56 else if (r[j] == 0 && b1[j] == 1)||| 57 ans[j] = 1;||| 58 }||| 59 for (j = 0; j < 32; j++) {||| 60 if (r[j] == 1 && b2[j] == 0)||| 61 ans[j] = 0;||| 62 else if (r[j] == 1 && b2[j] == 1)||| 63 ans[j] = 1;||| 64 }||| 65 vec.push_back(ans.to_ulong());||| 66 }||| 67 sort(vec.begin(), vec.end());||| 68 cout << ""finish "" << vec[k - 1] << endl;||| 69 return 0;||| 70 }||| "	"46 cout << ""or "" << 1 << "" "" << i << endl;"
47	263	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double EPS = 1e-10;||| 4 using ll = long long;||| 5 using Pi = pair<int, int>;||| 6 using Pl = pair<ll, ll>;||| 7 int dh[] = {-1, 1, 0, 0};||| 8 int dw[] = {0, 0, 1, -1};||| 9 int main() {||| 10 int n, k;||| 11 cin >> n >> k;||| 12 vector<int> c(n - 1), d(n - 1);||| 13 for (int i = (int)(2); i < (int)(n + 1); i++) {||| 14 cout << ""and "" << 1 << "" "" << i << endl;||| 15 int x;||| 16 cin >> x;||| 17 c[i - 2] = x;||| 18 cout << ""or "" << 1 << "" "" << i << endl;||| 19 int y;||| 20 cin >> y;||| 21 d[i - 2] = y;||| 22 }||| 23 vector<int> a0(31, -1);||| 24 for (int i = (int)(0); i < (int)(31); i++) {||| 25 for (int j = (int)(0); j < (int)(n - 1); j++) {||| 26 if ((c[j] >> i & 1) && (d[j] >> i & 1)) a0[i] = 1;||| 27 if (!(c[j] >> i & 1) && !(d[j] >> i & 1)) a0[i] = 0;||| 28 }||| 29 }||| 30 cout << ""and "" << 2 << "" "" << 3 << endl;||| 31 int xx;||| 32 cin >> xx;||| 33 cout << ""or "" << 2 << "" "" << 3 << endl;||| 34 int yy;||| 35 cin >> yy;||| 36 for (int i = (int)(0); i < (int)(31); i++) {||| 37 if (a0[i] != -1) continue;||| 38 if ((xx >> i & 1) && (yy >> i & 1)) a0[i] = 0;||| 39 if (!(xx >> i & 1) && !(yy >> i & 1)) a0[i] = 1;||| 40 }||| 41 vector<int> a(n);||| 42 ll now = 1;||| 43 for (int i = (int)(0); i < (int)(31); i++) {||| 44 a[0] += a0[i] * now;||| 45 now *= 2;||| 46 }||| 47 for (int i = (int)(0); i < (int)(n - 1); i++) {||| 48 ll now2 = 1;||| 49 for (int j = (int)(0); j < (int)(31); j++) {||| 50 if (a[0] >> j & 1) {||| 51 if (c[i] >> j & 1) a[i + 1] += now2;||| 52 } else {||| 53 if (d[i] >> j & 1) a[i + 1] += now2;||| 54 }||| 55 now2 *= 2;||| 56 }||| 57 }||| 58 sort(a.begin(), a.end());||| 59 cout << ""finish "" << a[k - 1] << endl;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double EPS = 1e-10;||| 4 using ll = long long;||| 5 using Pi = pair<int, int>;||| 6 using Pl = pair<ll, ll>;||| 7 int dh[] = {-1, 1, 0, 0};||| 8 int dw[] = {0, 0, 1, -1};||| 9 int main() {||| 10 int n, k;||| 11 cin >> n >> k;||| 12 vector<int> c(n - 1), d(n - 1);||| 13 for (int i = (int)(2); i < (int)(n); i++) {||| 14 cout << ""and "" << 1 << "" "" << i << endl;||| 15 int x;||| 16 cin >> x;||| 17 c[i - 2] = x;||| 18 cout << ""or "" << 1 << "" "" << i << endl;||| 19 int y;||| 20 cin >> y;||| 21 d[i - 2] = y;||| 22 }||| 23 vector<int> a0(31, -1);||| 24 for (int i = (int)(0); i < (int)(31); i++) {||| 25 for (int j = (int)(0); j < (int)(n - 1); j++) {||| 26 if ((c[j] >> i & 1) && (d[j] >> i & 1)) a0[i] = 1;||| 27 if (!(c[j] >> i & 1) && !(d[j] >> i & 1)) a0[i] = 0;||| 28 }||| 29 }||| 30 cout << ""and "" << 2 << "" "" << 3 << endl;||| 31 int xx;||| 32 cin >> xx;||| 33 cout << ""or "" << 2 << "" "" << 3 << endl;||| 34 int yy;||| 35 cin >> yy;||| 36 for (int i = (int)(0); i < (int)(31); i++) {||| 37 if (a0[i] != -1) continue;||| 38 if ((xx >> i & 1) && (yy >> i & 1)) a0[i] = 0;||| 39 if (!(xx >> i & 1) && !(yy >> i & 1)) a0[i] = 1;||| 40 }||| 41 vector<int> a(n);||| 42 ll now = 1;||| 43 for (int i = (int)(0); i < (int)(31); i++) {||| 44 a[0] += a0[i] * now;||| 45 now *= 2;||| 46 }||| 47 for (int i = (int)(0); i < (int)(n - 1); i++) {||| 48 ll now2 = 1;||| 49 for (int j = (int)(0); j < (int)(31); j++) {||| 50 if (a[0] >> j & 1) {||| 51 if (c[i] >> j & 1) a[i + 1] += now2;||| 52 } else {||| 53 if (d[i] >> j & 1) a[i + 1] += now2;||| 54 }||| 55 now2 *= 2;||| 56 }||| 57 }||| 58 sort(a.begin(), a.end());||| 59 cout << ""finish "" << a[k - 1] << endl;||| 60 }||| "	13 for (int i = (int)(2); i < (int)(n + 1); i++) {
47	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v;||| 7 long long x, y;||| 8 cout << ""and "" << 1 << "" "" << 2 << ""\n"";||| 9 cout.flush();||| 10 cin >> x;||| 11 cout << ""or "" << 1 << "" "" << 2 << ""\n"";||| 12 cout.flush();||| 13 cin >> y;||| 14 long long r1 = x + y;||| 15 cout << ""and "" << 1 << "" "" << 3 << ""\n"";||| 16 cout.flush();||| 17 cin >> x;||| 18 cout << ""or "" << 1 << "" "" << 3 << ""\n"";||| 19 cout.flush();||| 20 cin >> y;||| 21 long long r2 = x + y;||| 22 cout << ""and "" << 2 << "" "" << 3 << ""\n"";||| 23 cout.flush();||| 24 cin >> x;||| 25 cout << ""or "" << 2 << "" "" << 3 << ""\n"";||| 26 cout.flush();||| 27 cin >> y;||| 28 long long r3 = x + y;||| 29 long long a = (r1 + r2 - r3) / 2;||| 30 long long b = r1 - a;||| 31 long long c = r2 - a;||| 32 v.push_back(a);||| 33 v.push_back(b);||| 34 v.push_back(c);||| 35 for (int i = 4; i <= n; i++) {||| 36 cout << ""and "" << 1 << "" "" << i << ""\n"";||| 37 cout.flush();||| 38 cin >> x;||| 39 cout << ""or "" << 1 << "" "" << i << ""\n"";||| 40 cout.flush();||| 41 cin >> y;||| 42 long long z = x + y;||| 43 v.push_back(z - a);||| 44 }||| 45 sort(v.begin(), v.end());||| 46 cout << ""finish "" << v[k - 1] << ""\n"";||| 47 cout.flush();||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 cout.tie(0);||| 53 int t = 1;||| 54 while (t--) solve();||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n, k;||| 5 cin >> n >> k;||| 6 vector<long long> v;||| 7 long long x, y;||| 8 cout << ""and "" << 1 << "" "" << 2 << ""\n"";||| 9 cout.flush();||| 10 cin >> x;||| 11 cout << ""or "" << 1 << "" "" << 2 << ""\n"";||| 12 cout.flush();||| 13 cin >> y;||| 14 long long r1 = x + y;||| 15 cout << ""and "" << 1 << "" "" << 3 << ""\n"";||| 16 cout.flush();||| 17 cin >> x;||| 18 cout << ""or "" << 1 << "" "" << 3 << ""\n"";||| 19 cout.flush();||| 20 cin >> y;||| 21 long long r2 = x + y;||| 22 cout << ""and "" << 2 << "" "" << 3 << ""\n"";||| 23 cout.flush();||| 24 cin >> x;||| 25 cout << ""or "" << 2 << "" "" << 3 << ""\n"";||| 26 cout.flush();||| 27 cin >> y;||| 28 long long r3 = x + y;||| 29 long long a = (r1 + r2 + r3) / 2;||| 30 long long b = r1 - a;||| 31 long long c = r2 - a;||| 32 v.push_back(a);||| 33 v.push_back(b);||| 34 v.push_back(c);||| 35 for (int i = 4; i <= n; i++) {||| 36 cout << ""and "" << 1 << "" "" << i << ""\n"";||| 37 cout.flush();||| 38 cin >> x;||| 39 cout << ""or "" << 1 << "" "" << i << ""\n"";||| 40 cout.flush();||| 41 cin >> y;||| 42 long long z = x + y;||| 43 v.push_back(z - a);||| 44 }||| 45 sort(v.begin(), v.end());||| 46 cout << ""finish "" << v[k - 1] << ""\n"";||| 47 cout.flush();||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 cout.tie(0);||| 53 int t = 1;||| 54 while (t--) solve();||| 55 }||| "	29 long long a = (r1 + r2 - r3) / 2;
48	146	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 long long a[100100], mn[400100], mx[400100];||| 5 void build(int x, int l, int r) {||| 6 if (l == r) {||| 7 mn[x] = mx[x] = a[l];||| 8 return;||| 9 }||| 10 build(x << 1, l, ((l + r) >> 1)), build(x << 1 | 1, ((l + r) >> 1) + 1, r);||| 11 mn[x] = min(mn[x << 1], mn[x << 1 | 1]);||| 12 mx[x] = max(mx[x << 1], mx[x << 1 | 1]);||| 13 }||| 14 long long qmn(int x, int l, int r, int L, int R) {||| 15 if (l > R || r < L) return 0x3f3f3f3f3f3f3f3f;||| 16 if (L <= l && r <= R) return mn[x];||| 17 return min(qmn(x << 1, l, ((l + r) >> 1), L, R),||| 18 qmn(x << 1 | 1, ((l + r) >> 1) + 1, r, L, R));||| 19 }||| 20 long long qmx(int x, int l, int r, int L, int R) {||| 21 if (l > R || r < L) return -0x3f3f3f3f3f3f3f3f;||| 22 if (L <= l && r <= R) return mx[x];||| 23 return max(qmx(x << 1, l, ((l + r) >> 1), L, R),||| 24 qmx(x << 1 | 1, ((l + r) >> 1) + 1, r, L, R));||| 25 }||| 26 int main() {||| 27 scanf(""%d%d"", &n, &m);||| 28 for (int i = 1, x; i <= n; i++) scanf(""%d"", &x), a[i] += x;||| 29 for (int i = 1, x; i <= n; i++) scanf(""%d"", &x), a[i] -= x;||| 30 for (int i = 1; i <= n; i++) a[i] += a[i - 1];||| 31 build(1, 1, n);||| 32 for (int i = 1, l, r; i <= m; i++) {||| 33 scanf(""%d%d"", &l, &r);||| 34 if (a[l - 1] != a[r]) {||| 35 puts(""-1"");||| 36 continue;||| 37 }||| 38 if (qmx(1, 1, n, l, r) > a[l - 1]) {||| 39 puts(""-1"");||| 40 continue;||| 41 }||| 42 printf(""%lld\n"", a[l - 1] - qmn(1, 1, n, l, r));||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 long long a[100100], mn[400100], mx[400100];||| 5 void build(int x, int l, int r) {||| 6 if (l == r) {||| 7 mn[x] = mx[x] = a[l];||| 8 return;||| 9 }||| 10 build(x << 1, l, ((l + r) >> 1)), build(x << 1 | 1, ((l + r) >> 1) + 1, r);||| 11 mn[x] = min(mn[x << 1], mx[x << 1 | 1]);||| 12 mx[x] = max(mx[x << 1], mx[x << 1 | 1]);||| 13 }||| 14 long long qmn(int x, int l, int r, int L, int R) {||| 15 if (l > R || r < L) return 0x3f3f3f3f3f3f3f3f;||| 16 if (L <= l && r <= R) return mn[x];||| 17 return min(qmn(x << 1, l, ((l + r) >> 1), L, R),||| 18 qmn(x << 1 | 1, ((l + r) >> 1) + 1, r, L, R));||| 19 }||| 20 long long qmx(int x, int l, int r, int L, int R) {||| 21 if (l > R || r < L) return -0x3f3f3f3f3f3f3f3f;||| 22 if (L <= l && r <= R) return mx[x];||| 23 return max(qmx(x << 1, l, ((l + r) >> 1), L, R),||| 24 qmx(x << 1 | 1, ((l + r) >> 1) + 1, r, L, R));||| 25 }||| 26 int main() {||| 27 scanf(""%d%d"", &n, &m);||| 28 for (int i = 1, x; i <= n; i++) scanf(""%d"", &x), a[i] += x;||| 29 for (int i = 1, x; i <= n; i++) scanf(""%d"", &x), a[i] -= x;||| 30 for (int i = 1; i <= n; i++) a[i] += a[i - 1];||| 31 build(1, 1, n);||| 32 for (int i = 1, l, r; i <= m; i++) {||| 33 scanf(""%d%d"", &l, &r);||| 34 if (a[l - 1] != a[r]) {||| 35 puts(""-1"");||| 36 continue;||| 37 }||| 38 if (qmx(1, 1, n, l, r) > a[l - 1]) {||| 39 puts(""-1"");||| 40 continue;||| 41 }||| 42 printf(""%lld\n"", a[l - 1] - qmn(1, 1, n, l, r));||| 43 }||| 44 return 0;||| 45 }||| "	11 mn[x] = min(mn[x << 1], mn[x << 1 | 1]);
48	63	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 int n, q;||| 5 long long a[N], b[N], c[N];||| 6 long long dpa[N][50], dpi[N][50];||| 7 void rmq_init() {||| 8 for (int i = 1; i <= n; i++) {||| 9 dpi[i][0] = c[i];||| 10 dpa[i][0] = c[i];||| 11 }||| 12 for (int j = 1; (1 << j) <= n; j++)||| 13 for (int i = 1; i + (1 << j) - 1 <= n; i++) {||| 14 dpi[i][j] = min(dpi[i][j - 1], dpi[i + (1 << j - 1)][j - 1]);||| 15 dpa[i][j] = max(dpa[i][j - 1], dpa[i + (1 << j - 1)][j - 1]);||| 16 }||| 17 }||| 18 long long rmq_min(int l, int r) {||| 19 int k = 0;||| 20 while ((1 << (k + 1)) <= r - l + 1) k++;||| 21 return min(dpi[l][k], dpi[r - (1 << k) + 1][k]);||| 22 }||| 23 long long rmq_max(int l, int r) {||| 24 int k = 0;||| 25 while ((1 << (k + 1)) <= r - l + 1) k++;||| 26 return max(dpa[l][k], dpa[r - (1 << k) + 1][k]);||| 27 }||| 28 void add(int pos, int x) {||| 29 for (; pos <= n; pos += (pos & -pos)) {||| 30 c[pos] += x;||| 31 }||| 32 }||| 33 long long get(int pos) {||| 34 long long ans = 0;||| 35 while (pos > 0) {||| 36 ans += c[pos];||| 37 pos -= (pos & -pos);||| 38 }||| 39 return ans;||| 40 }||| 41 int main() {||| 42 scanf(""%d%d"", &n, &q);||| 43 for (int i = 1; i <= n; i++) {||| 44 scanf(""%lld"", a + i);||| 45 }||| 46 for (int i = 1; i <= n; i++) {||| 47 scanf(""%lld"", b + i);||| 48 c[i] = c[i - 1] + a[i] - b[i];||| 49 }||| 50 rmq_init();||| 51 int l, r;||| 52 for (int i = 1; i <= q; i++) {||| 53 scanf(""%d%d"", &l, &r);||| 54 long long tmp = c[l - 1];||| 55 if (c[r] != tmp || rmq_max(l, r) > tmp) {||| 56 printf(""-1\n"");||| 57 } else {||| 58 printf(""%lld\n"", tmp - rmq_min(l, r));||| 59 }||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 5;||| 4 int n, q;||| 5 long long a[N], b[N], c[N];||| 6 long long dpa[N][50], dpi[N][50];||| 7 void rmq_init() {||| 8 for (int i = 1; i <= n; i++) {||| 9 dpi[i][0] = c[i];||| 10 dpa[i][0] = c[i];||| 11 }||| 12 for (int j = 1; (1 << j) <= n; j++)||| 13 for (int i = 1; i + (1 << j) - 1 <= n; i++) {||| 14 dpi[i][j] = min(dpi[i][j - 1], dpi[i + (1 << j - 1)][j - 1]);||| 15 dpa[i][j] = max(dpa[i][j - 1], dpa[i + (1 << j - 1)][j - 1]);||| 16 }||| 17 }||| 18 long long rmq_min(int l, int r) {||| 19 int k = 0;||| 20 while ((1 << (k + 1)) <= r - l + 1) k++;||| 21 return min(dpi[l][k], dpi[r - (1 << k) + 1][k]);||| 22 }||| 23 long long rmq_max(int l, int r) {||| 24 int k = 0;||| 25 while ((1 << (k + 1)) <= r - l + 1) k++;||| 26 return max(dpa[l][k], dpa[r - (1 << k) + 1][k]);||| 27 }||| 28 void add(int pos, int x) {||| 29 for (; pos <= n; pos += (pos & -pos)) {||| 30 c[pos] += x;||| 31 }||| 32 }||| 33 long long get(int pos) {||| 34 long long ans = 0;||| 35 while (pos > 0) {||| 36 ans += c[pos];||| 37 pos -= (pos & -pos);||| 38 }||| 39 return ans;||| 40 }||| 41 int main() {||| 42 scanf(""%d%d"", &n, &q);||| 43 for (int i = 1; i <= n; i++) {||| 44 scanf(""%lld"", a + i);||| 45 }||| 46 for (int i = 1; i <= n; i++) {||| 47 scanf(""%lld"", b + i);||| 48 c[i] = c[i - 1] + a[i] - b[i];||| 49 }||| 50 rmq_init();||| 51 int l, r;||| 52 for (int i = 1; i <= q; i++) {||| 53 scanf(""%d%d"", &l, &r);||| 54 long long tmp = c[l - 1];||| 55 if (c[r] != tmp && rmq_max(l, r) > tmp) {||| 56 printf(""-1\n"");||| 57 } else {||| 58 printf(""%lld\n"", tmp - rmq_min(l, r));||| 59 }||| 60 }||| 61 }||| "	55 if (c[r] != tmp || rmq_max(l, r) > tmp) {
48	64	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct DST {||| 5 function<T(T, T)> calcfn;||| 6 int n;||| 7 vector<vector<T> > dat;||| 8 DST(||| 9 const vector<T>& v = {},||| 10 function<T(T, T)> calcfn_ = [](T a, T b) { return a < b ? a : b; })||| 11 : calcfn(calcfn_) {||| 12 n = v.size();||| 13 dat.push_back(v);||| 14 for (int i = 2; i < n; i <<= 1) {||| 15 dat.push_back(vector<T>(n));||| 16 for (int j = i; j < n; j += i << 1) {||| 17 dat.back()[j - 1] = dat[0][j - 1];||| 18 for (int k = 2; k <= i; k++) {||| 19 dat.back()[j - k] = calcfn(dat[0][j - k], dat.back()[j - k + 1]);||| 20 }||| 21 dat.back()[j] = dat[0][j];||| 22 for (int k = 2; k <= i && j + k <= n; k++) {||| 23 dat.back()[j + k - 1] =||| 24 calcfn(dat.back()[j + k - 2], dat[0][j + k - 1]);||| 25 }||| 26 }||| 27 }||| 28 }||| 29 T query(int l, int r) const {||| 30 if (l < 0) l = 0;||| 31 if (r > n) r = n;||| 32 r--;||| 33 if (l == r) return dat[0][l];||| 34 int k = 31 - __builtin_clz(l ^ r);||| 35 return calcfn(dat[k][l], dat[k][r]);||| 36 }||| 37 };||| 38 int N, Q;||| 39 int A[1 << 17], B[1 << 17];||| 40 long long S[1 << 17];||| 41 int main() {||| 42 scanf(""%d%d"", &N, &Q);||| 43 for (int i = 0; i < N; i++) scanf(""%d"", &A[i]);||| 44 for (int i = 0; i < N; i++) scanf(""%d"", &B[i]);||| 45 for (int i = 0; i < N; i++) {||| 46 S[i + 1] = S[i] + B[i] - A[i];||| 47 }||| 48 DST<long long> MAX(vector<long long>(S, S + N + 1),||| 49 [](long long a, long long b) { return a < b ? b : a; });||| 50 DST<long long> MIN(vector<long long>(S, S + N + 1),||| 51 [](long long a, long long b) { return a > b ? b : a; });||| 52 for (; Q--;) {||| 53 int l, r;||| 54 scanf(""%d%d"", &l, &r);||| 55 l--;||| 56 if (S[l] != S[r])||| 57 puts(""-1"");||| 58 else if (MIN.query(l, r + 1) < S[l])||| 59 puts(""-1"");||| 60 else||| 61 printf(""%lld\n"", MAX.query(l, r + 1) - S[l]);||| 62 }||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 struct DST {||| 5 function<T(T, T)> calcfn;||| 6 int n;||| 7 vector<vector<T> > dat;||| 8 DST(||| 9 const vector<T>& v = {},||| 10 function<T(T, T)> calcfn_ = [](T a, T b) { return a < b ? a : b; })||| 11 : calcfn(calcfn_) {||| 12 n = v.size();||| 13 dat.push_back(v);||| 14 for (int i = 2; i < n; i <<= 1) {||| 15 dat.push_back(vector<T>(n));||| 16 for (int j = i; j < n; j += i << 1) {||| 17 dat.back()[j - 1] = dat[0][j - 1];||| 18 for (int k = 2; k <= i; k++) {||| 19 dat.back()[j - k] = calcfn(dat[0][j - k], dat.back()[j - k + 1]);||| 20 }||| 21 dat.back()[j] = dat[0][j];||| 22 for (int k = 2; k <= i && j + k <= n; k++) {||| 23 dat.back()[j + k - 1] =||| 24 calcfn(dat.back()[j + k - 2], dat[0][j + k - 1]);||| 25 }||| 26 }||| 27 }||| 28 }||| 29 T query(int l, int r) const {||| 30 if (l < 0) l = 0;||| 31 if (r > n) r = n;||| 32 r--;||| 33 if (l == r) return dat[0][l];||| 34 int k = 31 - __builtin_clz(l ^ r);||| 35 return calcfn(dat[k][l], dat[k][r]);||| 36 }||| 37 };||| 38 int N, Q;||| 39 int A[1 << 17], B[1 << 17];||| 40 long long S[1 << 17];||| 41 int main() {||| 42 scanf(""%d%d"", &N, &Q);||| 43 for (int i = 0; i < N; i++) scanf(""%d"", &A[i]);||| 44 for (int i = 0; i < N; i++) scanf(""%d"", &B[i]);||| 45 for (int i = 0; i < N; i++) {||| 46 S[i + 1] = S[i] + B[i] - A[i];||| 47 }||| 48 DST<long long> MAX(vector<long long>(S, S + N + 1),||| 49 [](long long a, long long b) { return a < b ? b : a; });||| 50 DST<long long> MIN(vector<long long>(S, S + N + 1),||| 51 [](long long a, long long b) { return a > b ? b : a; });||| 52 for (; Q--;) {||| 53 int l, r;||| 54 scanf(""%d%d"", &l, &r);||| 55 l--;||| 56 if (S[l] != S[r])||| 57 puts(""-1"");||| 58 else if (MIN.query(l, r + 1) < S[l])||| 59 puts(""-1"");||| 60 else||| 61 printf(""%d\n"", MAX.query(l, r + 1) - S[l]);||| 62 }||| 63 }||| "	"61 printf(""%lld\n"", MAX.query(l, r + 1) - S[l]);"
48	41	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e6 + 5;||| 4 const long long inf = 1e17 + 5;||| 5 struct SegmentTree {||| 6 int l, r;||| 7 long long minPref, maxPref, maxDiff;||| 8 SegmentTree *L, *R;||| 9 SegmentTree() : L(nullptr), R(nullptr), minPref(inf), maxPref(0) {}||| 10 SegmentTree(int l, int r) : SegmentTree() {||| 11 this->l = l;||| 12 this->r = r;||| 13 }||| 14 void recalc() {||| 15 minPref = min(L->minPref, R->minPref);||| 16 maxPref = max(L->maxPref, R->maxPref);||| 17 maxDiff = max(L->maxDiff, R->maxDiff);||| 18 }||| 19 void build(long long *pref, long long *a, long long *b) {||| 20 if (l == r) {||| 21 minPref = maxPref = pref[l];||| 22 maxDiff = llabs(a[l] - b[l]);||| 23 return;||| 24 }||| 25 L = new SegmentTree(l, (l + r) / 2);||| 26 R = new SegmentTree((l + r) / 2 + 1, r);||| 27 L->build(pref, a, b);||| 28 R->build(pref, a, b);||| 29 recalc();||| 30 }||| 31 long long queryMinPref(int ql, int qr) {||| 32 if (l >= ql && r <= qr) return minPref;||| 33 if (r < ql || l > qr) return inf;||| 34 return min(L->queryMinPref(ql, qr), R->queryMinPref(ql, qr));||| 35 }||| 36 long long queryMaxPref(int ql, int qr) {||| 37 if (l >= ql && r <= qr) return maxPref;||| 38 if (r < ql || l > qr) return -inf;||| 39 return max(L->queryMaxPref(ql, qr), R->queryMaxPref(ql, qr));||| 40 }||| 41 long long queryMaxDiff(int ql, int qr) {||| 42 if (l >= ql && r <= qr) return maxDiff;||| 43 if (r < ql || l > qr) return 0;||| 44 return max(L->queryMaxDiff(ql, qr), R->queryMaxDiff(ql, qr));||| 45 }||| 46 };||| 47 int n;||| 48 long long a[MAXN], b[MAXN];||| 49 long long pref[MAXN];||| 50 SegmentTree *T = nullptr;||| 51 void init() {||| 52 long long sum = 0;||| 53 for (int i = 0; i < n; i++) {||| 54 sum += b[i] - a[i];||| 55 pref[i] = sum;||| 56 }||| 57 T = new SegmentTree(0, n - 1);||| 58 T->build(pref, a, b);||| 59 }||| 60 long long getMinPref(int l, int r) { return T->queryMinPref(l, r); }||| 61 long long getMaxPref(int l, int r) { return T->queryMaxPref(l, r); }||| 62 void doQuery() {||| 63 int l, r;||| 64 cin >> l >> r;||| 65 l--;||| 66 r--;||| 67 long long toSub = ((l == 0) ? 0 : pref[l - 1]);||| 68 long long minVal = getMinPref(l, r) - toSub;||| 69 if (pref[r] != toSub) {||| 70 cout << ""-1"" << '\n';||| 71 return;||| 72 }||| 73 if (minVal < 0)||| 74 cout << ""-1"" << '\n';||| 75 else||| 76 cout << llabs(getMaxPref(l, r) - toSub) << '\n';||| 77 }||| 78 int main() {||| 79 ios::sync_with_stdio(false);||| 80 cin.tie(NULL);||| 81 int Q;||| 82 cin >> n >> Q;||| 83 for (int i = 0; i < n; i++) cin >> a[i];||| 84 for (int i = 0; i < n; i++) cin >> b[i];||| 85 init();||| 86 while (Q--) doQuery();||| 87 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e6 + 5;||| 4 const long long inf = 1e17 + 5;||| 5 struct SegmentTree {||| 6 int l, r;||| 7 long long minPref, maxPref, maxDiff;||| 8 SegmentTree *L, *R;||| 9 SegmentTree() : L(nullptr), R(nullptr), minPref(inf), maxPref(0) {}||| 10 SegmentTree(int l, int r) : SegmentTree() {||| 11 this->l = l;||| 12 this->r = r;||| 13 }||| 14 void recalc() {||| 15 minPref = min(L->minPref, R->minPref);||| 16 maxPref = max(L->maxPref, R->maxPref);||| 17 maxDiff = max(L->maxDiff, R->maxDiff);||| 18 }||| 19 void build(long long *pref, long long *a, long long *b) {||| 20 if (l == r) {||| 21 minPref = maxPref = pref[l];||| 22 maxDiff = llabs(a[l] - b[l]);||| 23 return;||| 24 }||| 25 L = new SegmentTree(l, (l + r) / 2);||| 26 R = new SegmentTree((l + r) / 2 + 1, r);||| 27 L->build(pref, a, b);||| 28 R->build(pref, a, b);||| 29 recalc();||| 30 }||| 31 long long queryMinPref(int ql, int qr) {||| 32 if (l >= ql && r <= qr) return minPref;||| 33 if (r < ql || l > qr) return inf;||| 34 return min(L->queryMinPref(ql, qr), R->queryMinPref(ql, qr));||| 35 }||| 36 long long queryMaxPref(int ql, int qr) {||| 37 if (l >= ql && r <= qr) return maxPref;||| 38 if (r < ql || l > qr) return 0;||| 39 return max(L->queryMaxPref(ql, qr), R->queryMaxPref(ql, qr));||| 40 }||| 41 long long queryMaxDiff(int ql, int qr) {||| 42 if (l >= ql && r <= qr) return maxDiff;||| 43 if (r < ql || l > qr) return 0;||| 44 return max(L->queryMaxDiff(ql, qr), R->queryMaxDiff(ql, qr));||| 45 }||| 46 };||| 47 int n;||| 48 long long a[MAXN], b[MAXN];||| 49 long long pref[MAXN];||| 50 SegmentTree *T = nullptr;||| 51 void init() {||| 52 long long sum = 0;||| 53 for (int i = 0; i < n; i++) {||| 54 sum += b[i] - a[i];||| 55 pref[i] = sum;||| 56 }||| 57 T = new SegmentTree(0, n - 1);||| 58 T->build(pref, a, b);||| 59 }||| 60 long long getMinPref(int l, int r) { return T->queryMinPref(l, r); }||| 61 long long getMaxPref(int l, int r) { return T->queryMaxPref(l, r); }||| 62 void doQuery() {||| 63 int l, r;||| 64 cin >> l >> r;||| 65 l--;||| 66 r--;||| 67 long long toSub = ((l == 0) ? 0 : pref[l - 1]);||| 68 long long minVal = getMinPref(l, r) - toSub;||| 69 if (pref[r] != toSub) {||| 70 cout << ""-1"" << '\n';||| 71 return;||| 72 }||| 73 if (minVal < 0)||| 74 cout << ""-1"" << '\n';||| 75 else||| 76 cout << llabs(getMaxPref(l, r) - toSub) << '\n';||| 77 }||| 78 int main() {||| 79 ios::sync_with_stdio(false);||| 80 cin.tie(NULL);||| 81 int Q;||| 82 cin >> n >> Q;||| 83 for (int i = 0; i < n; i++) cin >> a[i];||| 84 for (int i = 0; i < n; i++) cin >> b[i];||| 85 init();||| 86 while (Q--) doQuery();||| 87 }||| "	38 if (r < ql || l > qr) return -inf;
48	94	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long a = 0;||| 5 long long d = 1;||| 6 char c;||| 7 while (c = getchar(), c < '0' || c > '9')||| 8 if (c == '-') d = -1;||| 9 a = a * 10 + c - 48;||| 10 while (c = getchar(), c >= '0' && c <= '9') a = a * 10 + c - 48;||| 11 a *= d;||| 12 return a;||| 13 }||| 14 long long n, m;||| 15 long long st[105000][50];||| 16 long long stt[105000][50];||| 17 long long a[105000];||| 18 long long lg[105000] = {-1};||| 19 void init() {||| 20 for (long long i = 1; i <= n; i++) {||| 21 st[i][0] = a[i];||| 22 stt[i][0] = a[i];||| 23 lg[i] = lg[i >> 1] + 1;||| 24 }||| 25 for (long long i = 1; i <= lg[n]; i++)||| 26 for (long long j = 1; j + (1 << i) - 1 <= n; j++)||| 27 st[j][i] = max(st[j][i - 1], st[j + (1 << (i - 1))][i - 1]),||| 28 stt[j][i] = min(stt[j][i - 1], stt[j + (1 << (i - 1))][i - 1]);||| 29 }||| 30 long long query(long long l, long long r) {||| 31 long long lglen = lg[r - l + 1];||| 32 return max(st[l][lglen], st[r - (1 << lglen) + 1][lglen]);||| 33 }||| 34 long long queryy(long long l, long long r) {||| 35 long long lglen = lg[r - l + 1];||| 36 return min(stt[l][lglen], stt[r - (1 << lglen) + 1][lglen]);||| 37 }||| 38 signed main() {||| 39 n = read();||| 40 m = read();||| 41 for (long long i = 1; i <= n; i++) a[i] = read();||| 42 for (long long i = 1; i <= n; i++) {||| 43 long long x = read();||| 44 a[i] -= x;||| 45 a[i] += a[i - 1];||| 46 }||| 47 init();||| 48 while (m--) {||| 49 long long l = read();||| 50 long long r = read();||| 51 long long mi = queryy(l, r);||| 52 long long mx = query(l, r);||| 53 if (a[r] - a[l - 1] != 0 || mx - a[l - 1] > 0)||| 54 printf(""-1\n"");||| 55 else||| 56 printf(""%lld\n"", a[l - 1] - mi);||| 57 }||| 58 return 0;||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long a = 0;||| 5 long long d = 1;||| 6 char c;||| 7 while (c = getchar(), c < '0' || c > '9')||| 8 if (c == '-') d = -1;||| 9 a = a * 10 + c - 48;||| 10 while (c = getchar(), c >= '0' && c <= '9') a = a * 10 + c - 48;||| 11 a *= d;||| 12 return a;||| 13 }||| 14 long long n, m;||| 15 long long st[105000][50];||| 16 long long stt[105000][50];||| 17 long long a[105000];||| 18 long long lg[105000] = {-1};||| 19 void init() {||| 20 for (long long i = 1; i <= n; i++) {||| 21 st[i][0] = a[i];||| 22 stt[i][0] = a[i];||| 23 lg[i] = lg[i >> 1] + 1;||| 24 }||| 25 for (long long i = 1; i <= lg[n]; i++)||| 26 for (long long j = 1; j + (1 << i) - 1 <= n; j++)||| 27 st[j][i] = max(st[j][i - 1], st[j + (1 << (i - 1))][i - 1]),||| 28 stt[j][i] = min(stt[j][i - 1], stt[j + (1 << (i - 1))][i - 1]);||| 29 }||| 30 long long query(long long l, long long r) {||| 31 long long lglen = lg[r - l + 1];||| 32 return max(st[l][lglen], st[r - (1 << lglen) + 1][lglen]);||| 33 }||| 34 long long queryy(long long l, long long r) {||| 35 long long lglen = lg[r - l + 1];||| 36 return min(stt[l][lglen], stt[r - (1 << lglen) + 1][lglen]);||| 37 }||| 38 signed main() {||| 39 n = read();||| 40 m = read();||| 41 for (long long i = 1; i <= n; i++) a[i] = read();||| 42 for (long long i = 1; i <= n; i++) {||| 43 long long x = read();||| 44 a[i] -= x;||| 45 a[i] += a[i - 1];||| 46 }||| 47 init();||| 48 while (m--) {||| 49 long long l = read();||| 50 long long r = read();||| 51 long long mi = queryy(l, r);||| 52 long long mx = query(l, r);||| 53 if (a[r] - a[l - 1] != 0 || mx - a[l - 1] > 0)||| 54 printf(""-1\n"");||| 55 else||| 56 printf(""%d\n"", a[l - 1] - mi);||| 57 }||| 58 return 0;||| 59 }||| "	"56 printf(""%lld\n"", a[l - 1] - mi);"
48	75	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100005;||| 4 const int M = 20;||| 5 int n, q, m, a[N], bin[M];||| 6 class data {||| 7 public:||| 8 long long mx, lef, rig;||| 9 data() { mx = lef = rig = 0; }||| 10 } f[N][M];||| 11 void merge(data &ans, data x, data y) {||| 12 if (x.lef >= y.rig) {||| 13 ans.lef = x.lef + y.lef - y.rig;||| 14 ans.rig = x.rig;||| 15 ans.mx = max(x.mx, y.mx + x.lef - y.rig);||| 16 } else {||| 17 ans.lef = y.lef;||| 18 ans.rig = x.rig + y.rig - x.lef;||| 19 ans.mx = max(x.mx + y.rig - x.lef, y.mx);||| 20 }||| 21 }||| 22 int main() {||| 23 scanf(""%d%d"", &n, &q);||| 24 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 25 for (int i = 1; i <= n; i++) {||| 26 int x;||| 27 scanf(""%d"", &x);||| 28 a[i] = x - a[i];||| 29 }||| 30 m = 0;||| 31 while (1 << (m + 1) <= n) m++;||| 32 bin[0] = 1;||| 33 for (int i = 1; i <= m; i++) bin[i] = bin[i - 1] * 2;||| 34 for (int i = 1; i <= n; i++) {||| 35 f[i][0].mx = abs(a[i]);||| 36 if (a[i] > 0)||| 37 f[i][0].lef = a[i];||| 38 else||| 39 f[i][0].rig = -a[i];||| 40 }||| 41 for (int j = 1; j <= m; j++)||| 42 for (int i = 1; i + bin[j] - 1 <= n; i++) {||| 43 merge(f[i][j], f[i][j - 1], f[i + bin[j - 1]][j - 1]);||| 44 }||| 45 while (q--) {||| 46 int l, r;||| 47 scanf(""%d%d"", &l, &r);||| 48 data ans;||| 49 for (int i = m; i >= 0; i--)||| 50 if (l + bin[i] - 1 <= r) {||| 51 merge(ans, ans, f[l][i]);||| 52 l += bin[i];||| 53 }||| 54 if (!ans.lef && !ans.rig)||| 55 printf(""%lld\n"", ans.mx);||| 56 else||| 57 puts(""-1"");||| 58 }||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100005;||| 4 const int M = 20;||| 5 int n, q, m, a[N], bin[M];||| 6 class data {||| 7 public:||| 8 long long mx, lef, rig;||| 9 data() { mx = lef = rig = 0; }||| 10 } f[N][M];||| 11 void merge(data &ans, data x, data y) {||| 12 if (x.lef >= y.rig) {||| 13 ans.lef = x.lef + y.lef - y.rig;||| 14 ans.rig = x.rig;||| 15 ans.mx = max(x.mx, y.mx + x.lef - y.rig);||| 16 } else {||| 17 ans.lef = y.lef;||| 18 ans.rig = x.rig + y.rig - x.lef;||| 19 ans.mx = max(x.mx + y.rig - x.lef, y.mx);||| 20 }||| 21 }||| 22 int main() {||| 23 scanf(""%d%d"", &n, &q);||| 24 for (int i = 1; i <= n; i++) scanf(""%d"", &a[i]);||| 25 for (int i = 1; i <= n; i++) {||| 26 int x;||| 27 scanf(""%d"", &x);||| 28 a[i] = x - a[i];||| 29 }||| 30 m = 0;||| 31 while (1 << (m + 1) <= n) m++;||| 32 bin[0] = 1;||| 33 for (int i = 1; i <= m; i++) bin[i] = bin[i - 1] * 2;||| 34 for (int i = 1; i <= n; i++) {||| 35 f[i][0].mx = abs(a[i]);||| 36 if (a[i] > 0)||| 37 f[i][0].lef = a[i];||| 38 else||| 39 f[i][0].rig = -a[i];||| 40 }||| 41 for (int j = 1; j <= m; j++)||| 42 for (int i = 1; i + bin[j] - 1 <= n; i++) {||| 43 merge(f[i][j], f[i][j - 1], f[i + bin[j - 1]][j - 1]);||| 44 }||| 45 while (q--) {||| 46 int l, r;||| 47 scanf(""%d%d"", &l, &r);||| 48 data ans;||| 49 for (int i = m; i >= 0; i--)||| 50 if (l + bin[i] - 1 <= r) {||| 51 merge(ans, ans, f[l][i]);||| 52 l += bin[i];||| 53 }||| 54 if (!ans.lef && !ans.rig)||| 55 printf(""%d\n"", ans.mx);||| 56 else||| 57 puts(""-1"");||| 58 }||| 59 return 0;||| 60 }||| "	"55 printf(""%lld\n"", ans.mx);"
48	144	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 struct node {||| 5 long long sum;||| 6 long long maxPref;||| 7 long long minPref;||| 8 long long maxSuff;||| 9 long long minSuff;||| 10 long long maxSum;||| 11 long long minSum;||| 12 node() { sum = maxPref = maxSuff = minPref = minSuff = minSum = maxSum = 0; }||| 13 node(int x) {||| 14 sum = x;||| 15 maxPref = max(0, x);||| 16 maxSuff = max(0, x);||| 17 maxSum = max(0, x);||| 18 minPref = min(0, x);||| 19 minSuff = min(0, x);||| 20 minSum = min(0, x);||| 21 }||| 22 };||| 23 node lacz(node a, node b) {||| 24 node c;||| 25 c.sum = a.sum + b.sum;||| 26 c.maxPref = max(a.maxPref, a.sum + b.maxPref);||| 27 c.maxSuff = max(b.maxSuff, b.sum + a.maxSuff);||| 28 c.maxSum =||| 29 max({a.maxSum, b.maxSum, a.maxSuff + b.maxPref, c.maxPref, c.maxSuff});||| 30 c.minPref = min(a.minPref, a.sum + b.minPref);||| 31 c.minSuff = min(b.minSuff, b.sum + a.minSuff);||| 32 c.minSum =||| 33 min({a.minSum, b.minSum, a.minSuff + b.minPref, c.minSuff, c.minPref});||| 34 return c;||| 35 }||| 36 vector<node> tree;||| 37 node query(int p, int q, int pocz, int kon, int ind) {||| 38 if (p == pocz && q == kon) return tree[ind];||| 39 int sr = (pocz + kon) / 2;||| 40 if (q <= sr)||| 41 return query(p, q, pocz, sr, 2 * ind);||| 42 else if (p > sr)||| 43 return query(p, q, sr + 1, kon, 2 * ind + 1);||| 44 else {||| 45 return lacz(query(p, sr, pocz, sr, 2 * ind),||| 46 query(sr + 1, q, sr + 1, kon, 2 * ind + 1));||| 47 }||| 48 }||| 49 int P;||| 50 void solve() {||| 51 int n, q;||| 52 cin >> n >> q;||| 53 vector<int> a(n), b(n);||| 54 for (int i = (0); i < (n); ++i) {||| 55 cin >> a[i];||| 56 }||| 57 for (int i = (0); i < (n); ++i) {||| 58 cin >> b[i];||| 59 }||| 60 P = 1;||| 61 while (P < n) {||| 62 P <<= 1;||| 63 }||| 64 tree.resize(2 * P);||| 65 for (int i = (0); i < (n); ++i) {||| 66 tree[P + i] = node(a[i] - b[i]);||| 67 }||| 68 for (int i = ((int)(P)) - 1; i >= (1); --i) {||| 69 tree[i] = lacz(tree[2 * i], tree[2 * i + 1]);||| 70 }||| 71 for (int i = (0); i < (q); ++i) {||| 72 int l, r;||| 73 cin >> l >> r;||| 74 node res = query(l, r, 1, P, 1);||| 75 if (res.sum != 0 || res.maxPref > 0 || res.minSuff < 0) {||| 76 cout << -1 << endl;||| 77 } else {||| 78 cout << max(res.maxSum, -res.minSum) << endl;||| 79 }||| 80 }||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(0);||| 85 int t;||| 86 t = 1;||| 87 while (t--) {||| 88 solve();||| 89 }||| 90 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 struct node {||| 5 long long sum;||| 6 long long maxPref;||| 7 long long minPref;||| 8 long long maxSuff;||| 9 long long minSuff;||| 10 long long maxSum;||| 11 long long minSum;||| 12 node() { sum = maxPref = maxSuff = minPref = minSuff = minSum = maxSum = 0; }||| 13 node(int x) {||| 14 sum = x;||| 15 maxPref = max(0, x);||| 16 maxSuff = max(0, x);||| 17 maxSum = max(0, x);||| 18 minPref = min(0, x);||| 19 minSuff = min(0, x);||| 20 minSum = min(0, x);||| 21 }||| 22 };||| 23 node lacz(node a, node b) {||| 24 node c;||| 25 c.sum = a.sum + b.sum;||| 26 c.maxPref = max(a.maxPref, a.sum + b.maxPref);||| 27 c.maxSuff = max(b.maxSuff, b.sum + a.maxSuff);||| 28 c.maxSum =||| 29 max({a.maxSum, b.maxSum, a.maxSuff + b.maxPref, c.maxPref, c.maxSuff});||| 30 c.minPref = min(a.minPref, a.sum + b.minPref);||| 31 c.minSuff = min(b.minSuff, b.sum + a.minSuff);||| 32 c.minSum =||| 33 min({a.minSum, b.minSum, a.minSuff + b.minPref, c.minSuff, c.minPref});||| 34 return c;||| 35 }||| 36 vector<node> tree;||| 37 node query(int p, int q, int pocz, int kon, int ind) {||| 38 if (p == pocz && q == kon) return tree[ind];||| 39 int sr = (pocz + kon) / 2;||| 40 if (q <= sr)||| 41 return query(p, q, pocz, sr, 2 * ind);||| 42 else if (p > sr)||| 43 return query(p, q, sr + 1, kon, 2 * ind + 1);||| 44 else {||| 45 return lacz(query(p, sr, pocz, sr, 2 * ind),||| 46 query(sr + 1, q, sr + 1, kon, 2 * ind + 1));||| 47 }||| 48 }||| 49 int P;||| 50 void solve() {||| 51 int n, q;||| 52 cin >> n >> q;||| 53 vector<int> a(n), b(n);||| 54 for (int i = (0); i < (n); ++i) {||| 55 cin >> a[i];||| 56 }||| 57 for (int i = (0); i < (n); ++i) {||| 58 cin >> b[i];||| 59 }||| 60 P = 1;||| 61 while (P < n) {||| 62 P <<= 1;||| 63 }||| 64 tree.resize(2 * P);||| 65 for (int i = (0); i < (n); ++i) {||| 66 tree[P + i] = node(a[i] - b[i]);||| 67 }||| 68 for (int i = ((int)(P)) - 1; i >= (1); --i) {||| 69 tree[i] = lacz(tree[2 * i], tree[2 * i + 1]);||| 70 }||| 71 for (int i = (0); i < (q); ++i) {||| 72 int l, r;||| 73 cin >> l >> r;||| 74 node res = query(l, r, 1, n, 1);||| 75 if (res.sum != 0 || res.maxPref > 0 || res.minSuff < 0) {||| 76 cout << -1 << endl;||| 77 } else {||| 78 cout << max(res.maxSum, -res.minSum) << endl;||| 79 }||| 80 }||| 81 }||| 82 int main() {||| 83 ios_base::sync_with_stdio(false);||| 84 cin.tie(0);||| 85 int t;||| 86 t = 1;||| 87 while (t--) {||| 88 solve();||| 89 }||| 90 }||| 	74 node res = query(l, r, 1, P, 1);
49	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int res = 0, f = 1;||| 5 char ch;||| 6 while (ch = getchar(), ch < '0' || ch > '9')||| 7 if (ch == '-') f = -1;||| 8 while (ch >= '0' && ch <= '9') res = res * 10 + ch - '0', ch = getchar();||| 9 return res * f;||| 10 }||| 11 const int N = 14, M = 4782969, P = 1e9 + 7;||| 12 inline int qpow(int a, int b) {||| 13 int ans = 1, base = a;||| 14 while (b) {||| 15 if (b & 1) ans = 1ll * ans * base % P;||| 16 base = 1ll * base * base % P;||| 17 b >>= 1;||| 18 }||| 19 return ans;||| 20 }||| 21 int rev[1 << N], cnt[1 << N], n, A, a[N];||| 22 int F[1 << N], G[1 << N], v[N][1 << N];||| 23 inline int get(int S, int T) {||| 24 if (!S) return 1;||| 25 if (G[S]) return G[S];||| 26 return G[S] = 1ll * get(S & (S - 1), T) * v[rev[S & -S]][T] % P;||| 27 }||| 28 int main() {||| 29 n = read(), A = (1 << n) - 1;||| 30 for (int i = 0; i < n; ++i) a[i] = read(), rev[1 << i] = i;||| 31 for (int i = 0; i < n; ++i) {||| 32 v[i][0] = 1;||| 33 for (int S = 1; S < (1 << n); ++S)||| 34 v[i][S] = 1ll * v[i][S & (S - 1)] * a[i] % P *||| 35 qpow((a[rev[S & -S]] + a[i]) % P, P - 2) % P;||| 36 }||| 37 for (int S = 1; S < (1 << n); ++S) {||| 38 int tmp = 0;||| 39 cnt[S] = cnt[S >> 1] + (S & 1);||| 40 for (int T = (S - 1) & S; T; T = (T - 1) & S)||| 41 (tmp += 1ll * F[T] * get(S ^ T, A ^ S) % P) %= P;||| 42 F[S] = (get(S, A ^ S) - tmp + P) % P;||| 43 for (int T = S; T; T = (T - 1) & S) G[T] = 0;||| 44 }||| 45 int res = 0;||| 46 for (int S = 1; S < (1 << n); ++S) (res += 1ll * F[S] * cnt[S] % P) %= P;||| 47 printf(""%d"", res);||| 48 return 0;||| 49 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 inline int read() {||| 4 int res = 0, f = 1;||| 5 char ch;||| 6 while (ch = getchar(), ch < '0' || ch > '9')||| 7 if (ch == '-') f = -1;||| 8 while (ch >= '0' && ch <= '9') res = res * 10 + ch - '0', ch = getchar();||| 9 return res * f;||| 10 }||| 11 const int N = 14, M = 4782969, P = 1e9 + 7;||| 12 inline int qpow(int a, int b) {||| 13 int ans = 1, base = a;||| 14 while (b) {||| 15 if (b & 1) ans = 1ll * ans * base % P;||| 16 base = 1ll * base * base % P;||| 17 b >>= 1;||| 18 }||| 19 return ans;||| 20 }||| 21 int rev[1 << N], cnt[1 << N], n, A, a[N];||| 22 int F[1 << N], G[1 << N], v[N][1 << N];||| 23 inline int get(int S, int T) {||| 24 if (!S) return 1;||| 25 if (G[S]) return G[S];||| 26 return G[S] = 1ll * get(S & (S - 1), T) * v[rev[S & -S]][T] % P;||| 27 }||| 28 int main() {||| 29 n = read(), A = (1 << n) - 1;||| 30 for (int i = 0; i < n; ++i) a[i] = read(), rev[1 << i] = i;||| 31 for (int i = 0; i < n; ++i) {||| 32 v[i][0] = 1;||| 33 for (int S = 1; S < (1 << n); ++S)||| 34 v[i][S] = 1ll * v[i][S & (S - 1)] * a[i] *||| 35 qpow((a[rev[S & -S]] + a[i]) % P, P - 2) % P;||| 36 }||| 37 for (int S = 1; S < (1 << n); ++S) {||| 38 int tmp = 0;||| 39 cnt[S] = cnt[S >> 1] + (S & 1);||| 40 for (int T = (S - 1) & S; T; T = (T - 1) & S)||| 41 (tmp += 1ll * F[T] * get(S ^ T, A ^ S) % P) %= P;||| 42 F[S] = (get(S, A ^ S) - tmp + P) % P;||| 43 for (int T = S; T; T = (T - 1) & S) G[T] = 0;||| 44 }||| 45 int res = 0;||| 46 for (int S = 1; S < (1 << n); ++S) (res += 1ll * F[S] * cnt[S] % P) %= P;||| 47 printf(""%d"", res);||| 48 return 0;||| 49 }||| "	34 v[i][S] = 1ll * v[i][S & (S - 1)] * a[i] % P *
49	27	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace IO {||| 4 char in[1 << 24];||| 5 char const *o;||| 6 void init_in() {||| 7 o = in;||| 8 in[fread(in, 1, sizeof(in) - 4, stdin)] = 0;||| 9 }||| 10 int rd() {||| 11 unsigned u = 0, s = 0;||| 12 while (*o && *o <= 32) ++o;||| 13 if (*o == '-')||| 14 s = ~s, ++o;||| 15 else if (*o == '+')||| 16 ++o;||| 17 while (*o >= '0' && *o <= '9') u = (u << 3) + (u << 1) + (*o++ - '0');||| 18 return static_cast<int>((u ^ s) + !!s);||| 19 }||| 20 char *rdstr(char *s) {||| 21 while (*o && *o <= 32) ++o;||| 22 while (*o > 32) *s++ = *o++;||| 23 return s;||| 24 }||| 25 }  // namespace IO||| 26 template <typename T>||| 27 void chkmax(T &a, const T &b) {||| 28 a = max(a, b);||| 29 }||| 30 template <typename T>||| 31 void chkmin(T &a, const T &b) {||| 32 a = min(a, b);||| 33 }||| 34 pair<int, int> operator+(const pair<int, int> &a, const pair<int, int> &b) {||| 35 return make_pair(a.first + b.first, a.second + b.second);||| 36 }||| 37 using IO::rd;||| 38 const int N = 14, S = 1 << N;||| 39 int a[N];||| 40 int n;||| 41 const long long mod = 1e9 + 7;||| 42 long long b[N][N];||| 43 long long h[N][S], pr[S];||| 44 inline void reduce(long long &x) {||| 45 if (x >= mod) x -= mod;||| 46 }||| 47 inline long long g(int s, int t) {||| 48 long long ret = 1;||| 49 for (int i = 0; i < n; ++i) {||| 50 if (s & (1 << i)) ret = ret * h[i][t] % mod;||| 51 }||| 52 return ret;||| 53 }||| 54 int Q_pow(long long x, int y) {||| 55 long long ret = 1;||| 56 while (y) {||| 57 if (y & 1) ret = ret * x % mod;||| 58 x = x * x % mod;||| 59 y >>= 1;||| 60 }||| 61 return ret;||| 62 }||| 63 inline int inv(int x) { return Q_pow(x, mod - 2); }||| 64 void solve() {||| 65 n = rd();||| 66 int m = 1 << n;||| 67 for (int i = 0; i < n; ++i) a[i] = rd();||| 68 for (int i = 0; i < n; ++i)||| 69 for (int j = 0; j < i; ++j) {||| 70 long long x = inv(a[i] + a[j]);||| 71 b[i][j] = a[i] * x % mod;||| 72 b[j][i] = a[j] * x % mod;||| 73 }||| 74 for (int i = 0; i < n; ++i)||| 75 for (int j = 0; j < m; ++j) {||| 76 h[i][j] = 1;||| 77 for (int k = 0; k < n; ++k) {||| 78 if (k != i && j & (1 << k)) h[i][j] = h[i][j] * b[i][k] % mod;||| 79 }||| 80 }||| 81 int mask = m - 1;||| 82 for (int i = 1; i < m; ++i) {||| 83 pr[i] = 1;||| 84 for (int j = (i - 1) & i; j; j = (j - 1) & i) {||| 85 reduce(pr[i] += mod - (g(j, i ^ j) * pr[j] % mod));||| 86 }||| 87 }||| 88 long long ans = 0;||| 89 for (int i = 1; i < m; ++i) {||| 90 ans += pr[i] * g(i, mask ^ i) % mod * __builtin_popcount(i) % mod;||| 91 }||| 92 cout << ans % mod << '\n';||| 93 }||| 94 int main() {||| 95 IO::init_in();||| 96 solve();||| 97 return 0;||| 98 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace IO {||| 4 char in[1 << 24];||| 5 char const *o;||| 6 void init_in() {||| 7 o = in;||| 8 in[fread(in, 1, sizeof(in) - 4, stdin)] = 0;||| 9 }||| 10 int rd() {||| 11 unsigned u = 0, s = 0;||| 12 while (*o && *o <= 32) ++o;||| 13 if (*o == '-')||| 14 s = ~s, ++o;||| 15 else if (*o == '+')||| 16 ++o;||| 17 while (*o >= '0' && *o <= '9') u = (u << 3) + (u << 1) + (*o++ - '0');||| 18 return static_cast<int>((u ^ s) + !!s);||| 19 }||| 20 char *rdstr(char *s) {||| 21 while (*o && *o <= 32) ++o;||| 22 while (*o > 32) *s++ = *o++;||| 23 return s;||| 24 }||| 25 }  // namespace IO||| 26 template <typename T>||| 27 void chkmax(T &a, const T &b) {||| 28 a = max(a, b);||| 29 }||| 30 template <typename T>||| 31 void chkmin(T &a, const T &b) {||| 32 a = min(a, b);||| 33 }||| 34 pair<int, int> operator+(const pair<int, int> &a, const pair<int, int> &b) {||| 35 return make_pair(a.first + b.first, a.second + b.second);||| 36 }||| 37 using IO::rd;||| 38 const int N = 14, S = 1 << N;||| 39 int a[N];||| 40 int n;||| 41 const long long mod = 1e9 + 7;||| 42 long long b[N][N];||| 43 long long h[N][S], pr[N];||| 44 inline void reduce(long long &x) {||| 45 if (x >= mod) x -= mod;||| 46 }||| 47 inline long long g(int s, int t) {||| 48 long long ret = 1;||| 49 for (int i = 0; i < n; ++i) {||| 50 if (s & (1 << i)) ret = ret * h[i][t] % mod;||| 51 }||| 52 return ret;||| 53 }||| 54 int Q_pow(long long x, int y) {||| 55 long long ret = 1;||| 56 while (y) {||| 57 if (y & 1) ret = ret * x % mod;||| 58 x = x * x % mod;||| 59 y >>= 1;||| 60 }||| 61 return ret;||| 62 }||| 63 inline int inv(int x) { return Q_pow(x, mod - 2); }||| 64 void solve() {||| 65 n = rd();||| 66 int m = 1 << n;||| 67 for (int i = 0; i < n; ++i) a[i] = rd();||| 68 for (int i = 0; i < n; ++i)||| 69 for (int j = 0; j < i; ++j) {||| 70 long long x = inv(a[i] + a[j]);||| 71 b[i][j] = a[i] * x % mod;||| 72 b[j][i] = a[j] * x % mod;||| 73 }||| 74 for (int i = 0; i < n; ++i)||| 75 for (int j = 0; j < m; ++j) {||| 76 h[i][j] = 1;||| 77 for (int k = 0; k < n; ++k) {||| 78 if (k != i && j & (1 << k)) h[i][j] = h[i][j] * b[i][k] % mod;||| 79 }||| 80 }||| 81 int mask = m - 1;||| 82 for (int i = 1; i < m; ++i) {||| 83 pr[i] = 1;||| 84 for (int j = (i - 1) & i; j; j = (j - 1) & i) {||| 85 reduce(pr[i] += mod - (g(j, i ^ j) * pr[j] % mod));||| 86 }||| 87 }||| 88 long long ans = 0;||| 89 for (int i = 1; i < m; ++i) {||| 90 ans += pr[i] * g(i, mask ^ i) % mod * __builtin_popcount(i) % mod;||| 91 }||| 92 cout << ans % mod << '\n';||| 93 }||| 94 int main() {||| 95 IO::init_in();||| 96 solve();||| 97 return 0;||| 98 }||| 	43 long long h[N][S], pr[S];
49	53	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 long long a[20], dp[20010], prob[20][20], n;||| 6 long long pw(long long a, long long n) {||| 7 long long base = a, res = 1;||| 8 while (n) {||| 9 if (n & 1) res = res * base % MOD;||| 10 base = base * base % MOD;||| 11 n >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long inv(long long a) { return pw(a, MOD - 2); }||| 16 long long get_dp(int x) {||| 17 if (dp[x] >= 0) return dp[x];||| 18 vector<int> b;||| 19 for (int i = 0; i < n; i++) {||| 20 if ((1 << i) & x) b.push_back(i);||| 21 }||| 22 long long res = 1;||| 23 int m = b.size();||| 24 if (m == 1) {||| 25 dp[x] = 1;||| 26 return dp[x];||| 27 }||| 28 for (int i = 1; i < (1 << m) - 1; i++) {||| 29 int y = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 if (i & (1 << j)) y |= (1 << b[j]);||| 32 }||| 33 long long t = get_dp(y);||| 34 for (int j = 0; j < m; j++) {||| 35 for (int k = 0; k < m; k++) {||| 36 if (((1 << j) & i) == 0 && ((1 << k) & i) != 0)||| 37 t = t * prob[b[j]][b[k]] % MOD;||| 38 }||| 39 }||| 40 res = res - t % MOD;||| 41 res = (res + MOD) % MOD;||| 42 }||| 43 dp[x] = res;||| 44 return res;||| 45 }||| 46 int main() {||| 47 ios_base::sync_with_stdio(false);||| 48 cin.tie(nullptr);||| 49 cin >> n;||| 50 for (int i = 0; i < n; i++) cin >> a[i];||| 51 for (int i = 0; i < n; i++) {||| 52 for (int j = 0; j < n; j++) {||| 53 if (i == j)||| 54 prob[i][j] = 1;||| 55 else {||| 56 prob[i][j] = a[i] * inv(a[i] + a[j]) % MOD;||| 57 }||| 58 }||| 59 }||| 60 memset(dp, -1, sizeof(dp));||| 61 dp[0] = 1;||| 62 for (int i = 1; i < (1 << n); i++) {||| 63 get_dp(i);||| 64 }||| 65 long long ans = n;||| 66 for (int i = 1; i < (1 << n) - 1; i++) {||| 67 long long cnt = 0;||| 68 for (int j = 0; j < n; j++) {||| 69 if ((i & (1 << j)) == 0) {||| 70 cnt++;||| 71 }||| 72 }||| 73 long long tmp = dp[i];||| 74 for (int k = 0; k < n; k++) {||| 75 for (int l = 0; l < n; l++)||| 76 if ((i & (1 << l)) == 0 && (i & (1 << k))) {||| 77 tmp = tmp * prob[k][l] % MOD;||| 78 }||| 79 }||| 80 ans -= tmp * cnt % MOD;||| 81 ans %= MOD;||| 82 ans = (ans + MOD) % MOD;||| 83 }||| 84 cout << ans << endl;||| 85 return 0;||| 86 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 long long a[20], dp[20010], prob[20][20], n;||| 6 long long pw(long long a, long long n) {||| 7 long long base = a, res = 1;||| 8 while (n) {||| 9 if (n & 1) res = res * base % MOD;||| 10 base = base * base % MOD;||| 11 n >>= 1;||| 12 }||| 13 return res;||| 14 }||| 15 long long inv(long long a) { return pw(a, MOD - 2); }||| 16 long long get_dp(int x) {||| 17 if (dp[x] >= 0) return dp[x];||| 18 vector<int> b;||| 19 for (int i = 0; i < n; i++) {||| 20 if ((1 << i) & x) b.push_back(i);||| 21 }||| 22 long long res = 1;||| 23 int m = b.size();||| 24 if (m == 1) {||| 25 dp[x] = 1;||| 26 return dp[x];||| 27 }||| 28 for (int i = 1; i < (1 << m) - 1; i++) {||| 29 int y = 0;||| 30 for (int j = 0; j < m; j++) {||| 31 if (i & (1 << j)) y |= (1 << b[j]);||| 32 }||| 33 long long t = get_dp(y);||| 34 for (int j = 0; j < m; j++) {||| 35 for (int k = 0; k < m; k++) {||| 36 if (((1 << j) & i) == 0 && ((1 << k) & i) != 0)||| 37 t = t * prob[b[j]][b[k]] % MOD;||| 38 }||| 39 }||| 40 res = res - t % MOD;||| 41 res = (res + MOD) % MOD;||| 42 }||| 43 dp[x] = res;||| 44 return res;||| 45 }||| 46 int main() {||| 47 ios_base::sync_with_stdio(false);||| 48 cin.tie(nullptr);||| 49 cin >> n;||| 50 for (int i = 0; i < n; i++) cin >> a[i];||| 51 for (int i = 0; i < n; i++) {||| 52 for (int j = 0; j < n; j++) {||| 53 if (i == j)||| 54 prob[i][j] = 1;||| 55 else {||| 56 prob[i][j] = a[i] * inv(a[i] + a[j]);||| 57 }||| 58 }||| 59 }||| 60 memset(dp, -1, sizeof(dp));||| 61 dp[0] = 1;||| 62 for (int i = 1; i < (1 << n); i++) {||| 63 get_dp(i);||| 64 }||| 65 long long ans = n;||| 66 for (int i = 1; i < (1 << n) - 1; i++) {||| 67 long long cnt = 0;||| 68 for (int j = 0; j < n; j++) {||| 69 if ((i & (1 << j)) == 0) {||| 70 cnt++;||| 71 }||| 72 }||| 73 long long tmp = dp[i];||| 74 for (int k = 0; k < n; k++) {||| 75 for (int l = 0; l < n; l++)||| 76 if ((i & (1 << l)) == 0 && (i & (1 << k))) {||| 77 tmp = tmp * prob[k][l] % MOD;||| 78 }||| 79 }||| 80 ans -= tmp * cnt % MOD;||| 81 ans %= MOD;||| 82 ans = (ans + MOD) % MOD;||| 83 }||| 84 cout << ans << endl;||| 85 return 0;||| 86 }||| 	56 prob[i][j] = a[i] * inv(a[i] + a[j]) % MOD;
49	7	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = (long long)1e9 + 7;||| 4 const int SIZE = 1000002;||| 5 const long long INF = 1LL << 30;||| 6 const double eps = 1e-4;||| 7 const double PI = 3.1415926535897932;||| 8 struct ModInt {||| 9 unsigned x;||| 10 ModInt() : x(0) {}||| 11 ModInt(signed sig) : x(sig % MOD) {}||| 12 ModInt(signed long long sig) : x(sig % MOD) {}||| 13 int get() const { return (int)x; }||| 14 ModInt pow(long long p) {||| 15 ModInt res = 1, a = *this;||| 16 while (p) {||| 17 if (p & 1) res *= a;||| 18 a *= a;||| 19 p >>= 1;||| 20 }||| 21 return res;||| 22 }||| 23 ModInt &operator+=(ModInt that) {||| 24 if ((x += that.x) >= MOD) x -= MOD;||| 25 return *this;||| 26 }||| 27 ModInt &operator-=(ModInt that) {||| 28 if ((x += MOD - that.x) >= MOD) x -= MOD;||| 29 return *this;||| 30 }||| 31 ModInt &operator*=(ModInt that) {||| 32 x = (unsigned long long)x * that.x % MOD;||| 33 return *this;||| 34 }||| 35 ModInt &operator/=(ModInt that) { return (*this) *= that.pow(MOD - 2); }||| 36 ModInt operator+(ModInt that) const { return ModInt(*this) += that; }||| 37 ModInt operator-(ModInt that) const { return ModInt(*this) -= that; }||| 38 ModInt operator*(ModInt that) const { return ModInt(*this) *= that; }||| 39 ModInt operator/(ModInt that) const { return ModInt(*this) /= that; }||| 40 bool operator<(ModInt that) const { return x < that.x; }||| 41 friend ostream &operator<<(ostream &os, ModInt a) {||| 42 os << a.x;||| 43 return os;||| 44 }||| 45 };||| 46 ModInt a[15];||| 47 ModInt adj[15][15];||| 48 ModInt p[16384];||| 49 ModInt h[14][16384];||| 50 int n;||| 51 ModInt g(int x, int y) {||| 52 ModInt ans = 1;||| 53 for (int i = 0; i < (n); ++i) {||| 54 if (x >> i & 1) {||| 55 for (int j = 0; j < (n); ++j) {||| 56 if (y >> j & 1) {||| 57 ans *= adj[i][j];||| 58 }||| 59 }||| 60 }||| 61 }||| 62 return ans;||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &(n));||| 66 for (int i = 0; i < (n); ++i) {||| 67 int xx;||| 68 scanf(""%d"", &xx);||| 69 a[i] = xx;||| 70 }||| 71 for (int i = 0; i < (n); ++i) {||| 72 for (int j = 0; j < (n); ++j) {||| 73 if (i == j) continue;||| 74 adj[i][j] = a[i] / (a[i] + a[j]);||| 75 }||| 76 }||| 77 int bmax = 1 << n;||| 78 for (int i = 0; i < (n); ++i) {||| 79 for (int bm = 0; bm < (bmax); ++bm) {||| 80 h[i][bm] = 1;||| 81 for (int bi = 0; bi < (n); ++bi) {||| 82 if (bm >> bi & 1) {||| 83 h[i][bm] *= adj[i][bi];||| 84 }||| 85 }||| 86 }||| 87 }||| 88 p[0] = 1;||| 89 for (int bm = (1); bm < (bmax); ++bm) {||| 90 p[bm] = 1;||| 91 for (int bm2 = bm; bm2; bm2 = (bm2 - 1) & bm) {||| 92 if (bm2 == bm) continue;||| 93 p[bm] -= p[bm2] * g(bm2, bm ^ bm2);||| 94 if (bm2 == 0) break;||| 95 }||| 96 }||| 97 ModInt ans = 0;||| 98 for (int bm = (1); bm < (bmax); ++bm) {||| 99 ModInt f = p[bm] * g(bm, (bmax - 1) ^ bm);||| 100 ans += f * __builtin_popcountll(bm);||| 101 }||| 102 printf(""%u"", ans.x);||| 103 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MOD = (long long)1e9 + 7;||| 4 const int SIZE = 1000002;||| 5 const long long INF = 1LL << 30;||| 6 const double eps = 1e-4;||| 7 const double PI = 3.1415926535897932;||| 8 struct ModInt {||| 9 unsigned x;||| 10 ModInt() : x(0) {}||| 11 ModInt(signed sig) : x(sig % MOD) {}||| 12 ModInt(signed long long sig) : x(sig % MOD) {}||| 13 int get() const { return (int)x; }||| 14 ModInt pow(long long p) {||| 15 ModInt res = 1, a = *this;||| 16 while (p) {||| 17 if (p & 1) res *= a;||| 18 a *= a;||| 19 p >>= 1;||| 20 }||| 21 return res;||| 22 }||| 23 ModInt &operator+=(ModInt that) {||| 24 if ((x += that.x) >= MOD) x -= MOD;||| 25 return *this;||| 26 }||| 27 ModInt &operator-=(ModInt that) {||| 28 if ((x += MOD - that.x) >= MOD) x -= MOD;||| 29 return *this;||| 30 }||| 31 ModInt &operator*=(ModInt that) {||| 32 x = (unsigned long long)x * that.x % MOD;||| 33 return *this;||| 34 }||| 35 ModInt &operator/=(ModInt that) { return (*this) *= that.pow(MOD - 2); }||| 36 ModInt operator+(ModInt that) const { return ModInt(*this) += that; }||| 37 ModInt operator-(ModInt that) const { return ModInt(*this) -= that; }||| 38 ModInt operator*(ModInt that) const { return ModInt(*this) *= that; }||| 39 ModInt operator/(ModInt that) const { return ModInt(*this) /= that; }||| 40 bool operator<(ModInt that) const { return x < that.x; }||| 41 friend ostream &operator<<(ostream &os, ModInt a) {||| 42 os << a.x;||| 43 return os;||| 44 }||| 45 };||| 46 ModInt a[15];||| 47 ModInt adj[15][15];||| 48 ModInt p[16384];||| 49 ModInt h[14][16384];||| 50 int n;||| 51 ModInt g(int x, int y) {||| 52 ModInt ans = 1;||| 53 for (int i = 0; i < (n); ++i) {||| 54 if (x >> i & 1) {||| 55 for (int j = 0; j < (n); ++j) {||| 56 if (y >> j & 1) {||| 57 ans *= h[i][j];||| 58 }||| 59 }||| 60 }||| 61 }||| 62 return ans;||| 63 }||| 64 int main() {||| 65 scanf(""%d"", &(n));||| 66 for (int i = 0; i < (n); ++i) {||| 67 int xx;||| 68 scanf(""%d"", &xx);||| 69 a[i] = xx;||| 70 }||| 71 for (int i = 0; i < (n); ++i) {||| 72 for (int j = 0; j < (n); ++j) {||| 73 if (i == j) continue;||| 74 adj[i][j] = a[i] / (a[i] + a[j]);||| 75 }||| 76 }||| 77 int bmax = 1 << n;||| 78 for (int i = 0; i < (n); ++i) {||| 79 for (int bm = 0; bm < (bmax); ++bm) {||| 80 h[i][bm] = 1;||| 81 for (int bi = 0; bi < (n); ++bi) {||| 82 if (bm >> bi & 1) {||| 83 h[i][bm] *= adj[i][bi];||| 84 }||| 85 }||| 86 }||| 87 }||| 88 p[0] = 1;||| 89 for (int bm = (1); bm < (bmax); ++bm) {||| 90 p[bm] = 1;||| 91 for (int bm2 = bm; bm2; bm2 = (bm2 - 1) & bm) {||| 92 if (bm2 == bm) continue;||| 93 p[bm] -= p[bm2] * g(bm2, bm ^ bm2);||| 94 if (bm2 == 0) break;||| 95 }||| 96 }||| 97 ModInt ans = 0;||| 98 for (int bm = (1); bm < (bmax); ++bm) {||| 99 ModInt f = p[bm] * g(bm, (bmax - 1) ^ bm);||| 100 ans += f * __builtin_popcountll(bm);||| 101 }||| 102 printf(""%u"", ans.x);||| 103 }||| "	57 ans *= adj[i][j];
49	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int P = 1e9 + 7, N = 17, M = 16389, O = 131;||| 4 int qp(int a, int b) {||| 5 int r = 1;||| 6 for (; b; b >>= 1, a = a * 1ll * a % P)||| 7 if (b & 1) r = r * 1ll * a % P;||| 8 return r;||| 9 }||| 10 int a[N], e[N][N], p[M], n, ll[O][O], lr[O][O], rl[O][O], rr[O][O];||| 11 int g(int x, int y) {||| 12 int i, j, s = 1;||| 13 for (i = 0; i < n; ++i)||| 14 if (x >> i & 1)||| 15 for (j = 0; j < n; ++j)||| 16 if (y >> j & 1) s = s * 1ll * e[i][j] % P;||| 17 return s;||| 18 }||| 19 int h(int x, int y) {||| 20 return ll[x & 127][y & 127] * 1ll * lr[x & 127][y >> 7] % P *||| 21 rl[x >> 7][y & 127] % P * rr[x >> 7][y >> 7] % P;||| 22 }||| 23 int main() {||| 24 int m, i, j, w = 0;||| 25 scanf(""%d"", &n);||| 26 for (i = 0; i < n; ++i) scanf(""%d"", a + i);||| 27 for (i = 0; i < n; ++i)||| 28 for (j = 0; j < n; ++j) e[i][j] = a[i] * 1ll * qp(a[i] + a[j], P - 2) % P;||| 29 for (i = 0; i < O; ++i)||| 30 for (j = 0; j < O; ++j) ll[i][j] = lr[i][j] = rl[i][j] = rr[i][j] = 1;||| 31 for (i = 0, m = 1 << min(n, 7); i < m; ++i)||| 32 for (j = 0; j < m; ++j)||| 33 if (!(i & j)) ll[i][j] = g(i, j);||| 34 if (n > 7) {||| 35 for (i = 0, m = 1 << n - 7; i < 128; ++i)||| 36 for (j = 0; j < m; ++j) lr[i][j] = g(i, j << 7);||| 37 for (i = 0; i < m; ++i)||| 38 for (j = 0; j < 128; ++j) rl[i][j] = g(i << 7, j);||| 39 for (i = 0; i < m; ++i)||| 40 for (j = 0; j < m; ++j)||| 41 if (!(i & j)) rr[i][j] = g(i << 7, j << 7);||| 42 }||| 43 for (i = 1, m = 1 << n; i < m;||| 44 w = (w + p[i] * 1ll * h(i, m - 1 ^ i) % P * __builtin_popcount(i)) % P,||| 45 ++i)||| 46 for (p[i] = 1, j = i & i - 1; j; j = j - 1 & i)||| 47 p[i] = (p[i] - p[j] * 1ll * h(j, i ^ j)) % P;||| 48 printf(""%d"", (w + P) % P);||| 49 return 0;||| 50 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int P = 1e9 + 7, N = 17, M = 16389, O = 131;||| 4 int qp(int a, int b) {||| 5 int r = 1;||| 6 for (; b; b >>= 1, a = a * 1ll * a % P)||| 7 if (b & 1) r = r * 1ll * a % P;||| 8 return r;||| 9 }||| 10 int a[N], e[N][N], p[N], n, ll[O][O], lr[O][O], rl[O][O], rr[O][O];||| 11 int g(int x, int y) {||| 12 int i, j, s = 1;||| 13 for (i = 0; i < n; ++i)||| 14 if (x >> i & 1)||| 15 for (j = 0; j < n; ++j)||| 16 if (y >> j & 1) s = s * 1ll * e[i][j] % P;||| 17 return s;||| 18 }||| 19 int h(int x, int y) {||| 20 return ll[x & 127][y & 127] * 1ll * lr[x & 127][y >> 7] % P *||| 21 rl[x >> 7][y & 127] % P * rr[x >> 7][y >> 7] % P;||| 22 }||| 23 int main() {||| 24 int m, i, j, w = 0;||| 25 scanf(""%d"", &n);||| 26 for (i = 0; i < n; ++i) scanf(""%d"", a + i);||| 27 for (i = 0; i < n; ++i)||| 28 for (j = 0; j < n; ++j) e[i][j] = a[i] * 1ll * qp(a[i] + a[j], P - 2) % P;||| 29 for (i = 0; i < O; ++i)||| 30 for (j = 0; j < O; ++j) ll[i][j] = lr[i][j] = rl[i][j] = rr[i][j] = 1;||| 31 for (i = 0, m = 1 << min(n, 7); i < m; ++i)||| 32 for (j = 0; j < m; ++j)||| 33 if (!(i & j)) ll[i][j] = g(i, j);||| 34 if (n > 7) {||| 35 for (i = 0, m = 1 << n - 7; i < 128; ++i)||| 36 for (j = 0; j < m; ++j) lr[i][j] = g(i, j << 7);||| 37 for (i = 0; i < m; ++i)||| 38 for (j = 0; j < 128; ++j) rl[i][j] = g(i << 7, j);||| 39 for (i = 0; i < m; ++i)||| 40 for (j = 0; j < m; ++j)||| 41 if (!(i & j)) rr[i][j] = g(i << 7, j << 7);||| 42 }||| 43 for (i = 1, m = 1 << n; i < m;||| 44 w = (w + p[i] * 1ll * h(i, m - 1 ^ i) % P * __builtin_popcount(i)) % P,||| 45 ++i)||| 46 for (p[i] = 1, j = i & i - 1; j; j = j - 1 & i)||| 47 p[i] = (p[i] - p[j] * 1ll * h(j, i ^ j)) % P;||| 48 printf(""%d"", (w + P) % P);||| 49 return 0;||| 50 }||| "	10 int a[N], e[N][N], p[M], n, ll[O][O], lr[O][O], rl[O][O], rr[O][O];
49	52	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 #pragma GCC target( \||| 5 ""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native"")||| 6 using namespace std;||| 7 const long long N = 15;||| 8 const long long M = 2e6 + 5;||| 9 const long long SZ = 550;||| 10 const double eps = 1e-9;||| 11 const long long mod = 1e9 + 7;||| 12 const long long inf = 0x3f3f3f3f3f3f3f;||| 13 long long read() {||| 14 long long x = 0, f = 1;||| 15 char ch = getchar();||| 16 while (ch > '9' || ch < '0') {||| 17 if (ch == '-') f = -1;||| 18 ch = getchar();||| 19 }||| 20 while (ch >= '0' && ch <= '9') {||| 21 x = x * 10 + ch - '0';||| 22 ch = getchar();||| 23 }||| 24 return x * f;||| 25 }||| 26 void wt(long long x) {||| 27 if (x < 0) {||| 28 putchar('-');||| 29 x = -x;||| 30 }||| 31 if (x >= 10) wt(x / 10), putchar(10);||| 32 putchar(x % 10 + '0');||| 33 }||| 34 long long ksm(long long x, long long y = mod - 2, long long z = mod) {||| 35 long long ret = 1;||| 36 while (y) {||| 37 if (y & 1) ret = (ret * x) % z;||| 38 x = (x * x) % z;||| 39 y >>= 1;||| 40 }||| 41 return ret;||| 42 }||| 43 long long inv[M], fac[M], ifc[M];||| 44 void Init(long long n) {||| 45 inv[1] = 1;||| 46 for (long long i = 2; i <= n; i++)||| 47 inv[i] = 1ll * inv[mod % i] * (mod - mod / i) % mod;||| 48 fac[0] = 1;||| 49 for (long long i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 50 ifc[0] = 1;||| 51 for (long long i = 1; i <= n; i++) ifc[i] = 1ll * ifc[i - 1] * inv[i] % mod;||| 52 }||| 53 long long C(long long n, long long m) {||| 54 if (m < 0 || m > n) return 0;||| 55 return 1ll * fac[n] * ifc[m] % mod * ifc[n - m] % mod;||| 56 }||| 57 long long n, ans;||| 58 long long a[N], g[N][N];||| 59 long long f[1 << 14];||| 60 vector<long long> v1, v2;||| 61 signed main() {||| 62 Init(M - 1);||| 63 n = read();||| 64 for (long long i = 0; i < n; i++) a[i] = read();||| 65 for (long long i = 0; i < n; i++)||| 66 for (long long j = 0; j < n; j++) g[i][j] = a[i] * inv[a[i] + a[j]] % mod;||| 67 for (long long S = 1; S < (1 << n); S++) {||| 68 f[S] = 1;||| 69 for (long long T = (S - 1) & S; T; T = (T - 1) & S) {||| 70 long long X = S - T;||| 71 v1.clear();||| 72 v2.clear();||| 73 for (long long i = 0; i < n; i++) {||| 74 if (T >> i & 1) v1.push_back(i);||| 75 if (X >> i & 1) v2.push_back(i);||| 76 }||| 77 long long P = 1;||| 78 for (long long i : v1)||| 79 for (long long j : v2) P = P * g[i][j] % mod;||| 80 f[S] = (f[S] - P * f[T] % mod + mod) % mod;||| 81 }||| 82 }||| 83 for (long long S = 1; S < (1 << n); S++) {||| 84 v1.clear();||| 85 v2.clear();||| 86 for (long long i = 0; i < n; i++)||| 87 if (S >> i & 1)||| 88 v1.push_back(i);||| 89 else||| 90 v2.push_back(i);||| 91 long long P = 1;||| 92 for (long long i : v1)||| 93 for (long long j : v2) P = P * g[i][j] % mod;||| 94 ans = (ans + P * f[S] % mod * v1.size()) % mod;||| 95 }||| 96 cout << (ans + mod) % mod << ""\n"";||| 97 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 #pragma GCC target( \||| 5 ""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native"")||| 6 using namespace std;||| 7 const long long N = 15;||| 8 const long long M = 2e6 + 5;||| 9 const long long SZ = 550;||| 10 const double eps = 1e-9;||| 11 const long long mod = 1e9 + 7;||| 12 const long long inf = 0x3f3f3f3f3f3f3f;||| 13 long long read() {||| 14 long long x = 0, f = 1;||| 15 char ch = getchar();||| 16 while (ch > '9' || ch < '0') {||| 17 if (ch == '-') f = -1;||| 18 ch = getchar();||| 19 }||| 20 while (ch >= '0' && ch <= '9') {||| 21 x = x * 10 + ch - '0';||| 22 ch = getchar();||| 23 }||| 24 return x * f;||| 25 }||| 26 void wt(long long x) {||| 27 if (x < 0) {||| 28 putchar('-');||| 29 x = -x;||| 30 }||| 31 if (x >= 10) wt(x / 10), putchar(10);||| 32 putchar(x % 10 + '0');||| 33 }||| 34 long long ksm(long long x, long long y = mod - 2, long long z = mod) {||| 35 long long ret = 1;||| 36 while (y) {||| 37 if (y & 1) ret = (ret * x) % z;||| 38 x = (x * x) % z;||| 39 y >>= 1;||| 40 }||| 41 return ret;||| 42 }||| 43 long long inv[M], fac[M], ifc[M];||| 44 void Init(long long n) {||| 45 inv[1] = 1;||| 46 for (long long i = 2; i <= n; i++)||| 47 inv[i] = 1ll * inv[mod % i] * (mod - mod / i) % mod;||| 48 fac[0] = 1;||| 49 for (long long i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 50 ifc[0] = 1;||| 51 for (long long i = 1; i <= n; i++) ifc[i] = 1ll * ifc[i - 1] * inv[i] % mod;||| 52 }||| 53 long long C(long long n, long long m) {||| 54 if (m < 0 || m > n) return 0;||| 55 return 1ll * fac[n] * ifc[m] % mod * ifc[n - m] % mod;||| 56 }||| 57 long long n, ans;||| 58 long long a[N], g[N][N];||| 59 long long f[1 << 14];||| 60 vector<long long> v1, v2;||| 61 signed main() {||| 62 Init(M - 1);||| 63 n = read();||| 64 for (long long i = 0; i < n; i++) a[i] = read();||| 65 for (long long i = 0; i < n; i++)||| 66 for (long long j = 0; j < n; j++) g[i][j] = a[i] * inv[a[i] + a[j]] % mod;||| 67 for (long long S = 1; S < (1 << n); S++) {||| 68 f[S] = 1;||| 69 for (long long T = (S - 1) & S; T; T = (T - 1) & S) {||| 70 long long X = S - T;||| 71 v1.clear();||| 72 v2.clear();||| 73 for (long long i = 0; i < n; i++) {||| 74 if (T >> i & 1) v1.push_back(i);||| 75 if (X >> i & 1) v2.push_back(i);||| 76 }||| 77 long long P = 1;||| 78 for (long long i : v1)||| 79 for (long long j : v2) P = P * g[i][j] % mod;||| 80 f[S] = (f[S] - P * f[T] % mod) % mod;||| 81 }||| 82 }||| 83 for (long long S = 1; S < (1 << n); S++) {||| 84 v1.clear();||| 85 v2.clear();||| 86 for (long long i = 0; i < n; i++)||| 87 if (S >> i & 1)||| 88 v1.push_back(i);||| 89 else||| 90 v2.push_back(i);||| 91 long long P = 1;||| 92 for (long long i : v1)||| 93 for (long long j : v2) P = P * g[i][j] % mod;||| 94 ans = (ans + P * f[S] % mod * v1.size()) % mod;||| 95 }||| 96 cout << (ans + mod) % mod << ""\n"";||| 97 }||| "	80 f[S] = (f[S] - P * f[T] % mod + mod) % mod;
49	37	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power[15];||| 4 long long prob[15][15];||| 5 long long py[1 << 15][15];||| 6 long long dp[1 << 15];||| 7 const long long mod = 1e9 + 7;||| 8 long long ksm(long long a, long long b) {||| 9 long long ans = 1;||| 10 while (b) {||| 11 if (b & 1) ans = ans * a % mod;||| 12 a = a * a % mod;||| 13 b >>= 1;||| 14 }||| 15 return ans;||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 0; i < n; i++) cin >> power[i];||| 24 for (int i = 0; i < n; i++) {||| 25 for (int j = 0; j < n; j++) {||| 26 prob[i][j] = power[i] * ksm(power[i] + power[j], mod - 2) % mod;||| 27 }||| 28 }||| 29 for (int i = 0; i < n; i++) {||| 30 for (int j = 0; j < 1 << n; j++) {||| 31 long long cur = 1;||| 32 for (int k = 0; k < n; k++) {||| 33 if (j & (1 << k)) cur = cur * prob[k][i] % mod;||| 34 }||| 35 py[j][i] = cur;||| 36 }||| 37 }||| 38 for (int i = 1; i < 1 << n; i++) {||| 39 long long res = 1;||| 40 vector<int> pos;||| 41 for (int j = 0; j < n; j++) {||| 42 if (i & (1 << j)) pos.push_back(j);||| 43 }||| 44 int sz = pos.size();||| 45 for (int j = 1; j < (1 << sz) - 1; j++) {||| 46 int val = 0;||| 47 for (int k = 0; k < sz; k++) {||| 48 if (j & (1 << k)) val += 1 << pos[k];||| 49 }||| 50 long long cur = dp[val];||| 51 for (int k = 0; k < sz; k++) {||| 52 if (!(j & (1 << k))) cur = cur * py[val][pos[k]] % mod;||| 53 }||| 54 res = (res - cur) % mod;||| 55 }||| 56 dp[i] = res;||| 57 }||| 58 long long ans = 0;||| 59 for (int i = 0; i < 1 << n; i++) {||| 60 long long cur = 1;||| 61 for (int j = 0; j < n; j++) {||| 62 if (!(i & (1 << j))) cur = cur * py[i][j] % mod;||| 63 }||| 64 ans = (ans + (long long)__builtin_popcount(i) * dp[i] % mod * cur) % mod;||| 65 }||| 66 cout << (ans + mod) % mod << '\n';||| 67 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long power[15];||| 4 long long prob[15][15];||| 5 long long py[1 << 15][15];||| 6 long long dp[1 << 15];||| 7 const long long mod = 1e9 + 7;||| 8 long long ksm(long long a, long long b) {||| 9 long long ans = 1;||| 10 while (b) {||| 11 if (b & 1) ans = ans * a % mod;||| 12 a = a * a % mod;||| 13 b >>= 1;||| 14 }||| 15 return ans;||| 16 }||| 17 int main() {||| 18 ios::sync_with_stdio(false);||| 19 cin.tie(0);||| 20 cout.tie(0);||| 21 int n;||| 22 cin >> n;||| 23 for (int i = 0; i < n; i++) cin >> power[i];||| 24 for (int i = 0; i < n; i++) {||| 25 for (int j = 0; j < n; j++) {||| 26 prob[i][j] = power[i] * ksm(power[i] + power[j], mod - 2) % mod;||| 27 }||| 28 }||| 29 for (int i = 0; i < n; i++) {||| 30 for (int j = 0; j < 1 << n; j++) {||| 31 long long cur = 1;||| 32 for (int k = 0; k < n; k++) {||| 33 if (j & (1 << k)) cur = cur * prob[k][i] % mod;||| 34 }||| 35 py[j][i] = cur;||| 36 }||| 37 }||| 38 for (int i = 1; i < 1 << n; i++) {||| 39 long long res = 1;||| 40 vector<int> pos;||| 41 for (int j = 0; j < n; j++) {||| 42 if (i & (1 << j)) pos.push_back(j);||| 43 }||| 44 int sz = pos.size();||| 45 for (int j = 1; j < (1 << sz) - 1; j++) {||| 46 int val = 0;||| 47 for (int k = 0; k < sz; k++) {||| 48 if (j & (1 << k)) val += 1 << pos[k];||| 49 }||| 50 long long cur = dp[val];||| 51 for (int k = 0; k < sz; k++) {||| 52 if (!(j & (1 << k))) cur = cur * py[val][pos[k]] % mod;||| 53 }||| 54 res = (res - cur) % mod;||| 55 }||| 56 dp[i] = res;||| 57 }||| 58 long long ans = 0;||| 59 for (int i = 0; i < 1 << n; i++) {||| 60 long long cur = 1;||| 61 for (int j = 0; j < n; j++) {||| 62 if (!(i & (1 << j))) cur = cur * py[i][j] % mod;||| 63 }||| 64 ans = (ans + (long long)__builtin_popcount(i) * dp[i] * cur) % mod;||| 65 }||| 66 cout << (ans + mod) % mod << '\n';||| 67 }||| 	64 ans = (ans + (long long)__builtin_popcount(i) * dp[i] % mod * cur) % mod;
49	38	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long exp(long long x, long long y) {||| 4 long long MOD = 1000000007;||| 5 if (y == 1) {||| 6 return x;||| 7 }||| 8 long long z = exp(x, y / 2);||| 9 z = (z * z) % MOD;||| 10 if (y % 2 == 1) {||| 11 z = (z * x) % MOD;||| 12 }||| 13 return z;||| 14 }||| 15 long long inv(long long x) { return exp(x, 1000000005); }||| 16 int main() {||| 17 long long n;||| 18 cin >> n;||| 19 long long MOD = 1000000007;||| 20 long long a[n];||| 21 for (long long i = 0; i < n; i++) {||| 22 cin >> a[i];||| 23 }||| 24 long long b[n][n];||| 25 for (long long i = 0; i < n; i++) {||| 26 for (long long j = 0; j < n; j++) {||| 27 b[i][j] = (a[j] * inv(a[i] + a[j])) % MOD;||| 28 }||| 29 }||| 30 long long m = 1 << n;||| 31 long long c[n][m];||| 32 for (long long i = 0; i < n; i++) {||| 33 c[i][0] = 1;||| 34 for (long long j = 0; j < n; j++) {||| 35 for (long long k = 0; k < (1 << j); k++) {||| 36 c[i][k + (1 << j)] = (c[i][k] * b[i][j]) % MOD;||| 37 }||| 38 }||| 39 }||| 40 long long d[m];||| 41 d[0] = 0;||| 42 for (long long i = 1; i < m; i++) {||| 43 bool e[n];||| 44 long long t = 0;||| 45 for (long long j = 0; j < n; j++) {||| 46 if ((i & (1 << j)) == 0) {||| 47 e[j] = false;||| 48 } else {||| 49 e[j] = true;||| 50 t++;||| 51 }||| 52 }||| 53 long long g[t];||| 54 long long temp = 0;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (e[j]) {||| 57 g[temp] = j;||| 58 temp++;||| 59 }||| 60 }||| 61 long long f[1 << t];||| 62 f[0] = 0;||| 63 for (long long j = 0; j < t; j++) {||| 64 for (long long k = 0; k < (1 << j); k++) {||| 65 f[k + (1 << j)] = f[k] + (1 << g[j]);||| 66 }||| 67 }||| 68 long long v = 0;||| 69 for (long long j = 0; j < (1 << t) - 1; j++) {||| 70 long long w = d[f[j]];||| 71 for (long long k = 0; k < n; k++) {||| 72 if (e[k] && ((f[j] & (1 << k)) == 0)) {||| 73 w = (w * c[k][f[j]]) % MOD;||| 74 }||| 75 }||| 76 v = (v + w) % MOD;||| 77 }||| 78 d[i] = (MOD + 1 - v) % MOD;||| 79 }||| 80 long long ans = 0;||| 81 for (long long i = 0; i < m; i++) {||| 82 long long w = d[i];||| 83 long long t = 0;||| 84 for (long long k = 0; k < n; k++) {||| 85 if ((i & (1 << k)) == 0) {||| 86 w = (w * c[k][i]) % MOD;||| 87 } else {||| 88 t++;||| 89 }||| 90 }||| 91 ans = (ans + (w * t)) % MOD;||| 92 }||| 93 cout << ans << '\n';||| 94 return 0;||| 95 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long exp(long long x, long long y) {||| 4 long long MOD = 1000000007;||| 5 if (y == 1) {||| 6 return x;||| 7 }||| 8 long long z = exp(x, y / 2);||| 9 z = (z * z) % MOD;||| 10 if (y % 2 == 1) {||| 11 z = (z * x) % MOD;||| 12 }||| 13 return z;||| 14 }||| 15 long long inv(long long x) { return exp(x, 1000000005); }||| 16 int main() {||| 17 long long n;||| 18 cin >> n;||| 19 long long MOD = 1000000007;||| 20 long long a[n];||| 21 for (long long i = 0; i < n; i++) {||| 22 cin >> a[i];||| 23 }||| 24 long long b[n][n];||| 25 for (long long i = 0; i < n; i++) {||| 26 for (long long j = 0; j < n; j++) {||| 27 b[i][j] = (a[j] * inv(a[i] + a[j])) % MOD;||| 28 }||| 29 }||| 30 long long m = 1 << n;||| 31 long long c[n][m];||| 32 for (long long i = 0; i < n; i++) {||| 33 c[i][0] = 1;||| 34 for (long long j = 0; j < n; j++) {||| 35 for (long long k = 0; k < (1 << j); k++) {||| 36 c[i][k + (1 << j)] = (c[i][k] * b[i][j]) % MOD;||| 37 }||| 38 }||| 39 }||| 40 long long d[m];||| 41 d[0] = 0;||| 42 for (long long i = 1; i < m; i++) {||| 43 bool e[n];||| 44 long long t = 0;||| 45 for (long long j = 0; j < n; j++) {||| 46 if ((i & (1 << j)) == 0) {||| 47 e[j] = false;||| 48 } else {||| 49 e[j] = true;||| 50 t++;||| 51 }||| 52 }||| 53 long long g[t];||| 54 long long temp = 0;||| 55 for (long long j = 0; j < n; j++) {||| 56 if (e[j]) {||| 57 g[temp] = j;||| 58 temp++;||| 59 }||| 60 }||| 61 long long f[1 << t];||| 62 f[0] = 0;||| 63 for (long long j = 0; j < t; j++) {||| 64 for (long long k = 0; k < (1 << j); k++) {||| 65 f[k + (1 << j)] = f[k] + (1 << g[j]);||| 66 }||| 67 }||| 68 long long v = 0;||| 69 for (long long j = 0; j < (1 << t) - 1; j++) {||| 70 long long w = d[f[j]];||| 71 for (long long k = 0; k < n; k++) {||| 72 if (e[k] && ((f[j] & (1 << k)) == 0)) {||| 73 w = (w * c[k][f[j]]) % MOD;||| 74 }||| 75 }||| 76 v = (v + w) % MOD;||| 77 }||| 78 d[i] = (MOD + 1 - v) % MOD;||| 79 }||| 80 long long ans = 0;||| 81 for (long long i = 0; i < n; i++) {||| 82 long long w = d[i];||| 83 long long t = 0;||| 84 for (long long k = 0; k < n; k++) {||| 85 if ((i & (1 << k)) == 0) {||| 86 w = (w * c[k][i]) % MOD;||| 87 } else {||| 88 t++;||| 89 }||| 90 }||| 91 ans = (ans + (w * t)) % MOD;||| 92 }||| 93 cout << ans << '\n';||| 94 return 0;||| 95 }||| 	81 for (long long i = 0; i < m; i++) {
49	65	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15, M = 1 << 15;||| 4 const long long mod = 1e9 + 7;||| 5 long long qpow(long long a, long long b) {||| 6 long long ans = 1;||| 7 for (; b; b >>= 1, a = a * a % mod)||| 8 if (b & 1) ans = ans * a % mod;||| 9 return ans;||| 10 }||| 11 long long dp[M], val[N][M], sum[N][M], a[N];||| 12 int main() {||| 13 int n;||| 14 scanf(""%d"", &n);||| 15 for (int i = 0; i < n; i++) scanf(""%lld"", &a[i]);||| 16 for (int i = 0; i < n; i++)||| 17 for (int j = 0; j < n; j++)||| 18 val[i][j] = a[i] * qpow(a[i] + a[j], mod - 2) % mod;||| 19 int mx = 1 << n;||| 20 for (int i = 0; i < n; i++) {||| 21 for (int j = 0; j < mx; j++) {||| 22 sum[i][j] = 1;||| 23 for (int k = 0; k < n; k++)||| 24 if ((1 << k) & j) sum[i][j] = sum[i][j] * val[i][k] % mod;||| 25 }||| 26 }||| 27 for (int i = 1; i < mx; i++) {||| 28 for (int j = 0; j < n; j++)||| 29 if (i & (1 << j)) dp[i]++;||| 30 for (int j = i & (i - 1); j; j = (j - 1) & i) {||| 31 long long del = dp[j];||| 32 for (int k = 0; k < n; k++)||| 33 if (((1 << k) & i) && !((1 << k) & j)) del = del * sum[k][j] % mod;||| 34 dp[i] = (dp[i] - del + mod) % mod;||| 35 }||| 36 }||| 37 printf(""%lld\n"", dp[mx - 1]);||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 15, M = 1 << 15;||| 4 const long long mod = 1e9 + 7;||| 5 long long qpow(long long a, long long b) {||| 6 long long ans = 1;||| 7 for (; b; b >>= 1, a = a * a % mod)||| 8 if (b & 1) ans = ans * a % mod;||| 9 return ans;||| 10 }||| 11 long long dp[M], val[N][M], sum[N][M], a[N];||| 12 int main() {||| 13 int n;||| 14 scanf(""%d"", &n);||| 15 for (int i = 0; i < n; i++) scanf(""%lld"", &a[i]);||| 16 for (int i = 0; i < n; i++)||| 17 for (int j = 0; j < n; j++) val[i][j] = a[i] * qpow(a[i] + a[j], mod - 2);||| 18 int mx = 1 << n;||| 19 for (int i = 0; i < n; i++) {||| 20 for (int j = 0; j < mx; j++) {||| 21 sum[i][j] = 1;||| 22 for (int k = 0; k < n; k++)||| 23 if ((1 << k) & j) sum[i][j] = sum[i][j] * val[i][k] % mod;||| 24 }||| 25 }||| 26 for (int i = 1; i < mx; i++) {||| 27 for (int j = 0; j < n; j++)||| 28 if (i & (1 << j)) dp[i]++;||| 29 for (int j = i & (i - 1); j; j = (j - 1) & i) {||| 30 long long del = dp[j];||| 31 for (int k = 0; k < n; k++)||| 32 if (((1 << k) & i) && !((1 << k) & j)) del = del * sum[k][j] % mod;||| 33 dp[i] = (dp[i] - del + mod) % mod;||| 34 }||| 35 }||| 36 printf(""%lld\n"", dp[mx - 1]);||| 37 return 0;||| 38 }||| "	17 for (int j = 0; j < n; j++)
49	11	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007ll;||| 4 const int N = 14;||| 5 long long power(long long a, long long x) {||| 6 long long ans = 1;||| 7 while (x) {||| 8 if (x & 1) ans = ans * a % mod;||| 9 a = a * a % mod;||| 10 x >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 long long inv(long long x) { return power(x, mod - 2); }||| 15 long long h[N + 5][1 << N];||| 16 long long p[N + 5][N + 5];||| 17 long long a[N + 5], f[1 << N];||| 18 long long g[1 << N];||| 19 int cal(int x) {||| 20 int ans = 0;||| 21 while (x) {||| 22 ans += x & 1;||| 23 x >>= 1;||| 24 }||| 25 return ans;||| 26 }||| 27 int main() {||| 28 int n;||| 29 scanf(""%d"", &n);||| 30 for (int i = 1; i <= n; i++) scanf(""%lld"", &a[i]);||| 31 for (int i = 1; i <= n; i++)||| 32 for (int j = 1; j <= n; j++) p[i][j] = a[i] * inv(a[i] + a[j]) % mod;||| 33 for (int i = 1; i <= n; i++)||| 34 for (int j = 0; j < (1 << n); j++) {||| 35 if (j & (1 << (i - 1))) continue;||| 36 h[i][j] = 1;||| 37 for (int k = 1; k <= n; k++)||| 38 if (j & (1 << (k - 1))) h[i][j] = h[i][j] * p[i][k] % mod;||| 39 }||| 40 long long ans = 0;||| 41 for (int i = 1; i < 1 << n; i++) {||| 42 g[i] = 1;||| 43 for (int j = i & (i - 1); j; j = (j - 1) & i) {||| 44 for (int k = 1; k <= n; k++)||| 45 if ((i & (1 << (k - 1))) && !(j & (1 << (k - 1)))) {||| 46 g[j] = g[j ^ (1 << (k - 1))] * h[k][((1 << n) - 1) ^ i] % mod;||| 47 break;||| 48 }||| 49 f[i] = (f[i] + (mod - f[j]) * g[j] % mod) % mod;||| 50 }||| 51 for (int k = 1; k <= n; k++)||| 52 if ((i & (1 << (k - 1)))) {||| 53 g[0] = g[(1 << (k - 1))] * h[k][((1 << n) - 1) ^ i] % mod;||| 54 break;||| 55 }||| 56 f[i] = (f[i] + g[0]) % mod;||| 57 ans = (ans + f[i] * cal(i) % mod) % mod;||| 58 }||| 59 printf(""%lld"", ans);||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007ll;||| 4 const int N = 14;||| 5 long long power(long long a, long long x) {||| 6 long long ans = 1;||| 7 while (x) {||| 8 if (x & 1) ans = ans * a % mod;||| 9 a = a * a % mod;||| 10 x >>= 1;||| 11 }||| 12 return ans;||| 13 }||| 14 long long inv(long long x) { return power(x, mod - 2); }||| 15 long long h[N + 5][1 << N];||| 16 long long p[N + 5][N + 5];||| 17 long long a[N + 5], f[1 << N];||| 18 long long g[N << 5];||| 19 int cal(int x) {||| 20 int ans = 0;||| 21 while (x) {||| 22 ans += x & 1;||| 23 x >>= 1;||| 24 }||| 25 return ans;||| 26 }||| 27 int main() {||| 28 int n;||| 29 scanf(""%d"", &n);||| 30 for (int i = 1; i <= n; i++) scanf(""%lld"", &a[i]);||| 31 for (int i = 1; i <= n; i++)||| 32 for (int j = 1; j <= n; j++) p[i][j] = a[i] * inv(a[i] + a[j]) % mod;||| 33 for (int i = 1; i <= n; i++)||| 34 for (int j = 0; j < (1 << n); j++) {||| 35 if (j & (1 << (i - 1))) continue;||| 36 h[i][j] = 1;||| 37 for (int k = 1; k <= n; k++)||| 38 if (j & (1 << (k - 1))) h[i][j] = h[i][j] * p[i][k] % mod;||| 39 }||| 40 long long ans = 0;||| 41 for (int i = 1; i < 1 << n; i++) {||| 42 g[i] = 1;||| 43 for (int j = i & (i - 1); j; j = (j - 1) & i) {||| 44 for (int k = 1; k <= n; k++)||| 45 if ((i & (1 << (k - 1))) && !(j & (1 << (k - 1)))) {||| 46 g[j] = g[j ^ (1 << (k - 1))] * h[k][((1 << n) - 1) ^ i] % mod;||| 47 break;||| 48 }||| 49 f[i] = (f[i] + (mod - f[j]) * g[j] % mod) % mod;||| 50 }||| 51 for (int k = 1; k <= n; k++)||| 52 if ((i & (1 << (k - 1)))) {||| 53 g[0] = g[(1 << (k - 1))] * h[k][((1 << n) - 1) ^ i] % mod;||| 54 break;||| 55 }||| 56 f[i] = (f[i] + g[0]) % mod;||| 57 ans = (ans + f[i] * cal(i) % mod) % mod;||| 58 }||| 59 printf(""%lld"", ans);||| 60 return 0;||| 61 }||| "	18 long long g[1 << N];
49	70	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = static_cast<long long>(1e9 + 7);||| 4 long long P, Q = 1;||| 5 int n;||| 6 long long a[15];||| 7 pair<long long, long long> f[15][1 << 14];||| 8 pair<long long, long long> g[5000000];||| 9 pair<long long, long long> p[1 << 14];||| 10 pair<long long, long long> h[1 << 14];||| 11 int count(int x) {||| 12 if (!x) return 0;||| 13 return (x & 1) + count(x >> 1);||| 14 }||| 15 void Init_F() {||| 16 for (int i = 1; i <= n; ++i) {||| 17 for (int s = 0; s < (1 << n); ++s) {||| 18 if ((1 << (i - 1)) & s) {||| 19 continue;||| 20 }||| 21 f[i][s] = make_pair(1, 1);||| 22 for (int j = 1; j <= n; ++j) {||| 23 if ((1 << (j - 1)) & s) {||| 24 f[i][s].first = f[i][s].first * a[i] % mod;||| 25 f[i][s].second = f[i][s].second * (a[i] + a[j]) % mod;||| 26 }||| 27 }||| 28 }||| 29 }||| 30 }||| 31 int GetIndexBase3(int left, int right) {||| 32 int idx = 0;||| 33 for (int i = n; i > 0; --i) {||| 34 idx *= 3;||| 35 if (left & (1 << (i - 1))) {||| 36 idx += 1;||| 37 } else if (right & (1 << (i - 1))) {||| 38 idx += 2;||| 39 }||| 40 }||| 41 return idx;||| 42 }||| 43 void Recursively_Init_G(int left, int right, int cur) {||| 44 if (cur > n) {||| 45 int idx = GetIndexBase3(left, right);||| 46 g[idx] = make_pair(1, 1);||| 47 for (int i = 1; i <= n; ++i) {||| 48 if ((1 << (i - 1)) & left) {||| 49 g[idx].first = g[idx].first * f[i][right].first % mod;||| 50 g[idx].second = g[idx].second * f[i][right].second % mod;||| 51 }||| 52 }||| 53 } else {||| 54 Recursively_Init_G(left, right, cur + 1);||| 55 Recursively_Init_G(left + (1 << (cur - 1)), right, cur + 1);||| 56 Recursively_Init_G(left, right + (1 << (cur - 1)), cur + 1);||| 57 }||| 58 }||| 59 void Init_P() {||| 60 for (int i = 1; i < (1 << n); ++i) {||| 61 p[i] = make_pair(1, 1);||| 62 for (int j = 1; j < i; ++j) {||| 63 if ((i | j) == i) {||| 64 long long upper = p[j].first * g[GetIndexBase3(j, i - j)].first % mod;||| 65 long long lower = p[j].second * g[GetIndexBase3(j, i - j)].second % mod;||| 66 p[i].first =||| 67 ((p[i].first * lower - upper * p[i].second) % mod + mod) % mod;||| 68 p[i].second = p[i].second * lower % mod;||| 69 }||| 70 }||| 71 }||| 72 }||| 73 void Solve() {||| 74 Init_F();||| 75 Recursively_Init_G(0, 0, 1);||| 76 Init_P();||| 77 for (int i = 1; i < (1 << n); ++i) {||| 78 int j = (1 << n) - 1 - i;||| 79 long long upper =||| 80 count(i) * p[i].first % mod * g[GetIndexBase3(i, j)].first % mod;||| 81 long long lower = p[i].second * g[GetIndexBase3(i, j)].second % mod;||| 82 P = (P * lower + Q * upper) % mod;||| 83 Q = Q * lower % mod;||| 84 }||| 85 }||| 86 long long Pow(long long x, long long y) {||| 87 long long res = 1;||| 88 while (y) {||| 89 if (y & 1) {||| 90 res = res * x % mod;||| 91 }||| 92 x = x * x % mod;||| 93 y >>= 1;||| 94 }||| 95 return res;||| 96 }||| 97 int main() {||| 98 cin >> n;||| 99 for (int i = 1; i <= n; ++i) cin >> a[i];||| 100 Solve();||| 101 cout << P * Pow(Q, mod - 2) % mod << endl;||| 102 return 0;||| 103 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = static_cast<long long>(1e9 + 7);||| 4 long long P, Q = 1;||| 5 int n;||| 6 long long a[15];||| 7 pair<long long, long long> f[15][1 << 14];||| 8 pair<long long, long long> g[5000000];||| 9 pair<long long, long long> p[1 << 14];||| 10 pair<long long, long long> h[1 << 14];||| 11 int count(int x) {||| 12 if (!x) return 0;||| 13 return (x & 1) + count(x >> 1);||| 14 }||| 15 void Init_F() {||| 16 for (int i = 1; i <= n; ++i) {||| 17 for (int s = 0; s < (1 << n); ++s) {||| 18 if ((1 << (i - 1)) & s) {||| 19 continue;||| 20 }||| 21 f[i][s] = make_pair(1, 1);||| 22 for (int j = 1; j <= n; ++j) {||| 23 if ((1 << (j - 1)) & s) {||| 24 f[i][s].first = f[i][s].first * a[i] % mod;||| 25 f[i][s].second = f[i][s].second * (a[i] + a[j]) % mod;||| 26 }||| 27 }||| 28 }||| 29 }||| 30 }||| 31 int GetIndexBase3(int left, int right) {||| 32 int idx = 0;||| 33 for (int i = n; i > 0; --i) {||| 34 idx *= 3;||| 35 if (left & (1 << (i - 1))) {||| 36 idx += 1;||| 37 } else if (right & (1 << (i - 1))) {||| 38 idx += 2;||| 39 }||| 40 }||| 41 return idx;||| 42 }||| 43 void Recursively_Init_G(int left, int right, int cur) {||| 44 if (cur > n) {||| 45 int idx = GetIndexBase3(left, right);||| 46 g[idx] = make_pair(1, 1);||| 47 for (int i = 1; i <= n; ++i) {||| 48 if ((1 << (i - 1)) & left) {||| 49 g[idx].first = g[idx].first * f[i][right].first % mod;||| 50 g[idx].second = g[idx].second * f[i][right].second % mod;||| 51 }||| 52 }||| 53 } else {||| 54 Recursively_Init_G(left, right, cur + 1);||| 55 Recursively_Init_G(left + (1 << (cur - 1)), right, cur + 1);||| 56 Recursively_Init_G(left, right + (1 << (cur - 1)), cur + 1);||| 57 }||| 58 }||| 59 void Init_P() {||| 60 for (int i = 1; i < (1 << n); ++i) {||| 61 p[i] = make_pair(1, 1);||| 62 for (int j = 1; j < i; ++j) {||| 63 if ((i | j) == i) {||| 64 long long upper = p[j].first * g[GetIndexBase3(j, i - j)].first % mod;||| 65 long long lower = p[j].second * g[GetIndexBase3(j, i - j)].second % mod;||| 66 p[i].first =||| 67 ((p[i].first * lower - upper * p[i].second) % mod + mod) % mod;||| 68 p[i].second = p[i].second * lower % mod;||| 69 }||| 70 }||| 71 }||| 72 }||| 73 void Solve() {||| 74 Init_F();||| 75 Recursively_Init_G(0, 0, 1);||| 76 Init_P();||| 77 for (int i = 1; i < (1 << n); ++i) {||| 78 int j = (1 << n) - 1 - i;||| 79 long long upper =||| 80 count(i) * p[i].first * g[GetIndexBase3(i, j)].first % mod;||| 81 long long lower = p[i].second * g[GetIndexBase3(i, j)].second % mod;||| 82 P = (P * lower + Q * upper) % mod;||| 83 Q = Q * lower % mod;||| 84 }||| 85 }||| 86 long long Pow(long long x, long long y) {||| 87 long long res = 1;||| 88 while (y) {||| 89 if (y & 1) {||| 90 res = res * x % mod;||| 91 }||| 92 x = x * x % mod;||| 93 y >>= 1;||| 94 }||| 95 return res;||| 96 }||| 97 int main() {||| 98 cin >> n;||| 99 for (int i = 1; i <= n; ++i) cin >> a[i];||| 100 Solve();||| 101 cout << P * Pow(Q, mod - 2) % mod << endl;||| 102 return 0;||| 103 }||| 	80 count(i) * p[i].first % mod * g[GetIndexBase3(i, j)].first % mod;
50	87	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 5e4 + 5, MAXM = 1e7;||| 4 int n, m;||| 5 long long a[MAXN], b[MAXN];||| 6 int ans[MAXN];||| 7 int cntp, rt, lc[MAXM], rc[MAXM], tag[MAXM];||| 8 inline void add(int &k, int v) {||| 9 if (!k) k = ++cntp;||| 10 tag[k] = v;||| 11 }||| 12 inline void pushdwn(int k) {||| 13 if (tag[k]) {||| 14 add(lc[k], tag[k]);||| 15 add(rc[k], tag[k]);||| 16 tag[k] = 0;||| 17 }||| 18 }||| 19 void Modify(int &k, long long l, long long r, long long x, long long y, int v) {||| 20 if (!k) k = ++cntp;||| 21 if (x <= l && r <= y) return add(k, v);||| 22 pushdwn(k);||| 23 long long mid = l + r >> 1;||| 24 if (x <= mid) Modify(lc[k], l, mid, x, y, v);||| 25 if (mid < y) Modify(rc[k], mid + 1, r, x, y, v);||| 26 return;||| 27 }||| 28 int Query(int k, long long l, long long r, long long w) {||| 29 if (tag[k]) return k;||| 30 long long mid = l + r >> 1;||| 31 if (w <= mid) return Query(lc[k], l, mid, w);||| 32 return Query(rc[k], mid + 1, r, w);||| 33 }||| 34 int pre[MAXM];||| 35 int fnd(int x) {||| 36 if (x != pre[x]) pre[x] = fnd(pre[x]);||| 37 return pre[x];||| 38 }||| 39 vector<pair<int, int> > vec[MAXN];||| 40 void Dfs2(int k, int p) {||| 41 if (tag[k] && tag[p]) {||| 42 vec[min(tag[k], tag[p])].push_back(make_pair(k, p));||| 43 return;||| 44 }||| 45 int l = lc[k], r = lc[p];||| 46 if (!l) l = k;||| 47 if (!r) r = p;||| 48 Dfs2(l, r);||| 49 l = rc[k], r = rc[p];||| 50 if (!l) l = k;||| 51 if (!r) r = p;||| 52 Dfs2(l, r);||| 53 return;||| 54 }||| 55 void Dfs1(int k) {||| 56 if (!lc[k]) return;||| 57 Dfs2(lc[k], rc[k]);||| 58 Dfs1(lc[k]);||| 59 Dfs1(rc[k]);||| 60 return;||| 61 }||| 62 int main() {||| 63 scanf(""%d%d"", &n, &m);||| 64 add(rt, m + 1);||| 65 for (int i = 1; i <= m; i++) {||| 66 char op[10];||| 67 scanf(""%s%lld%lld"", op, a + i, b + i);||| 68 if (op[0] == 'b') ans[i] = -1, Modify(rt, 0, (1ll << n) - 1, a[i], b[i], i);||| 69 }||| 70 Dfs1(rt);||| 71 for (int i = 1; i <= cntp; i++) pre[i] = i;||| 72 ans[m + 1] = -1;||| 73 for (int i = m + 1; i; i--) {||| 74 for (int j = 0; j < vec[i].size(); j++) {||| 75 int x = fnd(vec[i][j].first), y = fnd(vec[i][j].second);||| 76 if (x != y) pre[x] = y;||| 77 }||| 78 if (!ans[i])||| 79 ans[i] = (fnd(Query(rt, 0, (1ll << n) - 1, a[i])) ==||| 80 fnd(Query(rt, 0, (1ll << n) - 1, b[i])));||| 81 }||| 82 for (int i = 1; i <= m; i++)||| 83 if (ans[i] >= 0) printf(""%d\n"", ans[i]);||| 84 return 0;||| 85 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 5e4 + 5, MAXM = 1e7;||| 4 int n, m;||| 5 long long a[MAXN], b[MAXN];||| 6 int ans[MAXN];||| 7 int cntp, rt, lc[MAXM], rc[MAXM], tag[MAXM];||| 8 inline void add(int &k, int v) {||| 9 if (!k) k = ++cntp;||| 10 tag[k] = v;||| 11 }||| 12 inline void pushdwn(int k) {||| 13 if (tag[k]) {||| 14 add(lc[k], tag[k]);||| 15 add(rc[k], tag[k]);||| 16 tag[k] = 0;||| 17 }||| 18 }||| 19 void Modify(int &k, long long l, long long r, long long x, long long y, int v) {||| 20 if (!k) k = ++cntp;||| 21 if (x <= l && r <= y) return add(k, v);||| 22 pushdwn(k);||| 23 long long mid = l + r >> 1;||| 24 if (x <= mid) Modify(lc[k], l, mid, x, y, v);||| 25 if (mid < y) Modify(rc[k], mid + 1, r, x, y, v);||| 26 return;||| 27 }||| 28 int Query(int k, long long l, long long r, long long w) {||| 29 if (tag[k]) return k;||| 30 long long mid = l + r >> 1;||| 31 if (w <= mid) return Query(lc[k], l, mid, w);||| 32 return Query(rc[k], mid + 1, r, w);||| 33 }||| 34 int pre[MAXM];||| 35 int fnd(int x) {||| 36 if (x != pre[x]) pre[x] = fnd(pre[x]);||| 37 return pre[x];||| 38 }||| 39 vector<pair<int, int> > vec[MAXN];||| 40 void Dfs2(int k, int p) {||| 41 if (tag[k] && tag[p]) {||| 42 vec[min(tag[k], tag[p])].push_back(make_pair(k, p));||| 43 return;||| 44 }||| 45 int l = lc[k], r = lc[p];||| 46 if (!l) l = k;||| 47 if (!r) r = p;||| 48 Dfs2(l, r);||| 49 l = rc[k], r = rc[p];||| 50 if (!l) l = k;||| 51 if (!r) r = p;||| 52 Dfs2(l, r);||| 53 return;||| 54 }||| 55 void Dfs1(int k) {||| 56 if (!lc[k]) return;||| 57 Dfs2(lc[k], rc[k]);||| 58 Dfs1(lc[k]);||| 59 Dfs1(rc[k]);||| 60 return;||| 61 }||| 62 int main() {||| 63 scanf(""%d%d"", &n, &m);||| 64 add(rt, m + 1);||| 65 for (int i = 1; i <= m; i++) {||| 66 char op[10];||| 67 scanf(""%s%d%d"", op, a + i, b + i);||| 68 if (op[0] == 'b') ans[i] = -1, Modify(rt, 0, (1ll << n) - 1, a[i], b[i], i);||| 69 }||| 70 Dfs1(rt);||| 71 for (int i = 1; i <= cntp; i++) pre[i] = i;||| 72 ans[m + 1] = -1;||| 73 for (int i = m + 1; i; i--) {||| 74 for (int j = 0; j < vec[i].size(); j++) {||| 75 int x = fnd(vec[i][j].first), y = fnd(vec[i][j].second);||| 76 if (x != y) pre[x] = y;||| 77 }||| 78 if (!ans[i])||| 79 ans[i] = (fnd(Query(rt, 0, (1ll << n) - 1, a[i])) ==||| 80 fnd(Query(rt, 0, (1ll << n) - 1, b[i])));||| 81 }||| 82 for (int i = 1; i <= m; i++)||| 83 if (ans[i] >= 0) printf(""%d\n"", ans[i]);||| 84 return 0;||| 85 }||| "	"67 scanf(""%s%lld%lld"", op, a + i, b + i);"
51	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 300; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 100; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 300; i += 1) {
51	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 300; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 300; i += 1) {
51	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1500; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 100; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 1500; i += 1) {
51	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1500; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 1500; i += 1) {
51	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1000; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 100; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 1000; i += 1) {
51	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1000; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 1000; i += 1) {
51	97	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 500; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 100; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 500; i += 1) {
51	152	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 500; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 constexpr int maxn = 50;||| 5 int w[maxn][maxn];||| 6 int p[maxn];||| 7 int gp(int u) { return p[u] == u ? u : p[u] = gp(p[u]); }||| 8 vector<pair<int, int>> pr[100 + 1];||| 9 int n, k, d[maxn], e[maxn];||| 10 pair<int, vector<pair<int, int>>> get(vector<pair<int, int>>& cur, int u,||| 11 int v) {||| 12 for (int i = 0; i < n; i += 1) p[i] = i;||| 13 vector<pair<int, int>> ncur;||| 14 LL nans = 0;||| 15 for (int i = 0; i < k; i += 1) e[i] = 0;||| 16 for (auto [x, y] : cur) {||| 17 if (w[u][v] < w[x][y]) {||| 18 int pu = gp(u), pv = gp(v);||| 19 if (pu != pv) {||| 20 p[pu] = pv;||| 21 ncur.push_back({u, v});||| 22 nans += w[u][v];||| 23 e[u] += 1;||| 24 e[v] += 1;||| 25 }||| 26 }||| 27 int px = gp(x), py = gp(y);||| 28 if (px != py) {||| 29 p[px] = py;||| 30 ncur.push_back({x, y});||| 31 nans += w[x][y];||| 32 e[x] += 1;||| 33 e[y] += 1;||| 34 }||| 35 }||| 36 for (int i = 0; i < k; i += 1)||| 37 if (e[i] > d[i]) return {INT_MAX, {}};||| 38 return {nans, ncur};||| 39 }||| 40 int main() {||| 41 cin.tie(nullptr)->sync_with_stdio(false);||| 42 cin >> n >> k;||| 43 for (int i = 0; i < k; i += 1) cin >> d[i];||| 44 for (int i = 0; i < n; i += 1)||| 45 for (int j = i + 1; j < n; j += 1) {||| 46 cin >> w[i][j];||| 47 w[j][i] = w[i][j];||| 48 pr[w[i][j]].push_back({i, j});||| 49 }||| 50 for (int i = k; i < n; i += 1) p[i] = i;||| 51 vector<pair<int, int>> p;||| 52 for (int i = 0; i < n; i += 1)||| 53 for (int j = i + 1; j < n; j += 1) p.push_back({i, j});||| 54 int res = INT_MAX;||| 55 srand(time(0));||| 56 for (int i = 0; i < 1; i += 1) {||| 57 random_shuffle(p.begin(), p.end());||| 58 int ans = 0;||| 59 vector<pair<int, int>> cur;||| 60 int r = rand() % (n - k) + k;||| 61 for (int i = 0; i < n; i += 1)||| 62 if (i != r) {||| 63 cur.push_back({i, r});||| 64 ans += w[i][r];||| 65 }||| 66 sort(cur.begin(), cur.end(),||| 67 [&](const pair<int, int>& p, const pair<int, int>& q) {||| 68 return w[p.first][p.second] < w[q.first][q.second];||| 69 });||| 70 while (true) {||| 71 res = min(res, ans);||| 72 int ok = 1;||| 73 for (auto [i, j] : p) {||| 74 auto [nans, ncur] = get(cur, i, j);||| 75 if (nans < ans) {||| 76 ans = nans;||| 77 ncur.swap(cur);||| 78 ok = 0;||| 79 }||| 80 }||| 81 if (ok) break;||| 82 }||| 83 res = min(res, ans);||| 84 }||| 85 cout << res;||| 86 return 0;||| 87 }||| 	56 for (int i = 0; i < 500; i += 1) {
52	110	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 sort(a.begin(), a.end());||| 16 vector<long long> pref(n + 1);||| 17 for (int i = 0; i < n; i++) {||| 18 pref[i + 1] = pref[i] + a[i];||| 19 }||| 20 double ans = -1e30;||| 21 for (int i = 0; i < n - 1; i++) {||| 22 double x = (double)pref[i + 1] / (i + 1);||| 23 double y = (double)(pref[n] - pref[i + 1]) / (n - i - 1);||| 24 ans = max(ans, x + y);||| 25 }||| 26 cout << fixed << setprecision(17) << ans << '\n';||| 27 }||| 28 return 0;||| 29 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n);||| 12 for (int i = 0; i < n; i++) {||| 13 cin >> a[i];||| 14 }||| 15 sort(a.begin(), a.end());||| 16 vector<int> pref(n + 1);||| 17 for (int i = 0; i < n; i++) {||| 18 pref[i + 1] = pref[i] + a[i];||| 19 }||| 20 double ans = -1e30;||| 21 for (int i = 0; i < n - 1; i++) {||| 22 double x = (double)pref[i + 1] / (i + 1);||| 23 double y = (double)(pref[n] - pref[i + 1]) / (n - i - 1);||| 24 ans = max(ans, x + y);||| 25 }||| 26 cout << fixed << setprecision(17) << ans << '\n';||| 27 }||| 28 return 0;||| 29 }||| 	16 vector<long long> pref(n + 1);
52	222	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""sse4"")||| 4 using namespace std;||| 5 template <class T>||| 6 bool ckmin(T& a, const T& b) {||| 7 return b < a ? a = b, 1 : 0;||| 8 }||| 9 template <class T>||| 10 bool ckmax(T& a, const T& b) {||| 11 return a < b ? a = b, 1 : 0;||| 12 }||| 13 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 14 const int MOD = 1000000007;||| 15 const char nl = '\n';||| 16 const int MX = 100001;||| 17 void ap_99() {||| 18 freopen(""input.txt"", ""r"", stdin);||| 19 freopen(""output.txt"", ""w"", stdout);||| 20 }||| 21 void solve() {||| 22 int n;||| 23 cin >> n;||| 24 vector<int> v;||| 25 long double sum = 0;||| 26 for (int i = 0; i < (n); i++) {||| 27 int t;||| 28 cin >> t;||| 29 sum += t;||| 30 v.push_back(t);||| 31 }||| 32 sort(v.begin(), v.end());||| 33 reverse(v.begin(), v.end());||| 34 long double avg = 0;||| 35 long double sum1 = 0;||| 36 long double sum2 = 0;||| 37 long double mx = -2000000001;||| 38 for (int i = 0; i < (n - 1); i++) {||| 39 sum1 += v[i];||| 40 sum2 = sum - sum1;||| 41 avg = sum1 / (i + 1) + sum2 / (n - i - 1);||| 42 if (avg > mx) {||| 43 mx = avg;||| 44 }||| 45 }||| 46 cout << fixed << setprecision(12) << mx;||| 47 cout << '\n';||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 int T = 1;||| 53 cin >> T;||| 54 while (T--) {||| 55 solve();||| 56 }||| 57 return 0;||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 #pragma GCC target(""sse4"")||| 4 using namespace std;||| 5 template <class T>||| 6 bool ckmin(T& a, const T& b) {||| 7 return b < a ? a = b, 1 : 0;||| 8 }||| 9 template <class T>||| 10 bool ckmax(T& a, const T& b) {||| 11 return a < b ? a = b, 1 : 0;||| 12 }||| 13 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 14 const int MOD = 1000000007;||| 15 const char nl = '\n';||| 16 const int MX = 100001;||| 17 void ap_99() {||| 18 freopen(""input.txt"", ""r"", stdin);||| 19 freopen(""output.txt"", ""w"", stdout);||| 20 }||| 21 void solve() {||| 22 int n;||| 23 cin >> n;||| 24 vector<int> v;||| 25 long double sum = 0;||| 26 for (int i = 0; i < (n); i++) {||| 27 int t;||| 28 cin >> t;||| 29 sum += t;||| 30 v.push_back(t);||| 31 }||| 32 sort(v.begin(), v.end());||| 33 reverse(v.begin(), v.end());||| 34 long double avg = 0;||| 35 long double sum1 = 0;||| 36 long double sum2 = 0;||| 37 long double mx = -1000000001;||| 38 for (int i = 0; i < (n); i++) {||| 39 sum1 += v[i];||| 40 sum2 = sum - sum1;||| 41 avg = sum1 / (i + 1) + sum2 / (n - i - 1);||| 42 if (avg > mx) {||| 43 mx = avg;||| 44 }||| 45 }||| 46 cout << fixed << setprecision(9) << mx;||| 47 cout << '\n';||| 48 }||| 49 int main() {||| 50 ios_base::sync_with_stdio(0);||| 51 cin.tie(0);||| 52 int T = 1;||| 53 cin >> T;||| 54 while (T--) {||| 55 solve();||| 56 }||| 57 return 0;||| 58 }||| "	37 long double mx = -2000000001;
52	49	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, n;||| 5 cin >> t;||| 6 while (t--) {||| 7 double s = 0.0;||| 8 cin >> n;||| 9 int ara[n];||| 10 for (long long int i = 0; i < n; i++) {||| 11 cin >> ara[i];||| 12 s += ara[i];||| 13 }||| 14 sort(ara, ara + n);||| 15 s -= ara[n - 1];||| 16 s = s / (n - 1) * 1.0 + ara[n - 1] * 1.0;||| 17 printf(""%0.8lf\n"", s);||| 18 }||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long int t, n;||| 5 cin >> t;||| 6 while (t--) {||| 7 double s = 0.0;||| 8 cin >> n;||| 9 int ara[n];||| 10 for (long long int i = 0; i < n; i++) {||| 11 cin >> ara[i];||| 12 s += ara[i];||| 13 }||| 14 sort(ara, ara + n);||| 15 s -= ara[n - 1];||| 16 s = s / (n - 1) * 1.0 + ara[n - 1] * 1.0;||| 17 printf(""%0.8lf"", s);||| 18 }||| 19 }||| "	"17 printf(""%0.8lf\n"", s);"
52	130	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 double sum = 0.0;||| 8 for (long long i = 0; i < n; i++) {||| 9 cin >> a[i];||| 10 sum += a[i];||| 11 }||| 12 sort(a, a + n);||| 13 sum -= a[n - 1];||| 14 sum = sum / (n - 1);||| 15 double ans = (a[n - 1] / 1) + sum;||| 16 printf(""%.9f\n"", ans);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 cout.tie(NULL);||| 22 long long test = 1;||| 23 cin >> test;||| 24 while (test--) {||| 25 solve();||| 26 }||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 long long a[n];||| 7 double sum = 0.0;||| 8 for (long long i = 0; i < n; i++) {||| 9 cin >> a[i];||| 10 sum += a[i];||| 11 }||| 12 sort(a, a + n);||| 13 sum -= a[n - 1];||| 14 sum = sum / (n - 1);||| 15 double ans = (a[n - 1] / 1) + sum;||| 16 printf(""%.9f"", ans);||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 cout.tie(NULL);||| 22 long long test = 1;||| 23 cin >> test;||| 24 while (test--) {||| 25 solve();||| 26 }||| 27 return 0;||| 28 }||| "	"16 printf(""%.9f\n"", ans);"
53	399	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, k;||| 8 cin >> n >> k;||| 9 vector<pair<int, int>> a(n);||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i].first;||| 12 a[i].second = i;||| 13 }||| 14 sort(a.begin(), a.end());||| 15 int j = 0, part = 1;||| 16 for (j = 1; j < n; j++) {||| 17 if (a[j - 1].second + 1 != a[j].second) {||| 18 part++;||| 19 }||| 20 }||| 21 if (part <= k) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n, k;||| 8 cin >> n >> k;||| 9 vector<pair<int, int>> a(n);||| 10 for (int i = 0; i < n; i++) {||| 11 cin >> a[i].first;||| 12 a[i].second = i;||| 13 }||| 14 sort(a.begin(), a.end());||| 15 int j = 0, part = 0;||| 16 for (j = 1; j < n; j++) {||| 17 if (a[j - 1].second + 1 != a[j].second) {||| 18 part++;||| 19 }||| 20 }||| 21 if (part <= k) {||| 22 cout << ""YES"" << endl;||| 23 } else {||| 24 cout << ""NO"" << endl;||| 25 }||| 26 }||| 27 }||| "	15 int j = 0, part = 1;
53	373	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(long long n) {||| 4 if (n == 1) return false;||| 5 if (n == 2) return true;||| 6 for (long long i = 2; i * i <= n; i++) {||| 7 if (n % i == 0) return false;||| 8 }||| 9 return true;||| 10 }||| 11 void solve() {||| 12 long long n, k;||| 13 cin >> n >> k;||| 14 vector<pair<long long, long long>> a(n);||| 15 long long y = 0;||| 16 long long i = 0;||| 17 for (auto &x : a) {||| 18 cin >> x.first;||| 19 x.second = i;||| 20 i++;||| 21 }||| 22 sort(a.begin(), a.end());||| 23 for (long long i = 0; i < n - 1; i++) {||| 24 if (a[i + 1].second - 1 != a[i].second) {||| 25 y++;||| 26 }||| 27 }||| 28 if (y + 1 <= k) {||| 29 cout << ""Yes"" << endl;||| 30 } else||| 31 cout << ""No"" << endl;||| 32 }||| 33 int32_t main() {||| 34 ios_base::sync_with_stdio(false);||| 35 cin.tie(nullptr);||| 36 cout.tie(nullptr);||| 37 long long t;||| 38 cin >> t;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(long long n) {||| 4 if (n == 1) return false;||| 5 if (n == 2) return true;||| 6 for (long long i = 2; i * i <= n; i++) {||| 7 if (n % i == 0) return false;||| 8 }||| 9 return true;||| 10 }||| 11 void solve() {||| 12 long long n, k;||| 13 cin >> n >> k;||| 14 vector<pair<long long, long long>> a(n);||| 15 long long y = 0;||| 16 long long i = 0;||| 17 for (auto &x : a) {||| 18 cin >> x.first;||| 19 x.second = i;||| 20 i++;||| 21 }||| 22 sort(a.begin(), a.end());||| 23 for (long long i = 0; i < n - 1; i++) {||| 24 if (a[i + 1].second - 1 != a[i].second) {||| 25 y++;||| 26 }||| 27 }||| 28 if (y + 1 == k) {||| 29 cout << ""Yes"" << endl;||| 30 } else||| 31 cout << ""No"" << endl;||| 32 }||| 33 int32_t main() {||| 34 ios_base::sync_with_stdio(false);||| 35 cin.tie(nullptr);||| 36 cout.tie(nullptr);||| 37 long long t;||| 38 cin >> t;||| 39 while (t--) {||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| "	28 if (y + 1 <= k) {
53	68	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second - 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c < t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second - 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c <= t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	100 if (c < t) {
53	120	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second - 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c < t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second + 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c <= t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	96 if (arr[i].second != arr[i + 1].second - 1) {
53	311	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second - 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c < t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int_fast64_t M = 1000000007;||| 4 struct snode {||| 5 int_fast64_t data;||| 6 int_fast64_t left, right;||| 7 snode* left_child;||| 8 snode* right_child;||| 9 };||| 10 int_fast64_t poww(int_fast64_t x, int_fast64_t y, int_fast64_t m) {||| 11 int_fast64_t ans = 1;||| 12 while (y) {||| 13 if (y % 2) {||| 14 ans = (ans * x) % m;||| 15 }||| 16 x = x * x % m;||| 17 y = y / 2;||| 18 }||| 19 return ans;||| 20 }||| 21 const int32_t maxm = 2000007;||| 22 int_fast64_t SOE[maxm];||| 23 int_fast64_t fact(int_fast64_t a, int_fast64_t m) {||| 24 int_fast64_t ans = 1;||| 25 while (a > 1) {||| 26 ans *= a;||| 27 ans %= m;||| 28 a--;||| 29 }||| 30 return ans;||| 31 }||| 32 int_fast64_t nCr(int_fast64_t n, int_fast64_t r, int_fast64_t m) {||| 33 int_fast64_t a = fact(n, M);||| 34 int_fast64_t ans = a;||| 35 int_fast64_t b = fact(n - r, M);||| 36 int_fast64_t c = fact(r, M);||| 37 b = poww(b, m - 2, m);||| 38 c = poww(c, m - 2, m);||| 39 ans = (ans * b) % m;||| 40 ans = (ans * c) % m;||| 41 return ans;||| 42 }||| 43 snode* make_seg_tree(snode* root, int_fast64_t arr[], int_fast64_t left,||| 44 int_fast64_t right) {||| 45 snode* temp = new snode;||| 46 temp->left = left;||| 47 temp->right = right;||| 48 temp->left_child = NULL;||| 49 temp->right_child = NULL;||| 50 if (left == right) {||| 51 return temp;||| 52 }||| 53 int_fast64_t l1, r1, l2, r2;||| 54 l1 = left;||| 55 r2 = right;||| 56 r1 = (left + right) / 2;||| 57 l2 = r1 + 1;||| 58 temp->left_child = make_seg_tree(temp, arr, l1, r1);||| 59 temp->right_child = make_seg_tree(temp, arr, l2, r2);||| 60 return temp;||| 61 }||| 62 bool check(int_fast64_t m) {}||| 63 int_fast64_t res;||| 64 void binary_search(int_fast64_t len) {||| 65 int_fast64_t l = 1, r = len;||| 66 bool res;||| 67 while (l <= r) {||| 68 int_fast64_t m = (l + r) / 2;||| 69 if (check(m)) {||| 70 res = m;||| 71 l = m + 1;||| 72 } else||| 73 r = m - 1;||| 74 }||| 75 return;||| 76 }||| 77 int_fast64_t fac[1000003];||| 78 int_fast64_t inv[1000003];||| 79 int_fast64_t ANS[1000003];||| 80 int_fast64_t nCk(int_fast64_t n, int_fast64_t k) {||| 81 int_fast64_t ANS = fac[n];||| 82 ANS *= ((inv[n - k] * inv[k]) % M);||| 83 return ANS % M;||| 84 }||| 85 void solve() {||| 86 int_fast64_t n, t;||| 87 cin >> n >> t;||| 88 pair<int_fast64_t, int_fast64_t> arr[n];||| 89 for (int_fast64_t i = 0; i < n; i++) {||| 90 cin >> arr[i].first;||| 91 arr[i].second = i;||| 92 }||| 93 sort(arr, arr + n);||| 94 int_fast64_t c = 0;||| 95 for (int_fast64_t i = 0; i < n - 1; i++) {||| 96 if (arr[i].second != arr[i + 1].second + 1) {||| 97 c++;||| 98 }||| 99 }||| 100 if (c >= t) {||| 101 cout << ""YES"" << endl;||| 102 } else {||| 103 cout << ""NO"" << endl;||| 104 };||| 105 return;||| 106 }||| 107 int32_t main() {||| 108 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 109 int_fast64_t t;||| 110 t = 1;||| 111 cin >> t;||| 112 while (t--) {||| 113 solve();||| 114 }||| 115 }||| "	96 if (arr[i].second != arr[i + 1].second - 1) {
53	404	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e5 + 10;||| 4 int n, k;||| 5 struct st {||| 6 int v, p;||| 7 };||| 8 bool cmp(st a, st b) { return a.v < b.v; }||| 9 st a[MAX];||| 10 void solve() {||| 11 sort(a + 1, a + n + 1, cmp);||| 12 int t = 0;||| 13 for (int i = 2; i <= n; ++i) {||| 14 if (a[i].p == a[i - 1].p + 1) {||| 15 while (1) {||| 16 if (a[i].p != a[i - 1].p + 1)||| 17 break;||| 18 else {||| 19 ++i;||| 20 }||| 21 }||| 22 --i;||| 23 } else {||| 24 ++t;||| 25 }||| 26 }||| 27 if (t + 1 <= k)||| 28 cout << ""YES\n"";||| 29 else||| 30 cout << ""NO\n"";||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(0), cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 while (T--) {||| 38 cin >> n >> k;||| 39 for (int i = 1; i <= n; ++i) {||| 40 cin >> a[i].v;||| 41 a[i].p = i;||| 42 }||| 43 solve();||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 1e5 + 10;||| 4 int n, k;||| 5 struct st {||| 6 int v, p;||| 7 };||| 8 bool cmp(st a, st b) { return a.v < b.v; }||| 9 st a[MAX];||| 10 void solve() {||| 11 sort(a + 1, a + n + 1, cmp);||| 12 int t = 0;||| 13 for (int i = 2; i <= n; ++i) {||| 14 if (a[i].p == a[i - 1].p + 1) {||| 15 while (1) {||| 16 if (a[i].p != a[i - 1].p + 1)||| 17 break;||| 18 else {||| 19 ++i;||| 20 }||| 21 }||| 22 --i;||| 23 } else {||| 24 ++t;||| 25 }||| 26 }||| 27 if (t + 1 == k)||| 28 cout << ""YES\n"";||| 29 else||| 30 cout << ""NO\n"";||| 31 }||| 32 int main() {||| 33 ios::sync_with_stdio(false);||| 34 cin.tie(0), cout.tie(0);||| 35 int T;||| 36 cin >> T;||| 37 while (T--) {||| 38 cin >> n >> k;||| 39 for (int i = 1; i <= n; ++i) {||| 40 cin >> a[i].v;||| 41 a[i].p = i;||| 42 }||| 43 solve();||| 44 }||| 45 return 0;||| 46 }||| "	27 if (t + 1 <= k)
53	338	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long int n, k;||| 10 cin >> n >> k;||| 11 long long int a[n + 10];||| 12 set<long long int> s;||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 s.insert(a[i]);||| 16 }||| 17 long long int ctr = 1;||| 18 for (long long int i = 0; i < n - 1; i++) {||| 19 if (a[i + 1] > a[i]) {||| 20 auto it = s.find(a[i + 1]);||| 21 --it;||| 22 if (a[i] == (*it)) {||| 23 continue;||| 24 }||| 25 }||| 26 ctr++;||| 27 }||| 28 if (ctr <= k)||| 29 cout << ""Yes\n"";||| 30 else||| 31 cout << ""No\n"";||| 32 }||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long int n, k;||| 10 cin >> n >> k;||| 11 long long int a[n + 10];||| 12 set<long long int> s;||| 13 for (long long int i = 0; i < n; i++) {||| 14 cin >> a[i];||| 15 s.insert(a[i]);||| 16 }||| 17 long long int ctr = 0;||| 18 for (long long int i = 0; i < n - 1; i++) {||| 19 if (a[i + 1] > a[i]) {||| 20 auto it = s.find(a[i + 1]);||| 21 --it;||| 22 if (a[i] == (*it)) {||| 23 continue;||| 24 }||| 25 }||| 26 ctr++;||| 27 }||| 28 if (ctr <= k)||| 29 cout << ""Yes\n"";||| 30 else||| 31 cout << ""No\n"";||| 32 }||| 33 }||| "	17 long long int ctr = 1;
53	321	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using int64 = int64_t;||| 4 vector<int> xs(100000), ys(100000);||| 5 vector<int> ms(100000);||| 6 map<int, int> xsIndexMap;||| 7 void solve() {||| 8 int n, k;||| 9 cin >> n >> k;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> xs[i];||| 12 ys[i] = xs[i];||| 13 xsIndexMap[xs[i]] = i;||| 14 }||| 15 sort(ys.begin(), ys.begin() + n);||| 16 int m = 0;||| 17 for (int i = 0; i < n; ++i) {||| 18 int y0 = ys[i];||| 19 int xStart = xsIndexMap[y0];||| 20 int xEnd = xStart + 1;||| 21 while (xEnd < n && xs[xEnd] == ys[i + xEnd - xStart]) {||| 22 ++xEnd;||| 23 }||| 24 i += xEnd - xStart - 1;||| 25 ms[m] = xEnd - xStart;||| 26 ++m;||| 27 }||| 28 bool result = false;||| 29 if (m == k) {||| 30 result = true;||| 31 } else if (m > k) {||| 32 result = false;||| 33 } else {||| 34 int m2 = m;||| 35 for (int i = 0; i < m; ++i) {||| 36 m2 += ms[i] - 1;||| 37 }||| 38 result = (m2 >= k);||| 39 }||| 40 if (result) {||| 41 cout << ""YES"" << endl;||| 42 } else {||| 43 cout << ""NO"" << endl;||| 44 }||| 45 }||| 46 int main() {||| 47 int nCases;||| 48 cin >> nCases;||| 49 for (int i = 0; i < nCases; ++i) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using int64 = int64_t;||| 4 vector<int> xs(100000), ys(100000);||| 5 vector<int> ms(100000);||| 6 map<int, int> xsIndexMap;||| 7 void solve() {||| 8 int n, k;||| 9 cin >> n >> k;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> xs[i];||| 12 ys[i] = xs[i];||| 13 xsIndexMap[xs[i]] = i;||| 14 }||| 15 sort(ys.begin(), ys.begin() + n);||| 16 int m = 0;||| 17 for (int i = 0; i < n; ++i) {||| 18 int y0 = ys[i];||| 19 int xStart = xsIndexMap[y0];||| 20 int xEnd = xStart + 1;||| 21 while (xEnd < n && xs[xEnd] == ys[i + xEnd - xStart]) {||| 22 ++xEnd;||| 23 }||| 24 i += xEnd - xStart - 1;||| 25 ms[i] = xEnd - xStart;||| 26 ++m;||| 27 }||| 28 bool result = false;||| 29 if (m == k) {||| 30 result = true;||| 31 } else if (m > k) {||| 32 result = false;||| 33 } else {||| 34 int m2 = m;||| 35 for (int i = 0; i < m; ++i) {||| 36 m2 += ms[i] - 1;||| 37 }||| 38 result = (m2 >= k);||| 39 }||| 40 if (result) {||| 41 cout << ""YES"" << endl;||| 42 } else {||| 43 cout << ""NO"" << endl;||| 44 }||| 45 }||| 46 int main() {||| 47 int nCases;||| 48 cin >> nCases;||| 49 for (int i = 0; i < nCases; ++i) {||| 50 solve();||| 51 }||| 52 return 0;||| 53 }||| "	25 ms[m] = xEnd - xStart;
54	467	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T &n) {||| 5 T w = 1;||| 6 n = 0;||| 7 char ch = getchar();||| 8 while (!isdigit(ch) && ch != EOF) {||| 9 if (ch == '-') w = -1;||| 10 ch = getchar();||| 11 }||| 12 while (isdigit(ch) && ch != EOF) {||| 13 n = (n << 1) + (n << 3) + (ch & 15);||| 14 ch = getchar();||| 15 }||| 16 n *= w;||| 17 }||| 18 const int N = 2e5 + 5;||| 19 int T, n, k;||| 20 long long a[N + 2], ia[N + 2], b[N + 2], s[N + 2];||| 21 long long ksm(long long a, long long b) {||| 22 long long x = 1;||| 23 while (b) {||| 24 if (b & 1) x = x * a % 1000000007;||| 25 a = a * a % 1000000007;||| 26 b >>= 1;||| 27 }||| 28 return x;||| 29 }||| 30 long long dp(int i) {||| 31 if (i > k) return 1;||| 32 long long res = (s[(n - 1) >> 1] + (n & 1)) * dp(i + 1) % 1000000007;||| 33 return (res + (n % 2 == 0) * ksm(b[k - i], n)) % 1000000007;||| 34 }||| 35 int main() {||| 36 read(T);||| 37 a[0] = ia[0] = 1;||| 38 for (int i = 1; i < N; i++) {||| 39 a[i] = a[i - 1] * i % 1000000007;||| 40 ia[i] = ksm(a[i], 1000000007 - 2);||| 41 }||| 42 b[0] = 1;||| 43 for (int i = 1; i < N; i++) b[i] = b[i - 1] * 2 % 1000000007;||| 44 while (T--) {||| 45 read(n);||| 46 read(k);||| 47 s[0] = 1;||| 48 for (int i = 1; (i << 1) <= n; i++)||| 49 s[i] = (s[i - 1] +||| 50 a[n] * ia[n - (i << 1)] % 1000000007 * ia[i << 1] % 1000000007) %||| 51 1000000007;||| 52 printf(""%lld\n"", dp(1));||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline void read(T &n) {||| 5 T w = 1;||| 6 n = 0;||| 7 char ch = getchar();||| 8 while (!isdigit(ch) && ch != EOF) {||| 9 if (ch == '-') w = -1;||| 10 ch = getchar();||| 11 }||| 12 while (isdigit(ch) && ch != EOF) {||| 13 n = (n << 1) + (n << 3) + (ch & 15);||| 14 ch = getchar();||| 15 }||| 16 n *= w;||| 17 }||| 18 const int N = 2e5 + 5;||| 19 int T, n, k;||| 20 long long a[N + 2], ia[N + 2], b[N + 2], s[N + 2];||| 21 long long ksm(long long a, long long b) {||| 22 long long x = 1;||| 23 while (b) {||| 24 if (b & 1) x = x * a % 1000000007;||| 25 a = a * a % 1000000007;||| 26 b >>= 1;||| 27 }||| 28 return x;||| 29 }||| 30 long long dp(int i) {||| 31 if (i > k) return 1;||| 32 long long res = (s[(n - 1) >> 1] + (n & 1)) * dp(i + 1) % 1000000007;||| 33 return (res + (n % 2 == 0) * ksm(b[k - i], n));||| 34 }||| 35 int main() {||| 36 read(T);||| 37 a[0] = ia[0] = 1;||| 38 for (int i = 1; i < N; i++) {||| 39 a[i] = a[i - 1] * i % 1000000007;||| 40 ia[i] = ksm(a[i], 1000000007 - 2);||| 41 }||| 42 b[0] = 1;||| 43 for (int i = 1; i < N; i++) b[i] = b[i - 1] * 2 % 1000000007;||| 44 while (T--) {||| 45 read(n);||| 46 read(k);||| 47 s[0] = 1;||| 48 for (int i = 1; (i << 1) <= n; i++)||| 49 s[i] = (s[i - 1] +||| 50 a[n] * ia[n - (i << 1)] % 1000000007 * ia[i << 1] % 1000000007) %||| 51 1000000007;||| 52 printf(""%lld\n"", dp(1));||| 53 }||| 54 return 0;||| 55 }||| "	33 return (res + (n % 2 == 0) * ksm(b[k - i], n)) % 1000000007;
54	214	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 const int mx = 2e5 + 5;||| 5 vector<int> fact(mx, 1), inv(mx, 1);||| 6 long long binpow(long long a, long long b, long long m) {||| 7 a %= m;||| 8 long long res = 1;||| 9 while (b > 0) {||| 10 if (b & 1) res = res * a % m;||| 11 a = a * a % m;||| 12 b >>= 1;||| 13 }||| 14 return res;||| 15 }||| 16 void precompute() {||| 17 fact[0] = inv[0] = 1;||| 18 for (int i = 1; i < mx; i++) {||| 19 fact[i] *= fact[i - 1] % mod;||| 20 inv[i] = binpow(i, mod - 2, mod);||| 21 }||| 22 }||| 23 void solve() {||| 24 long long n, k;||| 25 cin >> n >> k;||| 26 int flag = 0;||| 27 if (n % 2 == 1) flag = 1;||| 28 long long eq = 1, ans = 0;||| 29 for (int i = 1; i <= k; i++) {||| 30 if (flag == 1) {||| 31 eq *= binpow(2, n - 1, mod) + 1;||| 32 eq %= mod;||| 33 } else {||| 34 long long gr;||| 35 if (i == k)||| 36 gr = 1;||| 37 else||| 38 gr = binpow(binpow(2, n, mod) % mod, k - i, mod);||| 39 gr %= mod;||| 40 gr *= eq;||| 41 gr %= mod;||| 42 ans += gr;||| 43 eq *= binpow(2, n - 1, mod) - 1;||| 44 eq += mod;||| 45 eq %= mod;||| 46 }||| 47 }||| 48 ans += eq;||| 49 ans %= mod;||| 50 cout << ans << endl;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(NULL);||| 55 cout << fixed << setprecision(10);||| 56 int t = 1;||| 57 cin >> t;||| 58 precompute();||| 59 while (t--) solve();||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 const int mx = 2e5 + 5;||| 5 vector<int> fact(mx, 1), inv(mx, 1);||| 6 long long binpow(long long a, long long b, long long m) {||| 7 a %= m;||| 8 long long res = 1;||| 9 while (b > 0) {||| 10 if (b & 1) res = res * a % m;||| 11 a = a * a % m;||| 12 b >>= 1;||| 13 }||| 14 return res;||| 15 }||| 16 void precompute() {||| 17 fact[0] = inv[0] = 1;||| 18 for (int i = 1; i < mx; i++) {||| 19 fact[i] *= fact[i - 1] % mod;||| 20 inv[i] = binpow(i, mod - 2, mod);||| 21 }||| 22 }||| 23 void solve() {||| 24 long long n, k;||| 25 cin >> n >> k;||| 26 int flag = 0;||| 27 if (n % 2 == 1) flag = 1;||| 28 long long eq = 1, ans = 0;||| 29 for (int i = 1; i <= k; i++) {||| 30 if (flag == 1) {||| 31 eq *= binpow(2, n - 1, mod) + 1;||| 32 eq %= mod;||| 33 } else {||| 34 long long gr;||| 35 if (i == k)||| 36 gr = 1;||| 37 else||| 38 gr = binpow(binpow(2, n - 1, mod) % mod, k - i, mod);||| 39 gr %= mod;||| 40 gr *= eq;||| 41 gr %= mod;||| 42 ans += gr;||| 43 eq *= binpow(2, n - 1, mod) - 1;||| 44 eq += mod;||| 45 eq %= mod;||| 46 }||| 47 }||| 48 ans += eq;||| 49 ans %= mod;||| 50 cout << ans << endl;||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(NULL);||| 55 cout << fixed << setprecision(10);||| 56 int t = 1;||| 57 cin >> t;||| 58 precompute();||| 59 while (t--) solve();||| 60 }||| 	38 gr = binpow(binpow(2, n, mod) % mod, k - i, mod);
54	425	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 priority_queue<long long int, vector<long long int>, greater<long long int> >||| 4 pq;||| 5 double startTime;||| 6 double getCurrentTime() {||| 7 return ((double)clock() - startTime) / CLOCKS_PER_SEC;||| 8 }||| 9 bool isPrime(long long int n) {||| 10 if (n <= 1) return false;||| 11 if (n <= 3) return true;||| 12 if (n % 2 == 0 || n % 3 == 0) return false;||| 13 for (long long int i = 5; i * i <= n; i = i + 6)||| 14 if (n % i == 0 || n % (i + 2) == 0) return false;||| 15 return true;||| 16 }||| 17 long long int gcd(long long int a, long long int b) {||| 18 if (a == 0) return b;||| 19 return gcd(b % a, a);||| 20 }||| 21 long long int power(long long int x, unsigned long long int y,||| 22 long long int p) {||| 23 long long int res = 1;||| 24 x = x % p;||| 25 while (y > 0) {||| 26 if (y & 1) res = (res * x) % p;||| 27 y = y >> 1;||| 28 x = (x * x) % p;||| 29 }||| 30 return res;||| 31 }||| 32 void outP(long long int idx) { cout << ""Case #"" << idx << "": ""; }||| 33 const long long int mod = 1e9 + 7;||| 34 int32_t main() {||| 35 ios_base::sync_with_stdio(false);||| 36 cin.tie(NULL);||| 37 cout.tie(NULL);||| 38 long long int tt = 1;||| 39 cin >> tt;||| 40 while (tt--) {||| 41 long long int n, k;||| 42 cin >> n >> k;||| 43 if (k == 0) {||| 44 cout << ""1\n"";||| 45 continue;||| 46 }||| 47 long long int crr = 1;||| 48 for (long long int i = 0; i < n - 1; i++) crr = (crr * 2) % mod;||| 49 long long int p2n = crr * 2;||| 50 p2n %= mod;||| 51 long long int mlt[k];||| 52 mlt[0] = 1;||| 53 for (long long int i = 1; i < k; i++) mlt[i] = (mlt[i - 1] * p2n) % mod;||| 54 long long int abrr = 1, ans = 0;||| 55 if (n % 2 == 0) {||| 56 crr--;||| 57 for (long long int i = k - 1; i > 0; i--) {||| 58 ans = (ans + (abrr * mlt[i]) % mod) % mod;||| 59 abrr = (abrr * crr) % mod;||| 60 }||| 61 crr++;||| 62 crr %= mod;||| 63 abrr = (abrr * crr) % mod;||| 64 ans = (ans + abrr) % mod;||| 65 cout << ans << endl;||| 66 continue;||| 67 }||| 68 crr++;||| 69 crr %= mod;||| 70 ans = 1;||| 71 for (long long int i = 0; i < k; i++) ans = (ans * crr) % mod;||| 72 cout << ans << endl;||| 73 }||| 74 return 0;||| 75 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 priority_queue<long long int, vector<long long int>, greater<long long int> >||| 4 pq;||| 5 double startTime;||| 6 double getCurrentTime() {||| 7 return ((double)clock() - startTime) / CLOCKS_PER_SEC;||| 8 }||| 9 bool isPrime(long long int n) {||| 10 if (n <= 1) return false;||| 11 if (n <= 3) return true;||| 12 if (n % 2 == 0 || n % 3 == 0) return false;||| 13 for (long long int i = 5; i * i <= n; i = i + 6)||| 14 if (n % i == 0 || n % (i + 2) == 0) return false;||| 15 return true;||| 16 }||| 17 long long int gcd(long long int a, long long int b) {||| 18 if (a == 0) return b;||| 19 return gcd(b % a, a);||| 20 }||| 21 long long int power(long long int x, unsigned long long int y,||| 22 long long int p) {||| 23 long long int res = 1;||| 24 x = x % p;||| 25 while (y > 0) {||| 26 if (y & 1) res = (res * x) % p;||| 27 y = y >> 1;||| 28 x = (x * x) % p;||| 29 }||| 30 return res;||| 31 }||| 32 void outP(long long int idx) { cout << ""Case #"" << idx << "": ""; }||| 33 const long long int mod = 1e9 + 7;||| 34 int32_t main() {||| 35 ios_base::sync_with_stdio(false);||| 36 cin.tie(NULL);||| 37 cout.tie(NULL);||| 38 long long int tt = 1;||| 39 cin >> tt;||| 40 while (tt--) {||| 41 long long int n, k;||| 42 cin >> n >> k;||| 43 if (k == 0) {||| 44 cout << ""1\n"";||| 45 continue;||| 46 }||| 47 long long int crr = 1;||| 48 for (long long int i = 0; i < n - 1; i++) crr = (crr * 2) % mod;||| 49 long long int p2n = crr * 2;||| 50 p2n %= mod;||| 51 long long int mlt[k];||| 52 mlt[0] = 1;||| 53 for (long long int i = 0; i < k; i++) mlt[i] = (mlt[i - 1] * p2n) % mod;||| 54 long long int abrr = 1, ans = 0;||| 55 if (n % 2 == 0) {||| 56 crr--;||| 57 for (long long int i = k - 1; i > 0; i--) {||| 58 ans = (ans + (abrr * mlt[i]) % mod) % mod;||| 59 abrr = (abrr * crr) % mod;||| 60 }||| 61 crr++;||| 62 crr %= mod;||| 63 abrr = (abrr * crr) % mod;||| 64 ans = (ans + abrr) % mod;||| 65 cout << ans << endl;||| 66 continue;||| 67 }||| 68 crr++;||| 69 crr %= mod;||| 70 ans = 1;||| 71 for (long long int i = 0; i < k; i++) ans = (ans * crr) % mod;||| 72 cout << ans << endl;||| 73 }||| 74 return 0;||| 75 }||| "	53 for (long long int i = 1; i < k; i++) mlt[i] = (mlt[i - 1] * p2n) % mod;
54	448	"1 #include <bits/stdc++.h>||| 2 long long power(long long a, int k) {||| 3 long long p = 1;||| 4 while (k) {||| 5 if (k & 1) p = p * a % 1000000007;||| 6 a = a * a % 1000000007;||| 7 k >>= 1;||| 8 }||| 9 return p;||| 10 }||| 11 int main() {||| 12 int t;||| 13 scanf(""%d"", &t);||| 14 while (t--) {||| 15 int n, k, i, ans;||| 16 scanf(""%d%d"", &n, &k);||| 17 if (k == 0)||| 18 printf(""1\n"");||| 19 else if (n % 2 == 1)||| 20 printf(""%lld\n"", power(power(2, n - 1) + 1, k));||| 21 else {||| 22 ans = power(power(2, n - 1) - 1, k);||| 23 for (i = 0; i < k; i++)||| 24 ans = (ans +||| 25 power(power(2, n - 1) - 1, i) * power(power(2, n), k - 1 - i)) %||| 26 1000000007;||| 27 printf(""%d\n"", ans);||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 long long power(long long a, int k) {||| 3 long long p = 1;||| 4 while (k) {||| 5 if (k & 1) p = p * a % 1000000007;||| 6 a = a * a % 1000000007;||| 7 k >>= 1;||| 8 }||| 9 return p;||| 10 }||| 11 int main() {||| 12 int t;||| 13 scanf(""%d"", &t);||| 14 while (t--) {||| 15 int n, k, i, ans;||| 16 scanf(""%d%d"", &n, &k);||| 17 if (k == 0)||| 18 printf(""1\n"");||| 19 else if (n % 2 == 1)||| 20 printf(""%lld\n"", power(power(2, n - 1) + 1, k));||| 21 else {||| 22 ans = power(power(2, n - 1) - 1, n);||| 23 for (i = 0; i < k; i++)||| 24 ans = (ans +||| 25 power(power(2, n - 1) - 1, i) * power(power(2, n), k - 1 - i)) %||| 26 1000000007;||| 27 printf(""%d\n"", ans);||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	22 ans = power(power(2, n - 1) - 1, k);
54	206	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int mod_pow(int b, int p) {||| 5 int ans = 1;||| 6 while (p) {||| 7 if (p & 1) {||| 8 ans = (1ll * ans * b) % mod;||| 9 p--;||| 10 }||| 11 b = (1ll * b * b) % mod;||| 12 p /= 2;||| 13 }||| 14 return ans;||| 15 }||| 16 const int N = (2e5 + 5);||| 17 int fac[N], inv_fac[N];||| 18 void calc_fac() {||| 19 fac[0] = 1;||| 20 inv_fac[0] = 1;||| 21 for (int i = 1; i < N; i++) {||| 22 fac[i] = (1ll * fac[i - 1] * i) % mod;||| 23 inv_fac[i] = mod_pow(fac[i], mod - 2);||| 24 }||| 25 }||| 26 void solve() {||| 27 int n, k;||| 28 cin >> n >> k;||| 29 if (k == 0) {||| 30 cout << 1;||| 31 cout << '\n';||| 32 return;||| 33 }||| 34 int e = 0;||| 35 for (int i = 0; i < n; i += 2) {||| 36 e = (e + 1ll * fac[n] * inv_fac[n - i] % mod * inv_fac[i] % mod) % mod;||| 37 }||| 38 if (n & 1) e = (e + 1) % mod;||| 39 if (n & 1) {||| 40 int ans = mod_pow(e, k);||| 41 cout << ans;||| 42 cout << '\n';||| 43 return;||| 44 }||| 45 int p = mod_pow(2, n);||| 46 int pp = mod_pow(p, k);||| 47 int ans = 0;||| 48 int left = 1;||| 49 int right = pp;||| 50 for (int i = 0; i < k; i++) {||| 51 right = 1ll * right * mod_pow(p, mod - 2) % mod;||| 52 ans = (ans + 1ll * left * right) % mod;||| 53 left = (1ll * left * e) % mod;||| 54 }||| 55 ans = (ans + 1ll * left) % mod;||| 56 cout << ans;||| 57 cout << '\n';||| 58 }||| 59 int32_t main() {||| 60 ios::sync_with_stdio(0);||| 61 cin.tie(0);||| 62 calc_fac();||| 63 int tc;||| 64 cin >> tc;||| 65 while (tc--) solve();||| 66 return 0;||| 67 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int mod_pow(int b, int p) {||| 5 int ans = 1;||| 6 while (p) {||| 7 if (p & 1) {||| 8 ans = (1ll * ans * b) % mod;||| 9 p--;||| 10 }||| 11 b = (1ll * b * b) % mod;||| 12 p /= 2;||| 13 }||| 14 return ans;||| 15 }||| 16 const int N = (2e5 + 5);||| 17 int fac[N], inv_fac[N];||| 18 void calc_fac() {||| 19 fac[0] = 1;||| 20 inv_fac[0] = 1;||| 21 for (int i = 1; i < N; i++) {||| 22 fac[i] = (fac[i - 1] * i) % mod;||| 23 inv_fac[i] = mod_pow(fac[i], mod - 2);||| 24 }||| 25 }||| 26 void solve() {||| 27 int n, k;||| 28 cin >> n >> k;||| 29 if (k == 0) {||| 30 cout << 1;||| 31 cout << '\n';||| 32 return;||| 33 }||| 34 int e = 0;||| 35 for (int i = 0; i < n; i += 2) {||| 36 e = (e + 1ll * fac[n] * inv_fac[n - i] % mod * inv_fac[i] % mod) % mod;||| 37 }||| 38 if (n & 1) e = (e + 1) % mod;||| 39 if (n & 1) {||| 40 int ans = mod_pow(e, k);||| 41 cout << ans;||| 42 cout << '\n';||| 43 return;||| 44 }||| 45 int p = mod_pow(2, n);||| 46 int pp = mod_pow(p, k);||| 47 int ans = 0;||| 48 int left = 1;||| 49 int right = pp;||| 50 for (int i = 0; i < k; i++) {||| 51 right = 1ll * right * mod_pow(p, mod - 2) % mod;||| 52 ans = (ans + 1ll * left * right) % mod;||| 53 left = (1ll * left * e) % mod;||| 54 }||| 55 ans = (ans + 1ll * left) % mod;||| 56 cout << ans;||| 57 cout << '\n';||| 58 }||| 59 int32_t main() {||| 60 ios::sync_with_stdio(0);||| 61 cin.tie(0);||| 62 calc_fac();||| 63 int tc;||| 64 cin >> tc;||| 65 while (tc--) solve();||| 66 return 0;||| 67 }||| 	22 fac[i] = (1ll * fac[i - 1] * i) % mod;
54	1	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 int n, k;||| 5 long long f[200005];||| 6 long long ff;||| 7 long long powlc(long long ac, long long bc) {||| 8 if (bc == 0) return 1;||| 9 if (bc == 1) return (ac % mod);||| 10 long long cc = powlc(ac, bc / 2) % mod;||| 11 cc = (cc * cc) % mod;||| 12 if (bc % 2 == 1) cc = (cc * ac) % mod;||| 13 return cc;||| 14 }||| 15 long long Cmod(int nx, int mx) {||| 16 long long res =||| 17 ((f[nx] * powlc(f[mx], mod - 2) % mod) * powlc(f[nx - mx], mod - 2)) %||| 18 mod;||| 19 return res;||| 20 }||| 21 void process() {||| 22 f[0] = 1;||| 23 for (int i = 1; i <= 200000; i++) {||| 24 f[i] = (f[i - 1] * i) % mod;||| 25 }||| 26 int tcase = 1;||| 27 cin >> tcase;||| 28 while (tcase--) {||| 29 cin >> n >> k;||| 30 if (k == 0) {||| 31 cout << 1 << endl;||| 32 continue;||| 33 }||| 34 ff = 1;||| 35 for (int i = 2; i <= n; i += 2) {||| 36 ff = (ff + Cmod(n, i)) % mod;||| 37 }||| 38 if (n % 2 == 1)||| 39 ff = (ff + 1) % mod;||| 40 else||| 41 ff = (ff - 1 + mod) % mod;||| 42 long long res = 0;||| 43 long long bounus = 1;||| 44 for (int i = k; i >= 1; i--) {||| 45 if (n % 2 == 0) {||| 46 res = (res + (bounus * powlc(powlc(2, i - 1), n) % mod)) % mod;||| 47 }||| 48 bounus = (bounus * ff) % mod;||| 49 }||| 50 res = (res + bounus) % mod;||| 51 cout << res << endl;||| 52 }||| 53 }||| 54 int online = 2;||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 if (online == 0) {||| 60 freopen(""in.inp"", ""r"", stdin);||| 61 freopen(""out.out"", ""w"", stdout);||| 62 } else if (online == 1) {||| 63 freopen("".inp"", ""r"", stdin);||| 64 freopen("".out"", ""w"", stdout);||| 65 }||| 66 process();||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 int n, k;||| 5 long long f[200005];||| 6 long long ff;||| 7 long long powlc(long long ac, long long bc) {||| 8 if (bc == 0) return 1;||| 9 if (bc == 1) return (ac % mod);||| 10 long long cc = powlc(ac, bc / 2) % mod;||| 11 cc = (cc * cc) % mod;||| 12 if (bc % 2 == 1) cc = (cc * ac) % mod;||| 13 return cc;||| 14 }||| 15 long long Cmod(int nx, int mx) {||| 16 long long res =||| 17 ((f[nx] * powlc(f[mx], mod - 2) % mod) * powlc(f[nx - mx], mod - 2)) %||| 18 mod;||| 19 return res;||| 20 }||| 21 void process() {||| 22 f[0] = 1;||| 23 for (int i = 1; i <= 200000; i++) {||| 24 f[i] = (f[i - 1] * i) % mod;||| 25 }||| 26 int tcase = 1;||| 27 cin >> tcase;||| 28 while (tcase--) {||| 29 cin >> n >> k;||| 30 if (k == 0) {||| 31 cout << 1 << endl;||| 32 continue;||| 33 }||| 34 ff = 1;||| 35 for (int i = 2; i <= n; i += 2) {||| 36 ff = (ff + Cmod(n, i)) % mod;||| 37 }||| 38 if (n % 2 == 1)||| 39 ff = (ff + 1) % mod;||| 40 else||| 41 ff = (ff - 1 + mod) % mod;||| 42 long long res = 0;||| 43 long long bounus = 1;||| 44 for (int i = k; i >= 1; i--) {||| 45 if (n % 2 == 0) {||| 46 res = (res + (bounus * powlc(powlc(2, k - 1), n) % mod)) % mod;||| 47 }||| 48 bounus = (bounus * ff) % mod;||| 49 }||| 50 res = (res + bounus) % mod;||| 51 cout << res << endl;||| 52 }||| 53 }||| 54 int online = 2;||| 55 int main() {||| 56 ios::sync_with_stdio(0);||| 57 cin.tie(0);||| 58 cout.tie(0);||| 59 if (online == 0) {||| 60 freopen(""in.inp"", ""r"", stdin);||| 61 freopen(""out.out"", ""w"", stdout);||| 62 } else if (online == 1) {||| 63 freopen("".inp"", ""r"", stdin);||| 64 freopen("".out"", ""w"", stdout);||| 65 }||| 66 process();||| 67 return 0;||| 68 }||| "	46 res = (res + (bounus * powlc(powlc(2, i - 1), n) % mod)) % mod;
54	360	1 #include <bits/stdc++.h>||| 2 long long luth[200005];||| 3 class game {||| 4 private:||| 5 int n, k;||| 6 ||| 7 public:||| 8 long long dp[200005][5];||| 9 long long res = 0;||| 10 void in() {||| 11 int x, y;||| 12 std::cin >> x >> y;||| 13 n = x;||| 14 k = y;||| 15 }||| 16 void solve() {||| 17 dp[0][0] = luth[n];||| 18 for (int i = 1; i <= k; i++) {||| 19 dp[i][0] = (dp[i - 1][0] * luth[n]) % 1000000007;||| 20 }||| 21 if (k == 0) {||| 22 res = 1;||| 23 return;||| 24 }||| 25 if (k == 1) {||| 26 if (n % 2 == 1) {||| 27 res = ((luth[n - 1]) + 1) % 1000000007;||| 28 } else {||| 29 res = (luth[n - 1]) % 1000000007;||| 30 }||| 31 return;||| 32 }||| 33 if (n % 2 == 1) {||| 34 dp[0][1] = (luth[n - 1] + 1) % 1000000007;||| 35 for (int i = 1; i < k; i++) {||| 36 dp[i][1] = (dp[i - 1][1] * (luth[n - 1] + 1)) % 1000000007;||| 37 }||| 38 } else {||| 39 dp[0][1] = (luth[n - 1]) % 1000000007;||| 40 for (int i = 1; i < k; i++) {||| 41 dp[i][1] =||| 42 ((dp[i - 1][1] * (luth[n - 1] - 1)) + dp[i - 1][0]) % 1000000007;||| 43 }||| 44 }||| 45 res = dp[k - 1][1];||| 46 }||| 47 void out() { std::cout << res << std::endl; }||| 48 };||| 49 int main() {||| 50 int tests;||| 51 std::cin >> tests;||| 52 luth[0] = 1;||| 53 for (int i = 1; i <= 200003; i++) {||| 54 luth[i] = luth[i - 1] * 2;||| 55 if (luth[i] >= 1000000007) luth[i] = luth[i] % 1000000007;||| 56 }||| 57 for (int i = 0; i < tests; i++) {||| 58 game *obj = new game;||| 59 obj->in();||| 60 obj->solve();||| 61 obj->out();||| 62 }||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 long long luth[200005];||| 3 class game {||| 4 private:||| 5 int n, k;||| 6 ||| 7 public:||| 8 long long dp[200005][5];||| 9 long long res = 0;||| 10 void in() {||| 11 int x, y;||| 12 std::cin >> x >> y;||| 13 n = x;||| 14 k = y;||| 15 }||| 16 void solve() {||| 17 dp[0][0] = luth[n];||| 18 for (int i = 1; i <= n; i++) {||| 19 dp[i][0] = (dp[i - 1][0] * luth[n]) % 1000000007;||| 20 }||| 21 if (k == 0) {||| 22 res = 1;||| 23 return;||| 24 }||| 25 if (k == 1) {||| 26 if (n % 2 == 1) {||| 27 res = ((luth[n - 1]) + 1) % 1000000007;||| 28 } else {||| 29 res = (luth[n - 1]) % 1000000007;||| 30 }||| 31 return;||| 32 }||| 33 if (n % 2 == 1) {||| 34 dp[0][1] = (luth[n - 1] + 1) % 1000000007;||| 35 for (int i = 1; i < k; i++) {||| 36 dp[i][1] = (dp[i - 1][1] * (luth[n - 1] + 1)) % 1000000007;||| 37 }||| 38 } else {||| 39 dp[0][1] = (luth[n - 1]) % 1000000007;||| 40 for (int i = 1; i < k; i++) {||| 41 dp[i][1] =||| 42 ((dp[i - 1][1] * (luth[n - 1] - 1)) + dp[i - 1][0]) % 1000000007;||| 43 }||| 44 }||| 45 res = dp[k - 1][1];||| 46 }||| 47 void out() { std::cout << res << std::endl; }||| 48 };||| 49 int main() {||| 50 int tests;||| 51 std::cin >> tests;||| 52 luth[0] = 1;||| 53 for (int i = 1; i <= 200001; i++) {||| 54 luth[i] = luth[i - 1] * 2;||| 55 if (luth[i] >= 1000000007) luth[i] = luth[i] % 1000000007;||| 56 }||| 57 for (int i = 0; i < tests; i++) {||| 58 game *obj = new game;||| 59 obj->in();||| 60 obj->solve();||| 61 obj->out();||| 62 }||| 63 return 0;||| 64 }||| 	18 for (int i = 1; i <= k; i++) {
54	335	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 const int INF = 1e9 + 7;||| 5 const int mod = 1e9 + 7;||| 6 const double Pi = acos(-1.0);||| 7 int n, m, k, t;||| 8 long long fact[maxn], invFact[maxn];||| 9 int dir[][2] = {{0, 0},  {0, 1},   {-1, 0}, {0, -1}, {1, 0},||| 10 {-1, 1}, {-1, -1}, {1, -1}, {1, 1}};||| 11 inline int read() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (!isdigit(ch)) {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (isdigit(ch)) {||| 19 x = x * 10 + ch - 48;||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 inline void print(int x) {||| 25 if (x < 0) {||| 26 putchar('-');||| 27 x = -x;||| 28 }||| 29 if (x > 9) print(x / 10);||| 30 putchar(x % 10 + '0');||| 31 }||| 32 inline int gcd(int x, int y) {||| 33 if (!x) return y;||| 34 return gcd(y % x, x);||| 35 }||| 36 inline long long power(long long x, long long k, long long p) {||| 37 long long res = 1;||| 38 for (; k; k >>= 1, x = (long long)x * x % p)||| 39 if (k & 1) res = (long long)res * x % p;||| 40 return res;||| 41 }||| 42 long long A(int n, int k) {||| 43 if (k > n) {||| 44 return 0;||| 45 }||| 46 return fact[n] * invFact[k] % mod * invFact[n - k] % mod;||| 47 }||| 48 void solve() {||| 49 n = read();||| 50 k = read();||| 51 fact[0] = invFact[0] = 1;||| 52 for (int i = 1; i <= n; ++i) {||| 53 fact[i] = (fact[i - 1]) * i % mod;||| 54 invFact[i] = power(fact[i], mod - 2, mod);||| 55 }||| 56 long long ji = 0, ou = 0;||| 57 for (int i = 0; i <= n; ++i) {||| 58 if (i % 2) {||| 59 } else {||| 60 ou = (ou + A(n, i)) % mod;||| 61 }||| 62 }||| 63 long long nn = power(2, n, mod);||| 64 long long ans = 0;||| 65 if (n % 2 == 1)||| 66 ans++;||| 67 else||| 68 ou--;||| 69 ans = (ans + ou) % mod;||| 70 long long now = power(ans, k, mod);||| 71 if (n % 2 == 0) {||| 72 for (int i = k; i >= 1; --i) {||| 73 now += power(nn, i - 1, mod) * power(ans, k - i, mod);||| 74 now %= mod;||| 75 }||| 76 }||| 77 printf(""%lld\n"", now);||| 78 return;||| 79 }||| 80 int main() {||| 81 t = read();||| 82 while (t--) {||| 83 solve();||| 84 }||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 400010;||| 4 const int INF = 1e9 + 7;||| 5 const int mod = 1e9 + 7;||| 6 const double Pi = acos(-1.0);||| 7 int n, m, k, t;||| 8 long long fact[maxn], invFact[maxn];||| 9 int dir[][2] = {{0, 0},  {0, 1},   {-1, 0}, {0, -1}, {1, 0},||| 10 {-1, 1}, {-1, -1}, {1, -1}, {1, 1}};||| 11 inline int read() {||| 12 int x = 0, f = 1;||| 13 char ch = getchar();||| 14 while (!isdigit(ch)) {||| 15 if (ch == '-') f = -1;||| 16 ch = getchar();||| 17 }||| 18 while (isdigit(ch)) {||| 19 x = x * 10 + ch - 48;||| 20 ch = getchar();||| 21 }||| 22 return x * f;||| 23 }||| 24 inline void print(int x) {||| 25 if (x < 0) {||| 26 putchar('-');||| 27 x = -x;||| 28 }||| 29 if (x > 9) print(x / 10);||| 30 putchar(x % 10 + '0');||| 31 }||| 32 inline int gcd(int x, int y) {||| 33 if (!x) return y;||| 34 return gcd(y % x, x);||| 35 }||| 36 inline long long power(long long x, long long k, long long p) {||| 37 long long res = 1;||| 38 for (; k; k >>= 1, x = (long long)x * x % p)||| 39 if (k & 1) res = (long long)res * x % p;||| 40 return res;||| 41 }||| 42 long long A(int n, int k) {||| 43 if (k > n) {||| 44 return 0;||| 45 }||| 46 return fact[n] * invFact[k] % mod * invFact[n - k] % mod;||| 47 }||| 48 void solve() {||| 49 n = read();||| 50 k = read();||| 51 fact[0] = invFact[0] = 1;||| 52 for (int i = 1; i <= n; ++i) {||| 53 fact[i] = (fact[i - 1]) * i % mod;||| 54 invFact[i] = power(fact[i], mod - 2, mod);||| 55 }||| 56 long long ji = 0, ou = 0;||| 57 for (int i = 0; i <= n; ++i) {||| 58 if (i % 2) {||| 59 } else {||| 60 ou = (ou + A(n, i)) % mod;||| 61 }||| 62 }||| 63 long long nn = power(2, n, mod);||| 64 long long ans = 0;||| 65 if (n % 2 == 1)||| 66 ans++;||| 67 else||| 68 ou--;||| 69 ans = (ans + ou) % mod;||| 70 long long now = power(ans, k, mod);||| 71 if (n % 2 == 0) {||| 72 for (int i = k; i >= 1; --i) {||| 73 now += power(2, i - 1, mod) * power(nn, k - i, mod);||| 74 now %= mod;||| 75 }||| 76 }||| 77 printf(""%lld\n"", now);||| 78 return;||| 79 }||| 80 int main() {||| 81 t = read();||| 82 while (t--) {||| 83 solve();||| 84 }||| 85 return 0;||| 86 }||| "	73 now += power(nn, i - 1, mod) * power(ans, k - i, mod);
54	302	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target( \||| 3 ""sse,sse2,sse3,ssse3,sse4,sse4.1,sse4.2,abm,mmx,avx,avx2,popcnt"")||| 4 #pragma GCC optimize(""Ofast"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 using namespace std;||| 7 using ll = long long;||| 8 using ull = unsigned long long;||| 9 using ld = long double;||| 10 template <typename T1, typename T2>||| 11 inline void chkmin(T1& x, const T2& y) {||| 12 if (y < x) x = y;||| 13 }||| 14 template <typename T1, typename T2>||| 15 inline void chkmax(T1& x, const T2& y) {||| 16 if (x < y) x = y;||| 17 }||| 18 mt19937 rnd(time(0));||| 19 int mod = 1000000007;||| 20 int mul(int a, int b) { return 1ll * a * b % mod; }||| 21 int add(int a, int b) {||| 22 if (a + b >= mod) return a + b - mod;||| 23 return a + b;||| 24 }||| 25 int sub(int a, int b) {||| 26 if (a - b < 0) return a - b + mod;||| 27 return a - b;||| 28 }||| 29 int binpow(int a, int b) {||| 30 int res = 1;||| 31 while (b) {||| 32 if (b & 1) res = mul(res, a);||| 33 a = mul(a, a);||| 34 b >>= 1;||| 35 }||| 36 return res;||| 37 }||| 38 const int MAXN = 2e5 + 228;||| 39 int inv(int x) { return binpow(x, mod - 2); }||| 40 int fact[MAXN];||| 41 int rfact[MAXN];||| 42 int cnk(int n, int k) {||| 43 if (k < 0 || k > n) return 0;||| 44 return mul(fact[n], mul(rfact[k], rfact[n - k]));||| 45 }||| 46 signed main() {||| 47 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 48 cout.precision(20), cout.setf(ios::fixed);||| 49 fact[0] = 1;||| 50 for (int i = 1; i < MAXN; ++i) fact[i] = mul(fact[i - 1], i);||| 51 rfact[MAXN - 1] = inv(fact[MAXN - 1]);||| 52 for (int i = MAXN - 2; i >= 0; --i) rfact[i] = mul(rfact[i + 1], i + 1);||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 int n, k;||| 57 cin >> n >> k;||| 58 if (n % 2 == 0) {||| 59 int am = 0;||| 60 for (int bt = 0; bt < n; bt += 2) {||| 61 am = add(am, cnk(n, bt));||| 62 }||| 63 int gl = binpow(2, n);||| 64 int ans = 0;||| 65 int nw = 1;||| 66 for (int fbt = k - 1; fbt >= 0; --fbt) {||| 67 ans = add(ans, mul(nw, binpow(gl, fbt)));||| 68 nw = mul(nw, am);||| 69 }||| 70 ans = add(ans, nw);||| 71 cout << ans << endl;||| 72 } else {||| 73 int am = 1;||| 74 for (int bt = 0; bt <= n; bt += 2) {||| 75 am = add(am, cnk(n, bt));||| 76 }||| 77 am = binpow(am, k);||| 78 cout << am << '\n';||| 79 }||| 80 }||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target( \||| 3 ""sse,sse2,sse3,ssse3,sse4,sse4.1,sse4.2,abm,mmx,avx,avx2,popcnt"")||| 4 #pragma GCC optimize(""Ofast"")||| 5 #pragma GCC optimize(""unroll-loops"")||| 6 using namespace std;||| 7 using ll = long long;||| 8 using ull = unsigned long long;||| 9 using ld = long double;||| 10 template <typename T1, typename T2>||| 11 inline void chkmin(T1& x, const T2& y) {||| 12 if (y < x) x = y;||| 13 }||| 14 template <typename T1, typename T2>||| 15 inline void chkmax(T1& x, const T2& y) {||| 16 if (x < y) x = y;||| 17 }||| 18 mt19937 rnd(time(0));||| 19 int mod = 1000000007;||| 20 int mul(int a, int b) { return 1ll * a * b % mod; }||| 21 int add(int a, int b) {||| 22 if (a + b >= mod) return a + b - mod;||| 23 return a + b;||| 24 }||| 25 int sub(int a, int b) {||| 26 if (a - b < 0) return a - b + mod;||| 27 return a - b;||| 28 }||| 29 int binpow(int a, int b) {||| 30 int res = 1;||| 31 while (b) {||| 32 if (b & 1) res = mul(res, a);||| 33 a = mul(a, a);||| 34 b >>= 1;||| 35 }||| 36 return res;||| 37 }||| 38 const int MAXN = 2e5 + 228;||| 39 int inv(int x) { return binpow(x, mod - 2); }||| 40 int fact[MAXN];||| 41 int rfact[MAXN];||| 42 int cnk(int n, int k) {||| 43 if (k < 0 || k > n) return 0;||| 44 return mul(fact[n], mul(rfact[k], rfact[n - k]));||| 45 }||| 46 signed main() {||| 47 ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 48 cout.precision(20), cout.setf(ios::fixed);||| 49 fact[0] = 1;||| 50 for (int i = 1; i < MAXN; ++i) fact[i] = mul(fact[i - 1], i);||| 51 rfact[MAXN - 1] = inv(fact[MAXN - 1]);||| 52 for (int i = MAXN - 2; i >= 0; --i) rfact[i] = mul(rfact[i + 1], i + 1);||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 int n, k;||| 57 cin >> n >> k;||| 58 if (n % 2 == 0) {||| 59 int am = 0;||| 60 for (int bt = 0; bt < n; bt += 2) {||| 61 am = add(am, cnk(n, bt));||| 62 }||| 63 int gl = binpow(2, k);||| 64 int ans = 0;||| 65 int nw = 1;||| 66 for (int fbt = k - 1; fbt >= 0; --fbt) {||| 67 ans = add(ans, mul(nw, binpow(gl, fbt)));||| 68 nw = mul(nw, am);||| 69 }||| 70 ans = add(ans, nw);||| 71 cout << ans << endl;||| 72 } else {||| 73 int am = 1;||| 74 for (int bt = 0; bt <= n; bt += 2) {||| 75 am = add(am, cnk(n, bt));||| 76 }||| 77 am = binpow(am, k);||| 78 cout << am << '\n';||| 79 }||| 80 }||| 81 }||| "	63 int gl = binpow(2, n);
54	139	1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 5 long long ksm(long long a, long long b) {||| 6 long long ret = 1;||| 7 while (b) {||| 8 if (b & 1) ret = ret * a % mod;||| 9 a = a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ret;||| 13 }||| 14 long long ans, t, n, k;||| 15 const int N = 2e5 + 5;||| 16 long long p[N];||| 17 void solve0() {||| 18 long long ans = 0, cur = 1;||| 19 for (int i = k; i >= 1; i--) {||| 20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;||| 21 cur = cur * (p[n - 1] - 1) % mod;||| 22 }||| 23 cout << (ans + cur) % mod << endl;||| 24 }||| 25 void solve1() {||| 26 long long ans = 0, cur = 1;||| 27 for (int i = k; i >= 1; i--) {||| 28 cur = cur * (p[n - 1] + 1) % mod;||| 29 }||| 30 cout << cur << endl;||| 31 }||| 32 int main() {||| 33 p[0] = 1;||| 34 for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod;||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> k;||| 38 ans = 0;||| 39 if (k == 0) {||| 40 cout << 1 << endl;||| 41 continue;||| 42 }||| 43 if (n % 2 == 0)||| 44 solve0();||| 45 else||| 46 solve1();||| 47 }||| 48 return 0;||| 49 }||| 	1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 5 long long ksm(long long a, long long b) {||| 6 long long ret = 1;||| 7 while (b) {||| 8 if (b & 1) ret = ret * a % mod;||| 9 a = a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ret;||| 13 }||| 14 long long ans, t, n, k;||| 15 const int N = 2e5 + 5;||| 16 long long p[N];||| 17 void solve0() {||| 18 long long ans = 0, cur = 1;||| 19 for (int i = k; i >= 1; i--) {||| 20 ans = (ans + cur * ksm(p[k - 1], n) % mod) % mod;||| 21 cur = cur * (p[n - 1] - 1) % mod;||| 22 }||| 23 cout << (ans + cur) % mod << endl;||| 24 }||| 25 void solve1() {||| 26 long long ans = 0, cur = 1;||| 27 for (int i = k; i >= 1; i--) {||| 28 cur = cur * (p[n - 1] + 1) % mod;||| 29 }||| 30 cout << cur << endl;||| 31 }||| 32 int main() {||| 33 p[0] = 1;||| 34 for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod;||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> k;||| 38 ans = 0;||| 39 if (k == 0) {||| 40 cout << 1 << endl;||| 41 continue;||| 42 }||| 43 if (n % 2 == 0)||| 44 solve0();||| 45 else||| 46 solve1();||| 47 }||| 48 return 0;||| 49 }||| 	20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;
54	165	1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 5 long long ksm(long long a, long long b) {||| 6 long long ret = 1;||| 7 while (b) {||| 8 if (b & 1) ret = ret * a % mod;||| 9 a = a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ret;||| 13 }||| 14 long long ans, t, n, k;||| 15 const int N = 2e5 + 5;||| 16 long long p[N];||| 17 void solve0() {||| 18 long long ans = 0, cur = 1;||| 19 for (int i = k; i >= 1; i--) {||| 20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;||| 21 cur = cur * (p[n - 1] - 1) % mod;||| 22 }||| 23 cout << (ans + cur) % mod << endl;||| 24 }||| 25 void solve1() {||| 26 long long ans = 0, cur = 1;||| 27 for (int i = k; i >= 1; i--) {||| 28 cur = cur * (p[n - 1] + 1) % mod;||| 29 }||| 30 cout << cur << endl;||| 31 }||| 32 int main() {||| 33 p[0] = 1;||| 34 for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod;||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> k;||| 38 ans = 0;||| 39 if (k == 0) {||| 40 cout << 1 << endl;||| 41 continue;||| 42 }||| 43 if (n % 2 == 0)||| 44 solve0();||| 45 else||| 46 solve1();||| 47 }||| 48 return 0;||| 49 }||| 	1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 5 long long ksm(long long a, long long b) {||| 6 long long ret = 1;||| 7 while (b) {||| 8 if (b & 1) ret = ret * a % mod;||| 9 a = a * a % mod;||| 10 b >>= 1;||| 11 }||| 12 return ret;||| 13 }||| 14 long long ans, t, n, k;||| 15 const int N = 2e5 + 5;||| 16 long long p[N];||| 17 void solve0() {||| 18 long long ans = 0, cur = 1;||| 19 for (int i = k; i >= 1; i--) {||| 20 ans = (ans + cur * ksm(p[k - 1], n) % mod) % mod;||| 21 cur = cur * (p[n - 1] - 1) % mod;||| 22 }||| 23 cout << (ans + cur) % mod << endl;||| 24 }||| 25 void solve1() {||| 26 long long ans = 0, cur = 1;||| 27 for (int i = k; i >= 1; i--) {||| 28 cur = cur * (p[n - 1] + 1) % mod;||| 29 }||| 30 cout << cur << endl;||| 31 }||| 32 int main() {||| 33 p[0] = 1;||| 34 for (int i = 1; i < N; i++) p[i] = p[i - 1] * 2 % mod;||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n >> k;||| 38 ans = 0;||| 39 if (k == 0) {||| 40 cout << 0 << endl;||| 41 continue;||| 42 }||| 43 if (n % 2 == 0)||| 44 solve0();||| 45 else||| 46 solve1();||| 47 }||| 48 return 0;||| 49 }||| 	20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;
54	145	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 long long dp1[200005][2];||| 5 long long dp3[200005];||| 6 long long f1(long long i, long long j) {||| 7 if (dp1[i][j] != -1) return dp1[i][j];||| 8 if (i == 0) {||| 9 if (j == 0)||| 10 return dp1[i][j] = 1;||| 11 else||| 12 return dp1[i][j] = 0;||| 13 }||| 14 return dp1[i][j] = (f1(i - 1, j) + f1(i - 1, (j + 1) % 2)) % mod;||| 15 }||| 16 long long f2(vector<long long> &dp2, long long i, long long n) {||| 17 if (i == 0) {||| 18 return dp3[i] = 1;||| 19 }||| 20 if (dp3[i] != -1) return dp3[i];||| 21 long long ans = 0;||| 22 if (n % 2) {||| 23 ans += f2(dp2, i - 1, n);||| 24 ans %= mod;||| 25 } else {||| 26 ans += dp2[i - 1];||| 27 ans %= mod;||| 28 }||| 29 long long d = dp1[n][0];||| 30 if (n % 2 == 0) {||| 31 d = (d - 1 + mod) % mod;||| 32 }||| 33 ans += d * f2(dp2, i - 1, n) % mod;||| 34 ans %= mod;||| 35 return dp3[i] = ans;||| 36 }||| 37 void solvef() {||| 38 long long n, k;||| 39 cin >> n >> k;||| 40 for (int i = 0; i < 200005; i++) dp1[i][0] = dp1[i][1] = -1;||| 41 f1(n, 0);||| 42 if (k == 0) {||| 43 cout << 1 << endl;||| 44 return;||| 45 }||| 46 long long pn = 1;||| 47 for (int i = 0; i < n; i++) pn = pn * 2 % mod;||| 48 vector<long long> dp2(k + 1);||| 49 dp2[0] = 1;||| 50 for (int i = 1; i <= k; i++) {||| 51 dp2[i] = dp2[i - 1] * pn % mod;||| 52 }||| 53 for (int i = 0; i < 200005; i++) dp3[i] = -1;||| 54 long long ans = f2(dp2, k, n);||| 55 cout << ans << endl;||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(NULL);||| 60 long long t;||| 61 cin >> t;||| 62 while (t--) solvef();||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 long long dp1[200005][2];||| 5 long long dp3[200005];||| 6 long long f1(long long i, long long j) {||| 7 if (dp1[i][j] != -1) return dp1[i][j];||| 8 if (i == 0) {||| 9 if (j == 0)||| 10 return dp1[i][j] = 1;||| 11 else||| 12 return dp1[i][j] = 0;||| 13 }||| 14 return dp1[i][j] = (f1(i - 1, j) + f1(i - 1, (j + 1) % 2)) % mod;||| 15 }||| 16 long long f2(vector<long long> &dp2, long long i, long long n) {||| 17 if (i == 0) {||| 18 return dp3[i] = 1;||| 19 }||| 20 if (dp3[i] != -1) return dp3[i];||| 21 long long ans = 0;||| 22 if (n % 2) {||| 23 ans += f2(dp2, i - 1, n);||| 24 ans %= mod;||| 25 } else {||| 26 ans += dp2[i - 1];||| 27 ans %= mod;||| 28 }||| 29 long long d = dp1[n][0];||| 30 if (n % 2 == 0) {||| 31 d = (d - 1 + mod) % mod;||| 32 }||| 33 ans += d * f2(dp2, i - 1, n) % mod;||| 34 ans %= mod;||| 35 return dp3[i] = ans;||| 36 }||| 37 void solvef() {||| 38 long long n, k;||| 39 cin >> n >> k;||| 40 for (int i = 0; i < 200005; i++) dp1[i][0] = dp1[i][1] = -1;||| 41 f1(n, 0);||| 42 if (k == 0) {||| 43 cout << 1 << endl;||| 44 return;||| 45 }||| 46 long long pn = 1;||| 47 for (int i = 0; i < n; i++) pn = pn * n % mod;||| 48 vector<long long> dp2(k + 1);||| 49 dp2[0] = 1;||| 50 for (int i = 1; i <= k; i++) {||| 51 dp2[i] = dp2[i - 1] * pn % mod;||| 52 }||| 53 for (int i = 0; i < 200005; i++) dp3[i] = -1;||| 54 long long ans = f2(dp2, k, n);||| 55 cout << ans << endl;||| 56 }||| 57 int main() {||| 58 ios_base::sync_with_stdio(false);||| 59 cin.tie(NULL);||| 60 long long t;||| 61 cin >> t;||| 62 while (t--) solvef();||| 63 return 0;||| 64 }||| 	47 for (int i = 0; i < n; i++) pn = pn * 2 % mod;
55	34	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct tri {||| 4 long long x, y, z;||| 5 tri() : x(0), y(0), z(0) {}||| 6 tri(const long long x, const long long y, const long long z)||| 7 : x(x), y(y), z(z) {}||| 8 tri(const tri &t) : x(t.x), y(t.y), z(t.z) {}||| 9 };||| 10 bool query_compare(const tri &a, const tri &b) { return a.x < b.x; }||| 11 class OverlapCompare {||| 12 public:||| 13 bool operator()(const tri &a, const tri &b) {||| 14 if (a.y == b.y) return a.x < b.x;||| 15 return a.y < b.y;||| 16 }||| 17 };||| 18 long long n, m;||| 19 tri querys[300005];||| 20 set<tri, OverlapCompare> overlap;||| 21 long long dp[300005];||| 22 long long record[300005];||| 23 list<tri> be_add, be_remove;||| 24 bool removed[300005];||| 25 int main() {||| 26 ios_base::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> n >> m;||| 30 for (long long i = 0; i < m; i++) {||| 31 cin >> querys[i].x >> querys[i].y >> querys[i].z;||| 32 }||| 33 stable_sort(querys, querys + m, query_compare);||| 34 fill_n(dp, n + 1, 1);||| 35 for (long long i = 0; i < m; i++) {||| 36 set<tri, OverlapCompare>::iterator lb =||| 37 overlap.lower_bound(tri(-1LL, querys[i].y, querys[i].z));||| 38 set<tri, OverlapCompare>::iterator ub =||| 39 overlap.upper_bound(tri((long long)1e15, querys[i].z, 0LL));||| 40 if (lb != overlap.begin()) {||| 41 if ((--lb)->z < querys[i].y) {||| 42 ++lb;||| 43 }||| 44 }||| 45 for (set<tri, OverlapCompare>::iterator it = lb; it != ub; it++) {||| 46 if (it->x == querys[i].x) continue;||| 47 if (dp[querys[i].x] < dp[it->x] + 1) {||| 48 dp[querys[i].x] = dp[it->x] + 1;||| 49 record[querys[i].x] = it->x;||| 50 }||| 51 }||| 52 be_add.clear();||| 53 be_remove.clear();||| 54 for (set<tri, OverlapCompare>::iterator it = lb; it != ub; it++) {||| 55 bool cur_be_remove = false;||| 56 if (it->y < querys[i].y && it->z >= querys[i].y) {||| 57 be_add.push_back(tri(it->x, it->y, querys[i].y - 1));||| 58 cur_be_remove = true;||| 59 }||| 60 if (it->y <= querys[i].z && querys[i].z < it->z) {||| 61 be_add.push_back(tri(it->x, querys[i].z + 1, it->z));||| 62 cur_be_remove = true;||| 63 }||| 64 if (it->y >= querys[i].y && it->z <= querys[i].z) {||| 65 cur_be_remove = true;||| 66 }||| 67 if (cur_be_remove) {||| 68 be_remove.push_back(*it);||| 69 }||| 70 }||| 71 for (list<tri>::iterator it = be_remove.begin(); it != be_remove.end();||| 72 it++) {||| 73 overlap.erase(*it);||| 74 }||| 75 for (list<tri>::iterator it = be_add.begin(); it != be_add.end(); it++) {||| 76 overlap.insert(*it);||| 77 }||| 78 overlap.insert(querys[i]);||| 79 }||| 80 long long rst_idx = 1;||| 81 for (long long i = 1; i <= n; i++) {||| 82 if (dp[i] > dp[rst_idx]) rst_idx = i;||| 83 }||| 84 long long i = rst_idx;||| 85 fill_n(removed, n + 1, true);||| 86 while (i != 0) {||| 87 removed[i] = false;||| 88 i = record[i];||| 89 }||| 90 cout << n - dp[rst_idx] << '\n';||| 91 for (long long i = 1; i <= n; i++) {||| 92 if (removed[i]) cout << i << ' ';||| 93 }||| 94 cout << '\n';||| 95 return 0;||| 96 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct tri {||| 4 long long x, y, z;||| 5 tri() : x(0), y(0), z(0) {}||| 6 tri(const long long x, const long long y, const long long z)||| 7 : x(x), y(y), z(z) {}||| 8 tri(const tri &t) : x(t.x), y(t.y), z(t.z) {}||| 9 };||| 10 bool query_compare(const tri &a, const tri &b) { return a.x < b.x; }||| 11 class OverlapCompare {||| 12 public:||| 13 bool operator()(const tri &a, const tri &b) {||| 14 if (a.y == b.y) return a.x < b.x;||| 15 return a.y < b.y;||| 16 }||| 17 };||| 18 long long n, m;||| 19 tri querys[300005];||| 20 set<tri, OverlapCompare> overlap;||| 21 long long dp[300005];||| 22 long long record[300005];||| 23 list<tri> be_add, be_remove;||| 24 bool removed[300005];||| 25 int main() {||| 26 ios_base::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 cin >> n >> m;||| 30 for (long long i = 0; i < m; i++) {||| 31 cin >> querys[i].x >> querys[i].y >> querys[i].z;||| 32 }||| 33 stable_sort(querys, querys + m, query_compare);||| 34 fill_n(dp, n + 1, 1);||| 35 for (long long i = 0; i < m; i++) {||| 36 set<tri, OverlapCompare>::iterator lb =||| 37 overlap.lower_bound(tri(-1LL, querys[i].y, querys[i].z));||| 38 set<tri, OverlapCompare>::iterator ub =||| 39 overlap.upper_bound(tri((long long)1e15, querys[i].z, 0LL));||| 40 if (lb != overlap.begin()) {||| 41 if ((--lb)->z < querys[i].y) {||| 42 ++lb;||| 43 }||| 44 }||| 45 for (set<tri, OverlapCompare>::iterator it = lb; it != ub; it++) {||| 46 if (it->x == querys[i].x) continue;||| 47 if (dp[querys[i].x] < dp[it->x] + 1) {||| 48 dp[querys[i].x] = dp[it->x] + 1;||| 49 record[querys[i].x] = it->x;||| 50 }||| 51 }||| 52 be_add.clear();||| 53 be_remove.clear();||| 54 for (set<tri, OverlapCompare>::iterator it = lb; it != ub; it++) {||| 55 bool cur_be_remove = false;||| 56 if (it->y < querys[i].y && it->z >= querys[i].y) {||| 57 be_add.push_back(tri(it->x, it->y, querys[i].y - 1));||| 58 cur_be_remove = true;||| 59 }||| 60 if (it->y <= querys[i].z && querys[i].z < it->z) {||| 61 be_add.push_back(tri(it->x, querys[i].z + 1, it->z));||| 62 cur_be_remove = true;||| 63 }||| 64 if (it->y >= querys[i].y && it->z <= querys[i].z) {||| 65 cur_be_remove = true;||| 66 }||| 67 if (cur_be_remove) {||| 68 be_remove.push_back(*it);||| 69 }||| 70 }||| 71 for (list<tri>::iterator it = be_remove.begin(); it != be_remove.end();||| 72 it++) {||| 73 overlap.erase(*it);||| 74 }||| 75 for (list<tri>::iterator it = be_add.begin(); it != be_add.end(); it++) {||| 76 overlap.insert(*it);||| 77 }||| 78 overlap.insert(querys[i]);||| 79 }||| 80 long long rst_idx = 0;||| 81 for (long long i = 1; i <= n; i++) {||| 82 if (dp[i] > dp[rst_idx]) rst_idx = i;||| 83 }||| 84 long long i = rst_idx;||| 85 fill_n(removed, n + 1, true);||| 86 while (i != 0) {||| 87 removed[i] = false;||| 88 i = record[i];||| 89 }||| 90 cout << n - dp[rst_idx] << '\n';||| 91 for (long long i = 1; i <= n; i++) {||| 92 if (removed[i]) cout << i << ' ';||| 93 }||| 94 cout << '\n';||| 95 return 0;||| 96 }||| 	80 long long rst_idx = 1;
57	49	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx,avx2"")||| 4 #pragma GCC optimization(""O3"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 using namespace std;||| 7 void pre() {}||| 8 int arr[20000];||| 9 int n;||| 10 int reverse(int i) {||| 11 for (int j = 0; j < i / 2; j++) swap(arr[j], arr[i - j - 1]);||| 12 return i;||| 13 }||| 14 int reverse_till(int num) {||| 15 int k = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (arr[j] == num) {||| 18 k = j;||| 19 break;||| 20 }||| 21 }||| 22 return reverse(k + 1);||| 23 }||| 24 int reverse_till_1(int num) {||| 25 int k = 0;||| 26 for (int j = 0; j < n; j++) {||| 27 if (arr[j] == num) {||| 28 k = j;||| 29 break;||| 30 }||| 31 }||| 32 k--;||| 33 return reverse(k + 1);||| 34 }||| 35 int reverse_till_11(int num) {||| 36 int k = 0;||| 37 for (int j = 0; j < n; j++) {||| 38 if (arr[j] == num) {||| 39 k = j;||| 40 break;||| 41 }||| 42 }||| 43 k++;||| 44 return reverse(k + 1);||| 45 }||| 46 void print_arr() {}||| 47 void solve() {||| 48 cin >> n;||| 49 for (int i = 0; i < n; i++) {||| 50 cin >> arr[i];||| 51 }||| 52 vector<int> v;||| 53 for (int i = 0; i < n; i++) {||| 54 if (arr[i] % 2 == i % 2) {||| 55 cout << -1 << ""\n"";||| 56 return;||| 57 }||| 58 }||| 59 for (int i = 0; n - 2 * i > 1; i += 1) {||| 60 int a = n - 2 * i;||| 61 int b = n - 1 - 2 * i;||| 62 print_arr();||| 63 v.push_back(reverse_till(a));||| 64 print_arr();||| 65 v.push_back(reverse_till_1(b));||| 66 print_arr();||| 67 v.push_back(reverse_till_11(b));||| 68 print_arr();||| 69 v.push_back(reverse(3));||| 70 print_arr();||| 71 v.push_back(reverse(a));||| 72 }||| 73 print_arr();||| 74 cout << v.size() << ""\n"";||| 75 for (auto i : v) {||| 76 cout << i << "" "";||| 77 }||| 78 cout << ""\n"";||| 79 }||| 80 int main() {||| 81 ios_base::sync_with_stdio(false);||| 82 cin.tie(NULL);||| 83 pre();||| 84 long long int num = 1;||| 85 cin >> num;||| 86 for (long long int i = 0; i < num; i++) {||| 87 solve();||| 88 }||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,avx,avx2"")||| 4 #pragma GCC optimization(""O3"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 using namespace std;||| 7 void pre() {}||| 8 int arr[20000];||| 9 int n;||| 10 int reverse(int i) {||| 11 for (int j = 0; j < i / 2; j++) swap(arr[j], arr[i - j - 1]);||| 12 return i;||| 13 }||| 14 int reverse_till(int num) {||| 15 int k = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (arr[j] == num) {||| 18 k = j;||| 19 break;||| 20 }||| 21 }||| 22 return reverse(k + 1);||| 23 }||| 24 int reverse_till_1(int num) {||| 25 int k = 0;||| 26 for (int j = 0; j < n; j++) {||| 27 if (arr[j] == num) {||| 28 k = j;||| 29 break;||| 30 }||| 31 }||| 32 k--;||| 33 return reverse(k + 1);||| 34 }||| 35 int reverse_till_11(int num) {||| 36 int k = 0;||| 37 for (int j = 0; j < n; j++) {||| 38 if (arr[j] == num) {||| 39 k = j;||| 40 break;||| 41 }||| 42 }||| 43 k++;||| 44 return reverse(k + 1);||| 45 }||| 46 void print_arr() {}||| 47 void solve() {||| 48 cin >> n;||| 49 for (int i = 0; i < n; i++) {||| 50 cin >> arr[i];||| 51 }||| 52 vector<int> v;||| 53 for (int i = 0; i < n; i++) {||| 54 if (arr[i] % 2 == i % 2) {||| 55 cout << -1 << ""\n"";||| 56 return;||| 57 }||| 58 }||| 59 for (int i = 0; n - 2 * i > 1; i += 2) {||| 60 int a = n - 2 * i;||| 61 int b = n - 1 - 2 * i;||| 62 print_arr();||| 63 v.push_back(reverse_till(a));||| 64 print_arr();||| 65 v.push_back(reverse_till_1(b));||| 66 print_arr();||| 67 v.push_back(reverse_till_11(b));||| 68 print_arr();||| 69 v.push_back(reverse(3));||| 70 print_arr();||| 71 v.push_back(reverse(a));||| 72 }||| 73 print_arr();||| 74 cout << v.size() << ""\n"";||| 75 for (auto i : v) {||| 76 cout << i << "" "";||| 77 }||| 78 cout << ""\n"";||| 79 }||| 80 int main() {||| 81 ios_base::sync_with_stdio(false);||| 82 cin.tie(NULL);||| 83 pre();||| 84 long long int num = 1;||| 85 cin >> num;||| 86 for (long long int i = 0; i < num; i++) {||| 87 solve();||| 88 }||| 89 }||| "	59 for (int i = 0; n - 2 * i > 1; i += 1) {
57	38	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007, inf = 2e18;||| 4 const int N = 200001;||| 5 const double ep = 1e-10;||| 6 void Darling(int kase) {||| 7 int n;||| 8 cin >> n;||| 9 int a[n];||| 10 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1) cin >> a[i];||| 11 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1)||| 12 if (a[i] % 2 == i % 2) {||| 13 cout << -1 << '\n';||| 14 return;||| 15 }||| 16 vector<int> z;||| 17 int o = 1;||| 18 while (o < n) {||| 19 int i1 = 0, i2 = 1;||| 20 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1) {||| 21 if (a[i] == o) i1 = i;||| 22 if (a[i] == o + 1) i2 = i;||| 23 }||| 24 z.push_back(i1 + 1), reverse(a, a + i1 + 1);||| 25 if (i2 < i1) i2 = i1 - i2;||| 26 i1 = 0;||| 27 z.push_back(i2), reverse(a, a + i2);||| 28 i1 = i2 - 1;||| 29 z.push_back(i2 + 2), reverse(a, a + i2 + 2);||| 30 z.push_back(3), reverse(a, a + 3);||| 31 z.push_back(n - o + 1), reverse(a, a + n - o + 1);||| 32 o += 2;||| 33 }||| 34 cout << z.size() + 1 << '\n';||| 35 for (int x : z) cout << x << ' ';||| 36 cout << n << '\n';||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(0), cin.tie(0);||| 40 int T = 1;||| 41 cin >> T;||| 42 for (int K = 0; K < T; K++) Darling(K + 1);||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007, inf = 2e18;||| 4 const int N = 200001;||| 5 const double ep = 1e-10;||| 6 void Darling(int kase) {||| 7 int n;||| 8 cin >> n;||| 9 int a[n];||| 10 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1) cin >> a[i];||| 11 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1)||| 12 if (a[i] % 2 == i % 2) {||| 13 cout << -1 << '\n';||| 14 return;||| 15 }||| 16 vector<int> z;||| 17 int o = 1;||| 18 while (o < n) {||| 19 int i1 = 0, i2 = 1;||| 20 for (int i = 0; (1 < 0 && i > n) || (1 > 0 && i < n); i += 1) {||| 21 if (a[i] == o) i1 = i;||| 22 if (a[i] == o + 1) i2 = i;||| 23 }||| 24 z.push_back(i1 + 1), reverse(a, a + i1 + 1);||| 25 if (i2 < i1) i2 = i1 - i2;||| 26 i1 = 0;||| 27 z.push_back(i2), reverse(a, a + i2);||| 28 i1 = i2 - 1;||| 29 z.push_back(i2 + 2), reverse(a, a + i2 + 2);||| 30 z.push_back(3), reverse(a, a + 3);||| 31 z.push_back(n - o + 1), reverse(a, a + n - o + 1);||| 32 o += 2;||| 33 }||| 34 cout << z.size() << '\n';||| 35 for (int x : z) cout << x << ' ';||| 36 cout << n << '\n';||| 37 }||| 38 int main() {||| 39 ios_base::sync_with_stdio(0), cin.tie(0);||| 40 int T = 1;||| 41 cin >> T;||| 42 for (int K = 0; K < T; K++) Darling(K + 1);||| 43 }||| 	34 cout << z.size() + 1 << '\n';
57	74	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 vector<long long> v(n);||| 13 for (long long &first : v) cin >> first;||| 14 bool flag = false;||| 15 for (long long i = 0; i < n; i++) {||| 16 if ((i & 1) && (v[i] & 1)) flag = true;||| 17 if (!(i & 1) && !(v[i] & 1)) flag = true;||| 18 }||| 19 if (flag) {||| 20 cout << -1 << '\n';||| 21 continue;||| 22 }||| 23 vector<long long> res(n);||| 24 iota((res).begin(), (res).end(), 1);||| 25 long long curr = n - 1;||| 26 vector<long long> ans;||| 27 while (v != res) {||| 28 for (long long i = 0; i < n; i++) {||| 29 if (v[i] == res[curr]) {||| 30 ans.emplace_back(i + 1);||| 31 reverse(v.begin(), v.begin() + i + 1);||| 32 break;||| 33 }||| 34 }||| 35 long long pos = 0;||| 36 for (long long i = 0; i < n; i++) {||| 37 if (v[i] == res[curr - 1]) {||| 38 ans.emplace_back(i);||| 39 pos = i + 2;||| 40 reverse(v.begin(), v.begin() + i);||| 41 break;||| 42 }||| 43 }||| 44 ans.emplace_back(pos);||| 45 reverse(v.begin(), v.begin() + pos);||| 46 ans.emplace_back(3);||| 47 reverse(v.begin(), v.begin() + 3);||| 48 ans.emplace_back(curr + 1);||| 49 reverse(v.begin(), v.begin() + curr + 1);||| 50 curr -= 2;||| 51 }||| 52 cout << ans.size() << '\n';||| 53 for (long long first : ans) cout << first << ' ';||| 54 cout << '\n';||| 55 }||| 56 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 signed main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 long long t;||| 8 cin >> t;||| 9 while (t--) {||| 10 long long n;||| 11 cin >> n;||| 12 vector<long long> v(n);||| 13 for (long long &first : v) cin >> first;||| 14 bool flag = false;||| 15 for (long long i = 0; i < n; i++) {||| 16 if ((i & 1) && (v[i] & 1)) flag = true;||| 17 if (!(i & 1) && !(v[i] & 1)) flag = true;||| 18 }||| 19 if (flag) {||| 20 cout << -1 << '\n';||| 21 continue;||| 22 }||| 23 vector<long long> res(n);||| 24 iota((res).begin(), (res).end(), 1);||| 25 long long curr = n - 1;||| 26 vector<long long> ans;||| 27 while (v != res) {||| 28 for (long long i = 0; i < n; i++) {||| 29 if (v[i] == res[curr]) {||| 30 ans.emplace_back(i + 1);||| 31 reverse(v.begin(), v.begin() + i + 1);||| 32 break;||| 33 }||| 34 }||| 35 long long pos = 0;||| 36 for (long long i = 0; i < n; i++) {||| 37 if (v[i] == res[curr - 1]) {||| 38 ans.emplace_back(i + 1);||| 39 pos = i + 2;||| 40 reverse(v.begin(), v.begin() + i);||| 41 break;||| 42 }||| 43 }||| 44 ans.emplace_back(pos);||| 45 reverse(v.begin(), v.begin() + pos);||| 46 ans.emplace_back(3);||| 47 reverse(v.begin(), v.begin() + 3);||| 48 ans.emplace_back(curr + 1);||| 49 reverse(v.begin(), v.begin() + curr + 1);||| 50 curr -= 2;||| 51 }||| 52 cout << ans.size() << '\n';||| 53 for (long long first : ans) cout << first << ' ';||| 54 cout << '\n';||| 55 }||| 56 }||| 	38 ans.emplace_back(i);
57	16	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 long long max(long long a, long long b) {||| 5 if (a > b)||| 6 return a;||| 7 else||| 8 return b;||| 9 }||| 10 long long min(long long a, long long b) {||| 11 if (a > b)||| 12 return b;||| 13 else||| 14 return a;||| 15 }||| 16 long long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a % b); }||| 17 inline long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 18 inline long long normalize(long long x, long long mod) {||| 19 x %= mod;||| 20 if (x < 0) x += mod;||| 21 return x;||| 22 }||| 23 long long dx[4] = {0, 1, 0, -1};||| 24 long long dy[4] = {1, 0, -1, 0};||| 25 string abc = ""abcdefghijklmnopqrstuvwxyz"";||| 26 const double PI = acosl(-1);||| 27 const long long mod = 1000 * 1000 * 1000 + 7;||| 28 const long long inf = 1e18 + 5;||| 29 inline long long add(long long a, long long b, long long p = mod) {||| 30 long long c = a + b;||| 31 if (c >= p) c -= p;||| 32 return c;||| 33 }||| 34 inline long long sub(long long a, long long b, long long p = mod) {||| 35 long long c = a - b;||| 36 if (c < 0) c += p;||| 37 return c;||| 38 }||| 39 inline long long mul(long long a, long long b, long long p = mod) {||| 40 return (a * 1LL * b) % p;||| 41 }||| 42 long long floor1(long long n, long long k) {||| 43 if (n % k == 0 || n >= 0) return n / k;||| 44 return (n / k) - 1;||| 45 }||| 46 long long ceil1(long long n, long long k) { return floor1(n + k - 1, k); }||| 47 long long powm(long long a, long long b) {||| 48 long long res = 1;||| 49 while (b) {||| 50 if (b & 1) res = (res * a) % mod;||| 51 a = (a * a) % mod;||| 52 b >>= 1;||| 53 }||| 54 return res;||| 55 }||| 56 const long long N = 2021 + 5;||| 57 long long n;||| 58 long long a[N], f[N];||| 59 vector<long long> ans;||| 60 void op(long long l, long long r) {||| 61 ans.push_back(r);||| 62 while (l <= r) {||| 63 swap(f[a[l]], f[a[r]]);||| 64 swap(a[l], a[r]);||| 65 ++l;||| 66 --r;||| 67 }||| 68 }||| 69 void solve() {||| 70 cin >> n;||| 71 for (long long i = (1); i < (n + 1); ++i) cin >> a[i];||| 72 for (long long i = (1); i < (n + 1); ++i) f[a[i]] = i;||| 73 ans.clear();||| 74 for (long long i = n; i > 1; i -= 2) {||| 75 long long p = f[i];||| 76 if (p == i and i - 1 == f[i - 1]) continue;||| 77 if (p % 2 == 0 or f[i - 1] % 2 == 1) {||| 78 cout << -1 << ""\n"";||| 79 return;||| 80 }||| 81 op(1, f[i]);||| 82 op(1, f[i - 1] - 1);||| 83 op(1, f[i - 1] + 1);||| 84 op(1, 3);||| 85 op(1, i);||| 86 }||| 87 cout << ((long long)ans.size()) << ""\n"";||| 88 for (long long i : ans) cout << i << "" "";||| 89 cout << ""\n"";||| 90 }||| 91 signed main() {||| 92 ios::sync_with_stdio(0);||| 93 cin.tie(0);||| 94 cout.tie(0);||| 95 cout << fixed << setprecision(10);||| 96 long long t = 1;||| 97 cin >> t;||| 98 for (long long i = (1); i < (t + 1); ++i) {||| 99 solve();||| 100 }||| 101 return 0;||| 102 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 long long max(long long a, long long b) {||| 5 if (a > b)||| 6 return a;||| 7 else||| 8 return b;||| 9 }||| 10 long long min(long long a, long long b) {||| 11 if (a > b)||| 12 return b;||| 13 else||| 14 return a;||| 15 }||| 16 long long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a % b); }||| 17 inline long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 18 inline long long normalize(long long x, long long mod) {||| 19 x %= mod;||| 20 if (x < 0) x += mod;||| 21 return x;||| 22 }||| 23 long long dx[4] = {0, 1, 0, -1};||| 24 long long dy[4] = {1, 0, -1, 0};||| 25 string abc = ""abcdefghijklmnopqrstuvwxyz"";||| 26 const double PI = acosl(-1);||| 27 const long long mod = 1000 * 1000 * 1000 + 7;||| 28 const long long inf = 1e18 + 5;||| 29 inline long long add(long long a, long long b, long long p = mod) {||| 30 long long c = a + b;||| 31 if (c >= p) c -= p;||| 32 return c;||| 33 }||| 34 inline long long sub(long long a, long long b, long long p = mod) {||| 35 long long c = a - b;||| 36 if (c < 0) c += p;||| 37 return c;||| 38 }||| 39 inline long long mul(long long a, long long b, long long p = mod) {||| 40 return (a * 1LL * b) % p;||| 41 }||| 42 long long floor1(long long n, long long k) {||| 43 if (n % k == 0 || n >= 0) return n / k;||| 44 return (n / k) - 1;||| 45 }||| 46 long long ceil1(long long n, long long k) { return floor1(n + k - 1, k); }||| 47 long long powm(long long a, long long b) {||| 48 long long res = 1;||| 49 while (b) {||| 50 if (b & 1) res = (res * a) % mod;||| 51 a = (a * a) % mod;||| 52 b >>= 1;||| 53 }||| 54 return res;||| 55 }||| 56 const long long N = 2021 + 5;||| 57 long long n;||| 58 long long a[N], f[N];||| 59 vector<long long> ans;||| 60 void op(long long l, long long r) {||| 61 ans.push_back(r);||| 62 while (l <= r) {||| 63 swap(f[a[l]], f[a[r]]);||| 64 swap(a[l], a[r]);||| 65 ++l;||| 66 --r;||| 67 }||| 68 }||| 69 void solve() {||| 70 cin >> n;||| 71 for (long long i = (1); i < (n + 1); ++i) cin >> a[i];||| 72 for (long long i = (1); i < (n + 1); ++i) f[a[i]] = i;||| 73 ans.clear();||| 74 for (long long i = n; i > 1; i -= 2) {||| 75 long long p = f[i];||| 76 if (p == i and i - 1 == f[i - 1]) continue;||| 77 if (p % 2 == 0 or f[i - 1] % 2 == 1) {||| 78 cout << -1 << ""\n"";||| 79 return;||| 80 }||| 81 op(1, f[i]);||| 82 op(1, f[i - 1] - 1);||| 83 op(1, f[i - 1] + 1);||| 84 op(1, 3);||| 85 op(1, n);||| 86 }||| 87 cout << ((long long)ans.size()) << ""\n"";||| 88 for (long long i : ans) cout << i << "" "";||| 89 cout << ""\n"";||| 90 }||| 91 signed main() {||| 92 ios::sync_with_stdio(0);||| 93 cin.tie(0);||| 94 cout.tie(0);||| 95 cout << fixed << setprecision(10);||| 96 long long t = 1;||| 97 cin >> t;||| 98 for (long long i = (1); i < (t + 1); ++i) {||| 99 solve();||| 100 }||| 101 return 0;||| 102 }||| "	85 op(1, i);
58	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 int qpow(int a, int b) {||| 5 int res = 1;||| 6 while (b) {||| 7 if (b & 1) res = (long long)res * a % mod;||| 8 a = (long long)a * a % mod;||| 9 b >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 int fac[200015 << 1], ifac[200015 << 1];||| 14 int C(int n, int m) {||| 15 if (n < m || m < 0) return 0;||| 16 return (long long)fac[n] * ifac[m] % mod * ifac[n - m] % mod;||| 17 }||| 18 int t, n, m, x[200015], y[200015];||| 19 int sum[200015];||| 20 void add(int p, int v) {||| 21 for (; p <= n; p += ((p) & (-p))) sum[p] += v;||| 22 }||| 23 int query(int p) {||| 24 int res = 0;||| 25 for (; p; p -= ((p) & (-p))) res += sum[p];||| 26 return res;||| 27 }||| 28 int getpos(int x) {||| 29 int l = 1, r = n, ans = 0;||| 30 while (l <= r) {||| 31 int mid = (l + r) >> 1;||| 32 if (mid - query(mid) == x) {||| 33 ans = mid;||| 34 }||| 35 if (mid - query(mid) < x)||| 36 l = mid + 1;||| 37 else||| 38 r = mid - 1;||| 39 }||| 40 return ans;||| 41 }||| 42 int main() {||| 43 fac[0] = 1;||| 44 for (int i = (1); i <= (400000); i++)||| 45 fac[i] = (long long)fac[i - 1] * i % mod;||| 46 for (int i = (0); i <= (400000); i++) ifac[i] = qpow(fac[i], mod - 2);||| 47 scanf(""%d"", &t);||| 48 while (t--) {||| 49 scanf(""%d%d"", &n, &m);||| 50 for (int i = (1); i <= (m); i++) scanf(""%d%d"", &x[i], &y[i]);||| 51 int cnt = n - 1;||| 52 vector<int> vec;||| 53 for (int i = (m); i >= (1); i--) {||| 54 if (y[i] < n) {||| 55 int p1 = getpos(y[i]);||| 56 int p2 = getpos(y[i] + 1);||| 57 if (p1 + 1 == p2) cnt--;||| 58 }||| 59 int p = getpos(y[i]);||| 60 add(p, 1);||| 61 vec.push_back(p);||| 62 }||| 63 printf(""%d\n"", C(n + cnt, n));||| 64 for (auto x : vec) add(x, -1);||| 65 }||| 66 return 0;||| 67 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 int qpow(int a, int b) {||| 5 int res = 1;||| 6 while (b) {||| 7 if (b & 1) res = (long long)res * a % mod;||| 8 a = (long long)a * a % mod;||| 9 b >>= 1;||| 10 }||| 11 return res;||| 12 }||| 13 int fac[200015 << 1], ifac[200015 << 1];||| 14 int C(int n, int m) {||| 15 if (n < m || m < 0) return 0;||| 16 return (long long)fac[n] * ifac[m] % mod * ifac[n - m] % mod;||| 17 }||| 18 int t, n, m, x[200015], y[200015];||| 19 int sum[200015];||| 20 void add(int p, int v) {||| 21 for (; p <= n; p += ((p) & (-p))) sum[p] += v;||| 22 }||| 23 int query(int p) {||| 24 int res = 0;||| 25 for (; p; p -= ((p) & (-p))) res += sum[p];||| 26 return res;||| 27 }||| 28 int getpos(int x) {||| 29 int l = 1, r = n, ans = 0;||| 30 while (l <= r) {||| 31 int mid = (l + r) >> 1;||| 32 if (mid - query(mid) == x) {||| 33 ans = mid;||| 34 break;||| 35 }||| 36 if (mid - query(mid) < x)||| 37 l = mid + 1;||| 38 else||| 39 r = mid - 1;||| 40 }||| 41 return ans;||| 42 }||| 43 int main() {||| 44 fac[0] = 1;||| 45 for (int i = (1); i <= (400000); i++)||| 46 fac[i] = (long long)fac[i - 1] * i % mod;||| 47 for (int i = (0); i <= (400000); i++) ifac[i] = qpow(fac[i], mod - 2);||| 48 scanf(""%d"", &t);||| 49 while (t--) {||| 50 scanf(""%d%d"", &n, &m);||| 51 for (int i = (1); i <= (m); i++) scanf(""%d%d"", &x[i], &y[i]);||| 52 int cnt = n - 1;||| 53 vector<int> vec;||| 54 for (int i = (m); i >= (1); i--) {||| 55 if (y[i] < n) {||| 56 int p1 = getpos(y[i]);||| 57 int p2 = getpos(y[i] + 1);||| 58 if (p1 + 1 == p2) cnt--;||| 59 }||| 60 int p = getpos(y[i]);||| 61 add(p, 1);||| 62 vec.push_back(p);||| 63 }||| 64 printf(""%d\n"", C(n + cnt, n));||| 65 for (auto x : vec) add(x, -1);||| 66 }||| 67 return 0;||| 68 }||| "	34 
58	85	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct BIT {||| 4 vector<long long> bit;||| 5 long long n;||| 6 BIT(long long size) {||| 7 n = size + 1;||| 8 bit.assign(n, 0);||| 9 }||| 10 void upd(long long pos, long long val) {||| 11 for (++pos; pos < n; pos += pos & -pos) {||| 12 bit[pos] += val;||| 13 }||| 14 }||| 15 long long get(long long pos) {||| 16 long long ret = 0;||| 17 for (++pos; pos > 0; pos -= pos & -pos) {||| 18 ret += bit[pos];||| 19 }||| 20 return ret;||| 21 }||| 22 };||| 23 const long long mod = 998244353;||| 24 long long x[200005], y[200005];||| 25 long long pos[200005];||| 26 long long binpow(long long a, long long b) {||| 27 long long res = 1;||| 28 while (b > 0) {||| 29 if (b & 1) res = res * a % mod;||| 30 a = a * a % mod;||| 31 b >>= 1;||| 32 }||| 33 return res;||| 34 }||| 35 long long fact[2 * 200005];||| 36 long long ans(long long a, long long b) {||| 37 return fact[a] * binpow(fact[b], mod - 2) % mod *||| 38 binpow(fact[a - b], mod - 2) % mod;||| 39 }||| 40 BIT bt(200005);||| 41 void solve() {||| 42 long long n, m;||| 43 cin >> n >> m;||| 44 for (long long i = 1; i <= m; i++) {||| 45 cin >> x[i] >> y[i];||| 46 }||| 47 map<long long, long long> ck;||| 48 for (long long i = m; i >= 1; i--) {||| 49 long long l = 1, r = n;||| 50 while (l < r) {||| 51 long long m = (l + r) / 2;||| 52 if (m - bt.get(m) < y[i]) {||| 53 l = m + 1;||| 54 } else||| 55 r = m;||| 56 }||| 57 pos[i] = l;||| 58 ck[l] = 1;||| 59 bt.upd(l, 1);||| 60 }||| 61 set<long long> s2;||| 62 for (long long i = 1; i <= m; i++) {||| 63 if (!ck[pos[i] + 1]) {||| 64 s2.insert(pos[i] + 1);||| 65 }||| 66 }||| 67 map<long long, long long> mp;||| 68 long long cnt = 0;||| 69 for (long long i = 1; i <= m; i++) {||| 70 long long mini = 1e9;||| 71 if (s2.size() && *s2.rbegin() > pos[i]) {||| 72 mini = min(mini, *s2.upper_bound(pos[i]));||| 73 }||| 74 if (!mp[mini]) cnt++;||| 75 mp[mini] = 1;||| 76 s2.insert(pos[i]);||| 77 }||| 78 for (long long i = 1; i <= m; i++) {||| 79 bt.upd(pos[i], -1);||| 80 }||| 81 cnt = n - 1 - cnt;||| 82 cout << ans(n + cnt, cnt) << endl;||| 83 }||| 84 int32_t main() {||| 85 ios_base::sync_with_stdio(false);||| 86 cin.tie(nullptr);||| 87 fact[0] = 1;||| 88 for (long long i = 1; i < 2 * 200005; i++) {||| 89 fact[i] = fact[i - 1] * i % mod;||| 90 }||| 91 long long t = 1;||| 92 cin >> t;||| 93 while (t--) {||| 94 solve();||| 95 }||| 96 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct BIT {||| 4 vector<long long> bit;||| 5 long long n;||| 6 BIT(long long size) {||| 7 n = size + 1;||| 8 bit.assign(n, 0);||| 9 }||| 10 void upd(long long pos, long long val) {||| 11 for (++pos; pos < n; pos += pos & -pos) {||| 12 bit[pos] += val;||| 13 }||| 14 }||| 15 long long get(long long pos) {||| 16 long long ret = 0;||| 17 for (++pos; pos > 0; pos -= pos & -pos) {||| 18 ret += bit[pos];||| 19 }||| 20 return ret;||| 21 }||| 22 };||| 23 const long long mod = 998244353;||| 24 long long x[200005], y[200005];||| 25 long long pos[200005];||| 26 long long binpow(long long a, long long b) {||| 27 long long res = 1;||| 28 while (b > 0) {||| 29 if (b & 1) res = res * a % mod;||| 30 a = a * a % mod;||| 31 b >>= 1;||| 32 }||| 33 return res;||| 34 }||| 35 long long fact[200005];||| 36 long long ans(long long a, long long b) {||| 37 return fact[a] * binpow(fact[b], mod - 2) % mod *||| 38 binpow(fact[a - b], mod - 2) % mod;||| 39 }||| 40 BIT bt(200005);||| 41 void solve() {||| 42 long long n, m;||| 43 cin >> n >> m;||| 44 for (long long i = 1; i <= m; i++) {||| 45 cin >> x[i] >> y[i];||| 46 }||| 47 map<long long, long long> ck;||| 48 for (long long i = m; i >= 1; i--) {||| 49 long long l = 1, r = n;||| 50 while (l < r) {||| 51 long long m = (l + r) / 2;||| 52 if (m - bt.get(m) < y[i]) {||| 53 l = m + 1;||| 54 } else||| 55 r = m;||| 56 }||| 57 pos[i] = l;||| 58 ck[l] = 1;||| 59 bt.upd(l, 1);||| 60 }||| 61 set<long long> s2;||| 62 for (long long i = 1; i <= m; i++) {||| 63 if (!ck[pos[i] + 1]) {||| 64 s2.insert(pos[i] + 1);||| 65 }||| 66 }||| 67 map<long long, long long> mp;||| 68 long long cnt = 0;||| 69 for (long long i = 1; i <= m; i++) {||| 70 long long mini = 1e9;||| 71 if (s2.size() && *s2.rbegin() > pos[i]) {||| 72 mini = min(mini, *s2.upper_bound(pos[i]));||| 73 }||| 74 if (!mp[mini]) cnt++;||| 75 mp[mini] = 1;||| 76 s2.insert(pos[i]);||| 77 }||| 78 for (long long i = 1; i <= m; i++) {||| 79 bt.upd(pos[i], -1);||| 80 }||| 81 cnt = n - 1 - cnt;||| 82 cout << ans(n + cnt, cnt) << endl;||| 83 }||| 84 int32_t main() {||| 85 ios_base::sync_with_stdio(false);||| 86 cin.tie(nullptr);||| 87 fact[0] = 1;||| 88 for (long long i = 1; i < 2 * 200005; i++) {||| 89 fact[i] = fact[i - 1] * i % mod;||| 90 }||| 91 long long t = 1;||| 92 cin >> t;||| 93 while (t--) {||| 94 solve();||| 95 }||| 96 }||| 	35 long long fact[2 * 200005];
58	84	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = (int)4e5 + 5;||| 4 const int MOD = 998244353;||| 5 const int K = 3500;||| 6 const int M = 60;||| 7 const long long S = (1ll << M) - 1;||| 8 int addMod(int a, int b, int m = MOD) { return a + b < m ? a + b : a + b - m; }||| 9 int mulMod(int a, int b, int m = MOD) { return a * 1ll * b % m; }||| 10 int binPow(int a, int b, int m = MOD) {||| 11 int ret = 1;||| 12 while (b > 0) {||| 13 if (b & 1) {||| 14 ret = mulMod(ret, a, m);||| 15 }||| 16 a = mulMod(a, a, m);||| 17 b >>= 1;||| 18 }||| 19 return ret;||| 20 }||| 21 int fact[MAXN], inv[MAXN];||| 22 int n, m;||| 23 void pre() {||| 24 fact[0] = 1;||| 25 for (int i = (1); i < (MAXN); ++i) {||| 26 fact[i] = mulMod(fact[i - 1], i);||| 27 }||| 28 inv[MAXN - 1] = binPow(fact[MAXN - 1], MOD - 2);||| 29 for (int i = MAXN - 1; i; --i) {||| 30 inv[i - 1] = mulMod(inv[i], i);||| 31 }||| 32 }||| 33 int C(int n, int k) { return mulMod(fact[n], mulMod(inv[k], inv[n - k])); }||| 34 bool bit(long long x, int p) { return x & (1ll << p); }||| 35 long long B[K + 1];||| 36 void solve() {||| 37 cin >> n >> m;||| 38 fill(B, B + K + 1, 0ll);||| 39 for (int i = (0); i < (m); ++i) {||| 40 int x, y;||| 41 cin >> x >> y;||| 42 --y;||| 43 int idx = y / M;||| 44 y %= M;||| 45 B[idx] |= (1ll << y);||| 46 for (int j = K - 1; j > idx; --j) {||| 47 B[j + 1] |= bit(B[j], M - 1);||| 48 B[j] = ((B[j] << 1) & S);||| 49 }||| 50 long long a = (B[idx] & ((1ll << y) - 1));||| 51 long long b = (B[idx] ^ a);||| 52 B[idx + 1] |= bit(b, M - 1);||| 53 B[idx] = ((a + (b << 1)) & S);||| 54 }||| 55 int cnt = n - 1;||| 56 for (int i = (0); i < (K); ++i) {||| 57 cnt -= __builtin_popcountll(B[i]);||| 58 }||| 59 int ans = C(n + cnt, n);||| 60 cout << ans << '\n';||| 61 }||| 62 int main() {||| 63 ios_base::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 cout.tie(0);||| 66 int tt = 1;||| 67 cin >> tt;||| 68 pre();||| 69 for (int i = 1; i <= tt; ++i) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = (int)4e5 + 5;||| 4 const int MOD = 998244353;||| 5 const int K = 3500;||| 6 const int M = 60;||| 7 const long long S = (1ll << M) - 1;||| 8 int addMod(int a, int b, int m = MOD) { return a + b < m ? a + b : a + b - m; }||| 9 int mulMod(int a, int b, int m = MOD) { return a * 1ll * b % m; }||| 10 int binPow(int a, int b, int m = MOD) {||| 11 int ret = 1;||| 12 while (b > 0) {||| 13 if (b & 1) {||| 14 ret = mulMod(ret, a, m);||| 15 }||| 16 a = mulMod(a, a, m);||| 17 b >>= 1;||| 18 }||| 19 return ret;||| 20 }||| 21 int fact[MAXN], inv[MAXN];||| 22 int n, m;||| 23 void pre() {||| 24 fact[0] = 1;||| 25 for (int i = (1); i < (MAXN); ++i) {||| 26 fact[i] = mulMod(fact[i - 1], i);||| 27 }||| 28 inv[MAXN - 1] = binPow(fact[MAXN - 1], MOD - 2);||| 29 for (int i = MAXN - 1; i; --i) {||| 30 inv[i - 1] = mulMod(inv[i], i);||| 31 }||| 32 }||| 33 int C(int n, int k) { return mulMod(fact[n], mulMod(inv[k], inv[n - k])); }||| 34 bool bit(long long x, int p) { return x & (1 << p); }||| 35 long long B[K + 1];||| 36 void solve() {||| 37 cin >> n >> m;||| 38 fill(B, B + K + 1, 0ll);||| 39 for (int i = (0); i < (m); ++i) {||| 40 int x, y;||| 41 cin >> x >> y;||| 42 --y;||| 43 int idx = y / M;||| 44 y %= M;||| 45 B[idx] |= (1ll << y);||| 46 for (int j = K - 1; j > idx; --j) {||| 47 B[j + 1] |= bit(B[j], M - 1);||| 48 B[j] = ((B[j] << 1) & S);||| 49 }||| 50 long long a = (B[idx] & ((1ll << y) - 1));||| 51 long long b = (B[idx] ^ a);||| 52 B[idx + 1] |= bit(b, M - 1);||| 53 B[idx] = ((a + (b << 1)) & S);||| 54 }||| 55 int cnt = n - 1;||| 56 for (int i = (0); i < (K); ++i) {||| 57 cnt -= __builtin_popcountll(B[i]);||| 58 }||| 59 int ans = C(n + cnt, n);||| 60 cout << ans << '\n';||| 61 }||| 62 int main() {||| 63 ios_base::sync_with_stdio(0);||| 64 cin.tie(0);||| 65 cout.tie(0);||| 66 int tt = 1;||| 67 cin >> tt;||| 68 pre();||| 69 for (int i = 1; i <= tt; ++i) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	34 bool bit(long long x, int p) { return x & (1ll << p); }
59	33	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1005;||| 4 int n, m, suc;||| 5 vector<int> e[N];||| 6 int a[N], b[N], fr[N];||| 7 long long ATK;||| 8 int vis[N];||| 9 void dfs(int x, int fa, long long ATK) {||| 10 if (suc) return;||| 11 for (auto i : e[x])||| 12 if (i != fa && a[i] < ATK) {||| 13 if (vis[i] && vis[x]) continue;||| 14 if (vis[i]) {||| 15 suc = 1;||| 16 for (int j = x; j; j = fr[j]) vis[j] = 1;||| 17 } else if (fr[i]) {||| 18 suc = 1;||| 19 for (int j = i; j; j = fr[j]) vis[j] = 1;||| 20 for (int j = x; j; j = fr[j]) vis[j] = 1;||| 21 } else {||| 22 fr[i] = x;||| 23 dfs(i, x, ATK + b[i]);||| 24 }||| 25 if (suc) return;||| 26 }||| 27 }||| 28 bool check(int v) {||| 29 int rem = n - 1;||| 30 memset(vis, 0, sizeof(vis));||| 31 vis[1] = 1;||| 32 for (;;) {||| 33 bool flg = 0;||| 34 suc = 0;||| 35 long long ATK = v;||| 36 memset(fr, 0, sizeof(fr));||| 37 for (int i = 1; i <= n; i++)||| 38 if (vis[i])||| 39 ATK += b[i];||| 40 else||| 41 flg = 1;||| 42 if (!flg) return 1;||| 43 for (int i = 1; i <= n && !suc; i++)||| 44 if (vis[i]) dfs(i, 0, ATK);||| 45 if (!suc) return 0;||| 46 }||| 47 }||| 48 void solve() {||| 49 scanf(""%d%d"", &n, &m);||| 50 for (int i = 1; i <= n; i++) e[i].resize(0);||| 51 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 52 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 53 for (int i = 1; i <= m; i++) {||| 54 int x, y;||| 55 scanf(""%d%d"", &x, &y);||| 56 e[x].push_back(y);||| 57 e[y].push_back(x);||| 58 }||| 59 int l = 1, r = 1e9 + 5, ans = -1;||| 60 while (l <= r) {||| 61 int mid = (l + r) / 2;||| 62 if (check(mid))||| 63 ans = mid, r = mid - 1;||| 64 else||| 65 l = mid + 1;||| 66 }||| 67 cout << ans << endl;||| 68 }||| 69 int main() {||| 70 int T;||| 71 scanf(""%d"", &T);||| 72 while (T--) solve();||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1005;||| 4 int n, m, suc;||| 5 vector<int> e[N];||| 6 int a[N], b[N], fr[N];||| 7 long long ATK;||| 8 int vis[N];||| 9 void dfs(int x, int fa, long long ATK) {||| 10 if (suc) return;||| 11 for (auto i : e[x])||| 12 if (i != fa && a[i] < ATK) {||| 13 if (vis[i] && vis[x]) continue;||| 14 if (vis[i]) {||| 15 suc = 1;||| 16 for (int j = x; j; j = fr[j]) vis[j] = 1;||| 17 } else if (fr[i]) {||| 18 suc = 1;||| 19 for (int j = i; j; j = fr[j]) vis[j] = 1;||| 20 for (int j = x; j; j = fr[j]) vis[j] = 1;||| 21 } else {||| 22 fr[i] = x;||| 23 dfs(i, x, ATK + b[i]);||| 24 }||| 25 if (suc) return;||| 26 }||| 27 }||| 28 bool check(int v) {||| 29 int rem = n - 1;||| 30 memset(vis, 0, sizeof(vis));||| 31 vis[1] = 1;||| 32 for (;;) {||| 33 bool flg = 0;||| 34 suc = 0;||| 35 long long ATK = v;||| 36 memset(fr, 0, sizeof(fr));||| 37 for (int i = 1; i <= n; i++)||| 38 if (vis[i])||| 39 ATK += b[i];||| 40 else||| 41 flg = 1;||| 42 if (!flg) return 1;||| 43 for (int i = 1; i <= n && !suc; i++)||| 44 if (vis[i]) dfs(i, 0, ATK);||| 45 if (!suc) return 0;||| 46 }||| 47 }||| 48 void solve() {||| 49 scanf(""%d%d"", &n, &m);||| 50 for (int i = 1; i <= n; i++) e[i].resize(0);||| 51 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 52 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 53 for (int i = 1; i <= m; i++) {||| 54 int x, y;||| 55 scanf(""%d%d"", &x, &y);||| 56 e[x].push_back(y);||| 57 e[y].push_back(x);||| 58 }||| 59 int l = 1, r = 1e9, ans = -1;||| 60 while (l <= r) {||| 61 int mid = (l + r) / 2;||| 62 if (check(mid))||| 63 ans = mid, r = mid - 1;||| 64 else||| 65 l = mid + 1;||| 66 }||| 67 cout << ans << endl;||| 68 }||| 69 int main() {||| 70 int T;||| 71 scanf(""%d"", &T);||| 72 while (T--) solve();||| 73 }||| "	59 int l = 1, r = 1e9 + 5, ans = -1;
59	28	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1005;||| 4 const int inf = 0x3f3f3f3f;||| 5 int read() {||| 6 int x = 0, f = 1;||| 7 char c;||| 8 while ((c = getchar()) < '0' || c > '9') {||| 9 if (c == '-') f = -1;||| 10 }||| 11 while (c >= '0' && c <= '9') {||| 12 x = (x << 3) + (x << 1) + (c ^ 48);||| 13 c = getchar();||| 14 }||| 15 return x * f;||| 16 }||| 17 int T, n, m, ans, a[M], b[M], vis[M], cur[M], pre[M];||| 18 vector<int> g[M];||| 19 int path(int x) {||| 20 if (vis[x]) return 0;||| 21 vis[x] = 1;||| 22 return min(inf, path(pre[x]) + b[x]);||| 23 }||| 24 int dfs(int u, int x) {||| 25 x = min(inf, x + b[u]);||| 26 cur[u] = 1;||| 27 for (auto v : g[u]) {||| 28 if (v == pre[u] || x <= a[v]) continue;||| 29 if (cur[v]) return path(u) + path(v);||| 30 pre[v] = u;||| 31 int f = dfs(v, x);||| 32 if (f != -1) return f;||| 33 }||| 34 return -1;||| 35 }||| 36 int check(int x) {||| 37 int f = 0;||| 38 memset(vis, 0, sizeof vis);||| 39 vis[1] = 1;||| 40 while (f != -1) {||| 41 f = -1;||| 42 memcpy(cur, vis, sizeof cur);||| 43 for (int u = 1; u <= n && f == -1; u++)||| 44 if (vis[u])||| 45 for (auto v : g[u])||| 46 if (!vis[v] && x > a[v]) {||| 47 pre[v] = u;||| 48 f = dfs(v, x);||| 49 if (f != -1) break;||| 50 }||| 51 if (f == -1) {||| 52 for (int i = 1; i <= n; i++)||| 53 if (!vis[i]) return 0;||| 54 return 1;||| 55 }||| 56 x = min(inf, x + f);||| 57 }||| 58 return 0;||| 59 }||| 60 void dich(int l, int r) {||| 61 if (l > r) return;||| 62 int mid = (l + r) >> 1;||| 63 if (check(mid)) {||| 64 ans = mid;||| 65 dich(l, mid - 1);||| 66 } else||| 67 dich(mid + 1, r);||| 68 }||| 69 void work() {||| 70 n = read();||| 71 m = read();||| 72 for (int i = 1; i <= n; i++) g[i].clear();||| 73 for (int i = 2; i <= n; i++) a[i] = read();||| 74 for (int i = 2; i <= n; i++) b[i] = read();||| 75 for (int i = 1; i <= m; i++) {||| 76 int u = read(), v = read();||| 77 g[u].push_back(v);||| 78 g[v].push_back(u);||| 79 }||| 80 dich(0, inf);||| 81 printf(""%d\n"", ans);||| 82 }||| 83 signed main() {||| 84 T = read();||| 85 while (T--) work();||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int M = 1005;||| 4 const int inf = 0x3f3f3f3f;||| 5 int read() {||| 6 int x = 0, f = 1;||| 7 char c;||| 8 while ((c = getchar()) < '0' || c > '9') {||| 9 if (c == '-') f = -1;||| 10 }||| 11 while (c >= '0' && c <= '9') {||| 12 x = (x << 3) + (x << 1) + (c ^ 48);||| 13 c = getchar();||| 14 }||| 15 return x * f;||| 16 }||| 17 int T, n, m, ans, a[M], b[M], vis[M], cur[M], pre[M];||| 18 vector<int> g[M];||| 19 int path(int x) {||| 20 if (vis[x]) return 0;||| 21 vis[x] = 1;||| 22 return min(inf, path(pre[x]) + b[x]);||| 23 }||| 24 int dfs(int u, int x) {||| 25 x = min(inf, x + b[u]);||| 26 cur[u] = 1;||| 27 for (auto v : g[u]) {||| 28 if (v == pre[u] || x <= a[v]) continue;||| 29 if (cur[v]) return path(u) + path(v);||| 30 pre[v] = u;||| 31 int f = dfs(v, x);||| 32 if (f != -1) return f;||| 33 }||| 34 return -1;||| 35 }||| 36 int check(int x) {||| 37 int f = 0;||| 38 memset(vis, 0, sizeof vis);||| 39 vis[1] = 1;||| 40 while (f != -1) {||| 41 f = -1;||| 42 memcpy(cur, vis, sizeof cur);||| 43 for (int u = 1; u <= n && f == -1; u++)||| 44 if (vis[u])||| 45 for (auto v : g[u])||| 46 if (!vis[v] && x > a[v]) {||| 47 pre[v] = u;||| 48 f = dfs(v, x);||| 49 if (f != -1) break;||| 50 }||| 51 if (f == -1) {||| 52 for (int i = 1; i <= n; i++)||| 53 if (!vis[i]) return 0;||| 54 return 1;||| 55 }||| 56 x = min(inf, x + f);||| 57 }||| 58 return 0;||| 59 }||| 60 void dich(int l, int r) {||| 61 if (l > r) return;||| 62 int mid = (l + r) >> 1;||| 63 if (check(mid)) {||| 64 ans = mid;||| 65 dich(l, mid - 1);||| 66 } else||| 67 dich(mid + 1, r);||| 68 }||| 69 void work() {||| 70 n = read();||| 71 m = read();||| 72 for (int i = 1; i <= n; i++) g[i].clear();||| 73 for (int i = 2; i <= n; i++) a[i] = read();||| 74 for (int i = 2; i <= n; i++) b[i] = read();||| 75 for (int i = 1; i <= m; i++) {||| 76 int u = read(), v = read();||| 77 g[u].push_back(v);||| 78 g[v].push_back(u);||| 79 }||| 80 dich(0, 1e9);||| 81 printf(""%d\n"", ans);||| 82 }||| 83 signed main() {||| 84 T = read();||| 85 while (T--) work();||| 86 }||| "	80 dich(0, inf);
59	57	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, a[2005], b[2005], inset[2005], from[2005], vis[2005];||| 4 long long dt;||| 5 vector<long long> e[2005], vec;||| 6 void fuck(long long x) {||| 7 while (!inset[x]) {||| 8 dt += b[x];||| 9 vec.push_back(x);||| 10 inset[x] = 1;||| 11 x = from[x];||| 12 }||| 13 }||| 14 bool dfs(long long u, long long pw) {||| 15 vis[u] = 1;||| 16 for (auto v : e[u]) {||| 17 if (pw <= a[v]) continue;||| 18 if (inset[u] && inset[v]) continue;||| 19 if (v == from[u]) continue;||| 20 if (vis[v]) {||| 21 fuck(v);||| 22 fuck(u);||| 23 return 1;||| 24 } else {||| 25 from[v] = u;||| 26 if (dfs(v, pw + b[v])) return 1;||| 27 }||| 28 }||| 29 return 0;||| 30 }||| 31 bool check(long long p) {||| 32 vec.clear();||| 33 for (long long i = (1); i <= (n); i++) inset[i] = 0;||| 34 vec.push_back(1);||| 35 inset[1] = 1;||| 36 for (long long i = (1); i <= (n); i++) {||| 37 for (long long j = (1); j <= (n); j++) from[j] = j, vis[j] = inset[j];||| 38 dt = 0;||| 39 for (auto x : vec) {||| 40 if (dfs(x, p)) {||| 41 break;||| 42 }||| 43 }||| 44 p += dt;||| 45 }||| 46 return ((long long)vec.size()) == n;||| 47 }||| 48 void solve() {||| 49 scanf(""%lld%lld"", &n, &m);||| 50 for (long long i = (2); i <= (n); i++) scanf(""%lld"", &a[i]);||| 51 for (long long i = (2); i <= (n); i++) scanf(""%lld"", &b[i]);||| 52 for (long long i = (1); i <= (n); i++) e[i].clear();||| 53 for (long long i = (1); i <= (m); i++) {||| 54 long long u, v;||| 55 scanf(""%lld%lld"", &u, &v);||| 56 e[u].push_back(v);||| 57 e[v].push_back(u);||| 58 }||| 59 long long l = 1, r = 1e9 + 1, ans = 0;||| 60 while (l <= r) {||| 61 long long mid = (l + r) >> 1;||| 62 if (check(mid))||| 63 ans = mid, r = mid - 1;||| 64 else||| 65 l = mid + 1;||| 66 }||| 67 printf(""%lld\n"", ans);||| 68 }||| 69 signed main() {||| 70 long long T;||| 71 scanf(""%lld"", &T);||| 72 while (T-- > 0) solve();||| 73 return 0;||| 74 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long n, m, a[2005], b[2005], inset[2005], from[2005], vis[2005];||| 4 long long dt;||| 5 vector<long long> e[2005], vec;||| 6 void fuck(long long x) {||| 7 while (!inset[x]) {||| 8 dt += b[x];||| 9 vec.push_back(x);||| 10 inset[x] = 1;||| 11 x = from[x];||| 12 }||| 13 }||| 14 bool dfs(long long u, long long pw) {||| 15 vis[u] = 1;||| 16 for (auto v : e[u]) {||| 17 if (pw <= a[v]) continue;||| 18 if (inset[u] && inset[v]) continue;||| 19 if (v == from[u]) continue;||| 20 if (vis[v]) {||| 21 fuck(v);||| 22 fuck(u);||| 23 return 1;||| 24 } else {||| 25 from[v] = u;||| 26 if (dfs(v, pw + b[v])) return 1;||| 27 }||| 28 }||| 29 return 0;||| 30 }||| 31 bool check(long long p) {||| 32 vec.clear();||| 33 for (long long i = (1); i <= (n); i++) inset[i] = 0;||| 34 vec.push_back(1);||| 35 inset[1] = 1;||| 36 for (long long i = (1); i <= (n); i++) {||| 37 for (long long j = (1); j <= (n); j++) from[j] = j, vis[j] = inset[j];||| 38 dt = 0;||| 39 for (auto x : vec) {||| 40 if (dfs(x, p)) {||| 41 break;||| 42 }||| 43 }||| 44 p += dt;||| 45 }||| 46 return ((long long)vec.size()) == n;||| 47 }||| 48 void solve() {||| 49 scanf(""%lld%lld"", &n, &m);||| 50 for (long long i = (2); i <= (n); i++) scanf(""%lld"", &a[i]);||| 51 for (long long i = (2); i <= (n); i++) scanf(""%lld"", &b[i]);||| 52 for (long long i = (1); i <= (n); i++) e[i].clear();||| 53 for (long long i = (1); i <= (m); i++) {||| 54 long long u, v;||| 55 scanf(""%lld%lld"", &u, &v);||| 56 e[u].push_back(v);||| 57 e[v].push_back(u);||| 58 }||| 59 long long l = 1, r = 1e9, ans = 0;||| 60 while (l <= r) {||| 61 long long mid = (l + r) >> 1;||| 62 if (check(mid))||| 63 ans = mid, r = mid - 1;||| 64 else||| 65 l = mid + 1;||| 66 }||| 67 printf(""%lld\n"", ans);||| 68 }||| 69 signed main() {||| 70 long long T;||| 71 scanf(""%lld"", &T);||| 72 while (T-- > 0) solve();||| 73 return 0;||| 74 }||| "	59 long long l = 1, r = 1e9 + 1, ans = 0;
59	50	"1 #include <bits/stdc++.h>||| 2 const int N = 1010;||| 3 using namespace std;||| 4 int n, m;||| 5 int a[N], b[N];||| 6 int used[N];||| 7 vector<int> v[N];||| 8 int par[N];||| 9 int X, Y;||| 10 void dfs(int x, int p, long long k) {||| 11 k += b[x];||| 12 used[x] = 1;||| 13 par[x] = p;||| 14 for (int y : v[x]) {||| 15 if (y == p || k <= a[y]) {||| 16 continue;||| 17 } else if (used[y]) {||| 18 X = x;||| 19 Y = y;||| 20 } else {||| 21 dfs(y, x, k);||| 22 }||| 23 if (X != -1) {||| 24 break;||| 25 }||| 26 }||| 27 }||| 28 bool can(long long k) {||| 29 int cnt = 1;||| 30 for (int i = 1; i <= n; i++) {||| 31 used[i] = 0;||| 32 }||| 33 used[1] = 2;||| 34 while (cnt < n) {||| 35 for (int i = 1; i <= n; i++) {||| 36 if (used[i] == 1) {||| 37 used[i] = 0;||| 38 }||| 39 par[i] = -1;||| 40 }||| 41 X = Y = -1;||| 42 for (int i = 1; i <= n; i++) {||| 43 if (used[i] == 2) {||| 44 for (int j : v[i]) {||| 45 if (used[j] == 2 || k <= a[j]) {||| 46 continue;||| 47 }||| 48 if (used[j] == 1) {||| 49 X = i;||| 50 Y = j;||| 51 } else {||| 52 dfs(j, i, k);||| 53 }||| 54 if (X != -1) {||| 55 break;||| 56 }||| 57 }||| 58 }||| 59 if (X != -1) {||| 60 break;||| 61 }||| 62 }||| 63 if (X == -1) {||| 64 return false;||| 65 }||| 66 for (int x : {X, Y}) {||| 67 while (used[x] != 2) {||| 68 used[x] = 2;||| 69 k += b[x];||| 70 x = par[x];||| 71 cnt += 1;||| 72 }||| 73 }||| 74 }||| 75 return cnt == n;||| 76 }||| 77 void solve() {||| 78 cin >> n >> m;||| 79 for (int i = 1; i <= n; i++) {||| 80 v[i].clear();||| 81 }||| 82 for (int i = 2; i <= n; i++) {||| 83 cin >> a[i];||| 84 }||| 85 for (int i = 2; i <= n; i++) {||| 86 cin >> b[i];||| 87 }||| 88 for (int i = 1; i <= m; i++) {||| 89 int x, y;||| 90 cin >> x >> y;||| 91 v[x].push_back(y);||| 92 v[y].push_back(x);||| 93 }||| 94 int l = 0, r = 1e9 + 1;||| 95 while (l < r) {||| 96 int m = (l + r) / 2;||| 97 if (can(m)) {||| 98 r = m;||| 99 } else {||| 100 l = m + 1;||| 101 }||| 102 }||| 103 cout << l << ""\n"";||| 104 }||| 105 int main() {||| 106 ios_base::sync_with_stdio(0);||| 107 int t;||| 108 cin >> t;||| 109 while (t--) {||| 110 solve();||| 111 }||| 112 }||| "	"1 #include <bits/stdc++.h>||| 2 const int N = 1010;||| 3 using namespace std;||| 4 int n, m;||| 5 int a[N], b[N];||| 6 int used[N];||| 7 vector<int> v[N];||| 8 int par[N];||| 9 int X, Y;||| 10 void dfs(int x, int p, long long k) {||| 11 k += b[x];||| 12 used[x] = 1;||| 13 par[x] = p;||| 14 for (int y : v[x]) {||| 15 if (y == p || k <= a[y]) {||| 16 continue;||| 17 } else if (used[y]) {||| 18 X = x;||| 19 Y = y;||| 20 } else {||| 21 dfs(y, x, k);||| 22 }||| 23 if (X != -1) {||| 24 break;||| 25 }||| 26 }||| 27 }||| 28 bool can(long long k) {||| 29 int cnt = 1;||| 30 for (int i = 1; i <= n; i++) {||| 31 used[i] = 0;||| 32 }||| 33 used[1] = 2;||| 34 while (cnt < n) {||| 35 for (int i = 1; i <= n; i++) {||| 36 if (used[i] == 1) {||| 37 used[i] = 0;||| 38 }||| 39 par[i] = -1;||| 40 }||| 41 X = Y = -1;||| 42 for (int i = 1; i <= n; i++) {||| 43 if (used[i] == 2) {||| 44 for (int j : v[i]) {||| 45 if (used[j] == 2 || k <= a[j]) {||| 46 continue;||| 47 }||| 48 if (used[j] == 1) {||| 49 X = i;||| 50 Y = j;||| 51 } else {||| 52 dfs(j, i, k);||| 53 }||| 54 if (X != -1) {||| 55 break;||| 56 }||| 57 }||| 58 }||| 59 if (X != -1) {||| 60 break;||| 61 }||| 62 }||| 63 if (X == -1) {||| 64 return false;||| 65 }||| 66 for (int x : {X, Y}) {||| 67 while (used[x] != 2) {||| 68 used[x] = 2;||| 69 k += b[x];||| 70 x = par[x];||| 71 cnt += 1;||| 72 }||| 73 }||| 74 }||| 75 return cnt == n;||| 76 }||| 77 void solve() {||| 78 cin >> n >> m;||| 79 for (int i = 1; i <= n; i++) {||| 80 v[i].clear();||| 81 }||| 82 for (int i = 2; i <= n; i++) {||| 83 cin >> a[i];||| 84 }||| 85 for (int i = 2; i <= n; i++) {||| 86 cin >> b[i];||| 87 }||| 88 for (int i = 1; i <= m; i++) {||| 89 int x, y;||| 90 cin >> x >> y;||| 91 v[x].push_back(y);||| 92 v[y].push_back(x);||| 93 }||| 94 int l = 0, r = 1e9;||| 95 while (l < r) {||| 96 int m = (l + r) / 2;||| 97 if (can(m)) {||| 98 r = m;||| 99 } else {||| 100 l = m + 1;||| 101 }||| 102 }||| 103 cout << l << ""\n"";||| 104 }||| 105 int main() {||| 106 ios_base::sync_with_stdio(0);||| 107 int t;||| 108 cin >> t;||| 109 while (t--) {||| 110 solve();||| 111 }||| 112 }||| "	94 int l = 0, r = 1e9 + 1;
59	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Inf = 0x3f3f3f3f;||| 4 int N, M;||| 5 int a[1005], b[1005];||| 6 vector<int> nei[1005];||| 7 bool lgl[1005];||| 8 bool in[1005];||| 9 long long nhp;||| 10 bool dfs(int now, int lst, long long hp) {||| 11 if (hp < a[now]) return 0;||| 12 lgl[now] = 1;||| 13 for (int i = 0; i < (((int)(nei[now]).size())); ++i) {||| 14 int to = nei[now][i];||| 15 if (to == lst) continue;||| 16 if (lgl[to] || in[to]) return nhp = hp + b[now], in[now] = 1, 1;||| 17 if (dfs(to, now, hp + b[now])) {||| 18 in[now] = 1;||| 19 return 1;||| 20 }||| 21 }||| 22 return 0;||| 23 }||| 24 bool check(long long hp) {||| 25 memset(in, 0, sizeof(in));||| 26 in[1] = 1;||| 27 while (1) {||| 28 memset(lgl, 0, sizeof(lgl));||| 29 bool fnd = 0;||| 30 for (int i = 1; i <= (N); ++i)||| 31 if (in[i]) {||| 32 for (int j = 0; j < (((int)(nei[i]).size())); ++j) {||| 33 int to = nei[i][j];||| 34 if (in[to]) continue;||| 35 if (dfs(to, i, hp)) {||| 36 fnd = 1;||| 37 hp = nhp;||| 38 goto Brk;||| 39 }||| 40 }||| 41 }||| 42 Brk:||| 43 if (!fnd) break;||| 44 }||| 45 for (int i = 1; i <= (N); ++i)||| 46 if (!in[i]) return 0;||| 47 return 1;||| 48 }||| 49 void solve() {||| 50 scanf(""%d%d"", &N, &M);||| 51 for (int i = 1; i <= (N); ++i) nei[i].clear();||| 52 for (int i = 1; i <= (N - 1); ++i) scanf(""%d"", a + i + 1), ++a[i + 1];||| 53 for (int i = 1; i <= (N - 1); ++i) scanf(""%d"", b + i + 1);||| 54 for (int i = 0; i < (M); ++i) {||| 55 int u, v;||| 56 scanf(""%d%d"", &u, &v);||| 57 nei[u].push_back(v);||| 58 nei[v].push_back(u);||| 59 }||| 60 int L = -1, R = 1e9 + 1;||| 61 while (R - L > 1) {||| 62 int m = (L + R) >> 1;||| 63 if (check(m))||| 64 R = m;||| 65 else||| 66 L = m;||| 67 }||| 68 printf(""%d\n"", R);||| 69 }||| 70 int main() {||| 71 int T;||| 72 scanf(""%d"", &T);||| 73 while (T--) solve();||| 74 return 0;||| 75 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int Inf = 0x3f3f3f3f;||| 4 int N, M;||| 5 int a[1005], b[1005];||| 6 vector<int> nei[1005];||| 7 bool lgl[1005];||| 8 bool in[1005];||| 9 long long nhp;||| 10 bool dfs(int now, int lst, long long hp) {||| 11 if (hp < a[now]) return 0;||| 12 lgl[now] = 1;||| 13 for (int i = 0; i < (((int)(nei[now]).size())); ++i) {||| 14 int to = nei[now][i];||| 15 if (to == lst) continue;||| 16 if (lgl[to] || in[to]) return nhp = hp + b[now], in[now] = 1, 1;||| 17 if (dfs(to, now, hp + b[now])) {||| 18 in[now] = 1;||| 19 return 1;||| 20 }||| 21 }||| 22 return 0;||| 23 }||| 24 bool check(long long hp) {||| 25 memset(in, 0, sizeof(in));||| 26 in[1] = 1;||| 27 while (1) {||| 28 memset(lgl, 0, sizeof(lgl));||| 29 bool fnd = 0;||| 30 for (int i = 1; i <= (N); ++i)||| 31 if (in[i]) {||| 32 for (int j = 0; j < (((int)(nei[i]).size())); ++j) {||| 33 int to = nei[i][j];||| 34 if (in[to]) continue;||| 35 if (dfs(to, i, hp)) {||| 36 fnd = 1;||| 37 hp = nhp;||| 38 goto Brk;||| 39 }||| 40 }||| 41 }||| 42 Brk:||| 43 if (!fnd) break;||| 44 }||| 45 for (int i = 1; i <= (N); ++i)||| 46 if (!in[i]) return 0;||| 47 return 1;||| 48 }||| 49 void solve() {||| 50 scanf(""%d%d"", &N, &M);||| 51 for (int i = 1; i <= (N); ++i) nei[i].clear();||| 52 for (int i = 1; i <= (N - 1); ++i) scanf(""%d"", a + i + 1), ++a[i];||| 53 for (int i = 1; i <= (N - 1); ++i) scanf(""%d"", b + i + 1);||| 54 for (int i = 0; i < (M); ++i) {||| 55 int u, v;||| 56 scanf(""%d%d"", &u, &v);||| 57 nei[u].push_back(v);||| 58 nei[v].push_back(u);||| 59 }||| 60 int L = -1, R = 1e9 + 1;||| 61 while (R - L > 1) {||| 62 int m = (L + R) >> 1;||| 63 if (check(m))||| 64 R = m;||| 65 else||| 66 L = m;||| 67 }||| 68 printf(""%d\n"", R);||| 69 }||| 70 int main() {||| 71 int T;||| 72 scanf(""%d"", &T);||| 73 while (T--) solve();||| 74 return 0;||| 75 }||| "	"52 for (int i = 1; i <= (N - 1); ++i) scanf(""%d"", a + i + 1), ++a[i + 1];"
59	0	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[1010];||| 4 int b[1010];||| 5 bool mark[1010];||| 6 int from[1010];||| 7 int cnt = 0;||| 8 vector<int> outgo[1010];||| 9 bool extendFlag = false;||| 10 int baseValue = 0;||| 11 void update(int x) {||| 12 if (mark[x]) return;||| 13 baseValue += b[x];||| 14 if (baseValue > 1000000001) baseValue = 1000000001;||| 15 mark[x] = true;||| 16 cnt++;||| 17 update(from[x]);||| 18 }||| 19 void dfs(int now, int str) {||| 20 if (extendFlag) return;||| 21 if (str > 1000000001) str = 1000000001;||| 22 for (int i = 0; i < outgo[now].size(); i++) {||| 23 int to = outgo[now][i];||| 24 if (to == from[now]) continue;||| 25 if (mark[to] && mark[now]) continue;||| 26 if (from[to] == -1) {||| 27 if (mark[to]) {||| 28 update(now);||| 29 extendFlag = true;||| 30 return;||| 31 } else if (a[to] < str) {||| 32 from[to] = now;||| 33 dfs(to, str + b[to]);||| 34 }||| 35 } else {||| 36 if (mark[to]) {||| 37 extendFlag = true;||| 38 update(now);||| 39 return;||| 40 } else if (a[to] < str) {||| 41 update(to);||| 42 update(now);||| 43 extendFlag = true;||| 44 return;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 int main() {||| 50 int T;||| 51 scanf(""%d"", &T);||| 52 while (T--) {||| 53 int n, m;||| 54 scanf(""%d %d"", &n, &m);||| 55 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 56 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 57 for (int i = 1; i <= n; i++) outgo[i].clear();||| 58 for (int i = 1; i <= m; i++) {||| 59 int u, v;||| 60 scanf(""%d %d"", &u, &v);||| 61 outgo[u].push_back(v);||| 62 outgo[v].push_back(u);||| 63 }||| 64 int l = 1, r = 1000000001;||| 65 int ans = 1000000001;||| 66 while (l <= r) {||| 67 int mid = (l + r) >> 1;||| 68 baseValue = mid;||| 69 for (int i = 2; i <= n; i++) mark[i] = false;||| 70 mark[1] = true;||| 71 cnt = 1;||| 72 while (true) {||| 73 for (int i = 1; i <= n; i++) from[i] = -1;||| 74 extendFlag = false;||| 75 for (int i = 1; i <= n; i++)||| 76 if (mark[i]) {||| 77 from[i] = 0;||| 78 dfs(i, baseValue);||| 79 if (extendFlag) break;||| 80 }||| 81 if (!extendFlag) break;||| 82 }||| 83 if (cnt == n) {||| 84 ans = mid;||| 85 r = mid - 1;||| 86 } else||| 87 l = mid + 1;||| 88 }||| 89 printf(""%d\n"", ans);||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[1010];||| 4 int b[1010];||| 5 bool mark[1010];||| 6 int from[1010];||| 7 int cnt = 0;||| 8 vector<int> outgo[1010];||| 9 bool extendFlag = false;||| 10 int baseValue = 0;||| 11 void update(int x) {||| 12 if (mark[x]) return;||| 13 baseValue += b[x];||| 14 if (baseValue > 1000000001) baseValue = 1000000001;||| 15 mark[x] = true;||| 16 cnt++;||| 17 update(from[x]);||| 18 }||| 19 void dfs(int now, int str) {||| 20 if (extendFlag) return;||| 21 if (str > 1000000001) str = 1000000001;||| 22 for (int i = 0; i < outgo[now].size(); i++) {||| 23 int to = outgo[now][i];||| 24 if (to == from[now]) continue;||| 25 if (mark[to] && mark[now]) continue;||| 26 if (from[to] == -1) {||| 27 if (mark[to]) {||| 28 update(now);||| 29 extendFlag = true;||| 30 return;||| 31 } else if (a[to] < str) {||| 32 from[to] = now;||| 33 dfs(to, str + b[to]);||| 34 }||| 35 } else {||| 36 if (mark[to]) {||| 37 extendFlag = true;||| 38 update(now);||| 39 return;||| 40 } else if (a[to] < str) {||| 41 update(to);||| 42 update(now);||| 43 extendFlag = true;||| 44 return;||| 45 }||| 46 }||| 47 }||| 48 }||| 49 int main() {||| 50 int T;||| 51 scanf(""%d"", &T);||| 52 while (T--) {||| 53 int n, m;||| 54 scanf(""%d %d"", &n, &m);||| 55 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 56 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 57 for (int i = 1; i <= n; i++) outgo[i].clear();||| 58 for (int i = 1; i <= m; i++) {||| 59 int u, v;||| 60 scanf(""%d %d"", &u, &v);||| 61 outgo[u].push_back(v);||| 62 outgo[v].push_back(u);||| 63 }||| 64 int l = 1, r = 1000000000;||| 65 int ans = 1000000000;||| 66 while (l <= r) {||| 67 int mid = (l + r) >> 1;||| 68 baseValue = mid;||| 69 for (int i = 2; i <= n; i++) mark[i] = false;||| 70 mark[1] = true;||| 71 cnt = 1;||| 72 while (true) {||| 73 for (int i = 1; i <= n; i++) from[i] = -1;||| 74 extendFlag = false;||| 75 for (int i = 1; i <= n; i++)||| 76 if (mark[i]) {||| 77 from[i] = 0;||| 78 dfs(i, baseValue);||| 79 if (extendFlag) break;||| 80 }||| 81 if (!extendFlag) break;||| 82 }||| 83 if (cnt == n) {||| 84 ans = mid;||| 85 r = mid - 1;||| 86 } else||| 87 l = mid + 1;||| 88 }||| 89 printf(""%d\n"", ans);||| 90 }||| 91 return 0;||| 92 }||| "	64 int l = 1, r = 1000000001;
59	68	"1 #include <bits/stdc++.h>||| 2 const int N = 1005;||| 3 void work(int u);||| 4 bool dfs(int u, long long now);||| 5 int a[N], b[N];||| 6 std::vector<int> G[N];||| 7 int fa[N];||| 8 bool vis[N];||| 9 long long now;||| 10 int cnt;||| 11 int n, m;||| 12 int main() {||| 13 int T;||| 14 scanf(""%d"", &T);||| 15 while (T--) {||| 16 scanf(""%d %d"", &n, &m);||| 17 for (int i = 2; i <= n; ++i) scanf(""%d"", a + i);||| 18 for (int i = 2; i <= n; ++i) scanf(""%d"", b + i);||| 19 for (int i = 1; i <= n; ++i) G[i].clear();||| 20 for (int i = 1; i <= m; ++i) {||| 21 int u, v;||| 22 scanf(""%d %d"", &u, &v);||| 23 G[u].push_back(v), G[v].push_back(u);||| 24 }||| 25 vis[1] = true;||| 26 int L = 0, R = 1e9 + 1;||| 27 int ans = 0;||| 28 while (L <= R) {||| 29 int mid = (L + R) >> 1;||| 30 for (int i = 2; i <= n; ++i) vis[i] = false;||| 31 now = mid;||| 32 cnt = 1;||| 33 while (cnt < n) {||| 34 for (int i = 1; i <= n; ++i) fa[i] = 0;||| 35 bool flag = false;||| 36 for (int i = 1; i <= n; ++i) {||| 37 if (vis[i] && dfs(i, now)) {||| 38 flag = true;||| 39 break;||| 40 }||| 41 }||| 42 if (!flag) break;||| 43 }||| 44 if (cnt == n) {||| 45 ans = mid;||| 46 R = mid - 1;||| 47 } else {||| 48 L = mid + 1;||| 49 }||| 50 }||| 51 printf(""%d\n"", ans);||| 52 }||| 53 return 0;||| 54 }||| 55 void work(int u) {||| 56 while (!vis[u]) {||| 57 vis[u] = true;||| 58 now += b[u];||| 59 ++cnt;||| 60 u = fa[u];||| 61 }||| 62 }||| 63 bool dfs(int u, long long now) {||| 64 for (int v : G[u]) {||| 65 if (v == fa[u] || now <= a[v]) continue;||| 66 if (!vis[u] && vis[v]) {||| 67 work(u);||| 68 return true;||| 69 }||| 70 if (vis[v]) continue;||| 71 if (fa[v]) {||| 72 work(v), work(u);||| 73 return true;||| 74 }||| 75 fa[v] = u;||| 76 if (dfs(v, now + b[v])) return true;||| 77 }||| 78 return false;||| 79 }||| "	"1 #include <bits/stdc++.h>||| 2 const int N = 1005;||| 3 void work(int u);||| 4 bool dfs(int u, long long now);||| 5 int a[N], b[N];||| 6 std::vector<int> G[N];||| 7 int fa[N];||| 8 bool vis[N];||| 9 long long now;||| 10 int cnt;||| 11 int n, m;||| 12 int main() {||| 13 int T;||| 14 scanf(""%d"", &T);||| 15 while (T--) {||| 16 scanf(""%d %d"", &n, &m);||| 17 for (int i = 2; i <= n; ++i) scanf(""%d"", a + i);||| 18 for (int i = 2; i <= n; ++i) scanf(""%d"", b + i);||| 19 for (int i = 1; i <= n; ++i) G[i].clear();||| 20 for (int i = 1; i <= m; ++i) {||| 21 int u, v;||| 22 scanf(""%d %d"", &u, &v);||| 23 G[u].push_back(v), G[v].push_back(u);||| 24 }||| 25 vis[1] = true;||| 26 int L = 0, R = 1e9;||| 27 int ans = 0;||| 28 while (L <= R) {||| 29 int mid = (L + R) >> 1;||| 30 for (int i = 2; i <= n; ++i) vis[i] = false;||| 31 now = mid;||| 32 cnt = 1;||| 33 while (cnt < n) {||| 34 for (int i = 1; i <= n; ++i) fa[i] = 0;||| 35 bool flag = false;||| 36 for (int i = 1; i <= n; ++i) {||| 37 if (vis[i] && dfs(i, now)) {||| 38 flag = true;||| 39 break;||| 40 }||| 41 }||| 42 if (!flag) break;||| 43 }||| 44 if (cnt == n) {||| 45 ans = mid;||| 46 R = mid - 1;||| 47 } else {||| 48 L = mid + 1;||| 49 }||| 50 }||| 51 printf(""%d\n"", ans);||| 52 }||| 53 return 0;||| 54 }||| 55 void work(int u) {||| 56 while (!vis[u]) {||| 57 vis[u] = true;||| 58 now += b[u];||| 59 ++cnt;||| 60 u = fa[u];||| 61 }||| 62 }||| 63 bool dfs(int u, long long now) {||| 64 for (int v : G[u]) {||| 65 if (v == fa[u] || now <= a[v]) continue;||| 66 if (!vis[u] && vis[v]) {||| 67 work(u);||| 68 return true;||| 69 }||| 70 if (vis[v]) continue;||| 71 if (fa[v]) {||| 72 work(v), work(u);||| 73 return true;||| 74 }||| 75 fa[v] = u;||| 76 if (dfs(v, now + b[v])) return true;||| 77 }||| 78 return false;||| 79 }||| "	26 int L = 0, R = 1e9 + 1;
59	35	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int MAXN = 1e3 + 1;||| 5 vector<int> g[MAXN];||| 6 int n, m, a[MAXN], b[MAXN];||| 7 bool vis[MAXN];||| 8 long long dis[MAXN];||| 9 int pre[MAXN];||| 10 bool check(int x) {||| 11 memset(vis, 0, sizeof(vis));||| 12 vis[1] = 1;||| 13 long long totb = 0;||| 14 while (true) {||| 15 for (int i = 1; i <= n; ++i) dis[i] = -1;||| 16 totb = 0;||| 17 bool ok = false;||| 18 for (int i = 1; i <= n; ++i)||| 19 if (vis[i]) totb += b[i];||| 20 for (int i = 1; i <= n; ++i) ok |= !vis[i];||| 21 if (!ok) break;||| 22 totb += x;||| 23 queue<int> q;||| 24 for (int i = 1; i <= n; ++i)||| 25 if (vis[i])||| 26 for (auto it : g[i]) {||| 27 if (!vis[it] && a[it] < totb && dis[it] == -1) {||| 28 q.push(it);||| 29 dis[it] = totb;||| 30 pre[it] = i;||| 31 }||| 32 }||| 33 ok = false;||| 34 while (!q.empty()) {||| 35 int now = q.front();||| 36 q.pop();||| 37 for (auto it : g[now])||| 38 if (it != pre[now]) {||| 39 if (vis[it]) {||| 40 ok = 1;||| 41 while (!vis[now]) {||| 42 vis[now] = 1;||| 43 now = pre[now];||| 44 }||| 45 break;||| 46 } else {||| 47 if (dis[now] + b[now] <= a[it]) {||| 48 continue;||| 49 }||| 50 if (dis[it] != -1) {||| 51 ok = 1;||| 52 while (!vis[now]) {||| 53 vis[now] = 1;||| 54 now = pre[now];||| 55 }||| 56 now = it;||| 57 while (!vis[now]) {||| 58 vis[now] = 1;||| 59 now = pre[now];||| 60 }||| 61 break;||| 62 } else {||| 63 pre[it] = now;||| 64 dis[it] = dis[now] + b[now];||| 65 q.push(it);||| 66 }||| 67 }||| 68 }||| 69 if (ok) break;||| 70 }||| 71 if (!ok) return false;||| 72 }||| 73 return true;||| 74 }||| 75 void solve() {||| 76 scanf(""%d%d"", &n, &m);||| 77 for (int i = 2; i <= n; ++i) scanf(""%d"", &a[i]);||| 78 for (int i = 2; i <= n; ++i) scanf(""%d"", &b[i]);||| 79 for (int i = 1; i <= n; ++i) g[i].clear();||| 80 for (int i = 1; i <= m; ++i) {||| 81 int u, v;||| 82 scanf(""%d%d"", &u, &v);||| 83 g[u].push_back(v);||| 84 g[v].push_back(u);||| 85 }||| 86 long long l = 0, r = 1e9 + 1;||| 87 while (l < r) {||| 88 int mid = (l + r) >> 1;||| 89 if (check(mid))||| 90 r = mid;||| 91 else||| 92 l = mid + 1;||| 93 }||| 94 printf(""%d\n"", l);||| 95 }||| 96 int main() {||| 97 int t;||| 98 scanf(""%d"", &t);||| 99 while (t--) solve();||| 100 return 0;||| 101 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int MAXN = 1e3 + 1;||| 5 vector<int> g[MAXN];||| 6 int n, m, a[MAXN], b[MAXN];||| 7 bool vis[MAXN];||| 8 long long dis[MAXN];||| 9 int pre[MAXN];||| 10 bool check(int x) {||| 11 memset(vis, 0, sizeof(vis));||| 12 vis[1] = 1;||| 13 long long totb = 0;||| 14 while (true) {||| 15 for (int i = 1; i <= n; ++i) dis[i] = -1;||| 16 totb = 0;||| 17 bool ok = false;||| 18 for (int i = 1; i <= n; ++i)||| 19 if (vis[i]) totb += b[i];||| 20 for (int i = 1; i <= n; ++i) ok |= !vis[i];||| 21 if (!ok) break;||| 22 totb += x;||| 23 queue<int> q;||| 24 for (int i = 1; i <= n; ++i)||| 25 if (vis[i])||| 26 for (auto it : g[i]) {||| 27 if (!vis[it] && a[it] < totb && dis[it] == -1) {||| 28 q.push(it);||| 29 dis[it] = totb;||| 30 pre[it] = i;||| 31 }||| 32 }||| 33 ok = false;||| 34 while (!q.empty()) {||| 35 int now = q.front();||| 36 q.pop();||| 37 for (auto it : g[now])||| 38 if (it != pre[now]) {||| 39 if (vis[it]) {||| 40 ok = 1;||| 41 while (!vis[now]) {||| 42 vis[now] = 1;||| 43 now = pre[now];||| 44 }||| 45 break;||| 46 } else {||| 47 if (dis[now] + b[now] <= a[it]) {||| 48 continue;||| 49 }||| 50 if (dis[it] != -1) {||| 51 ok = 1;||| 52 while (!vis[now]) {||| 53 vis[now] = 1;||| 54 now = pre[now];||| 55 }||| 56 now = it;||| 57 while (!vis[now]) {||| 58 vis[now] = 1;||| 59 now = pre[now];||| 60 }||| 61 break;||| 62 } else {||| 63 pre[it] = now;||| 64 dis[it] = dis[now] + b[now];||| 65 q.push(it);||| 66 }||| 67 }||| 68 }||| 69 if (ok) break;||| 70 }||| 71 if (!ok) return false;||| 72 }||| 73 return true;||| 74 }||| 75 void solve() {||| 76 scanf(""%d%d"", &n, &m);||| 77 for (int i = 2; i <= n; ++i) scanf(""%d"", &a[i]);||| 78 for (int i = 2; i <= n; ++i) scanf(""%d"", &b[i]);||| 79 for (int i = 1; i <= n; ++i) g[i].clear();||| 80 for (int i = 1; i <= m; ++i) {||| 81 int u, v;||| 82 scanf(""%d%d"", &u, &v);||| 83 g[u].push_back(v);||| 84 g[v].push_back(u);||| 85 }||| 86 long long l = 0, r = 1e9;||| 87 while (l < r) {||| 88 int mid = (l + r) >> 1;||| 89 if (check(mid))||| 90 r = mid;||| 91 else||| 92 l = mid + 1;||| 93 }||| 94 printf(""%d\n"", l);||| 95 }||| 96 int main() {||| 97 int t;||| 98 scanf(""%d"", &t);||| 99 while (t--) solve();||| 100 return 0;||| 101 }||| "	86 long long l = 0, r = 1e9 + 1;
59	96	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1010;||| 4 int T, n, m, a[maxn], b[maxn], vis[maxn], lst[maxn];||| 5 long long d[maxn];||| 6 vector<int> G[maxn];||| 7 int main() {||| 8 scanf(""%d"", &T);||| 9 while (T--) {||| 10 scanf(""%d %d"", &n, &m);||| 11 for (int i = 1; i <= n; i++) {||| 12 G[i].clear();||| 13 }||| 14 for (int i = 2; i <= n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 2; i <= n; i++) {||| 18 scanf(""%d"", &b[i]);||| 19 }||| 20 while (m--) {||| 21 int u, v;||| 22 scanf(""%d %d"", &u, &v);||| 23 G[u].push_back(v), G[v].push_back(u);||| 24 }||| 25 auto bfs = [&](long long &x) {||| 26 queue<int> Q;||| 27 for (int i = 1; i <= n; i++) {||| 28 if (vis[i])||| 29 Q.push(i), d[i] = x;||| 30 else||| 31 d[i] = -1;||| 32 }||| 33 fill(lst + 1, lst + n + 1, 0);||| 34 while (!Q.empty()) {||| 35 int v = Q.front();||| 36 Q.pop();||| 37 for (int u : G[v])||| 38 if (a[u] < d[v] && !(vis[v] && vis[u]) && lst[v] ^ u) {||| 39 if (!~d[u]) {||| 40 Q.push(u), d[u] = d[v] + b[u], lst[u] = v;||| 41 } else {||| 42 for (int i = u; !vis[i]; i = lst[i]) x += b[i], vis[i] = 1;||| 43 for (int i = v; !vis[i]; i = lst[i]) x += b[i], vis[i] = 1;||| 44 return 1;||| 45 }||| 46 }||| 47 }||| 48 return 0;||| 49 };||| 50 auto chk = [&](long long x) {||| 51 fill(vis + 1, vis + n + 1, 0), vis[1] = 1;||| 52 while (bfs(x))||| 53 ;||| 54 return accumulate(vis + 1, vis + n + 1, 0) == n;||| 55 };||| 56 int l = 0, r = 1e9 + 1, ans;||| 57 while (l <= r) {||| 58 int mid = (l + r) >> 1;||| 59 chk(mid) ? r = (ans = mid) - 1 : l = mid + 1;||| 60 }||| 61 printf(""%d\n"", ans);||| 62 }||| 63 return 0;||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1010;||| 4 int T, n, m, a[maxn], b[maxn], vis[maxn], lst[maxn];||| 5 long long d[maxn];||| 6 vector<int> G[maxn];||| 7 int main() {||| 8 scanf(""%d"", &T);||| 9 while (T--) {||| 10 scanf(""%d %d"", &n, &m);||| 11 for (int i = 1; i <= n; i++) {||| 12 G[i].clear();||| 13 }||| 14 for (int i = 2; i <= n; i++) {||| 15 scanf(""%d"", &a[i]);||| 16 }||| 17 for (int i = 2; i <= n; i++) {||| 18 scanf(""%d"", &b[i]);||| 19 }||| 20 while (m--) {||| 21 int u, v;||| 22 scanf(""%d %d"", &u, &v);||| 23 G[u].push_back(v), G[v].push_back(u);||| 24 }||| 25 auto bfs = [&](long long &x) {||| 26 queue<int> Q;||| 27 for (int i = 1; i <= n; i++) {||| 28 if (vis[i])||| 29 Q.push(i), d[i] = x;||| 30 else||| 31 d[i] = -1;||| 32 }||| 33 fill(lst + 1, lst + n + 1, 0);||| 34 while (!Q.empty()) {||| 35 int v = Q.front();||| 36 Q.pop();||| 37 for (int u : G[v])||| 38 if (a[u] < d[v] && !(vis[v] && vis[u]) && lst[v] ^ u) {||| 39 if (!~d[u]) {||| 40 Q.push(u), d[u] = d[v] + b[u], lst[u] = v;||| 41 } else {||| 42 for (int i = u; !vis[i]; i = lst[i]) x += b[i], vis[i] = 1;||| 43 for (int i = v; !vis[i]; i = lst[i]) x += b[i], vis[i] = 1;||| 44 return 1;||| 45 }||| 46 }||| 47 }||| 48 return 0;||| 49 };||| 50 auto chk = [&](long long x) {||| 51 fill(vis + 1, vis + n + 1, 0), vis[1] = 1;||| 52 while (bfs(x))||| 53 ;||| 54 return accumulate(vis + 1, vis + n + 1, 0) == n;||| 55 };||| 56 int l = 0, r = 1e9, ans;||| 57 while (l <= r) {||| 58 int mid = (l + r) >> 1;||| 59 chk(mid) ? r = (ans = mid) - 1 : l = mid + 1;||| 60 }||| 61 printf(""%d\n"", ans);||| 62 }||| 63 return 0;||| 64 }||| "	56 int l = 0, r = 1e9 + 1, ans;
59	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4005, inf = 1e9;||| 4 int n, m, a[N], b[N], lst[N];||| 5 vector<int> g[N];||| 6 long long dis[N];||| 7 bool rns[N];||| 8 bool asdf(long long &w) {||| 9 queue<int> q;||| 10 for (int i = 1; i <= n; i++) {||| 11 if (rns[i])||| 12 q.push(i), dis[i] = w, lst[i] = -1;||| 13 else||| 14 dis[i] = -1, lst[i] = -1;||| 15 }||| 16 while (!q.empty()) {||| 17 int u = q.front();||| 18 q.pop();||| 19 for (auto v : g[u])||| 20 if (a[v] < dis[u] && !(rns[u] && rns[v]) && lst[u] != v) {||| 21 if (dis[v] == -1)||| 22 dis[v] = dis[u] + b[v], lst[v] = u, q.push(v);||| 23 else {||| 24 for (int x = u; !rns[x]; x = lst[x]) w += b[x], rns[x] = true;||| 25 for (int x = v; !rns[x]; x = lst[x]) w += b[x], rns[x] = true;||| 26 return true;||| 27 }||| 28 }||| 29 }||| 30 return false;||| 31 }||| 32 bool check(long long x) {||| 33 for (int i = 1; i <= n; i++) rns[i] = i == 1;||| 34 while (asdf(x))||| 35 ;||| 36 for (int i = 1; i <= n; i++)||| 37 if (!rns[i]) return false;||| 38 return true;||| 39 }||| 40 void solve() {||| 41 scanf(""%d%d"", &n, &m);||| 42 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 43 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 44 for (int i = 1; i <= n; i++) g[i].clear();||| 45 for (int i = 1, u, v; i <= m; i++) {||| 46 scanf(""%d%d"", &u, &v);||| 47 g[u].push_back(v), g[v].push_back(u);||| 48 }||| 49 int l = 0, r = inf + 1;||| 50 while (l < r) {||| 51 int mid = (l + r) >> 1;||| 52 if (check(mid))||| 53 r = mid;||| 54 else||| 55 l = mid + 1;||| 56 }||| 57 printf(""%d\n"", l);||| 58 }||| 59 int main() {||| 60 int tt;||| 61 scanf(""%d"", &tt);||| 62 while (tt--) solve();||| 63 return 0;||| 64 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 4005, inf = 1e9;||| 4 int n, m, a[N], b[N], lst[N];||| 5 vector<int> g[N];||| 6 long long dis[N];||| 7 bool rns[N];||| 8 bool asdf(long long &w) {||| 9 queue<int> q;||| 10 for (int i = 1; i <= n; i++) {||| 11 if (rns[i])||| 12 q.push(i), dis[i] = w, lst[i] = -1;||| 13 else||| 14 dis[i] = -1, lst[i] = -1;||| 15 }||| 16 while (!q.empty()) {||| 17 int u = q.front();||| 18 q.pop();||| 19 for (auto v : g[u])||| 20 if (a[v] < dis[u] && !(rns[u] && rns[v]) && lst[u] != v) {||| 21 if (dis[v] == -1)||| 22 dis[v] = dis[u] + b[v], lst[v] = u, q.push(v);||| 23 else {||| 24 for (int x = u; !rns[x]; x = lst[x]) w += b[x], rns[x] = true;||| 25 for (int x = v; !rns[x]; x = lst[x]) w += b[x], rns[x] = true;||| 26 return true;||| 27 }||| 28 }||| 29 }||| 30 return false;||| 31 }||| 32 bool check(long long x) {||| 33 for (int i = 1; i <= n; i++) rns[i] = i == 1;||| 34 while (asdf(x))||| 35 ;||| 36 for (int i = 1; i <= n; i++)||| 37 if (!rns[i]) return false;||| 38 return true;||| 39 }||| 40 void solve() {||| 41 scanf(""%d%d"", &n, &m);||| 42 for (int i = 2; i <= n; i++) scanf(""%d"", &a[i]);||| 43 for (int i = 2; i <= n; i++) scanf(""%d"", &b[i]);||| 44 for (int i = 1; i <= n; i++) g[i].clear();||| 45 for (int i = 1, u, v; i <= m; i++) {||| 46 scanf(""%d%d"", &u, &v);||| 47 g[u].push_back(v), g[v].push_back(u);||| 48 }||| 49 int l = 0, r = inf;||| 50 while (l < r) {||| 51 int mid = (l + r) >> 1;||| 52 if (check(mid))||| 53 r = mid;||| 54 else||| 55 l = mid + 1;||| 56 }||| 57 printf(""%d\n"", l);||| 58 }||| 59 int main() {||| 60 int tt;||| 61 scanf(""%d"", &tt);||| 62 while (tt--) solve();||| 63 return 0;||| 64 }||| "	49 int l = 0, r = inf + 1;
59	15	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 clock_t timeStart, timeFinish;||| 7 void timeBegin() { timeStart = clock(); }||| 8 void timeEnd() { timeFinish = clock(); }||| 9 void timeDuration() {||| 10 timeEnd();||| 11 double time_taken = double(timeFinish - timeStart) / double(CLOCKS_PER_SEC);||| 12 cout << ""Time taken by program is : "" << fixed << time_taken||| 13 << setprecision(5);||| 14 cout << "" sec "" << endl;||| 15 }||| 16 class InputReader {||| 17 public:||| 18 InputReader() {||| 19 input_file = stdin;||| 20 cursor = 0;||| 21 fread(buffer, SIZE, 1, input_file);||| 22 }||| 23 InputReader(const char *file_name) {||| 24 input_file = fopen(file_name, ""r"");||| 25 cursor = 0;||| 26 fread(buffer, SIZE, 1, input_file);||| 27 }||| 28 inline InputReader &operator>>(int &n) {||| 29 while ((buffer[cursor] < '0' || buffer[cursor] > '9') &&||| 30 buffer[cursor] != '-') {||| 31 advance();||| 32 }||| 33 int sign = 1;||| 34 if (buffer[cursor] == '-') {||| 35 sign = -1;||| 36 advance();||| 37 }||| 38 n = 0;||| 39 while ('0' <= buffer[cursor] && buffer[cursor] <= '9') {||| 40 n = n * 10 + buffer[cursor] - '0';||| 41 advance();||| 42 }||| 43 n *= sign;||| 44 return *this;||| 45 }||| 46 ||| 47 private:||| 48 FILE *input_file;||| 49 static const int SIZE = 1 << 17;||| 50 int cursor;||| 51 char buffer[SIZE];||| 52 inline void advance() {||| 53 ++cursor;||| 54 if (cursor == SIZE) {||| 55 cursor = 0;||| 56 fread(buffer, SIZE, 1, input_file);||| 57 }||| 58 }||| 59 };||| 60 const int MAXN = 1000;||| 61 const int INF = 1000000001;||| 62 int a[1 + MAXN], b[1 + MAXN];||| 63 vector<int> g[1 + MAXN];||| 64 bool taken[1 + MAXN];||| 65 int dad[1 + MAXN], total;||| 66 long long power;||| 67 bool found;||| 68 void take(int node) {||| 69 while (dad[node] != node) {||| 70 if (!taken[node]) {||| 71 taken[node] = true;||| 72 total++;||| 73 power += b[node];||| 74 }||| 75 node = dad[node];||| 76 }||| 77 }||| 78 void DFS(int node, long long current) {||| 79 for (auto neighbour : g[node]) {||| 80 if (dad[neighbour] != 0 && neighbour != dad[node] &&||| 81 (!taken[node] || !taken[neighbour])) {||| 82 found = true;||| 83 take(node);||| 84 take(neighbour);||| 85 return;||| 86 }||| 87 if (dad[neighbour] == 0 && current > a[neighbour]) {||| 88 dad[neighbour] = node;||| 89 DFS(neighbour, current + b[neighbour]);||| 90 }||| 91 if (found) {||| 92 return;||| 93 }||| 94 }||| 95 }||| 96 bool check(int n, int start) {||| 97 for (int i = 1; i <= n; i++) {||| 98 taken[i] = false;||| 99 }||| 100 taken[1] = true;||| 101 total = 1;||| 102 power = start;||| 103 while (total < n) {||| 104 for (int i = 1; i <= n; i++) {||| 105 if (taken[i]) {||| 106 dad[i] = i;||| 107 } else {||| 108 dad[i] = 0;||| 109 }||| 110 }||| 111 found = false;||| 112 for (int i = 1; i <= n && !found; i++) {||| 113 if (taken[i]) {||| 114 DFS(i, power);||| 115 }||| 116 }||| 117 if (!found) {||| 118 return false;||| 119 }||| 120 }||| 121 return true;||| 122 }||| 123 int main() {||| 124 timeBegin();||| 125 ios_base::sync_with_stdio(false);||| 126 cin.tie(0);||| 127 srand(time(0));||| 128 int tests;||| 129 cin >> tests;||| 130 for (int test = 1; test <= tests; test++) {||| 131 int n, m;||| 132 cin >> n >> m;||| 133 for (int i = 2; i <= n; i++) {||| 134 cin >> a[i];||| 135 }||| 136 for (int i = 2; i <= n; i++) {||| 137 cin >> b[i];||| 138 }||| 139 for (int i = 1; i <= m; i++) {||| 140 int a, b;||| 141 cin >> a >> b;||| 142 g[a].push_back(b);||| 143 g[b].push_back(a);||| 144 }||| 145 int left = 1, right = INF, answer = INF;||| 146 while (left <= right) {||| 147 int middle = (left + right) / 2;||| 148 if (check(n, middle)) {||| 149 answer = middle;||| 150 right = middle - 1;||| 151 } else {||| 152 left = middle + 1;||| 153 }||| 154 }||| 155 cout << answer << ""\n"";||| 156 for (int i = 1; i <= n; i++) {||| 157 g[i].clear();||| 158 }||| 159 }||| 160 return 0;||| 161 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimization(""O3"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 clock_t timeStart, timeFinish;||| 7 void timeBegin() { timeStart = clock(); }||| 8 void timeEnd() { timeFinish = clock(); }||| 9 void timeDuration() {||| 10 timeEnd();||| 11 double time_taken = double(timeFinish - timeStart) / double(CLOCKS_PER_SEC);||| 12 cout << ""Time taken by program is : "" << fixed << time_taken||| 13 << setprecision(5);||| 14 cout << "" sec "" << endl;||| 15 }||| 16 class InputReader {||| 17 public:||| 18 InputReader() {||| 19 input_file = stdin;||| 20 cursor = 0;||| 21 fread(buffer, SIZE, 1, input_file);||| 22 }||| 23 InputReader(const char *file_name) {||| 24 input_file = fopen(file_name, ""r"");||| 25 cursor = 0;||| 26 fread(buffer, SIZE, 1, input_file);||| 27 }||| 28 inline InputReader &operator>>(int &n) {||| 29 while ((buffer[cursor] < '0' || buffer[cursor] > '9') &&||| 30 buffer[cursor] != '-') {||| 31 advance();||| 32 }||| 33 int sign = 1;||| 34 if (buffer[cursor] == '-') {||| 35 sign = -1;||| 36 advance();||| 37 }||| 38 n = 0;||| 39 while ('0' <= buffer[cursor] && buffer[cursor] <= '9') {||| 40 n = n * 10 + buffer[cursor] - '0';||| 41 advance();||| 42 }||| 43 n *= sign;||| 44 return *this;||| 45 }||| 46 ||| 47 private:||| 48 FILE *input_file;||| 49 static const int SIZE = 1 << 17;||| 50 int cursor;||| 51 char buffer[SIZE];||| 52 inline void advance() {||| 53 ++cursor;||| 54 if (cursor == SIZE) {||| 55 cursor = 0;||| 56 fread(buffer, SIZE, 1, input_file);||| 57 }||| 58 }||| 59 };||| 60 const int MAXN = 1000;||| 61 const int INF = 1000000000;||| 62 int a[1 + MAXN], b[1 + MAXN];||| 63 vector<int> g[1 + MAXN];||| 64 bool taken[1 + MAXN];||| 65 int dad[1 + MAXN], total;||| 66 long long power;||| 67 bool found;||| 68 void take(int node) {||| 69 while (dad[node] != node) {||| 70 if (!taken[node]) {||| 71 taken[node] = true;||| 72 total++;||| 73 power += b[node];||| 74 }||| 75 node = dad[node];||| 76 }||| 77 }||| 78 void DFS(int node, long long current) {||| 79 for (auto neighbour : g[node]) {||| 80 if (dad[neighbour] != 0 && neighbour != dad[node] &&||| 81 (!taken[node] || !taken[neighbour])) {||| 82 found = true;||| 83 take(node);||| 84 take(neighbour);||| 85 return;||| 86 }||| 87 if (dad[neighbour] == 0 && current > a[neighbour]) {||| 88 dad[neighbour] = node;||| 89 DFS(neighbour, current + b[neighbour]);||| 90 }||| 91 if (found) {||| 92 return;||| 93 }||| 94 }||| 95 }||| 96 bool check(int n, int start) {||| 97 for (int i = 1; i <= n; i++) {||| 98 taken[i] = false;||| 99 }||| 100 taken[1] = true;||| 101 total = 1;||| 102 power = start;||| 103 while (total < n) {||| 104 for (int i = 1; i <= n; i++) {||| 105 if (taken[i]) {||| 106 dad[i] = i;||| 107 } else {||| 108 dad[i] = 0;||| 109 }||| 110 }||| 111 found = false;||| 112 for (int i = 1; i <= n && !found; i++) {||| 113 if (taken[i]) {||| 114 DFS(i, power);||| 115 }||| 116 }||| 117 if (!found) {||| 118 return false;||| 119 }||| 120 }||| 121 return true;||| 122 }||| 123 int main() {||| 124 timeBegin();||| 125 ios_base::sync_with_stdio(false);||| 126 cin.tie(0);||| 127 srand(time(0));||| 128 int tests;||| 129 cin >> tests;||| 130 for (int test = 1; test <= tests; test++) {||| 131 int n, m;||| 132 cin >> n >> m;||| 133 for (int i = 2; i <= n; i++) {||| 134 cin >> a[i];||| 135 }||| 136 for (int i = 2; i <= n; i++) {||| 137 cin >> b[i];||| 138 }||| 139 for (int i = 1; i <= m; i++) {||| 140 int a, b;||| 141 cin >> a >> b;||| 142 g[a].push_back(b);||| 143 g[b].push_back(a);||| 144 }||| 145 int left = 1, right = 20, answer = INF;||| 146 while (left <= right) {||| 147 int middle = (left + right) / 2;||| 148 if (check(n, middle)) {||| 149 answer = middle;||| 150 right = middle - 1;||| 151 } else {||| 152 left = middle + 1;||| 153 }||| 154 }||| 155 cout << answer << ""\n"";||| 156 for (int i = 1; i <= n; i++) {||| 157 g[i].clear();||| 158 }||| 159 }||| 160 return 0;||| 161 }||| "	61 const int INF = 1000000001;
60	267	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int a[101];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 int test;||| 10 cin >> test;||| 11 while (test--) {||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i];||| 14 int res = a[1];||| 15 for (int i = 2; i <= n; i++) res &= a[i];||| 16 cout << res << '\n';||| 17 }||| 18 return 0;||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 int a[101];||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 int test;||| 10 cin >> test;||| 11 while (test--) {||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) cin >> a[i];||| 14 int res = a[1];||| 15 for (int i = 2; i <= n; i++) res &= a[2];||| 16 cout << res << '\n';||| 17 }||| 18 return 0;||| 19 }||| 	15 for (int i = 2; i <= n; i++) res &= a[i];
61	78	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int T, n, m1, m2, u, v;||| 5 string s;||| 6 void solve() {||| 7 cin >> n >> s;||| 8 bool idk = 0;||| 9 int j = -1;||| 10 for (int i = 0; i < n; i++) {||| 11 if (s[i] != '?') {||| 12 j = i;||| 13 break;||| 14 }||| 15 }||| 16 if (j == -1) {||| 17 for (int i = 0; i < n; i++) {||| 18 if (i % 2) {||| 19 cout << ""B"";||| 20 } else {||| 21 cout << ""R"";||| 22 }||| 23 }||| 24 cout << ""\n"";||| 25 return;||| 26 }||| 27 for (int i = j; i < n; i++) {||| 28 if (s[i] == '?') {||| 29 if (s[i - 1] == 'B') {||| 30 s[i] = 'R';||| 31 } else {||| 32 s[i] = 'B';||| 33 }||| 34 }||| 35 }||| 36 for (int i = j; i > -1; i--) {||| 37 if (s[i] == '?') {||| 38 if (s[i + 1] == 'B') {||| 39 s[i] = 'R';||| 40 } else {||| 41 s[i] = 'B';||| 42 }||| 43 }||| 44 }||| 45 cout << s << endl;||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 T = 1;||| 50 cin >> T;||| 51 while (T--) {||| 52 solve();||| 53 }||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int T, n, m1, m2, u, v;||| 5 string s;||| 6 void solve() {||| 7 cin >> n >> s;||| 8 bool idk = 0;||| 9 int j = -1;||| 10 for (int i = 0; i < n; i++) {||| 11 if (s[i] != '?') {||| 12 j = i;||| 13 break;||| 14 }||| 15 }||| 16 if (j == -1) {||| 17 for (int i = 0; i < n; i++) {||| 18 if (i % 2) {||| 19 cout << ""B"";||| 20 } else {||| 21 cout << ""R"";||| 22 }||| 23 }||| 24 cout << ""\n"";||| 25 return;||| 26 }||| 27 for (int i = j; i < n; i++) {||| 28 if (s[i] == '?') {||| 29 if (s[i - 1] == 'B') {||| 30 s[i] = 'R';||| 31 } else {||| 32 s[i] = 'B';||| 33 }||| 34 }||| 35 }||| 36 for (int i = j; i > -1; i--) {||| 37 if (s[i] == '?') {||| 38 if (s[i - 1] == 'B') {||| 39 s[i] = 'R';||| 40 } else {||| 41 s[i] = 'B';||| 42 }||| 43 }||| 44 }||| 45 cout << s << endl;||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 T = 1;||| 50 cin >> T;||| 51 while (T--) {||| 52 solve();||| 53 }||| 54 }||| "	38 if (s[i + 1] == 'B') {
61	234	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 char s[N];||| 5 char ans[2] = {'B', 'R'};||| 6 vector<pair<char, int> > v;||| 7 int main() {||| 8 int t;||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 cin >> t;||| 13 while (t--) {||| 14 int n;||| 15 cin >> n;||| 16 cin >> (s + 1);||| 17 v.clear();||| 18 v.push_back({'a', 0});||| 19 for (int i = 1; i <= n; i++) {||| 20 if (s[i] != '?') {||| 21 v.push_back({s[i], i});||| 22 }||| 23 }||| 24 if (v.size() == 1) {||| 25 int cnt = 0;||| 26 for (int i = 1; i <= n; i++) {||| 27 s[i] = ans[(cnt++) % 2];||| 28 }||| 29 } else if (v.size() == 2) {||| 30 int cnt = 0;||| 31 if (v[1].first == 'B') {||| 32 cnt = 1;||| 33 } else||| 34 cnt = 0;||| 35 for (int i = v[1].second - 1; i >= 1; i--) {||| 36 s[i] = ans[(cnt++) % 2];||| 37 }||| 38 if (v[1].first == 'B') {||| 39 cnt = 1;||| 40 } else||| 41 cnt = 0;||| 42 for (int i = v[1].second + 1; i <= n; i++) {||| 43 s[i] = ans[(cnt++) % 2];||| 44 }||| 45 } else {||| 46 int cnt = 0;||| 47 for (int i = 1; i < v.size(); i++) {||| 48 if (i != v.size() - 1) {||| 49 if (v[i].first == 'B') {||| 50 cnt = 1;||| 51 } else||| 52 cnt = 0;||| 53 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 54 s[j] = ans[(cnt++) % 2];||| 55 }||| 56 } else {||| 57 if (v[i].first == 'B') {||| 58 cnt = 1;||| 59 } else||| 60 cnt = 0;||| 61 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 62 s[j] = ans[(cnt++) % 2];||| 63 }||| 64 if (v[i].first == 'B') {||| 65 cnt = 1;||| 66 } else||| 67 cnt = 0;||| 68 for (int j = v[i].second + 1; j <= n; j++) {||| 69 s[j] = ans[(cnt++) % 2];||| 70 }||| 71 }||| 72 }||| 73 }||| 74 cout << (s + 1) << endl;||| 75 }||| 76 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 char s[N];||| 5 char ans[2] = {'B', 'R'};||| 6 vector<pair<char, int> > v;||| 7 int main() {||| 8 int t;||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 cin >> t;||| 13 while (t--) {||| 14 int n;||| 15 cin >> n;||| 16 cin >> (s + 1);||| 17 v.clear();||| 18 v.push_back({'a', 1});||| 19 for (int i = 1; i <= n; i++) {||| 20 if (s[i] != '?') {||| 21 v.push_back({s[i], i});||| 22 }||| 23 }||| 24 if (v.size() == 1) {||| 25 int cnt = 0;||| 26 for (int i = 1; i <= n; i++) {||| 27 s[i] = ans[(cnt++) % 2];||| 28 }||| 29 } else if (v.size() == 2) {||| 30 int cnt = 0;||| 31 if (v[1].first == 'B') {||| 32 cnt = 1;||| 33 } else||| 34 cnt = 0;||| 35 for (int i = v[1].second - 1; i >= 1; i--) {||| 36 s[i] = ans[(cnt++) % 2];||| 37 }||| 38 if (v[1].first == 'B') {||| 39 cnt = 1;||| 40 } else||| 41 cnt = 0;||| 42 for (int i = v[1].second + 1; i <= n; i++) {||| 43 s[i] = ans[(cnt++) % 2];||| 44 }||| 45 } else {||| 46 int cnt = 0;||| 47 for (int i = 1; i < v.size(); i++) {||| 48 if (i != v.size() - 1) {||| 49 if (v[i].first == 'B') {||| 50 cnt = 1;||| 51 } else||| 52 cnt = 0;||| 53 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 54 s[j] = ans[(cnt++) % 2];||| 55 }||| 56 } else {||| 57 if (v[i].first == 'B') {||| 58 cnt = 1;||| 59 } else||| 60 cnt = 0;||| 61 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 62 s[j] = ans[(cnt++) % 2];||| 63 }||| 64 if (v[i].first == 'B') {||| 65 cnt = 1;||| 66 } else||| 67 cnt = 0;||| 68 for (int j = v[i].second + 1; j <= n; j++) {||| 69 s[j] = ans[(cnt++) % 2];||| 70 }||| 71 }||| 72 }||| 73 }||| 74 cout << (s + 1) << endl;||| 75 }||| 76 }||| 	18 v.push_back({'a', 0});
61	285	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 char s[N];||| 5 char ans[2] = {'B', 'R'};||| 6 vector<pair<char, int> > v;||| 7 int main() {||| 8 int t;||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 cin >> t;||| 13 while (t--) {||| 14 int n;||| 15 cin >> n;||| 16 cin >> (s + 1);||| 17 v.clear();||| 18 v.push_back({'a', 0});||| 19 for (int i = 1; i <= n; i++) {||| 20 if (s[i] != '?') {||| 21 v.push_back({s[i], i});||| 22 }||| 23 }||| 24 if (v.size() == 1) {||| 25 int cnt = 0;||| 26 for (int i = 1; i <= n; i++) {||| 27 s[i] = ans[(cnt++) % 2];||| 28 }||| 29 } else if (v.size() == 2) {||| 30 int cnt = 0;||| 31 if (v[1].first == 'B') {||| 32 cnt = 1;||| 33 } else||| 34 cnt = 0;||| 35 for (int i = v[1].second - 1; i >= 1; i--) {||| 36 s[i] = ans[(cnt++) % 2];||| 37 }||| 38 if (v[1].first == 'B') {||| 39 cnt = 1;||| 40 } else||| 41 cnt = 0;||| 42 for (int i = v[1].second + 1; i <= n; i++) {||| 43 s[i] = ans[(cnt++) % 2];||| 44 }||| 45 } else {||| 46 int cnt = 0;||| 47 for (int i = 1; i < v.size(); i++) {||| 48 if (i != v.size() - 1) {||| 49 if (v[i].first == 'B') {||| 50 cnt = 1;||| 51 } else||| 52 cnt = 0;||| 53 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 54 s[j] = ans[(cnt++) % 2];||| 55 }||| 56 } else {||| 57 if (v[i].first == 'B') {||| 58 cnt = 1;||| 59 } else||| 60 cnt = 0;||| 61 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 62 s[j] = ans[(cnt++) % 2];||| 63 }||| 64 if (v[i].first == 'B') {||| 65 cnt = 1;||| 66 } else||| 67 cnt = 0;||| 68 for (int j = v[i].second + 1; j <= n; j++) {||| 69 s[j] = ans[(cnt++) % 2];||| 70 }||| 71 }||| 72 }||| 73 }||| 74 cout << (s + 1) << endl;||| 75 }||| 76 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 char s[N];||| 5 char ans[2] = {'B', 'R'};||| 6 vector<pair<char, int> > v;||| 7 int main() {||| 8 int t;||| 9 ios::sync_with_stdio(false);||| 10 cin.tie(0);||| 11 cout.tie(0);||| 12 cin >> t;||| 13 while (t--) {||| 14 int n;||| 15 cin >> n;||| 16 cin >> (s + 1);||| 17 v.clear();||| 18 v.push_back({'a', 0});||| 19 for (int i = 1; i <= n; i++) {||| 20 if (s[i] != '?') {||| 21 v.push_back({s[i], i});||| 22 }||| 23 }||| 24 if (v.size() == 1) {||| 25 int cnt = 0;||| 26 for (int i = 1; i <= n; i++) {||| 27 s[i] = ans[(cnt++) % 2];||| 28 }||| 29 } else if (v.size() == 2) {||| 30 int cnt = 0;||| 31 if (v[1].first == 'B') {||| 32 cnt = 1;||| 33 } else||| 34 cnt = 0;||| 35 for (int i = v[1].second - 1; i >= 1; i--) {||| 36 s[i] = ans[(cnt++) % 2];||| 37 }||| 38 if (v[1].first == 'B') {||| 39 cnt = 1;||| 40 } else||| 41 cnt = 0;||| 42 for (int i = v[1].second + 1; i <= n; i++) {||| 43 s[i] = ans[(cnt++) % 2];||| 44 }||| 45 } else {||| 46 int cnt = 0;||| 47 for (int i = 1; i < v.size(); i++) {||| 48 if (i != v.size() - 1) {||| 49 if (v[i].first == 'B') {||| 50 cnt = 1;||| 51 } else||| 52 cnt = 0;||| 53 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 54 s[j] = ans[(cnt++) % 2];||| 55 }||| 56 } else {||| 57 if (v[i].first == 'B') {||| 58 cnt = 1;||| 59 } else||| 60 cnt = 0;||| 61 for (int j = v[i].second - 1; j > v[i - 1].second; j--) {||| 62 s[j] = ans[(cnt++) % 2];||| 63 }||| 64 if (v[i].first == 'B') {||| 65 cnt = 1;||| 66 } else||| 67 cnt = 0;||| 68 for (int j = v[0].second + 1; j <= n; j++) {||| 69 s[j] = ans[(cnt++) % 2];||| 70 }||| 71 }||| 72 }||| 73 }||| 74 cout << (s + 1) << endl;||| 75 }||| 76 }||| 	68 for (int j = v[i].second + 1; j <= n; j++) {
61	76	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 111;||| 4 int a[N], b[N];||| 5 int main() {||| 6 cin.tie(0)->sync_with_stdio(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 queue<int> que;||| 11 int n;||| 12 cin >> n;||| 13 string S;||| 14 cin >> S;||| 15 S = "" "" + S;||| 16 for (int i = 1; i <= n; i++) {||| 17 if (S[i] == 'R') {||| 18 a[i] = 1;||| 19 b[i] = 1;||| 20 que.push(i);||| 21 } else if (S[i] == 'B') {||| 22 a[i] = 2;||| 23 b[i] = 2;||| 24 que.push(i);||| 25 } else {||| 26 a[i] = 3;||| 27 b[i] = 3;||| 28 }||| 29 }||| 30 if (que.empty()) {||| 31 for (int i = 1; i <= n; i++) {||| 32 if (i % 2 == 1)||| 33 cout << 'R';||| 34 else||| 35 cout << 'B';||| 36 }||| 37 cout << ""\n"";||| 38 continue;||| 39 }||| 40 while (!que.empty()) {||| 41 int x = que.front();||| 42 que.pop();||| 43 int left = x - 1;||| 44 int right = x + 1;||| 45 while (b[left] == 3 && left >= 1) {||| 46 if (b[left + 1] == 1) {||| 47 b[left] = 2;||| 48 left--;||| 49 } else {||| 50 b[left] = 1;||| 51 left--;||| 52 }||| 53 }||| 54 while (b[right] == 3 && right <= n) {||| 55 if (b[right - 1] == 1) {||| 56 b[right] = 2;||| 57 right++;||| 58 } else {||| 59 b[right] = 1;||| 60 right++;||| 61 }||| 62 }||| 63 }||| 64 for (int i = 1; i <= n; i++) {||| 65 if (b[i] == 1)||| 66 cout << 'R';||| 67 else||| 68 cout << 'B';||| 69 }||| 70 cout << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 111;||| 4 int a[N], b[N];||| 5 int main() {||| 6 cin.tie(0)->sync_with_stdio(0);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 queue<int> que;||| 11 int n;||| 12 cin >> n;||| 13 string S;||| 14 cin >> S;||| 15 S = "" "" + S;||| 16 for (int i = 1; i <= n; i++) {||| 17 if (S[i] == 'R') {||| 18 a[i] = 1;||| 19 b[i] = 1;||| 20 que.push(i);||| 21 } else if (S[i] == 'B') {||| 22 a[i] = 2;||| 23 b[i] = 2;||| 24 que.push(i);||| 25 } else {||| 26 a[i] = 3;||| 27 b[i] = 3;||| 28 }||| 29 }||| 30 if (que.empty()) {||| 31 for (int i = 1; i <= n; i++) {||| 32 if (i % 2 == 1)||| 33 cout << 'R';||| 34 else||| 35 cout << 'B';||| 36 cout << ""\n"";||| 37 }||| 38 continue;||| 39 }||| 40 while (!que.empty()) {||| 41 int x = que.front();||| 42 que.pop();||| 43 int left = x - 1;||| 44 int right = x + 1;||| 45 while (b[left] == 3 && left >= 1) {||| 46 if (b[left + 1] == 1) {||| 47 b[left] = 2;||| 48 left--;||| 49 } else {||| 50 b[left] = 1;||| 51 left--;||| 52 }||| 53 }||| 54 while (b[right] == 3 && right <= n) {||| 55 if (b[right - 1] == 1) {||| 56 b[right] = 2;||| 57 right++;||| 58 } else {||| 59 b[right] = 1;||| 60 right++;||| 61 }||| 62 }||| 63 }||| 64 for (int i = 1; i <= n; i++) {||| 65 if (b[i] == 1)||| 66 cout << 'R';||| 67 else||| 68 cout << 'B';||| 69 }||| 70 cout << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	36 
61	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC target(""avx2"")||| 4 #pragma GCC optimization(""O3"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 void solve() {||| 7 long long int n;||| 8 cin >> n;||| 9 string s;||| 10 cin >> s;||| 11 vector<vector<int>> temp;||| 12 vector<int> k;||| 13 for (int i = 0; i < n; ++i) {||| 14 if (s[i] == '?') {||| 15 k.push_back(i);||| 16 } else {||| 17 if (k.size() != 0) {||| 18 temp.push_back(k);||| 19 k.clear();||| 20 }||| 21 }||| 22 }||| 23 if (k.size() != 0) {||| 24 temp.push_back(k);||| 25 }||| 26 for (auto i : temp) {||| 27 int d1 = i[0];||| 28 int s1 = i.size();||| 29 int d2 = i[s1 - 1];||| 30 if (d1 == 0) {||| 31 if (d1 == n - 1) {||| 32 s[d1] = 'R';||| 33 } else {||| 34 if (s[d2 + 1] == 'R') {||| 35 s[d2] = 'B';||| 36 int cnt = 0;||| 37 for (int i = d2; i >= d1; i--) {||| 38 if (cnt % 2 == 0) {||| 39 s[i] = 'B';||| 40 } else {||| 41 s[i] = 'R';||| 42 }||| 43 cnt++;||| 44 }||| 45 } else {||| 46 s[d2] = 'R';||| 47 int cnt = 0;||| 48 for (int i = d2; i >= d1; i--) {||| 49 if (cnt % 2 == 0) {||| 50 s[i] = 'R';||| 51 } else {||| 52 s[i] = 'B';||| 53 }||| 54 cnt++;||| 55 }||| 56 }||| 57 }||| 58 } else if (d2 == n - 1) {||| 59 if (s[d1 - 1] == 'R') {||| 60 s[d1] = 'B';||| 61 int cnt = 0;||| 62 for (int i = d1; i <= d2; i++) {||| 63 if (cnt % 2 == 0) {||| 64 s[i] = 'B';||| 65 } else {||| 66 s[i] = 'R';||| 67 }||| 68 cnt++;||| 69 }||| 70 } else {||| 71 s[d1] = 'R';||| 72 int cnt = 0;||| 73 for (int i = d1; i <= d2; i++) {||| 74 if (cnt % 2 == 0) {||| 75 s[i] = 'R';||| 76 } else {||| 77 s[i] = 'B';||| 78 }||| 79 cnt++;||| 80 }||| 81 }||| 82 } else {||| 83 if (s[d1 - 1] == 'R') {||| 84 s[d1] = 'B';||| 85 int cnt = 0;||| 86 for (int i = d1; i <= d2; i++) {||| 87 if (cnt % 2 == 0) {||| 88 s[i] = 'B';||| 89 } else {||| 90 s[i] = 'R';||| 91 }||| 92 cnt++;||| 93 }||| 94 } else {||| 95 s[d1] = 'R';||| 96 int cnt = 0;||| 97 for (int i = d1; i <= d2; i++) {||| 98 if (cnt % 2 == 0) {||| 99 s[i] = 'R';||| 100 } else {||| 101 s[i] = 'B';||| 102 }||| 103 cnt++;||| 104 }||| 105 }||| 106 }||| 107 }||| 108 cout << s << ""\n"";||| 109 }||| 110 int main() {||| 111 ios_base::sync_with_stdio(false);||| 112 cin.tie(NULL);||| 113 cout.tie(NULL);||| 114 long long int t;||| 115 cin >> t;||| 116 while (t--) {||| 117 solve();||| 118 }||| 119 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC target(""avx2"")||| 4 #pragma GCC optimization(""O3"")||| 5 #pragma GCC optimization(""unroll-loops"")||| 6 void solve() {||| 7 long long int n;||| 8 cin >> n;||| 9 string s;||| 10 cin >> s;||| 11 vector<vector<int>> temp;||| 12 vector<int> k;||| 13 for (int i = 0; i < n; ++i) {||| 14 if (s[i] == '?') {||| 15 k.push_back(i);||| 16 } else {||| 17 if (k.size() != 0) {||| 18 temp.push_back(k);||| 19 k.clear();||| 20 }||| 21 }||| 22 }||| 23 if (k.size() != 0) {||| 24 temp.push_back(k);||| 25 }||| 26 for (auto i : temp) {||| 27 int d1 = i[0];||| 28 int s1 = i.size();||| 29 int d2 = i[s1 - 1];||| 30 if (d1 == 0) {||| 31 if (d2 == n - 1) {||| 32 s[d1] = 'R';||| 33 } else {||| 34 if (s[d2 + 1] == 'R') {||| 35 s[d2] = 'B';||| 36 int cnt = 0;||| 37 for (int i = d2; i >= d1; i--) {||| 38 if (cnt % 2 == 0) {||| 39 s[i] = 'B';||| 40 } else {||| 41 s[i] = 'R';||| 42 }||| 43 cnt++;||| 44 }||| 45 } else {||| 46 s[d2] = 'R';||| 47 int cnt = 0;||| 48 for (int i = d2; i >= d1; i--) {||| 49 if (cnt % 2 == 0) {||| 50 s[i] = 'R';||| 51 } else {||| 52 s[i] = 'B';||| 53 }||| 54 cnt++;||| 55 }||| 56 }||| 57 }||| 58 } else if (d2 == n - 1) {||| 59 if (s[d1 - 1] == 'R') {||| 60 s[d1] = 'B';||| 61 int cnt = 0;||| 62 for (int i = d1; i <= d2; i++) {||| 63 if (cnt % 2 == 0) {||| 64 s[i] = 'B';||| 65 } else {||| 66 s[i] = 'R';||| 67 }||| 68 cnt++;||| 69 }||| 70 } else {||| 71 s[d1] = 'R';||| 72 int cnt = 0;||| 73 for (int i = d1; i <= d2; i++) {||| 74 if (cnt % 2 == 0) {||| 75 s[i] = 'R';||| 76 } else {||| 77 s[i] = 'B';||| 78 }||| 79 cnt++;||| 80 }||| 81 }||| 82 } else {||| 83 if (s[d1 - 1] == 'R') {||| 84 s[d1] = 'B';||| 85 int cnt = 0;||| 86 for (int i = d1; i <= d2; i++) {||| 87 if (cnt % 2 == 0) {||| 88 s[i] = 'B';||| 89 } else {||| 90 s[i] = 'R';||| 91 }||| 92 cnt++;||| 93 }||| 94 } else {||| 95 s[d1] = 'R';||| 96 int cnt = 0;||| 97 for (int i = d1; i <= d2; i++) {||| 98 if (cnt % 2 == 0) {||| 99 s[i] = 'R';||| 100 } else {||| 101 s[i] = 'B';||| 102 }||| 103 cnt++;||| 104 }||| 105 }||| 106 }||| 107 }||| 108 cout << s << ""\n"";||| 109 }||| 110 int main() {||| 111 ios_base::sync_with_stdio(false);||| 112 cin.tie(NULL);||| 113 cout.tie(NULL);||| 114 long long int t;||| 115 cin >> t;||| 116 while (t--) {||| 117 solve();||| 118 }||| 119 }||| "	31 if (d1 == n - 1) {
61	209	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double pai = 3.1415926536;||| 4 const int inf = 0x3f3f3f3f;||| 5 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 6 const unsigned long long bas = 2333;||| 7 const int MAXN = 6e5 + 10;||| 8 const long long mod = 998244353;||| 9 int dx[] = {-1, 0, 1, -1, 1, -1, 0, 1};||| 10 int dy[] = {-1, -1, -1, 0, 0, 1, 1, 1};||| 11 template <typename T>||| 12 void rd(T &x) {||| 13 char ch = getchar();||| 14 x = 0;||| 15 int f = 1;||| 16 while (ch < '0' || ch > '9') {||| 17 if (ch == '-') f = -1;||| 18 ch = getchar();||| 19 }||| 20 while (ch >= '0' && ch <= '9') {||| 21 x = x * 10 + ch - '0';||| 22 ch = getchar();||| 23 }||| 24 x *= f;||| 25 }||| 26 template <typename T>||| 27 inline void wt(T a) {||| 28 if (a < 0) putchar('-'), a = -a;||| 29 if (a >= 10) wt(a / 10);||| 30 putchar(a % 10 + 48);||| 31 }||| 32 char s[110];||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 int T = 1;||| 36 cin >> T;||| 37 while (T--) {||| 38 int n, p = 0;||| 39 cin >> n >> s + 1;||| 40 for (int i = 1; i <= n; ++i) {||| 41 if (s[i] != '?') {||| 42 p = i;||| 43 break;||| 44 }||| 45 }||| 46 if (!p) {||| 47 for (int i = 1; i <= n; ++i) {||| 48 if (i & 1)||| 49 s[i] = 'R';||| 50 else||| 51 s[i] = 'B';||| 52 }||| 53 } else {||| 54 if (p & 1) {||| 55 if (s[p] == 'B')||| 56 s[0] = 'R';||| 57 else||| 58 s[0] = 'B';||| 59 } else||| 60 s[0] = s[p];||| 61 for (int i = 1; i <= n; ++i) {||| 62 if (s[i] == '?') {||| 63 if (s[i - 1] == 'R')||| 64 s[i] = 'B';||| 65 else||| 66 s[i] = 'R';||| 67 }||| 68 }||| 69 }||| 70 cout << s + 1 << '\n';||| 71 }||| 72 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double pai = 3.1415926536;||| 4 const int inf = 0x3f3f3f3f;||| 5 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 6 const unsigned long long bas = 2333;||| 7 const int MAXN = 6e5 + 10;||| 8 const long long mod = 998244353;||| 9 int dx[] = {-1, 0, 1, -1, 1, -1, 0, 1};||| 10 int dy[] = {-1, -1, -1, 0, 0, 1, 1, 1};||| 11 template <typename T>||| 12 void rd(T &x) {||| 13 char ch = getchar();||| 14 x = 0;||| 15 int f = 1;||| 16 while (ch < '0' || ch > '9') {||| 17 if (ch == '-') f = -1;||| 18 ch = getchar();||| 19 }||| 20 while (ch >= '0' && ch <= '9') {||| 21 x = x * 10 + ch - '0';||| 22 ch = getchar();||| 23 }||| 24 x *= f;||| 25 }||| 26 template <typename T>||| 27 inline void wt(T a) {||| 28 if (a < 0) putchar('-'), a = -a;||| 29 if (a >= 10) wt(a / 10);||| 30 putchar(a % 10 + 48);||| 31 }||| 32 char s[110];||| 33 int main() {||| 34 ios::sync_with_stdio(false);||| 35 int T = 1;||| 36 cin >> T;||| 37 while (T--) {||| 38 int n, p = 0;||| 39 cin >> n >> s + 1;||| 40 for (int i = 1; i <= n; ++i) {||| 41 if (s[i] == '?') {||| 42 p = i;||| 43 break;||| 44 }||| 45 }||| 46 if (!p) {||| 47 for (int i = 1; i <= n; ++i) {||| 48 if (i & 1)||| 49 s[i] = 'R';||| 50 else||| 51 s[i] = 'B';||| 52 }||| 53 } else {||| 54 if (p & 1) {||| 55 if (s[p] == 'B')||| 56 s[0] = 'R';||| 57 else||| 58 s[0] = 'B';||| 59 } else||| 60 s[0] = s[p];||| 61 for (int i = 1; i <= n; ++i) {||| 62 if (s[i] == '?') {||| 63 if (s[i - 1] == 'R')||| 64 s[i] = 'B';||| 65 else||| 66 s[i] = 'R';||| 67 }||| 68 }||| 69 }||| 70 cout << s + 1 << '\n';||| 71 }||| 72 }||| 	41 if (s[i] != '?') {
61	43	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 105;||| 4 const int inf = 1e9 + 7;||| 5 int a[maxn];||| 6 int dp[maxn];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n;||| 12 cin >> n;||| 13 string s;||| 14 cin >> s;||| 15 int cnt = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 cnt += (s[i] != '?');||| 18 }||| 19 if (cnt == 0) s[0] = 'R';||| 20 for (int i = 1; i < n; i++) {||| 21 if (s[i] == '?' && s[i - 1] != '?') {||| 22 s[i] = (s[i - 1] == 'B' ? 'R' : 'B');||| 23 }||| 24 }||| 25 for (int i = n - 2; i >= 0; i--) {||| 26 if (s[i] == '?' && s[i + 1] != '?') {||| 27 s[i] = (s[i + 1] == 'B' ? 'R' : 'B');||| 28 }||| 29 }||| 30 cout << s << endl;||| 31 }||| 32 return 0;||| 33 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 105;||| 4 const int inf = 1e9 + 7;||| 5 int a[maxn];||| 6 int dp[maxn];||| 7 int main() {||| 8 int T;||| 9 cin >> T;||| 10 while (T--) {||| 11 int n;||| 12 cin >> n;||| 13 string s;||| 14 cin >> s;||| 15 int cnt = 0;||| 16 for (int i = 0; i < n; i++) {||| 17 cnt += (s[i] != '?');||| 18 }||| 19 if (cnt == 0) s[0] = 'R';||| 20 for (int i = 1; i < n; i++) {||| 21 if (s[i] == '?' && s[i - 1] != '?') {||| 22 s[i] = (s[i - 1] == 'B' ? 'R' : 'B');||| 23 }||| 24 }||| 25 for (int i = n - 2; i >= 0; i--) {||| 26 if (s[i] == '?' && s[i + 1] != '?') {||| 27 s[i] = (s[i - 1] == 'B' ? 'R' : 'B');||| 28 }||| 29 }||| 30 cout << s << endl;||| 31 }||| 32 return 0;||| 33 }||| 	27 s[i] = (s[i + 1] == 'B' ? 'R' : 'B');
61	240	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int tst = 0;||| 8 cin >> tst;||| 9 while (tst--) {||| 10 int n = 0;||| 11 cin >> n;||| 12 string s;||| 13 cin >> s;||| 14 int i = 0;||| 15 while (s[i] == '?' && i < n && ++i)||| 16 ;||| 17 while (i >= 0 && i--) {||| 18 if (s[i] == '?') {||| 19 if (s[i + 1] == 'B')||| 20 s[i] = 'R';||| 21 else||| 22 s[i] = 'B';||| 23 }||| 24 }||| 25 for (int i = 1; i < n; i++) {||| 26 if (s[i] == '?') {||| 27 if (s[i - 1] == 'B')||| 28 s[i] = 'R';||| 29 else||| 30 s[i] = 'B';||| 31 }||| 32 }||| 33 cout << s << endl;||| 34 }||| 35 return 0;||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int tst = 0;||| 8 cin >> tst;||| 9 while (tst--) {||| 10 int n = 0;||| 11 cin >> n;||| 12 string s;||| 13 cin >> s;||| 14 int i = 0;||| 15 while (s[i] == '?' && i < n && i++)||| 16 ;||| 17 while (i >= 0 && i--) {||| 18 if (s[i] == '?') {||| 19 if (s[i + 1] == 'B')||| 20 s[i] = 'R';||| 21 else||| 22 s[i] = 'B';||| 23 }||| 24 }||| 25 for (int i = 1; i < n; i++) {||| 26 if (s[i] == '?') {||| 27 if (s[i - 1] == 'B')||| 28 s[i] = 'R';||| 29 else||| 30 s[i] = 'B';||| 31 }||| 32 }||| 33 cout << s << endl;||| 34 }||| 35 return 0;||| 36 }||| 	15 while (s[i] == '?' && i < n && ++i)
61	22	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1000000007;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int tc;||| 8 cin >> tc;||| 9 while (tc--) {||| 10 int n;||| 11 cin >> n;||| 12 string s;||| 13 cin >> s;||| 14 if (n == 1) {||| 15 if (s[0] == '?') {||| 16 cout << ""B\n"";||| 17 } else {||| 18 cout << s[0] << ""\n"";||| 19 }||| 20 } else {||| 21 if (s[0] == '?') {||| 22 int in = -1;||| 23 string res = """";||| 24 for (int i = 0; i < s.length(); i++) {||| 25 res.push_back(s[i]);||| 26 if (s[i] != '?') {||| 27 in = i;||| 28 break;||| 29 }||| 30 }||| 31 if (in == -1) {||| 32 string res1 = """";||| 33 for (int i = 0; i < s.length(); i++) {||| 34 if (i % 2 == 0) {||| 35 res1.push_back('B');||| 36 } else {||| 37 res1.push_back('R');||| 38 }||| 39 }||| 40 cout << res1 << ""\n"";||| 41 } else {||| 42 for (int i = in - 1; i >= 0; i--) {||| 43 if (res[i + 1] == 'B') {||| 44 res[i] = 'R';||| 45 } else {||| 46 res[i] = 'B';||| 47 }||| 48 }||| 49 for (int i = in + 1; i < s.length(); i++) {||| 50 if (s[i] == '?') {||| 51 if (res[i - 1] == 'B') {||| 52 res.push_back('R');||| 53 } else {||| 54 res.push_back('B');||| 55 }||| 56 } else {||| 57 res.push_back(s[i]);||| 58 }||| 59 }||| 60 cout << res << ""\n"";||| 61 }||| 62 } else {||| 63 string res = """";||| 64 res.push_back(s[0]);||| 65 for (int i = 1; i < s.length(); i++) {||| 66 if (s[i] == '?') {||| 67 if (res[i - 1] == 'B') {||| 68 res.push_back('R');||| 69 } else {||| 70 res.push_back('B');||| 71 }||| 72 } else {||| 73 res.push_back(s[i]);||| 74 }||| 75 }||| 76 cout << res << ""\n"";||| 77 }||| 78 }||| 79 }||| 80 return 0;||| 81 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1000000007;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int tc;||| 8 cin >> tc;||| 9 while (tc--) {||| 10 int n;||| 11 cin >> n;||| 12 string s;||| 13 cin >> s;||| 14 if (n == 1) {||| 15 if (s[0] = '?') {||| 16 cout << ""B\n"";||| 17 } else {||| 18 cout << s[0] << ""\n"";||| 19 }||| 20 } else {||| 21 if (s[0] == '?') {||| 22 int in = -1;||| 23 string res = """";||| 24 for (int i = 0; i < s.length(); i++) {||| 25 res.push_back(s[i]);||| 26 if (s[i] != '?') {||| 27 in = i;||| 28 break;||| 29 }||| 30 }||| 31 if (in == -1) {||| 32 string res1 = """";||| 33 for (int i = 0; i < s.length(); i++) {||| 34 if (i % 2 == 0) {||| 35 res1.push_back('B');||| 36 } else {||| 37 res1.push_back('R');||| 38 }||| 39 }||| 40 cout << res1 << ""\n"";||| 41 } else {||| 42 for (int i = in - 1; i >= 0; i--) {||| 43 if (res[i + 1] == 'B') {||| 44 res[i] = 'R';||| 45 } else {||| 46 res[i] = 'B';||| 47 }||| 48 }||| 49 for (int i = in + 1; i < s.length(); i++) {||| 50 if (s[i] == '?') {||| 51 if (res[i - 1] == 'B') {||| 52 res.push_back('R');||| 53 } else {||| 54 res.push_back('B');||| 55 }||| 56 } else {||| 57 res.push_back(s[i]);||| 58 }||| 59 }||| 60 cout << res << ""\n"";||| 61 }||| 62 } else {||| 63 string res = """";||| 64 res.push_back(s[0]);||| 65 for (int i = 1; i < s.length(); i++) {||| 66 if (s[i] == '?') {||| 67 if (res[i - 1] == 'B') {||| 68 res.push_back('R');||| 69 } else {||| 70 res.push_back('B');||| 71 }||| 72 } else {||| 73 res.push_back(s[i]);||| 74 }||| 75 }||| 76 cout << res << ""\n"";||| 77 }||| 78 }||| 79 }||| 80 return 0;||| 81 }||| "	15 if (s[0] == '?') {
62	314	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long powermod(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b) {||| 7 if (b & 1) ans = (ans * a) % mod;||| 8 b = b / 2;||| 9 a = (a * a) % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 long long gcd(long long a, long long b) {||| 14 if (b == 0) return a;||| 15 return gcd(b, a % b);||| 16 }||| 17 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 18 void Arise() {||| 19 long long n;||| 20 cin >> n;||| 21 map<long long, vector<long long> > mpp1;||| 22 for (long long i = 1; i < n; i++) {||| 23 mpp1[i].push_back(i + 1);||| 24 }||| 25 for (long long i = 1; i <= n; i++) {||| 26 long long a;||| 27 cin >> a;||| 28 if (a == 0) {||| 29 mpp1[i].push_back(n + 1);||| 30 } else {||| 31 mpp1[n + 1].push_back(i);||| 32 }||| 33 }||| 34 for (long long i = 1; i <= n; i++) {||| 35 vector<long long> temp = mpp1[1];||| 36 bool f = 0;||| 37 for (auto &val : temp) {||| 38 if (val == n + 1) {||| 39 f = 1;||| 40 break;||| 41 }||| 42 }||| 43 if (f) {||| 44 bool f2 = 0;||| 45 for (auto &val : mpp1[n + 1]) {||| 46 if (val == i + 1) {||| 47 f2 = 1;||| 48 break;||| 49 }||| 50 }||| 51 if (f2) {||| 52 for (long long j = 1; j <= i; j++) {||| 53 cout << j << "" "";||| 54 }||| 55 cout << n + 1 << "" "";||| 56 for (long long j = i + 1; j <= n; j++) {||| 57 cout << j << "" "";||| 58 }||| 59 cout << ""\n"";||| 60 return;||| 61 }||| 62 }||| 63 }||| 64 for (auto &val : mpp1[n + 1]) {||| 65 if (val == 1) {||| 66 cout << n + 1 << "" "";||| 67 for (long long i = 1; i <= n; i++) {||| 68 cout << i << "" "";||| 69 }||| 70 cout << ""\n"";||| 71 return;||| 72 }||| 73 }||| 74 for (auto &val : mpp1[n]) {||| 75 if (val == n + 1) {||| 76 for (long long i = 1; i <= n + 1; i++) {||| 77 cout << i << "" "";||| 78 }||| 79 cout << ""\n"";||| 80 return;||| 81 }||| 82 }||| 83 cout << ""-1\n"";||| 84 }||| 85 int32_t main() {||| 86 ios_base::sync_with_stdio(0);||| 87 cin.tie(0);||| 88 cout.tie(0);||| 89 long long t;||| 90 cin >> t;||| 91 while (t--) {||| 92 Arise();||| 93 }||| 94 cerr << ""\n""||| 95 << (float)clock() / CLOCKS_PER_SEC * 1000 << "" ms""||| 96 << ""\n"";||| 97 }||| "	"1 #include <bits/stdc++.h>||| 2 const long long mod = 1e9 + 7;||| 3 using namespace std;||| 4 long long powermod(long long a, long long b) {||| 5 long long ans = 1;||| 6 while (b) {||| 7 if (b & 1) ans = (ans * a) % mod;||| 8 b = b / 2;||| 9 a = (a * a) % mod;||| 10 }||| 11 return ans;||| 12 }||| 13 long long gcd(long long a, long long b) {||| 14 if (b == 0) return a;||| 15 return gcd(b, a % b);||| 16 }||| 17 long long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }||| 18 void Arise() {||| 19 long long n;||| 20 cin >> n;||| 21 map<long long, vector<long long> > mpp1;||| 22 for (long long i = 1; i < n; i++) {||| 23 mpp1[i].push_back(i + 1);||| 24 }||| 25 for (long long i = 1; i <= n; i++) {||| 26 long long a;||| 27 cin >> a;||| 28 if (a == 0) {||| 29 mpp1[i].push_back(n + 1);||| 30 } else {||| 31 mpp1[n + 1].push_back(i);||| 32 }||| 33 }||| 34 for (long long i = 1; i <= n; i++) {||| 35 vector<long long> temp = mpp1[1];||| 36 bool f = 0;||| 37 for (auto &val : temp) {||| 38 if (val == n + 1) {||| 39 f = 1;||| 40 break;||| 41 }||| 42 }||| 43 if (f) {||| 44 bool f2 = 0;||| 45 for (auto &val : mpp1[n + 1]) {||| 46 if (val == i + 1) {||| 47 f2 = 1;||| 48 break;||| 49 }||| 50 }||| 51 if (f2) {||| 52 for (long long j = i; j <= i; j++) {||| 53 cout << j << "" "";||| 54 }||| 55 cout << n + 1 << "" "";||| 56 for (long long j = i + 1; j <= n; j++) {||| 57 cout << j << "" "";||| 58 }||| 59 cout << ""\n"";||| 60 return;||| 61 }||| 62 }||| 63 }||| 64 for (auto &val : mpp1[n + 1]) {||| 65 if (val == 1) {||| 66 cout << n + 1 << "" "";||| 67 for (long long i = 1; i <= n; i++) {||| 68 cout << i << "" "";||| 69 }||| 70 cout << ""\n"";||| 71 return;||| 72 }||| 73 }||| 74 for (auto &val : mpp1[n]) {||| 75 if (val == n + 1) {||| 76 for (long long i = 1; i <= n + 1; i++) {||| 77 cout << i << "" "";||| 78 }||| 79 cout << ""\n"";||| 80 return;||| 81 }||| 82 }||| 83 cout << ""-1\n"";||| 84 }||| 85 int32_t main() {||| 86 ios_base::sync_with_stdio(0);||| 87 cin.tie(0);||| 88 cout.tie(0);||| 89 long long t;||| 90 cin >> t;||| 91 while (t--) {||| 92 Arise();||| 93 }||| 94 cerr << ""\n""||| 95 << (float)clock() / CLOCKS_PER_SEC * 1000 << "" ms""||| 96 << ""\n"";||| 97 }||| "	52 for (long long j = 1; j <= i; j++) {
62	246	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 for (int i = 0; i < n; ++i) {||| 7 int k = 0;||| 8 cin >> k;||| 9 bool already_ok = false;||| 10 bool left_down = false;||| 11 vector<int> ans;||| 12 int cur = -1;||| 13 for (int j = 0; j < k; ++j) {||| 14 std::cin >> cur;||| 15 if (cur == 0) {||| 16 left_down = true;||| 17 } else if (!already_ok && left_down && cur == 1) {||| 18 already_ok = true;||| 19 ans.push_back(k);||| 20 }||| 21 ans.push_back(j);||| 22 }||| 23 if (!already_ok) {||| 24 if (!left_down) {||| 25 cout << k + 1 << ' ';||| 26 for (auto& i : ans) {||| 27 cout << i + 1 << ' ';||| 28 }||| 29 } else {||| 30 for (auto& i : ans) {||| 31 cout << i + 1 << ' ';||| 32 }||| 33 cout << k + 1 << ' ';||| 34 }||| 35 } else {||| 36 for (auto& i : ans) {||| 37 cout << i + 1 << ' ';||| 38 }||| 39 }||| 40 cout << std::endl;||| 41 }||| 42 return 0;||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 for (int i = 0; i < n; ++i) {||| 7 int k = 0;||| 8 cin >> k;||| 9 bool already_ok = false;||| 10 bool left_down = false;||| 11 vector<int> ans;||| 12 int cur = -1;||| 13 for (int j = 0; j < k; ++j) {||| 14 std::cin >> cur;||| 15 if (cur == 1) {||| 16 left_down = true;||| 17 } else if (!already_ok && left_down && cur == 1) {||| 18 already_ok = true;||| 19 ans.push_back(k);||| 20 }||| 21 ans.push_back(j);||| 22 }||| 23 if (!already_ok) {||| 24 if (!left_down) {||| 25 cout << k + 1 << ' ';||| 26 for (auto& i : ans) {||| 27 cout << i + 1 << ' ';||| 28 }||| 29 } else {||| 30 for (auto& i : ans) {||| 31 cout << i + 1 << ' ';||| 32 }||| 33 cout << k + 1 << ' ';||| 34 }||| 35 } else {||| 36 for (auto& i : ans) {||| 37 cout << i + 1 << ' ';||| 38 }||| 39 }||| 40 cout << std::endl;||| 41 }||| 42 return 0;||| 43 }||| 	15 if (cur == 0) {
62	286	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main2() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> v(n);||| 7 for (long long int i = 0; i < n; i++) cin >> v[i];||| 8 if (v[0] == 1) {||| 9 cout << n + 1 << "" "";||| 10 for (long long int i = 1; i <= n; i++) cout << i << "" "";||| 11 cout << ""\n"";||| 12 } else if (v[n - 1] == 0) {||| 13 for (long long int i = 1; i <= n; i++) cout << i << "" "";||| 14 cout << n + 1 << ""\n"";||| 15 } else {||| 16 for (long long int i = 1; i < n; i++) {||| 17 if (v[i - 1] == 0 && v[i] == 1) {||| 18 for (long long int j = 0; j <= i - 1; j++) cout << j + 1 << "" "";||| 19 cout << n + 1 << "" "";||| 20 for (long long int j = i; j < n; j++) cout << j + 1 << "" "";||| 21 cout << ""\n"";||| 22 return;||| 23 }||| 24 }||| 25 cout << ""-1\n"";||| 26 }||| 27 return;||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(false);||| 31 cin.tie(NULL);||| 32 cout.tie(NULL);||| 33 long long int t = 1;||| 34 cin >> t;||| 35 for (long long int i = 1; i <= t; i++) {||| 36 main2();||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main2() {||| 4 long long int n;||| 5 cin >> n;||| 6 vector<long long int> v(n);||| 7 for (long long int i = 0; i < n; i++) cin >> v[i];||| 8 if (v[0] == 1) {||| 9 cout << n + 1 << "" "";||| 10 for (long long int i = 1; i <= n; i++) cout << i << "" "";||| 11 cout << ""\n"";||| 12 } else if (v[n - 1] == 0) {||| 13 for (long long int i = 1; i <= n; i++) cout << i << "" "";||| 14 cout << n + 1 << ""\n"";||| 15 } else {||| 16 for (long long int i = 1; i < n; i++) {||| 17 if (v[i - 1] == 0 && v[i] == 1) {||| 18 for (long long int j = 0; j < i - 1; j++) cout << j + 1 << "" "";||| 19 cout << n + 1 << "" "";||| 20 for (long long int j = i; j < n; j++) cout << j + 1 << "" "";||| 21 cout << ""\n"";||| 22 return;||| 23 }||| 24 }||| 25 cout << ""-1\n"";||| 26 }||| 27 return;||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(false);||| 31 cin.tie(NULL);||| 32 cout.tie(NULL);||| 33 long long int t = 1;||| 34 cin >> t;||| 35 for (long long int i = 1; i <= t; i++) {||| 36 main2();||| 37 }||| 38 return 0;||| 39 }||| "	"18 for (long long int j = 0; j <= i - 1; j++) cout << j + 1 << "" "";"
62	9	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 if (a[0] == 1) {||| 16 cout << n + 1 << ' ';||| 17 for (int i = 1; i <= n; i++) cout << i << ' ';||| 18 cout << endl;||| 19 } else if (a[n - 1] == 0) {||| 20 for (int i = 1; i <= n; i++) cout << i << ' ';||| 21 cout << n + 1 << endl;||| 22 } else {||| 23 int f = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if (a[i] == 0 && a[i + 1] == 1 && i < n - 1 && f == 0) {||| 26 f = 1;||| 27 cout << i + 1 << ' ' << n + 1 << ' ';||| 28 } else||| 29 cout << i + 1 << ' ';||| 30 }||| 31 cout << endl;||| 32 }||| 33 }||| 34 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int n;||| 12 cin >> n;||| 13 int a[n];||| 14 for (int i = 0; i < n; i++) cin >> a[i];||| 15 if (a[0] == '1') {||| 16 cout << n + 1 << ' ';||| 17 for (int i = 1; i <= n; i++) cout << i << ' ';||| 18 cout << endl;||| 19 } else if (a[n - 1] == 0) {||| 20 for (int i = 1; i <= n; i++) cout << i << ' ';||| 21 cout << n + 1 << endl;||| 22 } else {||| 23 int f = 0;||| 24 for (int i = 0; i < n; i++) {||| 25 if (a[i] == 0 && a[i + 1] == 1 && i < n - 1 && f == 0) {||| 26 f = 1;||| 27 cout << i + 1 << ' ' << n + 1 << ' ';||| 28 } else||| 29 cout << i + 1 << ' ';||| 30 }||| 31 cout << endl;||| 32 }||| 33 }||| 34 }||| 	15 if (a[0] == 1) {
62	159	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 inline T lowbit(T x) {||| 9 return x & -x;||| 10 }||| 11 const int N = 2e5 + 10;||| 12 int n;||| 13 int a[N];||| 14 void solve() {||| 15 cin >> n;||| 16 for (int i = 0; i < n; ++i) cin >> a[i];||| 17 bool flag = false;||| 18 int pos = 0;||| 19 for (int i = 0; i < n; ++i) {||| 20 if (a[i] == 0 && a[(i + 1) % n] == 1) {||| 21 flag = true;||| 22 pos = i;||| 23 break;||| 24 }||| 25 }||| 26 if (a[0] == 1) {||| 27 printf(""%d "", n + 1);||| 28 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 29 printf(""\n"");||| 30 return;||| 31 } else if (a[n - 1] == 0) {||| 32 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 33 printf(""%d "", n + 1);||| 34 printf(""\n"");||| 35 return;||| 36 }||| 37 if (!flag)||| 38 puts(""-1"");||| 39 else {||| 40 for (int i = 0; i < n; ++i) {||| 41 printf(""%d "", i + 1);||| 42 if (pos == i) printf(""%d "", n + 1);||| 43 }||| 44 printf(""\n"");||| 45 }||| 46 }||| 47 signed main() {||| 48 int t;||| 49 cin >> t;||| 50 while (t--) solve();||| 51 return 0;||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 inline T gcd(T a, T b) {||| 5 return b ? gcd(b, a % b) : a;||| 6 }||| 7 template <typename T>||| 8 inline T lowbit(T x) {||| 9 return x & -x;||| 10 }||| 11 const int N = 2e5 + 10;||| 12 int n;||| 13 int a[N];||| 14 void solve() {||| 15 cin >> n;||| 16 for (int i = 0; i < n; ++i) cin >> a[i];||| 17 bool flag = false;||| 18 int pos = 0;||| 19 for (int i = 0; i < n; ++i) {||| 20 if (a[i] == 0 && a[(i + 1) % n] == 1) {||| 21 flag = true;||| 22 pos = i;||| 23 break;||| 24 }||| 25 }||| 26 if (a[0] == 1) {||| 27 printf(""%d "", n + 1);||| 28 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 29 printf(""\n"");||| 30 return;||| 31 }||| 32 if (a[n - 1] == 1) {||| 33 for (int i = 1; i <= n; ++i) printf(""%d "", i);||| 34 printf(""%d "", n + 1);||| 35 printf(""\n"");||| 36 return;||| 37 }||| 38 if (!flag)||| 39 puts(""-1"");||| 40 else {||| 41 for (int i = 0; i < n; ++i) {||| 42 printf(""%d "", i + 1);||| 43 if (pos == i) printf(""%d "", n + 1);||| 44 }||| 45 printf(""\n"");||| 46 }||| 47 }||| 48 signed main() {||| 49 int t;||| 50 cin >> t;||| 51 while (t--) solve();||| 52 return 0;||| 53 }||| "	31 } else if (a[n - 1] == 0) {
62	20	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 std::cin >> t;||| 5 while (t) {||| 6 int n;||| 7 std::cin >> n;||| 8 int arr[n];||| 9 for (auto &x : arr) std::cin >> x;||| 10 if (n + 1 == 2) {||| 11 if (arr[0] == 0)||| 12 std::cout << ""1 2"" << std::endl;||| 13 else||| 14 std::cout << ""2 1"" << std::endl;||| 15 } else {||| 16 if (arr[n - 1] == 0) {||| 17 for (int i = 1; i <= n + 1; i++) std::cout << i << "" "";||| 18 std::cout << std::endl;||| 19 } else if (arr[0] == 1) {||| 20 std::cout << n + 1 << "" "";||| 21 for (int i = 1; i <= n; i++) std::cout << i << "" "";||| 22 std::cout << std::endl;||| 23 } else {||| 24 int turnaround = -1;||| 25 for (int i = 0; i <= n - 2; i++) {||| 26 if (arr[i] == 0 && arr[i + 1] == 1) {||| 27 turnaround = i;||| 28 break;||| 29 }||| 30 }||| 31 if (turnaround == -1)||| 32 std::cout << ""-1"" << std::endl;||| 33 else {||| 34 for (int i = 0; i <= turnaround; i++) {||| 35 std::cout << i + 1 << "" "";||| 36 }||| 37 std::cout << n + 1 << "" "";||| 38 for (int i = turnaround + 1; i < n; i++) std::cout << i + 1 << "" "";||| 39 std::cout << std::endl;||| 40 }||| 41 }||| 42 }||| 43 t--;||| 44 }||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 int t;||| 4 std::cin >> t;||| 5 while (t) {||| 6 int n;||| 7 std::cin >> n;||| 8 int arr[n];||| 9 for (auto &x : arr) std::cin >> x;||| 10 if (n + 1 == 2) {||| 11 if (arr[0] == 0)||| 12 std::cout << ""1 2"" << std::endl;||| 13 else||| 14 std::cout << ""2 1"" << std::endl;||| 15 } else {||| 16 if (arr[n - 1] == 0) {||| 17 for (int i = 1; i <= n + 1; i++) std::cout << i << "" "";||| 18 std::cout << std::endl;||| 19 } else if (arr[0] == 1) {||| 20 std::cout << n + 1 << "" "";||| 21 for (int i = 1; i <= n; i++) std::cout << i << "" "";||| 22 std::cout << std::endl;||| 23 } else {||| 24 int turnaround = -1;||| 25 for (int i = 0; i <= n - 3; i++) {||| 26 if (arr[i] == 0 && arr[i + 1] == 1) {||| 27 turnaround = i;||| 28 break;||| 29 }||| 30 }||| 31 if (turnaround == -1)||| 32 std::cout << ""-1"" << std::endl;||| 33 else {||| 34 for (int i = 0; i <= turnaround; i++) {||| 35 std::cout << i + 1 << "" "";||| 36 }||| 37 std::cout << n + 1 << "" "";||| 38 for (int i = turnaround + 1; i < n; i++) std::cout << i + 1 << "" "";||| 39 std::cout << std::endl;||| 40 }||| 41 }||| 42 }||| 43 t--;||| 44 }||| 45 }||| "	25 for (int i = 0; i <= n - 2; i++) {
63	36	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int findParent(long long int node, vector<long long int> &parent) {||| 4 if (parent[node] == node) return node;||| 5 parent[node] = findParent(parent[node], parent);||| 6 return parent[node];||| 7 }||| 8 void solve(long long int caseno) {||| 9 long long int n, m1, m2, v1, v2, p1, p2;||| 10 cin >> n >> m1 >> m2;||| 11 vector<long long int> par1(n + 1, 0), par2(n + 1, 0), rank1(n + 1, 0),||| 12 rank2(n + 1, 0);||| 13 vector<pair<long long int, long long int> > ans;||| 14 for (long long int i = 1; i <= n; i++) {||| 15 par1[i] = par2[i] = i;||| 16 }||| 17 for (long long int i = 0; i < m1; i++) {||| 18 cin >> v1 >> v2;||| 19 p1 = findParent(v1, par1);||| 20 p2 = findParent(v2, par1);||| 21 if (rank1[p1] < rank1[p2]) {||| 22 par1[p1] = p2;||| 23 } else if (rank1[p1] > rank1[p2]) {||| 24 par1[p2] = p1;||| 25 } else {||| 26 par1[p2] = p1;||| 27 rank1[p1]++;||| 28 }||| 29 }||| 30 for (long long int i = 0; i < m2; i++) {||| 31 cin >> v1 >> v2;||| 32 p1 = findParent(v1, par2);||| 33 p2 = findParent(v2, par2);||| 34 if (rank2[p1] < rank2[p2]) {||| 35 par2[p1] = p2;||| 36 } else if (rank2[p1] > rank2[p2]) {||| 37 par2[p2] = p1;||| 38 } else {||| 39 par2[p2] = p1;||| 40 rank2[p1]++;||| 41 }||| 42 }||| 43 for (long long int i = 1; i <= n; i++) {||| 44 for (long long int j = i + 1; j <= n; j++) {||| 45 if (findParent(i, par1) != findParent(j, par1) &&||| 46 findParent(i, par2) != findParent(j, par2)) {||| 47 ans.push_back({i, j});||| 48 p1 = findParent(i, par1);||| 49 p2 = findParent(j, par1);||| 50 if (rank1[p1] < rank1[p2]) {||| 51 par1[p1] = p2;||| 52 } else if (rank1[p1] > rank1[p2]) {||| 53 par1[p2] = p1;||| 54 } else {||| 55 par1[p2] = p1;||| 56 rank1[p1]++;||| 57 }||| 58 p1 = findParent(i, par2);||| 59 p2 = findParent(j, par2);||| 60 if (p1 == p2) continue;||| 61 if (rank2[p1] < rank2[p2]) {||| 62 par2[p1] = p2;||| 63 } else if (rank2[p1] > rank2[p2]) {||| 64 par2[p2] = p1;||| 65 } else {||| 66 par2[p2] = p1;||| 67 rank2[p1]++;||| 68 }||| 69 }||| 70 }||| 71 }||| 72 cout << ans.size() << ""\n"";||| 73 for (auto i : ans) {||| 74 cout << i.first << "" "" << i.second << ""\n"";||| 75 }||| 76 }||| 77 int main() {||| 78 ios_base::sync_with_stdio(false);||| 79 cin.tie(NULL);||| 80 cout.tie(NULL);||| 81 long long int t = 1;||| 82 for (long long int i = 1; i <= t; i++) {||| 83 solve(i);||| 84 }||| 85 return 0;||| 86 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int findParent(long long int node, vector<long long int> &parent) {||| 4 if (parent[node] == node) return node;||| 5 parent[node] = findParent(parent[node], parent);||| 6 return parent[node];||| 7 }||| 8 void solve(long long int caseno) {||| 9 long long int n, m1, m2, v1, v2, p1, p2;||| 10 cin >> n >> m1 >> m2;||| 11 vector<long long int> par1(n + 1, 0), par2(n + 1, 0), rank1(n + 1, 0),||| 12 rank2(n + 1, 0);||| 13 vector<pair<long long int, long long int> > ans;||| 14 for (long long int i = 1; i <= n; i++) {||| 15 par1[i] = par2[i] = i;||| 16 }||| 17 for (long long int i = 0; i < m1; i++) {||| 18 cin >> v1 >> v2;||| 19 p1 = findParent(v1, par1);||| 20 p2 = findParent(v2, par1);||| 21 if (rank1[p1] < rank1[p2]) {||| 22 par1[p1] = p2;||| 23 } else if (rank1[p1] > rank1[p2]) {||| 24 par1[p2] = p1;||| 25 } else {||| 26 par1[p2] = p1;||| 27 rank1[p1]++;||| 28 }||| 29 }||| 30 for (long long int i = 0; i < m2; i++) {||| 31 cin >> v1 >> v2;||| 32 p1 = findParent(v1, par2);||| 33 p2 = findParent(v2, par2);||| 34 if (rank2[p1] < rank2[p2]) {||| 35 par2[p1] = p2;||| 36 } else if (rank2[p1] > rank2[p2]) {||| 37 par2[p2] = p1;||| 38 } else {||| 39 par2[p2] = p1;||| 40 rank2[p1]++;||| 41 }||| 42 }||| 43 for (long long int i = 1; i <= n; i++) {||| 44 for (long long int j = i + 1; j <= n; j++) {||| 45 if (findParent(i, par1) != findParent(j, par1) &&||| 46 findParent(i, par2) != findParent(j, par2)) {||| 47 ans.push_back({i, j});||| 48 p1 = findParent(i, par1);||| 49 p2 = findParent(j, par1);||| 50 if (rank1[p1] < rank1[p2]) {||| 51 par1[p1] = p2;||| 52 } else if (rank1[p1] > rank1[p2]) {||| 53 par1[p2] = p1;||| 54 } else {||| 55 par1[p2] = p1;||| 56 rank1[p1]++;||| 57 }||| 58 p1 = findParent(i, par2);||| 59 p2 = findParent(j, par2);||| 60 if (p1 == p2) continue;||| 61 if (rank2[p1] < rank2[p2]) {||| 62 par1[p1] = p2;||| 63 } else if (rank2[p1] > rank2[p2]) {||| 64 par2[p2] = p1;||| 65 } else {||| 66 par2[p2] = p1;||| 67 rank2[p1]++;||| 68 }||| 69 }||| 70 }||| 71 }||| 72 cout << ans.size() << ""\n"";||| 73 for (auto i : ans) {||| 74 cout << i.first << "" "" << i.second << ""\n"";||| 75 }||| 76 }||| 77 int main() {||| 78 ios_base::sync_with_stdio(false);||| 79 cin.tie(NULL);||| 80 cout.tie(NULL);||| 81 long long int t = 1;||| 82 for (long long int i = 1; i <= t; i++) {||| 83 solve(i);||| 84 }||| 85 return 0;||| 86 }||| "	62 par2[p1] = p2;
63	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 1000;||| 4 int n, m, t;||| 5 int parent2[N], rank2[N], parent1[N], rank1[N];||| 6 bool used1[N], used2[N];||| 7 int find_set_1(int v) {||| 8 if (v == parent1[v]) return v;||| 9 return parent1[v] = find_set_1(parent1[v]);||| 10 }||| 11 void make_set_1(int v) {||| 12 parent1[v] = v;||| 13 rank1[v] = 0;||| 14 }||| 15 void union_sets_1(int a, int b) {||| 16 a = find_set_1(a);||| 17 b = find_set_1(b);||| 18 if (a != b) {||| 19 if (rank1[a] < rank1[b]) swap(a, b);||| 20 parent1[b] = a;||| 21 if (rank1[a] == rank1[b]) ++rank1[a];||| 22 }||| 23 }||| 24 int find_set_2(int v) {||| 25 if (v == parent2[v]) return v;||| 26 return parent2[v] = find_set_2(parent2[v]);||| 27 }||| 28 void make_set_2(int v) {||| 29 parent2[v] = v;||| 30 rank2[v] = 0;||| 31 }||| 32 void union_sets_2(int a, int b) {||| 33 a = find_set_2(a);||| 34 b = find_set_2(b);||| 35 if (a != b) {||| 36 if (rank2[a] < rank2[b]) swap(a, b);||| 37 parent2[b] = a;||| 38 if (rank2[a] == rank2[b]) ++rank2[a];||| 39 }||| 40 }||| 41 int main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 int m1, m2;||| 46 cin >> n >> m1 >> m2;||| 47 int x, y;||| 48 for (int i = 1; i <= n; i++) {||| 49 make_set_2(i);||| 50 make_set_1(i);||| 51 }||| 52 for (int i = 0; i < m1; i++) {||| 53 cin >> x >> y;||| 54 union_sets_1(x, y);||| 55 }||| 56 for (int i = 0; i < m2; i++) {||| 57 cin >> x >> y;||| 58 union_sets_2(x, y);||| 59 }||| 60 vector<pair<int, int>> ans;||| 61 for (int i = 1; i <= n; i++)||| 62 for (int j = 1; j <= n; j++) {||| 63 if (find_set_2(i) != find_set_2(j) && find_set_1(i) != find_set_1(j)) {||| 64 union_sets_2(i, j);||| 65 union_sets_1(i, j);||| 66 ans.push_back({i, j});||| 67 }||| 68 }||| 69 cout << ans.size() << ""\n"";||| 70 for (auto el : ans) {||| 71 cout << el.first << "" "" << el.second << ""\n"";||| 72 }||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 1000;||| 4 int n, m, t;||| 5 int parent2[N], rank2[N], parent1[N], rank1[N];||| 6 bool used1[N], used2[N];||| 7 int find_set_1(int v) {||| 8 if (v == parent1[v]) return v;||| 9 return parent1[v] = find_set_1(parent1[v]);||| 10 }||| 11 void make_set_1(int v) {||| 12 parent1[v] = v;||| 13 rank1[v] = 0;||| 14 }||| 15 void union_sets_1(int a, int b) {||| 16 a = find_set_1(a);||| 17 b = find_set_1(b);||| 18 if (a != b) {||| 19 if (rank1[a] < rank1[b]) swap(a, b);||| 20 parent1[b] = a;||| 21 if (rank1[a] == rank1[b]) ++rank1[a];||| 22 }||| 23 }||| 24 int find_set_2(int v) {||| 25 if (v == parent2[v]) return v;||| 26 return parent2[v] = find_set_2(parent2[v]);||| 27 }||| 28 void make_set_2(int v) {||| 29 parent2[v] = v;||| 30 rank2[v] = 0;||| 31 }||| 32 void union_sets_2(int a, int b) {||| 33 a = find_set_2(a);||| 34 b = find_set_2(b);||| 35 if (a != b) {||| 36 if (rank2[a] < rank2[b]) swap(a, b);||| 37 parent2[b] = a;||| 38 if (rank2[a] == rank2[b]) ++rank2[a];||| 39 }||| 40 }||| 41 int main() {||| 42 ios_base::sync_with_stdio(0);||| 43 cin.tie(0);||| 44 cout.tie(0);||| 45 int m1, m2;||| 46 cin >> n >> m1 >> m2;||| 47 int x, y;||| 48 for (int i = 1; i <= n; i++) {||| 49 make_set_2(i);||| 50 make_set_1(i);||| 51 }||| 52 for (int i = 0; i < m1; i++) {||| 53 cin >> x >> y;||| 54 union_sets_1(x, y);||| 55 }||| 56 for (int i = 0; i < m2; i++) {||| 57 cin >> x >> y;||| 58 ;||| 59 union_sets_2(x, y);||| 60 }||| 61 vector<pair<int, int>> ans;||| 62 for (int i = 1; i <= n; i++)||| 63 for (int j = 1; j <= n; j++) {||| 64 if (find_set_2(i) != find_set_2(j) && find_set_1(i) && find_set_1(j)) {||| 65 union_sets_2(i, j);||| 66 union_sets_1(i, j);||| 67 ans.push_back({i, j});||| 68 }||| 69 }||| 70 cout << ans.size() << ""\n"";||| 71 for (auto el : ans) {||| 72 cout << el.first << "" "" << el.second << ""\n"";||| 73 }||| 74 }||| "	58 
63	153	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e5 + 5, mod = 1e9 + 7;||| 4 void time_leap() {||| 5 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 6 }||| 7 vector<int> par2(1001), par3(1001);||| 8 int findParent(int u, vector<int>& par) {||| 9 if (par[u] == u) return u;||| 10 return par[u] = findParent(par[u], par);||| 11 }||| 12 void join(int a, int b, vector<int>& par) {||| 13 a = findParent(a, par);||| 14 b = findParent(b, par);||| 15 if (a != b) {||| 16 par[a] = b;||| 17 }||| 18 }||| 19 int main() {||| 20 time_leap();||| 21 int n, m1, m2;||| 22 cin >> n >> m1 >> m2;||| 23 iota(((par2).begin()), ((par2).end()), 0);||| 24 iota(((par3).begin()), ((par3).end()), 0);||| 25 vector<pair<int, int>> ans;||| 26 for (int i = 0; i < m1; ++i) {||| 27 int u, v;||| 28 cin >> u >> v;||| 29 join(u, v, par2);||| 30 }||| 31 for (int i = 0; i < m2; ++i) {||| 32 int u, v;||| 33 cin >> u >> v;||| 34 join(u, v, par3);||| 35 }||| 36 for (int i = 1; i <= n; ++i) {||| 37 for (int j = 1; j <= n; ++j) {||| 38 if (findParent(i, par2) != findParent(j, par2) &&||| 39 findParent(i, par3) != findParent(j, par3)) {||| 40 join(i, j, par2);||| 41 join(i, j, par3);||| 42 ans.push_back({i, j});||| 43 }||| 44 }||| 45 }||| 46 cout << ans.size() << '\n';||| 47 for (int i = 0; i < ans.size(); ++i) {||| 48 cout << ans[i].first << "" "" << ans[i].second << '\n';||| 49 }||| 50 return 0;||| 51 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e5 + 5, mod = 1e9 + 7;||| 4 void time_leap() {||| 5 ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);||| 6 }||| 7 vector<int> par2(1001), par3(1001);||| 8 int findParent(int u, vector<int>& par) {||| 9 if (par[u] == u) return u;||| 10 return par[u] = findParent(par[u], par);||| 11 }||| 12 void join(int a, int b, vector<int>& par) {||| 13 a = findParent(a, par);||| 14 b = findParent(b, par);||| 15 if (a != b) {||| 16 par[a] = b;||| 17 }||| 18 }||| 19 int main() {||| 20 time_leap();||| 21 int n, m1, m2;||| 22 cin >> n >> m1 >> m2;||| 23 iota(((par2).begin()), ((par2).end()), 0);||| 24 iota(((par3).begin()), ((par3).end()), 0);||| 25 vector<pair<int, int>> ans;||| 26 for (int i = 0; i < m1; ++i) {||| 27 int u, v;||| 28 cin >> u >> v;||| 29 join(u, v, par2);||| 30 }||| 31 for (int i = 0; i < m2; ++i) {||| 32 int u, v;||| 33 cin >> u >> v;||| 34 join(u, v, par3);||| 35 }||| 36 for (int i = 1; i <= n; ++i) {||| 37 for (int j = 1; j <= n; ++j) {||| 38 if (findParent(i, par2) != findParent(j, par2) &&||| 39 findParent(i, par3) != findParent(j, par2)) {||| 40 join(i, j, par2);||| 41 join(i, j, par3);||| 42 ans.push_back({i, j});||| 43 }||| 44 }||| 45 }||| 46 cout << ans.size() << '\n';||| 47 for (int i = 0; i < ans.size(); ++i) {||| 48 cout << ans[i].first << "" "" << ans[i].second << '\n';||| 49 }||| 50 return 0;||| 51 }||| "	39 findParent(i, par3) != findParent(j, par3)) {
64	83	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100010;||| 4 int n, m1, m2, f[N], f2[N], sum, ansu[N], ansv[N];||| 5 int find(int x) { return f[x] = f[x] == x ? x : find(f[x]); }||| 6 int find2(int x) { return f2[x] = f2[x] == x ? x : find2(f2[x]); }||| 7 int main() {||| 8 scanf(""%d%d%d"", &n, &m1, &m2);||| 9 for (int i = 1; i <= n; i++) f[i] = f2[i] = i;||| 10 for (int i = 1; i <= m1; i++) {||| 11 int u, v;||| 12 scanf(""%d%d"", &u, &v);||| 13 if (find(u) != find(v)) f[find(u)] = find(v);||| 14 }||| 15 for (int i = 1; i <= m2; i++) {||| 16 int u, v;||| 17 scanf(""%d%d"", &u, &v);||| 18 if (find2(u) != find2(v)) f2[find2(u)] = find2(v);||| 19 }||| 20 sum = n - 1 - max(m1, m2);||| 21 printf(""%d\n"", sum);||| 22 for (int i = 2; i <= n; i++)||| 23 if (find(i) != find(1) && find2(i) != find2(1)) {||| 24 printf(""%d %d\n"", 1, i);||| 25 sum--;||| 26 f[find(i)] = find(1);||| 27 f2[find2(i)] = find2(1);||| 28 }||| 29 for (int i = 2, j = 1; sum; i++)||| 30 if (find(i) != find(1)) {||| 31 while (find2(j) == find2(1)) j++;||| 32 printf(""%d %d\n"", i, j);||| 33 sum--;||| 34 f[find(i)] = find(1);||| 35 f2[find2(j)] = find2(1);||| 36 }||| 37 return 0;||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100010;||| 4 int n, m1, m2, f[N], f2[N], sum, ansu[N], ansv[N];||| 5 int find(int x) { return f[x] = f[x] == x ? x : find(f[x]); }||| 6 int find2(int x) { return f2[x] = f2[x] == x ? x : find2(f2[x]); }||| 7 int main() {||| 8 scanf(""%d%d%d"", &n, &m1, &m2);||| 9 for (int i = 1; i <= n; i++) f[i] = f2[i] = i;||| 10 for (int i = 1; i <= m1; i++) {||| 11 int u, v;||| 12 scanf(""%d%d"", &u, &v);||| 13 if (find(u) != find(v)) f[find(u)] = find(v);||| 14 }||| 15 for (int i = 1; i <= m2; i++) {||| 16 int u, v;||| 17 scanf(""%d%d"", &u, &v);||| 18 if (find2(u) != find2(v)) f2[find2(u)] = find2(v);||| 19 }||| 20 sum = n - 1 - max(m1, m2);||| 21 printf(""%d\n"", sum);||| 22 for (int i = 2; i <= n; i++)||| 23 if (find(i) != find(1) && find2(i) != find2(1)) {||| 24 printf(""%d %d\n"", 1, i);||| 25 sum--;||| 26 f[find(i)] = find(1);||| 27 f2[find2(i)] = find2(1);||| 28 }||| 29 for (int i = 2, j = 1; sum; i++)||| 30 if (find(i) != find(1)) {||| 31 while (find(j) == find(1)) j++;||| 32 printf(""%d %d\n"", i, j);||| 33 sum--;||| 34 f[find(i)] = find(1);||| 35 f2[find2(j)] = find2(1);||| 36 }||| 37 return 0;||| 38 }||| "	31 while (find2(j) == find2(1)) j++;
64	73	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int N = 1e5 + 500;||| 5 int n, m1, m2, u, v;||| 6 int sup[3][N];||| 7 vector<pair<int, int> > ans;||| 8 inline long long gcd(long long a, long long b) {||| 9 return b > 0 ? gcd(b, a % b) : a;||| 10 }||| 11 inline long long lcm(long long a, long long b) { return a * b / gcd(a, b); }||| 12 inline long long read() {||| 13 long long ans = 0;||| 14 char c = getchar();||| 15 while (!isdigit(c)) c = getchar();||| 16 while (isdigit(c)) {||| 17 ans = ans * 10 + c - '0';||| 18 c = getchar();||| 19 }||| 20 return ans;||| 21 }||| 22 int find(int x, int num) {||| 23 return sup[num][x] == x ? x : sup[num][x] = find(sup[num][x], num);||| 24 }||| 25 void join(int x, int y, int num) {||| 26 int supx = find(x, num);||| 27 int supy = find(y, num);||| 28 if (supx < supy) sup[num][supy] = supx;||| 29 if (supx > supy) sup[num][supx] = supy;||| 30 }||| 31 void show() {||| 32 cout << ""forest1:"" << endl;||| 33 for (int i = 1; i <= n; i++) cout << i << "" "" << sup[1][i] << ""\n"";||| 34 cout << ""forest2:"" << endl;||| 35 for (int i = 1; i <= n; i++) cout << i << "" "" << sup[2][i] << ""\n"";||| 36 }||| 37 int main() {||| 38 n = read();||| 39 m1 = read();||| 40 m2 = read();||| 41 for (int i = 1; i <= n; i++) sup[1][i] = sup[2][i] = i;||| 42 for (int i = 1; i <= m1; i++) {||| 43 u = read();||| 44 v = read();||| 45 join(u, v, 1);||| 46 }||| 47 for (int i = 1; i <= m2; i++) {||| 48 u = read();||| 49 v = read();||| 50 join(u, v, 2);||| 51 }||| 52 for (int i = 2; i <= n; i++) {||| 53 if (find(i, 1) != 1 && find(i, 2) != 1) {||| 54 join(1, i, 1);||| 55 join(1, i, 2);||| 56 ans.push_back(make_pair(1, i));||| 57 }||| 58 }||| 59 for (int i = 2, j = 2; i <= n; i++) {||| 60 if (find(i, 1) != 1) {||| 61 while (j <= n && find(j, 2) == 1) j++;||| 62 if (j > n) break;||| 63 join(i, 1, 1);||| 64 join(j, 1, 2);||| 65 ans.push_back(make_pair(i, j));||| 66 }||| 67 }||| 68 printf(""%d\n"", ans.size());||| 69 for (int i = 0; i < ans.size(); i++)||| 70 printf(""%d %d\n"", ans[i].first, ans[i].second);||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const int N = 1e5 + 500;||| 5 int n, m1, m2, u, v;||| 6 int sup[3][N];||| 7 vector<pair<int, int> > ans;||| 8 inline long long gcd(long long a, long long b) {||| 9 return b > 0 ? gcd(b, a % b) : a;||| 10 }||| 11 inline long long lcm(long long a, long long b) { return a * b / gcd(a, b); }||| 12 inline long long read() {||| 13 long long ans = 0;||| 14 char c = getchar();||| 15 while (!isdigit(c)) c = getchar();||| 16 while (isdigit(c)) {||| 17 ans = ans * 10 + c - '0';||| 18 c = getchar();||| 19 }||| 20 return ans;||| 21 }||| 22 int find(int x, int num) {||| 23 return sup[num][x] == x ? x : sup[num][x] = find(sup[num][x], num);||| 24 }||| 25 void join(int x, int y, int num) {||| 26 int supx = find(x, num);||| 27 int supy = find(y, num);||| 28 if (supx < supy) sup[num][supy] = supx;||| 29 if (supx > supy) sup[num][supx] = supy;||| 30 }||| 31 void show() {||| 32 cout << ""forest1:"" << endl;||| 33 for (int i = 1; i <= n; i++) cout << i << "" "" << sup[1][i] << ""\n"";||| 34 cout << ""forest2:"" << endl;||| 35 for (int i = 1; i <= n; i++) cout << i << "" "" << sup[2][i] << ""\n"";||| 36 }||| 37 int main() {||| 38 n = read();||| 39 m1 = read();||| 40 m2 = read();||| 41 for (int i = 1; i <= n; i++) sup[1][i] = sup[2][i] = i;||| 42 for (int i = 1; i <= m1; i++) {||| 43 u = read();||| 44 v = read();||| 45 join(u, v, 1);||| 46 }||| 47 for (int i = 1; i <= m2; i++) {||| 48 u = read();||| 49 v = read();||| 50 join(u, v, 2);||| 51 }||| 52 for (int i = 2; i <= n; i++) {||| 53 if (find(i, 1) != 1 && find(i, 2) != 1) {||| 54 join(1, i, 1);||| 55 join(1, i, 2);||| 56 ans.push_back(make_pair(1, i));||| 57 }||| 58 }||| 59 for (int i = 2, j = 2; i <= n; i++) {||| 60 if (find(i, 1) != 1) {||| 61 while (j < n && find(j, 2) == 1) j++;||| 62 if (j == n) break;||| 63 join(i, 1, 1);||| 64 join(j, 1, 2);||| 65 ans.push_back(make_pair(i, j));||| 66 }||| 67 }||| 68 printf(""%d\n"", ans.size());||| 69 for (int i = 0; i < ans.size(); i++)||| 70 printf(""%d %d\n"", ans[i].first, ans[i].second);||| 71 }||| "	61 while (j <= n && find(j, 2) == 1) j++;
64	93	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int parent[2][100002];||| 4 int findParent(int child, int par[]) {||| 5 if (child == par[child]) return child;||| 6 return par[child] = findParent(par[child], par);||| 7 }||| 8 void merge(int u, int v, int par[]) {||| 9 int x = findParent(u, par);||| 10 int y = findParent(v, par);||| 11 if (x == y) return;||| 12 par[y] = x;||| 13 }||| 14 bool cycleCheck(int u, int v, int par[]) {||| 15 if (findParent(u, par) == findParent(v, par)) return true;||| 16 return false;||| 17 }||| 18 void Set2Vector(set<int>& tmpset, vector<int>& tmpv) {||| 19 for (auto k : tmpset) tmpv.push_back(k);||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 cin.tie(nullptr);||| 24 int n, m[2];||| 25 cin >> n >> m[0] >> m[1];||| 26 for (int i = 0; i <= n; ++i) parent[0][i] = parent[1][i] = i;||| 27 for (int i = 0; i < 2; ++i) {||| 28 for (int j = 0; j < m[i]; ++j) {||| 29 int x, y;||| 30 cin >> x >> y;||| 31 merge(x, y, parent[i]);||| 32 }||| 33 }||| 34 for (int i = 0; i < 2; ++i) {||| 35 for (int j = 1; j <= n; ++j) findParent(j, parent[i]);||| 36 }||| 37 vector<pair<int, int>> ans;||| 38 for (int i = 1; i <= n; ++i) {||| 39 if (cycleCheck(1, i, parent[0]) || cycleCheck(1, i, parent[1])) continue;||| 40 ans.push_back({1, i});||| 41 merge(1, i, parent[0]);||| 42 merge(1, i, parent[1]);||| 43 }||| 44 vector<int> A;||| 45 vector<int> B;||| 46 for (int i = 1; i <= n; i++) {||| 47 if (cycleCheck(i, 1, parent[0]) && !cycleCheck(i, 1, parent[1]) &&||| 48 findParent(i, parent[1]) == i)||| 49 A.push_back(i);||| 50 if (cycleCheck(i, 1, parent[1]) && !cycleCheck(i, 1, parent[0]) &&||| 51 findParent(i, parent[0]) == i)||| 52 B.push_back(i);||| 53 }||| 54 int mini = std::min(A.size(), B.size());||| 55 cout << (ans.size() + mini) << '\n';||| 56 if (!ans.empty()) {||| 57 for (auto x : ans) cout << x.first << ' ' << x.second << '\n';||| 58 }||| 59 for (int i = 0; i < mini; ++i) cout << A[i] << ' ' << B[i] << '\n';||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int parent[2][100002];||| 4 int findParent(int child, int par[]) {||| 5 if (child == par[child]) return child;||| 6 return par[child] = findParent(par[child], par);||| 7 }||| 8 void merge(int u, int v, int par[]) {||| 9 int x = findParent(u, par);||| 10 int y = findParent(v, par);||| 11 if (x == y) return;||| 12 par[y] = x;||| 13 }||| 14 bool cycleCheck(int u, int v, int par[]) {||| 15 if (findParent(u, par) == findParent(v, par)) return true;||| 16 return false;||| 17 }||| 18 void Set2Vector(set<int>& tmpset, vector<int>& tmpv) {||| 19 for (auto k : tmpset) tmpv.push_back(k);||| 20 }||| 21 int main() {||| 22 ios::sync_with_stdio(false);||| 23 cin.tie(nullptr);||| 24 int n, m[2];||| 25 cin >> n >> m[0] >> m[1];||| 26 for (int i = 0; i <= n; ++i) parent[0][i] = parent[1][i] = i;||| 27 for (int i = 0; i < 2; ++i) {||| 28 for (int j = 0; j < m[i]; ++j) {||| 29 int x, y;||| 30 cin >> x >> y;||| 31 merge(x, y, parent[i]);||| 32 }||| 33 }||| 34 for (int i = 0; i < 2; ++i) {||| 35 for (int j = 1; j <= n; ++j) findParent(j, parent[i]);||| 36 }||| 37 vector<pair<int, int>> ans;||| 38 for (int i = 1; i <= n; ++i) {||| 39 if (cycleCheck(1, i, parent[0]) || cycleCheck(1, i, parent[1])) continue;||| 40 ans.push_back({1, i});||| 41 merge(1, i, parent[0]);||| 42 merge(1, i, parent[1]);||| 43 }||| 44 vector<int> A;||| 45 vector<int> B;||| 46 for (int i = 1; i <= n; i++) {||| 47 if (cycleCheck(i, 1, parent[0]) && !cycleCheck(i, 1, parent[1]) &&||| 48 findParent(i, parent[1]) == i)||| 49 A.push_back(i);||| 50 if (cycleCheck(i, 1, parent[1]) && !cycleCheck(i, 1, parent[0]) &&||| 51 findParent(i, parent[0]) == i)||| 52 B.push_back(i);||| 53 }||| 54 int mini = std::min(A.size(), B.size());||| 55 cout << (ans.size() + mini) << '\n';||| 56 if (!ans.empty()) {||| 57 for (auto x : ans) cout << x.first << ' ' << x.second << '\n';||| 58 for (int i = 0; i < mini; ++i) cout << A[i] << ' ' << B[i] << '\n';||| 59 }||| 60 }||| 	58 
65	81	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 const int maxn = 1e5 + 5;||| 5 int cnt = 0, vis[maxn], prime[maxn], mu[maxn];||| 6 int f[55][maxn], l[55], r[55], l1[55], r1[55];||| 7 void init(int n) {||| 8 vis[1] = mu[1] = 1;||| 9 for (int i = (2); i <= (n); i++) {||| 10 if (!vis[i]) prime[++cnt] = i, mu[i] = -1;||| 11 for (int j = (1); j <= (cnt); j++) {||| 12 if (i * prime[j] > n) break;||| 13 vis[i * prime[j]] = 1;||| 14 if (i % prime[j] == 0) {||| 15 mu[i * prime[j]] = 0;||| 16 break;||| 17 }||| 18 mu[i * prime[j]] = -mu[i];||| 19 }||| 20 }||| 21 }||| 22 int n, m;||| 23 int calc(int x) {||| 24 long long sum = 0;||| 25 for (int i = (1); i <= (n); i++) {||| 26 l[i] = (l1[i] - 1) / x + 1;||| 27 r[i] = r1[i] / x;||| 28 sum += l[i];||| 29 if (i == 1)||| 30 for (int j = (l[i]); j <= (r[i]); j++) f[1][j] = 1;||| 31 else {||| 32 for (int j = (sum); j <= (m / x); j++) {||| 33 int L = max(1, j - r[i]), R = j - l[i];||| 34 f[i][j] = ((f[i - 1][R] - f[i - 1][L - 1]) % mod + mod) % mod;||| 35 }||| 36 }||| 37 for (int j = (1); j <= (m / x); j++) (f[i][j] += f[i][j - 1]) %= mod;||| 38 }||| 39 return f[n][m / x];||| 40 }||| 41 int main() {||| 42 init(1e5);||| 43 scanf(""%d"", &n);||| 44 scanf(""%d"", &m);||| 45 int mnr = 1e9;||| 46 for (int i = (1); i <= (n); i++) {||| 47 scanf(""%d"", &l1[i]), scanf(""%d"", &r1[i]);||| 48 mnr = min(mnr, r1[i]);||| 49 }||| 50 long long ans = 0;||| 51 for (int x = (1); x <= (mnr); x++) {||| 52 ans = ((ans + calc(x) * mu[x]) % mod + mod) % mod;||| 53 }||| 54 cout << ans;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 const int maxn = 1e5 + 5;||| 5 int cnt = 0, vis[maxn], prime[maxn], mu[maxn];||| 6 int f[55][maxn], l[55], r[55], l1[55], r1[55];||| 7 void init(int n) {||| 8 vis[1] = mu[1] = 1;||| 9 for (int i = (2); i <= (n); i++) {||| 10 if (!vis[i]) prime[++cnt] = i, mu[i] = -1;||| 11 for (int j = (1); j <= (cnt); j++) {||| 12 if (i * prime[j] > n) break;||| 13 vis[i * prime[j]] = 1;||| 14 if (i % prime[j] == 0) {||| 15 mu[i * prime[j]] = 0;||| 16 break;||| 17 }||| 18 mu[i * prime[j]] = -mu[i];||| 19 }||| 20 }||| 21 }||| 22 int n, m;||| 23 int calc(int x) {||| 24 long long sum = 0;||| 25 for (int i = (1); i <= (n); i++) {||| 26 l[i] = (l1[i] - 1) / x + 1;||| 27 r[i] = r1[i] / x;||| 28 sum += l[i];||| 29 if (i == 1)||| 30 for (int j = (l[i]); j <= (r[i]); j++) f[1][j] = 1;||| 31 else {||| 32 for (int j = (sum); j <= (m / x); j++) {||| 33 int L = max(1, j - r[i]), R = j - l[i];||| 34 f[i][j] = ((f[i - 1][R] - f[i - 1][L - 1]) % mod + mod) % mod;||| 35 }||| 36 }||| 37 for (int j = (1); j <= (m / x); j++) (f[i][j] += f[i][j - 1]) % mod;||| 38 }||| 39 return f[n][m / x];||| 40 }||| 41 int main() {||| 42 init(1e5);||| 43 scanf(""%d"", &n);||| 44 scanf(""%d"", &m);||| 45 int mnr = 1e9;||| 46 for (int i = (1); i <= (n); i++) {||| 47 scanf(""%d"", &l1[i]), scanf(""%d"", &r1[i]);||| 48 mnr = min(mnr, r1[i]);||| 49 }||| 50 long long ans = 0;||| 51 for (int x = (1); x <= (mnr); x++) {||| 52 ans = ((ans + calc(x) * mu[x]) % mod + mod) % mod;||| 53 }||| 54 cout << ans;||| 55 }||| "	37 for (int j = (1); j <= (m / x); j++) (f[i][j] += f[i][j - 1]) %= mod;
65	63	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF_LL = 1e18;||| 4 const int INF = 1e9 + 100;||| 5 const int MOD = 998244353;||| 6 const long double EPS = 1e-10;||| 7 const int BLOCK = 550;||| 8 const int dx[4] = {-1, 0, 1, 0};||| 9 const int dy[4] = {0, 1, 0, -1};||| 10 mt19937 rnd(chrono::system_clock::now().time_since_epoch().count());||| 11 void open_file() {}||| 12 const int maxN = 6e5 + 100;||| 13 void sol() {||| 14 int n, m;||| 15 cin >> n >> m;||| 16 vector<int> L(n), R(n);||| 17 for (int i = 0; i < n; i++) cin >> L[i] >> R[i];||| 18 auto calc = [&](int x) {||| 19 for (int i = 0; i < n; i++) {||| 20 int a = (L[i] + x - 1) / x;||| 21 int b = R[i] / x;||| 22 if (a > b || b == 0) return 0;||| 23 }||| 24 int nm = m / x;||| 25 vector<int> dp(nm + 1, 0);||| 26 dp[0] = 1;||| 27 for (int i = 0; i < n; i++) {||| 28 int a = (L[i] + x - 1) / x;||| 29 int b = R[i] / x;||| 30 if (a > b) return 0;||| 31 vector<int> n_dp(nm + 1, 0);||| 32 for (int j = 0; j + a <= nm; j++) {||| 33 int na = j + a;||| 34 int nb = j + b;||| 35 n_dp[na] = (n_dp[na] + dp[j]) % MOD;||| 36 if (nb < nm) n_dp[nb + 1] = (n_dp[nb + 1] - dp[j] + MOD) % MOD;||| 37 }||| 38 swap(n_dp, dp);||| 39 for (int i = 1; i <= nm; i++) dp[i] = (dp[i - 1] + dp[i]) % MOD;||| 40 if (*max_element(dp.begin(), dp.end()) == 0) return 0;||| 41 }||| 42 int ans = 0;||| 43 for (int i = 0; i <= nm; i++) ans = (ans + dp[i]) % MOD;||| 44 return ans;||| 45 };||| 46 vector<int> F(m + 1);||| 47 for (int i = 1; i <= m; i++) F[i] = calc(i);||| 48 for (int i = m; i >= 1; i--) {||| 49 for (int j = i + i; j <= m; j += i) F[i] = (F[i] - F[j] + MOD) % MOD;||| 50 }||| 51 cout << F[1];||| 52 }||| 53 void solve() {||| 54 int T = 1;||| 55 int TestCase = 0;||| 56 while (T--) {||| 57 TestCase += 1;||| 58 sol();||| 59 }||| 60 }||| 61 int main(int argc, char *argv[]) {||| 62 ios_base::sync_with_stdio(0);||| 63 cin.tie(nullptr);||| 64 cout.tie(nullptr);||| 65 open_file();||| 66 solve();||| 67 return 0;||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long INF_LL = 1e18;||| 4 const int INF = 1e9 + 100;||| 5 const int MOD = 1e9 + 7;||| 6 const long double EPS = 1e-10;||| 7 const int BLOCK = 550;||| 8 const int dx[4] = {-1, 0, 1, 0};||| 9 const int dy[4] = {0, 1, 0, -1};||| 10 mt19937 rnd(chrono::system_clock::now().time_since_epoch().count());||| 11 void open_file() {}||| 12 const int maxN = 6e5 + 100;||| 13 void sol() {||| 14 int n, m;||| 15 cin >> n >> m;||| 16 vector<int> L(n), R(n);||| 17 for (int i = 0; i < n; i++) cin >> L[i] >> R[i];||| 18 auto calc = [&](int x) {||| 19 for (int i = 0; i < n; i++) {||| 20 int a = (L[i] + x - 1) / x;||| 21 int b = R[i] / x;||| 22 if (a > b || b == 0) return 0;||| 23 }||| 24 int nm = m / x;||| 25 vector<int> dp(nm + 1, 0);||| 26 dp[0] = 1;||| 27 for (int i = 0; i < n; i++) {||| 28 int a = (L[i] + x - 1) / x;||| 29 int b = R[i] / x;||| 30 if (a > b) return 0;||| 31 vector<int> n_dp(nm + 1, 0);||| 32 for (int j = 0; j + a <= nm; j++) {||| 33 int na = j + a;||| 34 int nb = j + b;||| 35 n_dp[na] = (n_dp[na] + dp[j]) % MOD;||| 36 if (nb < nm) n_dp[nb + 1] = (n_dp[nb + 1] - dp[j] + MOD) % MOD;||| 37 }||| 38 swap(n_dp, dp);||| 39 for (int i = 1; i <= nm; i++) dp[i] = (dp[i - 1] + dp[i]) % MOD;||| 40 if (*max_element(dp.begin(), dp.end()) == 0) return 0;||| 41 }||| 42 int ans = 0;||| 43 for (int i = 0; i <= nm; i++) ans = (ans + dp[i]) % MOD;||| 44 return ans;||| 45 };||| 46 vector<int> F(m + 1);||| 47 for (int i = 1; i <= m; i++) F[i] = calc(i);||| 48 for (int i = m; i >= 1; i--) {||| 49 for (int j = i + i; j <= m; j += i) F[i] = (F[i] - F[j] + MOD) % MOD;||| 50 }||| 51 cout << F[1];||| 52 }||| 53 void solve() {||| 54 int T = 1;||| 55 int TestCase = 0;||| 56 while (T--) {||| 57 TestCase += 1;||| 58 sol();||| 59 }||| 60 }||| 61 int main(int argc, char *argv[]) {||| 62 ios_base::sync_with_stdio(0);||| 63 cin.tie(nullptr);||| 64 cout.tie(nullptr);||| 65 open_file();||| 66 solve();||| 67 return 0;||| 68 }||| 	5 const int MOD = 998244353;
65	68	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 pair<int, int> a[55];||| 5 long long dp[55][100005], res[100005] = {0}, s[100005];||| 6 inline void solve(int x) {||| 7 int g = m / x;||| 8 pair<int, int> b[55];||| 9 for (int i = 1; i <= n; i++) {||| 10 if (a[i].first % x == 0)||| 11 b[i].first = a[i].first / x;||| 12 else||| 13 b[i].first = a[i].first / x + 1;||| 14 b[i].second = a[i].second / x;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 for (int j = 1; j <= g; j++) dp[i][j] = 0;||| 18 }||| 19 for (int i = 1; i <= g; i++) s[i] = 0;||| 20 for (int i = b[1].first; i <= b[1].second; i++) dp[1][i] = 1;||| 21 for (int i = 1; i <= n; i++) {||| 22 s[0] = 0;||| 23 for (int k = 1; k <= g; k++) {||| 24 int r = min(b[i].second, k), l = b[i].first;||| 25 if (r < l) continue;||| 26 dp[i][k] = (dp[i][k] + s[k - l] - s[k - r - 1]) % (long long)(998244353);||| 27 }||| 28 for (int k = 1; k <= g; k++) {||| 29 s[k] = (s[k - 1] + dp[i][k]) % (long long)(998244353);||| 30 }||| 31 }||| 32 res[x] = s[g];||| 33 }||| 34 int main() {||| 35 ios_base::sync_with_stdio(false), cin.tie(NULL);||| 36 cin >> n >> m;||| 37 for (int i = 1; i <= n; i++) {||| 38 int l, r;||| 39 cin >> l >> r;||| 40 a[i] = {l, r};||| 41 }||| 42 for (int i = 1; i <= m; i++) {||| 43 solve(i);||| 44 }||| 45 for (int i = m; i >= 1; i--) {||| 46 for (int j = 2 * i; j <= m; j += i) {||| 47 res[i] -= res[j];||| 48 res[i] = (res[i] + (long long)(998244353)) % (long long)(998244353);||| 49 }||| 50 }||| 51 cout << res[1];||| 52 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 pair<int, int> a[55];||| 5 long long dp[55][100005], res[100005] = {0}, s[100005];||| 6 inline void solve(int x) {||| 7 int g = m / x;||| 8 pair<int, int> b[55];||| 9 for (int i = 1; i <= n; i++) {||| 10 if (a[i].first % x == 0)||| 11 b[i].first = a[i].first / x;||| 12 else||| 13 b[i].first = a[i].first / x + 1;||| 14 b[i].second = a[i].second / x;||| 15 }||| 16 for (int i = 1; i <= n; i++) {||| 17 for (int j = 1; j <= g; j++) dp[i][j] = 0;||| 18 }||| 19 for (int i = 1; i <= g; i++) s[i] = 0;||| 20 for (int i = a[1].first; i <= a[1].second; i++) dp[1][i] = 1;||| 21 for (int i = 1; i <= n; i++) {||| 22 s[0] = 0;||| 23 for (int k = 1; k <= g; k++) {||| 24 int r = min(b[i].second, k), l = b[i].first;||| 25 if (r < l) continue;||| 26 dp[i][k] = (dp[i][k] + s[k - l] - s[k - r - 1]) % (long long)(998244353);||| 27 }||| 28 for (int k = 1; k <= g; k++) {||| 29 s[k] = (s[k - 1] + dp[i][k]) % (long long)(998244353);||| 30 }||| 31 }||| 32 res[x] = s[g];||| 33 }||| 34 int main() {||| 35 ios_base::sync_with_stdio(false), cin.tie(NULL);||| 36 cin >> n >> m;||| 37 for (int i = 1; i <= n; i++) {||| 38 int l, r;||| 39 cin >> l >> r;||| 40 a[i] = {l, r};||| 41 }||| 42 for (int i = 1; i <= m; i++) {||| 43 solve(i);||| 44 }||| 45 for (int i = m; i >= 1; i--) {||| 46 for (int j = 2 * i; j <= m; j += i) {||| 47 res[i] -= res[j];||| 48 res[i] = (res[i] + (long long)(998244353)) % (long long)(998244353);||| 49 }||| 50 }||| 51 cout << res[1];||| 52 }||| 	20 for (int i = b[1].first; i <= b[1].second; i++) dp[1][i] = 1;
65	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long MOD = 998244353;||| 4 int main() {||| 5 int N, M, gmax = -1;||| 6 cin >> N >> M;||| 7 vector<pair<int, int>> l(N);||| 8 for (int i = 0; i < N; ++i) {||| 9 cin >> l[i].first >> l[i].second;||| 10 gmax = max(gmax, l[i].second);||| 11 }||| 12 vector<bool> is_prime(gmax + 1, true);||| 13 is_prime[1] = false;||| 14 vector<int> mu(gmax + 1, 1);||| 15 vector<int> prime;||| 16 for (int i = 2; i <= gmax; ++i) {||| 17 if (is_prime[i]) {||| 18 prime.push_back(i);||| 19 mu[i] = -1;||| 20 }||| 21 for (auto p : prime) {||| 22 if (i * p > gmax) break;||| 23 is_prime[i * p] = false;||| 24 if (i % p == 0) {||| 25 mu[i * p] = 0;||| 26 break;||| 27 } else {||| 28 mu[i * p] = -mu[i];||| 29 }||| 30 }||| 31 }||| 32 unsigned long long ans = 0;||| 33 for (int i = 1; i <= gmax; ++i) {||| 34 if (mu[i] == 0) continue;||| 35 vector<pair<int, int>> rl(N);||| 36 bool flag = true;||| 37 for (int j = 0; j < N; ++j) {||| 38 rl[j] = {(l[j].first + i - 1) / i, l[j].second / i};||| 39 if (rl[j].first > rl[j].second) {||| 40 flag = false;||| 41 break;||| 42 }||| 43 }||| 44 if (!flag) continue;||| 45 int rM = M / i;||| 46 vector<unsigned long long> ps(rM + 1, 1);||| 47 for (int j = 0; j < N; ++j) {||| 48 vector<unsigned long long> ps2(rM + 1, 0);||| 49 for (int k = rl[j].first; k <= rM; ++k) {||| 50 unsigned long long t =||| 51 (ps[k - rl[j].first] + MOD -||| 52 (k - rl[j].second > 0 ? ps[k - rl[j].second - 1] : 0)) %||| 53 MOD;||| 54 ps2[k] = (ps2[k - 1] + t) % MOD;||| 55 }||| 56 swap(ps, ps2);||| 57 }||| 58 if (mu[i] == 1) {||| 59 (ans += ps[rM]) %= MOD;||| 60 } else {||| 61 (ans += MOD - ps[rM]) %= MOD;||| 62 }||| 63 }||| 64 printf(""%llu\n"", ans);||| 65 return 0;||| 66 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 unsigned long long MOD = 998244353;||| 4 int main() {||| 5 int N, M, gmax = -1;||| 6 cin >> N >> M;||| 7 vector<pair<int, int>> l(N);||| 8 for (int i = 0; i < N; ++i) {||| 9 cin >> l[i].first >> l[i].second;||| 10 gmax = max(gmax, l[i].second);||| 11 }||| 12 vector<bool> is_prime(gmax + 1, true);||| 13 is_prime[1] = false;||| 14 vector<int> mu(gmax + 1, 1);||| 15 vector<int> prime;||| 16 for (int i = 2; i <= gmax; ++i) {||| 17 if (is_prime[i]) {||| 18 prime.push_back(i);||| 19 mu[i] = -1;||| 20 }||| 21 for (auto p : prime) {||| 22 if (i * p > gmax) break;||| 23 is_prime[i * p] = false;||| 24 if (i % p == 0) {||| 25 mu[i * p] = 0;||| 26 break;||| 27 } else {||| 28 mu[i * p] = !mu[i];||| 29 }||| 30 }||| 31 }||| 32 unsigned long long ans = 0;||| 33 for (int i = 1; i <= gmax; ++i) {||| 34 if (mu[i] == 0) continue;||| 35 vector<pair<int, int>> rl(N);||| 36 bool flag = true;||| 37 for (int j = 0; j < N; ++j) {||| 38 rl[j] = {(l[j].first + i - 1) / i, l[j].second / i};||| 39 if (rl[j].first > rl[j].second) {||| 40 flag = false;||| 41 break;||| 42 }||| 43 }||| 44 if (!flag) continue;||| 45 int rM = M / i;||| 46 vector<unsigned long long> ps(rM + 1, 1);||| 47 for (int j = 0; j < N; ++j) {||| 48 vector<unsigned long long> ps2(rM + 1, 0);||| 49 for (int k = rl[j].first; k <= rM; ++k) {||| 50 unsigned long long t =||| 51 (ps[k - rl[j].first] + MOD -||| 52 (k - rl[j].second > 0 ? ps[k - rl[j].second - 1] : 0)) %||| 53 MOD;||| 54 ps2[k] = (ps2[k - 1] + t) % MOD;||| 55 }||| 56 swap(ps, ps2);||| 57 }||| 58 if (mu[i] == 1) {||| 59 (ans += ps[rM]) %= MOD;||| 60 } else {||| 61 (ans += MOD - ps[rM]) %= MOD;||| 62 }||| 63 }||| 64 printf(""%llu\n"", ans);||| 65 return 0;||| 66 }||| "	28 mu[i * p] = -mu[i];
66	154	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 vector<int> temp;||| 10 int count = 0;||| 11 int num = 1;||| 12 while (true) {||| 13 if (count == k) break;||| 14 if (num % 10 == 3 || num % 3 == 0)||| 15 num++;||| 16 else {||| 17 temp.push_back(num);||| 18 count++;||| 19 num++;||| 20 }||| 21 }||| 22 cout << temp[temp.size() - 1] << endl;||| 23 }||| 24 return 0;||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 vector<int> temp;||| 10 int count = 0;||| 11 int num = 1;||| 12 while (true) {||| 13 if (count == k) break;||| 14 if (num % 10 == 3 || num / 3 == 0)||| 15 num++;||| 16 else {||| 17 temp.push_back(num);||| 18 count++;||| 19 num++;||| 20 }||| 21 }||| 22 cout << temp[temp.size() - 1] << endl;||| 23 }||| 24 return 0;||| 25 }||| 	14 if (num % 10 == 3 || num % 3 == 0)
66	258	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool checkNum(int number) {||| 4 if (number % 10 == 3 || number % 3 == 0) return false;||| 5 return true;||| 6 }||| 7 void solve() {||| 8 int k, count = 0, number = 1;||| 9 cin >> k;||| 10 while (count < k) {||| 11 if (checkNum(number)) count++;||| 12 number++;||| 13 }||| 14 cout << number - 1 << endl;||| 15 }||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 solve();||| 21 }||| 22 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool checkNum(int number) {||| 4 if (number % 10 == 3 || number % 3 == 0) return false;||| 5 return true;||| 6 }||| 7 void solve() {||| 8 int k, count = 0, number = 1;||| 9 cin >> k;||| 10 while (count < k) {||| 11 if (checkNum(number)) count++;||| 12 number++;||| 13 }||| 14 cout << number - 1 << endl;||| 15 }||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (--t) {||| 20 solve();||| 21 }||| 22 }||| 	19 while (t--) {
66	50	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int a[1000];||| 5 int d = 1;||| 6 int t;||| 7 cin >> t;||| 8 for (int i = 1; i <= 1666; i++) {||| 9 if (i % 3 == 0 || i % 10 == 3) {||| 10 continue;||| 11 }||| 12 a[d] = i;||| 13 d++;||| 14 }||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 cout << a[n] << endl;||| 19 }||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int a[1000];||| 5 int d = 1;||| 6 int t;||| 7 cin >> t;||| 8 for (int i = 1; i < 1666; i++) {||| 9 if (i % 3 == 0 || i % 10 == 3) {||| 10 continue;||| 11 }||| 12 a[d] = i;||| 13 d++;||| 14 }||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 cout << a[n] << endl;||| 19 }||| 20 }||| 	8 for (int i = 1; i <= 1666; i++) {
66	130	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 vector<int> v;||| 8 for (int i = 1; i < 2000; ++i) {||| 9 if (i % 3 == 0 or i % 10 == 3) {||| 10 continue;||| 11 } else||| 12 v.push_back(i);||| 13 }||| 14 int t;||| 15 cin >> t;||| 16 while (t--) {||| 17 int n;||| 18 cin >> n;||| 19 cout << v[n - 1] << endl;||| 20 }||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 vector<int> v;||| 8 for (int i = 1; i < 2000; ++i) {||| 9 if (i % 3 == 0 or i % 10 == 0) {||| 10 continue;||| 11 } else||| 12 v.push_back(i);||| 13 }||| 14 int t;||| 15 cin >> t;||| 16 while (t--) {||| 17 int n;||| 18 cin >> n;||| 19 cout << v[n - 1] << endl;||| 20 }||| 21 }||| 	9 if (i % 3 == 0 or i % 10 == 3) {
66	215	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 int count = 1;||| 10 if (k == 1)||| 11 cout << ""1"" << endl;||| 12 else {||| 13 for (int i = 0; i < k - 1; i++) {||| 14 if ((count + 1) % 3 == 0 || (count + 1) % 10 == 3) {||| 15 count += 2;||| 16 while (count % 3 == 0 or count % 10 == 3) count++;||| 17 } else||| 18 count++;||| 19 }||| 20 cout << count << endl;||| 21 }||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 int count = 1;||| 10 if (k == 1)||| 11 cout << ""1"" << endl;||| 12 else {||| 13 for (int i = 0; i < k - 1; i++) {||| 14 if ((count + 1) % 3 == 0 || (count + 1) % 10 == 3) {||| 15 count += 2;||| 16 while (count % 3 == 0 or count % 10 == 3) count++;||| 17 } else||| 18 count++;||| 19 }||| 20 }||| 21 cout << count << endl;||| 22 }||| 23 return 0;||| 24 }||| "	20 cout << count << endl;
66	5	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 ;||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int n;||| 13 cin >> n;||| 14 for (int i = 1; i < 1e9; ++i) {||| 15 if (i % 3 == 0 || i % 10 == 3) continue;||| 16 if (--n == 0) {||| 17 cout << i << endl;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 using namespace std;||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 ;||| 9 int t;||| 10 cin >> t;||| 11 while (t--) {||| 12 int n;||| 13 cin >> n;||| 14 for (int i = 1; i < 1e9; ++i) {||| 15 if (i % 3 == 0 && i % 10 == 3) continue;||| 16 if (--n == 0) {||| 17 cout << i << endl;||| 18 break;||| 19 }||| 20 }||| 21 }||| 22 return 0;||| 23 }||| "	15 if (i % 3 == 0 || i % 10 == 3) continue;
66	97	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int i = 0, count = 0;||| 10 while (count < n) {||| 11 i++;||| 12 if (i % 3 != 0 && i % 10 != 3) {||| 13 count++;||| 14 }||| 15 }||| 16 cout << i << ""\n"";||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 int i = 0, count = 0;||| 10 while (count <= n) {||| 11 i++;||| 12 if (i % 3 != 0 || i % 10 != 3) {||| 13 count++;||| 14 }||| 15 }||| 16 cout << i << ""\n"";||| 17 }||| 18 return 0;||| 19 }||| "	10 while (count < n) {
66	298	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 vector<int> a;||| 7 for (int i = 1; i <= 10000; i++) {||| 8 if (i % 10 != 3 && i % 3 != 0) {||| 9 a.push_back(i);||| 10 }||| 11 }||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 int n;||| 16 cin >> n;||| 17 cout << a[n - 1] << endl;||| 18 }||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 vector<int> a;||| 7 for (int i = 1; i <= 10000; i++) {||| 8 if (i % 10 != 0 && i % 3 != 0) {||| 9 a.push_back(i);||| 10 }||| 11 }||| 12 int t;||| 13 cin >> t;||| 14 while (t--) {||| 15 int n;||| 16 cin >> n;||| 17 cout << a[n - 1] << endl;||| 18 }||| 19 }||| 	8 if (i % 10 != 3 && i % 3 != 0) {
66	297	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, k[100], a[1667];||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 cin >> k[i];||| 8 cout << endl;||| 9 }||| 10 for (int i = 1, j = 1; j <= 1666; j++) {||| 11 if ((j % 3) != 0 && (j % 10) != 3) {||| 12 a[i] = j;||| 13 i++;||| 14 }||| 15 }||| 16 for (int i = 0; i < t; i++) {||| 17 cout << a[k[i]] << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, k[10], a[1667];||| 5 cin >> t;||| 6 for (int i = 0; i < t; i++) {||| 7 cin >> k[i];||| 8 cout << endl;||| 9 }||| 10 for (int i = 1, j = 1; j <= 1666; j++) {||| 11 if ((j % 3) != 0 && (j % 10) != 3) {||| 12 a[i] = j;||| 13 i++;||| 14 }||| 15 }||| 16 for (int i = 0; i < t; i++) {||| 17 cout << a[k[i]] << endl;||| 18 }||| 19 return 0;||| 20 }||| 	4 int t, k[100], a[1667];
66	162	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 int res = 0, a = 1, j = 0;||| 10 while (j < k) {||| 11 if (a % 3 != 0 && a % 10 != 3) {||| 12 res = a;||| 13 j++;||| 14 }||| 15 a++;||| 16 }||| 17 cout << res << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 int res = 0, a = 1, j = 0;||| 10 while (j < k) {||| 11 if (a % 3 != 0 && a % 10 != 0) {||| 12 res = a;||| 13 j++;||| 14 }||| 15 a++;||| 16 }||| 17 cout << res << endl;||| 18 }||| 19 return 0;||| 20 }||| 	11 if (a % 3 != 0 && a % 10 != 3) {
66	262	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> jok;||| 4 int main() {||| 5 int t, most, a;||| 6 cin >> t;||| 7 for (int i = 0; i < t; ++i) {||| 8 cin >> a;||| 9 if (a <= jok.size())||| 10 cout << jok[a - 1] << endl;||| 11 else {||| 12 if (jok.size() == 0)||| 13 most = 1;||| 14 else||| 15 most = jok[jok.size() - 1] + 1;||| 16 while (jok.size() < a) {||| 17 if (most % 3 != 0 && most % 10 != 3) jok.push_back(most);||| 18 most++;||| 19 }||| 20 cout << jok[a - 1] << endl;||| 21 }||| 22 }||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> jok;||| 4 int main() {||| 5 int t, most, a;||| 6 cin >> t;||| 7 for (int i = 0; i < t; ++i) {||| 8 cin >> a;||| 9 if (a <= jok.size())||| 10 cout << jok[a - 1] << endl;||| 11 else {||| 12 if (jok.size() == 0)||| 13 most = 1;||| 14 else||| 15 most = jok[jok.size() - 1] + 1;||| 16 while (jok.size() < a) {||| 17 if (most % 3 != 0 && most % 10 != 0) jok.push_back(most);||| 18 most++;||| 19 }||| 20 cout << jok[a - 1] << endl;||| 21 }||| 22 }||| 23 return 0;||| 24 }||| 	17 if (most % 3 != 0 && most % 10 != 3) jok.push_back(most);
67	164	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t > 0) {||| 7 int a, b, c, d;||| 8 cin >> a >> b >> c;||| 9 int maxi = max(a, max(b, c));||| 10 int dif = abs(a - b);||| 11 if (maxi <= dif * 2) {||| 12 d = c - dif;||| 13 if (d <= 0) {||| 14 d = dif + c;||| 15 }||| 16 } else {||| 17 d = -1;||| 18 }||| 19 cout << d << endl;||| 20 t--;||| 21 }||| 22 return 0;||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t > 0) {||| 7 int a, b, c, d;||| 8 cin >> a >> b >> c;||| 9 int maxi = max(a, max(b, c));||| 10 int dif = abs(a - b);||| 11 if (maxi < dif * 2) {||| 12 d = c - dif;||| 13 if (d <= 0) {||| 14 d = dif + c;||| 15 }||| 16 } else {||| 17 d = -1;||| 18 }||| 19 cout << d << endl;||| 20 t--;||| 21 }||| 22 return 0;||| 23 }||| 	11 if (maxi <= dif * 2) {
67	101	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long t, a, b, c;||| 5 for (cin >> t; t--;) {||| 6 cin >> a >> b >> c;||| 7 int n = abs(a - b);||| 8 int a1 = 1;||| 9 int b1 = n + 1;||| 10 n = n << 1;||| 11 if (a > n || b > n || c > n) {||| 12 cout << ""-1"" << endl;||| 13 continue;||| 14 }||| 15 if (a > b) swap(a, b);||| 16 if (a - a1 != b - b1) {||| 17 cout << ""-1"" << endl;||| 18 continue;||| 19 }||| 20 if (c == 1)||| 21 cout << b1 << endl;||| 22 else if (c == b1)||| 23 cout << 1 << endl;||| 24 else if (c > b1) {||| 25 cout << 1 + c - b1 << endl;||| 26 } else {||| 27 cout << b1 + c - 1 << endl;||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long t, a, b, c;||| 5 for (cin >> t; t--;) {||| 6 cin >> a >> b >> c;||| 7 int n = abs(a - b);||| 8 int a1 = 1;||| 9 int b1 = n + 1;||| 10 n = n << 1;||| 11 if (a > n || b > n || c > n) {||| 12 cout << ""-1"" << endl;||| 13 continue;||| 14 }||| 15 if (a > b) swap(a, b);||| 16 if (a - a1 != b - b1) {||| 17 cout << ""-1"" << endl;||| 18 continue;||| 19 }||| 20 if (c == 1)||| 21 cout << b1 << endl;||| 22 else if (c == b1)||| 23 cout << 1 << endl;||| 24 else if (c > b1) {||| 25 cout << 1 + b1 - c << endl;||| 26 } else {||| 27 cout << b1 + c - 1 << endl;||| 28 }||| 29 }||| 30 return 0;||| 31 }||| "	25 cout << 1 + c - b1 << endl;
67	86	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, a, b, c;||| 4 int main() {||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> a >> b >> c;||| 8 int max_number = (max(a, b) - min(a, b) + abs(a - b));||| 9 if (c > max_number || a > max_number || b > max_number) {||| 10 cout << -1 << endl;||| 11 continue;||| 12 }||| 13 if (c == a) {||| 14 cout << b << endl;||| 15 continue;||| 16 }||| 17 if (c == b) {||| 18 cout << a << endl;||| 19 continue;||| 20 }||| 21 if (c <= max_number / 2) {||| 22 c += max_number / 2;||| 23 if (c <= max_number)||| 24 cout << c << endl;||| 25 else||| 26 cout << -1 << endl;||| 27 } else {||| 28 c -= max_number / 2;||| 29 if (c >= 1)||| 30 cout << c << endl;||| 31 else||| 32 cout << -1 << endl;||| 33 }||| 34 }||| 35 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int t, a, b, c;||| 4 int main() {||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> a >> b >> c;||| 8 int max_number = (max(a, b) - min(a, b) + abs(a - b));||| 9 if (c > max_number || a >= max_number || b >= max_number) {||| 10 cout << -1 << endl;||| 11 continue;||| 12 }||| 13 if (c == a) {||| 14 cout << b << endl;||| 15 continue;||| 16 }||| 17 if (c == b) {||| 18 cout << a << endl;||| 19 continue;||| 20 }||| 21 if (c <= max_number / 2) {||| 22 c += max_number / 2;||| 23 if (c <= max_number)||| 24 cout << c << endl;||| 25 else||| 26 cout << -1 << endl;||| 27 } else {||| 28 c -= max_number / 2;||| 29 if (c >= 1)||| 30 cout << c << endl;||| 31 else||| 32 cout << -1 << endl;||| 33 }||| 34 }||| 35 }||| 	9 if (c > max_number || a > max_number || b > max_number) {
67	286	"1 #include <bits/stdc++.h>||| 2 int t, a, b, c, k;||| 3 inline int read() {||| 4 int d = 0, f = 0, c = getchar();||| 5 for (; c < 48 || c > 57; c = getchar()) f |= (c == '-');||| 6 for (; c > 47 && c < 58; c = getchar()) d = (d << 1) + (d << 3) + (c ^ 48);||| 7 return f ? -d : d;||| 8 }||| 9 inline void swap(int& a, int& b) { a ^= b ^= a ^= b; }||| 10 int main() {||| 11 t = read();||| 12 for (; t; t--) {||| 13 a = read(), b = read(), c = read();||| 14 if (a < b) swap(a, b);||| 15 k = a - b;||| 16 if (b > k)||| 17 puts(""-1"");||| 18 else if (c > 2 * k)||| 19 puts(""-1"");||| 20 else if (c > k)||| 21 printf(""%d\n"", c - k);||| 22 else||| 23 printf(""%d\n"", c + k);||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 int t, a, b, c, k;||| 3 inline int read() {||| 4 int d = 0, f = 0, c = getchar();||| 5 for (; c < 48 || c > 57; c = getchar()) f |= (c == '-');||| 6 for (; c > 47 && c < 58; c = getchar()) d = (d << 1) + (d << 3) + (c ^ 48);||| 7 return f ? -d : d;||| 8 }||| 9 inline void swap(int& a, int& b) { a ^= b ^= a ^= b; }||| 10 int main() {||| 11 t = read();||| 12 for (; t; t--) {||| 13 a = read(), b = read(), c = read();||| 14 if (a < b) swap(a, b);||| 15 k = a - b;||| 16 if (b > k)||| 17 puts(""-1"");||| 18 else if (c >= 2 * k)||| 19 puts(""-1"");||| 20 else if (c > k)||| 21 printf(""%d\n"", c - k);||| 22 else||| 23 printf(""%d\n"", c + k);||| 24 }||| 25 return 0;||| 26 }||| "	18 else if (c > 2 * k)
67	209	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, a, b, c;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> a >> b >> c;||| 8 int n = abs(a - b);||| 9 int check = 2 * n;||| 10 if (a > check || b > check || c > check)||| 11 cout << -1 << endl;||| 12 else if (c <= n)||| 13 cout << c + n << endl;||| 14 else||| 15 cout << c - n << endl;||| 16 }||| 17 return 0;||| 18 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, a, b, c;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> a >> b >> c;||| 8 int n = abs(a - b);||| 9 int check = 2 * n;||| 10 if (a > check || b > check || c > check)||| 11 cout << -1 << endl;||| 12 else if (c <= n)||| 13 cout << c + n << endl;||| 14 else||| 15 cout << n - c << endl;||| 16 }||| 17 return 0;||| 18 }||| 	15 cout << c - n << endl;
68	63	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 cin.tie(nullptr)->sync_with_stdio(false);||| 5 ;||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 int i;||| 12 for (i = 1; i * i < n; i++)||| 13 ;||| 14 int x = ((i - 1) * (i - 1) + 1 + i * i) / 2;||| 15 if (x == n) {||| 16 cout << i << ' ' << i;||| 17 cout << '\n';||| 18 ;||| 19 continue;||| 20 }||| 21 if (x > n) {||| 22 cout << n - ((i - 1) * (i - 1) + 1) + 1 << ' ' << i;||| 23 cout << '\n';||| 24 ;||| 25 continue;||| 26 }||| 27 cout << i << ' ' << abs(n - i * i) + 1 << '\n';||| 28 }||| 29 return 0;||| 30 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int32_t main() {||| 4 cin.tie(nullptr)->sync_with_stdio(false);||| 5 ;||| 6 int t;||| 7 cin >> t;||| 8 while (t--) {||| 9 int n;||| 10 cin >> n;||| 11 int i;||| 12 for (i = 1; i * i <= n; i++)||| 13 ;||| 14 int x = ((i - 1) * (i - 1) + 1 + i * i) / 2;||| 15 if (x == n) {||| 16 cout << i << ' ' << i;||| 17 cout << '\n';||| 18 ;||| 19 continue;||| 20 }||| 21 if (x > n) {||| 22 cout << n - ((i - 1) * (i - 1) + 1) + 1 << ' ' << i;||| 23 cout << '\n';||| 24 ;||| 25 continue;||| 26 }||| 27 cout << i << ' ' << abs(n - i * i) + 1 << '\n';||| 28 }||| 29 return 0;||| 30 }||| 	12 for (i = 1; i * i < n; i++)
68	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int cases;||| 5 cin >> cases;||| 6 for (int case_ = 0; case_ < cases; case_++) {||| 7 int val;||| 8 cin >> val;||| 9 int rangeEnd = 0;||| 10 int rangeBeg = 0;||| 11 int numsInRange;||| 12 int i;||| 13 for (i = 0; rangeEnd < val; i++) {||| 14 numsInRange = 1 + i * 2;||| 15 rangeEnd += numsInRange;||| 16 if (rangeEnd >= val) {||| 17 rangeBeg = rangeEnd - numsInRange + 1;||| 18 break;||| 19 }||| 20 }||| 21 int row = 0;||| 22 int column = i + 1;||| 23 int j;||| 24 for (j = 0; j <= val - rangeBeg; j++) {||| 25 if (j <= i) {||| 26 row++;||| 27 }||| 28 if (j > i) {||| 29 column--;||| 30 }||| 31 }||| 32 cout << row << "" "" << column << endl;||| 33 }||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int cases;||| 5 cin >> cases;||| 6 for (int case_ = 0; case_ < cases; case_++) {||| 7 int val;||| 8 cin >> val;||| 9 int rangeEnd = 0;||| 10 int rangeBeg = 0;||| 11 int numsInRange;||| 12 int i;||| 13 for (i = 0; rangeEnd < val; i++) {||| 14 numsInRange = 1 + i * 2;||| 15 rangeEnd += numsInRange;||| 16 if (rangeEnd >= val) {||| 17 rangeBeg = rangeEnd - numsInRange + 1;||| 18 break;||| 19 }||| 20 }||| 21 int row = 0;||| 22 int column = i + 1;||| 23 int j;||| 24 for (j = 0; j <= val % rangeBeg; j++) {||| 25 if (j <= i) {||| 26 row++;||| 27 }||| 28 if (j > i) {||| 29 column--;||| 30 }||| 31 }||| 32 cout << row << "" "" << column << endl;||| 33 }||| 34 }||| "	24 for (j = 0; j <= val - rangeBeg; j++) {
68	259	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 int base = sqrt(n);||| 7 if (base * base == n) {||| 8 cout << base << "" "" << 1 << endl;||| 9 return;||| 10 }||| 11 n = n - base * base;||| 12 if (n <= base + 1) {||| 13 cout << n << "" "" << base + 1 << endl;||| 14 } else||| 15 cout << base + 1 << "" "" << (2 * (base + 1) - n) << endl;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 cout.tie(NULL);||| 21 int t;||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 int base = sqrt(n);||| 7 if (base * base == n) {||| 8 cout << 1 << "" "" << base << endl;||| 9 return;||| 10 }||| 11 n = n - base * base;||| 12 if (n <= base + 1) {||| 13 cout << n << "" "" << base + 1 << endl;||| 14 } else||| 15 cout << base + 1 << "" "" << (2 * (base + 1) - n) << endl;||| 16 }||| 17 int main() {||| 18 ios_base::sync_with_stdio(false);||| 19 cin.tie(NULL);||| 20 cout.tie(NULL);||| 21 int t;||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 }||| 26 }||| "	"8 cout << base << "" "" << 1 << endl;"
68	211	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(2)||| 4 void io() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 template <typename T>||| 10 inline void debug(T const& x) {||| 11 cout << x << ""\n"";||| 12 }||| 13 inline int fread() {||| 14 int ans = 0, fl = 1;||| 15 char i = getchar();||| 16 while (i < '0' || i > '9') {||| 17 if (i == '-') {||| 18 fl = -1;||| 19 }||| 20 i = getchar();||| 21 }||| 22 while (i >= '0' && i <= '9') {||| 23 ans = ans * 10 + i - '0';||| 24 i = getchar();||| 25 }||| 26 return ans * fl;||| 27 }||| 28 const long long maxn = 1e7 + 10;||| 29 long long tot;||| 30 long long a[maxn];||| 31 long long t, n;||| 32 signed main() {||| 33 io();||| 34 for (tot = 1;; ++tot) {||| 35 a[tot] = a[tot - 1] + tot * 2ll - 1ll;||| 36 if (a[tot] > 1000000000) break;||| 37 }||| 38 cin >> t;||| 39 while (t--) {||| 40 cin >> n;||| 41 long long pos = lower_bound(a + 1, a + 1 + tot, n) - a;||| 42 if (a[pos] == n) {||| 43 cout << pos << "" "" << 1 << ""\n"";||| 44 continue;||| 45 }||| 46 pos--;||| 47 long long res = n - a[pos];||| 48 if (res <= pos + 1ll) {||| 49 cout << res << "" "" << pos + 1ll << ""\n"";||| 50 } else {||| 51 res -= (pos + 1ll);||| 52 cout << pos + 1ll << "" "" << pos + 1ll - res << ""\n"";||| 53 }||| 54 }||| 55 return 0;||| 56 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 #pragma GCC optimize(2)||| 4 void io() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 template <typename T>||| 10 inline void debug(T const& x) {||| 11 cout << x << ""\n"";||| 12 }||| 13 inline int fread() {||| 14 int ans = 0, fl = 1;||| 15 char i = getchar();||| 16 while (i < '0' || i > '9') {||| 17 if (i == '-') {||| 18 fl = -1;||| 19 }||| 20 i = getchar();||| 21 }||| 22 while (i >= '0' && i <= '9') {||| 23 ans = ans * 10 + i - '0';||| 24 i = getchar();||| 25 }||| 26 return ans * fl;||| 27 }||| 28 const long long maxn = 1e7 + 10;||| 29 long long tot;||| 30 long long a[maxn];||| 31 long long t, n;||| 32 signed main() {||| 33 io();||| 34 for (tot = 1;; ++tot) {||| 35 a[tot] = a[tot - 1] + tot * 2ll - 1ll;||| 36 if (a[tot] > 1000000000) break;||| 37 }||| 38 cin >> t;||| 39 while (t--) {||| 40 cin >> n;||| 41 long long pos = lower_bound(a + 1, a + 1 + tot, n) - a;||| 42 if (a[pos] == n) {||| 43 cout << 1 << "" "" << pos << ""\n"";||| 44 continue;||| 45 }||| 46 pos--;||| 47 long long res = n - a[pos];||| 48 if (res <= pos + 1ll) {||| 49 cout << res << "" "" << pos + 1ll << ""\n"";||| 50 } else {||| 51 res -= (pos + 1ll);||| 52 cout << pos + 1ll << "" "" << pos + 1ll - res << ""\n"";||| 53 }||| 54 }||| 55 return 0;||| 56 }||| "	"43 cout << pos << "" "" << 1 << ""\n"";"
68	121	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 31625;||| 4 int arr[N];||| 5 int arr2[N];||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 int x = 1;||| 11 map<int, int> mp;||| 12 arr[1] = 1;||| 13 for (int i = 2; i <= 31624; i++) {||| 14 arr[i] = arr[i - 1] + x;||| 15 mp[arr[i]] = i;||| 16 x += 2;||| 17 }||| 18 arr2[1] = 1;||| 19 x = 3;||| 20 mp[1] = 1;||| 21 for (int i = 2; i <= 31623; i++) {||| 22 arr2[i] = arr2[i - 1] + x;||| 23 mp[arr2[i]] = i;||| 24 x += 2;||| 25 }||| 26 int t;||| 27 cin >> t;||| 28 while (t--) {||| 29 int a;||| 30 cin >> a;||| 31 int b = sqrt(a);||| 32 int xxx = mp.lower_bound(a)->first;||| 33 int yyy = mp.lower_bound(a)->second;||| 34 if (xxx == a) {||| 35 if (b * b == a)||| 36 cout << yyy << "" "" << 1 << endl;||| 37 else||| 38 cout << 1 << "" "" << yyy << endl;||| 39 } else if (a <= xxx && a >= (xxx - yyy + 1))||| 40 cout << yyy << "" "" << xxx - a + 1 << endl;||| 41 else {||| 42 xxx = xxx - (yyy * 2 - 2);||| 43 cout << a - xxx + 1 << "" "" << mp.lower_bound(xxx)->second << endl;||| 44 }||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 31625;||| 4 int arr[N];||| 5 int arr2[N];||| 6 int main() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 int x = 1;||| 11 map<int, int> mp;||| 12 arr[1] = 1;||| 13 for (int i = 2; i <= 31624; i++) {||| 14 arr[i] = arr[i - 1] + x;||| 15 mp[arr[i]] = i;||| 16 x += 2;||| 17 }||| 18 arr2[1] = 1;||| 19 x = 3;||| 20 mp[1] = 1;||| 21 for (int i = 2; i <= 31623; i++) {||| 22 arr2[i] = arr2[i - 1] + x;||| 23 mp[arr2[i]] = i;||| 24 x += 2;||| 25 }||| 26 int t;||| 27 cin >> t;||| 28 while (t--) {||| 29 int a;||| 30 cin >> a;||| 31 int b = sqrt(a);||| 32 int xxx = mp.lower_bound(a)->first;||| 33 int yyy = mp.lower_bound(a)->second;||| 34 if (xxx == a) {||| 35 if (b * b == a)||| 36 cout << yyy << "" "" << 1 << endl;||| 37 else||| 38 cout << 1 << "" "" << yyy << endl;||| 39 } else if (a <= xxx && a >= (xxx - yyy))||| 40 cout << yyy << "" "" << xxx - a + 1 << endl;||| 41 else {||| 42 xxx = xxx - (yyy * 2 - 2);||| 43 cout << a - xxx + 1 << "" "" << mp.lower_bound(xxx)->second << endl;||| 44 }||| 45 }||| 46 return 0;||| 47 }||| "	39 } else if (a <= xxx && a >= (xxx - yyy + 1))
68	219	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 long long int a = floor(pow(n, 0.5));||| 10 long long int b = ceil(pow(n, 0.5));||| 11 long long int c = a * a;||| 12 long long int d = b * b;||| 13 long long int diff = (d - c) / 2;||| 14 if (a == b) {||| 15 cout << a << "" "" << 1 << endl;||| 16 continue;||| 17 }||| 18 long long int chk = ceil(double((c + d)) / 2);||| 19 if (chk == n) {||| 20 cout << b << "" "" << b << endl;||| 21 } else if (n < chk) {||| 22 cout << (n - c) << "" "" << b << endl;||| 23 } else {||| 24 cout << b << "" "" << (d - n + 1) << endl;||| 25 }||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int n;||| 8 cin >> n;||| 9 long long int a = floor(pow(n, 0.5));||| 10 long long int b = ceil(pow(n, 0.5));||| 11 long long int c = a * a;||| 12 long long int d = b * b;||| 13 long long int diff = (d - c) / 2;||| 14 if (a == b) {||| 15 cout << 1 << "" "" << a << endl;||| 16 continue;||| 17 }||| 18 long long int chk = ceil(double((c + d)) / 2);||| 19 if (chk == n) {||| 20 cout << b << "" "" << b << endl;||| 21 } else if (n < chk) {||| 22 cout << (n - c) << "" "" << b << endl;||| 23 } else {||| 24 cout << b << "" "" << (d - n + 1) << endl;||| 25 }||| 26 }||| 27 }||| "	"15 cout << a << "" "" << 1 << endl;"
68	54	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 double c = sqrt(n);||| 7 if (floor(c) == ceil(c)) {||| 8 cout << c << "" "" << 1 << ""\n"";||| 9 return;||| 10 }||| 11 int a = c;||| 12 long long p = pow(a + 1, 2);||| 13 if (p - n > a) {||| 14 cout << n - pow(a, 2) << "" "" << a + 1 << ""\n"";||| 15 return;||| 16 }||| 17 cout << a + 1 << "" "" << p - n + 1 << ""\n"";||| 18 return;||| 19 }||| 20 int main() {||| 21 int t;||| 22 cin >> t;||| 23 while (t--) solve();||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 double c = sqrt(n);||| 7 if (floor(c) == ceil(c)) {||| 8 cout << 1 << "" "" << c << ""\n"";||| 9 return;||| 10 }||| 11 int a = c;||| 12 long long p = pow(a + 1, 2);||| 13 if (p - n > a) {||| 14 cout << n - pow(a, 2) << "" "" << a + 1 << ""\n"";||| 15 return;||| 16 }||| 17 cout << a + 1 << "" "" << p - n + 1 << ""\n"";||| 18 return;||| 19 }||| 20 int main() {||| 21 int t;||| 22 cin >> t;||| 23 while (t--) solve();||| 24 }||| "	"8 cout << c << "" "" << 1 << ""\n"";"
68	171	"1 #include <bits/stdc++.h>||| 2 const int mod = 1e9 + 7;||| 3 using namespace std;||| 4 void fastio() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool compare(pair<long long int, long long int> a,||| 10 pair<long long int, long long int> b) {||| 11 if (a.first > b.first) return true;||| 12 if (a.first == b.first) return a.second < b.second;||| 13 return false;||| 14 }||| 15 long long int power(long long int x, long long int y) {||| 16 long long int res = 1;||| 17 x = x % mod;||| 18 while (y > 0) {||| 19 if (y & 1) res = (res * x) % mod;||| 20 y = y >> 1;||| 21 x = (x * x) % mod;||| 22 }||| 23 return res;||| 24 }||| 25 void solve() {||| 26 long long int k;||| 27 cin >> k;||| 28 long long int n = 1;||| 29 long long int i = 0;||| 30 while (n + 2 * i + 1 <= k) {||| 31 n += 2 * i + 1;||| 32 i++;||| 33 }||| 34 if (n == k) {||| 35 cout << 1 << "" "" << i + 1 << ""\n"";||| 36 return;||| 37 }||| 38 int x = i + 1, y = 1;||| 39 while (y != x) {||| 40 y++;||| 41 n++;||| 42 if (n == k) {||| 43 cout << y << "" "" << x << ""\n"";||| 44 return;||| 45 }||| 46 }||| 47 while (x >= 1) {||| 48 x--;||| 49 n++;||| 50 if (n == k) {||| 51 cout << y << "" "" << x << ""\n"";||| 52 return;||| 53 }||| 54 }||| 55 }||| 56 int main() {||| 57 int t = 1;||| 58 cin >> t;||| 59 while (t--) solve();||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 const int mod = 1e9 + 7;||| 3 using namespace std;||| 4 void fastio() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 }||| 9 bool compare(pair<long long int, long long int> a,||| 10 pair<long long int, long long int> b) {||| 11 if (a.first > b.first) return true;||| 12 if (a.first == b.first) return a.second < b.second;||| 13 return false;||| 14 }||| 15 long long int power(long long int x, long long int y) {||| 16 long long int res = 1;||| 17 x = x % mod;||| 18 while (y > 0) {||| 19 if (y & 1) res = (res * x) % mod;||| 20 y = y >> 1;||| 21 x = (x * x) % mod;||| 22 }||| 23 return res;||| 24 }||| 25 void solve() {||| 26 long long int k;||| 27 cin >> k;||| 28 long long int n = 1;||| 29 long long int i = 0;||| 30 while (n + 2 * i + 1 <= k) {||| 31 n += 2 * i + 1;||| 32 i++;||| 33 }||| 34 if (n == k) {||| 35 cout << 1 << "" "" << i << ""\n"";||| 36 return;||| 37 }||| 38 int x = i + 1, y = 1;||| 39 while (y != x) {||| 40 y++;||| 41 n++;||| 42 if (n == k) {||| 43 cout << y << "" "" << x << ""\n"";||| 44 return;||| 45 }||| 46 }||| 47 while (x >= 1) {||| 48 x--;||| 49 n++;||| 50 if (n == k) {||| 51 cout << y << "" "" << x << ""\n"";||| 52 return;||| 53 }||| 54 }||| 55 }||| 56 int main() {||| 57 int t = 1;||| 58 cin >> t;||| 59 while (t--) solve();||| 60 }||| "	"35 cout << 1 << "" "" << i + 1 << ""\n"";"
68	242	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long k, row, col, ans;||| 8 cin >> k;||| 9 long long num = ceil(sqrt(k));||| 10 long long sq = num * num;||| 11 long long d = sq - k;||| 12 if (d < num) {||| 13 row = num;||| 14 col = d + 1;||| 15 } else {||| 16 col = num;||| 17 d -= num;||| 18 d = num - d - 1;||| 19 row = d;||| 20 }||| 21 cout << row << "" "" << col << endl;||| 22 }||| 23 return 0;||| 24 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long k, row, col, ans;||| 8 cin >> k;||| 9 long long num = ceil(sqrt(k));||| 10 long long sq = num * num;||| 11 long long d = sq - num;||| 12 if (d < num) {||| 13 row = num;||| 14 col = d + 1;||| 15 } else {||| 16 col = num;||| 17 d -= num;||| 18 d = num - d - 1;||| 19 row = d;||| 20 }||| 21 cout << row << "" "" << col << endl;||| 22 }||| 23 return 0;||| 24 }||| "	11 long long d = sq - k;
68	274	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 int l = 1, r = 1e5;||| 11 while (l < r) {||| 12 int mid = (l + r) / 2;||| 13 long long p = (long long)mid * mid;||| 14 if (p >= n)||| 15 r = mid;||| 16 else||| 17 l = mid + 1;||| 18 }||| 19 int p = l * l;||| 20 if (n > p - l)||| 21 cout << l << "" "" << p - n + 1 << endl;||| 22 else||| 23 cout << l - ((p - l + 1) - n) << "" "" << l << endl;||| 24 }||| 25 return 0;||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e3 + 10;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 int l = 1, r = 1e5;||| 11 while (l < r) {||| 12 int mid = (l + r) / 2;||| 13 long long p = (long long)mid * mid;||| 14 if (p >= n)||| 15 r = mid;||| 16 else||| 17 l = mid + 1;||| 18 }||| 19 int p = l * l;||| 20 if (n > p - l)||| 21 cout << l << "" "" << p - n + 1 << endl;||| 22 else||| 23 cout << 4 - ((p - l + 1) - n) << "" "" << l << endl;||| 24 }||| 25 return 0;||| 26 }||| "	"23 cout << l - ((p - l + 1) - n) << "" "" << l << endl;"
68	169	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int k;||| 8 cin >> k;||| 9 long long int r = ceil(sqrt(k));||| 10 long long int s = r * r;||| 11 if (s == k) {||| 12 cout << r << "" "" << 1 << ""\n"";||| 13 continue;||| 14 }||| 15 int a = 2 * r;||| 16 int d = s - k;||| 17 if (d < r) {||| 18 cout << r << "" "" << d + 1 << ""\n"";||| 19 continue;||| 20 }||| 21 long long int p = (r - 1) * (r - 1);||| 22 cout << (k - p) << "" "" << r << ""\n"";||| 23 }||| 24 return 0;||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long int k;||| 8 cin >> k;||| 9 long long int r = ceil(sqrt(k));||| 10 long long int s = r * r;||| 11 if (s == k) {||| 12 cout << r << "" "" << 1 << ""\n"";||| 13 continue;||| 14 }||| 15 int a = 2 * r;||| 16 int d = s - k;||| 17 if (d <= r) {||| 18 cout << r << "" "" << d + 1 << ""\n"";||| 19 continue;||| 20 }||| 21 long long int p = (r - 1) * (r - 1);||| 22 cout << (k - p) << "" "" << r << ""\n"";||| 23 }||| 24 return 0;||| 25 }||| "	17 if (d < r) {
68	92	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n;||| 11 cin >> n;||| 12 int i = 1;||| 13 int curr = 1;||| 14 int old;||| 15 int next;||| 16 while (n >= curr) {||| 17 i++;||| 18 next = curr + 2 * (i - 1) - 1;||| 19 old = curr;||| 20 curr = next;||| 21 if (n <= next - 1) break;||| 22 }||| 23 i--;||| 24 if (n <= old + i - 1)||| 25 cout << n - old + 1 << "" "" << i << endl;||| 26 else||| 27 cout << i << "" "" << old + 2 * i - 1 - n << endl;||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 int tt;||| 8 cin >> tt;||| 9 while (tt--) {||| 10 int n;||| 11 cin >> n;||| 12 int i = 1;||| 13 int curr = 1;||| 14 int old;||| 15 int next;||| 16 while (n >= curr) {||| 17 i++;||| 18 next = curr + 2 * (i - 1) - 1;||| 19 old = curr;||| 20 curr = next;||| 21 if (n <= next - 1) break;||| 22 }||| 23 i--;||| 24 if (n <= old + i - 1)||| 25 cout << n - old + 1 << "" "" << i << endl;||| 26 else||| 27 cout << i << "" "" << old + 2 * i - 2 - n << endl;||| 28 }||| 29 return 0;||| 30 }||| "	"27 cout << i << "" "" << old + 2 * i - 1 - n << endl;"
68	212	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> v;||| 4 int main() {||| 5 int t = 0;||| 6 cin >> t;||| 7 for (int k = 0; k < t; k++) {||| 8 int n = 0;||| 9 cin >> n;||| 10 if (n == 1) {||| 11 cout << 1 << "" "" << 1 << endl;||| 12 } else if (n == 2) {||| 13 cout << 1 << "" "" << 2 << endl;||| 14 } else if (n == 3) {||| 15 cout << 2 << "" "" << 2 << endl;||| 16 } else if (n == 4) {||| 17 cout << 2 << "" "" << 1 << endl;||| 18 } else {||| 19 long long int i = 1;||| 20 while (i * i < n) {||| 21 i++;||| 22 }||| 23 int c = n - (i - 1) * (i - 1);||| 24 if (c < i) {||| 25 cout << c << "" "" << i << endl;||| 26 } else if (c == i) {||| 27 cout << i << "" "" << i << endl;||| 28 } else {||| 29 c = c - i;||| 30 cout << i << "" "" << i - c << endl;||| 31 }||| 32 }||| 33 }||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> v;||| 4 int main() {||| 5 int t = 0;||| 6 cin >> t;||| 7 for (int k = 0; k < t; k++) {||| 8 int n = 0;||| 9 cin >> n;||| 10 if (n == 1) {||| 11 cout << 1 << "" "" << 1 << endl;||| 12 } else if (n == 2) {||| 13 cout << 1 << "" "" << 2 << endl;||| 14 } else if (n == 3) {||| 15 cout << 2 << "" "" << 2 << endl;||| 16 } else if (n == 4) {||| 17 cout << 2 << "" "" << 1 << endl;||| 18 } else {||| 19 long long int i = 1;||| 20 while (i * i <= n) {||| 21 i++;||| 22 }||| 23 int c = n - (i - 1) * (i - 1);||| 24 if (c < i) {||| 25 cout << c << "" "" << i << endl;||| 26 } else if (c == i) {||| 27 cout << i << "" "" << i << endl;||| 28 } else {||| 29 c = c - i;||| 30 cout << i << "" "" << i - c << endl;||| 31 }||| 32 }||| 33 }||| 34 }||| "	20 while (i * i < n) {
68	57	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long tc;||| 5 cin >> tc;||| 6 while (tc-- > 0) {||| 7 long long n;||| 8 cin >> n;||| 9 long long s = sqrt(n);||| 10 long long t = (s * (s + 1)) + 1;||| 11 long long r, c, check;||| 12 if (s * s == n) {||| 13 r = s;||| 14 c = 1;||| 15 } else {||| 16 if (n == t) {||| 17 r = s + 1;||| 18 c = s + 1;||| 19 } else if (n > t) {||| 20 check = n - t;||| 21 r = s + 1;||| 22 c = s + 1 - check;||| 23 } else if (n < t) {||| 24 check = t - n;||| 25 r = s + 1 - check;||| 26 c = s + 1;||| 27 }||| 28 }||| 29 cout << r << "" "" << c << endl;||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long tc;||| 5 cin >> tc;||| 6 while (tc-- > 0) {||| 7 long long n;||| 8 cin >> n;||| 9 long long s = sqrt(n);||| 10 long long t = (s * (s + 1)) + 1;||| 11 long long r, c, check;||| 12 if (s * s == n) {||| 13 r = s;||| 14 c = s;||| 15 } else {||| 16 if (n == t) {||| 17 r = s + 1;||| 18 c = s + 1;||| 19 } else if (n > t) {||| 20 check = n - t;||| 21 r = s + 1;||| 22 c = s + 1 - check;||| 23 } else if (n < t) {||| 24 check = t - n;||| 25 r = s + 1 - check;||| 26 c = s + 1;||| 27 }||| 28 }||| 29 cout << r << "" "" << c << endl;||| 30 }||| 31 return 0;||| 32 }||| "	14 c = 1;
68	238	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 int i = 1;||| 11 while (i * i < n) {||| 12 i++;||| 13 }||| 14 int one = (i - 1) * (i - 1);||| 15 if (one + i >= n) {||| 16 cout << n - one << "" "" << i << endl;||| 17 } else {||| 18 cout << i << "" "" << (i) * (i)-n + 1 << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1000000007;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 int i = 1;||| 11 while (i * i < n) {||| 12 i++;||| 13 }||| 14 int one = (i - 1) * (i - 10);||| 15 if (one + i >= n) {||| 16 cout << n - one << "" "" << i << endl;||| 17 } else {||| 18 cout << i << "" "" << (i) * (i)-n + 1 << endl;||| 19 }||| 20 }||| 21 return 0;||| 22 }||| "	14 int one = (i - 1) * (i - 1);
68	193	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 for (long long f = 1; f <= t; f++) {||| 7 long long k;||| 8 cin >> k;||| 9 long long root = sqrt(k);||| 10 if (root * root == k) {||| 11 cout << root << "" ""||| 12 << ""1"" << endl;||| 13 continue;||| 14 }||| 15 if (k == 2) {||| 16 cout << ""1""||| 17 << "" ""||| 18 << ""2"" << endl;||| 19 continue;||| 20 }||| 21 if (k == 3) {||| 22 cout << ""2""||| 23 << "" ""||| 24 << ""2"" << endl;||| 25 continue;||| 26 }||| 27 long long row;||| 28 long long column;||| 29 long long pivot = ((root + 1) * (root + 1) + root * root + 1) / 2;||| 30 if (k > pivot) {||| 31 row = (root + 1);||| 32 column = (2 * pivot - k) % (root * root);||| 33 } else {||| 34 column = root + 1;||| 35 row = k % (root * root);||| 36 }||| 37 cout << row << "" "" << column << endl;||| 38 }||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 for (long long f = 1; f <= t; f++) {||| 7 long long k;||| 8 cin >> k;||| 9 long long root = sqrt(k);||| 10 if (root * root == k) {||| 11 cout << root << "" ""||| 12 << ""1"" << endl;||| 13 continue;||| 14 }||| 15 if (k == 2) {||| 16 cout << ""1""||| 17 << "" ""||| 18 << ""2"" << endl;||| 19 continue;||| 20 }||| 21 if (k == 3) {||| 22 cout << ""2""||| 23 << "" ""||| 24 << ""2"" << endl;||| 25 }||| 26 long long row;||| 27 long long column;||| 28 long long pivot = ((root + 1) * (root + 1) + root * root + 1) / 2;||| 29 if (k > pivot) {||| 30 row = (root + 1);||| 31 column = (2 * pivot - k) % (root * root);||| 32 } else {||| 33 column = root + 1;||| 34 row = k % (root * root);||| 35 }||| 36 cout << row << "" "" << column << endl;||| 37 }||| 38 }||| "	25 continue;
68	79	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long k, r, c, i, mid;||| 5 cin >> k;||| 6 i = sqrt(k);||| 7 mid = (i * i) + i + 1;||| 8 if (i * i == k) {||| 9 c = 1;||| 10 r = i;||| 11 } else if (k <= mid) {||| 12 c = i + 1;||| 13 r = k - (i * i);||| 14 } else {||| 15 r = i + 1;||| 16 c = (i + 1) * (i + 1) - k + 1;||| 17 }||| 18 cout << r << "" "" << c << endl;||| 19 }||| 20 int32_t main() {||| 21 long long t;||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 }||| 26 return 0;||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long k, r, c, i, mid;||| 5 cin >> k;||| 6 i = sqrt(k);||| 7 mid = (i * i) + i + 1;||| 8 if (i * i == k) {||| 9 c = i;||| 10 r = 1;||| 11 } else if (k <= mid) {||| 12 c = i + 1;||| 13 r = k - (i * i);||| 14 } else {||| 15 r = i + 1;||| 16 c = (i + 1) * (i + 1) - k + 1;||| 17 }||| 18 cout << r << "" "" << c << endl;||| 19 }||| 20 int32_t main() {||| 21 long long t;||| 22 cin >> t;||| 23 while (t--) {||| 24 solve();||| 25 }||| 26 return 0;||| 27 }||| "	9 c = 1;
68	156	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T gcd(T a, T b) {||| 5 return b == 0 ? a : gcd(b, a % b);||| 6 }||| 7 const int INF = 0x3f3f3f3f;||| 8 void solve() {||| 9 int n, i = 1, p = 1;||| 10 cin >> n;||| 11 while (1) {||| 12 if ((n - i) <= 0) {||| 13 if (n <= p) {||| 14 cout << n << "" "" << p << '\n';||| 15 return;||| 16 } else {||| 17 cout << p << "" "" << 2 * p - n << '\n';||| 18 return;||| 19 }||| 20 }||| 21 n = n - i;||| 22 i = i + 2;||| 23 p++;||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(0);||| 29 cout.tie(0);||| 30 int T = 1;||| 31 cin >> T;||| 32 while (T--) {||| 33 solve();||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T gcd(T a, T b) {||| 5 return b == 0 ? a : gcd(b, a % b);||| 6 }||| 7 const int INF = 0x3f3f3f3f;||| 8 void solve() {||| 9 int n, i = 1, p = 1;||| 10 cin >> n;||| 11 while (1) {||| 12 if ((n - i) < 0) {||| 13 if (n <= p) {||| 14 cout << n << "" "" << p << '\n';||| 15 return;||| 16 } else {||| 17 cout << p << "" "" << 2 * p - n << '\n';||| 18 return;||| 19 }||| 20 }||| 21 n = n - i;||| 22 i = i + 2;||| 23 p++;||| 24 }||| 25 }||| 26 int main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(0);||| 29 cout.tie(0);||| 30 int T = 1;||| 31 cin >> T;||| 32 while (T--) {||| 33 solve();||| 34 }||| 35 return 0;||| 36 }||| "	12 if ((n - i) <= 0) {
69	135	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int solve(string s, string w) {||| 4 long long int a, b, c, i, j, k;||| 5 i = 0;||| 6 j = 0;||| 7 a = s.length();||| 8 b = w.length();||| 9 for (i = 0; i < s.length(); i++) {||| 10 if (j == w.length()) break;||| 11 if (s.at(i) == w.at(j)) {||| 12 b--;||| 13 a--;||| 14 j++;||| 15 }||| 16 }||| 17 return a + b;||| 18 }||| 19 int main() {||| 20 ios_base::sync_with_stdio(false);||| 21 cin.tie(NULL);||| 22 int q, T;||| 23 cin >> T;||| 24 for (q = 1; q <= T; q++) {||| 25 string s;||| 26 cin >> s;||| 27 unsigned long long int a, b, c, i, j, k;||| 28 long long int ans = 1e10;||| 29 b = 1;||| 30 for (i = 1; i <= 62; i++) {||| 31 a = b;||| 32 b = b * 2;||| 33 string w = """";||| 34 while (a > 0) {||| 35 char ch = a % 10 + '0';||| 36 w += ch;||| 37 a /= 10;||| 38 }||| 39 reverse(w.begin(), w.end());||| 40 ans = min(ans, solve(s, w));||| 41 }||| 42 cout << ans << ""\n"";||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int solve(string s, string w) {||| 4 long long int a, b, c, i, j, k;||| 5 i = 0;||| 6 j = 0;||| 7 a = s.length();||| 8 b = w.length();||| 9 for (i = 0; i < s.length(); i++) {||| 10 if (j == w.length()) break;||| 11 if (s.at(i) == w.at(j)) {||| 12 b--;||| 13 a--;||| 14 j++;||| 15 }||| 16 }||| 17 return a + b;||| 18 }||| 19 int main() {||| 20 ios_base::sync_with_stdio(false);||| 21 cin.tie(NULL);||| 22 int q, T;||| 23 cin >> T;||| 24 for (q = 1; q <= T; q++) {||| 25 string s;||| 26 cin >> s;||| 27 long long int a, b, c, i, j, k;||| 28 long long int ans = 1e18;||| 29 b = 1;||| 30 for (i = 1; i <= 42; i++) {||| 31 a = b;||| 32 b = b * 2;||| 33 string w = """";||| 34 while (a > 0) {||| 35 char ch = a % 10 + '0';||| 36 w += ch;||| 37 a /= 10;||| 38 }||| 39 reverse(w.begin(), w.end());||| 40 ans = min(ans, solve(s, w));||| 41 }||| 42 cout << ans << ""\n"";||| 43 }||| 44 return 0;||| 45 }||| "	27 unsigned long long int a, b, c, i, j, k;
69	29	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 long long a[66];||| 9 a[0] = 1;||| 10 vector<string> powers;||| 11 powers.push_back(to_string(a[0]));||| 12 for (int i = 1; i < 64; i++) {||| 13 a[i] = a[i - 1] * 2;||| 14 string str = to_string(a[i]);||| 15 powers.push_back(str);||| 16 }||| 17 while (t--) {||| 18 string nss;||| 19 cin >> nss;||| 20 long long ans = nss.size() + 1;||| 21 for (int i = 0; i < powers.size(); i++) {||| 22 long long taken = 0;||| 23 long long px = 0, pn = 0;||| 24 while (px < powers[i].size() && pn < nss.size()) {||| 25 if (powers[i][px] == nss[pn]) {||| 26 taken++;||| 27 px++;||| 28 }||| 29 pn++;||| 30 }||| 31 long long tt = nss.size() + powers[i].size() - 2 * taken;||| 32 ans = min(ans, tt);||| 33 }||| 34 cout << ans << endl;||| 35 }||| 36 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 int t;||| 7 cin >> t;||| 8 long long a[66];||| 9 a[0] = 1;||| 10 vector<string> powers;||| 11 powers.push_back(to_string(a[0]));||| 12 for (int i = 1; i <= 64; i++) {||| 13 a[i] = a[i - 1] * 2;||| 14 string str = to_string(a[i]);||| 15 powers.push_back(str);||| 16 }||| 17 while (t--) {||| 18 string nss;||| 19 cin >> nss;||| 20 long long ans = nss.size() + 1;||| 21 for (int i = 0; i < powers.size(); i++) {||| 22 long long taken = 0;||| 23 long long px = 0, pn = 0;||| 24 while (px < powers[i].size() && pn < nss.size()) {||| 25 if (powers[i][px] == nss[pn]) {||| 26 taken++;||| 27 px++;||| 28 }||| 29 pn++;||| 30 }||| 31 long long tt = nss.size() + powers[i].size() - 2 * taken;||| 32 ans = min(ans, tt);||| 33 }||| 34 cout << ans << endl;||| 35 }||| 36 }||| 	12 for (int i = 1; i < 64; i++) {
69	144	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string pow2[70];||| 4 void precalc() {||| 5 long long i = 1;||| 6 int cur = 0;||| 7 while (cur < 61) {||| 8 pow2[cur] = to_string(i);||| 9 i *= 2;||| 10 cur++;||| 11 }||| 12 }||| 13 long long calc(string a, string b) {||| 14 int i = 0, j = 0;||| 15 while (i < a.length() && j < b.length()) {||| 16 if (a[i] == b[j]) {||| 17 j++;||| 18 }||| 19 i++;||| 20 }||| 21 return b.length() - j + a.length() - j;||| 22 }||| 23 int main() {||| 24 int q;||| 25 precalc();||| 26 cin >> q;||| 27 while (q--) {||| 28 string s1;||| 29 cin >> s1;||| 30 long long ans = 10;||| 31 for (int i = 0; i < 60; i++) {||| 32 ans = min(ans, calc(s1, pow2[i]));||| 33 }||| 34 cout << ans << '\n';||| 35 ;||| 36 }||| 37 return 0;||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string pow2[70];||| 4 void precalc() {||| 5 int i = 1;||| 6 int cur = 0;||| 7 while (cur < 61) {||| 8 pow2[cur] = to_string(i);||| 9 i *= 2;||| 10 cur++;||| 11 }||| 12 }||| 13 long long calc(string a, string b) {||| 14 int i = 0, j = 0;||| 15 while (i < a.length() && j < b.length()) {||| 16 if (a[i] == b[j]) {||| 17 j++;||| 18 }||| 19 i++;||| 20 }||| 21 return b.length() - j + a.length() - j;||| 22 }||| 23 int main() {||| 24 int q;||| 25 precalc();||| 26 cin >> q;||| 27 while (q--) {||| 28 string s1;||| 29 cin >> s1;||| 30 long long ans = 10;||| 31 for (int i = 0; i < 60; i++) {||| 32 ans = min(ans, calc(s1, pow2[i]));||| 33 }||| 34 cout << ans << '\n';||| 35 ;||| 36 }||| 37 return 0;||| 38 }||| 	5 long long i = 1;
69	50	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 long long pow_t(long long a, long long b) {||| 7 long long ans = 1;||| 8 for (int i = 1; i <= b; i++) {||| 9 ans *= a;||| 10 }||| 11 return ans;||| 12 }||| 13 long long quick_m(long long a, long long b, long long MOD) {||| 14 long long ans = 1;||| 15 while (b) {||| 16 if (b & 1) ans = (ans * a) % MOD;||| 17 a = (a * a) % MOD;||| 18 b >>= 1;||| 19 }||| 20 return ans;||| 21 }||| 22 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 23 long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 24 bool cmp(long long x, long long y) { return x < y; }||| 25 string b2[100];||| 26 void strlen_(long long i, long long j) {||| 27 string b;||| 28 while (j) {||| 29 b += (j % 10 + '0');||| 30 j /= 10;||| 31 }||| 32 for (long long g = b.length() - 1; g >= 0; g--) b2[i] += b[g];||| 33 }||| 34 void solve() {||| 35 string n;||| 36 cin >> n;||| 37 int minn = INF;||| 38 for (int i = 0; i <= 63; i++) {||| 39 int p = 0, q = 0, cnt = 0;||| 40 while (1) {||| 41 if (n[p] == b2[i][q]) {||| 42 q++;||| 43 p++;||| 44 } else {||| 45 p++;||| 46 cnt++;||| 47 }||| 48 if (p == n.length() || q == b2[i].length()) break;||| 49 }||| 50 if (q != b2[i].length()) {||| 51 cnt += b2[i].length() - q;||| 52 }||| 53 if (p != n.length()) {||| 54 cnt += n.length() - p;||| 55 }||| 56 minn = min(minn, cnt);||| 57 }||| 58 cout << minn << endl;||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 for (long long i = 0; i <= 63; i++) {||| 65 strlen_(i, pow_t(2, i));||| 66 }||| 67 int t;||| 68 cin >> t;||| 69 while (t--) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 long long pow_t(long long a, long long b) {||| 7 long long ans = 1;||| 8 for (int i = 1; i <= b; i++) {||| 9 ans *= a;||| 10 }||| 11 return ans;||| 12 }||| 13 long long quick_m(long long a, long long b, long long MOD) {||| 14 long long ans = 1;||| 15 while (b) {||| 16 if (b & 1) ans = (ans * a) % MOD;||| 17 a = (a * a) % MOD;||| 18 b >>= 1;||| 19 }||| 20 return ans;||| 21 }||| 22 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 23 long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 24 bool cmp(long long x, long long y) { return x < y; }||| 25 string b2[60];||| 26 void strlen_(long long i, long long j) {||| 27 string b;||| 28 while (j) {||| 29 b += (j % 10 + '0');||| 30 j /= 10;||| 31 }||| 32 for (int g = b.length() - 1; g >= 0; g--) b2[i] += b[g];||| 33 }||| 34 void solve() {||| 35 string n;||| 36 cin >> n;||| 37 int minn = INF;||| 38 for (int i = 0; i <= 50; i++) {||| 39 int p = 0, q = 0, cnt = 0;||| 40 while (1) {||| 41 if (n[p] == b2[i][q]) {||| 42 q++;||| 43 p++;||| 44 } else {||| 45 p++;||| 46 cnt++;||| 47 }||| 48 if (p == n.length() || q == b2[i].length()) break;||| 49 }||| 50 if (q != b2[i].length()) {||| 51 cnt += b2[i].length() - q;||| 52 }||| 53 if (p != n.length()) {||| 54 cnt += n.length() - p;||| 55 }||| 56 minn = min(minn, cnt);||| 57 }||| 58 cout << minn << endl;||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 for (long long i = 0; i <= 50; i++) {||| 65 strlen_(i, pow_t(2, i));||| 66 }||| 67 int t;||| 68 cin >> t;||| 69 while (t--) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	25 string b2[100];
69	205	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 long long pow_t(long long a, long long b) {||| 7 long long ans = 1;||| 8 for (int i = 1; i <= b; i++) {||| 9 ans *= a;||| 10 }||| 11 return ans;||| 12 }||| 13 long long quick_m(long long a, long long b, long long MOD) {||| 14 long long ans = 1;||| 15 while (b) {||| 16 if (b & 1) ans = (ans * a) % MOD;||| 17 a = (a * a) % MOD;||| 18 b >>= 1;||| 19 }||| 20 return ans;||| 21 }||| 22 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 23 long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 24 bool cmp(long long x, long long y) { return x < y; }||| 25 string b2[100];||| 26 void strlen_(long long i, long long j) {||| 27 string b;||| 28 while (j) {||| 29 b += (j % 10 + '0');||| 30 j /= 10;||| 31 }||| 32 for (long long g = b.length() - 1; g >= 0; g--) b2[i] += b[g];||| 33 }||| 34 void solve() {||| 35 string n;||| 36 cin >> n;||| 37 int minn = INF;||| 38 for (int i = 0; i <= 63; i++) {||| 39 int p = 0, q = 0, cnt = 0;||| 40 while (1) {||| 41 if (n[p] == b2[i][q]) {||| 42 q++;||| 43 p++;||| 44 } else {||| 45 p++;||| 46 cnt++;||| 47 }||| 48 if (p == n.length() || q == b2[i].length()) break;||| 49 }||| 50 if (q != b2[i].length()) {||| 51 cnt += b2[i].length() - q;||| 52 }||| 53 if (p != n.length()) {||| 54 cnt += n.length() - p;||| 55 }||| 56 minn = min(minn, cnt);||| 57 }||| 58 cout << minn << endl;||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 for (long long i = 0; i <= 63; i++) {||| 65 strlen_(i, pow_t(2, i));||| 66 }||| 67 int t;||| 68 cin >> t;||| 69 while (t--) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int MOD = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 long long pow_t(long long a, long long b) {||| 7 long long ans = 1;||| 8 for (int i = 1; i <= b; i++) {||| 9 ans *= a;||| 10 }||| 11 return ans;||| 12 }||| 13 long long quick_m(long long a, long long b, long long MOD) {||| 14 long long ans = 1;||| 15 while (b) {||| 16 if (b & 1) ans = (ans * a) % MOD;||| 17 a = (a * a) % MOD;||| 18 b >>= 1;||| 19 }||| 20 return ans;||| 21 }||| 22 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 23 long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }||| 24 bool cmp(long long x, long long y) { return x < y; }||| 25 string b2[50];||| 26 void strlen_(long long i, long long j) {||| 27 string b;||| 28 while (j) {||| 29 b += (j % 10 + '0');||| 30 j /= 10;||| 31 }||| 32 for (int g = b.length() - 1; g >= 0; g--) b2[i] += b[g];||| 33 }||| 34 void solve() {||| 35 string n;||| 36 cin >> n;||| 37 int minn = INF;||| 38 for (int i = 0; i <= 36; i++) {||| 39 int p = 0, q = 0, cnt = 0;||| 40 while (1) {||| 41 if (n[p] == b2[i][q]) {||| 42 q++;||| 43 p++;||| 44 } else {||| 45 p++;||| 46 cnt++;||| 47 }||| 48 if (p == n.length() || q == b2[i].length()) break;||| 49 }||| 50 if (q != b2[i].length()) {||| 51 cnt += b2[i].length() - q;||| 52 }||| 53 if (p != n.length()) {||| 54 cnt += n.length() - p;||| 55 }||| 56 minn = min(minn, cnt);||| 57 }||| 58 cout << minn << endl;||| 59 }||| 60 int main() {||| 61 ios::sync_with_stdio(false);||| 62 cin.tie(0);||| 63 cout.tie(0);||| 64 for (long long i = 0; i <= 36; i++) {||| 65 strlen_(i, pow_t(2, i));||| 66 }||| 67 int t;||| 68 cin >> t;||| 69 while (t--) {||| 70 solve();||| 71 }||| 72 return 0;||| 73 }||| 	25 string b2[100];
70	47	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int cntsrc[30];||| 4 pair<string, string> decode(string s) {||| 5 memset(cntsrc, 0, sizeof(cntsrc));||| 6 reverse(s.begin(), s.end());||| 7 string del;||| 8 for (auto c : s) {||| 9 if (!cntsrc[c - 'a']) del.push_back(c);||| 10 cntsrc[c - 'a']++;||| 11 }||| 12 int orignLength = 0;||| 13 int m = del.size();||| 14 for (int i = 0; i < m; i++) {||| 15 orignLength += cntsrc[del[i] - 'a'] / (m - i);||| 16 }||| 17 reverse(del.begin(), del.end());||| 18 return {string(s.rbegin(), s.rbegin() + orignLength), del};||| 19 }||| 20 string encode(pair<string, string> p) {||| 21 string result = p.first;||| 22 for (auto c : p.second) {||| 23 string temp;||| 24 for (auto d : p.first)||| 25 if (d != c) {||| 26 temp.push_back(d);||| 27 result.push_back(d);||| 28 }||| 29 p.first = temp;||| 30 }||| 31 return result;||| 32 }||| 33 int main() {||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 string s;||| 38 cin >> s;||| 39 auto ans = decode(s);||| 40 auto check = encode(ans);||| 41 if (check == s)||| 42 cout << ans.first << ' ' << ans.second << endl;||| 43 else||| 44 cout << -1 << endl;||| 45 }||| 46 return 0;||| 47 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 char cntsrc[30];||| 4 pair<string, string> decode(string s) {||| 5 memset(cntsrc, 0, sizeof(cntsrc));||| 6 reverse(s.begin(), s.end());||| 7 string del;||| 8 for (auto c : s) {||| 9 if (!cntsrc[c - 'a']) del.push_back(c);||| 10 cntsrc[c - 'a']++;||| 11 }||| 12 int orignLength = 0;||| 13 int m = del.size();||| 14 for (int i = 0; i < m; i++) {||| 15 orignLength += cntsrc[del[i] - 'a'] / (m - i);||| 16 }||| 17 reverse(del.begin(), del.end());||| 18 return {string(s.rbegin(), s.rbegin() + orignLength), del};||| 19 }||| 20 string encode(pair<string, string> p) {||| 21 string result = p.first;||| 22 for (auto c : p.second) {||| 23 string temp;||| 24 for (auto d : p.first)||| 25 if (d != c) {||| 26 temp.push_back(d);||| 27 result.push_back(d);||| 28 }||| 29 p.first = temp;||| 30 }||| 31 return result;||| 32 }||| 33 int main() {||| 34 int t;||| 35 cin >> t;||| 36 while (t--) {||| 37 string s;||| 38 cin >> s;||| 39 auto ans = decode(s);||| 40 auto check = encode(ans);||| 41 if (check == s)||| 42 cout << ans.first << ' ' << ans.second << endl;||| 43 else||| 44 cout << -1 << endl;||| 45 }||| 46 return 0;||| 47 }||| 	3 int cntsrc[30];
70	79	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int MOD = 1e9 + 7;||| 4 void solve() {||| 5 string s;||| 6 cin >> s;||| 7 map<char, int> mp;||| 8 for (int i = 0; i < s.length(); i++) {||| 9 mp[s[i]] += 1;||| 10 }||| 11 int dist = mp.size();||| 12 int n = s.length();||| 13 int i = n - 1;||| 14 string rem = """";||| 15 char cur = s[i];||| 16 if (dist != 0 and mp[cur] % dist) {||| 17 cout << -1 << endl;||| 18 return;||| 19 }||| 20 if (dist == 1) {||| 21 cout << s << "" "" << s[0] << endl;||| 22 return;||| 23 }||| 24 int cdist = mp[cur] / dist;||| 25 int match[26] = {0};||| 26 match[cur - 'a'] = cdist;||| 27 string ans = """";||| 28 int vis[26] = {0};||| 29 while (i >= 0) {||| 30 if (cur == s[i]) {||| 31 cdist -= 1;||| 32 }||| 33 if (!cdist) {||| 34 vis[cur - 'a'] = 1;||| 35 rem += cur;||| 36 dist -= 1;||| 37 int pre = i;||| 38 while (i >= 0) {||| 39 if (!vis[s[i] - 'a']) {||| 40 cur = s[i];||| 41 i += 1;||| 42 break;||| 43 }||| 44 i -= 1;||| 45 }||| 46 if (dist != 0 and mp[cur] % dist) {||| 47 cout << -1 << endl;||| 48 return;||| 49 }||| 50 cdist = mp[cur] / dist;||| 51 match[cur - 'a'] = cdist;||| 52 if (dist == 1 or dist == 0) {||| 53 rem += cur;||| 54 break;||| 55 }||| 56 }||| 57 i -= 1;||| 58 }||| 59 int match1[26] = {0};||| 60 for (int i = 0; i < n; i++) {||| 61 bool f = true;||| 62 match1[s[i] - 'a'] += 1;||| 63 ans += s[i];||| 64 for (int j = 0; j < 26; j++) {||| 65 if (match1[j] != match[j]) {||| 66 f = false;||| 67 break;||| 68 }||| 69 }||| 70 if (f) {||| 71 break;||| 72 }||| 73 }||| 74 reverse(rem.begin(), rem.end());||| 75 string cs = ans;||| 76 string tot = cs;||| 77 for (int k = 0; k < mp.size(); k++) {||| 78 string ns = """";||| 79 char c = rem[k];||| 80 for (int i = 0; i < cs.length(); i++) {||| 81 if (cs[i] == c) continue;||| 82 ns += cs[i];||| 83 }||| 84 tot = tot + ns;||| 85 cs = ns;||| 86 }||| 87 if (tot != s) {||| 88 cout << -1 << endl;||| 89 return;||| 90 }||| 91 cout << ans << "" "" << rem << endl;||| 92 return;||| 93 }||| 94 int main() {||| 95 ios_base::sync_with_stdio(false);||| 96 cin.tie(NULL);||| 97 int t = 1;||| 98 cin >> t;||| 99 while (t--) {||| 100 solve();||| 101 }||| 102 return 0;||| 103 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int MOD = 1e9 + 7;||| 4 void solve() {||| 5 string s;||| 6 cin >> s;||| 7 map<char, int> mp;||| 8 for (int i = 0; i < s.length(); i++) {||| 9 mp[s[i]] += 1;||| 10 }||| 11 int dist = mp.size();||| 12 int n = s.length();||| 13 int i = n - 1;||| 14 string rem = """";||| 15 char cur = s[i];||| 16 if (dist != 0 and mp[cur] % dist) {||| 17 cout << -1 << endl;||| 18 return;||| 19 }||| 20 if (dist == 1) {||| 21 cout << s << "" "" << s[0] << endl;||| 22 return;||| 23 }||| 24 int cdist = mp[cur] / dist;||| 25 int match[26] = {0};||| 26 match[cur - 'a'] = cdist;||| 27 string ans = """";||| 28 int vis[26] = {0};||| 29 while (i >= 0) {||| 30 if (cur == s[i]) {||| 31 cdist -= 1;||| 32 }||| 33 if (!cdist) {||| 34 vis[cur - 'a'] = 1;||| 35 rem += cur;||| 36 dist -= 1;||| 37 int pre = i;||| 38 while (i != 0) {||| 39 if (!vis[s[i] - 'a']) {||| 40 cur = s[i];||| 41 i += 1;||| 42 break;||| 43 }||| 44 i -= 1;||| 45 }||| 46 if (dist != 0 and mp[cur] % dist) {||| 47 cout << -1 << endl;||| 48 return;||| 49 }||| 50 cdist = mp[cur] / dist;||| 51 match[cur - 'a'] = cdist;||| 52 if (dist == 1 or dist == 0) {||| 53 rem += cur;||| 54 break;||| 55 }||| 56 }||| 57 i -= 1;||| 58 }||| 59 int match1[26] = {0};||| 60 for (int i = 0; i < n; i++) {||| 61 bool f = true;||| 62 match1[s[i] - 'a'] += 1;||| 63 ans += s[i];||| 64 for (int j = 0; j < 26; j++) {||| 65 if (match1[j] != match[j]) {||| 66 f = false;||| 67 break;||| 68 }||| 69 }||| 70 if (f) {||| 71 break;||| 72 }||| 73 }||| 74 reverse(rem.begin(), rem.end());||| 75 string cs = ans;||| 76 string tot = ans;||| 77 for (int k = 0; k < mp.size(); k++) {||| 78 string ns = """";||| 79 char c = rem[k];||| 80 for (int i = 0; i < cs.length(); i++) {||| 81 if (cs[i] == c) continue;||| 82 ns += cs[i];||| 83 }||| 84 tot = tot + ns;||| 85 cs = ns;||| 86 }||| 87 if (tot != s) {||| 88 cout << -1 << endl;||| 89 return;||| 90 }||| 91 cout << ans << "" "" << rem << endl;||| 92 return;||| 93 }||| 94 int main() {||| 95 ios_base::sync_with_stdio(false);||| 96 cin.tie(NULL);||| 97 int t = 1;||| 98 cin >> t;||| 99 while (t--) {||| 100 solve();||| 101 }||| 102 return 0;||| 103 }||| "	38 while (i >= 0) {
70	78	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,unroll-loops"")||| 3 using namespace std;||| 4 using vll = vector<long long>;||| 5 using vi = vector<int>;||| 6 long long mod = 1000000007;||| 7 long long mod2 = 998244353;||| 8 long long ipow(long long base, long long k, long long M) {||| 9 base %= M;||| 10 k = k % (M - 1);||| 11 long long total = 1;||| 12 while (k) {||| 13 if (k & 1) {||| 14 total = (total * base) % M;||| 15 }||| 16 base = (base * base) % M;||| 17 k >>= 1;||| 18 }||| 19 return total;||| 20 }||| 21 long long fact(long long n) {||| 22 long long ans = 1;||| 23 for (long long i = 1; i <= n; i++) {||| 24 ans = ans * i;||| 25 ans = ans % mod;||| 26 }||| 27 return ans;||| 28 }||| 29 long long modu(long long a, long long b) {||| 30 long long c = a % b;||| 31 return (c < 0) ? c + b : c;||| 32 }||| 33 void solve() {||| 34 string s;||| 35 cin >> s;||| 36 long long n = s.length();||| 37 map<char, long long> cnt;||| 38 vector<char> order;||| 39 for (long long i = n - 1; i >= 0; i--) {||| 40 if (cnt[s[i]] == 0) {||| 41 order.push_back(s[i]);||| 42 }||| 43 cnt[s[i]]++;||| 44 }||| 45 long long ct = order.size();||| 46 map<char, long long> times;||| 47 for (long long i = 0; i < order.size(); i++) {||| 48 if (cnt[order[i]] % ct != 0) {||| 49 cout << -1 << ""\n"";||| 50 return;||| 51 }||| 52 times[order[i]] = cnt[order[i]] / ct;||| 53 ct--;||| 54 }||| 55 cnt.clear();||| 56 long long good = 0;||| 57 string t = """";||| 58 for (long long i = 0; i < n; i++) {||| 59 cnt[s[i]]++;||| 60 t.push_back(s[i]);||| 61 if (cnt[s[i]] > times[s[i]]) {||| 62 cout << -1 << ""\n"";||| 63 return;||| 64 }||| 65 if (cnt[s[i]] == times[s[i]]) good++;||| 66 if (good == order.size()) break;||| 67 }||| 68 long long ind = t.length();||| 69 map<char, bool> vis;||| 70 for (long long i = order.size() - 1; i >= 0; i--) {||| 71 vis[order[i]] = 1;||| 72 for (long long j = 0; j < t.length(); j++) {||| 73 if (vis[t[j]]) continue;||| 74 if (t[j] != s[ind++]) {||| 75 cout << -1 << ""\n"";||| 76 return;||| 77 }||| 78 }||| 79 }||| 80 if (ind != s.length()) {||| 81 cout << -1 << ""\n"";||| 82 return;||| 83 }||| 84 cout << t << "" "";||| 85 for (long long i = order.size() - 1; i >= 0; i--) cout << order[i];||| 86 cout << ""\n"";||| 87 }||| 88 int main() {||| 89 ios_base::sync_with_stdio(false);||| 90 cin.tie(NULL);||| 91 cout.tie(NULL);||| 92 long long tc = 1;||| 93 cin >> tc;||| 94 long long caseno = 1;||| 95 while (tc--) {||| 96 solve();||| 97 caseno++;||| 98 }||| 99 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast,unroll-loops"")||| 3 using namespace std;||| 4 using vll = vector<long long>;||| 5 using vi = vector<int>;||| 6 long long mod = 1000000007;||| 7 long long mod2 = 998244353;||| 8 long long ipow(long long base, long long k, long long M) {||| 9 base %= M;||| 10 k = k % (M - 1);||| 11 long long total = 1;||| 12 while (k) {||| 13 if (k & 1) {||| 14 total = (total * base) % M;||| 15 }||| 16 base = (base * base) % M;||| 17 k >>= 1;||| 18 }||| 19 return total;||| 20 }||| 21 long long fact(long long n) {||| 22 long long ans = 1;||| 23 for (long long i = 1; i <= n; i++) {||| 24 ans = ans * i;||| 25 ans = ans % mod;||| 26 }||| 27 return ans;||| 28 }||| 29 long long modu(long long a, long long b) {||| 30 long long c = a % b;||| 31 return (c < 0) ? c + b : c;||| 32 }||| 33 void solve() {||| 34 string s;||| 35 cin >> s;||| 36 long long n = s.length();||| 37 map<char, long long> cnt;||| 38 vector<char> order;||| 39 for (long long i = n - 1; i >= 0; i--) {||| 40 if (cnt[s[i]] == 0) {||| 41 order.push_back(s[i]);||| 42 }||| 43 cnt[s[i]]++;||| 44 }||| 45 long long ct = order.size();||| 46 map<char, long long> times;||| 47 for (long long i = 0; i < order.size(); i++) {||| 48 if (cnt[order[i]] % ct != 0) {||| 49 cout << -1 << ""\n"";||| 50 return;||| 51 }||| 52 times[order[i]] = cnt[order[i]] / ct;||| 53 ct--;||| 54 }||| 55 cnt.clear();||| 56 long long good = 0;||| 57 string t = """";||| 58 for (long long i = 0; i < n; i++) {||| 59 cnt[s[i]]++;||| 60 t.push_back(s[i]);||| 61 if (cnt[s[i]] > times[s[i]]) {||| 62 cout << -1 << "" nig\n"";||| 63 return;||| 64 }||| 65 if (cnt[s[i]] == times[s[i]]) good++;||| 66 if (good == order.size()) break;||| 67 }||| 68 long long ind = t.length();||| 69 map<char, bool> vis;||| 70 for (long long i = order.size() - 1; i >= 0; i--) {||| 71 vis[order[i]] = 1;||| 72 for (long long j = 0; j < t.length(); j++) {||| 73 if (vis[t[j]]) continue;||| 74 if (t[j] != s[ind++]) {||| 75 cout << -1 << ""\n"";||| 76 return;||| 77 }||| 78 }||| 79 }||| 80 if (ind != s.length()) {||| 81 cout << -1 << ""\n"";||| 82 return;||| 83 }||| 84 cout << t << "" "";||| 85 for (long long i = order.size() - 1; i >= 0; i--) cout << order[i];||| 86 cout << ""\n"";||| 87 }||| 88 int main() {||| 89 ios_base::sync_with_stdio(false);||| 90 cin.tie(NULL);||| 91 cout.tie(NULL);||| 92 long long tc = 1;||| 93 cin >> tc;||| 94 long long caseno = 1;||| 95 while (tc--) {||| 96 solve();||| 97 caseno++;||| 98 }||| 99 }||| "	"62 cout << -1 << ""\n"";"
71	264	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 set<int> ans1, ans2;||| 4 int x1, x2;||| 5 void rec(int i, int x) {||| 6 ans1.insert(x);||| 7 if (x1 == x2) {||| 8 ans2.insert(x);||| 9 }||| 10 if (i == 9) {||| 11 return;||| 12 }||| 13 rec(i + 1, x * 10 + x1);||| 14 rec(i + 1, x * 10 + x2);||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 int t, n, k;||| 20 cin >> t;||| 21 for (x1 = 0; x1 <= 9; x1++) {||| 22 for (x2 = 0; x2 <= 9; x2++) {||| 23 rec(0, 0);||| 24 }||| 25 }||| 26 while (t--) {||| 27 cin >> n >> k;||| 28 if (n == 1e9) {||| 29 if (k == 2)||| 30 cout << n << ""\n"";||| 31 else||| 32 cout << ""1111111111\n"";||| 33 continue;||| 34 }||| 35 if (k == 1) {||| 36 cout << (*ans2.lower_bound(n)) << ""\n"";||| 37 } else {||| 38 cout << (*ans1.lower_bound(n)) << ""\n"";||| 39 }||| 40 }||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 set<int> ans1, ans2;||| 4 int x1, x2;||| 5 void rec(int i, int x) {||| 6 ans1.insert(x);||| 7 if (x1 == x2) {||| 8 ans2.insert(x);||| 9 }||| 10 if (i == 9) {||| 11 return;||| 12 }||| 13 rec(i + 1, x * 10 + x1);||| 14 rec(i + 1, x * 10 + x2);||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 int t, n, k;||| 20 cin >> t;||| 21 for (x1 = 0; x1 <= 9; x1++) {||| 22 for (x2 = 0; x2 <= 9; x2++) {||| 23 rec(0, 0);||| 24 }||| 25 }||| 26 while (t--) {||| 27 cin >> n >> k;||| 28 if (n == 1e9) {||| 29 if (k == 2)||| 30 cout << n << ""\n"";||| 31 else||| 32 cout << ""111111111\n"";||| 33 continue;||| 34 }||| 35 if (k == 1) {||| 36 cout << (*ans2.lower_bound(n)) << ""\n"";||| 37 } else {||| 38 cout << (*ans1.lower_bound(n)) << ""\n"";||| 39 }||| 40 }||| 41 }||| "	"32 cout << ""1111111111\n"";"
71	224	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[150];||| 4 int vis[10];||| 5 long long ans, len;||| 6 string s;||| 7 void dfs(int p, int k, long long n, int f) {||| 8 if (k == -1) return;||| 9 if (p >= len) {||| 10 ans = min(ans, n);||| 11 return;||| 12 }||| 13 if (f) {||| 14 int mn;||| 15 if (k)||| 16 mn = 0;||| 17 else {||| 18 for (int i = 0; i < 10; i++) {||| 19 if (vis[i]) {||| 20 mn = i;||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 for (int i = p; i < len; i++) n = n * 10 + mn;||| 26 ans = min(ans, n);||| 27 return;||| 28 }||| 29 ++vis[s[p] - '0'];||| 30 dfs(p + 1, k - (vis[s[p] - '0'] == 1), n * 10 + s[p] - '0', 0);||| 31 --vis[s[p] - '0'];||| 32 if (s[p] != '9') {||| 33 ++vis[s[p] - '0' + 1];||| 34 dfs(p + 1, k - (vis[s[p] - '0' + 1] == 1), n * 10 + s[p] - '0' + 1, 1);||| 35 --vis[s[p] - '0' + 1];||| 36 }||| 37 int fd = 0;||| 38 for (int i = s[p] - '0' + 2; i < 10; i++) {||| 39 if (vis[i]) {||| 40 fd = i;||| 41 break;||| 42 }||| 43 }||| 44 if (fd) {||| 45 ++vis[fd];||| 46 dfs(p + 1, k, n * 10 + fd, 1);||| 47 --vis[fd];||| 48 }||| 49 }||| 50 int main() {||| 51 ios::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t;||| 55 cin >> t;||| 56 while (t--) {||| 57 int n, k;||| 58 cin >> n >> k;||| 59 s = to_string(n);||| 60 len = s.size();||| 61 ans = 2e9;||| 62 dfs(0, k, 0, 0);||| 63 cout << ans << '\n';||| 64 }||| 65 return 0;||| 66 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[150];||| 4 int vis[10];||| 5 long long ans, len;||| 6 string s;||| 7 void dfs(int p, int k, long long n, int f) {||| 8 if (k == -1) return;||| 9 if (p >= len) {||| 10 ans = min(ans, n);||| 11 return;||| 12 }||| 13 if (f) {||| 14 int mn;||| 15 if (k)||| 16 mn = 0;||| 17 else {||| 18 for (int i = 0; i < 10; i++) {||| 19 if (vis[i]) {||| 20 mn = i;||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 for (int i = p; i < len; i++) n = n * 10 + mn;||| 26 ans = min(ans, n);||| 27 return;||| 28 }||| 29 ++vis[s[p] - '0'];||| 30 dfs(p + 1, k - (vis[s[p] - '0'] == 1), n * 10 + s[p] - '0', 0);||| 31 --vis[s[p] - '0'];||| 32 if (s[p] != '9') {||| 33 ++vis[s[p] - '0' + 1];||| 34 dfs(p + 1, k - (vis[s[p] - '0' + 1] == 1), n * 10 + s[p] - '0' + 1, 1);||| 35 --vis[s[p] - '0' + 1];||| 36 }||| 37 int fd = 0;||| 38 for (int i = s[p] - '0' + 2; i < 10; i++) {||| 39 if (vis[i]) {||| 40 fd = i;||| 41 break;||| 42 }||| 43 }||| 44 if (fd) {||| 45 ++vis[fd];||| 46 dfs(p + 1, k, n * 10 + fd, 1);||| 47 --vis[fd];||| 48 }||| 49 }||| 50 int main() {||| 51 ios::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t;||| 55 cin >> t;||| 56 while (t--) {||| 57 int n, k;||| 58 cin >> n >> k;||| 59 s = to_string(n);||| 60 len = s.size();||| 61 ans = 1 << 30;||| 62 dfs(0, k, 0, 0);||| 63 cout << ans << '\n';||| 64 }||| 65 return 0;||| 66 }||| 	61 ans = 2e9;
71	224	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[150];||| 4 int vis[10];||| 5 long long ans, len;||| 6 string s;||| 7 void dfs(int p, int k, long long n, int f) {||| 8 if (k == -1) return;||| 9 if (p >= len) {||| 10 ans = min(ans, n);||| 11 return;||| 12 }||| 13 if (f) {||| 14 int mn;||| 15 if (k)||| 16 mn = 0;||| 17 else {||| 18 for (int i = 0; i < 10; i++) {||| 19 if (vis[i]) {||| 20 mn = i;||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 for (int i = p; i < len; i++) n = n * 10 + mn;||| 26 ans = min(ans, n);||| 27 return;||| 28 }||| 29 ++vis[s[p] - '0'];||| 30 dfs(p + 1, k - (vis[s[p] - '0'] == 1), n * 10 + s[p] - '0', 0);||| 31 --vis[s[p] - '0'];||| 32 if (s[p] != '9') {||| 33 ++vis[s[p] - '0' + 1];||| 34 dfs(p + 1, k - (vis[s[p] - '0' + 1] == 1), n * 10 + s[p] - '0' + 1, 1);||| 35 --vis[s[p] - '0' + 1];||| 36 }||| 37 int fd = 0;||| 38 for (int i = s[p] - '0' + 2; i < 10; i++) {||| 39 if (vis[i]) {||| 40 fd = i;||| 41 break;||| 42 }||| 43 }||| 44 if (fd) {||| 45 ++vis[fd];||| 46 dfs(p + 1, k, n * 10 + fd, 1);||| 47 --vis[fd];||| 48 }||| 49 }||| 50 int main() {||| 51 ios::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t;||| 55 cin >> t;||| 56 while (t--) {||| 57 int n, k;||| 58 cin >> n >> k;||| 59 s = to_string(n);||| 60 len = s.size();||| 61 ans = 1111111111;||| 62 dfs(0, k, 0, 0);||| 63 cout << ans << '\n';||| 64 }||| 65 return 0;||| 66 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[150];||| 4 int vis[10];||| 5 long long ans, len;||| 6 string s;||| 7 void dfs(int p, int k, long long n, int f) {||| 8 if (k == -1) return;||| 9 if (p >= len) {||| 10 ans = min(ans, n);||| 11 return;||| 12 }||| 13 if (f) {||| 14 int mn;||| 15 if (k)||| 16 mn = 0;||| 17 else {||| 18 for (int i = 0; i < 10; i++) {||| 19 if (vis[i]) {||| 20 mn = i;||| 21 break;||| 22 }||| 23 }||| 24 }||| 25 for (int i = p; i < len; i++) n = n * 10 + mn;||| 26 ans = min(ans, n);||| 27 return;||| 28 }||| 29 ++vis[s[p] - '0'];||| 30 dfs(p + 1, k - (vis[s[p] - '0'] == 1), n * 10 + s[p] - '0', 0);||| 31 --vis[s[p] - '0'];||| 32 if (s[p] != '9') {||| 33 ++vis[s[p] - '0' + 1];||| 34 dfs(p + 1, k - (vis[s[p] - '0' + 1] == 1), n * 10 + s[p] - '0' + 1, 1);||| 35 --vis[s[p] - '0' + 1];||| 36 }||| 37 int fd = 0;||| 38 for (int i = s[p] - '0' + 2; i < 10; i++) {||| 39 if (vis[i]) {||| 40 fd = i;||| 41 break;||| 42 }||| 43 }||| 44 if (fd) {||| 45 ++vis[fd];||| 46 dfs(p + 1, k, n * 10 + fd, 1);||| 47 --vis[fd];||| 48 }||| 49 }||| 50 int main() {||| 51 ios::sync_with_stdio(false);||| 52 cin.tie(0);||| 53 cout.tie(0);||| 54 int t;||| 55 cin >> t;||| 56 while (t--) {||| 57 int n, k;||| 58 cin >> n >> k;||| 59 s = to_string(n);||| 60 len = s.size();||| 61 ans = 1 << 30;||| 62 dfs(0, k, 0, 0);||| 63 cout << ans << '\n';||| 64 }||| 65 return 0;||| 66 }||| 	61 ans = 1111111111;
71	91	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std;||| 4 const int N = 500005;||| 5 const long long Mod = 1e9 + 7;||| 6 int main() {||| 7 int t, k;||| 8 string n;||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n >> k;||| 12 string ans;||| 13 for (char a = '0'; a <= '9'; a++) {||| 14 string t(n.length(), a);||| 15 if (t >= n) {||| 16 ans = t;||| 17 break;||| 18 }||| 19 }||| 20 if (k == 1) {||| 21 cout << ans << endl;||| 22 } else {||| 23 for (char a = '0'; a <= '9'; a++) {||| 24 for (char b = a + 1; b <= '9'; b++) {||| 25 bool ok = true;||| 26 for (int i = 0; i < n.length(); i++) {||| 27 if (n[i] < b) {||| 28 string t = n;||| 29 if (n[i] < a)||| 30 t[i] = a;||| 31 else||| 32 t[i] = b;||| 33 for (int j = i + 1; j < n.length(); j++) {||| 34 t[j] = a;||| 35 }||| 36 if (ans > t) ans = t;||| 37 }||| 38 if (n[i] != a && n[i] != b) {||| 39 ok = false;||| 40 break;||| 41 }||| 42 }||| 43 if (ok) ans = n;||| 44 }||| 45 }||| 46 cout << ans << endl;||| 47 }||| 48 }||| 49 return 0;||| 50 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std;||| 4 const int N = 500005;||| 5 const long long Mod = 1e9 + 7;||| 6 int main() {||| 7 int t, k;||| 8 string n;||| 9 cin >> t;||| 10 while (t--) {||| 11 cin >> n >> k;||| 12 string ans;||| 13 for (char a = '0'; a <= '9'; a++) {||| 14 string t(n.length(), a);||| 15 if (t >= n) {||| 16 ans = t;||| 17 break;||| 18 }||| 19 }||| 20 if (k == 1) {||| 21 cout << ans << endl;||| 22 } else {||| 23 for (char a = '0'; a <= '9'; a++) {||| 24 for (char b = a + 1; b <= '9'; b++) {||| 25 bool ok = true;||| 26 for (int i = 0; i < n.length(); i++) {||| 27 if (n[i] < b) {||| 28 string t = n;||| 29 if (n[i] < a)||| 30 t[i] = a;||| 31 else||| 32 t[i] = b;||| 33 for (int j = i + 1; j < n.length(); j++) {||| 34 t[j] = a;||| 35 }||| 36 if (ans > t) ans = t;||| 37 }||| 38 if (n[i] != a && n[i] != b) {||| 39 ok = false;||| 40 break;||| 41 }||| 42 }||| 43 if (ok) ans = n;||| 44 }||| 45 }||| 46 }||| 47 cout << ans << endl;||| 48 }||| 49 return 0;||| 50 }||| 	46 cout << ans << endl;
72	170	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int L, m;||| 4 char a[1000];||| 5 int pan() {||| 6 int j, i;||| 7 set<char> s;||| 8 for (i = 0; i < L; i++) {||| 9 s.insert(a[i]);||| 10 }||| 11 if (s.size() > m)||| 12 return 1;||| 13 else||| 14 return 0;||| 15 }||| 16 int main() {||| 17 int j, i, w;||| 18 scanf(""%d"", &w);||| 19 while (w--) {||| 20 scanf(""%s %d"", a, &m);||| 21 L = strlen(a);||| 22 i = 0;||| 23 while (pan()) {||| 24 set<char> s;||| 25 for (i = 0; i < L; i++) {||| 26 s.insert(a[i]);||| 27 if (s.size() > m) {||| 28 while (a[i] == '9') i--;||| 29 a[i]++;||| 30 for (j = i + 1; j < L; j++) a[j] = '0';||| 31 break;||| 32 }||| 33 }||| 34 }||| 35 printf(""%s\n"", a);||| 36 }||| 37 return 0;||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int L, m;||| 4 char a[1000];||| 5 int pan() {||| 6 int j, i;||| 7 set<char> s;||| 8 for (i = 0; i < L; i++) {||| 9 s.insert(a[i]);||| 10 }||| 11 if (s.size() > m)||| 12 return 1;||| 13 else||| 14 return 0;||| 15 }||| 16 int main() {||| 17 int j, i, w;||| 18 scanf(""%d"", &w);||| 19 while (w--) {||| 20 scanf(""%s %d"", a, &m);||| 21 L = strlen(a);||| 22 i = 0;||| 23 while (pan()) {||| 24 set<char> s;||| 25 for (i = 0; i < L; i++) {||| 26 s.insert(a[i]);||| 27 if (s.size() > m) {||| 28 while (a[i] == '9') i--;||| 29 a[i]++;||| 30 for (j = i + 1; j < L; j++) a[j] = '0';||| 31 break;||| 32 }||| 33 }||| 34 }||| 35 printf(""**** %s\n"", a);||| 36 }||| 37 return 0;||| 38 }||| "	"35 printf(""%s\n"", a);"
72	115	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[4] = {1, -1, 0, 0};||| 4 int dy[4] = {0, 0, 1, -1};||| 5 long long gcd(long long a, long long b) {||| 6 for (; b; a %= b, swap(a, b))||| 7 ;||| 8 return a;||| 9 }||| 10 int main(void) {||| 11 ios::sync_with_stdio(0);||| 12 cin.tie(0), cout.tie(0);||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 string n;||| 17 int k;||| 18 cin >> n;||| 19 cin >> k;||| 20 while (true) {||| 21 set<char> s;||| 22 for (int i = 0; i < n.size(); i++) s.insert(n[i]);||| 23 if (s.size() <= k) {||| 24 cout << n << ""\n"";||| 25 break;||| 26 }||| 27 s.clear();||| 28 int ptr = 0;||| 29 while (true) {||| 30 s.insert(n[ptr]);||| 31 if (s.size() > k) {||| 32 while (n[ptr] == '9') ptr--;||| 33 n[ptr]++;||| 34 for (int i = ptr + 1; i < n.size(); i++) n[i] = '0';||| 35 break;||| 36 }||| 37 ptr++;||| 38 }||| 39 }||| 40 }||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int dx[4] = {1, -1, 0, 0};||| 4 int dy[4] = {0, 0, 1, -1};||| 5 long long gcd(long long a, long long b) {||| 6 for (; b; a %= b, swap(a, b))||| 7 ;||| 8 return a;||| 9 }||| 10 int main(void) {||| 11 ios::sync_with_stdio(0);||| 12 cin.tie(0), cout.tie(0);||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 string n;||| 17 int k;||| 18 cin >> n;||| 19 cin >> k;||| 20 while (true) {||| 21 set<char> s;||| 22 for (int i = 0; i < n.size(); i++) s.insert(n[i]);||| 23 if (s.size() <= k) {||| 24 cout << n << ""\n"";||| 25 break;||| 26 }||| 27 s.clear();||| 28 int ptr = 0;||| 29 while (true) {||| 30 s.insert(n[ptr]);||| 31 if (s.size() > k) {||| 32 while (n[ptr] == '9') ptr--;||| 33 n[ptr]++;||| 34 for (int i = ptr + 1; i < n.size(); i++) n[i] = 0;||| 35 break;||| 36 }||| 37 ptr++;||| 38 }||| 39 }||| 40 }||| 41 }||| "	34 for (int i = ptr + 1; i < n.size(); i++) n[i] = '0';
72	101	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long vis[10];||| 4 vector<char> ans;||| 5 string f;||| 6 long long mx = -1;||| 7 void go() {||| 8 string res = """";||| 9 vis[f[0] - '0']++;||| 10 string ff = f;||| 11 mx = max(mx, f[0] - '0' + 0ll);||| 12 for (int i = 0; i < f.size(); i++) {||| 13 if (f[i] - '0' > mx) {||| 14 bool flag = 0;||| 15 for (int j = res.size() - 1; j >= 1; j--) {||| 16 if (res[j] - '0' < mx) {||| 17 for (int k = 0; k <= 9; k++) {||| 18 if (k > res[j] - '0' && vis[k] > 0) {||| 19 res[j] = '0' + k;||| 20 flag = 1;||| 21 break;||| 22 }||| 23 }||| 24 if (flag == 0) break;||| 25 for (int k = 0; k <= j; k++) cout << res[k];||| 26 for (int k = j + 1; k < f.size(); k++) {||| 27 for (int z = 0; z <= 9; z++) {||| 28 if (vis[z] > 0) {||| 29 cout << z;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 return;||| 35 }||| 36 }||| 37 if (flag) return;||| 38 vis[ff[0] - '0']--;||| 39 if (vis[ff[0] - '0' + 1] == 0)||| 40 vis[ff[0] - '0' + 1]++;||| 41 else||| 42 vis[0]++;||| 43 ff[0]++;||| 44 cout << ff[0];||| 45 for (int j = 0; j < ff.size() - 1; j++) {||| 46 for (int z = 0; z <= 9; z++) {||| 47 if (vis[z] > 0) {||| 48 cout << z;||| 49 break;||| 50 }||| 51 }||| 52 }||| 53 return;||| 54 }||| 55 if (f[i] - '0' <= mx) {||| 56 for (int z = 0; z <= 9; z++) {||| 57 if (z >= f[i] - '0' && vis[z] > 0) {||| 58 res += ('0' + z);||| 59 if (z > f[i] - '0') {||| 60 mx = 1000;||| 61 if (i + 1 < f.size()) {||| 62 f[i + 1] = '0';||| 63 f[i + 1]--;||| 64 }||| 65 }||| 66 break;||| 67 }||| 68 }||| 69 }||| 70 }||| 71 cout << res;||| 72 return;||| 73 }||| 74 int main() {||| 75 long long Q;||| 76 cin >> Q;||| 77 while (Q--) {||| 78 mx = -1;||| 79 memset(vis, 0, sizeof vis);||| 80 ans.clear();||| 81 long long n, k;||| 82 cin >> n >> k;||| 83 string s = """";||| 84 while (n != 0) {||| 85 s += '0' + n % 10;||| 86 n /= 10;||| 87 }||| 88 reverse(s.begin(), s.end());||| 89 int i = 0;||| 90 for (i = 0; i < s.size(); i++) {||| 91 if (k == 1 && i == 0) break;||| 92 if (k == 1) {||| 93 while (i < s.size() && vis[s[i] - '0'] > 0) {||| 94 ans.push_back(s[i]);||| 95 i++;||| 96 }||| 97 break;||| 98 }||| 99 if (vis[s[i] - '0'] == 0) {||| 100 vis[s[i] - '0']++;||| 101 k--;||| 102 mx = max(mx, s[i] - '0' + 0ll);||| 103 }||| 104 ans.push_back(s[i]);||| 105 }||| 106 f = """";||| 107 for (int j = i; j < s.size(); j++) {||| 108 f += s[j];||| 109 }||| 110 for (int i = 0; i < ans.size(); i++) cout << ans[i];||| 111 if (f.size() > 0) go();||| 112 cout << endl;||| 113 }||| 114 return 0;||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long vis[10];||| 4 vector<char> ans;||| 5 string f;||| 6 long long mx = -1;||| 7 void go() {||| 8 string res = """";||| 9 vis[f[0] - '0']++;||| 10 string ff = f;||| 11 mx = max(mx, f[0] - '0' + 0ll);||| 12 for (int i = 0; i < f.size(); i++) {||| 13 if (f[i] - '0' > mx) {||| 14 bool flag = 0;||| 15 for (int j = res.size() - 1; j >= 1; j--) {||| 16 if (res[j] - '0' < mx) {||| 17 for (int k = 0; k <= 9; k++) {||| 18 if (k > res[j] - '0' && vis[k] > 0) {||| 19 res[j] = '0' + k;||| 20 flag = 1;||| 21 break;||| 22 }||| 23 }||| 24 if (flag == 0) break;||| 25 for (int k = 0; k <= j; k++) cout << res[k];||| 26 for (int k = j + 1; k < f.size(); k++) {||| 27 for (int z = 0; z <= 9; z++) {||| 28 if (vis[z] > 0) {||| 29 cout << z;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 }||| 35 return;||| 36 }||| 37 if (flag) return;||| 38 vis[ff[0] - '0']--;||| 39 if (vis[ff[0] - '0' + 1] == 0)||| 40 vis[ff[0] - '0' + 1]++;||| 41 else||| 42 vis[0]++;||| 43 ff[0]++;||| 44 cout << ff[0];||| 45 for (int j = 0; j < ff.size() - 1; j++) {||| 46 for (int z = 0; z <= 9; z++) {||| 47 if (vis[z] > 0) {||| 48 cout << z;||| 49 break;||| 50 }||| 51 }||| 52 }||| 53 return;||| 54 }||| 55 if (f[i] - '0' <= mx) {||| 56 for (int z = 0; z <= 9; z++) {||| 57 if (z >= f[i] - '0' && vis[z] > 0) {||| 58 res += ('0' + z);||| 59 if (z > f[i] - '0') {||| 60 mx = 1000;||| 61 if (i + 1 < f.size()) {||| 62 f[i + 1] = '0';||| 63 f[i + 1]--;||| 64 }||| 65 }||| 66 break;||| 67 }||| 68 }||| 69 }||| 70 }||| 71 cout << res;||| 72 return;||| 73 }||| 74 int main() {||| 75 long long Q;||| 76 cin >> Q;||| 77 while (Q--) {||| 78 mx = -1;||| 79 memset(vis, 0, sizeof vis);||| 80 ans.clear();||| 81 long long n, k;||| 82 cin >> n >> k;||| 83 string s = """";||| 84 while (n != 0) {||| 85 s += '0' + n % 10;||| 86 n /= 10;||| 87 }||| 88 reverse(s.begin(), s.end());||| 89 int i = 0;||| 90 for (i = 0; i < s.size(); i++) {||| 91 if (k == 1 && i == 0) break;||| 92 if (k == 1) {||| 93 while (i < s.size() && vis[s[i] - '0'] > 0) {||| 94 ans.push_back(s[i]);||| 95 i++;||| 96 }||| 97 break;||| 98 }||| 99 if (vis[s[i] - '0'] == 0) {||| 100 vis[s[i] - '0']++;||| 101 k--;||| 102 mx = max(mx, s[i] - '0' + 0ll);||| 103 }||| 104 ans.push_back(s[i]);||| 105 }||| 106 f = """";||| 107 for (int j = i; j < s.size(); j++) {||| 108 f += s[j];||| 109 }||| 110 for (int i = 0; i < ans.size(); i++) cout << ans[i];||| 111 if (f.size() > 0) go();||| 112 cout << endl;||| 113 }||| 114 return 0;||| 115 }||| "	34 return;
72	135	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long vis[10];||| 4 vector<char> ans;||| 5 string f;||| 6 long long mx = -1;||| 7 void go() {||| 8 string res = """";||| 9 vis[f[0] - '0']++;||| 10 string ff = f;||| 11 mx = max(mx, f[0] - '0' + 0ll);||| 12 for (int i = 0; i < f.size(); i++) {||| 13 if (f[i] - '0' > mx) {||| 14 bool flag = 0;||| 15 for (int j = res.size() - 1; j >= 1; j--) {||| 16 if (res[j] - '0' < mx) {||| 17 for (int k = 0; k <= 9; k++) {||| 18 if (k > res[j] - '0' && vis[k] > 0) {||| 19 res[j] = '0' + k;||| 20 flag = 1;||| 21 break;||| 22 }||| 23 }||| 24 if (flag == 0) break;||| 25 for (int k = 0; k <= j; k++) cout << res[k];||| 26 for (int k = j + 1; k < f.size(); k++) {||| 27 for (int z = 0; z <= 9; z++) {||| 28 if (vis[z] > 0) {||| 29 cout << z;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 return;||| 35 }||| 36 }||| 37 if (flag) return;||| 38 vis[ff[0] - '0']--;||| 39 if (vis[ff[0] - '0' + 1] == 0)||| 40 vis[ff[0] - '0' + 1]++;||| 41 else||| 42 vis[0]++;||| 43 ff[0]++;||| 44 cout << ff[0];||| 45 for (int j = 0; j < ff.size() - 1; j++) {||| 46 for (int z = 0; z <= 9; z++) {||| 47 if (vis[z] > 0) {||| 48 cout << z;||| 49 break;||| 50 }||| 51 }||| 52 }||| 53 return;||| 54 }||| 55 if (f[i] - '0' <= mx) {||| 56 for (int z = 0; z <= 9; z++) {||| 57 if (z >= f[i] - '0' && vis[z] > 0) {||| 58 res += ('0' + z);||| 59 if (z > f[i] - '0') {||| 60 mx = 1000;||| 61 if (i + 1 < f.size()) {||| 62 f[i + 1] = '0';||| 63 f[i + 1]--;||| 64 }||| 65 }||| 66 break;||| 67 }||| 68 }||| 69 }||| 70 }||| 71 cout << res;||| 72 return;||| 73 }||| 74 int main() {||| 75 long long Q;||| 76 cin >> Q;||| 77 while (Q--) {||| 78 mx = -1;||| 79 memset(vis, 0, sizeof vis);||| 80 ans.clear();||| 81 long long n, k;||| 82 cin >> n >> k;||| 83 string s = """";||| 84 while (n != 0) {||| 85 s += '0' + n % 10;||| 86 n /= 10;||| 87 }||| 88 reverse(s.begin(), s.end());||| 89 int i = 0;||| 90 for (i = 0; i < s.size(); i++) {||| 91 if (k == 1 && i == 0) break;||| 92 if (k == 1) {||| 93 while (i < s.size() && vis[s[i] - '0'] > 0) {||| 94 ans.push_back(s[i]);||| 95 i++;||| 96 }||| 97 break;||| 98 }||| 99 if (vis[s[i] - '0'] == 0) {||| 100 vis[s[i] - '0']++;||| 101 k--;||| 102 mx = max(mx, s[i] - '0' + 0ll);||| 103 }||| 104 ans.push_back(s[i]);||| 105 }||| 106 f = """";||| 107 for (int j = i; j < s.size(); j++) {||| 108 f += s[j];||| 109 }||| 110 for (int i = 0; i < ans.size(); i++) cout << ans[i];||| 111 if (f.size() > 0) go();||| 112 cout << endl;||| 113 }||| 114 return 0;||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long vis[10];||| 4 vector<char> ans;||| 5 string f;||| 6 long long mx = -1;||| 7 void go() {||| 8 string res = """";||| 9 vis[f[0] - '0']++;||| 10 string ff = f;||| 11 mx = max(mx, f[0] - '0' + 0ll);||| 12 for (int i = 0; i < f.size(); i++) {||| 13 if (f[i] - '0' > mx) {||| 14 bool flag = 0;||| 15 for (int j = res.size() - 1; j >= 1; j--) {||| 16 if (res[j] - '0' < mx) {||| 17 for (int k = 0; k <= 9; k++) {||| 18 if (k > res[j] - '0' && vis[k] > 0) {||| 19 res[j] = '0' + k;||| 20 flag = 1;||| 21 break;||| 22 }||| 23 }||| 24 if (flag == 0) break;||| 25 for (int k = 0; k <= j; k++) cout << res[k];||| 26 for (int k = j + 1; k < f.size(); k++) {||| 27 for (int z = 0; z <= 9; z++) {||| 28 if (vis[z] > 0) {||| 29 cout << z;||| 30 break;||| 31 }||| 32 }||| 33 }||| 34 }||| 35 }||| 36 if (flag) return;||| 37 vis[ff[0] - '0']--;||| 38 if (vis[ff[0] - '0' + 1] == 0)||| 39 vis[ff[0] - '0' + 1]++;||| 40 else||| 41 vis[0]++;||| 42 ff[0]++;||| 43 cout << ff[0];||| 44 for (int j = 0; j < ff.size() - 1; j++) {||| 45 for (int z = 0; z <= 9; z++) {||| 46 if (vis[z] > 0) {||| 47 cout << z;||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 return;||| 53 }||| 54 if (f[i] - '0' <= mx) {||| 55 for (int z = 0; z <= 9; z++) {||| 56 if (z >= f[i] - '0' && vis[z] > 0) {||| 57 res += ('0' + z);||| 58 if (z > f[i] - '0') {||| 59 mx = 1000;||| 60 if (i + 1 < f.size()) {||| 61 f[i + 1] = '0';||| 62 f[i + 1]--;||| 63 }||| 64 }||| 65 break;||| 66 }||| 67 }||| 68 }||| 69 }||| 70 cout << res;||| 71 return;||| 72 }||| 73 int main() {||| 74 long long Q;||| 75 cin >> Q;||| 76 while (Q--) {||| 77 mx = -1;||| 78 memset(vis, 0, sizeof vis);||| 79 ans.clear();||| 80 long long n, k;||| 81 cin >> n >> k;||| 82 string s = """";||| 83 while (n != 0) {||| 84 s += '0' + n % 10;||| 85 n /= 10;||| 86 }||| 87 reverse(s.begin(), s.end());||| 88 int i = 0;||| 89 for (i = 0; i < s.size(); i++) {||| 90 if (k == 1 && i == 0) break;||| 91 if (k == 1) {||| 92 while (i < s.size() && vis[s[i] - '0'] > 0) {||| 93 ans.push_back(s[i]);||| 94 i++;||| 95 }||| 96 break;||| 97 }||| 98 if (vis[s[i] - '0'] == 0) {||| 99 vis[s[i] - '0']++;||| 100 k--;||| 101 mx = max(mx, s[i] - '0' + 0ll);||| 102 }||| 103 ans.push_back(s[i]);||| 104 }||| 105 f = """";||| 106 for (int j = i; j < s.size(); j++) {||| 107 f += s[j];||| 108 }||| 109 for (int i = 0; i < ans.size(); i++) cout << ans[i];||| 110 if (f.size() > 0) go();||| 111 cout << endl;||| 112 }||| 113 return 0;||| 114 }||| "	34 return;
72	26	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string ans, a;||| 4 int n, k;||| 5 bool go(int i, int n, int k, set<int> &s, int gr) {||| 6 if (i == n) return true;||| 7 int val = a[i] - '0';||| 8 if (gr == 1) {||| 9 int x = 0;||| 10 if (s.size() == k) {||| 11 x = (*s.begin());||| 12 }||| 13 ans.push_back((char)(x + '0'));||| 14 int flag = 0;||| 15 if (s.empty() == true || s.find(x) == s.end()) {||| 16 s.insert(x);||| 17 } else {||| 18 flag = 1;||| 19 }||| 20 if (go(i + 1, n, k, s, gr) == true)||| 21 return true;||| 22 else {||| 23 if (flag == 0) {||| 24 s.erase(x);||| 25 }||| 26 ans.pop_back();||| 27 return false;||| 28 }||| 29 }||| 30 if (s.size() == k) {||| 31 if (s.lower_bound(val) == s.end()) {||| 32 return false;||| 33 }||| 34 int ins = (*s.lower_bound(val)) + '0';||| 35 int nextgr = 0;||| 36 nextgr = ((ins - '0') == val) ? 0 : 1;||| 37 ans.push_back(ins);||| 38 if (go(i + 1, n, k, s, nextgr) == true)||| 39 return true;||| 40 else {||| 41 ans.pop_back();||| 42 if (s.upper_bound(val) == s.end())||| 43 return false;||| 44 else {||| 45 ans.push_back((*s.upper_bound(val)) + '0');||| 46 if (go(i + 1, n, k, s, 1) == true)||| 47 return true;||| 48 else {||| 49 ans.pop_back();||| 50 return false;||| 51 }||| 52 }||| 53 }||| 54 }||| 55 int flag = 0;||| 56 ans.push_back(a[i]);||| 57 if (s.empty() == true || s.find(val) == s.end())||| 58 s.insert(val);||| 59 else||| 60 flag = 1;||| 61 if (go(i + 1, n, k, s, gr) == true)||| 62 return true;||| 63 else {||| 64 ans.pop_back();||| 65 if (flag == 0) s.erase(val);||| 66 int flag2 = 0;||| 67 if (s.empty() == true || s.find((val + 1) % 10) == s.end())||| 68 s.insert((val + 1) % 10);||| 69 else||| 70 flag2 = 1;||| 71 ans.push_back((char)((val + 1) % 10 + '0'));||| 72 if (go(i + 1, n, k, s, 1) == true)||| 73 return true;||| 74 else {||| 75 ans.pop_back();||| 76 if (flag2 == 0) s.erase((val + 1) % 10);||| 77 return false;||| 78 }||| 79 }||| 80 }||| 81 void solve() {||| 82 ans = """", a = """";||| 83 cin >> n >> k;||| 84 a = to_string(n);||| 85 set<int> s;||| 86 go(0, a.size(), k, s, 0);||| 87 cout << ans << endl;||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(false);||| 91 cin.tie(NULL);||| 92 cout << fixed << setprecision(10);||| 93 int t = 1;||| 94 cin >> t;||| 95 while (t--) solve();||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 string ans, a;||| 4 int n, k;||| 5 bool go(int i, int n, int k, set<int> &s, int gr) {||| 6 if (i == n) return true;||| 7 int val = a[i] - '0';||| 8 if (gr == 1) {||| 9 int x = 0;||| 10 if (s.size() == k) {||| 11 x = (*s.begin());||| 12 }||| 13 ans.push_back((char)(x + '0'));||| 14 int flag = 0;||| 15 if (s.empty() == true || s.find(x) == s.end()) {||| 16 s.insert(x);||| 17 } else {||| 18 flag = 1;||| 19 }||| 20 if (go(i + 1, n, k, s, gr) == true)||| 21 return true;||| 22 else {||| 23 if (flag == 0) {||| 24 s.erase(x);||| 25 }||| 26 ans.pop_back();||| 27 return false;||| 28 }||| 29 }||| 30 if (s.size() == k) {||| 31 if (s.lower_bound(val) == s.end()) {||| 32 return false;||| 33 }||| 34 int ins = (*s.lower_bound(val)) + '0';||| 35 int nextgr = 0;||| 36 nextgr = ((ins - '0') == val) ? 0 : 1;||| 37 ans.push_back(ins);||| 38 if (go(i + 1, n, k, s, nextgr) == true)||| 39 return true;||| 40 else {||| 41 ans.pop_back();||| 42 if (s.upper_bound(val) == s.end())||| 43 return false;||| 44 else {||| 45 ans.push_back((*s.upper_bound(val)) + '0');||| 46 if (go(i + 1, n, k, s, nextgr) == true)||| 47 return true;||| 48 else {||| 49 ans.pop_back();||| 50 return false;||| 51 }||| 52 }||| 53 }||| 54 }||| 55 int flag = 0;||| 56 ans.push_back(a[i]);||| 57 if (s.empty() == true || s.find(val) == s.end())||| 58 s.insert(val);||| 59 else||| 60 flag = 1;||| 61 if (go(i + 1, n, k, s, gr) == true)||| 62 return true;||| 63 else {||| 64 ans.pop_back();||| 65 if (flag == 0) s.erase(val);||| 66 int flag2 = 0;||| 67 if (s.empty() == true || s.find((val + 1) % 10) == s.end())||| 68 s.insert((val + 1) % 10);||| 69 else||| 70 flag2 = 1;||| 71 ans.push_back((char)((val + 1) % 10 + '0'));||| 72 if (go(i + 1, n, k, s, 1) == true)||| 73 return true;||| 74 else {||| 75 ans.pop_back();||| 76 if (flag2 == 0) s.erase((val + 1) % 10);||| 77 return false;||| 78 }||| 79 }||| 80 }||| 81 void solve() {||| 82 ans = """", a = """";||| 83 cin >> n >> k;||| 84 a = to_string(n);||| 85 set<int> s;||| 86 go(0, a.size(), k, s, 0);||| 87 cout << ans << endl;||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(false);||| 91 cin.tie(NULL);||| 92 cout << fixed << setprecision(10);||| 93 int t = 1;||| 94 cin >> t;||| 95 while (t--) solve();||| 96 }||| "	46 if (go(i + 1, n, k, s, 1) == true)
72	129	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 void file_i_o();||| 5 void solve() {||| 6 int n, k;||| 7 cin >> n >> k;||| 8 string s = to_string(n);||| 9 string check = s;||| 10 int m = s.length();||| 11 while (true) {||| 12 int i = 0;||| 13 set<char> mark;||| 14 while (i < m) {||| 15 mark.insert(s[i]);||| 16 if (mark.size() > k) {||| 17 while (s[i] == '9') i--;||| 18 s[i]++;||| 19 break;||| 20 } else if (s[i] > check[i]) {||| 21 string ans = s.substr(0, i + 1);||| 22 if (mark.size() < k) mark.insert('0');||| 23 for (int j = i + 1; j < m; j++) {||| 24 ans += *mark.begin();||| 25 }||| 26 cout << ans << ""\n"";||| 27 return;||| 28 }||| 29 i++;||| 30 }||| 31 if (i == m) {||| 32 cout << s << ""\n"";||| 33 return;||| 34 }||| 35 }||| 36 }||| 37 void solve2() {||| 38 int n, k;||| 39 cin >> n >> k;||| 40 string s = to_string(n);||| 41 int m = s.length();||| 42 map<char, int> mark;||| 43 set<char> keep;||| 44 int i = 0;||| 45 while (i < m) {||| 46 keep.insert(s[i]);||| 47 mark[s[i]]++;||| 48 if (keep.size() > k) {||| 49 cout << ""i""||| 50 << "" = "" << i << endl;||| 51 while (s[i] == '9') {||| 52 mark[s[i]]--;||| 53 if (mark[s[i]] == 0) mark.erase(s[i]);||| 54 i--;||| 55 }||| 56 mark[s[i]]--;||| 57 if (mark[s[i]] == 0) mark.erase(s[i]);||| 58 s[i]++;||| 59 mark[s[i]]++;||| 60 keep.insert(s[i]);||| 61 if (keep.size() < k) keep.insert('0');||| 62 string ans = s.substr(0, i + 1);||| 63 for (int j = i + 1; j < m; j++) {||| 64 ans += *keep.begin();||| 65 }||| 66 cout << ans << ""\n"";||| 67 return;||| 68 }||| 69 i++;||| 70 }||| 71 cout << n << ""\n"";||| 72 }||| 73 int32_t main(int32_t argc, char const *argv[]) {||| 74 clock_t begin = clock();||| 75 file_i_o();||| 76 int tt = 1;||| 77 cin >> tt;||| 78 while (tt--) {||| 79 solve();||| 80 }||| 81 return 0;||| 82 }||| 83 void file_i_o() {||| 84 ios_base::sync_with_stdio(0);||| 85 cin.tie(0);||| 86 cout.tie(0);||| 87 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 void file_i_o();||| 5 void solve() {||| 6 int n, k;||| 7 cin >> n >> k;||| 8 string s = to_string(n);||| 9 string check = s;||| 10 int m = s.length();||| 11 while (true) {||| 12 int i = 0;||| 13 set<char> mark;||| 14 while (i < m) {||| 15 mark.insert(s[i]);||| 16 if (mark.size() > k) {||| 17 while (s[i] == '9') i--;||| 18 s[i]++;||| 19 break;||| 20 } else if (s[i] > check[i]) {||| 21 string ans = s.substr(0, i + 1);||| 22 if (mark.size() < k) mark.insert(0);||| 23 for (int j = i + 1; j < m; j++) {||| 24 ans += *mark.begin();||| 25 }||| 26 cout << ans << ""\n"";||| 27 return;||| 28 }||| 29 i++;||| 30 }||| 31 if (i == m) {||| 32 cout << s << ""\n"";||| 33 return;||| 34 }||| 35 }||| 36 }||| 37 void solve2() {||| 38 int n, k;||| 39 cin >> n >> k;||| 40 string s = to_string(n);||| 41 int m = s.length();||| 42 map<char, int> mark;||| 43 set<char> keep;||| 44 int i = 0;||| 45 while (i < m) {||| 46 keep.insert(s[i]);||| 47 mark[s[i]]++;||| 48 if (keep.size() > k) {||| 49 cout << ""i""||| 50 << "" = "" << i << endl;||| 51 while (s[i] == '9') {||| 52 mark[s[i]]--;||| 53 if (mark[s[i]] == 0) mark.erase(s[i]);||| 54 i--;||| 55 }||| 56 mark[s[i]]--;||| 57 if (mark[s[i]] == 0) mark.erase(s[i]);||| 58 s[i]++;||| 59 mark[s[i]]++;||| 60 keep.insert(s[i]);||| 61 if (keep.size() < k) keep.insert('0');||| 62 string ans = s.substr(0, i + 1);||| 63 for (int j = i + 1; j < m; j++) {||| 64 ans += *keep.begin();||| 65 }||| 66 cout << ans << ""\n"";||| 67 return;||| 68 }||| 69 i++;||| 70 }||| 71 cout << n << ""\n"";||| 72 }||| 73 int32_t main(int32_t argc, char const *argv[]) {||| 74 clock_t begin = clock();||| 75 file_i_o();||| 76 int tt = 1;||| 77 cin >> tt;||| 78 while (tt--) {||| 79 solve();||| 80 }||| 81 return 0;||| 82 }||| 83 void file_i_o() {||| 84 ios_base::sync_with_stdio(0);||| 85 cin.tie(0);||| 86 cout.tie(0);||| 87 }||| "	22 if (mark.size() < k) mark.insert('0');
73	165	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const long double pi = 2 * acos(0.0);||| 6 const int mod = 1e9 + 7;||| 7 const int maxn = 2e5 + 5;||| 8 void solve() {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n);||| 12 for (int i = 0; i < n; i++) cin >> a[i];||| 13 ;||| 14 vector<int> b = a;||| 15 sort(b.begin(), b.end());||| 16 bool ok = 1;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] != b[i]) {||| 19 ok = 0;||| 20 break;||| 21 }||| 22 }||| 23 if (ok) {||| 24 cout << 0 << '\n';||| 25 return;||| 26 }||| 27 for (int i = 0; i < n; i++) {||| 28 if (i % 2 == 0) {||| 29 for (int j = 0; j < n; j += 2) {||| 30 if (j + 1 < n && a[j + 1] < a[j]) {||| 31 swap(a[j], a[j + 1]);||| 32 }||| 33 }||| 34 } else {||| 35 for (int j = 1; j < n; j += 2) {||| 36 if (j + 1 < n && a[j + 1] < a[j]) {||| 37 swap(a[j], a[j + 1]);||| 38 }||| 39 }||| 40 }||| 41 bool okk = 1;||| 42 for (int j = 0; j < n; j++) {||| 43 if (a[j] != b[j]) {||| 44 okk = 0;||| 45 break;||| 46 }||| 47 }||| 48 if (okk) {||| 49 cout << i + 1 << '\n';||| 50 return;||| 51 }||| 52 }||| 53 return;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 int t = 1;||| 59 cin >> t;||| 60 while (t--) {||| 61 solve();||| 62 }||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using ld = long double;||| 5 const long double pi = 2 * acos(0.0);||| 6 const int mod = 1e9 + 7;||| 7 const int maxn = 2e5 + 5;||| 8 void solve() {||| 9 int n;||| 10 cin >> n;||| 11 vector<int> a(n);||| 12 for (int i = 0; i < n; i++) cin >> a[i];||| 13 ;||| 14 vector<int> b = a;||| 15 sort(b.begin(), b.end());||| 16 bool ok = 1;||| 17 for (int i = 0; i < n; i++) {||| 18 if (a[i] != b[i]) {||| 19 ok = 0;||| 20 break;||| 21 }||| 22 }||| 23 if (ok) {||| 24 cout << 0 << '\n';||| 25 return;||| 26 }||| 27 for (int i = 0; i < n; i++) {||| 28 if (i % 2 == 0) {||| 29 for (int j = 0; j < n; j += 2) {||| 30 if (j + 1 < n && a[j + 1] < a[j]) {||| 31 swap(a[j], a[j + 1]);||| 32 }||| 33 }||| 34 } else {||| 35 for (int j = 1; j < n; j += 2) {||| 36 if (j + 1 < n && a[j + 1] < a[j]) {||| 37 swap(a[j], a[j + 1]);||| 38 }||| 39 }||| 40 }||| 41 bool okk = 1;||| 42 for (int j = 0; j < n; j++) {||| 43 if (a[i] != b[i]) {||| 44 okk = 0;||| 45 break;||| 46 }||| 47 }||| 48 if (okk) {||| 49 cout << i + 1 << '\n';||| 50 return;||| 51 }||| 52 }||| 53 return;||| 54 }||| 55 int main() {||| 56 ios::sync_with_stdio(false);||| 57 cin.tie(0);||| 58 int t = 1;||| 59 cin >> t;||| 60 while (t--) {||| 61 solve();||| 62 }||| 63 return 0;||| 64 }||| 	43 if (a[j] != b[j]) {
73	215	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long dx[] = {0, -1, 0, 1};||| 4 long long dy[] = {1, 0, -1, 0};||| 5 const long long mod = 1e9 + 7;||| 6 inline long long add(long long a, long long b) {||| 7 return ((a % mod) + (b % mod) + mod) % mod;||| 8 }||| 9 inline long long mul(long long a, long long b) {||| 10 return ((a % mod) * (b % mod) + mod) % mod;||| 11 }||| 12 void pause(long long id) {||| 13 cout << ""Waiting "" << id << endl;||| 14 cin >> id;||| 15 }||| 16 const int mxn = 1e5 + 10;||| 17 void init() { return; }||| 18 signed main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL), cout.tie(NULL);||| 21 if (!true) {||| 22 freopen(""in.txt"", ""r"", stdin);||| 23 freopen(""out.txt"", ""w"", stdout);||| 24 }||| 25 init();||| 26 long long i, j;||| 27 long long t;||| 28 cin >> t;||| 29 while (t--) {||| 30 long long n;||| 31 cin >> n;||| 32 long long brr[n + 1], arr[n + 1];||| 33 for (i = 1; i <= n; i++) {||| 34 cin >> arr[i];||| 35 brr[i] = arr[i];||| 36 }||| 37 sort(brr + 1, brr + n + 1);||| 38 long long cnt = 0;||| 39 bool flag = false;||| 40 bool temp = true;||| 41 for (i = 1; i <= n; i++) {||| 42 temp = temp && arr[i] == brr[i];||| 43 }||| 44 flag = flag || temp;||| 45 i = 1;||| 46 long long ok = 30;||| 47 while (!flag) {||| 48 cnt++;||| 49 if (i % 2 == 1) {||| 50 for (j = 1; j <= n - 2; j += 2) {||| 51 if (arr[j] > arr[j + 1]) {||| 52 swap(arr[j], arr[j + 1]);||| 53 }||| 54 }||| 55 } else {||| 56 for (j = 2; j <= n - 1; j += 2) {||| 57 if (arr[j] > arr[j + 1]) {||| 58 swap(arr[j], arr[j + 1]);||| 59 }||| 60 }||| 61 }||| 62 bool temp = true;||| 63 for (j = 1; j <= n; j++) {||| 64 temp = temp && arr[j] == brr[j];||| 65 }||| 66 flag = flag || temp;||| 67 i++;||| 68 }||| 69 cout << cnt << endl;||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long dx[] = {0, -1, 0, 1};||| 4 long long dy[] = {1, 0, -1, 0};||| 5 const long long mod = 1e9 + 7;||| 6 inline long long add(long long a, long long b) {||| 7 return ((a % mod) + (b % mod) + mod) % mod;||| 8 }||| 9 inline long long mul(long long a, long long b) {||| 10 return ((a % mod) * (b % mod) + mod) % mod;||| 11 }||| 12 void pause(long long id) {||| 13 cout << ""Waiting "" << id << endl;||| 14 cin >> id;||| 15 }||| 16 const int mxn = 1e5 + 10;||| 17 void init() { return; }||| 18 signed main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL), cout.tie(NULL);||| 21 if (!true) {||| 22 freopen(""in.txt"", ""r"", stdin);||| 23 freopen(""out.txt"", ""w"", stdout);||| 24 }||| 25 init();||| 26 long long i, j;||| 27 long long t;||| 28 cin >> t;||| 29 while (t--) {||| 30 long long n;||| 31 cin >> n;||| 32 long long brr[n + 1], arr[n + 1];||| 33 for (i = 1; i <= n; i++) {||| 34 cin >> arr[i];||| 35 brr[i] = arr[i];||| 36 }||| 37 sort(brr + 1, brr + n + 1);||| 38 long long cnt = 0;||| 39 bool flag = false;||| 40 bool temp = true;||| 41 for (i = 1; i <= n; i++) {||| 42 temp = temp && arr[i] == brr[i];||| 43 }||| 44 flag = flag || temp;||| 45 i = 1;||| 46 long long ok = 30;||| 47 while (!flag) {||| 48 cnt++;||| 49 if (i % 2 == 1) {||| 50 for (j = 1; j <= n - 2; j += 2) {||| 51 if (arr[j] > arr[j + 1]) {||| 52 swap(arr[j], arr[j + 1]);||| 53 }||| 54 }||| 55 } else {||| 56 for (j = 2; j <= n - 1; j += 2) {||| 57 if (arr[j] > arr[j + 1]) {||| 58 swap(arr[j], arr[j + 1]);||| 59 }||| 60 }||| 61 }||| 62 bool temp = true;||| 63 for (j = 1; j <= n; j++) {||| 64 temp = temp && arr[i] == brr[i];||| 65 }||| 66 flag = flag || temp;||| 67 i++;||| 68 }||| 69 cout << cnt << endl;||| 70 }||| 71 return 0;||| 72 }||| "	64 temp = temp && arr[j] == brr[j];
73	32	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void swap(int &a, int &b) {||| 4 int temp = a;||| 5 a = b;||| 6 b = temp;||| 7 }||| 8 int main() {||| 9 int tt;||| 10 cin >> tt;||| 11 int n, diff, sft, row, col, k;||| 12 while (tt--) {||| 13 cin >> n;||| 14 vector<int> arr(n + 1);||| 15 for (int i = 1; i <= n; i++) cin >> arr[i];||| 16 int count = 0;||| 17 for (int i = 1;; i++) {||| 18 int chck = 0;||| 19 for (int j = 2; j <= n; j++) {||| 20 if (arr[j - 1] < arr[j])||| 21 chck++;||| 22 else||| 23 break;||| 24 }||| 25 if (chck == n - 1) break;||| 26 if (i % 2 == 0) {||| 27 for (int j = 1; j < n; j++) {||| 28 if (j % 2 == 0)||| 29 if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);||| 30 }||| 31 } else {||| 32 for (int j = 1; j < n; j++)||| 33 if (j % 2)||| 34 if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);||| 35 }||| 36 count++;||| 37 }||| 38 cout << count << endl;||| 39 }||| 40 return 0;||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void swap(int &a, int &b) {||| 4 int temp = a;||| 5 a = b;||| 6 b = temp;||| 7 }||| 8 int main() {||| 9 int tt;||| 10 cin >> tt;||| 11 int n, diff, sft, row, col, k;||| 12 while (tt--) {||| 13 cin >> n;||| 14 vector<int> arr(n + 1);||| 15 for (int i = 1; i <= n; i++) cin >> arr[i];||| 16 int count = 0;||| 17 for (int i = 1;; i++) {||| 18 int chck = 0;||| 19 for (int j = 2; j <= n; j++) {||| 20 if (arr[j - 1] < arr[j])||| 21 chck++;||| 22 else||| 23 break;||| 24 }||| 25 if (chck == n - 1) break;||| 26 if (i % 2 == 0) {||| 27 for (int j = 1; j <= n; j++) {||| 28 if (j % 2 == 0)||| 29 if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);||| 30 }||| 31 } else {||| 32 for (int j = 1; j <= n; j++)||| 33 if (j % 2)||| 34 if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);||| 35 }||| 36 count++;||| 37 }||| 38 cout << count << endl;||| 39 }||| 40 return 0;||| 41 }||| 	27 for (int j = 1; j < n; j++) {
74	235	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a, b, num = 0;||| 8 cin >> a >> b;||| 9 int k[a + b + 10];||| 10 memset(k, 0, sizeof k);||| 11 if (a % 2 == b % 2) {||| 12 int k1 = min(a, b);||| 13 for (int i = 0; i <= k1; i++) {||| 14 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 15 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 16 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 17 }||| 18 } else {||| 19 int ad, x, y, k1;||| 20 x = a - 1, y = b, ad = 0;||| 21 k1 = min(x, y);||| 22 for (int i = 0; i <= k1; i++) {||| 23 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 24 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 25 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 26 }||| 27 x = a, y = b - 1, ad = 1;||| 28 k1 = min(x, y);||| 29 for (int i = 0; i <= k1; i++) {||| 30 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 31 if (k[i * 2 + a1 + b1 + 1] == 0) k[i * 2 + a1 + b1 + 1] = 1, num++;||| 32 if (k[a1 + b1 + 1] == 0) k[a1 + b1 + 1] = 1, num++;||| 33 }||| 34 x = a, y = b - 1, ad = 0;||| 35 k1 = min(x, y);||| 36 for (int i = 0; i <= k1; i++) {||| 37 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 38 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 39 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 40 }||| 41 x = a - 1, y = b, ad = 1;||| 42 k1 = min(x, y);||| 43 for (int i = 0; i <= k1; i++) {||| 44 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 45 if (k[i * 2 + a1 + b1 + 1] == 0) k[i * 2 + a1 + b1 + 1] = 1, num++;||| 46 if (k[a1 + b1 + 1] == 0) k[a1 + b1 + 1] = 1, num++;||| 47 }||| 48 }||| 49 printf(""%d\n"", num);||| 50 int num1 = 0;||| 51 for (int i = 0; i <= a + b; i++) {||| 52 if (k[i]) {||| 53 num1++;||| 54 if (num1 < num)||| 55 printf(""%d "", i);||| 56 else||| 57 cout << i;||| 58 }||| 59 }||| 60 puts("""");||| 61 }||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a, b, num = 0;||| 8 cin >> a >> b;||| 9 int k[a + b + 10];||| 10 memset(k, 0, sizeof k);||| 11 if (a % 2 == b % 2) {||| 12 int k1 = min(a, b);||| 13 for (int i = 1; i <= k1; i++) {||| 14 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 15 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 16 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 17 }||| 18 } else {||| 19 int ad, x, y, k1;||| 20 x = a - 1, y = b, ad = 0;||| 21 k1 = min(x, y);||| 22 for (int i = 0; i <= k1; i++) {||| 23 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 24 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 25 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 26 }||| 27 x = a, y = b - 1, ad = 1;||| 28 k1 = min(x, y);||| 29 for (int i = 0; i <= k1; i++) {||| 30 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 31 if (k[i * 2 + a1 + b1 + 1] == 0) k[i * 2 + a1 + b1 + 1] = 1, num++;||| 32 if (k[a1 + b1 + 1] == 0) k[a1 + b1 + 1] = 1, num++;||| 33 }||| 34 x = a, y = b - 1, ad = 0;||| 35 k1 = min(x, y);||| 36 for (int i = 0; i <= k1; i++) {||| 37 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 38 if (k[i * 2 + a1 + b1] == 0) k[i * 2 + a1 + b1] = 1, num++;||| 39 if (k[a1 + b1] == 0) k[a1 + b1] = 1, num++;||| 40 }||| 41 x = a - 1, y = b, ad = 1;||| 42 k1 = min(x, y);||| 43 for (int i = 0; i <= k1; i++) {||| 44 int a1 = (a - i) / 2, b1 = (b - i) / 2;||| 45 if (k[i * 2 + a1 + b1 + 1] == 0) k[i * 2 + a1 + b1 + 1] = 1, num++;||| 46 if (k[a1 + b1 + 1] == 0) k[a1 + b1 + 1] = 1, num++;||| 47 }||| 48 }||| 49 printf(""%d\n"", num);||| 50 int num1 = 0;||| 51 for (int i = 0; i <= a + b; i++) {||| 52 if (k[i]) {||| 53 num1++;||| 54 if (num1 < num)||| 55 printf(""%d "", i);||| 56 else||| 57 cout << i;||| 58 }||| 59 }||| 60 puts("""");||| 61 }||| 62 }||| "	13 for (int i = 0; i <= k1; i++) {
75	160	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int siz = 1e5;||| 4 int t, n;||| 5 vector<int> cvs[siz + 5];||| 6 vector<pair<long long, int>> mnps;||| 7 void clear() {||| 8 for (int i = 1; i <= n; ++i) {||| 9 cvs[i].clear();||| 10 }||| 11 mnps.clear();||| 12 }||| 13 int main() {||| 14 scanf(""%d"", &t);||| 15 while (t--) {||| 16 scanf(""%d"", &n);||| 17 for (int i = 1; i <= n; ++i) {||| 18 int sz;||| 19 scanf(""%d"", &sz);||| 20 while (sz--) {||| 21 int v;||| 22 scanf(""%d"", &v);||| 23 cvs[i].push_back(v);||| 24 }||| 25 }||| 26 for (int i = 1; i <= n; ++i) {||| 27 long long mnp = cvs[i][0] + 1;||| 28 long long curp = mnp + 1;||| 29 int sz = cvs[i].size();||| 30 for (int j = 1; j < sz; ++j) {||| 31 if (curp <= cvs[i][j]) {||| 32 mnp += cvs[i][j] + 1 - curp;||| 33 curp = cvs[i][j] + 1;||| 34 }||| 35 ++curp;||| 36 }||| 37 mnps.push_back({mnp, i});||| 38 }||| 39 sort(mnps.begin(), mnps.end());||| 40 long long ans = mnps[0].first;||| 41 long long curp = ans + cvs[mnps[0].second].size();||| 42 int sz = mnps.size();||| 43 for (int i = 1; i < sz; ++i) {||| 44 if (curp < mnps[i].first) {||| 45 ans += mnps[i].first - curp;||| 46 curp = mnps[i].first;||| 47 }||| 48 curp += cvs[mnps[i].second].size();||| 49 }||| 50 printf(""%I64d\n"", ans);||| 51 clear();||| 52 }||| 53 return 0;||| 54 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int siz = 1e5;||| 4 int t, n;||| 5 vector<int> cvs[siz + 5];||| 6 vector<pair<long long, int>> mnps;||| 7 void clear() {||| 8 for (int i = 1; i <= n; ++i) {||| 9 cvs[i].clear();||| 10 }||| 11 mnps.clear();||| 12 }||| 13 int main() {||| 14 scanf(""%d"", &t);||| 15 while (t--) {||| 16 scanf(""%d"", &n);||| 17 for (int i = 1; i <= n; ++i) {||| 18 int sz;||| 19 scanf(""%d"", &sz);||| 20 while (sz--) {||| 21 int v;||| 22 scanf(""%d"", &v);||| 23 cvs[i].push_back(v);||| 24 }||| 25 }||| 26 for (int i = 1; i <= n; ++i) {||| 27 long long mnp = cvs[i][0] + 1;||| 28 long long curp = mnp + 1;||| 29 int sz = cvs[i].size();||| 30 for (int j = 1; j < sz; ++j) {||| 31 if (curp <= cvs[i][j]) {||| 32 mnp += cvs[i][j] + 1 - curp;||| 33 curp = cvs[i][j] + 1;||| 34 }||| 35 ++curp;||| 36 }||| 37 mnps.push_back({mnp, i});||| 38 }||| 39 sort(mnps.begin(), mnps.end());||| 40 long long ans = mnps[0].first;||| 41 long long curp = ans + cvs[mnps[0].second].size();||| 42 int sz = mnps.size();||| 43 for (int i = 1; i < sz; ++i) {||| 44 if (curp < mnps[i].first) {||| 45 ans += mnps[i].first - curp;||| 46 curp = mnps[i].first;||| 47 }||| 48 ++curp += cvs[mnps[i].second].size();||| 49 }||| 50 printf(""%I64d\n"", ans);||| 51 clear();||| 52 }||| 53 return 0;||| 54 }||| "	48 curp += cvs[mnps[i].second].size();
75	400	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 vector<long long> prime;||| 5 bool num[1000005 + 2];||| 6 void sieve() {||| 7 num[0] = true;||| 8 num[1] = true;||| 9 for (long long i = 2; i <= 1000005; i++) {||| 10 if (num[i] == false) {||| 11 prime.push_back(i);||| 12 for (long long j = 2 * i; j <= 1000005; j = j + i) {||| 13 num[j] = true;||| 14 }||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long n, m, i, j, k, l, a, b, c, p, q, r, t, ans, sum;||| 22 cin >> t;||| 23 vector<pair<long long, long long> > v;||| 24 while (t--) {||| 25 cin >> n;||| 26 m = n;||| 27 j = 0;||| 28 while (n--) {||| 29 cin >> k >> a;||| 30 b = a + 1;||| 31 c = b + 1;||| 32 for (i = 1; i < k; i++) {||| 33 cin >> a;||| 34 if (a >= c) {||| 35 b = b + (a - c) + 1;||| 36 c = a + 2;||| 37 } else||| 38 c++;||| 39 }||| 40 v.push_back(make_pair(b, k));||| 41 }||| 42 sort(v.begin(), v.end());||| 43 b = v[0].first + v[0].second;||| 44 a = v[0].first;||| 45 for (i = 1; i < m; i++) {||| 46 if (v[i].first > b) {||| 47 c = v[i].first - b;||| 48 b = v[i].first + v[i].second;||| 49 a = a + c;||| 50 } else {||| 51 b = b + v[i].second;||| 52 }||| 53 }||| 54 cout << a << endl;||| 55 v.clear();||| 56 }||| 57 return 0;||| 58 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 1e9 + 7;||| 4 vector<long long> prime;||| 5 bool num[1000005 + 2];||| 6 void sieve() {||| 7 num[0] = true;||| 8 num[1] = true;||| 9 for (long long i = 2; i <= 1000005; i++) {||| 10 if (num[i] == false) {||| 11 prime.push_back(i);||| 12 for (long long j = 2 * i; j <= 1000005; j = j + i) {||| 13 num[j] = true;||| 14 }||| 15 }||| 16 }||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long n, m, i, j, k, l, a, b, c, p, q, r, t, ans, sum;||| 22 cin >> t;||| 23 vector<pair<long long, long long> > v;||| 24 while (t--) {||| 25 cin >> n;||| 26 m = n;||| 27 j = 0;||| 28 while (n--) {||| 29 cin >> k >> a;||| 30 b = a + 1;||| 31 c = b + 1;||| 32 for (i = 1; i < k; i++) {||| 33 cin >> a;||| 34 if (a >= c) {||| 35 b = b + (a - c) + 1;||| 36 c = a + 2;||| 37 } else||| 38 c++;||| 39 }||| 40 v.push_back(make_pair(b, k));||| 41 }||| 42 sort(v.begin(), v.end());||| 43 b = v[i].first + v[i].second;||| 44 a = v[0].first;||| 45 for (i = 1; i < m; i++) {||| 46 if (v[i].first > b) {||| 47 c = v[i].first - b;||| 48 b = v[i].first + v[i].second;||| 49 a = a + c;||| 50 } else {||| 51 b = b + v[i].second;||| 52 }||| 53 }||| 54 cout << a << endl;||| 55 v.clear();||| 56 }||| 57 return 0;||| 58 }||| 	43 b = v[0].first + v[0].second;
75	354	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug(int a[], int n) {||| 4 cout << ""Array: [ "";||| 5 for (auto i = 0; i != n; i++) cout << a[i] << "" "";||| 6 cout << ""]\n"";||| 7 }||| 8 void debugv(vector<int>& v) {||| 9 cout << ""Vector: [ "";||| 10 for (auto i = 0; i != v.size(); i++) cout << v[i] << "" "";||| 11 cout << ""]\n"";||| 12 }||| 13 bool comp(pair<long long int, long long int> a,||| 14 pair<long long int, long long int> b) {||| 15 if (a.first < b.first || (a.first == b.first && a.second >= b.second))||| 16 return true;||| 17 return false;||| 18 }||| 19 long long int k[100000 + 2];||| 20 pair<long long int, long long int> power[100000 + 2];||| 21 void Solve() {||| 22 long long int n;||| 23 cin >> n;||| 24 long long int ans = 0, temp;||| 25 for (auto i = 0; i != n; i++) {||| 26 cin >> k[i];||| 27 long long int ma = 0;||| 28 for (auto j = 0; j != k[i]; j++) {||| 29 long long int p;||| 30 cin >> p;||| 31 ma = max(ma, p + 1 - j);||| 32 }||| 33 power[i].first = ma, power[i].second = k[i];||| 34 }||| 35 sort(power, power + n);||| 36 temp = ans = power[0].first;||| 37 for (auto i = 0; i != n; i++) {||| 38 if (temp >= power[i].first) {||| 39 temp += power[i].second;||| 40 } else {||| 41 ans += (power[i].first - temp);||| 42 temp = power[i].first + power[i].second;||| 43 }||| 44 }||| 45 cout << ans << ""\n"";||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 int T;||| 50 cin >> T;||| 51 while (T--) {||| 52 Solve();||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug(int a[], int n) {||| 4 cout << ""Array: [ "";||| 5 for (auto i = 0; i != n; i++) cout << a[i] << "" "";||| 6 cout << ""]\n"";||| 7 }||| 8 void debugv(vector<int>& v) {||| 9 cout << ""Vector: [ "";||| 10 for (auto i = 0; i != v.size(); i++) cout << v[i] << "" "";||| 11 cout << ""]\n"";||| 12 }||| 13 bool comp(pair<long long int, long long int> a,||| 14 pair<long long int, long long int> b) {||| 15 if (a.first < b.first || (a.first == b.first && a.second >= b.second))||| 16 return true;||| 17 return false;||| 18 }||| 19 long long int k[100000 + 2];||| 20 pair<long long int, long long int> power[100000 + 2];||| 21 void Solve() {||| 22 long long int n;||| 23 cin >> n;||| 24 long long int ans = 0, temp;||| 25 for (auto i = 0; i != n; i++) {||| 26 cin >> k[i];||| 27 long long int ma = 0;||| 28 for (auto j = 0; j != k[i]; j++) {||| 29 long long int p;||| 30 cin >> p;||| 31 ma = max(ma, p + 1 - j);||| 32 }||| 33 power[i].first = ma, power[i].second = k[i];||| 34 }||| 35 sort(power, power + n, comp);||| 36 temp = ans = power[0].first;||| 37 for (auto i = 0; i != n; i++) {||| 38 if (temp >= power[i].first) {||| 39 temp += power[i].second;||| 40 } else {||| 41 ans += (power[i].first - temp);||| 42 temp = power[i].first + power[i].second;||| 43 }||| 44 }||| 45 cout << ans << ""\n"";||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 int T;||| 50 cin >> T;||| 51 while (T--) {||| 52 Solve();||| 53 }||| 54 return 0;||| 55 }||| "	35 sort(power, power + n);
75	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int P = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 int t, n;||| 7 pair<long long, long long> res[N];||| 8 bool cmp(pair<long long, long long> a, pair<long long, long long> b) {||| 9 return (a.first - a.second) < (b.first - b.second);||| 10 }||| 11 void solve() {||| 12 int k;||| 13 long long x, minn, ans = 0;||| 14 for (int i = 0; i < n; ++i) {||| 15 scanf(""%d"", &k);||| 16 minn = 0;||| 17 for (int j = 0; j < k; ++j) {||| 18 scanf(""%lld"", &x);||| 19 if (x >= minn) minn = x + 1;||| 20 ++minn;||| 21 }||| 22 res[i].first = minn;||| 23 res[i].second = k;||| 24 }||| 25 sort(res, res + n, cmp);||| 26 ans = res[0].first - res[0].second;||| 27 long long cur = res[0].first;||| 28 for (int i = 1; i < n; ++i) {||| 29 int temp = res[i].first - res[i].second;||| 30 if (temp > cur) {||| 31 ans += temp - cur;||| 32 cur = res[i].first;||| 33 } else {||| 34 cur += res[i].second;||| 35 }||| 36 }||| 37 printf(""%lld\n"", ans);||| 38 }||| 39 int main() {||| 40 scanf(""%d"", &t);||| 41 while (t--) {||| 42 scanf(""%d"", &n);||| 43 solve();||| 44 }||| 45 return 0;||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 const int P = 1e9 + 7;||| 5 const int INF = 0x3f3f3f3f;||| 6 int t, n;||| 7 pair<long long, long long> res[N];||| 8 bool cmp(pair<long long, long long> a, pair<long long, long long> b) {||| 9 return (a.first - a.second) < (b.first - b.second);||| 10 }||| 11 void solve() {||| 12 int k;||| 13 long long x, minn, ans = 0;||| 14 for (int i = 0; i < n; ++i) {||| 15 scanf(""%d"", &k);||| 16 minn = 0;||| 17 for (int j = 0; j < k; ++j) {||| 18 scanf(""%lld"", &x);||| 19 if (x >= minn) minn = x + 1;||| 20 ++minn;||| 21 }||| 22 res[i].first = minn;||| 23 res[i].second = k;||| 24 }||| 25 sort(res, res + n);||| 26 ans = res[0].first - res[0].second;||| 27 long long cur = res[0].first;||| 28 for (int i = 1; i < n; ++i) {||| 29 int temp = res[i].first - res[i].second;||| 30 if (temp > cur) {||| 31 ans += temp - cur;||| 32 cur = res[i].first;||| 33 } else {||| 34 cur += res[i].second;||| 35 }||| 36 }||| 37 printf(""%lld\n"", ans);||| 38 }||| 39 int main() {||| 40 scanf(""%d"", &t);||| 41 while (t--) {||| 42 scanf(""%d"", &n);||| 43 solve();||| 44 }||| 45 return 0;||| 46 }||| "	25 sort(res, res + n, cmp);
75	234	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = pow(10, 9) + 7;||| 4 signed main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 long long int T = 1;||| 9 cin >> T;||| 10 while (T--) {||| 11 long long int n;||| 12 cin >> n;||| 13 vector<long long int> v[n];||| 14 for (long long int i = 0; i < n; i++) {||| 15 long long int ki;||| 16 cin >> ki;||| 17 for (long long int j = 0; j < ki; j++) {||| 18 long long int x;||| 19 cin >> x;||| 20 v[i].push_back(x + 1 - j);||| 21 }||| 22 }||| 23 map<long long int, long long int> mp;||| 24 for (long long int i = 0; i < n; i++) {||| 25 long long int x = *max_element(v[i].begin(), v[i].end());||| 26 mp[x] += v[i].size();||| 27 }||| 28 auto it = mp.begin();||| 29 long long int ans = it->first;||| 30 long long int covered = 0;||| 31 long long int sumcovered = ans;||| 32 for (auto x : mp) {||| 33 if (x.first >= sumcovered) {||| 34 ans = x.first - covered;||| 35 sumcovered = x.first;||| 36 }||| 37 sumcovered += x.second;||| 38 covered += x.second;||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 return 0;||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = pow(10, 9) + 7;||| 4 signed main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 long long int T = 1;||| 9 cin >> T;||| 10 while (T--) {||| 11 long long int n;||| 12 cin >> n;||| 13 vector<long long int> v[n];||| 14 for (long long int i = 0; i < n; i++) {||| 15 long long int ki;||| 16 cin >> ki;||| 17 for (long long int j = 0; j < ki; j++) {||| 18 long long int x;||| 19 cin >> x;||| 20 v[i].push_back(x + 1 - j);||| 21 }||| 22 }||| 23 map<long long int, long long int> mp;||| 24 for (long long int i = 0; i < n; i++) {||| 25 long long int x = *max_element(v[i].begin(), v[i].end());||| 26 mp[x] += v[i].size();||| 27 }||| 28 auto it = mp.begin();||| 29 long long int ans = it->first;||| 30 long long int covered = 0;||| 31 long long int sumcovered = ans;||| 32 for (auto x : mp) {||| 33 if (x.first < sumcovered) {||| 34 ans = x.first - covered;||| 35 sumcovered = x.first;||| 36 }||| 37 sumcovered += x.second;||| 38 covered += x.second;||| 39 }||| 40 cout << ans << '\n';||| 41 }||| 42 return 0;||| 43 }||| 	33 if (x.first >= sumcovered) {
75	359	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n, m, x;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> n;||| 8 vector<pair<int, int> > cave(n);||| 9 for (int i = 0; i < n; i++) {||| 10 cin >> m;||| 11 cave[i] = make_pair(0, m);||| 12 for (int j = 0; j < m; j++) {||| 13 cin >> x;||| 14 cave[i].first = max(x - j, cave[i].first);||| 15 }||| 16 }||| 17 int pow = 0, sol = 0;||| 18 sort(cave.begin(), cave.end());||| 19 for (int i = 0; i < n; i++) {||| 20 if (cave[i].first >= pow) {||| 21 sol += cave[i].first - pow + 1;||| 22 pow += cave[i].first - pow + 1;||| 23 }||| 24 pow += cave[i].second;||| 25 }||| 26 cout << sol << '\n';||| 27 }||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n, m, x;||| 5 cin >> t;||| 6 while (t--) {||| 7 cin >> n;||| 8 vector<pair<int, int> > cave(n);||| 9 for (int i = 0; i < n; i++) {||| 10 cin >> m;||| 11 cave[i] = make_pair(0, m);||| 12 for (int j = 0; j < m; j++) {||| 13 cin >> x;||| 14 cave[i].first = max(x - j, cave[i].first);||| 15 }||| 16 }||| 17 int pow = 0, sol = 0;||| 18 sort(cave.begin(), cave.end());||| 19 for (int i = 0; i < n; i++) {||| 20 if (cave[i].first > pow) {||| 21 sol += cave[i].first - pow + 1;||| 22 pow += cave[i].first - pow + 1;||| 23 }||| 24 pow += cave[i].second;||| 25 }||| 26 cout << sol << '\n';||| 27 }||| 28 }||| 	20 if (cave[i].first >= pow) {
75	0	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MAX_N = 1e5 + 1;||| 4 const long long MOD = 1e9 + 7;||| 5 const long long INF = 1e9;||| 6 const long long LINF = 1e18;||| 7 void solve() {||| 8 long long n;||| 9 cin >> n;||| 10 vector<vector<long long>> caves(n);||| 11 for (long long i{}; i < n; ++i) {||| 12 long long t;||| 13 cin >> t;||| 14 for (long long j{}; j < t; ++j) {||| 15 long long a;||| 16 cin >> a;||| 17 caves[i].push_back(a);||| 18 }||| 19 }||| 20 vector<pair<long long, long long>> t;||| 21 for (long long i{}; i < n; ++i) {||| 22 long long need = caves[i][0] + 1;||| 23 for (long long j{1}; j < caves[i].size(); ++j) {||| 24 if (caves[i][j] >= need + j) {||| 25 need = caves[i][j] - j + 1;||| 26 }||| 27 }||| 28 t.push_back({need, -(long long)(caves[i].size())});||| 29 }||| 30 sort(t.begin(), t.end());||| 31 long long totaladd = -t[0].second, out = t[0].first;||| 32 for (long long i{1}; i < t.size(); ++i) {||| 33 if (out + totaladd <= t[i].first) {||| 34 out = t[i].first - totaladd;||| 35 }||| 36 totaladd -= t[i].second;||| 37 }||| 38 cout << out << '\n';||| 39 }||| 40 long long main() {||| 41 ios_base::sync_with_stdio(0);||| 42 cin.tie(0);||| 43 cout.tie(0);||| 44 long long tc;||| 45 cin >> tc;||| 46 for (long long t = 1; t <= tc; t++) {||| 47 solve();||| 48 }||| 49 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long MAX_N = 1e5 + 1;||| 4 const long long MOD = 1e9 + 7;||| 5 const long long INF = 1e9;||| 6 const long long LINF = 1e18;||| 7 void solve() {||| 8 long long n;||| 9 cin >> n;||| 10 vector<vector<long long>> caves(n);||| 11 for (long long i{}; i < n; ++i) {||| 12 long long t;||| 13 cin >> t;||| 14 for (long long j{}; j < t; ++j) {||| 15 long long a;||| 16 cin >> a;||| 17 caves[i].push_back(a);||| 18 }||| 19 }||| 20 vector<pair<long long, long long>> t;||| 21 for (long long i{}; i < n; ++i) {||| 22 long long need = caves[i][0] + 1;||| 23 for (long long j{1}; j < caves[i].size(); ++j) {||| 24 if (caves[i][j] > need + j) {||| 25 need = caves[i][j] - j + 1;||| 26 }||| 27 }||| 28 t.push_back({need, -(long long)(caves[i].size())});||| 29 }||| 30 sort(t.begin(), t.end());||| 31 long long totaladd = -t[0].second, out = t[0].first;||| 32 for (long long i{1}; i < t.size(); ++i) {||| 33 if (out + totaladd < t[i].first) {||| 34 out = t[i].first - totaladd;||| 35 }||| 36 totaladd -= t[i].second;||| 37 }||| 38 cout << out << '\n';||| 39 }||| 40 long long main() {||| 41 ios_base::sync_with_stdio(0);||| 42 cin.tie(0);||| 43 cout.tie(0);||| 44 long long tc;||| 45 cin >> tc;||| 46 for (long long t = 1; t <= tc; t++) {||| 47 solve();||| 48 }||| 49 }||| 	24 if (caves[i][j] >= need + j) {
75	354	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug(int a[], int n) {||| 4 cout << ""Array: [ "";||| 5 for (auto i = 0; i != n; i++) cout << a[i] << "" "";||| 6 cout << ""]\n"";||| 7 }||| 8 void debugv(vector<int>& v) {||| 9 cout << ""Vector: [ "";||| 10 for (auto i = 0; i != v.size(); i++) cout << v[i] << "" "";||| 11 cout << ""]\n"";||| 12 }||| 13 bool comp(pair<long long int, long long int> a,||| 14 pair<long long int, long long int> b) {||| 15 if (a.first < b.first || (a.first == b.first && a.second > b.second))||| 16 return true;||| 17 return false;||| 18 }||| 19 long long int k[100000 + 2];||| 20 pair<long long int, long long int> power[100000 + 2];||| 21 void Solve() {||| 22 long long int n;||| 23 cin >> n;||| 24 long long int ans = 0, temp;||| 25 for (auto i = 0; i != n; i++) {||| 26 cin >> k[i];||| 27 long long int ma = 0;||| 28 for (auto j = 0; j != k[i]; j++) {||| 29 long long int p;||| 30 cin >> p;||| 31 ma = max(ma, p + 1 - j);||| 32 }||| 33 power[i].first = ma, power[i].second = k[i];||| 34 }||| 35 sort(power, power + n, comp);||| 36 temp = ans = power[0].first;||| 37 for (auto i = 0; i != n; i++) {||| 38 if (temp >= power[i].first) {||| 39 temp += power[i].second;||| 40 } else {||| 41 ans += (power[i].first - temp);||| 42 temp = power[i].first + power[i].second;||| 43 }||| 44 }||| 45 cout << ans << ""\n"";||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 int T;||| 50 cin >> T;||| 51 while (T--) {||| 52 Solve();||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void debug(int a[], int n) {||| 4 cout << ""Array: [ "";||| 5 for (auto i = 0; i != n; i++) cout << a[i] << "" "";||| 6 cout << ""]\n"";||| 7 }||| 8 void debugv(vector<int>& v) {||| 9 cout << ""Vector: [ "";||| 10 for (auto i = 0; i != v.size(); i++) cout << v[i] << "" "";||| 11 cout << ""]\n"";||| 12 }||| 13 bool comp(pair<long long int, long long int> a,||| 14 pair<long long int, long long int> b) {||| 15 if (a.first < b.first || (a.first == b.first && a.second >= b.second))||| 16 return true;||| 17 return false;||| 18 }||| 19 long long int k[100000 + 2];||| 20 pair<long long int, long long int> power[100000 + 2];||| 21 void Solve() {||| 22 long long int n;||| 23 cin >> n;||| 24 long long int ans = 0, temp;||| 25 for (auto i = 0; i != n; i++) {||| 26 cin >> k[i];||| 27 long long int ma = 0;||| 28 for (auto j = 0; j != k[i]; j++) {||| 29 long long int p;||| 30 cin >> p;||| 31 ma = max(ma, p + 1 - j);||| 32 }||| 33 power[i].first = ma, power[i].second = k[i];||| 34 }||| 35 sort(power, power + n, comp);||| 36 temp = ans = power[0].first;||| 37 for (auto i = 0; i != n; i++) {||| 38 if (temp >= power[i].first) {||| 39 temp += power[i].second;||| 40 } else {||| 41 ans += (power[i].first - temp);||| 42 temp = power[i].first + power[i].second;||| 43 }||| 44 }||| 45 cout << ans << ""\n"";||| 46 }||| 47 int main() {||| 48 ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);||| 49 int T;||| 50 cin >> T;||| 51 while (T--) {||| 52 Solve();||| 53 }||| 54 return 0;||| 55 }||| "	15 if (a.first < b.first || (a.first == b.first && a.second > b.second))
75	242	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPossFirst(vector<long long> armor, long long mid) {||| 4 for (int i = 0; i < armor.size(); i++) {||| 5 if (mid <= armor[i]) return 0;||| 6 mid++;||| 7 }||| 8 return true;||| 9 }||| 10 pair<long long, long long> findMin(vector<long long> armor) {||| 11 long long l = 0, r = 10000000000;||| 12 long long mid = 0, ans = 10000000000;||| 13 while (l <= r) {||| 14 mid = l + (r - l) / 2;||| 15 if (isPossFirst(armor, mid)) {||| 16 ans = min(ans, mid);||| 17 r = mid - 1;||| 18 } else {||| 19 l = mid + 1;||| 20 }||| 21 }||| 22 return {ans, armor.size()};||| 23 }||| 24 bool isPoss(vector<pair<long long, long long>> minEntry, long long mid) {||| 25 for (int i = 0; i < minEntry.size(); i++) {||| 26 if (minEntry[i].first > mid) return 0;||| 27 mid += minEntry[i].second;||| 28 }||| 29 return 1;||| 30 }||| 31 int main() {||| 32 int t;||| 33 cin >> t;||| 34 while (t--) {||| 35 int n;||| 36 cin >> n;||| 37 vector<pair<long long, long long>> minEntry;||| 38 for (int i = 0; i < n; i++) {||| 39 int k;||| 40 cin >> k;||| 41 vector<long long> armor(k);||| 42 for (int j = 0; j < k; j++) {||| 43 cin >> armor[j];||| 44 }||| 45 minEntry.push_back(findMin(armor));||| 46 }||| 47 sort(minEntry.begin(), minEntry.end());||| 48 long long l = 0, r = 10000000000;||| 49 long long mid = 0, ans = 10000000000;||| 50 while (l <= r) {||| 51 mid = l + (r - l) / 2;||| 52 if (isPoss(minEntry, mid)) {||| 53 ans = min(ans, mid);||| 54 r = mid - 1;||| 55 } else {||| 56 l = mid + 1;||| 57 }||| 58 }||| 59 cout << ans << endl;||| 60 }||| 61 return 0;||| 62 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPossFirst(vector<long long> armor, long long mid) {||| 4 for (int i = 0; i < armor.size(); i++) {||| 5 if (mid <= armor[i]) return 0;||| 6 mid++;||| 7 }||| 8 return true;||| 9 }||| 10 pair<long long, long long> findMin(vector<long long> armor) {||| 11 long long l = 0, r = 10000000000;||| 12 long long mid = 0, ans = 10000000000;||| 13 while (l <= r) {||| 14 mid = l + (r - l) / 2;||| 15 if (isPossFirst(armor, mid)) {||| 16 ans = min(ans, mid);||| 17 r = mid - 1;||| 18 } else {||| 19 l = mid + 1;||| 20 }||| 21 }||| 22 return {ans, ans + armor.size()};||| 23 }||| 24 bool isPoss(vector<pair<long long, long long>> minEntry, long long mid) {||| 25 for (int i = 0; i < minEntry.size(); i++) {||| 26 if (minEntry[i].first > mid) return 0;||| 27 mid += minEntry[i].second;||| 28 }||| 29 return 1;||| 30 }||| 31 int main() {||| 32 int t;||| 33 cin >> t;||| 34 while (t--) {||| 35 int n;||| 36 cin >> n;||| 37 vector<pair<long long, long long>> minEntry;||| 38 for (int i = 0; i < n; i++) {||| 39 int k;||| 40 cin >> k;||| 41 vector<long long> armor(k);||| 42 for (int j = 0; j < k; j++) {||| 43 cin >> armor[j];||| 44 }||| 45 minEntry.push_back(findMin(armor));||| 46 }||| 47 sort(minEntry.begin(), minEntry.end());||| 48 long long l = 0, r = 10000000000;||| 49 long long mid = 0, ans = 10000000000;||| 50 while (l <= r) {||| 51 mid = l + (r - l) / 2;||| 52 if (isPoss(minEntry, mid)) {||| 53 ans = min(ans, mid);||| 54 r = mid - 1;||| 55 } else {||| 56 l = mid + 1;||| 57 }||| 58 }||| 59 cout << ans << endl;||| 60 }||| 61 return 0;||| 62 }||| 	22 return {ans, armor.size()};
76	26	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double eps = 1e-8;||| 4 const int N = 2e5 + 10;||| 5 const int M = 1e6 + 10;||| 6 long long dp1[N];||| 7 long long dp2[N];||| 8 void run() {||| 9 long long n, m;||| 10 scanf(""%lld%lld"", &n, &m);||| 11 dp1[1] = 1;||| 12 for (int i = 1; i <= n; i++) {||| 13 dp2[i] = 1;||| 14 }||| 15 for (int i = 2, sum = 1; i <= n; i++) {||| 16 dp2[i] = (dp2[i] + dp2[i - 1]) % m;||| 17 dp1[i] = (dp2[i] + sum) % m;||| 18 dp1[i] = (dp1[i] - dp1[i - 1] + m) % m;||| 19 sum = (sum + dp1[i]) % m;||| 20 long long now = (dp1[i] - dp1[i - 1] + m) % m;||| 21 for (int j = i; j <= n; j += i) dp2[j] = (dp2[j] + now) % m;||| 22 }||| 23 printf(""%lld\n"", dp1[n]);||| 24 }||| 25 int main() {||| 26 run();||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long double eps = 1e-8;||| 4 const int N = 2e5 + 10;||| 5 const int M = 1e6 + 10;||| 6 long long dp1[N];||| 7 long long dp2[N];||| 8 void run() {||| 9 long long n, m;||| 10 scanf(""%lld%lld"", &n, &m);||| 11 dp1[1] = 1;||| 12 for (int i = 1; i <= n; i++) {||| 13 dp2[i] = 1;||| 14 }||| 15 for (int i = 2, sum = 1; i <= n; i++) {||| 16 dp2[i] = (dp2[i] + dp2[i - 1]) % m;||| 17 dp1[i] = (dp2[i] + sum) % m;||| 18 dp1[i] = (dp1[i] - dp1[i - 1] + m) % m;||| 19 sum = (sum + dp1[i]) % m;||| 20 long long now = (dp1[i] - dp1[i - 1] + m) % m;||| 21 for (int j = i; j <= n; j += i) dp2[j] = (dp2[i] + now) % m;||| 22 }||| 23 printf(""%lld\n"", dp1[n]);||| 24 }||| 25 int main() {||| 26 run();||| 27 return 0;||| 28 }||| "	21 for (int j = i; j <= n; j += i) dp2[j] = (dp2[j] + now) % m;
76	27	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 long long f[N];||| 5 int main() {||| 6 long long n, m;||| 7 cin >> n >> m;||| 8 f[1] = 1;||| 9 long long sum = 1;||| 10 for (int i = 2; i <= n; i++) {||| 11 f[i] += sum;||| 12 for (int l = 2, r = 0; l <= i; l = r + 1) {||| 13 r = min(i, i / (i / l));||| 14 f[i] += 1ll * f[i / l] * (r - l + 1);||| 15 f[i] %= m;||| 16 }||| 17 sum += f[i];||| 18 sum %= m;||| 19 }||| 20 cout << f[n] << endl;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 int f[N];||| 5 int main() {||| 6 long long n, m;||| 7 cin >> n >> m;||| 8 f[1] = 1;||| 9 long long sum = 1;||| 10 for (int i = 2; i <= n; i++) {||| 11 f[i] += sum;||| 12 for (int l = 2, r = 0; l <= i; l = r + 1) {||| 13 r = min(i, i / (i / l));||| 14 f[i] += 1ll * f[i / l] * (r - l + 1);||| 15 f[i] %= m;||| 16 }||| 17 sum += f[i];||| 18 sum %= m;||| 19 }||| 20 cout << f[n] << endl;||| 21 }||| 	4 long long f[N];
76	86	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 int dp[200001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 dp[1] = 1 % m;||| 8 int sum = 1;||| 9 for (int i = 2; i <= n; i++) {||| 10 for (int l = 2, r; l <= i; l = r + 1) {||| 11 r = i / (i / l);||| 12 dp[i] = (dp[i] + (r - l + 1LL) * dp[i / l]) % m;||| 13 }||| 14 dp[i] = (dp[i] + sum) % m;||| 15 sum = (sum + dp[i]) % m;||| 16 }||| 17 cout << dp[n] << endl;||| 18 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 int dp[200001];||| 5 int main() {||| 6 cin >> n >> m;||| 7 dp[1] = 1 % m;||| 8 int sum = 1;||| 9 for (int i = 2; i <= n; i++) {||| 10 for (int l = 2, r; l <= i; l = r + 1) {||| 11 r = i / (i / l);||| 12 dp[i] = (dp[i] + (r - l + 1) * dp[i / l]) % m;||| 13 }||| 14 dp[i] = (dp[i] + sum) % m;||| 15 sum = (sum + dp[i]) % m;||| 16 }||| 17 cout << dp[n] << endl;||| 18 }||| 	12 dp[i] = (dp[i] + (r - l + 1LL) * dp[i / l]) % m;
76	104	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 long long f[N], sum[N];||| 5 int n, mod;||| 6 int main() {||| 7 scanf(""%d%d"", &n, &mod);||| 8 f[n] = sum[n] = 1;||| 9 for (int i = n - 1; i; --i) {||| 10 f[i] = (f[i] + sum[i + 1]) % mod;||| 11 for (int j = 2; i * j <= n; ++j) {||| 12 int l = i * j, r = min(n, j * (i + 1) - 1);||| 13 f[i] = (f[i] + sum[l] - sum[r + 1]) % mod;||| 14 }||| 15 sum[i] = (sum[i + 1] + f[i]) % mod;||| 16 }||| 17 cout << f[1] << endl;||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 int f[N], sum[N];||| 5 int n, mod;||| 6 int main() {||| 7 scanf(""%d%d"", &n, &mod);||| 8 f[n] = sum[n] = 1;||| 9 for (int i = n - 1; i; --i) {||| 10 f[i] = (f[i] + sum[i + 1]) % mod;||| 11 for (int j = 2; i * j <= n; ++j) {||| 12 int l = i * j, r = min(n, j * (i + 1) - 1);||| 13 f[i] = (f[i] + sum[l] - sum[r + 1]) % mod;||| 14 }||| 15 sum[i] = (sum[i + 1] + f[i]) % mod;||| 16 }||| 17 cout << f[1] << endl;||| 18 return 0;||| 19 }||| "	4 long long f[N], sum[N];
77	36	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 int MOD;||| 6 int dp[4000005];||| 7 int criba[4000005 + 1];||| 8 void crearCriba() {||| 9 int w[] = {4, 2, 4, 2, 4, 6, 2, 6};||| 10 for (int p = 25; p <= 4000005; p += 10) criba[p] = 5;||| 11 for (int p = 9; p <= 4000005; p += 6) criba[p] = 3;||| 12 for (int p = 4; p <= 4000005; p += 2) criba[p] = 2;||| 13 for (int p = 7, cur = 0; p * p <= 4000005; p += w[cur++ & 7])||| 14 if (!criba[p])||| 15 for (int j = p * p; j <= 4000005; j += (p << 1))||| 16 if (!criba[j]) criba[j] = p;||| 17 }||| 18 vector<int> primos;||| 19 void buscarPrimos() {||| 20 crearCriba();||| 21 for (int i = (2); i < (4000005 + 1); i++)||| 22 if (!criba[i]) primos.push_back(i);||| 23 }||| 24 void fact(long long n, map<long long, long long> &f) {||| 25 while (criba[n]) {||| 26 f[criba[n]]++;||| 27 n /= criba[n];||| 28 }||| 29 if (n > 1) f[n]++;||| 30 }||| 31 void divisores(map<long long, long long> &f, vector<int> &divs,||| 32 map<long long, long long>::iterator it, long long n = 1) {||| 33 if (it == f.begin()) divs.clear();||| 34 if (it == f.end()) {||| 35 divs.push_back(n);||| 36 return;||| 37 }||| 38 long long p = it->first, k = it->second;||| 39 ++it;||| 40 for (int _ = (0); _ < (k + 1); _++) divisores(f, divs, it, n), n *= p;||| 41 }||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 cout.tie(NULL);||| 46 int n;||| 47 cin >> n;||| 48 cin >> MOD;||| 49 long long acum = 0;||| 50 dp[1] = 1;||| 51 const int mod = MOD;||| 52 buscarPrimos();||| 53 for (int i = (2); i < (n + 1); i++) {||| 54 map<long long, long long> factores;||| 55 vector<int> divs;||| 56 fact(i, factores);||| 57 divisores(factores, divs, factores.begin());||| 58 divs.pop_back();||| 59 for (auto it = divs.begin(); it != divs.end(); it++) {||| 60 if (*it == 1)||| 61 acum = (acum + dp[*it]) % mod;||| 62 else||| 63 acum = (acum + mod - dp[*it - 1] + dp[*it]) % mod;||| 64 }||| 65 acum += dp[i - 1];||| 66 acum %= mod;||| 67 dp[i] += acum;||| 68 dp[i] %= mod;||| 69 }||| 70 cout << dp[n] << '\n';||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 using namespace std;||| 5 int MOD;||| 6 int dp[4000005];||| 7 int criba[4000005 + 1];||| 8 void crearCriba() {||| 9 int w[] = {4, 2, 4, 2, 4, 6, 2, 6};||| 10 for (int p = 25; p <= 4000005; p += 10) criba[p] = 5;||| 11 for (int p = 9; p <= 4000005; p += 6) criba[p] = 3;||| 12 for (int p = 4; p <= 4000005; p += 2) criba[p] = 2;||| 13 for (int p = 7, cur = 0; p * p <= 4000005; p += w[cur++ & 7])||| 14 if (!criba[p])||| 15 for (int j = p * p; j <= 4000005; j += (p << 1))||| 16 if (!criba[j]) criba[j] = p;||| 17 }||| 18 vector<int> primos;||| 19 void buscarPrimos() {||| 20 crearCriba();||| 21 for (int i = (2); i < (4000005 + 1); i++)||| 22 if (!criba[i]) primos.push_back(i);||| 23 }||| 24 void fact(long long n, map<long long, long long> &f) {||| 25 while (criba[n]) {||| 26 f[criba[n]]++;||| 27 n /= criba[n];||| 28 }||| 29 if (n > 1) f[n]++;||| 30 }||| 31 void divisores(map<long long, long long> &f, vector<int> &divs,||| 32 map<long long, long long>::iterator it, long long n = 1) {||| 33 if (it == f.begin()) divs.clear();||| 34 if (it == f.end()) {||| 35 divs.push_back(n);||| 36 return;||| 37 }||| 38 long long p = it->first, k = it->second;||| 39 ++it;||| 40 for (int _ = (0); _ < (k + 1); _++) divisores(f, divs, it, n), n *= p;||| 41 }||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 cin.tie(NULL);||| 45 cout.tie(NULL);||| 46 int n;||| 47 cin >> n;||| 48 cin >> MOD;||| 49 int acum = 0;||| 50 dp[1] = 1;||| 51 const int mod = MOD;||| 52 buscarPrimos();||| 53 for (int i = (2); i < (n + 1); i++) {||| 54 map<long long, long long> factores;||| 55 vector<int> divs;||| 56 fact(i, factores);||| 57 divisores(factores, divs, factores.begin());||| 58 divs.pop_back();||| 59 for (auto it = divs.begin(); it != divs.end(); it++) {||| 60 if (*it == 1)||| 61 acum = (acum + dp[*it]) % mod;||| 62 else||| 63 acum = (acum + mod - dp[*it - 1] + dp[*it]) % mod;||| 64 }||| 65 acum += dp[i - 1];||| 66 acum %= mod;||| 67 dp[i] += acum;||| 68 dp[i] %= mod;||| 69 }||| 70 cout << dp[n] << '\n';||| 71 return 0;||| 72 }||| "	49 long long acum = 0;
77	18	"1 #include <bits/stdc++.h>||| 2 #pragma warning(disable : 4996)||| 3 #pragma comment(linker, ""/STACK:16777216"")||| 4 using namespace std;||| 5 const int INF = 1000000000 + 1e8;||| 6 const long long LINF = 2000000000000000000;||| 7 const int N = 4e6 + 1010;||| 8 long long dp[N];||| 9 long long pref[N];||| 10 long long n, mod;||| 11 long long get(int l, int r) {||| 12 return (pref[l] - (r >= n ? 0 : pref[r + 1]) + 2 * mod) % mod;||| 13 }||| 14 void solve() {||| 15 cin >> n >> mod;||| 16 dp[n] = 1, pref[n] = 1;||| 17 int l, r;||| 18 for (int i = n - 1; i >= 1; i--) {||| 19 dp[i] = pref[i + 1] % mod;||| 20 for (int x = 2; i * x <= n; x++) {||| 21 l = i * x;||| 22 r = i * x + x - 1;||| 23 dp[i] = (dp[i] + get(l, r)) % mod;||| 24 }||| 25 pref[i] = (pref[i + 1] + dp[i]) % mod;||| 26 }||| 27 cout << dp[1];||| 28 }||| 29 int main() {||| 30 srand(time(0));||| 31 ios::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 int tst = 1;||| 35 while (tst--) solve();||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma warning(disable : 4996)||| 3 #pragma comment(linker, ""/STACK:16777216"")||| 4 using namespace std;||| 5 const int INF = 1000000000 + 1e8;||| 6 const long long LINF = 2000000000000000000;||| 7 const int N = 4e6 + 1010;||| 8 long long dp[N];||| 9 long long pref[N];||| 10 long long n, mod;||| 11 long long get(int l, int r) {||| 12 return (pref[l] - (r == n ? 0 : pref[r + 1]) + 2 * mod) % mod;||| 13 }||| 14 void solve() {||| 15 cin >> n >> mod;||| 16 dp[n] = 1, pref[n] = 1;||| 17 int l, r;||| 18 for (int i = n - 1; i >= 1; i--) {||| 19 dp[i] = pref[i + 1] % mod;||| 20 for (int x = 2; i * x <= n; x++) {||| 21 l = i * x;||| 22 r = i * x + x - 1;||| 23 dp[i] = (dp[i] + get(l, r)) % mod;||| 24 }||| 25 pref[i] = (pref[i + 1] + dp[i]) % mod;||| 26 }||| 27 cout << dp[1];||| 28 }||| 29 int main() {||| 30 srand(time(0));||| 31 ios::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 int tst = 1;||| 35 while (tst--) solve();||| 36 }||| "	12 return (pref[l] - (r >= n ? 0 : pref[r + 1]) + 2 * mod) % mod;
77	57	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 4e6 + 5;||| 4 long long f[maxn] = {};||| 5 int main() {||| 6 int q = 1;||| 7 while (q--) {||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 f[1] = 1;||| 11 f[2] = 2;||| 12 for (int i = 2; i <= n; i++) {||| 13 if (i == 2)||| 14 f[i] = 2;||| 15 else||| 16 f[i] = (f[i] + 2 * f[i - 1] + 1) % m;||| 17 long long x = f[i] - f[i - 1];||| 18 for (int j = i * 2; j <= n; j += i) f[j] = (f[j] + x) % m;||| 19 }||| 20 cout << (f[n] % m + m) % m << endl;||| 21 }||| 22 return 0;||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 4e6 + 5;||| 4 int f[maxn] = {};||| 5 int main() {||| 6 int q = 1;||| 7 while (q--) {||| 8 long long n, m;||| 9 cin >> n >> m;||| 10 f[1] = 1;||| 11 f[2] = 2;||| 12 for (int i = 2; i <= n; i++) {||| 13 if (i == 2)||| 14 f[i] = 2;||| 15 else||| 16 f[i] = (f[i] + 2 * f[i - 1] + 1) % m;||| 17 long long x = f[i] - f[i - 1];||| 18 for (int j = i * 2; j <= n; j += i) f[j] = (f[j] + x) % m;||| 19 }||| 20 cout << (f[n] % m + m) % m << endl;||| 21 }||| 22 return 0;||| 23 }||| 	4 long long f[maxn] = {};
77	16	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9;||| 4 const int N = 10000007;||| 5 const int mod = 1e9 + 7;||| 6 const double eps = 1e-6;||| 7 const double pi = acos(-1.0);||| 8 inline int read() {||| 9 int x;||| 10 scanf(""%d"", &x);||| 11 return x;||| 12 }||| 13 struct Node {||| 14 int mn, key;||| 15 bool operator<(const Node& b) const {||| 16 if (mn == b.mn) return key < b.key;||| 17 return mn < b.mn;||| 18 }||| 19 };||| 20 int T, n, m;||| 21 int dp[2][N];||| 22 int ksm(int a, int b) {||| 23 int res = 1;||| 24 while (b) {||| 25 if (b & 1) res = res * a % mod;||| 26 a = a * a % mod;||| 27 b <<= 1;||| 28 }||| 29 return res;||| 30 }||| 31 void solve() {||| 32 n = read(), m = read();||| 33 dp[0][1] = 1;||| 34 long long pre = 0;||| 35 for (int i = (1); i <= (n); ++i) {||| 36 dp[1][i] = (0ll + dp[1][i] + dp[1][i - 1]) % m;||| 37 if (i > 1) dp[0][i] = dp[1][i];||| 38 dp[0][i] = (0ll + dp[0][i] + pre) % m;||| 39 int l = 1, r = 2 * i;||| 40 while (r <= n) {||| 41 dp[1][r] = (0ll + dp[1][r] + dp[0][i]) % m;||| 42 dp[1][r + l + 1] = (0ll + dp[1][r + l + 1] + m - dp[0][i]) % m;||| 43 ++l;||| 44 r += i;||| 45 }||| 46 pre = (0ll + dp[0][i] + pre) % m;||| 47 }||| 48 printf(""%d\n"", dp[0][n]);||| 49 }||| 50 signed main() { solve(); }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 1e9;||| 4 const int N = 10000007;||| 5 const int mod = 1e9 + 7;||| 6 const double eps = 1e-6;||| 7 const double pi = acos(-1.0);||| 8 inline int read() {||| 9 int x;||| 10 scanf(""%lld"", &x);||| 11 return x;||| 12 }||| 13 struct Node {||| 14 int mn, key;||| 15 bool operator<(const Node& b) const {||| 16 if (mn == b.mn) return key < b.key;||| 17 return mn < b.mn;||| 18 }||| 19 };||| 20 int T, n, m;||| 21 int dp[2][N];||| 22 int ksm(int a, int b) {||| 23 int res = 1;||| 24 while (b) {||| 25 if (b & 1) res = res * a % mod;||| 26 a = a * a % mod;||| 27 b <<= 1;||| 28 }||| 29 return res;||| 30 }||| 31 void solve() {||| 32 n = read(), m = read();||| 33 dp[0][1] = 1;||| 34 long long pre = 0;||| 35 for (int i = (1); i <= (n); ++i) {||| 36 dp[1][i] = (0ll + dp[1][i] + dp[1][i - 1]) % m;||| 37 if (i > 1) dp[0][i] = dp[1][i];||| 38 dp[0][i] = (0ll + dp[0][i] + pre) % m;||| 39 int l = 1, r = 2 * i;||| 40 while (r <= n) {||| 41 dp[1][r] = (0ll + dp[1][r] + dp[0][i]) % m;||| 42 dp[1][r + l + 1] = (0ll + dp[1][r + l + 1] + m - dp[0][i]) % m;||| 43 ++l;||| 44 r += i;||| 45 }||| 46 pre = (0ll + dp[0][i] + pre) % m;||| 47 }||| 48 printf(""%lld\n"", dp[0][n]);||| 49 }||| 50 signed main() { solve(); }||| "	"10 scanf(""%d"", &x);"
77	82	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 4e6 + 10;||| 4 long long mod = 1e9 + 7;||| 5 const long long inf = 0x3f3f3f3f;||| 6 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 7 long long n, m;||| 8 long long dp[N];||| 9 void solve() {||| 10 cin >> n >> mod;||| 11 dp[1] = 1, dp[2] = 2;||| 12 for (long long i = (2); i <= (n); ++i) {||| 13 if (i > 2) dp[i] = (dp[i] + dp[i - 1] * 2 + 1) % mod;||| 14 long long d = dp[i] - dp[i - 1];||| 15 for (long long j = 2; j <= n / i; j++) {||| 16 dp[i * j] += d;||| 17 }||| 18 }||| 19 cout << (dp[n] % mod + mod) % mod << endl;||| 20 }||| 21 signed main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 solve();||| 26 return 0;||| 27 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e6 + 10;||| 4 const long long mod = 1e9 + 7;||| 5 const long long inf = 0x3f3f3f3f;||| 6 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 7 long long n, m;||| 8 long long dp[N];||| 9 void solve() {||| 10 cin >> n >> m;||| 11 dp[1] = 1, dp[2] = 2;||| 12 for (long long i = (2); i <= (n); ++i) {||| 13 if (i > 2) dp[i] = (dp[i] + dp[i - 1] * 2 + 1) % mod;||| 14 long long d = dp[i] - dp[i - 1];||| 15 for (long long j = 2; j <= n / i; j++) {||| 16 dp[i * j] += d;||| 17 }||| 18 }||| 19 cout << (dp[n] % mod + mod) % mod << endl;||| 20 }||| 21 signed main() {||| 22 ios::sync_with_stdio(0);||| 23 cin.tie(0);||| 24 cout.tie(0);||| 25 solve();||| 26 return 0;||| 27 }||| 	3 const long long N = 4e6 + 10;
77	96	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long inf = 0x3f3f3f3f;||| 4 long long sum[4000010], f[4000010];||| 5 signed main() {||| 6 long long n, m;||| 7 sum[1] = 1;||| 8 f[1] = 1;||| 9 cin >> n >> m;||| 10 f[n] = sum[n] = 1;||| 11 for (long long i = n - 1; i >= 1; i--) {||| 12 f[i] = sum[i + 1];||| 13 for (long long j = 2; i * j <= n; j++) {||| 14 long long l = i * j, r = min(n, (i + 1) * j - 1);||| 15 if (l <= r) f[i] = ((f[i] + sum[l]) % m - sum[r + 1]) % m;||| 16 }||| 17 sum[i] = (sum[i + 1] + f[i]) % m;||| 18 }||| 19 cout << (f[1] + m) % m << '\n';||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long inf = 0x3f3f3f3f;||| 4 long long sum[200010], f[200010];||| 5 signed main() {||| 6 long long n, m;||| 7 sum[1] = 1;||| 8 f[1] = 1;||| 9 cin >> n >> m;||| 10 f[n] = sum[n] = 1;||| 11 for (long long i = n - 1; i >= 1; i--) {||| 12 f[i] = sum[i + 1];||| 13 for (long long j = 2; i * j <= n; j++) {||| 14 long long l = i * j, r = min(n, (i + 1) * j - 1);||| 15 if (l <= r) f[i] = ((f[i] + sum[l]) % m - sum[r + 1]) % m;||| 16 }||| 17 sum[i] = (sum[i + 1] + f[i]) % m;||| 18 }||| 19 cout << (f[n] + m) % m << '\n';||| 20 }||| 	4 long long sum[4000010], f[4000010];
77	35	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6, mod = 1e9 + 7;||| 4 long long n, m, ans[4 * N + 1];||| 5 void input() {||| 6 cin >> n >> m;||| 7 ans[1] = 1;||| 8 for (int i = 2; i <= n; i++) {||| 9 ans[i] = (ans[i] + 2LL * ans[i - 1] + 1) % m;||| 10 if (i == 2) ans[i]--;||| 11 for (int j = 2 * i; j <= n; j += i)||| 12 ans[j] = (ans[j] + ans[i] - ans[i - 1] + m) % m;||| 13 }||| 14 cout << ans[n] << endl;||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 input();||| 21 return 0;||| 22 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6, mod = 1e9 + 7;||| 4 int n, m, ans[4 * N + 1];||| 5 void input() {||| 6 cin >> n >> m;||| 7 ans[1] = 1;||| 8 for (int i = 2; i <= n; i++) {||| 9 ans[i] = (ans[i] + 2LL * ans[i - 1] + 1) % m;||| 10 if (i == 2) ans[i]--;||| 11 for (int j = 2 * i; j <= n; j += i)||| 12 ans[j] = (ans[j] + ans[i] - ans[i - 1] + m) % m;||| 13 }||| 14 cout << ans[n] << endl;||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cout.tie(0);||| 20 input();||| 21 return 0;||| 22 }||| 	4 long long n, m, ans[4 * N + 1];
77	14	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long INF = INT_MAX;||| 5 const long double pi = 4 * atan((long double)1);||| 6 template <class T>||| 7 inline T gcd(T a, T b) {||| 8 if (b)||| 9 return gcd(b, a % b);||| 10 else||| 11 return a;||| 12 }||| 13 template <class T>||| 14 inline T lcm(T a, T b) {||| 15 return a / gcd(a, b) * b;||| 16 }||| 17 long long f[4000006];||| 18 signed main() {||| 19 ios::sync_with_stdio();||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 ;||| 23 long long n, m;||| 24 scanf(""%lld%lld"", &n, &m);||| 25 f[1] = 1;||| 26 for (long long i = 2; i <= n; ++i) {||| 27 f[i] += ((2 * f[i - 1] + 1) % m);||| 28 f[i] = f[i] % m;||| 29 if (i == 2) f[i]--;||| 30 for (long long j = 2 * i; j <= n; j += i) {||| 31 f[j] += (f[i] - f[i - 1]);||| 32 f[j] = (f[j] + m) % m;||| 33 }||| 34 }||| 35 cout << f[n];||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long INF = INT_MAX;||| 5 const long double pi = 4 * atan((long double)1);||| 6 template <class T>||| 7 inline T gcd(T a, T b) {||| 8 if (b)||| 9 return gcd(b, a % b);||| 10 else||| 11 return a;||| 12 }||| 13 template <class T>||| 14 inline T lcm(T a, T b) {||| 15 return a / gcd(a, b) * b;||| 16 }||| 17 long long f[4000006];||| 18 signed main() {||| 19 ios::sync_with_stdio();||| 20 cin.tie(0);||| 21 cout.tie(0);||| 22 ;||| 23 long long n, m;||| 24 scanf(""%d%d"", &n, &m);||| 25 f[1] = 1;||| 26 for (long long i = 2; i <= n; ++i) {||| 27 f[i] += ((2 * f[i - 1] + 1) % m);||| 28 f[i] = f[i] % m;||| 29 if (i == 2) f[i]--;||| 30 for (long long j = 2 * i; j <= n; j += i) {||| 31 f[j] += (f[i] - f[i - 1]);||| 32 f[j] = (f[j] + m) % m;||| 33 }||| 34 }||| 35 cout << f[n];||| 36 }||| "	"24 scanf(""%lld%lld"", &n, &m);"
78	236	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100010, M = 1000010;||| 4 const unsigned long long P = 13331;||| 5 int n, a[N];||| 6 int main() {||| 7 int T;||| 8 cin >> T;||| 9 while (T--) {||| 10 long long l, r;||| 11 cin >> l >> r;||| 12 long long ans = 0;||| 13 if ((long long)l * 2 > r) {||| 14 ans = r - l;||| 15 } else {||| 16 if (r & 1)||| 17 ans = (r - 1) / 2;||| 18 else||| 19 ans = (r - 2) / 2;||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 return 0;||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 100010, M = 1000010;||| 4 const unsigned long long P = 13331;||| 5 int n, a[N];||| 6 int main() {||| 7 int T;||| 8 cin >> T;||| 9 while (T--) {||| 10 long long l, r;||| 11 cin >> l >> r;||| 12 long long ans = 0;||| 13 if ((long long)l * 2 > r) {||| 14 ans = r - l;||| 15 } else {||| 16 if (r & 1)||| 17 ans = (r - 2) / 2;||| 18 else||| 19 ans = (r - 1) / 2;||| 20 }||| 21 cout << ans << endl;||| 22 }||| 23 return 0;||| 24 }||| 	17 ans = (r - 1) / 2;
78	35	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 unsigned long long m, n;||| 8 cin >> m >> n;||| 9 long long max = -1;||| 10 long long diff = n - m;||| 11 long long a = n / 2;||| 12 if (m <= (n / 2)) {||| 13 cout << n % (a + 1);||| 14 } else {||| 15 cout << n % m;||| 16 }||| 17 cout << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 unsigned long long m, n;||| 8 cin >> m >> n;||| 9 long long max = -1;||| 10 long long diff = n - m;||| 11 long long a = n / 2;||| 12 if (m < (n / 2)) {||| 13 cout << n % (a + 1);||| 14 } else {||| 15 cout << n % m;||| 16 }||| 17 cout << endl;||| 18 }||| 19 return 0;||| 20 }||| 	12 if (m <= (n / 2)) {
78	247	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long l, r;||| 8 cin >> l >> r;||| 9 if (l == r) {||| 10 cout << 0 << endl;||| 11 } else if (l * 2 <= r) {||| 12 cout << (r + 1) / 2 - 1 << endl;||| 13 } else {||| 14 cout << r % l << endl;||| 15 }||| 16 }||| 17 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 long long t;||| 5 cin >> t;||| 6 while (t--) {||| 7 long long l, r;||| 8 cin >> l >> r;||| 9 if (l == r) {||| 10 cout << 0 << endl;||| 11 } else if (l * 2 <= r) {||| 12 cout << (r + 1) / 2 - 1 << endl;||| 13 } else {||| 14 cout << r % 1 << endl;||| 15 }||| 16 }||| 17 }||| 	14 cout << r % l << endl;
78	201	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename U>||| 4 inline void amin(T &x, U y) {||| 5 if (y < x) x = y;||| 6 }||| 7 template <typename T, typename U>||| 8 inline void amax(T &x, U y) {||| 9 if (x < y) x = y;||| 10 }||| 11 template <typename T>||| 12 inline void write(T x) {||| 13 long long i = 20;||| 14 char buf[21];||| 15 buf[20] = '\n';||| 16 do {||| 17 buf[--i] = x % 10 + '0';||| 18 x /= 10;||| 19 } while (x);||| 20 do {||| 21 putchar(buf[i]);||| 22 } while (buf[i++] != '\n');||| 23 }||| 24 template <typename T>||| 25 inline T readInt() {||| 26 T n = 0, s = 1;||| 27 char p = getchar();||| 28 if (p == '-') s = -1;||| 29 while ((p < '0' || p > '9') && p != EOF && p != '-') p = getchar();||| 30 if (p == '-') s = -1, p = getchar();||| 31 while (p >= '0' && p <= '9') {||| 32 n = (n << 3) + (n << 1) + (p - '0');||| 33 p = getchar();||| 34 }||| 35 return n * s;||| 36 }||| 37 long long gcd(long long a, long long b) {||| 38 if (a == 0) return b;||| 39 if (b == 0) return a;||| 40 if (a == b) return a;||| 41 if (a > b)||| 42 return gcd(a % b, b);||| 43 else||| 44 return gcd(a, b % a);||| 45 }||| 46 long long exp(long long x, long long n) {||| 47 if (n == 0) return 1;||| 48 if (n == 1) return x % 1000000007;||| 49 if (n % 2 == 0)||| 50 return exp((x * x) % 1000000007, n / 2);||| 51 else||| 52 return exp(x * exp((x * x) % 1000000007, n / 2));||| 53 }||| 54 bool sortbysec(const pair<long long, long long> &a,||| 55 const pair<long long, long long> &b) {||| 56 return (a.second < b.second);||| 57 }||| 58 void solve() {||| 59 long long l, r;||| 60 cin >> l >> r;||| 61 if (2 * l <= r) {||| 62 if (r % 2 == 0)||| 63 cout << r / 2 - 1 << ""\n"";||| 64 else||| 65 cout << r / 2 << ""\n"";||| 66 } else {||| 67 cout << r - l << ""\n"";||| 68 }||| 69 }||| 70 int32_t main() {||| 71 ios_base::sync_with_stdio(false);||| 72 cin.tie(NULL);||| 73 cout.tie(NULL);||| 74 long long t = 1;||| 75 cin >> t;||| 76 while (t--) {||| 77 solve();||| 78 }||| 79 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T, typename U>||| 4 inline void amin(T &x, U y) {||| 5 if (y < x) x = y;||| 6 }||| 7 template <typename T, typename U>||| 8 inline void amax(T &x, U y) {||| 9 if (x < y) x = y;||| 10 }||| 11 template <typename T>||| 12 inline void write(T x) {||| 13 long long i = 20;||| 14 char buf[21];||| 15 buf[20] = '\n';||| 16 do {||| 17 buf[--i] = x % 10 + '0';||| 18 x /= 10;||| 19 } while (x);||| 20 do {||| 21 putchar(buf[i]);||| 22 } while (buf[i++] != '\n');||| 23 }||| 24 template <typename T>||| 25 inline T readInt() {||| 26 T n = 0, s = 1;||| 27 char p = getchar();||| 28 if (p == '-') s = -1;||| 29 while ((p < '0' || p > '9') && p != EOF && p != '-') p = getchar();||| 30 if (p == '-') s = -1, p = getchar();||| 31 while (p >= '0' && p <= '9') {||| 32 n = (n << 3) + (n << 1) + (p - '0');||| 33 p = getchar();||| 34 }||| 35 return n * s;||| 36 }||| 37 long long gcd(long long a, long long b) {||| 38 if (a == 0) return b;||| 39 if (b == 0) return a;||| 40 if (a == b) return a;||| 41 if (a > b)||| 42 return gcd(a % b, b);||| 43 else||| 44 return gcd(a, b % a);||| 45 }||| 46 long long exp(long long x, long long n) {||| 47 if (n == 0) return 1;||| 48 if (n == 1) return x % 1000000007;||| 49 if (n % 2 == 0)||| 50 return exp((x * x) % 1000000007, n / 2);||| 51 else||| 52 return exp(x * exp((x * x) % 1000000007, n / 2));||| 53 }||| 54 bool sortbysec(const pair<long long, long long> &a,||| 55 const pair<long long, long long> &b) {||| 56 return (a.second < b.second);||| 57 }||| 58 void solve() {||| 59 long long l, r;||| 60 cin >> l >> r;||| 61 if (2 * l < r) {||| 62 if (r % 2 == 0)||| 63 cout << r / 2 - 1 << ""\n"";||| 64 else||| 65 cout << r / 2 << ""\n"";||| 66 } else {||| 67 cout << r - l << ""\n"";||| 68 }||| 69 }||| 70 int32_t main() {||| 71 ios_base::sync_with_stdio(false);||| 72 cin.tie(NULL);||| 73 cout.tie(NULL);||| 74 long long t = 1;||| 75 cin >> t;||| 76 while (t--) {||| 77 solve();||| 78 }||| 79 }||| "	61 if (2 * l <= r) {
78	166	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 const long long N = 4e6 + 6;||| 5 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 6 long long powmod(long long a, long long b) {||| 7 long long ans = 1;||| 8 while (b > 0) {||| 9 if (b & 1) ans = ans * a % mod;||| 10 a = a * a % mod;||| 11 b >>= 1;||| 12 }||| 13 return ans;||| 14 }||| 15 long long readn() {||| 16 long long sum = 0, f = 1;||| 17 char ch = getchar();||| 18 while (ch > '9' || ch < '0') {||| 19 if (ch == '-') f = -1;||| 20 ch = getchar();||| 21 }||| 22 while (ch >= '0' && ch <= '9') {||| 23 sum = sum * 10 + (ch - '0');||| 24 ch = getchar();||| 25 }||| 26 return sum * f;||| 27 }||| 28 long long t, l, r, p;||| 29 int main() {||| 30 t = readn();||| 31 while (t--) {||| 32 l = readn();||| 33 r = readn();||| 34 p = r - l;||| 35 if (p >= l)||| 36 cout << r / 2 - (r % 2 == 0);||| 37 else||| 38 cout << p;||| 39 cout << endl;||| 40 }||| 41 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 1e9 + 7;||| 4 const long long N = 4e6 + 6;||| 5 long long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }||| 6 long long powmod(long long a, long long b) {||| 7 long long ans = 1;||| 8 while (b > 0) {||| 9 if (b & 1) ans = ans * a % mod;||| 10 a = a * a % mod;||| 11 b >>= 1;||| 12 }||| 13 return ans;||| 14 }||| 15 long long readn() {||| 16 long long sum = 0, f = 1;||| 17 char ch = getchar();||| 18 while (ch > '9' || ch < '0') {||| 19 if (ch == '-') f = -1;||| 20 ch = getchar();||| 21 }||| 22 while (ch >= '0' && ch <= '9') {||| 23 sum = sum * 10 + (ch - '0');||| 24 ch = getchar();||| 25 }||| 26 return sum * f;||| 27 }||| 28 long long t, l, r, p;||| 29 int main() {||| 30 t = readn();||| 31 while (t--) {||| 32 l = readn();||| 33 r = readn();||| 34 p = r - l;||| 35 if (p > l)||| 36 cout << r / 2 - (r % 2 == 0);||| 37 else||| 38 cout << p;||| 39 cout << endl;||| 40 }||| 41 }||| 	35 if (p >= l)
78	240	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int a, b;||| 5 cin >> a >> b;||| 6 if (b % 2 == 1) {||| 7 if ((b + 1) / 2 >= a)||| 8 cout << b / 2 << endl;||| 9 else||| 10 cout << b - a << endl;||| 11 } else {||| 12 if ((b / 2) + 1 >= a)||| 13 cout << (b / 2) - 1 << endl;||| 14 else||| 15 cout << b - a << endl;||| 16 }||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long int t;||| 22 cin >> t;||| 23 while (t--) solve();||| 24 return 0;||| 25 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int a, b;||| 5 cin >> a >> b;||| 6 if (b % 2 == 1) {||| 7 if ((b + 1) / 2 >= a)||| 8 cout << b / 2 << endl;||| 9 else||| 10 cout << b - a << endl;||| 11 } else {||| 12 if ((b / 2) + 2 >= a)||| 13 cout << (b / 2) - 1 << endl;||| 14 else||| 15 cout << b - a << endl;||| 16 }||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long int t;||| 22 cin >> t;||| 23 while (t--) solve();||| 24 return 0;||| 25 }||| 	12 if ((b / 2) + 1 >= a)
78	227	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int l, r, ans, n;||| 5 cin >> n;||| 6 while (n--) {||| 7 cin >> l >> r;||| 8 int c = (r / 2) + 1;||| 9 if (l < c) {||| 10 ans = r % c;||| 11 cout << ans << endl;||| 12 } else {||| 13 ans = r % l;||| 14 cout << ans << endl;||| 15 }||| 16 }||| 17 return 0;||| 18 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int l, r, ans, n;||| 5 cin >> n;||| 6 while (n--) {||| 7 cin >> l >> r;||| 8 int c = (r / 2) + 1;||| 9 if (l < c) {||| 10 ans = r % c;||| 11 cout << ans << endl;||| 12 } else {||| 13 ans = l % r;||| 14 cout << ans << endl;||| 15 }||| 16 }||| 17 return 0;||| 18 }||| 	13 ans = r % l;
78	144	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 int reminder;||| 10 int s;||| 11 if (r / 2 >= l && r > 1) {||| 12 s = r / 2;||| 13 reminder = r % (s + 1);||| 14 } else {||| 15 s = l;||| 16 reminder = r % s;||| 17 }||| 18 cout << reminder << endl;||| 19 }||| 20 return 0;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 int reminder;||| 10 int s;||| 11 if (r / 2 > l && r > 1) {||| 12 s = r / 2;||| 13 reminder = r % (s + 1);||| 14 } else {||| 15 s = l;||| 16 reminder = r % s;||| 17 }||| 18 cout << reminder << endl;||| 19 }||| 20 return 0;||| 21 }||| 	11 if (r / 2 >= l && r > 1) {
78	60	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int M = 5e5 + 5;||| 5 const int INF = 2e9;||| 6 int main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 long long int n, m, t, i, j, k, a, b, c;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n >> m;||| 14 if (m % 2 == 0) {||| 15 a = m - 1;||| 16 b = max(m / 2, n);||| 17 c = m % b;||| 18 if (n == m) {||| 19 a = 0;||| 20 }||| 21 } else {||| 22 a = m;||| 23 b = max((m + 1) / 2, n);||| 24 c = 0;||| 25 }||| 26 cout << max(c, a % b) << '\n';||| 27 }||| 28 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int M = 5e5 + 5;||| 5 const int INF = 2e9;||| 6 int main() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 long long int n, m, t, i, j, k, a, b, c;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n >> m;||| 14 if (m % 2 == 0) {||| 15 a = m - 1;||| 16 b = max(m / 2, n);||| 17 c = m % b;||| 18 if (n == m) {||| 19 c = 0;||| 20 }||| 21 } else {||| 22 a = m;||| 23 b = max((m + 1) / 2, n);||| 24 c = 0;||| 25 }||| 26 cout << max(c, a % b) << '\n';||| 27 }||| 28 }||| 	19 a = 0;
78	138	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int MOD = 1e9 + 7;||| 4 const long long int MAX_N = 1e5 + 1;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 long long int l, r;||| 10 long long int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> l >> r;||| 14 long long int h = r / 2;||| 15 if (l > h)||| 16 cout << (r % l) << ""\n"";||| 17 else||| 18 cout << (r) % (h + 1) << ""\n"";||| 19 }||| 20 return 0;||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int MOD = 1e9 + 7;||| 4 const long long int MAX_N = 1e5 + 1;||| 5 int main() {||| 6 ios_base::sync_with_stdio(false);||| 7 cin.tie(NULL);||| 8 cout.tie(NULL);||| 9 long long int l, r;||| 10 long long int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> l >> r;||| 14 long long int h = r / 2;||| 15 if (l >= h)||| 16 cout << (r % l) << ""\n"";||| 17 else||| 18 cout << (r) % (h + 1) << ""\n"";||| 19 }||| 20 return 0;||| 21 }||| "	15 if (l > h)
78	346	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 if (r < l * 2)||| 10 cout << r - l << endl;||| 11 else||| 12 cout << (r - 1) / 2 << endl;||| 13 }||| 14 return 0;||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 if (r < l * 2)||| 10 cout << r - 1 << endl;||| 11 else||| 12 cout << (r - 1) / 2 << endl;||| 13 }||| 14 return 0;||| 15 }||| 	10 cout << r - l << endl;
78	26	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int findN(int l, int r) {||| 4 int num, i, j;||| 5 if (r == 1) return 0;||| 6 num = 0;||| 7 if (l <= r / 2) {||| 8 l = r / 2 + 1;||| 9 }||| 10 num = r % l;||| 11 return num;||| 12 }||| 13 int main() {||| 14 int TC, l, r;||| 15 cin >> TC;||| 16 while (TC--) {||| 17 cin >> l >> r;||| 18 cout << findN(l, r) << endl;||| 19 }||| 20 return 0;||| 21 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int findN(int l, int r) {||| 4 int num, i, j;||| 5 if (r == 1) return 0;||| 6 num = 0;||| 7 if (l < r / 2) {||| 8 l = r / 2 + 1;||| 9 }||| 10 num = r % l;||| 11 return num;||| 12 }||| 13 int main() {||| 14 int TC, l, r;||| 15 cin >> TC;||| 16 while (TC--) {||| 17 cin >> l >> r;||| 18 cout << findN(l, r) << endl;||| 19 }||| 20 return 0;||| 21 }||| 	7 if (l <= r / 2) {
78	122	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(void) {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a, b;||| 8 cin >> a >> b;||| 9 int max_t = a > b ? a : b;||| 10 int min_t = a < b ? a : b;||| 11 if (min_t <= max_t / 2)||| 12 cout << max_t % (max_t / 2 + 1) << endl;||| 13 else||| 14 cout << max_t % min_t << endl;||| 15 }||| 16 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(void) {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a, b;||| 8 cin >> a >> b;||| 9 int max_t = a > b ? a : b;||| 10 int min_t = a < b ? a : b;||| 11 if (min_t < max_t / 2)||| 12 cout << max_t % (max_t / 2 + 1) << endl;||| 13 else||| 14 cout << max_t % min_t << endl;||| 15 }||| 16 }||| 	11 if (min_t <= max_t / 2)
78	321	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long a, b;||| 5 cin >> a >> b;||| 6 if (2 * a <= b)||| 7 cout << (b - 1) / 2 << ""\n"";||| 8 else||| 9 cout << (b - a) << ""\n"";||| 10 }||| 11 int main() {||| 12 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 13 int t = 1;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long a, b;||| 5 cin >> a >> b;||| 6 if (2 * a <= b)||| 7 cout << (b - 1) / 2 << ""\n"";||| 8 else||| 9 cout << (b - 1) << ""\n"";||| 10 }||| 11 int main() {||| 12 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 13 int t = 1;||| 14 cin >> t;||| 15 while (t--) {||| 16 solve();||| 17 }||| 18 }||| "	"9 cout << (b - a) << ""\n"";"
78	217	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 if (l <= r / 2) {||| 10 cout << (r - 1) / 2 << endl;||| 11 } else {||| 12 cout << r % l << endl;||| 13 }||| 14 }||| 15 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int l, r;||| 8 cin >> l >> r;||| 9 if (l < r / 2) {||| 10 cout << (r - 1) / 2 << endl;||| 11 } else {||| 12 cout << r % l << endl;||| 13 }||| 14 }||| 15 }||| 	9 if (l <= r / 2) {
78	184	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7;||| 4 void __print(int x) { cerr << x; }||| 5 void __print(long x) { cerr << x; }||| 6 void __print(long long x) { cerr << x; }||| 7 void __print(unsigned x) { cerr << x; }||| 8 void __print(unsigned long x) { cerr << x; }||| 9 void __print(unsigned long long x) { cerr << x; }||| 10 void __print(float x) { cerr << x; }||| 11 void __print(double x) { cerr << x; }||| 12 void __print(long double x) { cerr << x; }||| 13 void __print(char x) { cerr << '\'' << x << '\''; }||| 14 void __print(const char *x) { cerr << '\""' << x << '\""'; }||| 15 void __print(const string &x) { cerr << '\""' << x << '\""'; }||| 16 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 17 template <typename T, typename V>||| 18 void __print(const pair<T, V> &x) {||| 19 cerr << '{';||| 20 __print(x.first);||| 21 cerr << ',';||| 22 __print(x.second);||| 23 cerr << '}';||| 24 }||| 25 template <typename T>||| 26 void __print(const T &x) {||| 27 int f = 0;||| 28 cerr << '{';||| 29 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 30 cerr << ""}"";||| 31 }||| 32 void _print() { cerr << ""]\n""; }||| 33 template <typename T, typename... V>||| 34 void _print(T t, V... v) {||| 35 __print(t);||| 36 if (sizeof...(v)) cerr << "", "";||| 37 _print(v...);||| 38 }||| 39 void solve() {||| 40 long long int l, r;||| 41 cin >> l >> r;||| 42 long long int mposs = (r - 1) >> 1;||| 43 if (r - mposs >= l)||| 44 cout << mposs << ""\n"";||| 45 else||| 46 cout << r % l << ""\n"";||| 47 }||| 48 signed main() {||| 49 int t = 1;||| 50 cin >> t;||| 51 while (t--) {||| 52 solve();||| 53 }||| 54 return 0;||| 55 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7;||| 4 void __print(int x) { cerr << x; }||| 5 void __print(long x) { cerr << x; }||| 6 void __print(long long x) { cerr << x; }||| 7 void __print(unsigned x) { cerr << x; }||| 8 void __print(unsigned long x) { cerr << x; }||| 9 void __print(unsigned long long x) { cerr << x; }||| 10 void __print(float x) { cerr << x; }||| 11 void __print(double x) { cerr << x; }||| 12 void __print(long double x) { cerr << x; }||| 13 void __print(char x) { cerr << '\'' << x << '\''; }||| 14 void __print(const char *x) { cerr << '\""' << x << '\""'; }||| 15 void __print(const string &x) { cerr << '\""' << x << '\""'; }||| 16 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 17 template <typename T, typename V>||| 18 void __print(const pair<T, V> &x) {||| 19 cerr << '{';||| 20 __print(x.first);||| 21 cerr << ',';||| 22 __print(x.second);||| 23 cerr << '}';||| 24 }||| 25 template <typename T>||| 26 void __print(const T &x) {||| 27 int f = 0;||| 28 cerr << '{';||| 29 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 30 cerr << ""}"";||| 31 }||| 32 void _print() { cerr << ""]\n""; }||| 33 template <typename T, typename... V>||| 34 void _print(T t, V... v) {||| 35 __print(t);||| 36 if (sizeof...(v)) cerr << "", "";||| 37 _print(v...);||| 38 }||| 39 void solve() {||| 40 long long int l, r;||| 41 cin >> l >> r;||| 42 long long int mposs = (r - 1) >> 1;||| 43 if (mposs >= l)||| 44 cout << mposs << ""\n"";||| 45 else||| 46 cout << r % l << ""\n"";||| 47 }||| 48 signed main() {||| 49 int t = 1;||| 50 cin >> t;||| 51 while (t--) {||| 52 solve();||| 53 }||| 54 return 0;||| 55 }||| "	43 if (r - mposs >= l)
78	107	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 for (int i = 1; i <= T; i++) {||| 7 int l, r, a, b;||| 8 cin >> l >> r;||| 9 a = r;||| 10 if (l <= (r / 2)) {||| 11 b = ((r / 2) + 1);||| 12 } else {||| 13 b = l;||| 14 }||| 15 int largest = a % b;||| 16 cout << largest << endl;||| 17 }||| 18 return 0;||| 19 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 for (int i = 1; i <= T; i++) {||| 7 int l, r, a, b;||| 8 cin >> l >> r;||| 9 a = r;||| 10 if (l < (r / 2)) {||| 11 b = ((r / 2) + 1);||| 12 } else {||| 13 b = l;||| 14 }||| 15 int largest = a % b;||| 16 cout << largest << endl;||| 17 }||| 18 return 0;||| 19 }||| 	10 if (l <= (r / 2)) {
78	182	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int maxn = 1e5 + 55;||| 4 const long long int inf = 1e18;||| 5 const long long int lg = 20;||| 6 const long long int modn = 1e9 + 7;||| 7 long long int T, len, num, sum, x, fir, sec;||| 8 long long int all[maxn];||| 9 int main() {||| 10 std::ios_base::sync_with_stdio(false);||| 11 cin >> T;||| 12 while (T--) {||| 13 cin >> fir >> sec;||| 14 if ((sec + 1) / 2 >= fir)||| 15 cout << (sec - 1) / 2 << endl;||| 16 else||| 17 cout << sec % fir << endl;||| 18 }||| 19 return 0;||| 20 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int maxn = 1e5 + 55;||| 4 const long long int inf = 1e18;||| 5 const long long int lg = 20;||| 6 const long long int modn = 1e9 + 7;||| 7 long long int T, len, num, sum, x, fir, sec;||| 8 long long int all[maxn];||| 9 int main() {||| 10 std::ios_base::sync_with_stdio(false);||| 11 cin >> T;||| 12 while (T--) {||| 13 cin >> fir >> sec;||| 14 if ((sec + 1) / 2 >= fir)||| 15 cout << (sec - 1) / 2 << endl;||| 16 else||| 17 cout << fir % sec << endl;||| 18 }||| 19 return 0;||| 20 }||| 	17 cout << sec % fir << endl;
79	291	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")||| 5 const double Pi = acos(-1);||| 6 using namespace std;||| 7 int debug = 01;||| 8 void solve() {||| 9 int n;||| 10 string s;||| 11 cin >> n >> s;||| 12 int a = -1, b = -1, c = 0, d = 0, e = 0;||| 13 for (auto x : s) {||| 14 if (x == '1' || x == '4' || x == '6' || x == '8' || x == '9') {||| 15 cout << ""1\n"" << x << ""\n"";||| 16 return;||| 17 }||| 18 if (x == '3') a = c, d++;||| 19 if (x == '7') b = c, e++;||| 20 c++;||| 21 }||| 22 for (int i = 1; i < n; i++) {||| 23 if (s[i] == '2' || s[i] == '5') {||| 24 cout << ""2\n"" << s[0] << s[i] << ""\n"";||| 25 return;||| 26 }||| 27 if ((s[0] == '2' || s[0] == '5') && (s[i] == '7')) {||| 28 cout << ""2\n"" << s[0] << s[i] << ""\n"";||| 29 return;||| 30 }||| 31 }||| 32 if (d > 1)||| 33 cout << ""2\n33\n"";||| 34 else if (e > 1)||| 35 cout << ""2\n77\n"";||| 36 else||| 37 cout << n << ""\n"" << s << ""\n"";||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(NULL);||| 42 int tst = 1;||| 43 cin >> tst;||| 44 for (int T = 1; T <= tst; T++) {||| 45 solve();||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC optimize(""unroll-loops"")||| 4 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native"")||| 5 const double Pi = acos(-1);||| 6 using namespace std;||| 7 int debug = 01;||| 8 void solve() {||| 9 int n;||| 10 string s;||| 11 cin >> n >> s;||| 12 int a = -1, b = -1, c = 0, d = 0, e = 0;||| 13 for (auto x : s) {||| 14 if (x == '1' || x == '4' || x == '6' || x == '8' || x == '9') {||| 15 cout << ""1\n"" << x << ""\n"";||| 16 return;||| 17 }||| 18 if (x == '3') a = c, d++;||| 19 if (x == '7') b = c, e++;||| 20 c++;||| 21 }||| 22 for (int i = 1; i < n; i++) {||| 23 if (s[i] == '2' || s[i] == '5') {||| 24 cout << ""2\n"" << s[0] << s[i] << ""\n"";||| 25 return;||| 26 }||| 27 if ((s[0] == '2' || s[i] == '5') && (s[i] == '7')) {||| 28 cout << ""2\n"" << s[0] << s[i] << ""\n"";||| 29 return;||| 30 }||| 31 }||| 32 if (d > 1)||| 33 cout << ""2\n33\n"";||| 34 else if (e > 1)||| 35 cout << ""2\n77\n"";||| 36 else||| 37 cout << n << ""\n"" << s << ""\n"";||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(NULL);||| 42 int tst = 1;||| 43 cin >> tst;||| 44 for (int T = 1; T <= tst; T++) {||| 45 solve();||| 46 }||| 47 }||| "	27 if ((s[0] == '2' || s[0] == '5') && (s[i] == '7')) {
79	317	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 ostream &operator<<(ostream &output, const vector<T> &vec) {||| 5 if (vec.empty()) return output;||| 6 for (int i = 0; i < vec.size() - 1; i++) output << vec[i] << "" "";||| 7 output << vec.back();||| 8 return output;||| 9 }||| 10 template <typename T>||| 11 istream &operator>>(istream &input, vector<T> &vec) {||| 12 for (auto &i : vec) cin >> i;||| 13 return input;||| 14 }||| 15 long long nxt() {||| 16 long long i;||| 17 cin >> i;||| 18 return i;||| 19 }||| 20 void fun() {||| 21 long long k;||| 22 cin >> k;||| 23 string s;||| 24 cin >> s;||| 25 vector<int> cnt(10, 0);||| 26 for (long long i = 0; i < k; i++) {||| 27 cnt[s[i] - '0']++;||| 28 if (s[i] == '1' || s[i] == '4' || s[i] == '6' || s[i] == '8' ||||| 29 s[i] == '9') {||| 30 cout << 1 << ""\n"" << s[i] << ""\n"";||| 31 return;||| 32 }||| 33 }||| 34 for (long long i = 1; i < 10; i++) {||| 35 if (cnt[i] >= 2) {||| 36 cout << 2 << ""\n"" << (char)('0' + i) << (char)('0' + i) << ""\n"";||| 37 return;||| 38 }||| 39 }||| 40 if (cnt[2] == 1 && s[0] != '2')||| 41 cout << 2 << ""\n"" << s[0] << 2 << ""\n"";||| 42 else if (cnt[5] == 1 && s[0] != '5')||| 43 cout << 2 << ""\n"" << s[0] << 5 << ""\n"";||| 44 else if (s == ""237"")||| 45 cout << 2 << ""\n"" << 27 << ""\n"";||| 46 else if (s == ""273"")||| 47 cout << 2 << ""\n"" << 27 << ""\n"";||| 48 else if (s == ""537"")||| 49 cout << 2 << ""\n"" << 57 << ""\n"";||| 50 else if (s == ""573"")||| 51 cout << 2 << ""\n"" << 57 << ""\n"";||| 52 else||| 53 cout << s.length() << ""\n"" << s << ""\n"";||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false);||| 57 cin.tie(NULL);||| 58 ;||| 59 long long t;||| 60 cin >> t;||| 61 while (t--) fun();||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 ostream &operator<<(ostream &output, const vector<T> &vec) {||| 5 if (vec.empty()) return output;||| 6 for (int i = 0; i < vec.size() - 1; i++) output << vec[i] << "" "";||| 7 output << vec.back();||| 8 return output;||| 9 }||| 10 template <typename T>||| 11 istream &operator>>(istream &input, vector<T> &vec) {||| 12 for (auto &i : vec) cin >> i;||| 13 return input;||| 14 }||| 15 long long nxt() {||| 16 long long i;||| 17 cin >> i;||| 18 return i;||| 19 }||| 20 void fun() {||| 21 long long k;||| 22 cin >> k;||| 23 string s;||| 24 cin >> s;||| 25 vector<int> cnt(10, 0);||| 26 for (long long i = 0; i < k; i++) {||| 27 cnt[s[i] - '0']++;||| 28 if (s[i] == '1' || s[i] == '4' || s[i] == '6' || s[i] == '8' ||||| 29 s[i] == '9') {||| 30 cout << 1 << ""\n"" << s[i] << ""\n"";||| 31 return;||| 32 }||| 33 }||| 34 for (long long i = 1; i < 10; i++) {||| 35 if (cnt[i] >= 2) {||| 36 cout << 2 << ""\n"" << (char)('0' + i) << (char)('0' + i) << ""\n"";||| 37 return;||| 38 }||| 39 }||| 40 if (cnt[2] == 1 && s[0] != '2')||| 41 cout << 2 << ""\n"" << s[0] << 2 << ""\n"";||| 42 else if (cnt[5] == 1 && s[0] != '5')||| 43 cout << 2 << ""\n"" << s[0] << 5 << ""\n"";||| 44 else if (s == ""237"")||| 45 cout << 2 << ""\n"" << 27 << ""\n"";||| 46 else if (s == ""273"")||| 47 cout << 2 << ""\n"" << 27 << ""\n"";||| 48 else if (s == ""537"")||| 49 cout << 2 << ""\n"" << 57 << ""\n"";||| 50 else if (s == ""573"")||| 51 cout << 2 << ""\n"" << 57 << ""\n"";||| 52 cout << s.length() << ""\n"" << s << ""\n"";||| 53 }||| 54 int main() {||| 55 ios_base::sync_with_stdio(false);||| 56 cin.tie(NULL);||| 57 ;||| 58 long long t;||| 59 cin >> t;||| 60 while (t--) fun();||| 61 return 0;||| 62 }||| "	52 else
79	486	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 55;||| 4 int n;||| 5 char s[N];||| 6 inline bool isprime(int num) {||| 7 if (num <= 1) return 0;||| 8 for (int i = 2; i <= sqrt(num); i++)||| 9 if (num % i == 0) return 0;||| 10 return 1;||| 11 }||| 12 int main() {||| 13 int T;||| 14 scanf(""%d"", &T);||| 15 while (T--) {||| 16 scanf(""%d"", &n);||| 17 scanf(""%s"", s + 1);||| 18 bool succeed = 0;||| 19 for (int i = 1; i <= n; i++)||| 20 if (s[i] != '2' && s[i] != '3' && s[i] != '5' && s[i] != '7') {||| 21 puts(""1"");||| 22 printf(""%c\n"", s[i]);||| 23 succeed = 1;||| 24 break;||| 25 }||| 26 if (succeed) continue;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = i + 1; j <= n; j++) {||| 29 if (succeed) break;||| 30 int num = (s[i] - '0') * 10 + (s[j] - '0');||| 31 if (!isprime(num)) {||| 32 puts(""2"");||| 33 printf(""%c%c\n"", s[i], s[j]);||| 34 succeed = 1;||| 35 break;||| 36 }||| 37 }||| 38 if (!succeed) assert(0);||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 55;||| 4 int n;||| 5 char s[N];||| 6 inline bool isprime(int num) {||| 7 if (num <= 1) return 0;||| 8 for (int i = 1; i <= sqrt(num); i++)||| 9 if (num % i == 0) return 0;||| 10 return 1;||| 11 }||| 12 int main() {||| 13 int T;||| 14 scanf(""%d"", &T);||| 15 while (T--) {||| 16 scanf(""%d"", &n);||| 17 scanf(""%s"", s + 1);||| 18 bool succeed = 0;||| 19 for (int i = 1; i <= n; i++)||| 20 if (s[i] != '2' && s[i] != '3' && s[i] != '5' && s[i] != '7') {||| 21 puts(""1"");||| 22 printf(""%c\n"", s[i]);||| 23 succeed = 1;||| 24 break;||| 25 }||| 26 if (succeed) continue;||| 27 for (int i = 1; i <= n; i++)||| 28 for (int j = i + 1; j <= n; j++) {||| 29 if (succeed) break;||| 30 int num = (s[i] - '0') * 10 + (s[j] - '0');||| 31 if (!isprime(num)) {||| 32 puts(""2"");||| 33 printf(""%c%c\n"", s[i], s[j]);||| 34 succeed = 1;||| 35 break;||| 36 }||| 37 }||| 38 if (!succeed) assert(0);||| 39 }||| 40 return 0;||| 41 }||| "	8 for (int i = 2; i <= sqrt(num); i++)
79	16	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int _q;||| 8 cin >> _q;||| 9 string n2 = ""222527323335525557727577"";||| 10 int sizn2 = n2.size();||| 11 for (int _t = 0; _t < _q; _t++) {||| 12 int k, ans = 0;||| 13 cin >> k;||| 14 cin.ignore();||| 15 string s;||| 16 getline(cin, s);||| 17 int a[10] = {};||| 18 for (int i = 0; i < k; i++) {||| 19 a[s[i] - '0']++;||| 20 }||| 21 if (a[4] != 0)||| 22 cout << 1 << '\n' << 4 << '\n';||| 23 else if (a[1] != 0)||| 24 cout << 1 << '\n' << 1 << '\n';||| 25 else if (a[6] != 0)||| 26 cout << 1 << '\n' << 6 << '\n';||| 27 else if (a[8] != 0)||| 28 cout << 1 << '\n' << 8 << '\n';||| 29 else if (a[9] != 0)||| 30 cout << 1 << '\n' << 9 << '\n';||| 31 else {||| 32 int fl = 0;||| 33 for (int i = 0; i < sizn2; i += 2) {||| 34 int ind1 = s.find(n2[i]);||| 35 if (!(ind1 != string::npos)) continue;||| 36 int ind2 = s.find(n2[i + 1], ind1 + 1);||| 37 if (ind2 != string::npos) {||| 38 cout << 2 << '\n' << n2[i] << n2[i + 1] << '\n';||| 39 fl = 1;||| 40 break;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.tie(NULL);||| 7 int _q;||| 8 cin >> _q;||| 9 string n2 = ""2225273233355557727577"";||| 10 int sizn2 = n2.size();||| 11 for (int _t = 0; _t < _q; _t++) {||| 12 int k, ans = 0;||| 13 cin >> k;||| 14 cin.ignore();||| 15 string s;||| 16 getline(cin, s);||| 17 int a[10] = {};||| 18 for (int i = 0; i < k; i++) {||| 19 a[s[i] - '0']++;||| 20 }||| 21 if (a[4] != 0)||| 22 cout << 1 << '\n' << 4 << '\n';||| 23 else if (a[1] != 0)||| 24 cout << 1 << '\n' << 1 << '\n';||| 25 else if (a[6] != 0)||| 26 cout << 1 << '\n' << 6 << '\n';||| 27 else if (a[8] != 0)||| 28 cout << 1 << '\n' << 8 << '\n';||| 29 else if (a[9] != 0)||| 30 cout << 1 << '\n' << 9 << '\n';||| 31 else {||| 32 int fl = 0;||| 33 for (int i = 0; i < sizn2; i += 2) {||| 34 int ind1 = s.find(n2[i]);||| 35 if (!(ind1 != string::npos)) continue;||| 36 int ind2 = s.find(n2[i + 1], ind1 + 1);||| 37 if (ind2 != string::npos) {||| 38 cout << 2 << '\n' << n2[i] << n2[i + 1] << '\n';||| 39 fl = 1;||| 40 break;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 }||| "	"9 string n2 = ""222527323335525557727577"";"
79	84	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma,sse2"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 int64_t t, n, l, r, a[1000005];||| 7 string s;||| 8 bool prime(int x) {||| 9 for (int i = 2; i * i <= x; i++) {||| 10 if (x % i == 0) return 0;||| 11 }||| 12 return 1;||| 13 }||| 14 void solve() {||| 15 int vt = -1;||| 16 for (int i = 0; i < n; i++) {||| 17 if (int(s[i]) % 2 == 0 && s[i] != '2') vt = int(s[i]) - 48;||| 18 }||| 19 if (vt > -1)||| 20 cout << 1 << ""\n"" << vt << ""\n"";||| 21 else {||| 22 for (int i = 0; i < n; i++) {||| 23 if (s[i] == '9') vt = 9;||| 24 if (s[i] == '1') vt = 1;||| 25 }||| 26 if (vt > 0)||| 27 cout << 1 << ""\n"" << vt << ""\n"";||| 28 else {||| 29 if (n <= 5) {||| 30 bool b[6];||| 31 int ans = 99999;||| 32 for (int i = 1; i <= n; i++) b[i] = 0;||| 33 b[n] = 1;||| 34 while (1) {||| 35 int sum = 0, num = 1;||| 36 vector<int> v;||| 37 for (int i = n; i >= 1; i--) {||| 38 if (b[i]) v.push_back(int(s[i - 1]) - 48);||| 39 }||| 40 for (auto i : v) {||| 41 sum += i * num;||| 42 num *= 10;||| 43 }||| 44 if (!prime(sum)) ans = min(ans, sum);||| 45 bool f = 0;||| 46 for (int i = n; i >= 1; i--) {||| 47 if (!b[i]) {||| 48 f = 1;||| 49 b[i] = 1;||| 50 for (int j = i + 1; j <= n; j++) b[j] = 0;||| 51 break;||| 52 }||| 53 }||| 54 if (!f) break;||| 55 }||| 56 if (10 <= ans && ans <= 99)||| 57 cout << 2 << ""\n"" << ans << ""\n"";||| 58 else if (100 <= ans && ans <= 999)||| 59 cout << 3 << ""\n"" << ans << ""\n"";||| 60 else if (1000 <= ans && ans <= 9999)||| 61 cout << 4 << ""\n"" << ans << ""\n"";||| 62 else||| 63 cout << 5 << ""\n"" << ans << ""\n"";||| 64 } else {||| 65 int ans = 999;||| 66 for (int i = 0; i < s.size() - 1; i++) {||| 67 for (int j = i + 1; j < s.size(); j++) {||| 68 int num = (int(s[i]) - 48) * 10 + int(s[j]) - 48;||| 69 if (!prime(num)) ans = min(ans, num);||| 70 }||| 71 }||| 72 for (int i = 0; i < s.size() - 2; i++) {||| 73 for (int j = i + 1; j < s.size() - 1; j++) {||| 74 for (int k = j + 1; k < s.size(); k++) {||| 75 int num = (int(s[i]) - 48) * 100 + (int(s[j]) - 48) * 10 +||| 76 int(s[k]) - 48;||| 77 if (!prime(num)) ans = min(ans, num);||| 78 }||| 79 }||| 80 }||| 81 if (10 <= ans && ans <= 99)||| 82 cout << 2 << ""\n"" << ans << ""\n"";||| 83 else||| 84 cout << 3 << ""\n"" << ans << ""\n"";||| 85 }||| 86 }||| 87 }||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(NULL);||| 91 cin.tie(nullptr);||| 92 cout.tie(nullptr);||| 93 cin >> t;||| 94 while (t--) {||| 95 cin >> n >> s;||| 96 solve();||| 97 }||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""avx,avx2,fma,sse2"")||| 4 #pragma GCC optimization(""unroll-loops"")||| 5 using namespace std;||| 6 int64_t t, n, l, r, a[1000005];||| 7 string s;||| 8 bool prime(int x) {||| 9 for (int i = 2; i * i <= x; i++) {||| 10 if (x % i == 0) return 0;||| 11 }||| 12 return 1;||| 13 }||| 14 void solve() {||| 15 int vt = -1;||| 16 for (int i = 0; i < n; i++) {||| 17 if (int(s[i]) % 2 == 0 && s[i] != '2') vt = int(s[i]) - 48;||| 18 }||| 19 if (vt > -1)||| 20 cout << 1 << ""\n"" << vt << ""\n"";||| 21 else {||| 22 for (int i = 0; i < n; i++) {||| 23 if (s[i] == '9') vt = 9;||| 24 if (s[i] == '1') vt = 1;||| 25 }||| 26 if (vt > 0)||| 27 cout << 1 << ""\n"" << 9 << ""\n"";||| 28 else {||| 29 if (n <= 5) {||| 30 bool b[6];||| 31 int ans = 99999;||| 32 for (int i = 1; i <= n; i++) b[i] = 0;||| 33 b[n] = 1;||| 34 while (1) {||| 35 int sum = 0, num = 1;||| 36 vector<int> v;||| 37 for (int i = n; i >= 1; i--) {||| 38 if (b[i]) v.push_back(int(s[i - 1]) - 48);||| 39 }||| 40 for (auto i : v) {||| 41 sum += i * num;||| 42 num *= 10;||| 43 }||| 44 if (!prime(sum)) ans = min(ans, sum);||| 45 bool f = 0;||| 46 for (int i = n; i >= 1; i--) {||| 47 if (!b[i]) {||| 48 f = 1;||| 49 b[i] = 1;||| 50 for (int j = i + 1; j <= n; j++) b[j] = 0;||| 51 break;||| 52 }||| 53 }||| 54 if (!f) break;||| 55 }||| 56 if (10 <= ans && ans <= 99)||| 57 cout << 2 << ""\n"" << ans << ""\n"";||| 58 else if (100 <= ans && ans <= 999)||| 59 cout << 3 << ""\n"" << ans << ""\n"";||| 60 else if (1000 <= ans && ans <= 9999)||| 61 cout << 4 << ""\n"" << ans << ""\n"";||| 62 else||| 63 cout << 5 << ""\n"" << ans << ""\n"";||| 64 } else {||| 65 int ans = 999;||| 66 for (int i = 0; i < s.size() - 1; i++) {||| 67 for (int j = i + 1; j < s.size(); j++) {||| 68 int num = (int(s[i]) - 48) * 10 + int(s[j]) - 48;||| 69 if (!prime(num)) ans = min(ans, num);||| 70 }||| 71 }||| 72 for (int i = 0; i < s.size() - 2; i++) {||| 73 for (int j = i + 1; j < s.size() - 1; j++) {||| 74 for (int k = j + 1; k < s.size(); k++) {||| 75 int num = (int(s[i]) - 48) * 100 + (int(s[j]) - 48) * 10 +||| 76 int(s[k]) - 48;||| 77 if (!prime(num)) ans = min(ans, num);||| 78 }||| 79 }||| 80 }||| 81 if (10 <= ans && ans <= 99)||| 82 cout << 2 << ""\n"" << ans << ""\n"";||| 83 else||| 84 cout << 3 << ""\n"" << ans << ""\n"";||| 85 }||| 86 }||| 87 }||| 88 }||| 89 int main() {||| 90 ios_base::sync_with_stdio(NULL);||| 91 cin.tie(nullptr);||| 92 cout.tie(nullptr);||| 93 cin >> t;||| 94 while (t--) {||| 95 cin >> n >> s;||| 96 solve();||| 97 }||| 98 }||| "	"27 cout << 1 << ""\n"" << vt << ""\n"";"
79	422	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isComposite[10000];||| 4 string brute(string s) {||| 5 int n = s.size(), ans = 1000000;||| 6 for (long long i = 1; i < (1 << n); i++) {||| 7 int tot = 0;||| 8 int j = i;||| 9 for (auto c : s) {||| 10 if (j & 1) {||| 11 tot *= 10;||| 12 tot += (c - '0');||| 13 }||| 14 j >>= 1;||| 15 }||| 16 if (isComposite[tot]) ans = min(ans, tot);||| 17 }||| 18 return to_string(ans);||| 19 }||| 20 void solve() {||| 21 int k;||| 22 cin >> k;||| 23 string s;||| 24 cin >> s;||| 25 if (k < 5) {||| 26 string ans = brute(s);||| 27 cout << ans.size() << endl << ans << endl;||| 28 } else {||| 29 vector<int> cnt(10, 0);||| 30 for (auto c : s) cnt[c - '0']++;||| 31 int lenOne[5] = {1, 4, 6, 8, 9};||| 32 for (long long i = 0; i < 5; i++) {||| 33 if (cnt[lenOne[i]]) {||| 34 cout << 1 << endl << (char)('0' + lenOne[i]) << endl;||| 35 return;||| 36 }||| 37 }||| 38 for (long long i = 0; i < 10; i++) {||| 39 if (cnt[i] > 1) {||| 40 cout << 2 << endl << (char)('0' + i) << (char)('0' + i) << endl;||| 41 return;||| 42 }||| 43 }||| 44 }||| 45 }||| 46 int main() {||| 47 for (long long i = 0; i < 10000; i++) isComposite[i] = false;||| 48 isComposite[1] = true;||| 49 for (long long i = 2; i < 10000; i++) {||| 50 for (int j = 2; i * j < 10000; j++) isComposite[i * j] = true;||| 51 }||| 52 ios_base::sync_with_stdio(false);||| 53 cin.tie(NULL);||| 54 int T;||| 55 cin >> T;||| 56 for (long long t = 0; t < T; t++) {||| 57 solve();||| 58 }||| 59 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isComposite[10000];||| 4 string brute(string s) {||| 5 int n = s.size(), ans = 1000000;||| 6 for (long long i = 1; i < (1 << n); i++) {||| 7 int tot = 0;||| 8 int j = i;||| 9 for (auto c : s) {||| 10 if (j & 1) {||| 11 tot *= 10;||| 12 tot += (c - '0');||| 13 }||| 14 j >>= 1;||| 15 }||| 16 if (isComposite[tot]) ans = min(ans, tot);||| 17 }||| 18 return to_string(ans);||| 19 }||| 20 void solve() {||| 21 int k;||| 22 cin >> k;||| 23 string s;||| 24 cin >> s;||| 25 if (k < 5) {||| 26 string ans = brute(s);||| 27 cout << ans.size() << endl << ans << endl;||| 28 } else {||| 29 vector<int> cnt(10, 0);||| 30 for (auto c : s) cnt[c - '0']++;||| 31 int lenOne[5] = {1, 4, 6, 8, 9};||| 32 for (long long i = 0; i < 5; i++) {||| 33 if (cnt[lenOne[i]]) {||| 34 cout << 1 << endl << (char)('0' + lenOne[i]) << endl;||| 35 return;||| 36 }||| 37 }||| 38 for (long long i = 0; i < 10; i++) {||| 39 if (cnt[i] > 1) {||| 40 cout << 2 << endl << (char)('0' + i) << (char)('0' + i) << endl;||| 41 }||| 42 }||| 43 }||| 44 }||| 45 int main() {||| 46 for (long long i = 0; i < 10000; i++) isComposite[i] = false;||| 47 isComposite[1] = true;||| 48 for (long long i = 2; i < 10000; i++) {||| 49 for (int j = 2; i * j < 10000; j++) isComposite[i * j] = true;||| 50 }||| 51 ios_base::sync_with_stdio(false);||| 52 cin.tie(NULL);||| 53 int T;||| 54 cin >> T;||| 55 for (long long t = 0; t < T; t++) {||| 56 solve();||| 57 }||| 58 }||| 	41 return;
79	471	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 string s;||| 10 cin >> s;||| 11 unordered_map<char, int> ourmap, ourmap1;||| 12 int flag = 0;||| 13 for (int i = 0; i < k; i++) {||| 14 if (s[i] == '1' || s[i] == '4' || s[i] == '6' || s[i] == '8' ||||| 15 s[i] == '9') {||| 16 flag = s[i] - '0';||| 17 break;||| 18 } else {||| 19 ourmap[s[i]]++;||| 20 if (ourmap[s[i]] == 1) ourmap1[s[i]] = i + 1;||| 21 }||| 22 }||| 23 if (flag != 0) {||| 24 cout << ""1\n"";||| 25 cout << flag << ""\n"";||| 26 continue;||| 27 }||| 28 cout << ""2\n"";||| 29 if (ourmap.count('2') > 0 && ourmap['2'] > 1) {||| 30 cout << ""22\n"";||| 31 } else if (ourmap.count('3') > 0 && ourmap['3'] > 1) {||| 32 cout << ""33\n"";||| 33 } else if (ourmap.count('5') > 0 && ourmap['5'] > 1) {||| 34 cout << ""55\n"";||| 35 } else if (ourmap.count('7') > 0 && ourmap['7'] > 1) {||| 36 cout << ""77\n"";||| 37 } else if (ourmap.count('5') > 0 && ourmap.count('2') > 0) {||| 38 if (ourmap1['5'] < ourmap1['2'])||| 39 cout << ""52\n"";||| 40 else||| 41 cout << ""25\n"";||| 42 } else if (ourmap.count('5') > 0 && ourmap.count('7') > 0) {||| 43 if (ourmap1['5'] < ourmap1['7'])||| 44 cout << ""57\n"";||| 45 else||| 46 cout << ""75\n"";||| 47 } else if (ourmap.count('2') > 0 && ourmap.count('7') > 0) {||| 48 if (ourmap1['2'] < ourmap1['7'])||| 49 cout << ""27\n"";||| 50 else||| 51 cout << ""72\n"";||| 52 } else if (ourmap.count('5') > 0 && ourmap.count('3') > 0 &&||| 53 ourmap1['3'] < ourmap1['5']) {||| 54 cout << ""35\n"";||| 55 } else {||| 56 cout << ""32\n"";||| 57 }||| 58 }||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int k;||| 8 cin >> k;||| 9 string s;||| 10 cin >> s;||| 11 unordered_map<char, int> ourmap, ourmap1;||| 12 int flag = 0;||| 13 for (int i = 0; i < k; i++) {||| 14 if (s[i] == '1' || s[i] == '4' || s[i] == '6' || s[i] == '8' ||||| 15 s[i] == '9') {||| 16 flag = s[i] - '0';||| 17 break;||| 18 } else {||| 19 ourmap[s[i]]++;||| 20 if (ourmap[s[i]] == 1) ourmap1[s[i]] = i + 1;||| 21 }||| 22 }||| 23 if (flag != 0) {||| 24 cout << ""1\n"";||| 25 cout << flag << ""\n"";||| 26 continue;||| 27 }||| 28 cout << ""2\n"";||| 29 if (ourmap.count('2') > 0 && ourmap['2'] > 1) {||| 30 cout << ""22\n"";||| 31 } else if (ourmap.count('3') > 0 && ourmap['3'] > 1) {||| 32 cout << ""33\n"";||| 33 } else if (ourmap.count('5') > 0 && ourmap['5'] > 1) {||| 34 cout << ""55\n"";||| 35 } else if (ourmap.count('7') > 0 && ourmap['7'] > 1) {||| 36 cout << ""77\n"";||| 37 } else if (ourmap.count('5') > 0 && ourmap.count('2') > 0) {||| 38 if (ourmap1['5'] < ourmap1['2'])||| 39 cout << ""52\n"";||| 40 else||| 41 cout << ""25\n"";||| 42 } else if (ourmap.count('5') > 0 && ourmap.count('7') > 0) {||| 43 if (ourmap1['5'] < ourmap1['7'])||| 44 cout << ""57\n"";||| 45 else||| 46 cout << ""75\n"";||| 47 } else if (ourmap.count('2') > 0 && ourmap.count('7') > 0) {||| 48 if (ourmap1['2'] < ourmap1['7'])||| 49 cout << ""27\n"";||| 50 else||| 51 cout << ""72\n"";||| 52 } else if (ourmap.count('5') > 0 && ourmap.count('3') > 0 &&||| 53 ourmap['3'] < ourmap['5']) {||| 54 cout << ""35\n"";||| 55 } else {||| 56 cout << ""32\n"";||| 57 }||| 58 }||| 59 }||| "	53 ourmap1['3'] < ourmap1['5']) {
79	503	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream &operator>>(istream &in, vector<T> &v) {||| 5 for (auto &i : v) cin >> i;||| 6 return in;||| 7 }||| 8 template <typename T>||| 9 istream &operator>>(istream &in, pair<T, T> &p) {||| 10 cin >> p.f >> p.s;||| 11 return in;||| 12 }||| 13 template <typename T>||| 14 ostream &operator<<(ostream &out, vector<T> &v) {||| 15 for (auto &i : v) cout << i << "" "";||| 16 return out;||| 17 }||| 18 template <typename T>||| 19 ostream &operator<<(ostream &out, pair<T, T> &p) {||| 20 cout << p.f << "" "" << p.s << "" "";||| 21 return out;||| 22 }||| 23 template <typename T>||| 24 istream &operator>>(istream &in, vector<pair<T, T>> &v) {||| 25 for (auto &i : v) cin >> i.f >> i.s;||| 26 return in;||| 27 }||| 28 template <typename T>||| 29 ostream &operator<<(ostream &out, vector<pair<T, T>> &v) {||| 30 for (auto &i : v) cout << i.f << "" "" << i.s << ""\n"";||| 31 return out;||| 32 }||| 33 void solve() {||| 34 long long int t;||| 35 cin >> t;||| 36 for (long long int _ = 1; _ <= t; _++) {||| 37 long long int k;||| 38 cin >> k;||| 39 string s;||| 40 cin >> s;||| 41 vector<long long int> arr(10, 0);||| 42 for (auto &ch : s) {||| 43 arr[ch - '0']++;||| 44 }||| 45 long long int ans[] = {1, 4, 6, 8, 9};||| 46 bool flag = 0;||| 47 for (auto i : ans) {||| 48 if (arr[i]) {||| 49 cout << ""1\n"" << i << ""\n"";||| 50 flag = 1;||| 51 break;||| 52 }||| 53 }||| 54 if (flag) continue;||| 55 if (arr[2] > 1) {||| 56 cout << ""2""||| 57 << ""\n""||| 58 << 22 << ""\n"";||| 59 continue;||| 60 }||| 61 if (arr[2] == 1 and s[0] != '2') {||| 62 cout << 2 << ""\n"";||| 63 cout << s[0] << 2 << ""\n"";||| 64 continue;||| 65 }||| 66 if (arr[2]) {||| 67 if (arr[5] or arr[7]) {||| 68 cout << ""2""||| 69 << ""\n"";||| 70 cout << 2 << ((arr[5] ? 5 : 7)) << ""\n"";||| 71 } else {||| 72 cout << ""2\n33""||| 73 << ""\n"";||| 74 }||| 75 continue;||| 76 }||| 77 if (arr[3] > 1 or arr[5] > 1 or arr[7] > 1) {||| 78 cout << 2 << ""\n"";||| 79 cout << (arr[3] > 1 ? 33 : arr[5] > 1 ? 55 : 77) << ""\n"";||| 80 continue;||| 81 }||| 82 cout << 2 << ""\n"";||| 83 cout << (s[0] == '3' ? 35 : s[0] == '5' ? 57 : 75) << ""\n"";||| 84 }||| 85 }||| 86 int main() {||| 87 solve();||| 88 return 0;||| 89 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 istream &operator>>(istream &in, vector<T> &v) {||| 5 for (auto &i : v) cin >> i;||| 6 return in;||| 7 }||| 8 template <typename T>||| 9 istream &operator>>(istream &in, pair<T, T> &p) {||| 10 cin >> p.f >> p.s;||| 11 return in;||| 12 }||| 13 template <typename T>||| 14 ostream &operator<<(ostream &out, vector<T> &v) {||| 15 for (auto &i : v) cout << i << "" "";||| 16 return out;||| 17 }||| 18 template <typename T>||| 19 ostream &operator<<(ostream &out, pair<T, T> &p) {||| 20 cout << p.f << "" "" << p.s << "" "";||| 21 return out;||| 22 }||| 23 template <typename T>||| 24 istream &operator>>(istream &in, vector<pair<T, T>> &v) {||| 25 for (auto &i : v) cin >> i.f >> i.s;||| 26 return in;||| 27 }||| 28 template <typename T>||| 29 ostream &operator<<(ostream &out, vector<pair<T, T>> &v) {||| 30 for (auto &i : v) cout << i.f << "" "" << i.s << ""\n"";||| 31 return out;||| 32 }||| 33 void solve() {||| 34 long long int t;||| 35 cin >> t;||| 36 for (long long int _ = 1; _ <= t; _++) {||| 37 long long int k;||| 38 cin >> k;||| 39 string s;||| 40 cin >> s;||| 41 vector<long long int> arr(10, 0);||| 42 for (auto &ch : s) {||| 43 arr[ch - '0']++;||| 44 }||| 45 long long int ans[] = {1, 4, 6, 8, 9};||| 46 bool flag = 0;||| 47 for (auto i : ans) {||| 48 if (arr[i]) {||| 49 cout << ""1\n"" << i << ""\n"";||| 50 flag = 1;||| 51 break;||| 52 }||| 53 }||| 54 if (flag) continue;||| 55 if (arr[2] > 1) {||| 56 cout << ""2""||| 57 << ""\n""||| 58 << 22 << ""\n"";||| 59 continue;||| 60 }||| 61 if (arr[2] == 1 and s[0] != 2) {||| 62 cout << 2 << ""\n"";||| 63 cout << s[0] << 2 << ""\n"";||| 64 continue;||| 65 }||| 66 if (arr[2]) {||| 67 if (arr[5] or arr[7]) {||| 68 cout << ""2""||| 69 << ""\n"";||| 70 cout << 2 << ((arr[5] ? 5 : 7)) << ""\n"";||| 71 } else {||| 72 cout << ""2\n33""||| 73 << ""\n"";||| 74 }||| 75 continue;||| 76 }||| 77 if (arr[3] > 1 or arr[5] > 1 or arr[7] > 1) {||| 78 cout << 2 << ""\n"";||| 79 cout << (arr[3] > 1 ? 33 : arr[5] > 1 ? 55 : 77) << ""\n"";||| 80 continue;||| 81 }||| 82 cout << 2 << ""\n"";||| 83 cout << (s[0] == '3' ? 35 : s[0] == '5' ? 57 : 75) << ""\n"";||| 84 }||| 85 }||| 86 int main() {||| 87 solve();||| 88 return 0;||| 89 }||| "	61 if (arr[2] == 1 and s[0] != '2') {
79	153	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std;||| 4 const int maxn = 1e5 + 10;||| 5 int n, m, t;||| 6 bool prime[maxn];||| 7 string s;||| 8 void solve() {||| 9 for (int i = 0; i < n; i++) {||| 10 if ((s[i] == '1') || (s[i] == '4') || (s[i] == '6') || (s[i] == '8') ||||| 11 (s[i] == '9')) {||| 12 cout << 1 << endl;||| 13 cout << s[i] << endl;||| 14 return;||| 15 }||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 for (int j = i + 1; j < n; j++) {||| 19 if (!prime[(s[i] - '0') * 10 + (s[j] - '0')]) {||| 20 cout << 2 << endl;||| 21 cout << s[i] << s[j] << endl;||| 22 return;||| 23 }||| 24 }||| 25 }||| 26 }||| 27 int main() {||| 28 for (int i = 2; i <= 100; i++) {||| 29 prime[i] = true;||| 30 for (int j = 2; j * j <= i; j++) {||| 31 if (i % j == 0) {||| 32 prime[i] = false;||| 33 }||| 34 }||| 35 }||| 36 cin >> t;||| 37 while (t--) {||| 38 cin >> n;||| 39 cin >> s;||| 40 solve();||| 41 }||| 42 return 0;||| 43 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using namespace std;||| 4 const int maxn = 1e5 + 10;||| 5 int n, m, t;||| 6 bool prime[maxn];||| 7 string s;||| 8 void solve() {||| 9 for (int i = 0; i < n; i++) {||| 10 if ((s[i] == '1') || (s[i] == '4') || (s[i] == '6') || (s[i] == '8') ||||| 11 (s[i] == '9')) {||| 12 cout << 1 << endl;||| 13 cout << s[i] << endl;||| 14 return;||| 15 }||| 16 }||| 17 for (int i = 0; i < n; i++) {||| 18 for (int j = i + 1; j < n; j++) {||| 19 if (!prime[(s[i] - '0') * 10 + (s[j] - '0')]) {||| 20 cout << 2 << endl;||| 21 cout << s[i] << s[j] << endl;||| 22 }||| 23 }||| 24 }||| 25 }||| 26 int main() {||| 27 for (int i = 2; i <= 100; i++) {||| 28 prime[i] = true;||| 29 for (int j = 2; j * j <= i; j++) {||| 30 if (i % j == 0) {||| 31 prime[i] = false;||| 32 }||| 33 }||| 34 }||| 35 cin >> t;||| 36 while (t--) {||| 37 cin >> n;||| 38 cin >> s;||| 39 solve();||| 40 }||| 41 return 0;||| 42 }||| 	22 return;
79	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void prepareIO() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.precision(std::numeric_limits<double>::max_digits10);||| 7 }||| 8 struct HASH {||| 9 size_t operator()(const pair<long long int, long long int>& x) const {||| 10 return hash<long long>()(x.first ^ (x.second) << 32);||| 11 }||| 12 };||| 13 const long long int MOD = 1e9 + 7;||| 14 const long long int N = 1e5 + 5;||| 15 bool isPrime(long long int num) {||| 16 if (num == 1) {||| 17 return false;||| 18 }||| 19 for (long long int i = 2; i * i <= num; i++) {||| 20 if (num % i == 0) {||| 21 return false;||| 22 }||| 23 }||| 24 return true;||| 25 }||| 26 bool found(string& s, vector<long long int>& a) {||| 27 if (s.length() < a.size()) {||| 28 return false;||| 29 }||| 30 long long int idx = 0;||| 31 for (long long int dig : a) {||| 32 bool f = false;||| 33 while (idx < s.length()) {||| 34 long long int d = s[idx] - '0';||| 35 if (d == dig) {||| 36 f = true;||| 37 idx++;||| 38 break;||| 39 }||| 40 idx++;||| 41 }||| 42 if (!f) {||| 43 return false;||| 44 }||| 45 }||| 46 return true;||| 47 }||| 48 int main() {||| 49 prepareIO();||| 50 long long int t = 1;||| 51 cin >> t;||| 52 for (long long int Case = 1; Case <= t; Case++) {||| 53 long long int k;||| 54 cin >> k;||| 55 string s;||| 56 cin >> s;||| 57 map<long long int, long long int> ct;||| 58 bool nonPrimeFound = false;||| 59 long long int num = -1;||| 60 for (long long int i = 0; i < k; i++) {||| 61 long long int dig = s[i] - '0';||| 62 if (isPrime(dig)) {||| 63 ct[dig]++;||| 64 } else {||| 65 nonPrimeFound = true;||| 66 num = dig;||| 67 break;||| 68 }||| 69 }||| 70 if (nonPrimeFound) {||| 71 cout << 1 << ""\n"";||| 72 cout << num << ""\n"";||| 73 } else {||| 74 if (ct.count(2) > 0 && ct[2] >= 2) {||| 75 cout << ""2\n22\n"";||| 76 } else if (ct.count(3) > 0 && ct[3] >= 2) {||| 77 cout << ""2\n33\n"";||| 78 } else if (ct.count(5) > 0 && ct[5] >= 2) {||| 79 cout << ""2\n55\n"";||| 80 } else if (ct.count(7) > 0 && ct[7] >= 2) {||| 81 cout << ""2\n77\n"";||| 82 } else {||| 83 vector<long long int> a = {25, 27, 32, 35, 52, 57, 72, 75};||| 84 cout << 2 << ""\n"";||| 85 for (long long int num : a) {||| 86 long long int dig1 = num / 10, dig2 = num % 10;||| 87 long long int idx1 = 0;||| 88 while (idx1 < s.length()) {||| 89 long long int dig = s[idx1] - '0';||| 90 if (dig == dig1) {||| 91 idx1++;||| 92 break;||| 93 }||| 94 idx1++;||| 95 }||| 96 if (idx1 == s.length()) {||| 97 continue;||| 98 }||| 99 while (idx1 < s.length()) {||| 100 long long int dig = s[idx1] - '0';||| 101 if (dig == dig2) {||| 102 break;||| 103 }||| 104 idx1++;||| 105 }||| 106 if (idx1 == s.length()) {||| 107 continue;||| 108 }||| 109 cout << num << ""\n"";||| 110 break;||| 111 }||| 112 }||| 113 }||| 114 }||| 115 return 0;||| 116 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void prepareIO() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.precision(std::numeric_limits<double>::max_digits10);||| 7 }||| 8 struct HASH {||| 9 size_t operator()(const pair<long long int, long long int>& x) const {||| 10 return hash<long long>()(x.first ^ (x.second) << 32);||| 11 }||| 12 };||| 13 const long long int MOD = 1e9 + 7;||| 14 const long long int N = 1e5 + 5;||| 15 bool isPrime(long long int num) {||| 16 if (num == 1) {||| 17 return false;||| 18 }||| 19 for (long long int i = 2; i * i <= num; i++) {||| 20 if (num % i == 0) {||| 21 return false;||| 22 }||| 23 }||| 24 return true;||| 25 }||| 26 bool found(string& s, vector<long long int>& a) {||| 27 if (s.length() < a.size()) {||| 28 return false;||| 29 }||| 30 long long int idx = 0;||| 31 for (long long int dig : a) {||| 32 bool f = false;||| 33 while (idx < s.length()) {||| 34 long long int d = s[idx] - '0';||| 35 if (d == dig) {||| 36 f = true;||| 37 idx++;||| 38 break;||| 39 }||| 40 idx++;||| 41 }||| 42 if (!f) {||| 43 return false;||| 44 }||| 45 }||| 46 return true;||| 47 }||| 48 int main() {||| 49 prepareIO();||| 50 long long int t = 1;||| 51 cin >> t;||| 52 for (long long int Case = 1; Case <= t; Case++) {||| 53 long long int k;||| 54 cin >> k;||| 55 string s;||| 56 cin >> s;||| 57 map<long long int, long long int> ct;||| 58 bool nonPrimeFound = false;||| 59 long long int num = -1;||| 60 for (long long int i = 0; i < k; i++) {||| 61 long long int dig = s[i] - '0';||| 62 if (isPrime(dig)) {||| 63 ct[dig]++;||| 64 } else {||| 65 nonPrimeFound = true;||| 66 num = dig;||| 67 break;||| 68 }||| 69 }||| 70 if (nonPrimeFound) {||| 71 cout << 1 << ""\n"";||| 72 cout << num << ""\n"";||| 73 } else {||| 74 if (ct.count(2) > 0 && ct[2] >= 2) {||| 75 cout << ""2\n22\n"";||| 76 }||| 77 if (ct.count(3) > 0 && ct[3] >= 2) {||| 78 cout << ""2\n33\n"";||| 79 } else if (ct.count(5) > 0 && ct[5] >= 2) {||| 80 cout << ""2\n55\n"";||| 81 } else if (ct.count(7) > 0 && ct[7] >= 2) {||| 82 cout << ""2\n77\n"";||| 83 } else {||| 84 vector<long long int> a = {25, 27, 32, 35, 52, 57, 72, 75};||| 85 cout << 2 << ""\n"";||| 86 for (long long int num : a) {||| 87 long long int dig1 = num / 10, dig2 = num % 10;||| 88 long long int idx1 = 0;||| 89 while (idx1 < s.length()) {||| 90 long long int dig = s[idx1] - '0';||| 91 if (dig == dig1) {||| 92 idx1++;||| 93 break;||| 94 }||| 95 idx1++;||| 96 }||| 97 if (idx1 == s.length()) {||| 98 continue;||| 99 }||| 100 while (idx1 < s.length()) {||| 101 long long int dig = s[idx1] - '0';||| 102 if (dig == dig2) {||| 103 break;||| 104 }||| 105 idx1++;||| 106 }||| 107 if (idx1 == s.length()) {||| 108 continue;||| 109 }||| 110 cout << num << ""\n"";||| 111 break;||| 112 }||| 113 }||| 114 }||| 115 }||| 116 return 0;||| 117 }||| "	76 } else if (ct.count(3) > 0 && ct[3] >= 2) {
79	237	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void prepareIO() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.precision(std::numeric_limits<double>::max_digits10);||| 7 }||| 8 struct HASH {||| 9 size_t operator()(const pair<long long int, long long int>& x) const {||| 10 return hash<long long>()(x.first ^ (x.second) << 32);||| 11 }||| 12 };||| 13 const long long int MOD = 1e9 + 7;||| 14 const long long int N = 1e5 + 5;||| 15 bool isPrime(long long int num) {||| 16 if (num == 1) {||| 17 return false;||| 18 }||| 19 for (long long int i = 2; i * i <= num; i++) {||| 20 if (num % i == 0) {||| 21 return false;||| 22 }||| 23 }||| 24 return true;||| 25 }||| 26 bool found(string& s, vector<long long int>& a) {||| 27 if (s.length() < a.size()) {||| 28 return false;||| 29 }||| 30 long long int idx = 0;||| 31 for (long long int dig : a) {||| 32 bool f = false;||| 33 while (idx < s.length()) {||| 34 long long int d = s[idx] - '0';||| 35 if (d == dig) {||| 36 f = true;||| 37 idx++;||| 38 break;||| 39 }||| 40 idx++;||| 41 }||| 42 if (!f) {||| 43 return false;||| 44 }||| 45 }||| 46 return true;||| 47 }||| 48 int main() {||| 49 prepareIO();||| 50 long long int t = 1;||| 51 cin >> t;||| 52 for (long long int Case = 1; Case <= t; Case++) {||| 53 long long int k;||| 54 cin >> k;||| 55 string s;||| 56 cin >> s;||| 57 map<long long int, long long int> ct;||| 58 bool nonPrimeFound = false;||| 59 long long int num = -1;||| 60 for (long long int i = 0; i < k; i++) {||| 61 long long int dig = s[i] - '0';||| 62 if (isPrime(dig)) {||| 63 ct[dig]++;||| 64 } else {||| 65 nonPrimeFound = true;||| 66 num = dig;||| 67 break;||| 68 }||| 69 }||| 70 if (nonPrimeFound) {||| 71 cout << 1 << ""\n"";||| 72 cout << num << ""\n"";||| 73 } else {||| 74 if (ct.count(2) > 0 && ct[2] >= 2) {||| 75 cout << ""2\n22\n"";||| 76 } else if (ct.count(3) > 0 && ct[3] >= 2) {||| 77 cout << ""2\n33\n"";||| 78 } else if (ct.count(5) > 0 && ct[5] >= 2) {||| 79 cout << ""2\n55\n"";||| 80 } else if (ct.count(7) > 0 && ct[7] >= 2) {||| 81 cout << ""2\n77\n"";||| 82 } else {||| 83 vector<long long int> a = {2, 3, 5, 7};||| 84 long long int numDig = LLONG_MAX, ans;||| 85 for (long long int i = 1; i < 16; i++) {||| 86 bitset<4> b(i);||| 87 vector<long long int> st;||| 88 for (long long int j = 0; j < 4; j++) {||| 89 if (b[j]) {||| 90 st.push_back(a[j]);||| 91 }||| 92 }||| 93 sort(st.begin(), st.end());||| 94 bool f = false;||| 95 do {||| 96 long long int num = 0;||| 97 for (long long int dig : st) {||| 98 num = (num * 10) + dig;||| 99 }||| 100 if (!isPrime(num)) {||| 101 f = found(s, st);||| 102 if (f) {||| 103 break;||| 104 }||| 105 }||| 106 } while (next_permutation(st.begin(), st.end()));||| 107 if (f) {||| 108 if (st.size() < numDig) {||| 109 numDig = st.size();||| 110 long long int num = 0;||| 111 for (long long int dig : st) {||| 112 num = (num * 10) + dig;||| 113 }||| 114 ans = num;||| 115 }||| 116 }||| 117 }||| 118 cout << numDig << ""\n"" << ans << ""\n"";||| 119 }||| 120 }||| 121 }||| 122 return 0;||| 123 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void prepareIO() {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 cout.precision(std::numeric_limits<double>::max_digits10);||| 7 }||| 8 struct HASH {||| 9 size_t operator()(const pair<long long int, long long int>& x) const {||| 10 return hash<long long>()(x.first ^ (x.second) << 32);||| 11 }||| 12 };||| 13 const long long int MOD = 1e9 + 7;||| 14 const long long int N = 1e5 + 5;||| 15 bool isPrime(long long int num) {||| 16 if (num == 1) {||| 17 return false;||| 18 }||| 19 for (long long int i = 2; i * i <= num; i++) {||| 20 if (num % i == 0) {||| 21 return false;||| 22 }||| 23 }||| 24 return true;||| 25 }||| 26 bool found(string& s, vector<long long int>& a) {||| 27 if (s.length() < a.size()) {||| 28 return false;||| 29 }||| 30 long long int idx = 0;||| 31 for (long long int dig : a) {||| 32 bool f = false;||| 33 while (idx < s.length()) {||| 34 long long int d = s[idx] - '0';||| 35 if (d == dig) {||| 36 f = true;||| 37 idx++;||| 38 break;||| 39 }||| 40 idx++;||| 41 }||| 42 if (!f) {||| 43 return false;||| 44 }||| 45 }||| 46 return true;||| 47 }||| 48 int main() {||| 49 prepareIO();||| 50 long long int t = 1;||| 51 cin >> t;||| 52 for (long long int Case = 1; Case <= t; Case++) {||| 53 long long int k;||| 54 cin >> k;||| 55 string s;||| 56 cin >> s;||| 57 map<long long int, long long int> ct;||| 58 bool nonPrimeFound = false;||| 59 long long int num = -1;||| 60 for (long long int i = 0; i < k; i++) {||| 61 long long int dig = s[i] - '0';||| 62 if (isPrime(dig)) {||| 63 ct[dig]++;||| 64 } else {||| 65 nonPrimeFound = true;||| 66 num = dig;||| 67 break;||| 68 }||| 69 }||| 70 if (nonPrimeFound) {||| 71 cout << 1 << ""\n"";||| 72 cout << num << ""\n"";||| 73 } else {||| 74 if (ct.count(2) > 0 && ct[2] >= 2) {||| 75 cout << ""2\n22\n"";||| 76 }||| 77 if (ct.count(3) > 0 && ct[3] >= 2) {||| 78 cout << ""2\n33\n"";||| 79 } else if (ct.count(5) > 0 && ct[5] >= 2) {||| 80 cout << ""2\n55\n"";||| 81 } else if (ct.count(7) > 0 && ct[7] >= 2) {||| 82 cout << ""2\n77\n"";||| 83 } else {||| 84 vector<long long int> a = {2, 3, 5, 7};||| 85 long long int numDig = LLONG_MAX, ans;||| 86 for (long long int i = 1; i < 16; i++) {||| 87 bitset<4> b(i);||| 88 vector<long long int> st;||| 89 for (long long int j = 0; j < 4; j++) {||| 90 if (b[j]) {||| 91 st.push_back(a[j]);||| 92 }||| 93 }||| 94 sort(st.begin(), st.end());||| 95 bool f = false;||| 96 do {||| 97 long long int num = 0;||| 98 for (long long int dig : st) {||| 99 num = (num * 10) + dig;||| 100 }||| 101 if (!isPrime(num)) {||| 102 f = found(s, st);||| 103 if (f) {||| 104 break;||| 105 }||| 106 }||| 107 } while (next_permutation(st.begin(), st.end()));||| 108 if (f) {||| 109 if (st.size() < numDig) {||| 110 numDig = st.size();||| 111 long long int num = 0;||| 112 for (long long int dig : st) {||| 113 num = (num * 10) + dig;||| 114 }||| 115 ans = num;||| 116 }||| 117 }||| 118 }||| 119 cout << numDig << ""\n"" << ans << ""\n"";||| 120 }||| 121 }||| 122 }||| 123 return 0;||| 124 }||| "	76 } else if (ct.count(3) > 0 && ct[3] >= 2) {
79	488	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int k;||| 8 cin >> k;||| 9 string str;||| 10 cin >> str;||| 11 vector<int> count(10, 0);||| 12 int possible = 0;||| 13 for (int i = 0; i < str.length(); i++) {||| 14 count[str[i] - '0']++;||| 15 if (str[i] == '4' || str[i] == '6' || str[i] == '8' || str[i] == '9' ||||| 16 str[i] == '1') {||| 17 cout << 1 << endl << str[i] << endl;||| 18 possible++;||| 19 break;||| 20 }||| 21 }||| 22 if (possible) continue;||| 23 int two = -1;||| 24 int five = -1;||| 25 for (int i = 0; i < str.length(); i++) {||| 26 if (str[i] == '2') two = i;||| 27 if (str[i] == '5') five = i;||| 28 }||| 29 if (two != -1 && two) {||| 30 cout << 2 << endl << str[two - 1] << str[two] << endl;||| 31 continue;||| 32 }||| 33 if (five != -1 && five) {||| 34 cout << 2 << endl << str[five - 1] << str[five] << endl;||| 35 continue;||| 36 }||| 37 possible = 0;||| 38 for (int i = 2; i < 10; i++)||| 39 if (count[i] >= 2) {||| 40 possible = 1;||| 41 cout << 2 << endl << char(i + 48) << char(i + 48) << endl;||| 42 break;||| 43 }||| 44 if (possible) continue;||| 45 if (str == ""237"") cout << 2 << endl << ""27"" << endl;||| 46 if (str == ""273"") cout << 2 << endl << ""27"" << endl;||| 47 if (str == ""573"") cout << 2 << endl << ""57"" << endl;||| 48 if (str == ""537"") cout << 2 << endl << ""57"" << endl;||| 49 if (str == ""57"") cout << 2 << endl << ""57"" << endl;||| 50 if (str == ""27"") cout << 2 << endl << ""27"" << endl;||| 51 }||| 52 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int T;||| 5 cin >> T;||| 6 while (T--) {||| 7 int k;||| 8 cin >> k;||| 9 string str;||| 10 cin >> str;||| 11 vector<int> count(10, 0);||| 12 int possible = 0;||| 13 for (int i = 0; i < str.length(); i++) {||| 14 count[str[i] - '0']++;||| 15 if (str[i] == '4' || str[i] == '6' || str[i] == '8' || str[i] == '9' ||||| 16 str[i] == '1') {||| 17 cout << 1 << endl << str[i] << endl;||| 18 possible++;||| 19 break;||| 20 }||| 21 }||| 22 if (possible) continue;||| 23 int two = -1;||| 24 int five = -1;||| 25 for (int i = 0; i < str.length(); i++) {||| 26 if (str[i] == '2') two = i;||| 27 if (str[i] == '5') five = i;||| 28 }||| 29 if (two != -1 && two) {||| 30 cout << 2 << endl << str[two - 1] << str[two] << endl;||| 31 continue;||| 32 }||| 33 if (five != -1 && five) {||| 34 cout << 2 << endl << str[five - 1] << str[five] << endl;||| 35 continue;||| 36 }||| 37 possible = 0;||| 38 for (int i = 2; i < 10; i++)||| 39 if (count[i] >= 2) {||| 40 possible = 1;||| 41 cout << 2 << endl << char(i + 48) << char(i + 48) << endl;||| 42 break;||| 43 }||| 44 if (possible) continue;||| 45 if (str == ""237"") cout << 2 << endl << ""27"" << endl;||| 46 continue;||| 47 if (str == ""273"") cout << 2 << endl << ""27"" << endl;||| 48 if (str == ""573"") cout << 2 << endl << ""57"" << endl;||| 49 if (str == ""537"") cout << 2 << endl << ""57"" << endl;||| 50 if (str == ""57"") cout << 2 << endl << ""57"" << endl;||| 51 if (str == ""27"") cout << 2 << endl << ""27"" << endl;||| 52 }||| 53 }||| "	46 
80	412	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 long long pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 int ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 long long pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 long long ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	25 int ppp = s.find('0', pos);
80	541	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 int pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 int ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 int pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 long long ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	25 int ppp = s.find('0', pos);
80	379	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int N = 40 + 1;||| 5 int n, m, arr[N], hi, lo;||| 6 string str[5210];||| 7 map<char, string> _std;||| 8 vector<int> find_divisor(int x) {||| 9 vector<int> ret;||| 10 for (int i = 1; i * i <= x; i++) {||| 11 if (x == i * (x / i)) {||| 12 ret.push_back(i);||| 13 if (i != x / i) ret.push_back(x / i);||| 14 }||| 15 }||| 16 sort(ret.begin(), ret.end());||| 17 reverse(ret.begin(), ret.end());||| 18 return ret;||| 19 }||| 20 bool is_possible(int val) {||| 21 bool ret = 1;||| 22 for (int i = 0; i < n; i++) {||| 23 for (int j = 0; j + val <= n; j += val) {||| 24 for (int k = j + 1; k < j + val; k++)||| 25 if (str[i][k] != str[i][j]) return 0;||| 26 }||| 27 }||| 28 for (int i = 0; i < n; i++) {||| 29 for (int j = 0; j + val <= n; j += val) {||| 30 for (int k = j + 1; k < j + val; k++)||| 31 if (str[k][i] != str[j][i]) return 0;||| 32 }||| 33 }||| 34 return 1;||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(0);||| 38 cin.tie(NULL);||| 39 cout.tie(NULL);||| 40 int tst;||| 41 cin >> tst;||| 42 while (tst--) {||| 43 int n;||| 44 cin >> n;||| 45 string str;||| 46 cin >> str;||| 47 int first_zero = -1;||| 48 int i;||| 49 for (i = n - 1; i >= 0; i--) {||| 50 if (str[i] == '0') {||| 51 if (2 * (i + 1) > n) {||| 52 cout << 1 << ' ' << i + 1 << ' ' << 1 << ' ' << i << '\n';||| 53 break;||| 54 } else {||| 55 cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << '\n';||| 56 break;||| 57 }||| 58 }||| 59 }||| 60 if (i < 0) {||| 61 if (n & 1) {||| 62 cout << 2 << ' ' << n << ' ' << (n + 1) / 2 + 1 << ' ' << n << '\n';||| 63 } else {||| 64 cout << 1 << ' ' << n << ' ' << n / 2 + 1 << ' ' << n << '\n';||| 65 }||| 66 }||| 67 }||| 68 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 const int N = 40 + 1;||| 5 int n, m, arr[N], hi, lo;||| 6 string str[5210];||| 7 map<char, string> _std;||| 8 vector<int> find_divisor(int x) {||| 9 vector<int> ret;||| 10 for (int i = 1; i * i <= x; i++) {||| 11 if (x == i * (x / i)) {||| 12 ret.push_back(i);||| 13 if (i != x / i) ret.push_back(x / i);||| 14 }||| 15 }||| 16 sort(ret.begin(), ret.end());||| 17 reverse(ret.begin(), ret.end());||| 18 return ret;||| 19 }||| 20 bool is_possible(int val) {||| 21 bool ret = 1;||| 22 for (int i = 0; i < n; i++) {||| 23 for (int j = 0; j + val <= n; j += val) {||| 24 for (int k = j + 1; k < j + val; k++)||| 25 if (str[i][k] != str[i][j]) return 0;||| 26 }||| 27 }||| 28 for (int i = 0; i < n; i++) {||| 29 for (int j = 0; j + val <= n; j += val) {||| 30 for (int k = j + 1; k < j + val; k++)||| 31 if (str[k][i] != str[j][i]) return 0;||| 32 }||| 33 }||| 34 return 1;||| 35 }||| 36 int main() {||| 37 ios_base::sync_with_stdio(0);||| 38 cin.tie(NULL);||| 39 cout.tie(NULL);||| 40 int tst;||| 41 cin >> tst;||| 42 while (tst--) {||| 43 int n;||| 44 cin >> n;||| 45 string str;||| 46 cin >> str;||| 47 int first_zero = -1;||| 48 int i;||| 49 for (i = n - 1; i >= 0; i--) {||| 50 if (str[i] == '0') {||| 51 if (2 * (i + 1) >= n) {||| 52 cout << 1 << ' ' << i + 1 << ' ' << 1 << ' ' << i << '\n';||| 53 break;||| 54 } else {||| 55 cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << '\n';||| 56 break;||| 57 }||| 58 }||| 59 }||| 60 if (i < 0) {||| 61 if (n & 1) {||| 62 cout << 2 << ' ' << n << ' ' << (n + 1) / 2 + 1 << ' ' << n << '\n';||| 63 } else {||| 64 cout << 1 << ' ' << n << ' ' << n / 2 + 1 << ' ' << n << '\n';||| 65 }||| 66 }||| 67 }||| 68 }||| 	51 if (2 * (i + 1) > n) {
80	497	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 long long MOD = 998244353;||| 7 void solve() {||| 8 int n;||| 9 string s;||| 10 cin >> n;||| 11 cin >> s;||| 12 int z = 0, o = 0;||| 13 for (auto x : s) x == '0' ? z++ : o++;||| 14 if (z == 0 || o == 0) {||| 15 cout << ""1 "" << n - 1 << "" 2 "" << n << endl;||| 16 return;||| 17 }||| 18 int i = 0, j = (n / 2) - 1;||| 19 for (; j < n - 1; i++, j++) {||| 20 if (s[i] == '0') {||| 21 cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << endl;||| 22 return;||| 23 }||| 24 if (s[j + 1] == '0') {||| 25 cout << 1 << ' ' << j + 2 << ' ' << 1 << ' ' << j + 1 << endl;||| 26 return;||| 27 }||| 28 }||| 29 }||| 30 int main() {||| 31 ios_base::sync_with_stdio(false);||| 32 cin.tie(NULL);||| 33 cout.tie(NULL);||| 34 long long t = 1;||| 35 cin >> t;||| 36 while (t--) {||| 37 solve();||| 38 }||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 long long MOD = 998244353;||| 7 void solve() {||| 8 int n;||| 9 string s;||| 10 cin >> n;||| 11 cin >> s;||| 12 int z = 0, o = 0;||| 13 for (auto x : s) x == '0' ? z++ : o++;||| 14 if (z == 0 || o == 0) {||| 15 cout << ""1 "" << n - 1 << "" 2 "" << n << endl;||| 16 }||| 17 int i = 0, j = (n / 2) - 1;||| 18 for (; j < n - 1; i++, j++) {||| 19 if (s[i] == '0') {||| 20 cout << i + 1 << ' ' << n << ' ' << i + 2 << ' ' << n << endl;||| 21 return;||| 22 }||| 23 if (s[j + 1] == '0') {||| 24 cout << 1 << ' ' << j + 2 << ' ' << 1 << ' ' << j + 1 << endl;||| 25 return;||| 26 }||| 27 }||| 28 }||| 29 int main() {||| 30 ios_base::sync_with_stdio(false);||| 31 cin.tie(NULL);||| 32 cout.tie(NULL);||| 33 long long t = 1;||| 34 cin >> t;||| 35 while (t--) {||| 36 solve();||| 37 }||| 38 return 0;||| 39 }||| "	16 return;
80	397	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 long long int inf = 9 * 1e18;||| 5 const long long maxn = 2e5 + 100;||| 6 long long pow(long long a, long long b) {||| 7 if (b < 0) return 0LL;||| 8 long long ans = 1;||| 9 while (b) {||| 10 if (b & 1) ans = ans * a;||| 11 a = a * a;||| 12 b >>= 1;||| 13 }||| 14 return ans;||| 15 }||| 16 long long binpow(long long a, long long b, long long m) {||| 17 if (b < 0) return 0LL;||| 18 if (a <= 0) return 0LL;||| 19 a %= m;||| 20 long long ans = 1LL;||| 21 while (b) {||| 22 if (b & 1) ans = ans * a % m;||| 23 a = a * a % m;||| 24 b >>= 1;||| 25 }||| 26 return ans;||| 27 }||| 28 long long modinv(long long n) { return binpow(n, mod - 2, mod); }||| 29 int gcdExtended(int a, int b, int *x, int *y) {||| 30 if (a == 0) {||| 31 *x = 0, *y = 1;||| 32 return b;||| 33 }||| 34 int x1, y1;||| 35 int gcd = gcdExtended(b % a, a, &x1, &y1);||| 36 *x = y1 - (b / a) * x1;||| 37 *y = x1;||| 38 return gcd;||| 39 }||| 40 void modInverse(int a, int m) {||| 41 int x, y;||| 42 int g = gcdExtended(a, m, &x, &y);||| 43 if (g != 1)||| 44 cout << ""Inverse doesn't exist"";||| 45 else {||| 46 int res = (x % m + m) % m;||| 47 cout << ""Modular multiplicative inverse is "" << res;||| 48 }||| 49 }||| 50 bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {||| 51 return (a.second < b.second);||| 52 }||| 53 const int MAXN = 1.1e6;||| 54 int spf[MAXN];||| 55 void sieve() {||| 56 for (int i = 1; i < MAXN; i++) spf[i] = 1;||| 57 for (int i = 2; i * i < MAXN; i++) {||| 58 for (int j = i * i; j < MAXN; j += i * i) spf[j] = i;||| 59 }||| 60 }||| 61 long long gcd(long long a, long long b) {||| 62 if (b == 0) return a;||| 63 return gcd(b, a % b);||| 64 }||| 65 long long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }||| 66 long long getClosest(long long val1, long long val2, long long target) {||| 67 if (target - val1 >= val2 - target)||| 68 return val2;||| 69 else||| 70 return val1;||| 71 }||| 72 long long findClosest(vector<long long> arr, long long n, long long target) {||| 73 if (target <= arr[0]) return arr[0];||| 74 if (target >= arr[n - 1]) return arr[n - 1];||| 75 long long i = 0, j = n, mid = 0;||| 76 while (i < j) {||| 77 mid = (i + j) / 2;||| 78 if (arr[mid] == target) return arr[mid];||| 79 if (target < arr[mid]) {||| 80 if (mid > 0 && target > arr[mid - 1])||| 81 return getClosest(arr[mid - 1], arr[mid], target);||| 82 j = mid;||| 83 } else {||| 84 if (mid < n - 1 && target < arr[mid + 1])||| 85 return getClosest(arr[mid], arr[mid + 1], target);||| 86 i = mid + 1;||| 87 }||| 88 }||| 89 return mid;||| 90 }||| 91 void solve() {||| 92 int n;||| 93 cin >> n;||| 94 string s;||| 95 cin >> s;||| 96 bool sol = 0;||| 97 for (int i = 0; i < n; i++) {||| 98 if (s[i] == '0') {||| 99 sol = 1;||| 100 if (i >= n / 2) {||| 101 cout << 1 << "" "" << i + 1 << "" "" << 1 << "" "" << i << ""\n"";||| 102 break;||| 103 } else {||| 104 cout << i + 2 << "" "" << n << "" "" << i + 1 << "" "" << n << ""\n"";||| 105 break;||| 106 }||| 107 }||| 108 }||| 109 if (!sol) {||| 110 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << ""\n"";||| 111 }||| 112 }||| 113 int main() {||| 114 ios_base::sync_with_stdio(false);||| 115 cin.tie(NULL);||| 116 cout.tie(NULL);||| 117 ;||| 118 int t;||| 119 cin >> t;||| 120 while (t--) {||| 121 solve();||| 122 }||| 123 return 0;||| 124 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod = 1e9 + 7;||| 4 long long int inf = 9 * 1e18;||| 5 const long long maxn = 2e5 + 100;||| 6 long long pow(long long a, long long b) {||| 7 if (b < 0) return 0LL;||| 8 long long ans = 1;||| 9 while (b) {||| 10 if (b & 1) ans = ans * a;||| 11 a = a * a;||| 12 b >>= 1;||| 13 }||| 14 return ans;||| 15 }||| 16 long long binpow(long long a, long long b, long long m) {||| 17 if (b < 0) return 0LL;||| 18 if (a <= 0) return 0LL;||| 19 a %= m;||| 20 long long ans = 1LL;||| 21 while (b) {||| 22 if (b & 1) ans = ans * a % m;||| 23 a = a * a % m;||| 24 b >>= 1;||| 25 }||| 26 return ans;||| 27 }||| 28 long long modinv(long long n) { return binpow(n, mod - 2, mod); }||| 29 int gcdExtended(int a, int b, int *x, int *y) {||| 30 if (a == 0) {||| 31 *x = 0, *y = 1;||| 32 return b;||| 33 }||| 34 int x1, y1;||| 35 int gcd = gcdExtended(b % a, a, &x1, &y1);||| 36 *x = y1 - (b / a) * x1;||| 37 *y = x1;||| 38 return gcd;||| 39 }||| 40 void modInverse(int a, int m) {||| 41 int x, y;||| 42 int g = gcdExtended(a, m, &x, &y);||| 43 if (g != 1)||| 44 cout << ""Inverse doesn't exist"";||| 45 else {||| 46 int res = (x % m + m) % m;||| 47 cout << ""Modular multiplicative inverse is "" << res;||| 48 }||| 49 }||| 50 bool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {||| 51 return (a.second < b.second);||| 52 }||| 53 const int MAXN = 1.1e6;||| 54 int spf[MAXN];||| 55 void sieve() {||| 56 for (int i = 1; i < MAXN; i++) spf[i] = 1;||| 57 for (int i = 2; i * i < MAXN; i++) {||| 58 for (int j = i * i; j < MAXN; j += i * i) spf[j] = i;||| 59 }||| 60 }||| 61 long long gcd(long long a, long long b) {||| 62 if (b == 0) return a;||| 63 return gcd(b, a % b);||| 64 }||| 65 long long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }||| 66 long long getClosest(long long val1, long long val2, long long target) {||| 67 if (target - val1 >= val2 - target)||| 68 return val2;||| 69 else||| 70 return val1;||| 71 }||| 72 long long findClosest(vector<long long> arr, long long n, long long target) {||| 73 if (target <= arr[0]) return arr[0];||| 74 if (target >= arr[n - 1]) return arr[n - 1];||| 75 long long i = 0, j = n, mid = 0;||| 76 while (i < j) {||| 77 mid = (i + j) / 2;||| 78 if (arr[mid] == target) return arr[mid];||| 79 if (target < arr[mid]) {||| 80 if (mid > 0 && target > arr[mid - 1])||| 81 return getClosest(arr[mid - 1], arr[mid], target);||| 82 j = mid;||| 83 } else {||| 84 if (mid < n - 1 && target < arr[mid + 1])||| 85 return getClosest(arr[mid], arr[mid + 1], target);||| 86 i = mid + 1;||| 87 }||| 88 }||| 89 return mid;||| 90 }||| 91 void solve() {||| 92 int n;||| 93 cin >> n;||| 94 string s;||| 95 cin >> s;||| 96 bool sol = 0;||| 97 for (int i = 0; i < n; i++) {||| 98 if (s[i] == '0') {||| 99 sol = 1;||| 100 if (i >= n / 2) {||| 101 cout << 1 << "" "" << i + 1 << "" "" << 1 << "" "" << i << ""\n"";||| 102 break;||| 103 } else {||| 104 cout << i + 2 << "" "" << n << "" "" << i + 1 << "" "" << n << ""\n"";||| 105 break;||| 106 }||| 107 }||| 108 }||| 109 if (!sol) {||| 110 cout << 1 << "" "" << n << "" "" << 2 << "" "" << n << ""\n"";||| 111 }||| 112 }||| 113 int main() {||| 114 ios_base::sync_with_stdio(false);||| 115 cin.tie(NULL);||| 116 cout.tie(NULL);||| 117 ;||| 118 int t;||| 119 cin >> t;||| 120 while (t--) {||| 121 solve();||| 122 }||| 123 return 0;||| 124 }||| "	"110 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << ""\n"";"
80	482	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print(int a, int b, int c, int d) {||| 4 a++;||| 5 b++;||| 6 c++;||| 7 d++;||| 8 cout << a << "" "" << b << "" "" << c << "" "" << d;||| 9 cout << endl;||| 10 }||| 11 void solve() {||| 12 string s;||| 13 int n;||| 14 cin >> n;||| 15 cin >> s;||| 16 int zero = -1;||| 17 for (int i = 0; i < s.length(); i++) {||| 18 if (s[i] == '0') {||| 19 zero = i;||| 20 }||| 21 }||| 22 if (zero == -1) {||| 23 print(0, n - 2, 1, n - 1);||| 24 } else if (zero >= n / 2) {||| 25 print(0, zero, 0, zero - 1);||| 26 } else {||| 27 print(zero, n - 1, zero + 1, n - 1);||| 28 }||| 29 }||| 30 int main() {||| 31 int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void print(int a, int b, int c, int d) {||| 4 a++;||| 5 b++;||| 6 c++;||| 7 d++;||| 8 cout << a << "" "" << b << "" "" << c << "" "" << d;||| 9 cout << endl;||| 10 }||| 11 void solve() {||| 12 string s;||| 13 int n;||| 14 cin >> n;||| 15 cin >> s;||| 16 int zero = -1;||| 17 for (int i = 0; i < s.length(); i++) {||| 18 if (s[i] == '0') {||| 19 zero = i;||| 20 }||| 21 }||| 22 if (zero == -1) {||| 23 print(0, n - 2, 1, n - 1);||| 24 } else if (zero > n / 2) {||| 25 print(0, zero, 0, zero - 1);||| 26 } else {||| 27 print(zero, n - 1, zero + 1, n - 1);||| 28 }||| 29 }||| 30 int main() {||| 31 int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 }||| "	24 } else if (zero >= n / 2) {
80	412	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 long long pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 int ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int inf = 0x3f3f3f3f;||| 4 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 5 const double eps = 1e-8;||| 6 const int maxn = 2e5 + 100;||| 7 const int mod = 1e9 + 7;||| 8 const int N = 1010;||| 9 signed main() {||| 10 ios::sync_with_stdio(0);||| 11 cin.tie(0), cout.tie(0);||| 12 int temp;||| 13 cin >> temp;||| 14 while (temp--) {||| 15 int n;||| 16 cin >> n;||| 17 string s;||| 18 cin >> s;||| 19 int num = n / 2;||| 20 if (s.find('0') == -1) {||| 21 cout << 1 << ' ' << num << ' ' << 2 << ' ' << num + 1 << '\n';||| 22 } else {||| 23 long long pos = s.find('0', 0) + 1;||| 24 if (pos == num) {||| 25 long long ppp = s.find('0', pos);||| 26 if (ppp == -1 and num != 1)||| 27 cout << 1 << ' ' << num << ' ' << num << ' ' << num + num - 1 << '\n';||| 28 else if (ppp == -1 and num == 1)||| 29 cout << 1 << ' ' << n << ' ' << 2 << ' ' << n << '\n';||| 30 else {||| 31 ppp++;||| 32 cout << 1 << ' ' << ppp << ' ' << 1 << ' ' << ppp - 1 << '\n';||| 33 }||| 34 } else if (pos > num) {||| 35 cout << 1 << ' ' << pos << ' ' << 1 << ' ' << pos - 1 << '\n';||| 36 } else if (pos < num) {||| 37 cout << pos << ' ' << n << ' ' << pos + 1 << ' ' << n << '\n';||| 38 }||| 39 }||| 40 }||| 41 return 0;||| 42 }||| 	25 int ppp = s.find('0', pos);
80	91	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 char s[N];||| 5 int n;||| 6 int main() {||| 7 int T;||| 8 cin >> T;||| 9 while (T--) {||| 10 scanf(""%d"", &n);||| 11 scanf(""%s"", s + 1);||| 12 int x = -1;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (s[i] == '0') x = i;||| 15 }||| 16 if (x >= (n / 2) + 1)||| 17 printf(""1 %d 1 %d\n"", x, x - 1);||| 18 else if (x >= 1)||| 19 printf(""%d %d %d %d\n"", x, n, x + 1, n);||| 20 else||| 21 printf(""1 %d 2 %d\n"", n - 1, n);||| 22 }||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 10;||| 4 char s[N];||| 5 int n;||| 6 int main() {||| 7 int T;||| 8 cin >> T;||| 9 while (T--) {||| 10 scanf(""%d"", &n);||| 11 scanf(""%s"", s + 1);||| 12 int x = -1;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (s[i] == '0') x = i;||| 15 }||| 16 if (x >= (n / 2) + 1)||| 17 printf(""1 %d 1 %d\n"", x, x - 1);||| 18 else if (x >= 1)||| 19 printf(""%d %d %d %d"", x, n, x + 1, n);||| 20 else||| 21 printf(""1 %d 2 %d\n"", n - 1, n);||| 22 }||| 23 }||| "	"19 printf(""%d %d %d %d\n"", x, n, x + 1, n);"
80	446	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class... Args>||| 4 void debug(Args... args) {||| 5 auto tmp = {(cout << args << ' ', 0)...};||| 6 cout << endl;||| 7 }||| 8 using ll = long long;||| 9 const int N = 2e4 + 10;||| 10 const int mod = 4933;||| 11 const double eps = 1e-9;||| 12 char a[N];||| 13 int main() {||| 14 ios::sync_with_stdio(false);||| 15 cin.tie(nullptr);||| 16 int T;||| 17 cin >> T;||| 18 while (T--) {||| 19 int n;||| 20 cin >> n;||| 21 cin >> (a + 1);||| 22 bool flg = true;||| 23 for (int i = 1; i <= n; ++i) {||| 24 if (a[i] == '0') {||| 25 if (i - 1 > n - i - 1) {||| 26 cout << 1 << ' ' << i << ' ' << 1 << ' ' << i - 1 << endl;||| 27 } else {||| 28 cout << i << ' ' << n << ' ' << i + 1 << ' ' << n << endl;||| 29 }||| 30 flg = false;||| 31 break;||| 32 }||| 33 }||| 34 if (flg) {||| 35 cout << 1 << ' ' << n - 1 << ' ' << 2 << ' ' << n << endl;||| 36 }||| 37 }||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class... Args>||| 4 void debug(Args... args) {||| 5 auto tmp = {(cout << args << ' ', 0)...};||| 6 cout << endl;||| 7 }||| 8 using ll = long long;||| 9 const int N = 2e4 + 10;||| 10 const int mod = 4933;||| 11 const double eps = 1e-9;||| 12 char a[N];||| 13 int main() {||| 14 ios::sync_with_stdio(false);||| 15 cin.tie(nullptr);||| 16 int T;||| 17 cin >> T;||| 18 while (T--) {||| 19 int n;||| 20 cin >> n;||| 21 cin >> (a + 1);||| 22 bool flg = true;||| 23 for (int i = 1; i <= n; ++i) {||| 24 if (a[i] == '0') {||| 25 if (i - 1 > n - i + 1) {||| 26 cout << 1 << ' ' << i << ' ' << 1 << ' ' << i - 1 << endl;||| 27 } else {||| 28 cout << i << ' ' << n << ' ' << i + 1 << ' ' << n << endl;||| 29 }||| 30 flg = false;||| 31 break;||| 32 }||| 33 }||| 34 if (flg) {||| 35 cout << 1 << ' ' << n - 1 << ' ' << 2 << ' ' << n << endl;||| 36 }||| 37 }||| 38 }||| 	25 if (i - 1 > n - i - 1) {
80	274	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.141592653589793238460;||| 3 using namespace std;||| 4 #pragma GCC optimize(""O3"")||| 5 #pragma GCC optimize(""Ofast"")||| 6 #pragma GCC optimize(""unroll-loops"")||| 7 long long pows(long long a, long long n, long long m) {||| 8 a = a % m;||| 9 long long res = 1;||| 10 while (n) {||| 11 if (n % 2 != 0) {||| 12 res = (res * a) % m;||| 13 n--;||| 14 } else {||| 15 a = (a * a) % m;||| 16 n = n / 2;||| 17 }||| 18 }||| 19 return res % m;||| 20 }||| 21 long long gcd(long long a, long long b) {||| 22 if (b == 0)||| 23 return a;||| 24 else||| 25 return gcd(b, a % b);||| 26 }||| 27 bool isprime(long long n) {||| 28 if (n == 1 || n == 0) {||| 29 return false;||| 30 }||| 31 for (long long i = 2; i * i <= n; i++) {||| 32 if (n % i == 0) {||| 33 return false;||| 34 }||| 35 }||| 36 return true;||| 37 }||| 38 bool istrue(string s) {||| 39 int i = 0;||| 40 int j = s.size() - 1;||| 41 while (i < j) {||| 42 if (s[i] == s[j]) {||| 43 i++;||| 44 j--;||| 45 } else {||| 46 return false;||| 47 }||| 48 }||| 49 return true;||| 50 }||| 51 const int N = 200005;||| 52 bool isPoss(string s, string t) {||| 53 long long i = 0;||| 54 long long j = 0;||| 55 long long n = s.size();||| 56 long long m = t.size();||| 57 while (i < n && j < m) {||| 58 if (s[i] == t[j]) {||| 59 i++;||| 60 j++;||| 61 } else {||| 62 i++;||| 63 }||| 64 }||| 65 if (j == m) {||| 66 return true;||| 67 }||| 68 return false;||| 69 }||| 70 int main() {||| 71 ios::sync_with_stdio(false);||| 72 cin.tie(0);||| 73 cout.tie(0);||| 74 long long TT = clock();||| 75 TT = clock();||| 76 int t;||| 77 cin >> t;||| 78 while (t--) {||| 79 long long n;||| 80 cin >> n;||| 81 string s;||| 82 cin >> s;||| 83 long long idx = -1;||| 84 for (long long i = 0; i < n; i++) {||| 85 if (s[i] == '0') {||| 86 idx = i;||| 87 break;||| 88 }||| 89 }||| 90 if (idx == -1) {||| 91 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << ""\n"";||| 92 } else {||| 93 idx++;||| 94 long long mid = n / 2;||| 95 if (idx <= mid) {||| 96 cout << idx << "" "" << n << "" "" << idx + 1 << "" "" << n << ""\n"";||| 97 } else {||| 98 cout << 1 << "" "" << idx << "" "" << 1 << "" "" << idx - 1 << ""\n"";||| 99 }||| 100 }||| 101 }||| 102 cerr << ""\n\nTIME: "" << (long double)(clock() - TT) / CLOCKS_PER_SEC||| 103 << "" sec\n"";||| 104 return 0;||| 105 }||| "	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.141592653589793238460;||| 3 using namespace std;||| 4 #pragma GCC optimize(""O3"")||| 5 #pragma GCC optimize(""Ofast"")||| 6 #pragma GCC optimize(""unroll-loops"")||| 7 long long pows(long long a, long long n, long long m) {||| 8 a = a % m;||| 9 long long res = 1;||| 10 while (n) {||| 11 if (n % 2 != 0) {||| 12 res = (res * a) % m;||| 13 n--;||| 14 } else {||| 15 a = (a * a) % m;||| 16 n = n / 2;||| 17 }||| 18 }||| 19 return res % m;||| 20 }||| 21 long long gcd(long long a, long long b) {||| 22 if (b == 0)||| 23 return a;||| 24 else||| 25 return gcd(b, a % b);||| 26 }||| 27 bool isprime(long long n) {||| 28 if (n == 1 || n == 0) {||| 29 return false;||| 30 }||| 31 for (long long i = 2; i * i <= n; i++) {||| 32 if (n % i == 0) {||| 33 return false;||| 34 }||| 35 }||| 36 return true;||| 37 }||| 38 bool istrue(string s) {||| 39 int i = 0;||| 40 int j = s.size() - 1;||| 41 while (i < j) {||| 42 if (s[i] == s[j]) {||| 43 i++;||| 44 j--;||| 45 } else {||| 46 return false;||| 47 }||| 48 }||| 49 return true;||| 50 }||| 51 const int N = 200005;||| 52 bool isPoss(string s, string t) {||| 53 long long i = 0;||| 54 long long j = 0;||| 55 long long n = s.size();||| 56 long long m = t.size();||| 57 while (i < n && j < m) {||| 58 if (s[i] == t[j]) {||| 59 i++;||| 60 j++;||| 61 } else {||| 62 i++;||| 63 }||| 64 }||| 65 if (j == m) {||| 66 return true;||| 67 }||| 68 return false;||| 69 }||| 70 int main() {||| 71 ios::sync_with_stdio(false);||| 72 cin.tie(0);||| 73 cout.tie(0);||| 74 long long TT = clock();||| 75 TT = clock();||| 76 int t;||| 77 cin >> t;||| 78 while (t--) {||| 79 long long n;||| 80 cin >> n;||| 81 string s;||| 82 cin >> s;||| 83 long long idx = -1;||| 84 for (long long i = 0; i < n; i++) {||| 85 if (s[i] == '0') {||| 86 idx = i;||| 87 break;||| 88 }||| 89 }||| 90 if (idx == -1) {||| 91 cout << 1 << "" "" << n << "" "" << 2 << "" "" << n << ""\n"";||| 92 } else {||| 93 idx++;||| 94 long long mid = n / 2;||| 95 if (idx <= mid) {||| 96 cout << idx << "" "" << n << "" "" << idx + 1 << "" "" << n << ""\n"";||| 97 } else {||| 98 cout << 1 << "" "" << idx << "" "" << 1 << "" "" << idx - 1 << ""\n"";||| 99 }||| 100 }||| 101 }||| 102 cerr << ""\n\nTIME: "" << (long double)(clock() - TT) / CLOCKS_PER_SEC||| 103 << "" sec\n"";||| 104 return 0;||| 105 }||| "	"91 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << ""\n"";"
80	375	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t = 1, n;||| 4 string s;||| 5 int main() {||| 6 std::ios::sync_with_stdio(0);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> s;||| 11 long long l1, r1, l2, r2;||| 12 l1 = r1 = l2 = r2 = -1;||| 13 long long l = 0, r = 0;||| 14 for (int i = n / 2; i < n; i++) {||| 15 if (s[i] == '0') {||| 16 l1 = 1;||| 17 r1 = i + 1;||| 18 l2 = 1;||| 19 r2 = i;||| 20 }||| 21 }||| 22 for (int i = n / 2 - 1; i >= 0; i--) {||| 23 if (s[i] == '0') {||| 24 l1 = i + 1;||| 25 r1 = n;||| 26 l2 = i + 2;||| 27 r2 = n;||| 28 }||| 29 }||| 30 while (l <= r && r < n) {||| 31 if (s[r] == '0') {||| 32 l = r + 1;||| 33 r = l;||| 34 } else {||| 35 if ((r - l + 1) > (n / 2)) {||| 36 l1 = l + 1;||| 37 r1 = r;||| 38 l2 = l + 2;||| 39 r2 = r + 1;||| 40 }||| 41 r++;||| 42 }||| 43 }||| 44 cout << l1 << ' ' << r1 << ' ' << l2 << ' ' << r2 << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t = 1, n;||| 4 string s;||| 5 int main() {||| 6 std::ios::sync_with_stdio(0);||| 7 cin.tie(NULL);||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n >> s;||| 11 long long l1, r1, l2, r2;||| 12 l1 = r1 = l2 = r2 = -1;||| 13 long long l = 0, r = 0;||| 14 for (int i = n / 2; i < n; i++) {||| 15 if (s[i] == '0') {||| 16 l1 = 1;||| 17 r1 = i + 1;||| 18 l2 = 1;||| 19 r2 = i;||| 20 }||| 21 }||| 22 for (int i = n / 2 + 1; i >= 0; i--) {||| 23 if (s[i] == '0') {||| 24 l1 = i + 1;||| 25 r1 = n;||| 26 l2 = i + 2;||| 27 r2 = n;||| 28 }||| 29 }||| 30 while (l <= r && r < n) {||| 31 if (s[r] == '0') {||| 32 l = r + 1;||| 33 r = l;||| 34 } else {||| 35 if ((r - l + 1) > (n / 2)) {||| 36 l1 = l + 1;||| 37 r1 = r;||| 38 l2 = l + 2;||| 39 r2 = r + 1;||| 40 }||| 41 r++;||| 42 }||| 43 }||| 44 cout << l1 << ' ' << r1 << ' ' << l2 << ' ' << r2 << ""\n"";||| 45 }||| 46 return 0;||| 47 }||| "	22 for (int i = n / 2 - 1; i >= 0; i--) {
80	489	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 2e4 + 50;||| 4 int a[MAX], n;||| 5 int main() {||| 6 int T;||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 scanf(""%d"", &n);||| 10 for (int i = 1; i <= n; i++) scanf(""%1d"", &a[i]);||| 11 int l1 = -1, r1 = -1, l2 = -1, r2 = -1;||| 12 for (int i = n / 2 + 1; i <= n; i++) {||| 13 if (a[i] == 0) {||| 14 l1 = l2 = 1;||| 15 r1 = i;||| 16 r2 = i - 1;||| 17 break;||| 18 }||| 19 }||| 20 if (l1 != -1) {||| 21 printf(""%d %d %d %d\n"", l1, r1, l2, r2);||| 22 continue;||| 23 }||| 24 for (int i = 1; i <= n / 2; i++) {||| 25 if (a[i] == 0) {||| 26 l1 = i;||| 27 l2 = i + 1;||| 28 r1 = r2 = n;||| 29 break;||| 30 }||| 31 }||| 32 if (l1 != -1) {||| 33 printf(""%d %d %d %d\n"", l1, r1, l2, r2);||| 34 continue;||| 35 }||| 36 printf(""1 %d 1 %d\n"", n -= (n & 1), n / 2);||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAX = 2e4 + 50;||| 4 int a[MAX], n;||| 5 int main() {||| 6 int T;||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 scanf(""%d"", &n);||| 10 for (int i = 1; i <= n; i++) scanf(""%1d"", &a[i]);||| 11 int l1 = -1, r1 = -1, l2 = -1, r2 = -1;||| 12 for (int i = n / 2 + 1; i <= n; i++) {||| 13 if (a[i] == 0) {||| 14 l1 = l2 = 1;||| 15 r1 = i;||| 16 r2 = i - 1;||| 17 break;||| 18 }||| 19 }||| 20 if (l1 != -1) {||| 21 printf(""%d %d %d %d\n"", l1, r1, l2, r2);||| 22 continue;||| 23 }||| 24 for (int i = 1; i <= n / 2; i--) {||| 25 if (a[i] == 0) {||| 26 l1 = i;||| 27 l2 = i + 1;||| 28 r1 = r2 = n;||| 29 break;||| 30 }||| 31 }||| 32 if (l1 != -1) {||| 33 printf(""%d %d %d %d\n"", l1, r1, l2, r2);||| 34 continue;||| 35 }||| 36 printf(""1 %d 1 %d\n"", n -= (n & 1), n / 2);||| 37 }||| 38 return 0;||| 39 }||| "	24 for (int i = 1; i <= n / 2; i++) {
80	355	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int _read() {||| 4 char ch = getchar();||| 5 while (ch != '0' && ch != '1') ch = getchar();||| 6 return ch - 48;||| 7 }||| 8 int T, n, a[20005], pd, w;||| 9 void work() {||| 10 scanf(""%d"", &n);||| 11 pd = 0;||| 12 for (int i = 1; i <= n; i++) {||| 13 a[i] = _read();||| 14 if (a[i] == 0) w = i, pd = 1;||| 15 }||| 16 if (pd == 0) {||| 17 printf(""%d %d %d %d\n"", 1, n - 1, 2, n);||| 18 } else {||| 19 if (w <= n / 2)||| 20 printf(""%d %d %d %d\n"", w, n, w + 1, n);||| 21 else||| 22 printf(""%d %d %d %d\n"", 1, w, 1, w - 1);||| 23 }||| 24 }||| 25 int main() {||| 26 scanf(""%d"", &T);||| 27 while (T--) work();||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int _read() {||| 4 char ch = getchar();||| 5 while (ch != '0' && ch != '1') ch = getchar();||| 6 return ch - 48;||| 7 }||| 8 int T, n, a[20005], pd, w;||| 9 void work() {||| 10 scanf(""%d"", &n);||| 11 pd = 0;||| 12 for (int i = 1; i <= n; i++) {||| 13 a[i] = _read();||| 14 if (a[i] == 0) w = i, pd = 1;||| 15 }||| 16 if (pd = 0) {||| 17 printf(""%d %d %d %d\n"", 1, n - 1, 2, n);||| 18 } else {||| 19 if (w <= n / 2)||| 20 printf(""%d %d %d %d\n"", w, n, w + 1, n);||| 21 else||| 22 printf(""%d %d %d %d\n"", 1, w, 1, w - 1);||| 23 }||| 24 }||| 25 int main() {||| 26 scanf(""%d"", &T);||| 27 while (T--) work();||| 28 return 0;||| 29 }||| "	16 if (pd == 0) {
80	524	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1000005];||| 4 long long n;||| 5 string s;||| 6 void speed() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 }||| 11 void sol() {||| 12 long long flag = 0;||| 13 for (long long i = 0; i < s.size(); i++)||| 14 if (s[i] == '0') {||| 15 if (i >= n / 2)||| 16 printf(""1 %lld 1 %lld\n"", i + 1, i);||| 17 else if (n - i > n / 2)||| 18 printf(""%lld %lld %lld %lld\n"", i + 1, n, i + 2, n);||| 19 return;||| 20 }||| 21 printf(""1 %lld 2 %lld\n"", n - 1, n);||| 22 return;||| 23 }||| 24 int main() {||| 25 speed();||| 26 long long tt;||| 27 cin >> tt;||| 28 while (tt--) {||| 29 cin >> n >> s;||| 30 sol();||| 31 }||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long a[1000005];||| 4 long long n;||| 5 string s;||| 6 void speed() {||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(NULL);||| 9 cout.tie(NULL);||| 10 }||| 11 void sol() {||| 12 long long flag = 0;||| 13 for (long long i = 0; i < s.size(); i++)||| 14 if (s[i] == '0') {||| 15 if (i > n / 2)||| 16 printf(""1 %lld 1 %lld\n"", i + 1, i);||| 17 else if (n - i > n / 2)||| 18 printf(""%lld %lld %lld %lld\n"", i + 1, n, i + 2, n);||| 19 return;||| 20 }||| 21 printf(""1 %lld 2 %lld\n"", n - 1, n);||| 22 return;||| 23 }||| 24 int main() {||| 25 speed();||| 26 long long tt;||| 27 cin >> tt;||| 28 while (tt--) {||| 29 cin >> n >> s;||| 30 sol();||| 31 }||| 32 return 0;||| 33 }||| "	15 if (i >= n / 2)
80	36	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 4e4 + 6;||| 4 int T;||| 5 char str[MAXN];||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 int len;||| 10 bool flag;||| 11 flag = 0;||| 12 scanf(""%d"", &len);||| 13 scanf(""%s"", str);||| 14 for (int i = 0; i < len; i++) {||| 15 if ((!flag) && str[i] == '0') {||| 16 if (len & 1) {||| 17 if (i + 1 <= (len + 1) / 2) {||| 18 printf(""%d %d %d %d\n"", i + 1, len, i + 2, len);||| 19 flag = 1;||| 20 } else {||| 21 printf(""%d %d %d %d\n"", 1, i + 1, 1, i);||| 22 flag = 1;||| 23 }||| 24 } else {||| 25 if (i + 1 <= len / 2) {||| 26 printf(""%d %d %d %d\n"", i + 1, len, i + 2, len);||| 27 flag = 1;||| 28 } else {||| 29 printf(""%d %d %d %d\n"", 1, i + 1, 1, i);||| 30 flag = 1;||| 31 }||| 32 }||| 33 }||| 34 }||| 35 if (!flag) {||| 36 printf(""2 %d 1 %d\n"", len, len - 1);||| 37 }||| 38 }||| 39 return 0;||| 40 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 4e4 + 6;||| 4 int T;||| 5 char str[MAXN];||| 6 int main() {||| 7 scanf(""%d"", &T);||| 8 while (T--) {||| 9 int len;||| 10 bool flag;||| 11 flag = 0;||| 12 scanf(""%d"", &len);||| 13 scanf(""%s"", str);||| 14 for (int i = 0; i < len; i++) {||| 15 if ((!flag) && str[i] == '0') {||| 16 if (len & 1) {||| 17 if (i + 1 <= (len + 1) / 2) {||| 18 printf(""%d %d %d %d\n"", i + 1, len, i + 2, len);||| 19 flag = 1;||| 20 } else {||| 21 printf(""%d %d %d %d\n"", 1, i + 1, 1, i);||| 22 flag = 1;||| 23 }||| 24 } else {||| 25 if (i + 1 <= len / 2) {||| 26 printf(""%d %d %d %d\n"", i + 1, len, i + 2, len);||| 27 flag = 1;||| 28 } else {||| 29 printf(""%d %d %d %d\n"", 1, i + 1, 1, i);||| 30 flag = 1;||| 31 }||| 32 }||| 33 }||| 34 }||| 35 if (!flag) {||| 36 printf(""1 %d 1 %d\n"", len, len - 1);||| 37 }||| 38 }||| 39 return 0;||| 40 }||| "	"36 printf(""2 %d 1 %d\n"", len, len - 1);"
80	437	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 string s;||| 7 cin >> s;||| 8 if (s[n - 1] == '0') {||| 9 cout << 1 << "" "" << n << "" "" << 1 << "" "" << n - 1 << '\n';||| 10 } else {||| 11 long long idx = -1;||| 12 for (long long i = 0; i < n; i++) {||| 13 if (s[i] == '0') idx = i + 1;||| 14 }||| 15 if (idx == -1) {||| 16 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << '\n';||| 17 return;||| 18 }||| 19 if (idx > n / 2) {||| 20 cout << 1 << "" "" << idx << "" "" << 1 << "" "" << idx - 1 << '\n';||| 21 } else {||| 22 cout << idx << "" "" << n << "" "" << idx + 1 << "" "" << n << '\n';||| 23 }||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(0);||| 29 cout.tie(0);||| 30 long long t = 1;||| 31 cin >> t;||| 32 while (t--) solve();||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n;||| 5 cin >> n;||| 6 string s;||| 7 cin >> s;||| 8 if (s[n - 1] == '0') {||| 9 cout << 1 << "" "" << n << "" "" << 1 << "" "" << n - 1 << '\n';||| 10 } else {||| 11 long long idx = -1;||| 12 for (long long i = 0; i < n; i++) {||| 13 if (s[i] == '0') idx = i + 1;||| 14 }||| 15 if (idx == -1) {||| 16 cout << 1 << "" "" << n - 1 << "" "" << 2 << "" "" << n << '\n';||| 17 return;||| 18 }||| 19 if (idx >= n / 2) {||| 20 cout << 1 << "" "" << idx << "" "" << 1 << "" "" << idx - 1 << '\n';||| 21 } else {||| 22 cout << idx << "" "" << n << "" "" << idx + 1 << "" "" << n << '\n';||| 23 }||| 24 }||| 25 }||| 26 signed main() {||| 27 ios_base::sync_with_stdio(false);||| 28 cin.tie(0);||| 29 cout.tie(0);||| 30 long long t = 1;||| 31 cin >> t;||| 32 while (t--) solve();||| 33 return 0;||| 34 }||| "	19 if (idx > n / 2) {
80	285	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int constexpr N = 2e5 + 5;||| 4 int n, m;||| 5 char s[20004];||| 6 void solve() {||| 7 bool b = false;||| 8 int ind;||| 9 cin >> n;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> s[i];||| 12 if (s[i] == '0') b = true, ind = i;||| 13 }||| 14 if (b) {||| 15 if (ind + 1 <= n / 2)||| 16 cout << ind + 1 << "" "" << n << "" "" << ind + 2 << "" "" << n << '\n';||| 17 else||| 18 cout << 1 << "" "" << ind + 1 << "" "" << 1 << "" "" << ind << '\n';||| 19 } else {||| 20 cout << 1 << "" "" << n / 2 << "" "" << (n + 3) / 2 << "" "" << n << '\n';||| 21 }||| 22 return;||| 23 }||| 24 signed main() {||| 25 ios::sync_with_stdio(0), cin.tie(0);||| 26 int t = 1;||| 27 cin >> t;||| 28 while (t--) solve();||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int constexpr N = 2e5 + 5;||| 4 int n, m;||| 5 char s[20004];||| 6 void solve() {||| 7 bool b = false;||| 8 int ind;||| 9 cin >> n;||| 10 for (int i = 0; i < n; ++i) {||| 11 cin >> s[i];||| 12 if (s[i] == '0') b = true, ind = i;||| 13 }||| 14 if (b) {||| 15 if (ind + 1 <= n / 2)||| 16 cout << ind + 1 << "" "" << n << "" "" << ind + 2 << "" "" << n << '\n';||| 17 else||| 18 cout << 1 << "" "" << ind + 1 << "" "" << 1 << "" "" << ind << '\n';||| 19 } else {||| 20 cout << 1 << "" "" << n / 2 << "" "" << (n + 1) / 2 << "" "" << n << '\n';||| 21 }||| 22 return;||| 23 }||| 24 signed main() {||| 25 ios::sync_with_stdio(0), cin.tie(0);||| 26 int t = 1;||| 27 cin >> t;||| 28 while (t--) solve();||| 29 return 0;||| 30 }||| "	"20 cout << 1 << "" "" << n / 2 << "" "" << (n + 3) / 2 << "" "" << n << '\n';"
80	500	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod(long long int x, long long int m) { return (x % m + m) % m; }||| 4 long long int gcd(long long int a, long long int b) {||| 5 if (b == 0) return a;||| 6 a %= b;||| 7 return gcd(b, a);||| 8 }||| 9 long long int fast_exp(long long int base, long long int exp) {||| 10 long long int res = 1;||| 11 while (exp > 0) {||| 12 if (exp % 2 == 1) res = (res * base) % 1000000007;||| 13 base = (base * base) % 1000000007;||| 14 exp /= 2;||| 15 }||| 16 return res % 1000000007;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long int t = 1, r, n, a, d, c, b, x, y, sum, cnt, i, j, k, m, l, q, maxx,||| 22 minn, temp, ans, flag, g, ts;||| 23 long long int mod = 1000000007;||| 24 char ch, chh;||| 25 double dans;||| 26 string str, ttr;||| 27 cin >> t;||| 28 for (ts = 1; ts <= t; ts++) {||| 29 flag = 0;||| 30 sum = 0;||| 31 cnt = 0;||| 32 ans = 0;||| 33 k = 0;||| 34 maxx = 0;||| 35 minn = 0;||| 36 a = 0;||| 37 b = 0;||| 38 temp = 0;||| 39 cin >> n >> str;||| 40 for (i = 0; i < (n) / 2; i++) {||| 41 if (str[i] == '0') {||| 42 flag = 1;||| 43 ans = i;||| 44 break;||| 45 }||| 46 }||| 47 if (flag == 1) {||| 48 cout << ans + 1 << "" "" << n << "" "";||| 49 cout << ans + 2 << "" "" << n;||| 50 } else {||| 51 flag = 0;||| 52 for (i = ((n - 1) / 2) + 1; i < n; i++) {||| 53 if (str[i] == '0') {||| 54 flag = 1;||| 55 ans = i;||| 56 break;||| 57 }||| 58 }||| 59 if (flag == 1) {||| 60 cout << 1 << "" "" << ans + 1 << "" "";||| 61 cout << 1 << "" "" << ans;||| 62 } else if (n % 2 == 1 && str[n / 2] == '0') {||| 63 cout << ""1 "" << (n + 1) / 2 << "" "";||| 64 cout << (n + 1) / 2 << "" "" << n;||| 65 } else {||| 66 cout << ""1 "" << n - 1 << "" "";||| 67 cout << ""2 "" << n;||| 68 }||| 69 }||| 70 cout << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int mod(long long int x, long long int m) { return (x % m + m) % m; }||| 4 long long int gcd(long long int a, long long int b) {||| 5 if (b == 0) return a;||| 6 a %= b;||| 7 return gcd(b, a);||| 8 }||| 9 long long int fast_exp(long long int base, long long int exp) {||| 10 long long int res = 1;||| 11 while (exp > 0) {||| 12 if (exp % 2 == 1) res = (res * base) % 1000000007;||| 13 base = (base * base) % 1000000007;||| 14 exp /= 2;||| 15 }||| 16 return res % 1000000007;||| 17 }||| 18 int main() {||| 19 ios_base::sync_with_stdio(false);||| 20 cin.tie(NULL);||| 21 long long int t = 1, r, n, a, d, c, b, x, y, sum, cnt, i, j, k, m, l, q, maxx,||| 22 minn, temp, ans, flag, g, ts;||| 23 long long int mod = 1000000007;||| 24 char ch, chh;||| 25 double dans;||| 26 string str, ttr;||| 27 cin >> t;||| 28 for (ts = 1; ts <= t; ts++) {||| 29 flag = 0;||| 30 sum = 0;||| 31 cnt = 0;||| 32 ans = 0;||| 33 k = 0;||| 34 maxx = 0;||| 35 minn = 0;||| 36 a = 0;||| 37 b = 0;||| 38 temp = 0;||| 39 cin >> n >> str;||| 40 for (i = 0; i < (n) / 2; i++) {||| 41 if (str[i] == '0') {||| 42 flag = 1;||| 43 ans = i;||| 44 break;||| 45 }||| 46 }||| 47 if (flag == 1) {||| 48 cout << ans + 1 << "" "" << n << "" "";||| 49 cout << ans + 2 << "" "" << n;||| 50 } else {||| 51 flag = 0;||| 52 for (i = ((n - 1) / 2) + 1; i < n; i++) {||| 53 if (str[i] == '0') {||| 54 flag = 1;||| 55 ans = i;||| 56 break;||| 57 }||| 58 }||| 59 if (flag == 1) {||| 60 cout << 1 << "" "" << ans + 1 << "" "";||| 61 cout << 1 << "" "" << ans;||| 62 } else if (n % 2 == 1 && str[n / 2] == '0') {||| 63 cout << ""1 "" << (n + 1) / 2 << "" "";||| 64 cout << (n + 1) / 2 << "" "" << n;||| 65 } else {||| 66 cout << ""1 "" << n << "" "";||| 67 cout << ""2 "" << n;||| 68 }||| 69 }||| 70 cout << ""\n"";||| 71 }||| 72 return 0;||| 73 }||| "	"66 cout << ""1 "" << n - 1 << "" "";"
80	297	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err(istream_iterator<string> it) {}||| 4 template <typename T, typename... Args>||| 5 void err(istream_iterator<string> it, T a, Args... args) {||| 6 cerr << *it << "" = "" << a << "",""||| 7 << "" "";||| 8 err(++it, args...);||| 9 cout << ""\n"";||| 10 }||| 11 bool checkbit(long long mask, long long bit) { return mask & (1ll << bit); }||| 12 int setbit(long long mask, long long bit) { return mask | (1ll << bit); }||| 13 int clearbit(long long mask, long long bit) { return mask & ~(1ll << bit); }||| 14 int togglebit(long long mask, long long bit) { return mask ^ (1ll << bit); }||| 15 int bitno(long long mask) { return (long long)__builtin_popcount(mask); }||| 16 const int fx[] = {+1, -1, +0, +0};||| 17 const int fy[] = {+0, +0, +1, -1};||| 18 const long long maX = 1e6 + 10;||| 19 int main() {||| 20 ios_base::sync_with_stdio(0);||| 21 cin.tie(0);||| 22 cout.tie(0);||| 23 ;||| 24 long long test;||| 25 cin >> test;||| 26 while (test--) {||| 27 long long n;||| 28 cin >> n;||| 29 string str;||| 30 cin >> str;||| 31 bool ok = false;||| 32 for (long long i = 0; i < str.size(); i++) {||| 33 if (str[i] == '0') {||| 34 long long x = n - i;||| 35 if (x >= n / 2 && (x - 1) >= n / 2) {||| 36 cout << i + 1 << "" "" << n << "" "" << i + 2 << "" "" << n << ""\n"";||| 37 ok = true;||| 38 break;||| 39 }||| 40 }||| 41 }||| 42 if (ok) continue;||| 43 for (long long i = 0; i < str.size(); i++) {||| 44 if (str[i] == '0') {||| 45 if (i >= n / 2) {||| 46 cout << 1 << "" "" << i + 1 << "" "" << 1 << "" "" << i << ""\n"";||| 47 ok = true;||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 if (ok) continue;||| 53 if (n % 2 == 0) {||| 54 cout << 1 << "" "" << n / 2 << "" "" << n / 2 + 1 << "" "" << n << ""\n"";||| 55 } else {||| 56 cout << 1 << "" "" << n / 2 << "" "" << n / 2 + 2 << "" "" << n << ""\n"";||| 57 }||| 58 }||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err(istream_iterator<string> it) {}||| 4 template <typename T, typename... Args>||| 5 void err(istream_iterator<string> it, T a, Args... args) {||| 6 cerr << *it << "" = "" << a << "",""||| 7 << "" "";||| 8 err(++it, args...);||| 9 cout << ""\n"";||| 10 }||| 11 bool checkbit(long long mask, long long bit) { return mask & (1ll << bit); }||| 12 int setbit(long long mask, long long bit) { return mask | (1ll << bit); }||| 13 int clearbit(long long mask, long long bit) { return mask & ~(1ll << bit); }||| 14 int togglebit(long long mask, long long bit) { return mask ^ (1ll << bit); }||| 15 int bitno(long long mask) { return (long long)__builtin_popcount(mask); }||| 16 const int fx[] = {+1, -1, +0, +0};||| 17 const int fy[] = {+0, +0, +1, -1};||| 18 const long long maX = 1e6 + 10;||| 19 int main() {||| 20 ios_base::sync_with_stdio(0);||| 21 cin.tie(0);||| 22 cout.tie(0);||| 23 ;||| 24 long long test;||| 25 cin >> test;||| 26 while (test--) {||| 27 long long n;||| 28 cin >> n;||| 29 string str;||| 30 cin >> str;||| 31 bool ok = false;||| 32 for (long long i = 0; i < str.size(); i++) {||| 33 if (str[i] == '0') {||| 34 long long x = n - i;||| 35 if (x >= n / 2 && (x - 1) >= n / 2) {||| 36 cout << i + 1 << "" "" << n << "" "" << i + 2 << "" "" << n << ""\n"";||| 37 ok = true;||| 38 break;||| 39 }||| 40 }||| 41 }||| 42 if (ok) continue;||| 43 for (long long i = 0; i < str.size(); i++) {||| 44 if (str[i] == '0') {||| 45 if (i >= n / 2) {||| 46 cout << 1 << "" "" << i + 1 << "" "" << 1 << "" "" << i << ""\n"";||| 47 ok = true;||| 48 break;||| 49 }||| 50 }||| 51 }||| 52 if (ok) break;||| 53 if (n % 2 == 0) {||| 54 cout << 1 << "" "" << n / 2 << "" "" << n / 2 + 1 << "" "" << n << ""\n"";||| 55 } else {||| 56 cout << 1 << "" "" << n / 2 << "" "" << n / 2 + 2 << "" "" << n << ""\n"";||| 57 }||| 58 }||| 59 return 0;||| 60 }||| "	52 if (ok) continue;
81	106	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 998244353;||| 4 void solve() {||| 5 int n, q;||| 6 string s;||| 7 cin >> n >> q >> s;||| 8 vector<int> sum(n + 1, 0), a(n + 1);||| 9 for (int i = 1; i <= n; ++i) {||| 10 sum[i] = sum[i - 1];||| 11 if (s[i - 1] == '+')||| 12 a[i] = 1;||| 13 else||| 14 a[i] = -1;||| 15 if (i % 2)||| 16 sum[i] += a[i];||| 17 else||| 18 sum[i] -= a[i];||| 19 }||| 20 while (q--) {||| 21 int l, r;||| 22 cin >> l >> r;||| 23 if (sum[r] - sum[l - 1] == 0)||| 24 cout << 0;||| 25 else if ((r - l + 1) % 2)||| 26 cout << 1;||| 27 else||| 28 cout << 2;||| 29 cout << '\n';||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(0);||| 35 cout.tie(0);||| 36 int t = 1;||| 37 cin >> t;||| 38 while (t--) solve();||| 39 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long M = 998244353;||| 4 void solve() {||| 5 int n, q;||| 6 string s;||| 7 cin >> n >> q >> s;||| 8 vector<int> sum(n + 1, 0), a(n + 1);||| 9 for (int i = 1; i <= n; ++i) {||| 10 sum[i] = sum[i - 1];||| 11 if (s[i - 1] == '+')||| 12 a[i] = 1;||| 13 else||| 14 a[i] = -1;||| 15 if (i % 2)||| 16 sum[i] += a[i];||| 17 else||| 18 sum[i] -= a[i];||| 19 }||| 20 while (q--) {||| 21 int l, r;||| 22 cin >> l >> r;||| 23 if (sum[r] - sum[l - 1] == 0)||| 24 cout << 0;||| 25 else if (r - l + 1 % 2)||| 26 cout << 1;||| 27 else||| 28 cout << 2;||| 29 cout << '\n';||| 30 }||| 31 }||| 32 int main() {||| 33 ios_base::sync_with_stdio(false);||| 34 cin.tie(0);||| 35 cout.tie(0);||| 36 int t = 1;||| 37 cin >> t;||| 38 while (t--) solve();||| 39 }||| 	25 else if ((r - l + 1) % 2)
81	163	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, q;||| 5 cin >> n >> q;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> plus, minus;||| 9 plus.push_back(0);||| 10 minus.push_back(0);||| 11 for (long long i = 0; i < n; i++) {||| 12 if (i % 2) {||| 13 if (s[i] == '+') {||| 14 s[i] = '-';||| 15 } else {||| 16 s[i] = '+';||| 17 }||| 18 }||| 19 }||| 20 long long pluscount = 0, minuscount = 0;||| 21 for (long long i = 0; i < n; i++) {||| 22 if (s[i] == '+') {||| 23 pluscount++;||| 24 } else {||| 25 minuscount++;||| 26 }||| 27 plus.push_back(pluscount);||| 28 minus.push_back(minuscount);||| 29 }||| 30 while (q--) {||| 31 long long l, r;||| 32 cin >> l >> r;||| 33 long long p = plus[r] - plus[l - 1];||| 34 long long m = minus[r] - minus[l - 1];||| 35 if (p == m) {||| 36 cout << 0 << endl;||| 37 } else if ((p + m) % 2 == 0) {||| 38 cout << 2 << endl;||| 39 } else {||| 40 cout << 1 << endl;||| 41 }||| 42 }||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 cout.tie(NULL);||| 48 long long t;||| 49 cin >> t;||| 50 while (t--) {||| 51 solve();||| 52 }||| 53 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long n, q;||| 5 cin >> n >> q;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> plus, minus;||| 9 plus.push_back(0);||| 10 minus.push_back(0);||| 11 for (long long i = 0; i < n; i++) {||| 12 if (i % 2) {||| 13 if (s[i] == '+') {||| 14 s[i] = '-';||| 15 } else {||| 16 s[i] = '+';||| 17 }||| 18 }||| 19 }||| 20 long long pluscount = 0, minuscount = 0;||| 21 for (long long i = 0; i < n; i++) {||| 22 if (s[i] == '+') {||| 23 pluscount++;||| 24 } else {||| 25 minuscount++;||| 26 }||| 27 plus.push_back(pluscount);||| 28 minus.push_back(minuscount);||| 29 }||| 30 while (q--) {||| 31 long long l, r;||| 32 cin >> l >> r;||| 33 long long p = plus[r] - plus[l - 1];||| 34 long long m = minus[r] - minus[l - 1];||| 35 if (p == m) {||| 36 cout << 0 << endl;||| 37 } else if (p + m % 2 == 0) {||| 38 cout << 2 << endl;||| 39 } else {||| 40 cout << 1 << endl;||| 41 }||| 42 }||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 cout.tie(NULL);||| 48 long long t;||| 49 cin >> t;||| 50 while (t--) {||| 51 solve();||| 52 }||| 53 }||| 	37 } else if ((p + m) % 2 == 0) {
81	150	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int di[] = {0, -1, 0, 1, -1, 1, -1, 1};||| 4 int dj[] = {-1, 0, 1, 0, 1, -1, -1, 1};||| 5 int mod = 1e9 + 7;||| 6 int INF = 1E9;||| 7 long long INFF = 1E18;||| 8 int const N = 3e5 + 5;||| 9 int a[N];||| 10 int n;||| 11 int go(int i, bool first, int second) {||| 12 if (i == n) return (!second ? 0 : 1e9);||| 13 long long x = a[i];||| 14 if ((i % 2 && !first) || ((i % 2 == 0 && first))) x *= -1;||| 15 return min(go(i + 1, first, second + x), go(i + 1, !first, second) + 1);||| 16 }||| 17 int pre[N];||| 18 int main() {||| 19 ios_base::sync_with_stdio(0), cin.tie(0);||| 20 int q;||| 21 cin >> q;||| 22 while (q--) {||| 23 int k;||| 24 cin >> n >> k;||| 25 long long ss = 0;||| 26 for (int i = 0; i < n; ++i) {||| 27 char x;||| 28 cin >> x;||| 29 if (x == '-')||| 30 a[i] = -1;||| 31 else||| 32 a[i] = 1;||| 33 if ((a[i] == 1 && i % 2 == 0) || (i % 2 && a[i] == -1))||| 34 ss++;||| 35 else||| 36 ss--;||| 37 pre[i + 1] = ss;||| 38 }||| 39 while (k--) {||| 40 int l, r;||| 41 cin >> l >> r;||| 42 long long sum = (pre[r] - pre[l - 1]);||| 43 int xx = !sum ? 0 : abs(sum + 1) % 2 + 1;||| 44 cout << xx << ""\n"";||| 45 }||| 46 }||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int di[] = {0, -1, 0, 1, -1, 1, -1, 1};||| 4 int dj[] = {-1, 0, 1, 0, 1, -1, -1, 1};||| 5 int mod = 1e9 + 7;||| 6 int INF = 1E9;||| 7 long long INFF = 1E18;||| 8 int const N = 3e5 + 5;||| 9 int a[N];||| 10 int n;||| 11 int go(int i, bool first, int second) {||| 12 if (i == n) return (!second ? 0 : 1e9);||| 13 long long x = a[i];||| 14 if ((i % 2 && !first) || ((i % 2 == 0 && first))) x *= -1;||| 15 return min(go(i + 1, first, second + x), go(i + 1, !first, second) + 1);||| 16 }||| 17 int pre[N];||| 18 int main() {||| 19 ios_base::sync_with_stdio(0), cin.tie(0);||| 20 int q;||| 21 cin >> q;||| 22 while (q--) {||| 23 int k;||| 24 cin >> n >> k;||| 25 long long ss = 0;||| 26 for (int i = 0; i < n; ++i) {||| 27 char x;||| 28 cin >> x;||| 29 if (x == '-')||| 30 a[i] = -1;||| 31 else||| 32 a[i] = 1;||| 33 if ((a[i] == 1 && i % 2 == 0) || (i % 2 && a[i] == -1))||| 34 ss++;||| 35 else||| 36 ss--;||| 37 pre[i + 1] = ss;||| 38 }||| 39 while (k--) {||| 40 int l, r;||| 41 cin >> l >> r;||| 42 long long sum = (pre[r] - pre[l - 1]);||| 43 int xx = !sum ? 0 : (sum + 1) % 2 + 1;||| 44 cout << xx << ""\n"";||| 45 }||| 46 }||| 47 }||| "	43 int xx = !sum ? 0 : abs(sum + 1) % 2 + 1;
81	113	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace io {||| 4 inline long long read() {||| 5 register char c = getchar();||| 6 register long long x = 0, f = 1;||| 7 while (c < '0' || c > '9') {||| 8 if (c == '-') f = -1;||| 9 c = getchar();||| 10 }||| 11 while (c >= '0' && c <= '9') {||| 12 x = (x << 3) + (x << 1) + c - '0';||| 13 c = getchar();||| 14 }||| 15 return x * f;||| 16 }||| 17 }  // namespace io||| 18 using namespace io;||| 19 int t;||| 20 int n, q, l, r;||| 21 int sum[300005];||| 22 int main() {||| 23 t = read();||| 24 while (t--) {||| 25 n = read();||| 26 q = read();||| 27 char c;||| 28 for (int i = 1; i <= n; i++) {||| 29 c = getchar();||| 30 if (c == '+')||| 31 sum[i] = sum[i - 1] + (i & 1 ? 1 : -1);||| 32 else||| 33 sum[i] = sum[i - 1] - (i & 1 ? 1 : -1);||| 34 }||| 35 for (int i = 0; i < q; i++) {||| 36 l = read();||| 37 r = read();||| 38 if (sum[r] == sum[l - 1])||| 39 printf(""0\n"");||| 40 else if ((r - l) & 1)||| 41 printf(""2\n"");||| 42 else||| 43 printf(""1\n"");||| 44 }||| 45 }||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 namespace io {||| 4 inline long long read() {||| 5 register char c = getchar();||| 6 register long long x = 0, f = 1;||| 7 while (c < '0' || c > '9') {||| 8 if (c == '-') f = -1;||| 9 c = getchar();||| 10 }||| 11 while (c >= '0' && c <= '9') {||| 12 x = (x << 3) + (x << 1) + c - '0';||| 13 c = getchar();||| 14 }||| 15 return x * f;||| 16 }||| 17 }  // namespace io||| 18 using namespace io;||| 19 int t;||| 20 int n, q, l, r;||| 21 int sum[300005];||| 22 int main() {||| 23 t = read();||| 24 while (t--) {||| 25 n = read();||| 26 q = read();||| 27 char c;||| 28 for (int i = 1; i <= n; i++) {||| 29 c = getchar();||| 30 if (c == '+')||| 31 sum[i] = sum[i - 1] + (i & 1 ? 1 : -1);||| 32 else||| 33 sum[i] = sum[i - 1] - (i & 1 ? 1 : -1);||| 34 }||| 35 for (int i = 0; i < q; i++) {||| 36 l = read();||| 37 r = read();||| 38 if (sum[r] == sum[l - 1]) printf(""0\n"");||| 39 if ((r - l) & 1)||| 40 printf(""2\n"");||| 41 else||| 42 printf(""1\n"");||| 43 }||| 44 }||| 45 return 0;||| 46 }||| "	38 if (sum[r] == sum[l - 1])
81	39	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(1)||| 3 #pragma GCC optimize(2)||| 4 #pragma GCC optimize(3, ""Ofast"", ""inline"")||| 5 using namespace std;||| 6 char ss[300005];||| 7 int a[300005], sum[300005];||| 8 int main() {||| 9 int t;||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 int n, q;||| 13 scanf(""%d %d"", &n, &q);||| 14 scanf("" %s"", ss);||| 15 for (int i = 0; i < n; i++) {||| 16 if (ss[i] == '+')||| 17 a[i] = 1;||| 18 else||| 19 a[i] = -1;||| 20 }||| 21 for (int i = 1; i <= n; i++) {||| 22 if (i % 2 == 0)||| 23 sum[i] = sum[i - 1] - a[i - 1];||| 24 else||| 25 sum[i] = sum[i - 1] + a[i - 1];||| 26 }||| 27 while (q--) {||| 28 int l, r;||| 29 scanf(""%d %d"", &l, &r);||| 30 if (sum[r] - sum[l - 1] == 0)||| 31 printf(""0\n"");||| 32 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)||| 33 printf(""1\n"");||| 34 else||| 35 printf(""2\n"");||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(1)||| 3 #pragma GCC optimize(2)||| 4 #pragma GCC optimize(3, ""Ofast"", ""inline"")||| 5 using namespace std;||| 6 char ss[300005];||| 7 int a[300005], sum[300005];||| 8 int main() {||| 9 int t;||| 10 scanf(""%d"", &t);||| 11 while (t--) {||| 12 int n, q;||| 13 scanf(""%d %d"", &n, &q);||| 14 scanf("" %s"", ss);||| 15 for (int i = 0; i < n; i++) {||| 16 if (ss[i] == '+')||| 17 a[i] = 1;||| 18 else||| 19 a[i] = -1;||| 20 }||| 21 for (int i = 1; i <= n; i++) {||| 22 if (i % 2 == 0)||| 23 sum[i] = sum[i - 1] - a[i - 1];||| 24 else||| 25 sum[i] = sum[i - 1] + a[i - 1];||| 26 }||| 27 while (q--) {||| 28 int l, r;||| 29 scanf(""%d %d"", &l, &r);||| 30 if (sum[r] - sum[l - 1] == 0)||| 31 printf(""0\n"");||| 32 else if ((sum[r] - sum[l - 1]) % 2 == 1)||| 33 printf(""1\n"");||| 34 else||| 35 printf(""2\n"");||| 36 }||| 37 }||| 38 return 0;||| 39 }||| "	32 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)
81	88	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod1 = 998244353;||| 4 const int mod2 = 1000000007;||| 5 int gcd(int a, int b) {||| 6 if (b == 0) return a;||| 7 return gcd(b, a % b);||| 8 }||| 9 int power(int x, int y, int md = -1) {||| 10 int res = 1;||| 11 if (md == -1) {||| 12 while (y) {||| 13 if (y & 1) res = (res * x);||| 14 x *= x;||| 15 y >>= 1;||| 16 }||| 17 return res;||| 18 } else {||| 19 x %= md;||| 20 while (y) {||| 21 if (y & 1) res = (res * x) % md;||| 22 x *= x;||| 23 if (x >= md) x %= md;||| 24 y >>= 1;||| 25 }||| 26 return res;||| 27 }||| 28 }||| 29 int32_t main() {||| 30 ios_base::sync_with_stdio(false);||| 31 cin.tie(NULL);||| 32 cout.tie(NULL);||| 33 cout << fixed << setprecision(20);||| 34 int testcases;||| 35 cin >> testcases;||| 36 while (testcases--) {||| 37 int n, q;||| 38 cin >> n >> q;||| 39 string s;||| 40 cin >> s;||| 41 int a[n], b[n + 1];||| 42 for (int i = 0; i < n; i += 2) {||| 43 if (s[i] == '+') {||| 44 a[i] = 1;||| 45 } else {||| 46 a[i] = -1;||| 47 }||| 48 }||| 49 for (int i = 1; i < n; i += 2) {||| 50 if (s[i] == '-') {||| 51 a[i] = 1;||| 52 } else {||| 53 a[i] = -1;||| 54 }||| 55 }||| 56 b[0] = 0;||| 57 b[1] = a[0];||| 58 for (int i = 1; i < n; i++) {||| 59 b[i + 1] = b[i] + a[i];||| 60 }||| 61 for (int i = 0; i < q; i++) {||| 62 int l, r;||| 63 cin >> l >> r;||| 64 if (b[r] == b[l - 1]) {||| 65 cout << 0 << '\n';||| 66 } else {||| 67 cout << 2 - ((r - l + 1) % 2) << '\n';||| 68 }||| 69 }||| 70 }||| 71 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod1 = 998244353;||| 4 const int mod2 = 1000000007;||| 5 int gcd(int a, int b) {||| 6 if (b == 0) return a;||| 7 return gcd(b, a % b);||| 8 }||| 9 int power(int x, int y, int md = -1) {||| 10 int res = 1;||| 11 if (md == -1) {||| 12 while (y) {||| 13 if (y & 1) res = (res * x);||| 14 x *= x;||| 15 y >>= 1;||| 16 }||| 17 return res;||| 18 } else {||| 19 x %= md;||| 20 while (y) {||| 21 if (y & 1) res = (res * x) % md;||| 22 x *= x;||| 23 if (x >= md) x %= md;||| 24 y >>= 1;||| 25 }||| 26 return res;||| 27 }||| 28 }||| 29 int32_t main() {||| 30 ios_base::sync_with_stdio(false);||| 31 cin.tie(NULL);||| 32 cout.tie(NULL);||| 33 cout << fixed << setprecision(20);||| 34 int testcases;||| 35 cin >> testcases;||| 36 while (testcases--) {||| 37 int n, q;||| 38 cin >> n >> q;||| 39 string s;||| 40 cin >> s;||| 41 int a[n], b[n + 1];||| 42 for (int i = 0; i < n; i += 2) {||| 43 if (s[i] == '+') {||| 44 a[i] = 1;||| 45 } else {||| 46 a[i] = -1;||| 47 }||| 48 }||| 49 for (int i = 1; i < n; i += 2) {||| 50 if (s[i] == '-') {||| 51 a[i] = 1;||| 52 } else {||| 53 a[i] = -1;||| 54 }||| 55 }||| 56 b[0] = 0;||| 57 b[1] = a[0];||| 58 for (int i = 1; i < n; i++) {||| 59 b[i + 1] = b[i] + a[i];||| 60 }||| 61 for (int i = 0; i < q; i++) {||| 62 int l, r;||| 63 cin >> l >> r;||| 64 if (b[r] == b[l - 1]) {||| 65 cout << 0 << '\n';||| 66 } else {||| 67 cout << 2 - ((r - l - 1) % 2) << '\n';||| 68 }||| 69 }||| 70 }||| 71 }||| 	67 cout << 2 - ((r - l + 1) % 2) << '\n';
81	31	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 long long dp[N];||| 5 void solve() {||| 6 int n, q;||| 7 cin >> n >> q;||| 8 for (int i = 1; i <= n; i++) {||| 9 char c;||| 10 cin >> c;||| 11 int val = 1;||| 12 if (c == '-') val *= -1;||| 13 if (i % 2 == 0) val *= -1;||| 14 dp[i] = dp[i - 1] + val;||| 15 }||| 16 while (q--) {||| 17 int l, r;||| 18 cin >> l >> r;||| 19 long long temp = dp[r] - dp[l - 1];||| 20 if (temp == 0)||| 21 cout << ""0\n"";||| 22 else if (temp % 2 != 0)||| 23 cout << ""1\n"";||| 24 else||| 25 cout << ""2\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 int t;||| 33 cin >> t;||| 34 while (t--) solve();||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e6 + 5;||| 4 long long dp[N];||| 5 void solve() {||| 6 int n, q;||| 7 cin >> n >> q;||| 8 for (int i = 1; i <= n; i++) {||| 9 char c;||| 10 cin >> c;||| 11 int val = 1;||| 12 if (c == '-') val *= -1;||| 13 if (i % 2 == 0) val *= -1;||| 14 dp[i] = dp[i - 1] + val;||| 15 }||| 16 while (q--) {||| 17 int l, r;||| 18 cin >> l >> r;||| 19 long long temp = dp[r] - dp[l - 1];||| 20 if (temp == 0)||| 21 cout << ""0\n"";||| 22 else if (temp % 2 == 1)||| 23 cout << ""1\n"";||| 24 else||| 25 cout << ""2\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(0);||| 30 cin.tie(0);||| 31 cout.tie(0);||| 32 int t;||| 33 cin >> t;||| 34 while (t--) solve();||| 35 }||| "	22 else if (temp % 2 != 0)
81	149	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 map<char, int> mp;||| 4 void solve() {||| 5 int n, q;||| 6 cin >> n >> q;||| 7 string s;||| 8 cin >> s;||| 9 vector<int> sum(n + 1, 0);||| 10 for (int i = 1; i <= n; i++) {||| 11 if (i % 2 == 1) {||| 12 sum[i] = sum[i - 1] + mp[s[i - 1]];||| 13 } else {||| 14 sum[i] = sum[i - 1] - mp[s[i - 1]];||| 15 }||| 16 }||| 17 for (int i = 0; i < q; i++) {||| 18 int l, r;||| 19 cin >> l >> r;||| 20 if (sum[r] - sum[l - 1] == 0)||| 21 cout << 0 << ""\n"";||| 22 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)||| 23 cout << 1 << ""\n"";||| 24 else||| 25 cout << 2 << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(NULL);||| 31 cout.tie(NULL);||| 32 mp['+'] = 1;||| 33 mp['-'] = -1;||| 34 int tc;||| 35 cin >> tc;||| 36 while (tc-- > 0) solve();||| 37 return 0;||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 map<char, int> mp;||| 4 void solve() {||| 5 int n, q;||| 6 cin >> n >> q;||| 7 string s;||| 8 cin >> s;||| 9 vector<int> sum(n + 1, 0);||| 10 for (int i = 1; i <= n; i++) {||| 11 if (i % 2 == 1) {||| 12 sum[i] = sum[i - 1] + mp[s[i - 1]];||| 13 } else {||| 14 sum[i] = sum[i - 1] - mp[s[i - 1]];||| 15 }||| 16 }||| 17 for (int i = 0; i < q; i++) {||| 18 int l, r;||| 19 cin >> l >> r;||| 20 if (sum[r] - sum[l - 1] == 0)||| 21 cout << 0 << ""\n"";||| 22 else if ((sum[r] - sum[l - 1]) % 2 == 1)||| 23 cout << 1 << ""\n"";||| 24 else||| 25 cout << 2 << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(NULL);||| 31 cout.tie(NULL);||| 32 mp['+'] = 1;||| 33 mp['-'] = -1;||| 34 int tc;||| 35 cin >> tc;||| 36 while (tc-- > 0) solve();||| 37 return 0;||| 38 }||| "	22 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)
81	123	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 std::mt19937 rnd(||| 4 (int)std::chrono::steady_clock::now().time_since_epoch().count());||| 5 long long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }||| 6 const int MAXN = 300000;||| 7 const int MAXQ = 300000;||| 8 int n, nq;||| 9 char s[MAXN + 1];||| 10 int ql[MAXQ], qr[MAXQ];||| 11 vector<int> qans[MAXQ];||| 12 int sum[MAXN + 1];||| 13 void solve() {||| 14 sum[0] = 0;||| 15 for (int i = (0); i < (n); ++i)||| 16 sum[i + 1] = sum[i] + (i % 2 == 0 ? +1 : -1) * (s[i] == '+' ? +1 : -1);||| 17 int lo = 0, hi = 0;||| 18 for (int i = (0); i <= (n); ++i) lo = min(lo, sum[i]), hi = max(hi, sum[i]);||| 19 vector<vector<int>> pos(hi - lo + 1);||| 20 for (int i = (0); i <= (n); ++i) pos[sum[i] - lo].push_back(i);||| 21 for (int i = (0); i < (nq); ++i) {||| 22 int l = ql[i], r = qr[i];||| 23 int len = r - l + 1;||| 24 int diff = sum[r + 1] - sum[l];||| 25 if (diff == 0) {||| 26 qans[i] = vector<int>(0);||| 27 continue;||| 28 }||| 29 qans[i] = vector<int>(len % 2 == 0 ? 2 : 1, -1);||| 30 }||| 31 }||| 32 void run() {||| 33 scanf(""%d%d"", &n, &nq);||| 34 scanf(""%s"", s);||| 35 for (int i = (0); i < (nq); ++i)||| 36 scanf(""%d%d"", &ql[i], &qr[i]), --ql[i], --qr[i];||| 37 solve();||| 38 for (int i = (0); i < (nq); ++i) {||| 39 printf(""%d\n"", ((int)(qans[i]).size()));||| 40 }||| 41 }||| 42 int main() {||| 43 int ncase;||| 44 scanf(""%d"", &ncase);||| 45 for (int i = (1); i <= (ncase); ++i) run();||| 46 return 0;||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 std::mt19937 rnd(||| 4 (int)std::chrono::steady_clock::now().time_since_epoch().count());||| 5 long long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }||| 6 const int MAXN = 300000;||| 7 const int MAXQ = 300000;||| 8 int n, nq;||| 9 char s[MAXN + 1];||| 10 int ql[MAXQ], qr[MAXQ];||| 11 vector<int> qans[MAXQ];||| 12 int sum[MAXN + 1];||| 13 void solve() {||| 14 sum[0] = 0;||| 15 for (int i = (0); i < (n); ++i)||| 16 sum[i + 1] = sum[i] + (i % 2 == 0 ? +1 : -1) * (s[i] == '+' ? +1 : -1);||| 17 int lo = 0, hi = 0;||| 18 for (int i = (0); i <= (n); ++i) lo = min(lo, sum[i]), hi = max(hi, sum[i]);||| 19 vector<vector<int>> pos(hi - lo + 1);||| 20 for (int i = (0); i <= (n); ++i) pos[sum[i] - lo].push_back(i);||| 21 for (int i = (0); i < (nq); ++i) {||| 22 int l = ql[i], r = qr[i];||| 23 int len = r - l + 1;||| 24 int diff = sum[r + 1] - sum[l];||| 25 if (diff == 0) {||| 26 qans[i] = vector<int>(0);||| 27 return;||| 28 }||| 29 qans[i] = vector<int>(len % 2 == 0 ? 2 : 1, -1);||| 30 }||| 31 }||| 32 void run() {||| 33 scanf(""%d%d"", &n, &nq);||| 34 scanf(""%s"", s);||| 35 for (int i = (0); i < (nq); ++i)||| 36 scanf(""%d%d"", &ql[i], &qr[i]), --ql[i], --qr[i];||| 37 solve();||| 38 for (int i = (0); i < (nq); ++i) {||| 39 printf(""%d\n"", ((int)(qans[i]).size()));||| 40 }||| 41 }||| 42 int main() {||| 43 int ncase;||| 44 scanf(""%d"", &ncase);||| 45 for (int i = (1); i <= (ncase); ++i) run();||| 46 return 0;||| 47 }||| "	27 continue;
81	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err() { cerr << ""\n""; }||| 4 template <class T, class... Ts>||| 5 void err(const T& arg, const Ts&... args) {||| 6 cerr << arg << ' ';||| 7 err(args...);||| 8 }||| 9 inline int rd() {||| 10 int f = 0;||| 11 int x = 0;||| 12 char ch = getchar();||| 13 for (; !isdigit(ch); ch = getchar()) f |= (ch == '-');||| 14 for (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + ch - '0';||| 15 if (f) x = -x;||| 16 return x;||| 17 }||| 18 const int inf = 0x3f3f3f3f;||| 19 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 20 char s[300007];||| 21 int pre[300007][2][2], tmp[2][2];||| 22 int get(int i) {||| 23 if (s[i] == '+') return 1;||| 24 return 0;||| 25 }||| 26 void solve() {||| 27 int n = rd(), q = rd();||| 28 scanf(""%s"", s + 1);||| 29 for (int i = 1; i <= n; ++i) {||| 30 for (int j = 0; j < 2; ++j) {||| 31 for (int k = 0; k < 2; ++k) {||| 32 if ((i & 1) == k && get(i) == j)||| 33 pre[i][j][k] = 1;||| 34 else||| 35 pre[i][j][k] = 0;||| 36 pre[i][j][k] += pre[i - 1][j][k];||| 37 }||| 38 }||| 39 }||| 40 while (q--) {||| 41 int l = rd(), r = rd();||| 42 for (int j = 0; j < 2; ++j) {||| 43 for (int k = 0; k < 2; ++k) {||| 44 tmp[j][k] = pre[r][j][k] - pre[l - 1][j][k];||| 45 }||| 46 }||| 47 if (l % 2 == 0) {||| 48 swap(tmp[0][0], tmp[0][1]);||| 49 swap(tmp[1][0], tmp[1][1]);||| 50 }||| 51 if (tmp[0][0] == tmp[0][1] && tmp[1][0] == tmp[1][1]) {||| 52 puts(""0"");||| 53 } else {||| 54 int sum0 = tmp[0][0] + tmp[0][1], sum1 = tmp[1][0] + tmp[1][1];||| 55 if (sum0 % 2 == 0 && sum1 % 2 == 0) {||| 56 puts(""2"");||| 57 } else {||| 58 printf(""%d\n"", (sum0 & 1) + (sum1 & 1));||| 59 }||| 60 }||| 61 }||| 62 }||| 63 int main() {||| 64 int t = 1;||| 65 t = rd();||| 66 while (t--) solve();||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void err() { cerr << ""\n""; }||| 4 template <class T, class... Ts>||| 5 void err(const T& arg, const Ts&... args) {||| 6 cerr << arg << ' ';||| 7 err(args...);||| 8 }||| 9 inline int rd() {||| 10 int f = 0;||| 11 int x = 0;||| 12 char ch = getchar();||| 13 for (; !isdigit(ch); ch = getchar()) f |= (ch == '-');||| 14 for (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + ch - '0';||| 15 if (f) x = -x;||| 16 return x;||| 17 }||| 18 const int inf = 0x3f3f3f3f;||| 19 const long long INF = 0x3f3f3f3f3f3f3f3f;||| 20 char s[300007];||| 21 int pre[300007][2][2], tmp[2][2];||| 22 int get(int i) {||| 23 if (s[i] == '+') return 1;||| 24 return 0;||| 25 }||| 26 void solve() {||| 27 int n = rd(), q = rd();||| 28 scanf(""%s"", s + 1);||| 29 for (int i = 1; i <= n; ++i) {||| 30 for (int j = 0; j < 2; ++j) {||| 31 for (int k = 0; k < 2; ++k) {||| 32 if ((i & 1) == j && get(i) == k)||| 33 pre[i][j][k] = 1;||| 34 else||| 35 pre[i][j][k] = 0;||| 36 pre[i][j][k] += pre[i - 1][j][k];||| 37 }||| 38 }||| 39 }||| 40 while (q--) {||| 41 int l = rd(), r = rd();||| 42 for (int j = 0; j < 2; ++j) {||| 43 for (int k = 0; k < 2; ++k) {||| 44 tmp[j][k] = pre[r][j][k] - pre[l - 1][j][k];||| 45 }||| 46 }||| 47 if (l % 2 == 0) {||| 48 swap(tmp[0][0], tmp[0][1]);||| 49 swap(tmp[1][0], tmp[1][1]);||| 50 }||| 51 if (tmp[0][0] == tmp[0][1] && tmp[1][0] == tmp[1][1]) {||| 52 puts(""0"");||| 53 } else {||| 54 int sum0 = tmp[0][0] + tmp[0][1], sum1 = tmp[1][0] + tmp[1][1];||| 55 if (sum0 % 2 == 0 && sum1 % 2 == 0) {||| 56 puts(""2"");||| 57 } else {||| 58 printf(""%d\n"", (sum0 & 1) + (sum1 & 1));||| 59 }||| 60 }||| 61 }||| 62 }||| 63 int main() {||| 64 int t = 1;||| 65 t = rd();||| 66 while (t--) solve();||| 67 return 0;||| 68 }||| "	32 if ((i & 1) == k && get(i) == j)
81	117	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void TEST_CASE() {||| 4 long long n, q;||| 5 cin >> n >> q;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> nor(n, 0), abnor(n, 0);||| 9 for (long long i = 0; i < n; i++) {||| 10 if (i % 2 == 0) {||| 11 if (s[i] == '+') {||| 12 nor[i] = 1;||| 13 abnor[i] = -1;||| 14 } else {||| 15 nor[i] = -1;||| 16 abnor[i] = 1;||| 17 }||| 18 } else {||| 19 if (s[i] == '+') {||| 20 nor[i] = -1;||| 21 abnor[i] = 1;||| 22 } else {||| 23 nor[i] = 1;||| 24 abnor[i] = -1;||| 25 }||| 26 }||| 27 }||| 28 vector<long long> f1(n, 0), f2(n, 0);||| 29 f1[0] = nor[0];||| 30 f2[0] = abnor[0];||| 31 for (long long i = 1; i < n; i++) {||| 32 f1[i] += f1[i - 1] + nor[i];||| 33 f2[i] += f2[i - 1] + abnor[i];||| 34 }||| 35 for (long long i = 0; i < q; i++) {||| 36 long long l, r;||| 37 cin >> l >> r;||| 38 l--;||| 39 r--;||| 40 if (l % 2 == 0) {||| 41 long long tot = f1[r];||| 42 if (l > 0) {||| 43 tot -= f1[l - 1];||| 44 }||| 45 if (tot == 0) {||| 46 cout << 0 << ""\n"";||| 47 } else if ((r - l + 1) % 2) {||| 48 cout << 1 << ""\n"";||| 49 } else {||| 50 cout << 2 << ""\n"";||| 51 }||| 52 } else {||| 53 long long tot = f2[r];||| 54 if (l > 0) {||| 55 tot -= f2[l - 1];||| 56 }||| 57 if (tot == 0) {||| 58 cout << 0 << ""\n"";||| 59 } else if ((r - l + 1) % 2) {||| 60 cout << 1 << ""\n"";||| 61 } else {||| 62 cout << 2 << ""\n"";||| 63 }||| 64 }||| 65 }||| 66 }||| 67 signed main() {||| 68 ios_base::sync_with_stdio(false);||| 69 cin.tie(0);||| 70 cout.tie(0);||| 71 long long t = 1;||| 72 cin >> t;||| 73 while (t--) {||| 74 TEST_CASE();||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void TEST_CASE() {||| 4 long long n, q;||| 5 cin >> n >> q;||| 6 string s;||| 7 cin >> s;||| 8 vector<long long> nor(n, 0), abnor(n, 0);||| 9 for (long long i = 0; i < n; i++) {||| 10 if (i % 2 == 0) {||| 11 if (s[i] == '+') {||| 12 nor[i] = 1;||| 13 abnor[i] = -1;||| 14 } else {||| 15 nor[i] = -1;||| 16 abnor[i] = 1;||| 17 }||| 18 } else {||| 19 if (s[i] == '+') {||| 20 nor[i] = -1;||| 21 abnor[i] = 1;||| 22 } else {||| 23 nor[i] = 1;||| 24 abnor[i] = -1;||| 25 }||| 26 }||| 27 }||| 28 vector<long long> f1(n, 0), f2(n, 0);||| 29 f1[0] = nor[0];||| 30 f2[0] = abnor[0];||| 31 for (long long i = 1; i < n; i++) {||| 32 f1[i] += f1[i - 1] + nor[i];||| 33 f2[i] += f2[i - 1] + abnor[i];||| 34 }||| 35 for (long long i = 0; i < q; i++) {||| 36 long long l, r;||| 37 cin >> l >> r;||| 38 l--;||| 39 r--;||| 40 if (l % 2 == 0) {||| 41 long long tot = f1[r];||| 42 if (l > 0) {||| 43 tot -= f1[l - 1];||| 44 }||| 45 if (tot == 0) {||| 46 cout << 0 << ""\n"";||| 47 return;||| 48 } else if ((r - l + 1) % 2) {||| 49 cout << 1 << ""\n"";||| 50 } else {||| 51 cout << 2 << ""\n"";||| 52 }||| 53 } else {||| 54 long long tot = f2[r];||| 55 if (l > 0) {||| 56 tot -= f2[l - 1];||| 57 }||| 58 if (tot == 0) {||| 59 cout << 0 << ""\n"";||| 60 } else if ((r - l + 1) % 2) {||| 61 cout << 1 << ""\n"";||| 62 } else {||| 63 cout << 2 << ""\n"";||| 64 }||| 65 }||| 66 }||| 67 }||| 68 signed main() {||| 69 ios_base::sync_with_stdio(false);||| 70 cin.tie(0);||| 71 cout.tie(0);||| 72 long long t = 1;||| 73 cin >> t;||| 74 while (t--) {||| 75 TEST_CASE();||| 76 }||| 77 return 0;||| 78 }||| "	47 
81	85	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int pre1[300010], pre2[300010];||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 ;||| 9 int t, n, q, a, b, pre;||| 10 string st;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n >> q >> st;||| 14 pre1[0] = pre2[0] = 0;||| 15 for (int i = 0; i < n; i++)||| 16 pre1[i + 1] =||| 17 pre1[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? 1 : -1);||| 18 for (int i = 0; i < n; i++)||| 19 pre2[i + 1] =||| 20 pre2[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? -1 : 1);||| 21 while (q--) {||| 22 cin >> a >> b;||| 23 a--;||| 24 b--;||| 25 pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre2[a]);||| 26 if (pre == 0)||| 27 cout << ""0\n"";||| 28 else {||| 29 if ((b - a + 1) % 2)||| 30 cout << ""1\n"";||| 31 else||| 32 cout << ""2\n"";||| 33 }||| 34 }||| 35 }||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int pre1[300010], pre2[300010];||| 4 int main() {||| 5 ios_base::sync_with_stdio(0);||| 6 cin.tie(0);||| 7 cout.tie(0);||| 8 ;||| 9 int t, n, q, a, b, pre;||| 10 string st;||| 11 cin >> t;||| 12 while (t--) {||| 13 cin >> n >> q >> st;||| 14 pre1[0] = pre2[0] = 0;||| 15 for (int i = 0; i < n; i++)||| 16 pre1[i + 1] =||| 17 pre1[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? 1 : -1);||| 18 for (int i = 0; i < n; i++)||| 19 pre2[i + 1] =||| 20 pre2[i] + ((st[i] == '+') ? 1 : -1) * ((i % 2 == 0) ? -1 : 1);||| 21 while (q--) {||| 22 cin >> a >> b;||| 23 a--;||| 24 b--;||| 25 pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre1[a]);||| 26 if (pre == 0)||| 27 cout << ""0\n"";||| 28 else {||| 29 if ((b - a + 1) % 2)||| 30 cout << ""1\n"";||| 31 else||| 32 cout << ""2\n"";||| 33 }||| 34 }||| 35 }||| 36 }||| "	25 pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre2[a]);
82	39	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T gcd(T a, T b) {||| 5 return (b == 0 ? a : gcd(b, a % b));||| 6 }||| 7 int gi() {||| 8 int a;||| 9 scanf(""%d"", &a);||| 10 return a;||| 11 }||| 12 long long gli() {||| 13 long long a;||| 14 scanf(""%I64d"", &a);||| 15 return a;||| 16 }||| 17 int cases() {||| 18 static int t = gi();||| 19 return t--;||| 20 }||| 21 char a[300004];||| 22 int s[300004];||| 23 int samesign(int a, int b) {||| 24 return (a < 0 ? (b < 0 ? 1 : 0) : (b > 0 ? 1 : 0));||| 25 }||| 26 int comp(int l, int r) {||| 27 int lsum = -(s[r] - s[l + 1]);||| 28 if (lsum == 0) return l;||| 29 int rsum = s[r - 1] - s[l];||| 30 if (rsum == 0) return r - 1;||| 31 int L = l + 1, R = r - 2;||| 32 while (L < R) {||| 33 int M = (L + R) / 2;||| 34 int sum = s[M] - s[l] - (s[r] - s[M + 1]);||| 35 if (sum == 0) return M;||| 36 if (samesign(sum, lsum)) {||| 37 L = M + 1;||| 38 } else {||| 39 R = M - 1;||| 40 }||| 41 }||| 42 return L;||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 while (cases()) {||| 48 int n = gi();||| 49 int q = gi();||| 50 scanf(""%s"", a);||| 51 s[0] = 0;||| 52 for (int i = 0; i < n; i++)||| 53 s[i + 1] = s[i] + (a[i] == '+' ? 1 : -1) * (i % 2 ? 1 : -1);||| 54 for (int i = 0; i < q; i++) {||| 55 int l = gi() - 1;||| 56 int r = gi();||| 57 if ((r - l) % 2 == 0) {||| 58 if (s[r] - s[l] == 0) {||| 59 printf(""0\n"");||| 60 } else {||| 61 int w = comp(l + 1, r);||| 62 printf(""2\n%d %d\n"", l + 1, w + 1);||| 63 }||| 64 } else {||| 65 int w = comp(l, r);||| 66 printf(""1\n%d\n"", w + 1);||| 67 }||| 68 }||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 T gcd(T a, T b) {||| 5 return (b == 0 ? a : gcd(b, a % b));||| 6 }||| 7 int gi() {||| 8 int a;||| 9 scanf(""%d"", &a);||| 10 return a;||| 11 }||| 12 long long gli() {||| 13 long long a;||| 14 scanf(""%I64d"", &a);||| 15 return a;||| 16 }||| 17 int cases() {||| 18 static int t = gi();||| 19 return t--;||| 20 }||| 21 char a[300004];||| 22 int s[300004];||| 23 int samesign(int a, int b) {||| 24 return (a < 0 ? (b < 0 ? 1 : 0) : (b > 0 ? 1 : 0));||| 25 }||| 26 int comp(int l, int r) {||| 27 int lsum = -(s[r] - s[l - 1]);||| 28 if (lsum == 0) return l;||| 29 int rsum = s[r - 1] - s[l];||| 30 if (rsum == 0) return r - 1;||| 31 int L = l + 1, R = r - 2;||| 32 while (L < R) {||| 33 int M = (L + R) / 2;||| 34 int sum = s[M] - s[l] - (s[r] - s[M + 1]);||| 35 if (sum == 0) return M;||| 36 if (samesign(sum, lsum)) {||| 37 L = M + 1;||| 38 } else {||| 39 R = M - 1;||| 40 }||| 41 }||| 42 return L;||| 43 }||| 44 int main() {||| 45 ios_base::sync_with_stdio(false);||| 46 cin.tie(NULL);||| 47 while (cases()) {||| 48 int n = gi();||| 49 int q = gi();||| 50 scanf(""%s"", a);||| 51 s[0] = 0;||| 52 for (int i = 0; i < n; i++)||| 53 s[i + 1] = s[i] + (a[i] == '+' ? 1 : -1) * (i % 2 ? 1 : -1);||| 54 for (int i = 0; i < q; i++) {||| 55 int l = gi() - 1;||| 56 int r = gi();||| 57 if ((r - l) % 2 == 0) {||| 58 if (s[r] - s[l] == 0) {||| 59 printf(""0\n"");||| 60 } else {||| 61 int w = comp(l + 1, r);||| 62 printf(""2\n%d %d\n"", l + 1, w + 1);||| 63 }||| 64 } else {||| 65 int w = comp(l, r);||| 66 printf(""1\n%d\n"", w + 1);||| 67 }||| 68 }||| 69 }||| 70 return 0;||| 71 }||| "	27 int lsum = -(s[r] - s[l + 1]);
82	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[1000000 + 5], p[1000000 + 5];||| 4 int get_sum(int l, int r) {||| 5 if (l > r) {||| 6 return 0;||| 7 }||| 8 return (l % 2 == 1) ? p[r] - p[l - 1] : p[l - 1] - p[r];||| 9 }||| 10 int check_elimination(int l, int r, int m) {||| 11 return ((m - l + 1) % 2 == 1) ? get_sum(l, m - 1) + get_sum(m + 1, r)||| 12 : get_sum(l, m - 1) - get_sum(m + 1, r);||| 13 }||| 14 int get_sign(int m) { return m > 0 ? 1 : -1; }||| 15 int calculate_odd_segment(int l, int r) {||| 16 if (l == r) {||| 17 return l;||| 18 }||| 19 int pos = 0;||| 20 int lb = l;||| 21 int rb = r;||| 22 while (rb - lb > 1) {||| 23 int mb = (lb + rb) / 2;||| 24 int lq = check_elimination(l, r, lb);||| 25 int mq = check_elimination(l, r, mb);||| 26 int rq = check_elimination(l, r, rb);||| 27 if (lq == 0) {||| 28 pos = lb;||| 29 break;||| 30 }||| 31 if (mq == 0) {||| 32 pos = mb;||| 33 break;||| 34 }||| 35 if (rq == 0) {||| 36 pos = rb;||| 37 break;||| 38 }||| 39 if (lq * 1ll * mq > 0) {||| 40 lb = mb;||| 41 } else {||| 42 rb = mb;||| 43 }||| 44 }||| 45 return pos;||| 46 }||| 47 int main() {||| 48 ios_base::sync_with_stdio(false);||| 49 cin.tie(nullptr);||| 50 int t;||| 51 cin >> t;||| 52 while (t--) {||| 53 int n, q;||| 54 cin >> n >> q;||| 55 string ss;||| 56 cin >> ss;||| 57 for (int i = 1; i <= n; i++) {||| 58 a[i] = (ss[i - 1] == '+' ? 1 : -1);||| 59 }||| 60 p[0] = 0;||| 61 for (int i = 1; i <= n; i++) {||| 62 p[i] = p[i - 1] + (i % 2 == 1 ? a[i] : -a[i]);||| 63 }||| 64 for (int o = 0; o < q; o++) {||| 65 int l, r;||| 66 cin >> l >> r;||| 67 if (get_sum(l, r) == 0) {||| 68 cout << ""0\n"";||| 69 continue;||| 70 }||| 71 bool even = false;||| 72 if ((r - l + 1) % 2 == 0) {||| 73 even = true;||| 74 l++;||| 75 }||| 76 int pos = calculate_odd_segment(l, r);||| 77 if (even) {||| 78 cout << ""2\n"" << l - 1 << "" "" << pos << '\n';||| 79 } else {||| 80 cout << ""1\n"" << pos << '\n';||| 81 }||| 82 }||| 83 }||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[1000000 + 5], p[1000000 + 5];||| 4 int get_sum(int l, int r) {||| 5 if (l > r) {||| 6 return 0;||| 7 }||| 8 return (l % 2 == 1) ? p[r] - p[l - 1] : p[l - 1] - p[r];||| 9 }||| 10 int check_elimination(int l, int r, int m) {||| 11 return ((m - l + 1) % 2 == 1) ? get_sum(l, m - 1) + get_sum(m + 1, r)||| 12 : get_sum(l, m - 1) - get_sum(m + 1, r);||| 13 }||| 14 int get_sign(int m) { return m > 0 ? 1 : -1; }||| 15 int calculate_odd_segment(int l, int r) {||| 16 if (l == r) {||| 17 return l;||| 18 }||| 19 int pos = 0;||| 20 int lb = l;||| 21 int rb = r;||| 22 while (rb - lb > 1) {||| 23 int mb = (lb + rb) / 2;||| 24 int lq = check_elimination(l, r, lb);||| 25 int mq = check_elimination(l, r, mb);||| 26 int rq = check_elimination(l, r, rb);||| 27 if (lq == 0) {||| 28 pos = lb;||| 29 break;||| 30 }||| 31 if (mq == 0) {||| 32 pos = mb;||| 33 break;||| 34 }||| 35 if (rq == 0) {||| 36 pos = rb;||| 37 break;||| 38 }||| 39 if (lq * mq > 0) {||| 40 lb = mb;||| 41 } else {||| 42 rb = mb;||| 43 }||| 44 }||| 45 return pos;||| 46 }||| 47 int main() {||| 48 ios_base::sync_with_stdio(false);||| 49 cin.tie(nullptr);||| 50 int t;||| 51 cin >> t;||| 52 while (t--) {||| 53 int n, q;||| 54 cin >> n >> q;||| 55 string ss;||| 56 cin >> ss;||| 57 for (int i = 1; i <= n; i++) {||| 58 a[i] = (ss[i - 1] == '+' ? 1 : -1);||| 59 }||| 60 p[0] = 0;||| 61 for (int i = 1; i <= n; i++) {||| 62 p[i] = p[i - 1] + (i % 2 == 1 ? a[i] : -a[i]);||| 63 }||| 64 for (int o = 0; o < q; o++) {||| 65 int l, r;||| 66 cin >> l >> r;||| 67 if (get_sum(l, r) == 0) {||| 68 cout << ""0\n"";||| 69 continue;||| 70 }||| 71 bool even = false;||| 72 if ((r - l + 1) % 2 == 0) {||| 73 even = true;||| 74 l++;||| 75 }||| 76 int pos = calculate_odd_segment(l, r);||| 77 if (even) {||| 78 cout << ""2\n"" << l - 1 << "" "" << pos << '\n';||| 79 } else {||| 80 cout << ""1\n"" << pos << '\n';||| 81 }||| 82 }||| 83 }||| 84 }||| "	39 if (lq * 1ll * mq > 0) {
82	58	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5e6;||| 4 int a[N], b[N];||| 5 int qzh[N], hzh[N];||| 6 int n, q;||| 7 vector<int> vec[N];||| 8 inline char readchar() {||| 9 char c = getchar();||| 10 while (c != '+' && c != '-') c = getchar();||| 11 return c;||| 12 }||| 13 int read() {||| 14 int x = 0;||| 15 char c = getchar();||| 16 while (!isdigit(c)) c = getchar();||| 17 while (isdigit(c)) x = x * 10 + c - '0', c = getchar();||| 18 return x;||| 19 }||| 20 void solve() {||| 21 n = read(), q = read();||| 22 for (int i = 1; i <= n; i++) {||| 23 char c = readchar();||| 24 a[i] = (c == '+') ? +1 : -1;||| 25 b[i] = (i % 2 == 0) ? -a[i] : a[i];||| 26 qzh[i] = qzh[i - 1] + b[i];||| 27 }||| 28 hzh[n + 1] = 0;||| 29 for (int i = n; i >= 1; i--) hzh[i] = hzh[i + 1] + b[i];||| 30 for (int i = 1; i <= n; i++)||| 31 vec[qzh[i - 1] - hzh[i + 1] + 2 * n].push_back(i);||| 32 for (int l, r, i = 1; i <= q; i++) {||| 33 l = read(), r = read();||| 34 vector<int> ans;||| 35 if ((r - l + 1) % 2 == 0)||| 36 if (qzh[l - 1] == qzh[r]) {||| 37 printf(""0\n"");||| 38 continue;||| 39 } else {||| 40 ans.push_back(r);||| 41 r--;||| 42 }||| 43 vector<int>& v = vec[qzh[l - 1] - hzh[r + 1] + 2 * n];||| 44 ans.push_back(v[lower_bound(v.begin(), v.end(), l) - v.begin()]);||| 45 printf(""%d\n"", ans.size());||| 46 for (int i = 0; i < ans.size(); i++) printf(""%d "", ans[i]);||| 47 printf(""\n"");||| 48 ans.clear();||| 49 }||| 50 for (int i = 0; i <= 4 * n; i++) vec[i].clear();||| 51 }||| 52 int main() {||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 solve();||| 57 }||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5e6;||| 4 int a[N], b[N];||| 5 int qzh[N], hzh[N];||| 6 int n, q;||| 7 vector<int> vec[N];||| 8 inline char readchar() {||| 9 char c = getchar();||| 10 while (c != '+' && c != '-') c = getchar();||| 11 return c;||| 12 }||| 13 int read() {||| 14 int x = 0;||| 15 char c = getchar();||| 16 while (!isdigit(c)) c = getchar();||| 17 while (isdigit(c)) x = x * 10 + c - '0', c = getchar();||| 18 return x;||| 19 }||| 20 void solve() {||| 21 n = read(), q = read();||| 22 for (int i = 1; i <= n; i++) {||| 23 char c = readchar();||| 24 a[i] = (c == '+') ? +1 : -1;||| 25 b[i] = (i % 2 == 0) ? -a[i] : a[i];||| 26 qzh[i] = qzh[i - 1] + b[i];||| 27 }||| 28 hzh[n + 1] = 0;||| 29 for (int i = n; i >= 1; i--) hzh[i] = hzh[i + 1] + b[i];||| 30 for (int i = 1; i <= n; i++)||| 31 vec[qzh[i - 1] - hzh[i + 1] + 2 * n].push_back(i);||| 32 for (int l, r, i = 1; i <= q; i++) {||| 33 l = read(), r = read();||| 34 vector<int> ans;||| 35 if ((r - l + 1) % 2 == 0)||| 36 if (qzh[l - 1] == qzh[r]) {||| 37 printf(""0"");||| 38 continue;||| 39 } else {||| 40 ans.push_back(r);||| 41 r--;||| 42 }||| 43 vector<int>& v = vec[qzh[l - 1] - hzh[r + 1] + 2 * n];||| 44 ans.push_back(v[lower_bound(v.begin(), v.end(), l) - v.begin()]);||| 45 printf(""%d\n"", ans.size());||| 46 for (int i = 0; i < ans.size(); i++) printf(""%d "", ans[i]);||| 47 printf(""\n"");||| 48 ans.clear();||| 49 }||| 50 for (int i = 0; i <= 4 * n; i++) vec[i].clear();||| 51 }||| 52 int main() {||| 53 int t;||| 54 cin >> t;||| 55 while (t--) {||| 56 solve();||| 57 }||| 58 }||| "	"37 printf(""0\n"");"
82	67	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.1415926535897932384626433;||| 3 const int KL = 1e6;||| 4 const long long MOD = 1e9 + 7;||| 5 using namespace std;||| 6 long long q, x, y, z, n, m, a[KL], mn = 1e9, mx = -1e9, ans;||| 7 string t;||| 8 long long fr[2][KL], pr[KL];||| 9 set<int> vv[KL], uu[KL];||| 10 int main() {||| 11 long long T;||| 12 scanf(""%lld"", &T);||| 13 while (T--) {||| 14 scanf(""%lld"", &n);||| 15 scanf(""%lld"", &q);||| 16 cin >> t;||| 17 for (int i = 0; i <= n; i++) vv[i].clear(), uu[i].clear();||| 18 for (int i = 0; i < n; i++) {||| 19 if ((i + 1) % 2 == 1) {||| 20 if (t[i] == '+')||| 21 t[i] = '-';||| 22 else||| 23 t[i] = '+';||| 24 }||| 25 }||| 26 for (int i = 1; i <= n; i++) {||| 27 if (t[i - 1] == '-') {||| 28 pr[i] = -1 + pr[i - 1];||| 29 } else {||| 30 pr[i] = 1 + pr[i - 1];||| 31 }||| 32 if (pr[i] >= 0) {||| 33 vv[pr[i]].insert(i);||| 34 } else {||| 35 uu[abs(pr[i])].insert(i);||| 36 }||| 37 }||| 38 while (q--) {||| 39 scanf(""%lld"", &x);||| 40 scanf(""%lld"", &y);||| 41 long long ret = pr[y] - pr[x - 1];||| 42 if (ret == 0) {||| 43 printf(""0\n"");||| 44 continue;||| 45 }||| 46 vector<long long> vec;||| 47 if (ret % 2 == 0) {||| 48 vec.push_back(x);||| 49 x++;||| 50 }||| 51 ret = pr[y] - pr[x - 1];||| 52 if (ret < 0)||| 53 ret--;||| 54 else||| 55 ret++;||| 56 long long v = ret / 2;||| 57 auto it = vv[0].begin();||| 58 if (v + pr[x - 1] >= 0) {||| 59 it = vv[v + pr[x - 1]].lower_bound(x);||| 60 } else {||| 61 it = uu[abs(v + pr[x - 1])].lower_bound(x);||| 62 }||| 63 vec.push_back(*it);||| 64 printf(""%d\n"", (int)vec.size());||| 65 sort(vec.begin(), vec.end());||| 66 for (int i = 0; i < vec.size(); i++) {||| 67 printf(""%lld "", vec[i]);||| 68 }||| 69 printf(""\n"");||| 70 }||| 71 }||| 72 return 0;||| 73 }||| "	"1 #include <bits/stdc++.h>||| 2 const double PI = 3.1415926535897932384626433;||| 3 const int KL = 1e6;||| 4 const long long MOD = 1e9 + 7;||| 5 using namespace std;||| 6 long long q, x, y, z, n, m, a[KL], mn = 1e9, mx = -1e9, ans;||| 7 string t;||| 8 long long fr[2][KL], pr[KL];||| 9 set<int> vv[KL], uu[KL];||| 10 int main() {||| 11 long long T;||| 12 scanf(""%lld"", &T);||| 13 while (T--) {||| 14 scanf(""%lld"", &n);||| 15 scanf(""%lld"", &q);||| 16 cin >> t;||| 17 for (int i = 0; i <= n; i++) vv[i].clear(), uu[i].clear();||| 18 for (int i = 0; i < n; i++) {||| 19 if ((i + 1) % 2 == 1) {||| 20 if (t[i] == '+')||| 21 t[i] = '-';||| 22 else||| 23 t[i] = '+';||| 24 }||| 25 }||| 26 for (int i = 1; i <= n; i++) {||| 27 if (t[i - 1] == '-') {||| 28 pr[i] = -1 + pr[i - 1];||| 29 } else {||| 30 pr[i] = 1 + pr[i - 1];||| 31 }||| 32 if (pr[i] >= 0) {||| 33 vv[pr[i]].insert(i);||| 34 } else {||| 35 uu[abs(pr[i])].insert(i);||| 36 }||| 37 }||| 38 while (q--) {||| 39 scanf(""%lld"", &x);||| 40 scanf(""%lld"", &y);||| 41 long long ret = pr[y] - pr[x - 1];||| 42 if (ret == 0) {||| 43 printf(""0\n"");||| 44 continue;||| 45 }||| 46 vector<long long> vec;||| 47 if (ret % 2 == 0) {||| 48 vec.push_back(x);||| 49 x++;||| 50 }||| 51 ret = pr[y] - pr[x - 1];||| 52 if (ret < 0)||| 53 ret--;||| 54 else||| 55 ret++;||| 56 long long v = ret / 2;||| 57 auto it = vv[0].begin();||| 58 if (v + pr[x - 1] >= 0) {||| 59 it = vv[v + pr[x - 1]].lower_bound(x);||| 60 } else {||| 61 it = uu[abs(v + pr[x - 1])].lower_bound(x);||| 62 }||| 63 vec.push_back(*it);||| 64 printf(""%d\n"", (int)vec.size());||| 65 sort(vec.begin(), vec.end());||| 66 for (int i = 0; i < vec.size(); i++) {||| 67 printf(""%d "", vec[i]);||| 68 }||| 69 printf(""%d\n"");||| 70 }||| 71 }||| 72 return 0;||| 73 }||| "	"67 printf(""%lld "", vec[i]);"
83	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int const N = 10010;||| 4 using namespace std;||| 5 int arr[3][10010], cnt[10010], mc[256], h[10010], *sa, *ta, *r, *tr, sz;||| 6 void sa_init(char *str, int len) {||| 7 sa = arr[0], ta = arr[1], r = arr[2], sz = 0;||| 8 for (int i = 0; i < len; i++) ta[i] = str[i];||| 9 sort(ta, ta + len);||| 10 for (int i = 1; i <= len; i++) {||| 11 if (ta[i] != ta[i - 1] || i == len) cnt[mc[ta[i - 1]] = sz++] = i;||| 12 }||| 13 for (int i = len - 1; i >= 0; i--) sa[--cnt[r[i] = mc[str[i]]]] = i;||| 14 for (int k = 1; k < len && r[sa[len - 1]] < len - 1; k <<= 1) {||| 15 for (int i = 0; i < len; i++) cnt[r[sa[i]]] = i + 1;||| 16 for (int i = len - 1; i >= 0; i--) {||| 17 if (sa[i] >= k) ta[--cnt[r[sa[i] - k]]] = sa[i] - k;||| 18 }||| 19 for (int i = len - k; i < len; i++) ta[--cnt[r[i]]] = i;||| 20 tr = sa, sa = ta, tr[sa[0]] = 0;||| 21 for (int i = 1; i < len; i++) {||| 22 tr[sa[i]] =||| 23 tr[sa[i - 1]] + (r[sa[i]] != r[sa[i - 1]] || sa[i - 1] + k >= len ||||| 24 r[sa[i] + k] != r[sa[i - 1] + k]);||| 25 }||| 26 ta = r, r = tr;||| 27 }||| 28 }||| 29 void h_init(char *str, int len) {||| 30 for (int i = 0, d = 0, j; i < len; i++) {||| 31 if (str[i] == '#' || r[i] == len - 1)||| 32 h[r[i]] = d = 0;||| 33 else {||| 34 if (d) d--;||| 35 j = sa[r[i] + 1];||| 36 while (str[i + d] != '#' && str[j + d] != '#' && str[i + d] == str[j + d])||| 37 d++;||| 38 h[r[i]] = d;||| 39 }||| 40 }||| 41 }||| 42 char str[10010];||| 43 int f[N];||| 44 int main() {||| 45 int T;||| 46 scanf(""%d"", &T);||| 47 while (T--) {||| 48 int n;||| 49 scanf(""%d"", &n);||| 50 scanf("" %s"", str);||| 51 sa_init(str, n);||| 52 h_init(str, n);||| 53 memset(f, (0), sizeof f);||| 54 for (int i = 0; i < (n); ++i) {||| 55 int t = sa[i], w = n - t;||| 56 int th = 0x3f3f3f3f;||| 57 int mx = w;||| 58 for (int j = i - 1; j >= 0; --j) {||| 59 th = min(th, h[j]);||| 60 if (sa[j] < sa[i]) {||| 61 mx = max(mx, w - th + f[j]);||| 62 }||| 63 }||| 64 f[i] = mx;||| 65 }||| 66 int ans = 0;||| 67 for (int i = 0; i < (n); ++i) ans = max(ans, f[i]);||| 68 printf(""%d\n"", ans);||| 69 }||| 70 return 0;||| 71 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int const N = 10010;||| 4 using namespace std;||| 5 int arr[3][10010], cnt[10010], mc[256], h[10010], *sa, *ta, *r, *tr, sz;||| 6 void sa_init(char *str, int len) {||| 7 sa = arr[0], ta = arr[1], r = arr[2], sz = 0;||| 8 for (int i = 0; i < len; i++) ta[i] = str[i];||| 9 sort(ta, ta + len);||| 10 for (int i = 1; i <= len; i++) {||| 11 if (ta[i] != ta[i - 1] || i == len) cnt[mc[ta[i - 1]] = sz++] = i;||| 12 }||| 13 for (int i = len - 1; i >= 0; i--) sa[--cnt[r[i] = mc[str[i]]]] = i;||| 14 for (int k = 1; k < len && r[sa[len - 1]] < len - 1; k <<= 1) {||| 15 for (int i = 0; i < len; i++) cnt[r[sa[i]]] = i + 1;||| 16 for (int i = len - 1; i >= 0; i--) {||| 17 if (sa[i] >= k) ta[--cnt[r[sa[i] - k]]] = sa[i] - k;||| 18 }||| 19 for (int i = len - k; i < len; i++) ta[--cnt[r[i]]] = i;||| 20 tr = sa, sa = ta, tr[sa[0]] = 0;||| 21 for (int i = 1; i < len; i++) {||| 22 tr[sa[i]] =||| 23 tr[sa[i - 1]] + (r[sa[i]] != r[sa[i - 1]] || sa[i - 1] + k >= len ||||| 24 r[sa[i] + k] != r[sa[i - 1] + k]);||| 25 }||| 26 ta = r, r = tr;||| 27 }||| 28 }||| 29 void h_init(char *str, int len) {||| 30 for (int i = 0, d = 0, j; i < len; i++) {||| 31 if (str[i] == '#' || r[i] == len - 1)||| 32 h[r[i]] = d = 0;||| 33 else {||| 34 if (d) d--;||| 35 j = sa[r[i] + 1];||| 36 while (str[i + d] != '#' && str[j + d] != '#' && str[i + d] == str[j + d])||| 37 d++;||| 38 h[r[i]] = d;||| 39 }||| 40 }||| 41 }||| 42 char str[10010];||| 43 int f[N];||| 44 int main() {||| 45 int T;||| 46 scanf(""%d"", &T);||| 47 while (T--) {||| 48 int n;||| 49 scanf(""%d"", &n);||| 50 scanf("" %s"", str);||| 51 sa_init(str, n);||| 52 h_init(str, n);||| 53 memset(f, (0), sizeof f);||| 54 for (int i = 0; i < (n); ++i) {||| 55 int t = sa[i], w = n - t;||| 56 int th = 0x3f3f3f3f;||| 57 int mx = w;||| 58 for (int j = i - 1; j >= 0; --j) {||| 59 th = min(th, h[j]);||| 60 if (sa[j] < sa[i]) {||| 61 mx = max(mx, w - th + f[j]);||| 62 }||| 63 }||| 64 f[i] = mx;||| 65 }||| 66 int ans = 0;||| 67 for (int i = 0; i < (n); ++i) ans = max(ans, f[i]);||| 68 printf(""%lld\n"", ans);||| 69 }||| 70 return 0;||| 71 }||| "	"68 printf(""%d\n"", ans);"
83	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 char s[N];||| 5 int n, f[N], ans, a[N];||| 6 unsigned int bas2[N], bas[N], base, base2, ha[N], Ha[N];||| 7 inline void init() {||| 8 scanf(""%d"", &n);||| 9 base = 31;||| 10 base2 = 79;||| 11 scanf(""%s"", s + 1);||| 12 for (int i = 1; i <= n; i++) a[i] = s[i] - 'a';||| 13 bas[0] = 1;||| 14 bas2[0] = 1;||| 15 for (int i = 1; i <= n; i++)||| 16 bas[i] = bas[i - 1] * base, bas2[i] = bas2[i - 1] * base2;||| 17 for (int i = 1; i <= n; i++)||| 18 ha[i] = ha[i - 1] * base + a[i], Ha[i] = Ha[i - 1] * base2 + a[i];||| 19 }||| 20 inline int judge(int x, int y) {||| 21 if (a[x] > a[y]) return 1;||| 22 if (a[x] < a[y]) return 0;||| 23 int l = 1, r = n - x + 1;||| 24 while (l < r) {||| 25 int mid = (l + r + 1) >> 1;||| 26 unsigned int ha1, ha2, ha3, ha4;||| 27 ha1 = ha[x + mid - 1] - ha[x - 1] * bas[mid];||| 28 ha2 = ha[y + mid - 1] - ha[y - 1] * bas[mid];||| 29 ha3 = Ha[x + mid - 1] - Ha[x - 1] * bas2[mid];||| 30 ha4 = Ha[y + mid - 1] - Ha[y - 1] * bas2[mid];||| 31 if (ha1 == ha2 && ha3 == ha4)||| 32 l = mid;||| 33 else||| 34 r = mid - 1;||| 35 }||| 36 if (r == n - x + 1) {||| 37 return 0;||| 38 } else {||| 39 if (a[x + l] > a[y + l])||| 40 return l;||| 41 else||| 42 return 0;||| 43 }||| 44 }||| 45 inline void solve() {||| 46 ans = 0;||| 47 for (int i = 1; i <= n; i++) {||| 48 f[i] = n - i + 1;||| 49 for (int j = 1; j < i; j++) {||| 50 int t;||| 51 if (t = judge(i, j)) {||| 52 if (a[i] != a[j]) t--;||| 53 f[i] = max(f[i], f[j] + n - i + 1 - t);||| 54 }||| 55 }||| 56 ans = max(ans, f[i]);||| 57 }||| 58 printf(""%d\n"", ans);||| 59 }||| 60 int main() {||| 61 int T;||| 62 scanf(""%d"", &T);||| 63 while (T--) {||| 64 init();||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5005;||| 4 char s[N];||| 5 int n, f[N], ans, a[N];||| 6 unsigned int bas2[N], bas[N], base, base2, ha[N], Ha[N];||| 7 inline void init() {||| 8 scanf(""%d"", &n);||| 9 base = 31;||| 10 base2 = 79;||| 11 scanf(""%s"", s + 1);||| 12 for (int i = 1; i <= n; i++) a[i] = s[i] - 'a';||| 13 bas[0] = 1;||| 14 bas2[0] = 1;||| 15 for (int i = 1; i <= n; i++)||| 16 bas[i] = bas[i - 1] * base, bas2[i] = bas2[i - 1] * base2;||| 17 for (int i = 1; i <= n; i++)||| 18 ha[i] = ha[i - 1] * base + a[i], Ha[i] = Ha[i - 1] * base2 + a[i];||| 19 }||| 20 inline bool judge(int x, int y) {||| 21 if (a[x] > a[y]) return 1;||| 22 if (a[x] < a[y]) return 0;||| 23 int l = 1, r = n - x + 1;||| 24 while (l < r) {||| 25 int mid = (l + r + 1) >> 1;||| 26 unsigned int ha1, ha2, ha3, ha4;||| 27 ha1 = ha[x + mid - 1] - ha[x - 1] * bas[mid];||| 28 ha2 = ha[y + mid - 1] - ha[y - 1] * bas[mid];||| 29 ha3 = Ha[x + mid - 1] - Ha[x - 1] * bas2[mid];||| 30 ha4 = Ha[y + mid - 1] - Ha[y - 1] * bas2[mid];||| 31 if (ha1 == ha2 && ha3 == ha4)||| 32 l = mid;||| 33 else||| 34 r = mid - 1;||| 35 }||| 36 if (r == n - x + 1) {||| 37 return 0;||| 38 } else {||| 39 if (a[x + l] > a[y + l])||| 40 return l;||| 41 else||| 42 return 0;||| 43 }||| 44 }||| 45 inline void solve() {||| 46 ans = 0;||| 47 for (int i = 1; i <= n; i++) {||| 48 f[i] = n - i + 1;||| 49 for (int j = 1; j < i; j++) {||| 50 int t;||| 51 if (t = judge(i, j)) {||| 52 if (a[i] != a[j]) t--;||| 53 f[i] = max(f[i], f[j] + n - i + 1 - t);||| 54 }||| 55 }||| 56 ans = max(ans, f[i]);||| 57 }||| 58 printf(""%d\n"", ans);||| 59 }||| 60 int main() {||| 61 int T;||| 62 scanf(""%d"", &T);||| 63 while (T--) {||| 64 init();||| 65 solve();||| 66 }||| 67 return 0;||| 68 }||| "	20 inline int judge(int x, int y) {
83	102	"1 #include <bits/stdc++.h>||| 2 inline char gc() {||| 3 static const int L = 233333;||| 4 static char sxd[L], *sss = sxd, *ttt = sxd;||| 5 if (sss == ttt) {||| 6 ttt = (sss = sxd) + fread(sxd, 1, L, stdin);||| 7 if (sss == ttt) {||| 8 return EOF;||| 9 }||| 10 }||| 11 return *sss++;||| 12 }||| 13 template <class T>||| 14 inline bool read(T& x) {||| 15 x = 0;||| 16 char c = gc();||| 17 bool flg = false;||| 18 for (; !isdigit(c); c = gc()) {||| 19 if (c == '-') {||| 20 flg = true;||| 21 } else if (c == EOF) {||| 22 return false;||| 23 }||| 24 }||| 25 for (; isdigit(c); c = gc()) {||| 26 x = (x * 10) + (c ^ 48);||| 27 }||| 28 if (flg) {||| 29 x = -x;||| 30 }||| 31 return true;||| 32 }||| 33 template <class T>||| 34 inline void write(T x) {||| 35 if (x < 0) {||| 36 x = -x;||| 37 putchar('-');||| 38 }||| 39 if (x > 9) {||| 40 write(x / 10);||| 41 x %= 10;||| 42 }||| 43 putchar(x | 48);||| 44 }||| 45 template <class T>||| 46 inline void writeln(T x) {||| 47 write(x);||| 48 puts("""");||| 49 }||| 50 template <class T>||| 51 inline void writesp(T x) {||| 52 write(x);||| 53 putchar(' ');||| 54 }||| 55 std::vector<int> Z_function(std::string s) {||| 56 int n = s.length();||| 57 std::vector<int> z(n);||| 58 z[0] = n;||| 59 for (int i = 1, l = 0, r = 0; i < n; ++i) {||| 60 if (i <= r && z[i - l] < r - i + 1) {||| 61 z[i] = z[i - l];||| 62 } else {||| 63 z[i] = std::max(0, r - i + 1);||| 64 while (i + z[i] < n && s[z[i]] == s[i + z[i]]) {||| 65 z[i]++;||| 66 }||| 67 }||| 68 if (i + z[i] - 1 > r) {||| 69 l = i, r = i + z[i] - 1;||| 70 }||| 71 }||| 72 return z;||| 73 }||| 74 void solve() {||| 75 int n;||| 76 std::string s;||| 77 std::cin >> n >> s;||| 78 std::vector<int> f(n);||| 79 for (int i = n - 1; ~i; --i) {||| 80 auto z = Z_function(s.substr(i));||| 81 f[i] = n - i;||| 82 for (int j = i + 1; j < n; ++j) {||| 83 int lcp = z[j - i];||| 84 if (j + lcp < n && s[i + lcp] < s[j + lcp]) {||| 85 f[i] = std::max(f[i], f[j] - lcp + n - i);||| 86 }||| 87 }||| 88 }||| 89 std::cout << *std::max_element(f.begin(), f.end()) << std::endl;||| 90 }||| 91 int main() {||| 92 int T;||| 93 std::cin >> T;||| 94 while (T--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 inline char gc() {||| 3 static const int L = 233333;||| 4 static char sxd[L], *sss = sxd, *ttt = sxd;||| 5 if (sss == ttt) {||| 6 ttt = (sss = sxd) + fread(sxd, 1, L, stdin);||| 7 if (sss == ttt) {||| 8 return EOF;||| 9 }||| 10 }||| 11 return *sss++;||| 12 }||| 13 template <class T>||| 14 inline bool read(T& x) {||| 15 x = 0;||| 16 char c = gc();||| 17 bool flg = false;||| 18 for (; !isdigit(c); c = gc()) {||| 19 if (c == '-') {||| 20 flg = true;||| 21 } else if (c == EOF) {||| 22 return false;||| 23 }||| 24 }||| 25 for (; isdigit(c); c = gc()) {||| 26 x = (x * 10) + (c ^ 48);||| 27 }||| 28 if (flg) {||| 29 x = -x;||| 30 }||| 31 return true;||| 32 }||| 33 template <class T>||| 34 inline void write(T x) {||| 35 if (x < 0) {||| 36 x = -x;||| 37 putchar('-');||| 38 }||| 39 if (x > 9) {||| 40 write(x / 10);||| 41 x %= 10;||| 42 }||| 43 putchar(x | 48);||| 44 }||| 45 template <class T>||| 46 inline void writeln(T x) {||| 47 write(x);||| 48 puts("""");||| 49 }||| 50 template <class T>||| 51 inline void writesp(T x) {||| 52 write(x);||| 53 putchar(' ');||| 54 }||| 55 std::vector<int> Z_function(std::string s) {||| 56 int n = s.length();||| 57 std::vector<int> z(n);||| 58 z[0] = n;||| 59 for (int i = 1, l = 0, r = 0; i < n; ++i) {||| 60 if (i <= r && z[i - l] < r - i + 1) {||| 61 z[i] = z[i - 1];||| 62 } else {||| 63 z[i] = std::max(0, r - i + 1);||| 64 while (i + z[i] < n && s[z[i]] == s[i + z[i]]) {||| 65 z[i]++;||| 66 }||| 67 }||| 68 if (i + z[i] - 1 > r) {||| 69 l = i, r = i + z[i] - 1;||| 70 }||| 71 }||| 72 return z;||| 73 }||| 74 void solve() {||| 75 int n;||| 76 std::string s;||| 77 std::cin >> n >> s;||| 78 std::vector<int> f(n);||| 79 for (int i = n - 1; ~i; --i) {||| 80 auto z = Z_function(s.substr(i));||| 81 f[i] = n - i;||| 82 for (int j = i + 1; j < n; ++j) {||| 83 int lcp = z[j - i];||| 84 if (j + lcp < n && s[i + lcp] < s[j + lcp]) {||| 85 f[i] = std::max(f[i], f[j] - lcp + n - i);||| 86 }||| 87 }||| 88 }||| 89 std::cout << *std::max_element(f.begin(), f.end()) << std::endl;||| 90 }||| 91 int main() {||| 92 int T;||| 93 std::cin >> T;||| 94 while (T--) {||| 95 solve();||| 96 }||| 97 return 0;||| 98 }||| "	61 z[i] = z[i - l];
84	202	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 1; i <= t; i++) {||| 7 int n, s;||| 8 cin >> n >> s;||| 9 if (n == 1)||| 10 cout << s << endl;||| 11 else if (n == 2)||| 12 cout << s / 2 << endl;||| 13 else if (n > 2) {||| 14 if (n % 2 == 0) {||| 15 n = n - (n - 1) / 2;||| 16 cout << s / n << endl;||| 17 } else {||| 18 n = (n + 1) / 2;||| 19 cout << s / n << endl;||| 20 }||| 21 }||| 22 }||| 23 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int i = 1; i <= t; i++) {||| 7 int n, s;||| 8 cin >> n >> s;||| 9 if (n == 1)||| 10 cout << n << endl;||| 11 else if (n == 2)||| 12 cout << s / 2 << endl;||| 13 else if (n > 2) {||| 14 if (n % 2 == 0) {||| 15 n = n - (n - 1) / 2;||| 16 cout << s / n << endl;||| 17 } else {||| 18 n = (n + 1) / 2;||| 19 cout << s / n << endl;||| 20 }||| 21 }||| 22 }||| 23 }||| 	10 cout << s << endl;
85	15	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void googleFormat() {||| 4 static long long tno = 1;||| 5 cout << ""Case #"" << tno++ << "": "";||| 6 }||| 7 void _print(long long t) { cerr << t; }||| 8 void _print(string t) { cerr << t; }||| 9 void _print(char t) { cerr << t; }||| 10 void _print(double t) { cerr << t; }||| 11 void _print(unsigned long long t) { cerr << t; }||| 12 template <typename T1, typename T2>||| 13 istream& operator>>(istream& in, pair<T1, T2>& a) {||| 14 in >> a.fr >> a.sc;||| 15 return in;||| 16 }||| 17 template <typename T1, typename T2>||| 18 ostream& operator<<(ostream& out, pair<T1, T2> a) {||| 19 out << a.fr << "" "" << a.sc;||| 20 return out;||| 21 }||| 22 template <typename T, typename T1>||| 23 T amax(T& a, T1 b) {||| 24 if (b > a) a = b;||| 25 return a;||| 26 }||| 27 template <typename T, typename T1>||| 28 T amin(T& a, T1 b) {||| 29 if (b < a) a = b;||| 30 return a;||| 31 }||| 32 template <class T, class V>||| 33 void _print(pair<T, V> p) {||| 34 cerr << ""{"";||| 35 _print(p.first);||| 36 cerr << "","";||| 37 _print(p.second);||| 38 cerr << ""}"";||| 39 }||| 40 template <class T>||| 41 void _print(vector<T> v) {||| 42 cerr << ""[ "";||| 43 for (T i : v) {||| 44 _print(i);||| 45 cerr << "" "";||| 46 }||| 47 cerr << ""]"";||| 48 }||| 49 template <class T>||| 50 void _print(set<T> v) {||| 51 cerr << ""[ "";||| 52 for (T i : v) {||| 53 _print(i);||| 54 cerr << "" "";||| 55 }||| 56 cerr << ""]"";||| 57 }||| 58 template <class T>||| 59 void _print(multiset<T> v) {||| 60 cerr << ""[ "";||| 61 for (T i : v) {||| 62 _print(i);||| 63 cerr << "" "";||| 64 }||| 65 cerr << ""]"";||| 66 }||| 67 template <class T, class V>||| 68 void _print(map<T, V> v) {||| 69 cerr << ""[ "";||| 70 for (auto i : v) {||| 71 _print(i);||| 72 cerr << "" "";||| 73 }||| 74 cerr << ""]"";||| 75 }||| 76 const long long INF = 1e18;||| 77 const int32_t M = 1e9 + 7;||| 78 const int32_t MM = 998244353;||| 79 const long long N = 5e5 + 5;||| 80 void solve() {||| 81 long long n;||| 82 string s;||| 83 cin >> s;||| 84 n = s.size();||| 85 long long contz = 0;||| 86 for (long long i = 0; i < n; i++) {||| 87 if (s[i] == '0') {||| 88 contz++;||| 89 long long j = i + 1;||| 90 while (j < n and s[j] == '0') {||| 91 j++;||| 92 }||| 93 i = j - 1;||| 94 }||| 95 }||| 96 cout << amin(contz, 2) << '\n';||| 97 }||| 98 signed main() {||| 99 ios_base::sync_with_stdio(0);||| 100 cin.tie(0);||| 101 cout.tie(0);||| 102 long long t = 1;||| 103 cin >> t;||| 104 while (t--) solve();||| 105 return 0;||| 106 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void googleFormat() {||| 4 static long long tno = 1;||| 5 cout << ""Case #"" << tno++ << "": "";||| 6 }||| 7 void _print(long long t) { cerr << t; }||| 8 void _print(string t) { cerr << t; }||| 9 void _print(char t) { cerr << t; }||| 10 void _print(double t) { cerr << t; }||| 11 void _print(unsigned long long t) { cerr << t; }||| 12 template <typename T1, typename T2>||| 13 istream& operator>>(istream& in, pair<T1, T2>& a) {||| 14 in >> a.fr >> a.sc;||| 15 return in;||| 16 }||| 17 template <typename T1, typename T2>||| 18 ostream& operator<<(ostream& out, pair<T1, T2> a) {||| 19 out << a.fr << "" "" << a.sc;||| 20 return out;||| 21 }||| 22 template <typename T, typename T1>||| 23 T amax(T& a, T1 b) {||| 24 if (b > a) a = b;||| 25 return a;||| 26 }||| 27 template <typename T, typename T1>||| 28 T amin(T& a, T1 b) {||| 29 if (b < a) a = b;||| 30 return a;||| 31 }||| 32 template <class T, class V>||| 33 void _print(pair<T, V> p) {||| 34 cerr << ""{"";||| 35 _print(p.first);||| 36 cerr << "","";||| 37 _print(p.second);||| 38 cerr << ""}"";||| 39 }||| 40 template <class T>||| 41 void _print(vector<T> v) {||| 42 cerr << ""[ "";||| 43 for (T i : v) {||| 44 _print(i);||| 45 cerr << "" "";||| 46 }||| 47 cerr << ""]"";||| 48 }||| 49 template <class T>||| 50 void _print(set<T> v) {||| 51 cerr << ""[ "";||| 52 for (T i : v) {||| 53 _print(i);||| 54 cerr << "" "";||| 55 }||| 56 cerr << ""]"";||| 57 }||| 58 template <class T>||| 59 void _print(multiset<T> v) {||| 60 cerr << ""[ "";||| 61 for (T i : v) {||| 62 _print(i);||| 63 cerr << "" "";||| 64 }||| 65 cerr << ""]"";||| 66 }||| 67 template <class T, class V>||| 68 void _print(map<T, V> v) {||| 69 cerr << ""[ "";||| 70 for (auto i : v) {||| 71 _print(i);||| 72 cerr << "" "";||| 73 }||| 74 cerr << ""]"";||| 75 }||| 76 const long long INF = 1e18;||| 77 const int32_t M = 1e9 + 7;||| 78 const int32_t MM = 998244353;||| 79 const long long N = 5e5 + 5;||| 80 void solve() {||| 81 long long n;||| 82 string s;||| 83 cin >> s;||| 84 n = s.size();||| 85 long long contz = 0;||| 86 for (long long i = 0; i < n; i++) {||| 87 if (s[i] == '0') {||| 88 contz++;||| 89 long long j = i + 1;||| 90 while (j < n and s[j] == 0) {||| 91 j++;||| 92 }||| 93 i = j - 1;||| 94 ;||| 95 }||| 96 }||| 97 cout << amin(contz, 2) << '\n';||| 98 }||| 99 signed main() {||| 100 ios_base::sync_with_stdio(0);||| 101 cin.tie(0);||| 102 cout.tie(0);||| 103 long long t = 1;||| 104 cin >> t;||| 105 while (t--) solve();||| 106 return 0;||| 107 }||| "	90 while (j < n and s[j] == '0') {
86	180	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void fastio() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 }||| 11 const int mod = 1000000007;||| 12 const double PI = 3.141592653589793238;||| 13 const long long int INF = 1e18;||| 14 const long long int p = 998244353;||| 15 int main() {||| 16 long long int t = 1;||| 17 cin >> t;||| 18 for (int test = 0; test < t; test++) {||| 19 long long int n;||| 20 cin >> n;||| 21 string s1, s2;||| 22 cin >> s1;||| 23 cin >> s2;||| 24 long long int ans = 0;||| 25 for (int i = 0; i < n; i++) {||| 26 if ((s1[i] == '1' && s2[i] == '0') || (s1[i] == '0' && s2[i] == '1')) {||| 27 ans += 2;||| 28 } else if (s1[i] == '1' && s2[i] == '1') {||| 29 if (i < n - 1) {||| 30 if (s1[i + 1] == '0' || s2[i + 1] == '0') {||| 31 ans += 2;||| 32 i++;||| 33 }||| 34 }||| 35 } else if (s1[i] == '0' && s2[i] == '0') {||| 36 if (s1[i + 1] == '1' && s2[i + 1] == '1') {||| 37 ans += 2;||| 38 i++;||| 39 } else {||| 40 ans += 1;||| 41 }||| 42 }||| 43 }||| 44 cout << ans << ""\n"";||| 45 }||| 46 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"")||| 3 #pragma GCC target(""sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void fastio() {||| 7 ios_base::sync_with_stdio(0);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 }||| 11 const int mod = 1000000007;||| 12 const double PI = 3.141592653589793238;||| 13 const long long int INF = 1e18;||| 14 const long long int p = 998244353;||| 15 int main() {||| 16 long long int t = 1;||| 17 cin >> t;||| 18 for (int test = 0; test < t; test++) {||| 19 long long int n;||| 20 cin >> n;||| 21 string s1, s2;||| 22 cin >> s1;||| 23 cin >> s2;||| 24 long long int ans = 0;||| 25 for (int i = 0; i < n; i++) {||| 26 if ((s1[i] == '1' && s2[i] == '0') || (s1[i] == '0' && s2[i] == '1')) {||| 27 ans += 2;||| 28 } else if (s1[i] == '1' && s2[i] == '1') {||| 29 if (i < n - 1) {||| 30 if (s1[i + 1] == '0' || s2[i + 1] == '0') {||| 31 ans += 2;||| 32 i++;||| 33 }||| 34 }||| 35 } else if (s1[i] == '0' && s2[i] == '0') {||| 36 if (s1[i + 1] == '1' || s2[i + 1] == '1') {||| 37 ans += 2;||| 38 i++;||| 39 } else {||| 40 ans += 1;||| 41 }||| 42 }||| 43 }||| 44 cout << ans << ""\n"";||| 45 }||| 46 }||| "	36 if (s1[i + 1] == '1' && s2[i + 1] == '1') {
86	301	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 string f, s;||| 7 cin >> f >> s;||| 8 int one = 0, zero = 0, st = 0, ans = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (f[i] == '1')||| 11 ++one;||| 12 else||| 13 ++zero;||| 14 if (s[i] == '1')||| 15 ++one;||| 16 else||| 17 ++zero;||| 18 ++st;||| 19 if (zero > 0) {||| 20 if (zero > 1 && st > 1 && one == 1) {||| 21 ans += 1;||| 22 zero -= 2;||| 23 }||| 24 if (one > 0) {||| 25 ans += 2, st = 0, one = 0, zero = 0;||| 26 } else if (st > 1) {||| 27 st = 1, ans += 1, zero -= 2;||| 28 }||| 29 }||| 30 }||| 31 if (zero > 0) {||| 32 if (one > 0) {||| 33 ans += 2, st = 0, one = 0, zero = 0;||| 34 } else {||| 35 ans += 1;||| 36 }||| 37 }||| 38 cout << ans << ""\n"";||| 39 }||| 40 int main() {||| 41 int t;||| 42 cin >> t;||| 43 while (t--) solve();||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 string f, s;||| 7 cin >> f >> s;||| 8 int one = 0, zero = 0, st = 0, ans = 0;||| 9 for (int i = 0; i < n; ++i) {||| 10 if (f[i] == '1')||| 11 ++one;||| 12 else||| 13 ++zero;||| 14 if (s[i] == '1')||| 15 ++one;||| 16 else||| 17 ++zero;||| 18 ++st;||| 19 if (zero > 0) {||| 20 if (zero > 1 && st > 1 && one > 0) {||| 21 ans += 1;||| 22 zero -= 2;||| 23 }||| 24 if (one > 0) {||| 25 ans += 2, st = 0, one = 0, zero = 0;||| 26 } else if (st > 1) {||| 27 st = 1, ans += 1, zero -= 2;||| 28 }||| 29 }||| 30 }||| 31 if (zero > 0) {||| 32 if (one > 0) {||| 33 ans += 2, st = 0, one = 0, zero = 0;||| 34 } else {||| 35 ans += 1;||| 36 }||| 37 }||| 38 cout << ans << ""\n"";||| 39 }||| 40 int main() {||| 41 int t;||| 42 cin >> t;||| 43 while (t--) solve();||| 44 return 0;||| 45 }||| "	20 if (zero > 1 && st > 1 && one == 1) {
86	125	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n;||| 11 cin >> n;||| 12 string s1, s2;||| 13 cin >> s1 >> s2;||| 14 int ans = 0;||| 15 for (int i = 0; i < s1.size(); i++) {||| 16 if (s1[i] + s2[i] == '0' + '1') {||| 17 ans += 2;||| 18 } else if (s1[i] == '1') {||| 19 if (i != s1.size() - 1 && s1[i + 1] == '0' && s2[i + 1] == '0') {||| 20 ans += 2;||| 21 i++;||| 22 }||| 23 } else if (s1[i] == '0') {||| 24 if (i != s1.size() - 1 && s1[i + 1] == '1' && s2[i + 1] == '1') {||| 25 ans += 2;||| 26 i++;||| 27 } else {||| 28 ans++;||| 29 }||| 30 }||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(nullptr);||| 6 cout.tie(nullptr);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n;||| 11 cin >> n;||| 12 string s1, s2;||| 13 cin >> s1 >> s2;||| 14 int ans = 0;||| 15 for (int i = 0; i < s1.size(); i++) {||| 16 if (s1[i] + s2[i] == '0' + '1') {||| 17 ans += 2;||| 18 } else if (s1[i] == '1') {||| 19 if (i != s1.size() - 1 && s1[i + 1] == '0' && s2[i + 1] == '0') {||| 20 ans += 2;||| 21 i++;||| 22 }||| 23 } else if (s1[i] == '0') {||| 24 if (i != s1.size() - 1 && s1[i + 1] == '1' && s1[i + 1] == '1') {||| 25 ans += 2;||| 26 i++;||| 27 } else {||| 28 ans++;||| 29 }||| 30 }||| 31 }||| 32 cout << ans << ""\n"";||| 33 }||| 34 }||| "	24 if (i != s1.size() - 1 && s1[i + 1] == '1' && s2[i + 1] == '1') {
86	89	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long inf = 1e18 + 9;||| 5 const long long MAX_SIZE = 1e7 + 1;||| 6 long long dx[4] = {0, -1, 1, 0}, dy[4] = {1, 0, 0, -1};||| 7 long long _t = 1, _T;||| 8 long long max(long long a, long long b) {||| 9 if (a < b) return b;||| 10 return a;||| 11 }||| 12 long long min(long long a, long long b) {||| 13 if (a > b) return b;||| 14 return a;||| 15 }||| 16 long long mmi(long long a, long long m) {||| 17 long long m0 = m;||| 18 long long y = 0, x = 1;||| 19 if (m == 1) return 0;||| 20 while (a > 1) {||| 21 long long q = a / m;||| 22 long long t = m;||| 23 m = a % m, a = t;||| 24 t = y;||| 25 y = x - q * y;||| 26 x = t;||| 27 }||| 28 if (x < 0) x += m0;||| 29 return x;||| 30 }||| 31 long long nxor(long long n) {||| 32 if (n % 4 == 0) return n;||| 33 if (n % 4 == 1) return 1;||| 34 if (n % 4 == 2) return n + 1;||| 35 return 0;||| 36 }||| 37 long long sum(long long n) { return ((n * (n + 1)) / 2); }||| 38 long long modsum(long long n, long long m) {||| 39 long long ans = n % m;||| 40 ans *= (n + 1) % m;||| 41 ans %= m;||| 42 ans *= mmi(2, m);||| 43 return ans % m;||| 44 }||| 45 long long leap(long long y) {||| 46 if (y % 400 == 0)||| 47 return 1;||| 48 else if (y % 100 == 0)||| 49 return 0;||| 50 else if (y % 4 == 0)||| 51 return 1;||| 52 else||| 53 return 0;||| 54 }||| 55 long long mypow(long long x, long long n) {||| 56 long long nn = n, ans = 1;||| 57 while (nn) {||| 58 if (nn % 2)||| 59 ans *= x, nn--;||| 60 else||| 61 x *= x, nn /= 2;||| 62 }||| 63 return ans;||| 64 }||| 65 long long modpow(long long x, long long n, long long md) {||| 66 long long nn = n, ans = 1;||| 67 while (nn) {||| 68 if (nn % 2)||| 69 ans *= x, ans %= md, nn--;||| 70 else||| 71 x *= x, x %= md, nn /= 2;||| 72 }||| 73 return ans;||| 74 }||| 75 void solve(long long csn);||| 76 signed main() {||| 77 ios_base::sync_with_stdio(false);||| 78 cin.tie(NULL);||| 79 cout.tie(0);||| 80 bool multicases = 1;||| 81 if (multicases) cin >> _t;||| 82 _T = _t;||| 83 while (_t--) solve(_T - _t);||| 84 return 0;||| 85 }||| 86 void solve(long long csn) {||| 87 long long n;||| 88 cin >> n;||| 89 ;||| 90 string s1, s2;||| 91 cin >> s1 >> s2;||| 92 long long ans = 0, i = 0;||| 93 while (i < n) {||| 94 if (s1[i] != s2[i]) {||| 95 ans += 2;||| 96 i++;||| 97 } else if (s1[i] == '1') {||| 98 if (i == n - 1)||| 99 break;||| 100 else if (s1[i + 1] == '0' || s2[i + 1] == '0') {||| 101 ans += 2;||| 102 i += 2;||| 103 } else||| 104 i++;||| 105 } else {||| 106 if (i == n - 1) {||| 107 ans++;||| 108 break;||| 109 } else if (s1[i + 1] == '1' && s2[i + 1] == '1') {||| 110 ans += 2;||| 111 i += 2;||| 112 } else {||| 113 ans++;||| 114 i++;||| 115 }||| 116 }||| 117 }||| 118 cout << ans << ""\n"";||| 119 return;||| 120 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 1e9 + 7;||| 4 const long long inf = 1e18 + 9;||| 5 const long long MAX_SIZE = 1e7 + 1;||| 6 long long dx[4] = {0, -1, 1, 0}, dy[4] = {1, 0, 0, -1};||| 7 long long _t = 1, _T;||| 8 long long max(long long a, long long b) {||| 9 if (a < b) return b;||| 10 return a;||| 11 }||| 12 long long min(long long a, long long b) {||| 13 if (a > b) return b;||| 14 return a;||| 15 }||| 16 long long mmi(long long a, long long m) {||| 17 long long m0 = m;||| 18 long long y = 0, x = 1;||| 19 if (m == 1) return 0;||| 20 while (a > 1) {||| 21 long long q = a / m;||| 22 long long t = m;||| 23 m = a % m, a = t;||| 24 t = y;||| 25 y = x - q * y;||| 26 x = t;||| 27 }||| 28 if (x < 0) x += m0;||| 29 return x;||| 30 }||| 31 long long nxor(long long n) {||| 32 if (n % 4 == 0) return n;||| 33 if (n % 4 == 1) return 1;||| 34 if (n % 4 == 2) return n + 1;||| 35 return 0;||| 36 }||| 37 long long sum(long long n) { return ((n * (n + 1)) / 2); }||| 38 long long modsum(long long n, long long m) {||| 39 long long ans = n % m;||| 40 ans *= (n + 1) % m;||| 41 ans %= m;||| 42 ans *= mmi(2, m);||| 43 return ans % m;||| 44 }||| 45 long long leap(long long y) {||| 46 if (y % 400 == 0)||| 47 return 1;||| 48 else if (y % 100 == 0)||| 49 return 0;||| 50 else if (y % 4 == 0)||| 51 return 1;||| 52 else||| 53 return 0;||| 54 }||| 55 long long mypow(long long x, long long n) {||| 56 long long nn = n, ans = 1;||| 57 while (nn) {||| 58 if (nn % 2)||| 59 ans *= x, nn--;||| 60 else||| 61 x *= x, nn /= 2;||| 62 }||| 63 return ans;||| 64 }||| 65 long long modpow(long long x, long long n, long long md) {||| 66 long long nn = n, ans = 1;||| 67 while (nn) {||| 68 if (nn % 2)||| 69 ans *= x, ans %= md, nn--;||| 70 else||| 71 x *= x, x %= md, nn /= 2;||| 72 }||| 73 return ans;||| 74 }||| 75 void solve(long long csn);||| 76 signed main() {||| 77 ios_base::sync_with_stdio(false);||| 78 cin.tie(NULL);||| 79 cout.tie(0);||| 80 bool multicases = 1;||| 81 if (multicases) cin >> _t;||| 82 _T = _t;||| 83 while (_t--) solve(_T - _t);||| 84 return 0;||| 85 }||| 86 void solve(long long csn) {||| 87 long long n;||| 88 cin >> n;||| 89 ;||| 90 string s1, s2;||| 91 cin >> s1 >> s2;||| 92 long long ans = 0, i = 0;||| 93 while (i < n) {||| 94 if (s1[i] != s2[i]) {||| 95 ans += 2;||| 96 i++;||| 97 } else if (s1[i] == '1') {||| 98 if (i == n - 1)||| 99 break;||| 100 else if (s1[i + 1] == '0' || s2[i + 1] == '0') {||| 101 ans += 2;||| 102 i += 2;||| 103 } else||| 104 i++;||| 105 } else {||| 106 if (i == n - 1) {||| 107 ans++;||| 108 break;||| 109 } else if (s1[i + 1] == '1' || s2[i + 1] == '1') {||| 110 ans += 2;||| 111 i += 2;||| 112 } else {||| 113 ans++;||| 114 i++;||| 115 }||| 116 }||| 117 }||| 118 cout << ans << ""\n"";||| 119 return;||| 120 }||| "	109 } else if (s1[i + 1] == '1' && s2[i + 1] == '1') {
86	163	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(long long n) {||| 4 if (n <= 1) return false;||| 5 if (n <= 3) return true;||| 6 if (n % 2 == 0 || n % 3 == 0) return false;||| 7 for (long long i = 5; i * i <= n; i = i + 6)||| 8 if (n % i == 0 || n % (i + 2) == 0) return false;||| 9 return true;||| 10 }||| 11 long long fac[1000000];||| 12 void solve(long long testcase) {||| 13 long long n;||| 14 cin >> n;||| 15 string s, t;||| 16 cin >> s >> t;||| 17 long long ans = 0;||| 18 long long i = 0;||| 19 while (i < n) {||| 20 string sor = """", tor = """";||| 21 sor += s[i];||| 22 tor += t[i];||| 23 long long x = stoi(sor), y = stoi(tor);||| 24 if (x ^ y) {||| 25 ans += 2;||| 26 i++;||| 27 } else {||| 28 if (s[i] == '1') {||| 29 if (i == n - 1) {||| 30 i++;||| 31 continue;||| 32 } else {||| 33 if (s[i + 1] == '0' || t[i + 1] == '0') {||| 34 ans += 2;||| 35 i += 2;||| 36 } else {||| 37 i++;||| 38 continue;||| 39 }||| 40 }||| 41 } else {||| 42 if (i == n - 1) {||| 43 ans += 1;||| 44 i++;||| 45 continue;||| 46 } else {||| 47 if (s[i + 1] == '1' && t[i + 1] == '1') {||| 48 ans += 2;||| 49 i += 2;||| 50 } else {||| 51 ans += 1;||| 52 i++;||| 53 continue;||| 54 }||| 55 }||| 56 }||| 57 }||| 58 }||| 59 cout << ans << '\n';||| 60 return;||| 61 }||| 62 signed main() {||| 63 long long test = 1;||| 64 cin >> test;||| 65 for (long long init = 1; init <= test; init++) {||| 66 solve(init);||| 67 }||| 68 return 0;||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool isPrime(long long n) {||| 4 if (n <= 1) return false;||| 5 if (n <= 3) return true;||| 6 if (n % 2 == 0 || n % 3 == 0) return false;||| 7 for (long long i = 5; i * i <= n; i = i + 6)||| 8 if (n % i == 0 || n % (i + 2) == 0) return false;||| 9 return true;||| 10 }||| 11 long long fac[1000000];||| 12 void solve(long long testcase) {||| 13 long long n;||| 14 cin >> n;||| 15 string s, t;||| 16 cin >> s >> t;||| 17 long long ans = 0;||| 18 long long i = 0;||| 19 while (i < n) {||| 20 string sor = """", tor = """";||| 21 sor += s[i];||| 22 tor += t[i];||| 23 long long x = stoi(sor), y = stoi(tor);||| 24 if (x ^ y) {||| 25 ans += 2;||| 26 i++;||| 27 } else {||| 28 if (s[i] == '1') {||| 29 if (i == n - 1) {||| 30 i++;||| 31 continue;||| 32 } else {||| 33 if (s[i + 1] == '0' || t[i + 1] == '0') {||| 34 ans += 2;||| 35 i += 2;||| 36 } else {||| 37 i++;||| 38 continue;||| 39 }||| 40 }||| 41 } else {||| 42 if (i == n - 1) {||| 43 ans += 1;||| 44 i++;||| 45 continue;||| 46 } else {||| 47 if (s[i + 1] == '1' || t[i + 1] == '1') {||| 48 ans += 2;||| 49 i += 2;||| 50 } else {||| 51 ans += 1;||| 52 i++;||| 53 continue;||| 54 }||| 55 }||| 56 }||| 57 }||| 58 }||| 59 cout << ans << '\n';||| 60 return;||| 61 }||| 62 signed main() {||| 63 long long test = 1;||| 64 cin >> test;||| 65 for (long long init = 1; init <= test; init++) {||| 66 solve(init);||| 67 }||| 68 return 0;||| 69 }||| "	47 if (s[i + 1] == '1' && t[i + 1] == '1') {
87	85	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 using namespace std;||| 4 template <class TH>||| 5 void _dbg(const char *sdbg, TH h) {||| 6 cerr << sdbg << '=' << h << endl;||| 7 }||| 8 template <class TH, class... TA>||| 9 void _dbg(const char *sdbg, TH h, TA... a) {||| 10 while (*sdbg != ',') cerr << *sdbg++;||| 11 cerr << '=' << h << ',';||| 12 _dbg(sdbg + 1, a...);||| 13 }||| 14 int n, m;||| 15 int a[1010], flag[1010];||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 cin >> n >> m;||| 21 memset(flag, 0, sizeof(flag));||| 22 for (int i = 0; i < m; ++i) cin >> a[i];||| 23 int tot = 0, ans = 0;||| 24 while (tot < m) {||| 25 int maxx = 1e9 + 100, pos = 0;||| 26 for (int i = m - 1; i >= 0; --i)||| 27 if (flag[i] == 0 && a[i] < maxx) {||| 28 maxx = a[i];||| 29 pos = i;||| 30 }||| 31 for (int j = 0; j < pos; ++j)||| 32 if (flag[j] == 1) ans++;||| 33 flag[pos] = 1;||| 34 tot++;||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""O3"")||| 3 using namespace std;||| 4 template <class TH>||| 5 void _dbg(const char *sdbg, TH h) {||| 6 cerr << sdbg << '=' << h << endl;||| 7 }||| 8 template <class TH, class... TA>||| 9 void _dbg(const char *sdbg, TH h, TA... a) {||| 10 while (*sdbg != ',') cerr << *sdbg++;||| 11 cerr << '=' << h << ',';||| 12 _dbg(sdbg + 1, a...);||| 13 }||| 14 int n, m;||| 15 int a[1010], flag[1010];||| 16 int main() {||| 17 int t;||| 18 cin >> t;||| 19 while (t--) {||| 20 cin >> n >> m;||| 21 memset(flag, 0, sizeof(flag));||| 22 for (int i = 0; i < m; ++i) cin >> a[i];||| 23 int tot = 0, ans = 0;||| 24 while (tot < m) {||| 25 int maxx = m + 1, pos = 0;||| 26 for (int i = m - 1; i >= 0; --i)||| 27 if (flag[i] == 0 && a[i] < maxx) {||| 28 maxx = a[i];||| 29 pos = i;||| 30 }||| 31 for (int j = 0; j < pos; ++j)||| 32 if (flag[j] == 1) ans++;||| 33 flag[pos] = 1;||| 34 tot++;||| 35 }||| 36 cout << ans << endl;||| 37 }||| 38 return 0;||| 39 }||| "	25 int maxx = 1e9 + 100, pos = 0;
87	14	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 3e2 + 5;||| 4 int N, M;||| 5 int Sight[MAXN * MAXN], Order[MAXN * MAXN], Bac[MAXN * MAXN], Cnt[MAXN * MAXN];||| 6 struct seg {||| 7 int T[MAXN * 4];||| 8 void Build(int l, int r, int cur) {||| 9 if (l == r) {||| 10 T[cur] = 0;||| 11 return;||| 12 }||| 13 int m = (l + r) >> 1;||| 14 Build(l, m, cur << 1);||| 15 Build(m + 1, r, cur << 1 | 1);||| 16 T[cur] = T[cur << 1] + T[cur << 1 | 1];||| 17 }||| 18 void Change(int x, int l, int r, int cur) {||| 19 if (l == r) {||| 20 T[cur]++;||| 21 return;||| 22 }||| 23 int m = (l + r) >> 1;||| 24 if (x <= m)||| 25 Change(x, l, m, cur << 1);||| 26 else||| 27 Change(x, m + 1, r, cur << 1 | 1);||| 28 T[cur] = T[cur << 1] + T[cur << 1 | 1];||| 29 }||| 30 int Query(int x, int y, int l, int r, int cur) {||| 31 if (x > y) return 0;||| 32 if (x <= l && r <= y) return T[cur];||| 33 int m = (l + r) >> 1;||| 34 if (x <= m && y > m)||| 35 return Query(x, y, l, m, cur << 1) + Query(x, y, m + 1, r, cur << 1 | 1);||| 36 else if (x <= m)||| 37 return Query(x, y, l, m, cur << 1);||| 38 else||| 39 return Query(x, y, m + 1, r, cur << 1 | 1);||| 40 }||| 41 } St[MAXN];||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 int T;||| 45 cin >> T;||| 46 while (T--) {||| 47 cin >> N >> M;||| 48 for (int i = 1; i <= N * M; i++) cin >> Sight[i], Order[i] = Sight[i];||| 49 sort(Order + 1, Order + N * M + 1);||| 50 int num = unique(Order + 1, Order + N * M + 1) - Order - 1;||| 51 for (int i = 1; i <= N; i++) St[i].Build(1, num, 1);||| 52 for (int i = 1; i <= N * M; i++)||| 53 Sight[i] = lower_bound(Order + 1, Order + num + 1, Sight[i]) - Order;||| 54 int Ans = 0;||| 55 for (int i = 1; i <= N * M; i++) {||| 56 Ans += St[1].Query(1, Sight[i] - 1, 1, num, 1);||| 57 St[1].Change(Sight[i], 1, num, 1);||| 58 }||| 59 cout << Ans << endl;||| 60 }||| 61 return 0;||| 62 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 3e2 + 5;||| 4 int N, M;||| 5 int Sight[MAXN * MAXN], Order[MAXN * MAXN], Bac[MAXN * MAXN], Cnt[MAXN * MAXN];||| 6 struct seg {||| 7 int T[MAXN * 4];||| 8 void Build(int l, int r, int cur) {||| 9 if (l == r) {||| 10 T[cur] = 0;||| 11 return;||| 12 }||| 13 int m = (l + r) >> 1;||| 14 Build(l, m, cur << 1);||| 15 Build(m + 1, r, cur << 1 | 1);||| 16 T[cur] = T[cur << 1] + T[cur << 1 | 1];||| 17 }||| 18 void Change(int x, int l, int r, int cur) {||| 19 if (l == r) {||| 20 T[cur] = 1;||| 21 return;||| 22 }||| 23 int m = (l + r) >> 1;||| 24 if (x <= m)||| 25 Change(x, l, m, cur << 1);||| 26 else||| 27 Change(x, m + 1, r, cur << 1 | 1);||| 28 T[cur] = T[cur << 1] + T[cur << 1 | 1];||| 29 }||| 30 int Query(int x, int y, int l, int r, int cur) {||| 31 if (x > y) return 0;||| 32 if (x <= l && r <= y) return T[cur];||| 33 int m = (l + r) >> 1;||| 34 if (x <= m && y > m)||| 35 return Query(x, y, l, m, cur << 1) + Query(x, y, m + 1, r, cur << 1 | 1);||| 36 else if (x <= m)||| 37 return Query(x, y, l, m, cur << 1);||| 38 else||| 39 return Query(x, y, m + 1, r, cur << 1 | 1);||| 40 }||| 41 } St[MAXN];||| 42 int main() {||| 43 ios::sync_with_stdio(false);||| 44 int T;||| 45 cin >> T;||| 46 while (T--) {||| 47 cin >> N >> M;||| 48 for (int i = 1; i <= N * M; i++) cin >> Sight[i], Order[i] = Sight[i];||| 49 sort(Order + 1, Order + N * M + 1);||| 50 int num = unique(Order + 1, Order + N * M + 1) - Order - 1;||| 51 for (int i = 1; i <= N; i++) St[i].Build(1, num, 1);||| 52 for (int i = 1; i <= N * M; i++)||| 53 Sight[i] = lower_bound(Order + 1, Order + num + 1, Sight[i]) - Order;||| 54 int Ans = 0;||| 55 for (int i = 1; i <= N * M; i++) {||| 56 Ans += St[1].Query(1, Sight[i] - 1, 1, num, 1);||| 57 St[1].Change(Sight[i], 1, num, 1);||| 58 }||| 59 cout << Ans << endl;||| 60 }||| 61 return 0;||| 62 }||| 	20 T[cur]++;
87	26	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, t;||| 4 int v[1000010];||| 5 struct nod {||| 6 int l, r, v;||| 7 };||| 8 vector<nod> s;||| 9 void add(int o, int l, int r, int x, int y) {||| 10 if (l == r) {||| 11 s[o].v += y;||| 12 return;||| 13 }||| 14 if (x <= (l + r >> 1)) {||| 15 if (s[o].l == -1) {||| 16 s[o].l = s.size();||| 17 s.push_back((nod){-1, -1, 0});||| 18 }||| 19 add(s[o].l, l, (l + r >> 1), x, y);||| 20 } else {||| 21 if (s[o].r == -1) {||| 22 s[o].r = s.size();||| 23 s.push_back((nod){-1, -1, 0});||| 24 }||| 25 add(s[o].r, (l + r >> 1) + 1, r, x, y);||| 26 }||| 27 s[o].v = 0;||| 28 if (s[o].l != -1) {||| 29 s[o].v += s[s[o].l].v;||| 30 }||| 31 if (s[o].r != -1) {||| 32 s[o].v += s[s[o].r].v;||| 33 }||| 34 }||| 35 int ask(int o, int l, int r, int il, int ir) {||| 36 if (il <= l && ir >= r) {||| 37 return s[o].v;||| 38 }||| 39 int re = 0;||| 40 if (il <= (l + r >> 1) && s[o].l != -1) {||| 41 re += ask(s[o].l, l, (l + r >> 1), il, ir);||| 42 }||| 43 if (ir > (l + r >> 1) && s[o].r != -1) {||| 44 re += ask(s[o].r, (l + r >> 1) + 1, r, il, ir);||| 45 }||| 46 return re;||| 47 }||| 48 int main() {||| 49 cin >> t;||| 50 while (t--) {||| 51 cin >> n >> m;||| 52 long long cnt = 0;||| 53 s.clear();||| 54 s.push_back((nod){-1, -1, 0});||| 55 for (int i = 1; i <= m; i++) {||| 56 int v;||| 57 cin >> v;||| 58 cnt += ask(0, 1, (1 << 30), 1, v - 1);||| 59 add(0, 1, (1 << 30), v, 1);||| 60 }||| 61 cout << cnt << endl;||| 62 }||| 63 return 0;||| 64 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, t;||| 4 int v[1000010];||| 5 struct nod {||| 6 int l, r, v;||| 7 };||| 8 vector<nod> s;||| 9 void add(int o, int l, int r, int x, int y) {||| 10 if (l == r) {||| 11 s[o].v = y;||| 12 return;||| 13 }||| 14 if (x <= (l + r >> 1)) {||| 15 if (s[o].l == -1) {||| 16 s[o].l = s.size();||| 17 s.push_back((nod){-1, -1, 0});||| 18 }||| 19 add(s[o].l, l, (l + r >> 1), x, y);||| 20 } else {||| 21 if (s[o].r == -1) {||| 22 s[o].r = s.size();||| 23 s.push_back((nod){-1, -1, 0});||| 24 }||| 25 add(s[o].r, (l + r >> 1) + 1, r, x, y);||| 26 }||| 27 s[o].v = 0;||| 28 if (s[o].l != -1) {||| 29 s[o].v += s[s[o].l].v;||| 30 }||| 31 if (s[o].r != -1) {||| 32 s[o].v += s[s[o].r].v;||| 33 }||| 34 }||| 35 int ask(int o, int l, int r, int il, int ir) {||| 36 if (il <= l && ir >= r) {||| 37 return s[o].v;||| 38 }||| 39 int re = 0;||| 40 if (il <= (l + r >> 1) && s[o].l != -1) {||| 41 re += ask(s[o].l, l, (l + r >> 1), il, ir);||| 42 }||| 43 if (ir > (l + r >> 1) && s[o].r != -1) {||| 44 re += ask(s[o].r, (l + r >> 1) + 1, r, il, ir);||| 45 }||| 46 return re;||| 47 }||| 48 int main() {||| 49 cin >> t;||| 50 while (t--) {||| 51 cin >> n >> m;||| 52 long long cnt = 0;||| 53 s.clear();||| 54 s.push_back((nod){-1, -1, 0});||| 55 for (int i = 1; i <= m; i++) {||| 56 int v;||| 57 cin >> v;||| 58 cnt += ask(0, 1, (1 << 30), 1, v - 1);||| 59 add(0, 1, (1 << 30), v, 1);||| 60 }||| 61 cout << cnt << endl;||| 62 }||| 63 return 0;||| 64 }||| 	11 s[o].v += y;
87	32	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, T, a[100010], b[100010], tree[400][410];||| 4 struct kkk {||| 5 int l;||| 6 vector<int> ve;||| 7 } kk[100010];||| 8 int lowbit(int x) { return x & (-x); }||| 9 void add(int row, int x, int k) {||| 10 int i = x;||| 11 while (i <= m) {||| 12 tree[row][i] += k;||| 13 i += lowbit(i);||| 14 }||| 15 return;||| 16 }||| 17 int getsum(int row, int x) {||| 18 int i = x;||| 19 int ans = 0;||| 20 while (i >= 1) {||| 21 ans += tree[row][i];||| 22 i -= lowbit(i);||| 23 }||| 24 return ans;||| 25 }||| 26 map<int, int> ma;||| 27 int main() {||| 28 cin >> T;||| 29 while (T--) {||| 30 scanf(""%d%d"", &n, &m);||| 31 ma.clear();||| 32 memset(tree, 0, sizeof(tree));||| 33 for (int i = 1; i <= 100000; i++) {||| 34 kk[i].l = 0;||| 35 kk[i].ve.clear();||| 36 }||| 37 for (int i = 1; i <= n * m; i++) {||| 38 scanf(""%d"", &a[i]);||| 39 b[i] = a[i];||| 40 }||| 41 sort(a + 1, a + n * m + 1);||| 42 a[n * m + 1] = -1;||| 43 int j = 1;||| 44 ma[a[1]] = 1;||| 45 for (int i = 1; i <= n * m; i++) {||| 46 if (a[i] != a[i + 1]) {||| 47 kk[j].l++;||| 48 kk[j].ve.push_back(i);||| 49 j++;||| 50 ma[a[i + 1]] = j;||| 51 } else if (i % m == 0) {||| 52 kk[j].l++;||| 53 kk[j].ve.push_back(i);||| 54 }||| 55 }||| 56 int ans = 0;||| 57 for (int i = 1; i <= n * m; i++) {||| 58 int x = ma[b[i]];||| 59 for (int j = 0; j < kk[x].l; j++) {||| 60 if (a[kk[x].ve[j]] == b[i] && kk[x].ve[j] > 0) {||| 61 int p = kk[x].ve[j];||| 62 ans += getsum((p - 1) / m + 1, (p - 1) % m);||| 63 add((p - 1) / m + 1, (p - 1) % m + 1, 1);||| 64 kk[x].ve[j]--;||| 65 break;||| 66 }||| 67 }||| 68 }||| 69 cout << ans << endl;||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m, T, a[100010], b[100010], tree[400][410];||| 4 struct kkk {||| 5 int l;||| 6 vector<int> ve;||| 7 } kk[100010];||| 8 int lowbit(int x) { return x & (-x); }||| 9 void add(int row, int x, int k) {||| 10 int i = x;||| 11 while (i <= m) {||| 12 tree[row][i] += k;||| 13 i += lowbit(i);||| 14 }||| 15 return;||| 16 }||| 17 int getsum(int row, int x) {||| 18 int i = x;||| 19 int ans = 0;||| 20 while (i >= 1) {||| 21 ans += tree[row][i];||| 22 i -= lowbit(i);||| 23 }||| 24 return ans;||| 25 }||| 26 map<int, int> ma;||| 27 int main() {||| 28 cin >> T;||| 29 while (T--) {||| 30 scanf(""%d%d"", &n, &m);||| 31 ma.clear();||| 32 memset(tree, 0, sizeof(tree));||| 33 for (int i = 1; i <= n; i++) {||| 34 kk[i].l = 0;||| 35 kk[i].ve.clear();||| 36 }||| 37 for (int i = 1; i <= n * m; i++) {||| 38 scanf(""%d"", &a[i]);||| 39 b[i] = a[i];||| 40 }||| 41 sort(a + 1, a + n * m + 1);||| 42 a[n * m + 1] = -1;||| 43 int j = 1;||| 44 ma[a[1]] = 1;||| 45 for (int i = 1; i <= n * m; i++) {||| 46 if (a[i] != a[i + 1]) {||| 47 kk[j].l++;||| 48 kk[j].ve.push_back(i);||| 49 j++;||| 50 ma[a[i + 1]] = j;||| 51 } else if (i % m == 0) {||| 52 kk[j].l++;||| 53 kk[j].ve.push_back(i);||| 54 }||| 55 }||| 56 int ans = 0;||| 57 for (int i = 1; i <= n * m; i++) {||| 58 int x = ma[b[i]];||| 59 for (int j = 0; j < kk[x].l; j++) {||| 60 if (a[kk[x].ve[j]] == b[i] && kk[x].ve[j] > 0) {||| 61 int p = kk[x].ve[j];||| 62 ans += getsum((p - 1) / m + 1, (p - 1) % m);||| 63 add((p - 1) / m + 1, (p - 1) % m + 1, 1);||| 64 kk[x].ve[j]--;||| 65 break;||| 66 }||| 67 }||| 68 }||| 69 cout << ans << endl;||| 70 }||| 71 return 0;||| 72 }||| "	33 for (int i = 1; i <= 100000; i++) {
88	111	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 bool cmp2(pair<long long, long long> a, pair<long long, long long> b) {||| 5 if (a.first < b.first) return true;||| 6 if (a.first == b.first) {||| 7 if (a.second > b.second) {||| 8 return true;||| 9 }||| 10 }||| 11 return false;||| 12 }||| 13 bool cmp1(pair<long long, long long> a, pair<long long, long long> b) {||| 14 if (a.first < b.first) return true;||| 15 if (a.first == b.first) {||| 16 if (a.second < b.second) {||| 17 return true;||| 18 }||| 19 }||| 20 return false;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(NULL);||| 25 long long a, b, c, t, d, n, ans, e, i, x, temp, s, k, temp2, m, j;||| 26 cin >> t;||| 27 while (t--) {||| 28 cin >> n >> m;||| 29 vector<pair<long long, long long>> arr;||| 30 temp = n * m;||| 31 for (i = 0; i < temp; i++) {||| 32 cin >> x;||| 33 arr.push_back({x, i + 1});||| 34 }||| 35 sort(arr.begin(), arr.end());||| 36 vector<vector<pair<long long, long long>>> mat(n);||| 37 map<long long, pair<long long, long long>> mp;||| 38 for (i = 0; i < n; i++) {||| 39 for (j = 0; j < m; j++) {||| 40 mat[i].push_back({arr[(i * m) + j].first, arr[(i * m) + j].second});||| 41 }||| 42 }||| 43 for (i = 0; i < m; i++) {||| 44 vector<pair<long long, long long>> temp2;||| 45 for (j = 0; j < n; j++) {||| 46 temp2.push_back({mat[j][i].first, mat[j][i].second});||| 47 }||| 48 sort(temp2.begin(), temp2.end(), cmp1);||| 49 for (j = 0; j < n; j++) {||| 50 mat[j][i] = temp2[j];||| 51 }||| 52 }||| 53 for (i = 0; i < n; i++) sort(mat[i].begin(), mat[i].end(), cmp2);||| 54 vector<set<long long>> v;||| 55 for (i = 0; i < n; i++) {||| 56 for (j = 0; j < m; j++) {||| 57 mp[mat[i][j].second] = make_pair(i + 1, j + 1);||| 58 }||| 59 }||| 60 for (i = 0; i < n; i++) {||| 61 set<long long> ss;||| 62 ss.insert(0);||| 63 v.push_back(ss);||| 64 }||| 65 ans = 0;||| 66 pair<long long, long long> h;||| 67 for (auto k : mp) {||| 68 h = k.second;||| 69 auto l = v[h.first - 1].lower_bound(h.second);||| 70 if (l != v[h.first - 1].end()) {||| 71 j = distance(v[h.first - 1].begin(), l);||| 72 j--;||| 73 ans += j;||| 74 } else {||| 75 j = v[h.first - 1].size() - 1;||| 76 ans += j;||| 77 }||| 78 v[h.first - 1].insert(h.second);||| 79 }||| 80 cout << ans << ""\n"";||| 81 }||| 82 return 0;||| 83 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long mod = 998244353;||| 4 bool cmp2(pair<long long, long long> a, pair<long long, long long> b) {||| 5 if (a.first < b.first) return true;||| 6 if (a.first == b.first) {||| 7 if (a.second > b.second) {||| 8 return true;||| 9 }||| 10 }||| 11 return false;||| 12 }||| 13 bool cmp1(pair<long long, long long> a, pair<long long, long long> b) {||| 14 if (a.first < b.first) return true;||| 15 if (a.first == b.first) {||| 16 if (a.second < b.second) {||| 17 return true;||| 18 }||| 19 }||| 20 return false;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(false);||| 24 cin.tie(NULL);||| 25 long long a, b, c, t, d, n, ans, e, i, x, temp, s, k, temp2, m, j;||| 26 cin >> t;||| 27 while (t--) {||| 28 cin >> n >> m;||| 29 vector<pair<long long, long long>> arr;||| 30 temp = n * m;||| 31 for (i = 0; i < temp; i++) {||| 32 cin >> x;||| 33 arr.push_back({x, i + 1});||| 34 }||| 35 sort(arr.begin(), arr.end(), cmp2);||| 36 vector<vector<pair<long long, long long>>> mat(n);||| 37 map<long long, pair<long long, long long>> mp;||| 38 for (i = 0; i < n; i++) {||| 39 for (j = 0; j < m; j++) {||| 40 mat[i].push_back({arr[(i * m) + j].first, arr[(i * m) + j].second});||| 41 }||| 42 }||| 43 for (i = 0; i < m; i++) {||| 44 vector<pair<long long, long long>> temp2;||| 45 for (j = 0; j < n; j++) {||| 46 temp2.push_back({mat[j][i].first, mat[j][i].second});||| 47 }||| 48 sort(temp2.begin(), temp2.end(), cmp1);||| 49 for (j = 0; j < n; j++) {||| 50 mat[j][i] = temp2[j];||| 51 }||| 52 }||| 53 for (i = 0; i < n; i++) sort(mat[i].begin(), mat[i].end(), cmp2);||| 54 vector<set<long long>> v;||| 55 for (i = 0; i < n; i++) {||| 56 for (j = 0; j < m; j++) {||| 57 mp[mat[i][j].second] = make_pair(i + 1, j + 1);||| 58 }||| 59 }||| 60 for (i = 0; i < n; i++) {||| 61 set<long long> ss;||| 62 ss.insert(0);||| 63 v.push_back(ss);||| 64 }||| 65 ans = 0;||| 66 pair<long long, long long> h;||| 67 for (auto k : mp) {||| 68 h = k.second;||| 69 auto l = v[h.first - 1].lower_bound(h.second);||| 70 if (l != v[h.first - 1].end()) {||| 71 j = distance(v[h.first - 1].begin(), l);||| 72 j--;||| 73 ans += j;||| 74 } else {||| 75 j = v[h.first - 1].size() - 1;||| 76 ans += j;||| 77 }||| 78 v[h.first - 1].insert(h.second);||| 79 }||| 80 cout << ans << ""\n"";||| 81 }||| 82 return 0;||| 83 }||| "	35 sort(arr.begin(), arr.end());
88	8	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxm = 90005;||| 4 int t, n, m, s[305][305];||| 5 struct NODE {||| 6 int a, i, p;||| 7 NODE() { a = i = p = 0; }||| 8 bool operator<(const NODE &x) const {||| 9 if (a == x.a)||| 10 return i > x.i;||| 11 else||| 12 return a < x.a;||| 13 }||| 14 } g[maxm];||| 15 bool cmp(const NODE &a, const NODE &b) { return a.i < b.i; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cin >> t;||| 20 while (t--) {||| 21 cin >> n >> m;||| 22 memset(s, 0, sizeof(s));||| 23 for (int i = 1; i <= n * m; i++) {||| 24 cin >> g[i].a;||| 25 g[i].i = i;||| 26 }||| 27 sort(g + 1, g + n * m + 1);||| 28 for (int i = 1; i <= n * m; i++) g[i].p = i;||| 29 int L = 0, R = 0, pre = -1;||| 30 g[n * m + 1].a = -1;||| 31 for (int i = 1; i <= n * m + 1; i++) {||| 32 if (g[i].a != pre) {||| 33 if (pre != -1 && L != R) {||| 34 int r = (R - 1) / m + 1;||| 35 int c = R - (r - 1) * m;||| 36 int lr = (L - 1) / m + 1;||| 37 int lc = L - (lr - 1) * m;||| 38 if (lr != r) {||| 39 for (int j = L; j <= R; j++) g[j].p = -1;||| 40 for (int j = 1, k = (r - 1) * m + 1; j <= c; j++, k++)||| 41 g[L + j - 1].p = k;||| 42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;||| 43 }||| 44 }||| 45 L = R = i;||| 46 pre = g[i].a;||| 47 } else||| 48 R = i;||| 49 }||| 50 sort(g + 1, g + n * m + 1, cmp);||| 51 int ans = 0;||| 52 for (int i = 1; i <= n * m; i++) {||| 53 if (g[i].p == -1) continue;||| 54 int r = (g[i].p - 1) / m + 1;||| 55 int c = g[i].p - (r - 1) * m;||| 56 for (int j = 1; j < c; j++)||| 57 if (s[r][j] == 1) ans++;||| 58 s[r][c] = 1;||| 59 }||| 60 cout << ans << endl;||| 61 }||| 62 return 0;||| 63 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxm = 90005;||| 4 int t, n, m, s[305][305];||| 5 struct NODE {||| 6 int a, i, p;||| 7 NODE() { a = i = p = 0; }||| 8 bool operator<(const NODE &x) const {||| 9 if (a == x.a)||| 10 return i > x.i;||| 11 else||| 12 return a < x.a;||| 13 }||| 14 } g[maxm];||| 15 bool cmp(const NODE &a, const NODE &b) { return a.i < b.i; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cin >> t;||| 20 while (t--) {||| 21 cin >> n >> m;||| 22 memset(s, 0, sizeof(s));||| 23 for (int i = 1; i <= n * m; i++) {||| 24 cin >> g[i].a;||| 25 g[i].i = i;||| 26 }||| 27 sort(g + 1, g + n * m + 1);||| 28 for (int i = 1; i <= n * m; i++) g[i].p = i;||| 29 int L = 0, R = 0, pre = -1;||| 30 g[n * m + 1].a = -1;||| 31 for (int i = 1; i <= n * m + 1; i++) {||| 32 if (g[i].a != pre) {||| 33 if (pre != -1 && L != R) {||| 34 int r = (R - 1) / m + 1;||| 35 int c = R - (r - 1) * m;||| 36 int lr = (L - 1) / m + 1;||| 37 int lc = L - (lr - 1) * m;||| 38 if (lr != r) {||| 39 for (int j = L; j <= R; j++) g[j].p = -1;||| 40 for (int j = 1, k = (r - 1) * m + 1; j <= c; j++, k++)||| 41 g[L + j - 1].p = k;||| 42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - m].p = k;||| 43 }||| 44 }||| 45 L = R = i;||| 46 pre = g[i].a;||| 47 } else||| 48 R = i;||| 49 }||| 50 sort(g + 1, g + n * m + 1, cmp);||| 51 int ans = 0;||| 52 for (int i = 1; i <= n * m; i++) {||| 53 if (g[i].p == -1) continue;||| 54 int r = (g[i].p - 1) / m + 1;||| 55 int c = g[i].p - (r - 1) * m;||| 56 for (int j = 1; j < c; j++)||| 57 if (s[r][j] == 1) ans++;||| 58 s[r][c] = 1;||| 59 }||| 60 cout << ans << endl;||| 61 }||| 62 return 0;||| 63 }||| 	42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;
88	70	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxm = 90005;||| 4 int t, n, m, s[305][305];||| 5 struct NODE {||| 6 int a, i, p;||| 7 NODE() { a = i = p = 0; }||| 8 bool operator<(const NODE &x) const {||| 9 if (a == x.a)||| 10 return i > x.i;||| 11 else||| 12 return a < x.a;||| 13 }||| 14 } g[maxm];||| 15 bool cmp(const NODE &a, const NODE &b) { return a.i < b.i; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cin >> t;||| 20 while (t--) {||| 21 cin >> n >> m;||| 22 memset(s, 0, sizeof(s));||| 23 for (int i = 1; i <= n * m; i++) {||| 24 cin >> g[i].a;||| 25 g[i].i = i;||| 26 }||| 27 sort(g + 1, g + n * m + 1);||| 28 for (int i = 1; i <= n * m; i++) g[i].p = i;||| 29 int L = 0, R = 0, pre = -1;||| 30 g[n * m + 1].a = -1;||| 31 for (int i = 1; i <= n * m + 1; i++) {||| 32 if (g[i].a != pre) {||| 33 if (pre != -1 && L != R) {||| 34 int r = (R - 1) / m + 1;||| 35 int c = R - (r - 1) * m;||| 36 int lr = (L - 1) / m + 1;||| 37 int lc = L - (lr - 1) * m;||| 38 if (lr != r) {||| 39 for (int j = L; j <= R; j++) g[j].p = -1;||| 40 for (int j = 1, k = (r - 1) * m + 1; j <= c; j++, k++)||| 41 g[L + j - 1].p = k;||| 42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;||| 43 }||| 44 }||| 45 L = R = i;||| 46 pre = g[i].a;||| 47 } else||| 48 R = i;||| 49 }||| 50 sort(g + 1, g + n * m + 1, cmp);||| 51 int ans = 0;||| 52 for (int i = 1; i <= n * m; i++) {||| 53 if (g[i].p == -1) continue;||| 54 int r = (g[i].p - 1) / m + 1;||| 55 int c = g[i].p - (r - 1) * m;||| 56 for (int j = 1; j < c; j++)||| 57 if (s[r][j] == 1) ans++;||| 58 s[r][c] = 1;||| 59 }||| 60 cout << ans << endl;||| 61 }||| 62 return 0;||| 63 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxm = 90005;||| 4 int t, n, m, s[305][305];||| 5 struct NODE {||| 6 int a, i, p;||| 7 NODE() { a = i = p = 0; }||| 8 bool operator<(const NODE &x) const {||| 9 if (a == x.a)||| 10 return i > x.i;||| 11 else||| 12 return a < x.a;||| 13 }||| 14 } g[maxm];||| 15 bool cmp(const NODE &a, const NODE &b) { return a.i < b.i; }||| 16 int main() {||| 17 ios::sync_with_stdio(false);||| 18 cin.tie(0);||| 19 cin >> t;||| 20 while (t--) {||| 21 cin >> n >> m;||| 22 memset(s, 0, sizeof(s));||| 23 for (int i = 1; i <= n * m; i++) {||| 24 cin >> g[i].a;||| 25 g[i].i = i;||| 26 }||| 27 sort(g + 1, g + n * m + 1);||| 28 for (int i = 1; i <= n * m; i++) g[i].p = i;||| 29 int L = 0, R = 0, pre = -1;||| 30 g[n * m + 1].a = -1;||| 31 for (int i = 1; i <= n * m + 1; i++) {||| 32 if (g[i].a != pre) {||| 33 if (pre != -1 && L != R) {||| 34 int r = (R - 1) / m + 1;||| 35 int c = R - (r - 1) * m;||| 36 int lr = (L - 1) / m + 1;||| 37 int lc = L - (lr - 1) * m;||| 38 if (lr != r) {||| 39 for (int j = L; j <= R; j++) g[j].p = -1;||| 40 for (int j = 1, k = (r - 1) * m + 1; j <= c; j++, k++)||| 41 g[L + j - 1].p = k;||| 42 for (int j = m, k = L; j >= lc; j--, k++) g[R + j - m].p = k;||| 43 }||| 44 }||| 45 L = R = i;||| 46 pre = g[i].a;||| 47 } else||| 48 R = i;||| 49 }||| 50 sort(g + 1, g + n * m + 1, cmp);||| 51 int ans = 0;||| 52 for (int i = 1; i <= n * m; i++) {||| 53 if (g[i].p == -1) continue;||| 54 int r = (g[i].p - 1) / m + 1;||| 55 int c = g[i].p - (r - 1) * m;||| 56 for (int j = 1; j < c; j++)||| 57 if (s[r][j] == 1) ans++;||| 58 s[r][c] = 1;||| 59 }||| 60 cout << ans << endl;||| 61 }||| 62 return 0;||| 63 }||| 	42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;
88	71	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5e5 + 10;||| 4 int a[N], b[N], d[N], id[N];||| 5 vector<int> c[N];||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 int n, m;||| 14 cin >> n >> m;||| 15 for (int i = 1; i <= n * m; i++) {||| 16 cin >> a[i];||| 17 b[i] = a[i];||| 18 }||| 19 sort(a + 1, a + 1 + m * n);||| 20 int num = unique(a + 1, a + 1 + m * n) - a - 1;||| 21 for (int i = 1; i <= num; i++) {||| 22 c[i].clear();||| 23 }||| 24 for (int i = 1; i <= n * m; i++) {||| 25 int tt = lower_bound(a + 1, a + 1 + num, b[i]) - a;||| 26 c[tt].push_back(i);||| 27 }||| 28 int ans = 0, now = 1;||| 29 for (int i = 1; i <= num; i++) {||| 30 int len = (m - (now - 1) % m);||| 31 if (c[i].size() > len) {||| 32 for (int j = now; j <= m; j++) {||| 33 id[(j - 1) % m + 1] = c[i][now - j + len - 1];||| 34 }||| 35 for (int j = now; j <= m; j++) {||| 36 for (int k = 1; k < now; k++) {||| 37 if (id[k] < id[j]) ans++;||| 38 }||| 39 }||| 40 int mm = c[i].size(), st;||| 41 st = mm;||| 42 mm -= len;||| 43 mm %= m;||| 44 now = mm + 1;||| 45 for (int j = 1; j <= mm; j++) {||| 46 id[j] = c[i][st - j];||| 47 }||| 48 } else {||| 49 int mm = c[i].size();||| 50 for (int j = now; j < now + mm; j++) {||| 51 id[(j - 1) % m + 1] = c[i][mm - (j - now + 1)];||| 52 }||| 53 for (int j = now; j < now + mm; j++) {||| 54 for (int k = 1; k < now; k++) {||| 55 if (id[k] < id[j]) ans++;||| 56 }||| 57 }||| 58 now += mm;||| 59 now = (now - 1) % m + 1;||| 60 }||| 61 }||| 62 cout << ans << endl;||| 63 }||| 64 return 0;||| 65 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 5e5 + 10;||| 4 int a[N], b[N], d[N], id[N];||| 5 vector<int> c[N];||| 6 int main() {||| 7 ios::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.tie(0);||| 10 int t;||| 11 cin >> t;||| 12 while (t--) {||| 13 int n, m;||| 14 cin >> n >> m;||| 15 for (int i = 1; i <= n * m; i++) {||| 16 cin >> a[i];||| 17 b[i] = a[i];||| 18 }||| 19 sort(a + 1, a + 1 + m * n);||| 20 int num = unique(a + 1, a + 1 + m * n) - a - 1;||| 21 for (int i = 1; i <= num; i++) {||| 22 c[i].clear();||| 23 }||| 24 for (int i = 1; i <= n * m; i++) {||| 25 int tt = lower_bound(a + 1, a + 1 + num, b[i]) - a;||| 26 c[tt].push_back(i);||| 27 }||| 28 int ans = 0, now = 1;||| 29 for (int i = 1; i <= num; i++) {||| 30 int len = (m - (now - 1) % m);||| 31 if (c[i].size() > len) {||| 32 for (int j = now; j <= m; j++) {||| 33 id[(j - 1) % m + 1] = c[i][j - now + len - 1];||| 34 }||| 35 for (int j = now; j <= m; j++) {||| 36 for (int k = 1; k < now; k++) {||| 37 if (id[k] < id[j]) ans++;||| 38 }||| 39 }||| 40 int mm = c[i].size(), st;||| 41 st = mm;||| 42 mm -= len;||| 43 mm %= m;||| 44 now = mm + 1;||| 45 for (int j = 1; j <= mm; j++) {||| 46 id[j] = c[i][st - j];||| 47 }||| 48 } else {||| 49 int mm = c[i].size();||| 50 for (int j = now; j < now + mm; j++) {||| 51 id[(j - 1) % m + 1] = c[i][mm - (j - now + 1)];||| 52 }||| 53 for (int j = now; j < now + mm; j++) {||| 54 for (int k = 1; k < now; k++) {||| 55 if (id[k] < id[j]) ans++;||| 56 }||| 57 }||| 58 now += mm;||| 59 now = (now - 1) % m + 1;||| 60 }||| 61 }||| 62 cout << ans << endl;||| 63 }||| 64 return 0;||| 65 }||| 	33 id[(j - 1) % m + 1] = c[i][now - j + len - 1];
88	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long a = 0;||| 5 long long d = 1;||| 6 char c;||| 7 while (c = getchar(), c < '0' || c > '9')||| 8 if (c == '-') d = -1;||| 9 a = a * 10 + c - 48;||| 10 while (c = getchar(), c >= '0' && c <= '9') a = a * 10 + c - 48;||| 11 a *= d;||| 12 return a;||| 13 }||| 14 long long n, m;||| 15 struct num {||| 16 long long val, idx, dd, d;||| 17 } a[1050000];||| 18 bool cmp(num a, num b) {||| 19 if (a.val == b.val) {||| 20 return a.idx < b.idx;||| 21 }||| 22 return a.val < b.val;||| 23 }||| 24 bool cmp1(num a, num b) { return a.idx < b.idx; }||| 25 bool cmp2(num a, num b) {||| 26 if (a.val == b.val) {||| 27 if ((a.dd - 1) / m == (b.dd - 1) / m) return a.idx > b.idx;||| 28 return (a.dd - 1) / m < (b.dd - 1) / m;||| 29 }||| 30 return a.val < b.val;||| 31 }||| 32 long long c[505][505];||| 33 long long lowbit(long long x) { return x & (-x); }||| 34 void update(long long x, long long k, long long pos) {||| 35 for (long long i = x; i <= m; i += lowbit(i)) c[pos][i] += k;||| 36 }||| 37 long long getsum(long long x, long long pos) {||| 38 long long ans = 0;||| 39 for (long long i = x; i; i -= lowbit(i)) ans += c[pos][i];||| 40 return ans;||| 41 }||| 42 bool vis[305][305];||| 43 signed main() {||| 44 long long t = read();||| 45 while (t--) {||| 46 n = read();||| 47 m = read();||| 48 for (long long i = 1; i <= n; i++)||| 49 memset(vis[i], false, sizeof(bool) * (m + 1));||| 50 for (long long i = 1; i <= n; i++)||| 51 memset(c[i], 0, sizeof(long long) * (m + 1));||| 52 for (long long i = 1; i <= m * n; i++) {||| 53 a[i].idx = i;||| 54 a[i].val = read();||| 55 }||| 56 sort(a + 1, a + 1 + m * n, cmp);||| 57 long long ans = 0;||| 58 for (long long i = 1; i <= m * n; i++) a[i].dd = i;||| 59 sort(a + 1, a + 1 + m * n, cmp2);||| 60 for (long long i = 1; i <= m * n; i++) a[i].d = i;||| 61 sort(a + 1, a + 1 + m * n, cmp1);||| 62 for (long long i = 1; i <= m * n; i++) {||| 63 long long d = a[i].d;||| 64 long long pos = (d - 1) / m + 1;||| 65 long long aim = (d - 1) % m + 1;||| 66 ans += getsum(aim, pos);||| 67 update(aim, 1, pos);||| 68 }||| 69 printf(""%lld\n"", ans);||| 70 }||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long read() {||| 4 long long a = 0;||| 5 long long d = 1;||| 6 char c;||| 7 while (c = getchar(), c < '0' || c > '9')||| 8 if (c == '-') d = -1;||| 9 a = a * 10 + c - 48;||| 10 while (c = getchar(), c >= '0' && c <= '9') a = a * 10 + c - 48;||| 11 a *= d;||| 12 return a;||| 13 }||| 14 long long n, m;||| 15 struct num {||| 16 long long val, idx, dd, d;||| 17 } a[1050000];||| 18 bool cmp(num a, num b) {||| 19 if (a.val == b.val) {||| 20 return a.idx < b.idx;||| 21 }||| 22 return a.val < b.val;||| 23 }||| 24 bool cmp1(num a, num b) { return a.idx < b.idx; }||| 25 bool cmp2(num a, num b) {||| 26 if (a.val == b.val) {||| 27 if ((a.dd - 1) / m == (b.dd - 1) / m) return a.idx > b.idx;||| 28 return (a.dd - 1) / m < (b.dd - 1) / m;||| 29 }||| 30 return a.val < b.val;||| 31 }||| 32 long long c[505][505];||| 33 long long lowbit(long long x) { return x & (-x); }||| 34 void update(long long x, long long k, long long pos) {||| 35 for (long long i = x; i <= m; i += lowbit(i)) c[pos][i] += k;||| 36 }||| 37 long long getsum(long long x, long long pos) {||| 38 long long ans = 0;||| 39 for (long long i = x; i; i -= lowbit(i)) ans += c[pos][i];||| 40 return ans;||| 41 }||| 42 bool vis[305][305];||| 43 signed main() {||| 44 long long t = read();||| 45 while (t--) {||| 46 n = read();||| 47 m = read();||| 48 for (long long i = 1; i <= n; i++)||| 49 memset(vis[i], false, sizeof(bool) * (m + 1));||| 50 for (long long i = 1; i <= n; i++)||| 51 memset(c[i], 0, sizeof(long long) * (n + 1));||| 52 for (long long i = 1; i <= m * n; i++) {||| 53 a[i].idx = i;||| 54 a[i].val = read();||| 55 }||| 56 sort(a + 1, a + 1 + m * n, cmp);||| 57 long long ans = 0;||| 58 for (long long i = 1; i <= m * n; i++) a[i].dd = i;||| 59 sort(a + 1, a + 1 + m * n, cmp2);||| 60 for (long long i = 1; i <= m * n; i++) a[i].d = i;||| 61 sort(a + 1, a + 1 + m * n, cmp1);||| 62 for (long long i = 1; i <= m * n; i++) {||| 63 long long d = a[i].d;||| 64 long long pos = (d - 1) / m + 1;||| 65 long long aim = (d - 1) % m + 1;||| 66 ans += getsum(aim, pos);||| 67 update(aim, 1, pos);||| 68 }||| 69 printf(""%lld\n"", ans);||| 70 }||| 71 return 0;||| 72 }||| "	51 memset(c[i], 0, sizeof(long long) * (m + 1));
88	145	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double pi = acos(-1.0);||| 4 const double eps = 1e-10;||| 5 const int MOD = 998244353;||| 6 const int INF = 0x3f3f3f3f;||| 7 const int maxn = 3e2 + 10;||| 8 const int maxm = maxn * maxn;||| 9 vector<int> arr;||| 10 int find(int first) {||| 11 return lower_bound(arr.begin(), arr.end(), first) - arr.begin() + 1;||| 12 }||| 13 int c[maxn][maxm], num[maxm];||| 14 pair<int, int> b[maxm];||| 15 void add(int first, int second, int z) {||| 16 while (first < maxm) {||| 17 c[second][first] += z;||| 18 first += first & -first;||| 19 }||| 20 }||| 21 int ask(int first, int second) {||| 22 int sum = 0;||| 23 while (first) {||| 24 sum += c[second][first];||| 25 first -= first & -first;||| 26 }||| 27 return sum;||| 28 }||| 29 int main() {||| 30 ios::sync_with_stdio(false);||| 31 int __;||| 32 cin >> __;||| 33 while (__--) {||| 34 int n, m;||| 35 cin >> n >> m;||| 36 for (int i = 1; i <= n * m; ++i) {||| 37 int num;||| 38 cin >> num;||| 39 b[i].first = num;||| 40 b[i].second = i;||| 41 arr.push_back(num);||| 42 }||| 43 sort(b + 1, b + n * m + 1);||| 44 for (int i = 1; i <= n * m; ++i) num[b[i].second] = (i - 1) / m + 1;||| 45 sort(arr.begin(), arr.end());||| 46 arr.erase(unique(arr.begin(), arr.end()), arr.end());||| 47 long long sum = 0;||| 48 for (int i = 1; i <= n * m; ++i) swap(b[i].first, b[i].second);||| 49 sort(b + 1, b + n * m + 1);||| 50 for (int i = 1; i <= n * m; ++i) swap(b[i].first, b[i].second);||| 51 for (int i = 1; i <= n * m; ++i) {||| 52 b[i].first = find(b[i].first);||| 53 sum += ask(b[i].first - 1, num[b[i].second]);||| 54 add(b[i].first, num[b[i].second], 1);||| 55 }||| 56 cout << sum << '\n';||| 57 for (int i = 1; i <= n * m; ++i) add(b[i].first, num[b[i].second], -1);||| 58 arr.clear();||| 59 }||| 60 return 0;||| 61 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double pi = acos(-1.0);||| 4 const double eps = 1e-10;||| 5 const int MOD = 998244353;||| 6 const int INF = 0x3f3f3f3f;||| 7 const int maxn = 3e2 + 10;||| 8 const int maxm = maxn * maxn;||| 9 vector<int> arr;||| 10 int find(int first) {||| 11 return lower_bound(arr.begin(), arr.end(), first) - arr.begin() + 1;||| 12 }||| 13 int c[maxn][maxm], num[maxm];||| 14 pair<int, int> b[maxm];||| 15 void add(int first, int second, int z) {||| 16 while (first < maxn) {||| 17 c[second][first] += z;||| 18 first += first & -first;||| 19 }||| 20 }||| 21 int ask(int first, int second) {||| 22 int sum = 0;||| 23 while (first) {||| 24 sum += c[second][first];||| 25 first -= first & -first;||| 26 }||| 27 return sum;||| 28 }||| 29 int main() {||| 30 ios::sync_with_stdio(false);||| 31 int __;||| 32 cin >> __;||| 33 while (__--) {||| 34 int n, m;||| 35 cin >> n >> m;||| 36 for (int i = 1; i <= n * m; ++i) {||| 37 int num;||| 38 cin >> num;||| 39 b[i].first = num;||| 40 b[i].second = i;||| 41 arr.push_back(num);||| 42 }||| 43 sort(b + 1, b + n * m + 1);||| 44 for (int i = 1; i <= n * m; ++i) num[b[i].second] = (i - 1) / m + 1;||| 45 sort(arr.begin(), arr.end());||| 46 arr.erase(unique(arr.begin(), arr.end()), arr.end());||| 47 long long sum = 0;||| 48 for (int i = 1; i <= n * m; ++i) swap(b[i].first, b[i].second);||| 49 sort(b + 1, b + n * m + 1);||| 50 for (int i = 1; i <= n * m; ++i) swap(b[i].first, b[i].second);||| 51 for (int i = 1; i <= n * m; ++i) {||| 52 b[i].first = find(b[i].first);||| 53 sum += ask(b[i].first - 1, num[b[i].second]);||| 54 add(b[i].first, num[b[i].second], 1);||| 55 }||| 56 cout << sum << '\n';||| 57 for (int i = 1; i <= n * m; ++i) add(b[i].first, num[b[i].second], -1);||| 58 arr.clear();||| 59 }||| 60 return 0;||| 61 }||| 	16 while (first < maxm) {
89	20	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<int> adj[200001];||| 5 int cp, lv;||| 6 bool dfs(int x, int p) {||| 7 int count = (int)adj[x].size() - (x != p);||| 8 for (auto to : adj[x])||| 9 if (to != p) {||| 10 if (dfs(to, x)) count--;||| 11 }||| 12 if (count) {||| 13 if (x != 1) cp++;||| 14 lv += count;||| 15 }||| 16 return count > 0;||| 17 }||| 18 int solve() {||| 19 cp = 0, lv = 0;||| 20 int v = dfs(1, 1);||| 21 if (v) return lv - cp;||| 22 return lv - cp + 1;||| 23 }||| 24 int main() {||| 25 int tc;||| 26 scanf(""%d"", &tc);||| 27 while (tc--) {||| 28 scanf(""%d"", &n);||| 29 for (int i = 1; i <= n; ++i) adj[i].clear();||| 30 for (int i = 0; i < n - 1; ++i) {||| 31 int u, v;||| 32 scanf(""%d%d"", &u, &v);||| 33 adj[u].emplace_back(v);||| 34 adj[v].emplace_back(u);||| 35 }||| 36 printf(""%d\n"", solve());||| 37 }||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<int> adj[200001];||| 5 int cp, lv;||| 6 bool dfs(int x, int p) {||| 7 int count = (int)adj[x].size() - (x != p);||| 8 for (auto to : adj[x])||| 9 if (to != p) {||| 10 if (dfs(to, x)) count--;||| 11 }||| 12 if (count) {||| 13 if (x != 1) cp++;||| 14 lv += count;||| 15 }||| 16 return count > 0;||| 17 }||| 18 int solve() {||| 19 cp = 0, lv = 0;||| 20 int v = dfs(1, 1);||| 21 if (v) return lv - cp;||| 22 return lv - cp + 1;||| 23 }||| 24 int main() {||| 25 int tc;||| 26 scanf(""%d"", &tc);||| 27 while (tc--) {||| 28 scanf(""%d"", &n);||| 29 for (int i = 1; i <= n; ++i) adj[i].clear();||| 30 for (int i = 0; i < n - 1; ++i) {||| 31 int u, v;||| 32 scanf(""%d%d"", &u, &v);||| 33 adj[u].emplace_back(v);||| 34 adj[v].emplace_back(u);||| 35 }||| 36 printf(""(%d)\n"", solve());||| 37 }||| 38 }||| "	"36 printf(""%d\n"", solve());"
90	27	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int inf = 1e10 + 5;||| 4 const int MX = 2e5 + 5;||| 5 int t, n, m, l, r;||| 6 long long int a[MX], dp[MX][2], cost1, cost2, cost3;||| 7 vector<pair<long long int, long long int> > seg[MX];||| 8 void getCost(vector<pair<long long int, long long int> > &v, int idx) {||| 9 if (v.empty()) {||| 10 cost1 = cost2 = cost3 = 0;||| 11 return;||| 12 }||| 13 cost1 = (v.back().first - a[idx - 1]) * 2,||| 14 cost2 = v.back().first - a[idx - 1], cost3 = v.back().first - a[idx - 1];||| 15 long long int minR = v.back().second;||| 16 for (int i = (int)v.size() - 1; i; i--) {||| 17 minR = min(minR, v[i].second);||| 18 long long int distL = v[i - 1].first - a[idx - 1], distR = a[idx] - minR;||| 19 cost1 = min(cost1, distL * 2 + distR);||| 20 cost2 = min(cost2, distL + distR);||| 21 cost3 = min(cost3, distL + distR * 2);||| 22 }||| 23 }||| 24 int main() {||| 25 cin.tie(nullptr), ios::sync_with_stdio(false);||| 26 cin >> t;||| 27 while (t--) {||| 28 cin >> n >> m;||| 29 for (int i = 0; i < n; i++) cin >> a[i];||| 30 sort(a, a + n);||| 31 a[n] = inf;||| 32 for (int i = 0; i <= n; i++) seg[i].clear();||| 33 for (int i = 0; i < m; i++) {||| 34 cin >> l >> r;||| 35 int p = lower_bound(a, a + n, l) - a;||| 36 if (p != n && a[p] <= r) continue;||| 37 seg[p].emplace_back(l, r);||| 38 }||| 39 for (int i = 0; i <= n; i++) sort(seg[i].begin(), seg[i].end());||| 40 for (int i = 0; i <= n; i++) {||| 41 long long int minR = inf;||| 42 for (auto &p : seg[i]) minR = min(minR, p.second);||| 43 if (i == 0) {||| 44 if (seg[i].empty())||| 45 dp[i][0] = dp[i][1] = 0;||| 46 else {||| 47 dp[i][0] = a[0] - minR;||| 48 dp[i][1] = (a[0] - minR) * 2;||| 49 }||| 50 } else {||| 51 getCost(seg[i], i);||| 52 long long int costR = 0;||| 53 if (!seg[i].empty()) costR = a[i] - minR;||| 54 dp[i][0] = min(min(cost1, costR) + dp[i - 1][0], cost2 + dp[i - 1][1]);||| 55 dp[i][1] =||| 56 min(min(cost2 * 2, costR * 2) + dp[i - 1][0], cost3 + dp[i - 1][1]);||| 57 }||| 58 }||| 59 cout << dp[n][0] << ""\n"";||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int inf = 1e10 + 5;||| 4 const int MX = 2e5 + 5;||| 5 int t, n, m, l, r;||| 6 long long int a[MX], dp[MX][2], cost1, cost2, cost3;||| 7 vector<pair<long long int, long long int> > seg[MX];||| 8 void getCost(vector<pair<long long int, long long int> > &v, int idx) {||| 9 if (v.empty()) {||| 10 cost1 = cost2 = cost3 = 0;||| 11 return;||| 12 }||| 13 cost1 = (v.back().first - a[idx - 1]) * 2,||| 14 cost2 = v.back().first - a[idx - 1], cost3 = v.back().first - a[idx - 1];||| 15 long long int minR = v.back().second;||| 16 for (int i = (int)v.size() - 1; i; i--) {||| 17 minR = min(minR, v[i].second);||| 18 long long int distL = v[i - 1].first - a[idx - 1], distR = a[idx] - minR;||| 19 cost1 = min(cost1, distL * 2 + distR);||| 20 cost2 = min(cost2, distL + distR);||| 21 cost3 = min(cost3, distL + distR * 2);||| 22 }||| 23 }||| 24 int main() {||| 25 cin.tie(nullptr), ios::sync_with_stdio(false);||| 26 cin >> t;||| 27 while (t--) {||| 28 cin >> n >> m;||| 29 for (int i = 0; i < n; i++) cin >> a[i];||| 30 sort(a, a + n);||| 31 a[n] = inf;||| 32 for (int i = 0; i <= n; i++) seg[i].clear();||| 33 for (int i = 0; i < m; i++) {||| 34 cin >> l >> r;||| 35 int p = lower_bound(a, a + n, l) - a;||| 36 if (p != n && a[p] <= r) continue;||| 37 seg[p].emplace_back(l, r);||| 38 }||| 39 for (int i = 0; i <= n; i++) sort(seg[i].begin(), seg[i].end());||| 40 for (int i = 0; i <= n; i++) {||| 41 long long int minR = inf;||| 42 for (auto &p : seg[i]) minR = min(minR, p.second);||| 43 if (i == 0) {||| 44 if (seg[i].empty())||| 45 dp[i][0] = dp[i][1] = 0;||| 46 else {||| 47 dp[i][0] = a[0] - minR;||| 48 dp[i][1] = (a[0] - minR) * 2;||| 49 }||| 50 } else {||| 51 getCost(seg[i], i);||| 52 long long int costR = 0;||| 53 if (!seg[i].empty()) costR = a[i] - minR;||| 54 dp[i][0] =||| 55 min(min(cost1 * 2, costR) + dp[i - 1][0], cost2 + dp[i - 1][1]);||| 56 dp[i][1] =||| 57 min(min(cost2 * 2, costR * 2) + dp[i - 1][0], cost3 + dp[i - 1][1]);||| 58 }||| 59 }||| 60 cout << dp[n][0] << ""\n"";||| 61 }||| 62 }||| "	54 dp[i][0] = min(min(cost1, costR) + dp[i - 1][0], cost2 + dp[i - 1][1]);
93	126	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a, b;||| 5 cin >> a >> b;||| 6 int x;||| 7 if (a % 4 == 1)||| 8 x = a - 1;||| 9 else if (a % 4 == 2)||| 10 x = 1;||| 11 else if (a % 4 == 3)||| 12 x = a;||| 13 else||| 14 x = 0;||| 15 if (x == b)||| 16 cout << a << ""\n"";||| 17 else if ((x ^ b) != a)||| 18 cout << a + 1 << ""\n"";||| 19 else||| 20 cout << a + 2 << ""\n"";||| 21 return;||| 22 }||| 23 signed main() {||| 24 int t;||| 25 cin >> t;||| 26 while (t--) solve();||| 27 return 0;||| 28 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a, b;||| 5 cin >> a >> b;||| 6 int x;||| 7 if (a % 4 == 1)||| 8 x = a - 1;||| 9 else if (a % 4 == 2)||| 10 x = 1;||| 11 else if (a % 4 == 3)||| 12 x = a;||| 13 else||| 14 x = b;||| 15 if (x == b)||| 16 cout << a << ""\n"";||| 17 else if ((x ^ b) != a)||| 18 cout << a + 1 << ""\n"";||| 19 else||| 20 cout << a + 2 << ""\n"";||| 21 return;||| 22 }||| 23 signed main() {||| 24 int t;||| 25 cin >> t;||| 26 while (t--) solve();||| 27 return 0;||| 28 }||| "	14 x = 0;
94	118	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[11], wei;||| 4 int D[11] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};||| 5 int S[11] = {9, 8, 7, 6, 5, 4, 3, 2, 1, 0};||| 6 long long ans;||| 7 int t;||| 8 int bigf;||| 9 void jian(int x) {||| 10 for (register int i = x; i <= wei; i += 2) {||| 11 if (a[i] != 0) {||| 12 a[i]--;||| 13 bigf = 1;||| 14 break;||| 15 }||| 16 a[i] = 9;||| 17 }||| 18 if (bigf == 0)||| 19 for (register int i = x; i <= wei; i += 2) {||| 20 a[i] = 0;||| 21 }||| 22 return;||| 23 }||| 24 void jia(int x) {||| 25 for (register int i = x; i <= wei; i += 2) {||| 26 if (a[i] != 9) {||| 27 a[i]++;||| 28 break;||| 29 }||| 30 a[i] = 0;||| 31 }||| 32 return;||| 33 }||| 34 void dfs(long long sco, int x) {||| 35 if (sco == 0) return;||| 36 int flag = 1;||| 37 int ten = 1;||| 38 for (register int i = 1; i <= x; i++)||| 39 for (register int i = x; i <= wei; i++) {||| 40 if (a[i] != 0) {||| 41 flag = 0;||| 42 break;||| 43 }||| 44 }||| 45 if (flag) {||| 46 ans += sco;||| 47 return;||| 48 }||| 49 if (x == wei + 1) {||| 50 ans += sco;||| 51 return;||| 52 }||| 53 bigf = 0;||| 54 jian(x + 2);||| 55 if (bigf == 1) {||| 56 dfs(sco * S[a[x]], x + 1);||| 57 jia(x + 2);||| 58 }||| 59 dfs(sco * D[a[x]], x + 1);||| 60 return;||| 61 }||| 62 int main() {||| 63 int n;||| 64 cin >> n;||| 65 for (register int o = 1; o <= n; o++) {||| 66 cin >> t;||| 67 ans = 0;||| 68 for (int i = 1; i <= 10; i++) {||| 69 a[i] = t % 10;||| 70 t /= 10;||| 71 if (t == 0) {||| 72 wei = i;||| 73 break;||| 74 }||| 75 }||| 76 dfs(1, 1);||| 77 cout << ans - 2 << endl;||| 78 }||| 79 return 0;||| 80 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int a[11], wei;||| 4 int D[11] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};||| 5 int S[11] = {9, 8, 7, 6, 5, 4, 3, 2, 1, 0};||| 6 long long ans;||| 7 int t;||| 8 int bigf;||| 9 void jian(int x) {||| 10 for (register int i = x; i <= wei; i += 2) {||| 11 if (a[i] != 0) {||| 12 a[i]--;||| 13 bigf = 1;||| 14 break;||| 15 }||| 16 a[i] = 9;||| 17 }||| 18 if (bigf == 0)||| 19 for (register int i = x; i <= wei; i += 2) {||| 20 a[i] = 0;||| 21 }||| 22 return;||| 23 }||| 24 void jia(int x) {||| 25 for (register int i = x; i <= wei; i += 2) {||| 26 if (a[i] != 9) {||| 27 a[i]++;||| 28 break;||| 29 }||| 30 a[i] = 0;||| 31 }||| 32 return;||| 33 }||| 34 void dfs(long long sco, int x) {||| 35 if (sco == 0) return;||| 36 int flag = 1;||| 37 int ten = 1;||| 38 for (register int i = 1; i <= x; i++)||| 39 for (register int i = x; i <= wei; i++) {||| 40 if (a[i] != 0) {||| 41 flag = 0;||| 42 break;||| 43 }||| 44 }||| 45 if (flag) {||| 46 ans += sco;||| 47 return;||| 48 }||| 49 if (x == wei + 1) {||| 50 ans += sco;||| 51 return;||| 52 }||| 53 bigf = 0;||| 54 jian(x + 2);||| 55 if (bigf == 1) {||| 56 dfs(sco * S[a[x]], x + 1);||| 57 jia(x + 2);||| 58 }||| 59 dfs(sco * D[a[x]], x + 1);||| 60 return;||| 61 }||| 62 int main() {||| 63 int n;||| 64 cin >> n;||| 65 for (register int o = 1; o <= n; o++) {||| 66 cin >> t;||| 67 ans = 0;||| 68 for (int i = 1; i <= 9; i++) {||| 69 a[i] = t % 10;||| 70 t /= 10;||| 71 if (t == 0) {||| 72 wei = i;||| 73 break;||| 74 }||| 75 }||| 76 dfs(1, 1);||| 77 cout << ans - 2 << endl;||| 78 }||| 79 return 0;||| 80 }||| 	68 for (int i = 1; i <= 10; i++) {
95	45	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 7 void __print(int x) { cerr << x; }||| 8 void __print(long x) { cerr << x; }||| 9 void __print(long long x) { cerr << x; }||| 10 void __print(unsigned x) { cerr << x; }||| 11 void __print(unsigned long x) { cerr << x; }||| 12 void __print(unsigned long long x) { cerr << x; }||| 13 void __print(float x) { cerr << x; }||| 14 void __print(double x) { cerr << x; }||| 15 void __print(long double x) { cerr << x; }||| 16 void __print(char x) { cerr << '\'' << x << '\''; }||| 17 void __print(const char *x) { cerr << '""' << x << '""'; }||| 18 void __print(const string &x) { cerr << '""' << x << '""'; }||| 19 template <typename T, typename V>||| 20 void __print(const pair<T, V> &x) {||| 21 cerr << '{';||| 22 __print(x.first);||| 23 cerr << ',';||| 24 __print(x.second);||| 25 cerr << '}';||| 26 }||| 27 template <typename T>||| 28 void __print(const T &x) {||| 29 int f = 0;||| 30 cerr << '{';||| 31 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 32 cerr << ""}"";||| 33 }||| 34 void _print() { cerr << ""]\n""; }||| 35 template <typename T, typename... V>||| 36 void _print(T t, V... v) {||| 37 __print(t);||| 38 if (sizeof...(v)) cerr << "", "";||| 39 _print(v...);||| 40 }||| 41 long long int MOD = 998244353;||| 42 pair<long long int, long long int> dir[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};||| 43 long long int inv(long long int a, long long int b) {||| 44 return 1 < a ? b - inv(b % a, a) * b / a : 1;||| 45 }||| 46 vector<long long int> suffix(vector<long long int> s_) {||| 47 vector<long long int> ss(s_.size());||| 48 long long int m = s_.size();||| 49 ss[m - 1] = s_[m - 1];||| 50 for (long long int i = (m - 1 - 1); i >= (0); --i) ss[i] = ss[i + 1] + s_[i];||| 51 return ss;||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(false);||| 55 cin.tie(nullptr);||| 56 long long int T;||| 57 cin >> T;||| 58 while (T--) {||| 59 long long int s;||| 60 cin >> s;||| 61 long long int n;||| 62 cin >> n;||| 63 long long int x = s;||| 64 vector<long long int> s_;||| 65 while (x) {||| 66 s_.push_back(x % 10);||| 67 x /= 10;||| 68 }||| 69 reverse((s_).begin(), (s_).end());||| 70 vector<long long int> suf = suffix(s_);||| 71 long long int m = s_.size();||| 72 for (long long int i = (m - 1 - 1); i >= (0); --i)||| 73 suf[i] = suf[i + 1] + s_[i];||| 74 vector<long long int> ans;||| 75 for (long long int i = (0); i < (m); ++i) {||| 76 x = powl(10, (m - 1) - i);||| 77 if (n <= s_[i]) {||| 78 for (long long int j = (0); j < (n); ++j) ans.push_back(x);||| 79 s -= x * n;||| 80 ans.back() += s;||| 81 break;||| 82 } else {||| 83 while (s - x >= n - 1) {||| 84 ans.push_back(x);||| 85 n--;||| 86 s_[i]--;||| 87 s -= x;||| 88 }||| 89 s_[i + 1] += 10 * s_[i];||| 90 }||| 91 }||| 92 for (auto a : ans) cout << a << ' ';||| 93 cout << '\n';||| 94 };||| 95 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC target(""avx2"")||| 3 #pragma GCC optimize(""O3"")||| 4 #pragma GCC optimize(""unroll-loops"")||| 5 using namespace std;||| 6 void __print(bool x) { cerr << (x ? ""true"" : ""false""); }||| 7 void __print(int x) { cerr << x; }||| 8 void __print(long x) { cerr << x; }||| 9 void __print(long long x) { cerr << x; }||| 10 void __print(unsigned x) { cerr << x; }||| 11 void __print(unsigned long x) { cerr << x; }||| 12 void __print(unsigned long long x) { cerr << x; }||| 13 void __print(float x) { cerr << x; }||| 14 void __print(double x) { cerr << x; }||| 15 void __print(long double x) { cerr << x; }||| 16 void __print(char x) { cerr << '\'' << x << '\''; }||| 17 void __print(const char *x) { cerr << '""' << x << '""'; }||| 18 void __print(const string &x) { cerr << '""' << x << '""'; }||| 19 template <typename T, typename V>||| 20 void __print(const pair<T, V> &x) {||| 21 cerr << '{';||| 22 __print(x.first);||| 23 cerr << ',';||| 24 __print(x.second);||| 25 cerr << '}';||| 26 }||| 27 template <typename T>||| 28 void __print(const T &x) {||| 29 int f = 0;||| 30 cerr << '{';||| 31 for (auto &i : x) cerr << (f++ ? "","" : """"), __print(i);||| 32 cerr << ""}"";||| 33 }||| 34 void _print() { cerr << ""]\n""; }||| 35 template <typename T, typename... V>||| 36 void _print(T t, V... v) {||| 37 __print(t);||| 38 if (sizeof...(v)) cerr << "", "";||| 39 _print(v...);||| 40 }||| 41 long long int MOD = 998244353;||| 42 pair<long long int, long long int> dir[4] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};||| 43 long long int inv(long long int a, long long int b) {||| 44 return 1 < a ? b - inv(b % a, a) * b / a : 1;||| 45 }||| 46 vector<long long int> suffix(vector<long long int> s_) {||| 47 vector<long long int> ss(s_.size());||| 48 long long int m = s_.size();||| 49 ss[m - 1] = s_[m - 1];||| 50 for (long long int i = (m - 1 - 1); i >= (0); --i) ss[i] = ss[i + 1] + s_[i];||| 51 return ss;||| 52 }||| 53 int main() {||| 54 ios_base::sync_with_stdio(false);||| 55 cin.tie(nullptr);||| 56 long long int T;||| 57 cin >> T;||| 58 while (T--) {||| 59 long long int s;||| 60 cin >> s;||| 61 long long int n;||| 62 cin >> n;||| 63 long long int x = s;||| 64 vector<long long int> s_;||| 65 while (x) {||| 66 s_.push_back(x % 10);||| 67 x /= 10;||| 68 }||| 69 reverse((s_).begin(), (s_).end());||| 70 vector<long long int> suf = suffix(s_);||| 71 long long int m = s_.size();||| 72 for (long long int i = (m - 1 - 1); i >= (0); --i)||| 73 suf[i] = suf[i + 1] + s_[i];||| 74 vector<long long int> ans;||| 75 for (long long int i = (0); i < (m); ++i) {||| 76 x = powl(10, (m - 1) - i);||| 77 if (n <= s_[i]) {||| 78 for (long long int j = (0); j < (n); ++j) ans.push_back(x);||| 79 s -= x * n;||| 80 ans.back() += s;||| 81 break;||| 82 } else {||| 83 while (s - x >= n) {||| 84 ans.push_back(x);||| 85 n--;||| 86 s_[i]--;||| 87 s -= x;||| 88 }||| 89 s_[i + 1] += 10 * s_[i];||| 90 }||| 91 }||| 92 for (auto a : ans) cout << a << ' ';||| 93 cout << '\n';||| 94 };||| 95 }||| "	83 while (s - x >= n - 1) {
95	212	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int codefo;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 cin >> codefo;||| 8 while (codefo--) {||| 9 int s, n;||| 10 cin >> s >> n;||| 11 long long t = 10;||| 12 vector<int> temp;||| 13 int te = s;||| 14 while (te > 0) {||| 15 temp.push_back(te % t);||| 16 te -= te % t;||| 17 t *= 10;||| 18 }||| 19 int cnt = 0;||| 20 int ten = 1;||| 21 int sz = temp.size();||| 22 vector<int> ko(sz);||| 23 for (int i = 0; i < sz; i++) {||| 24 ko[i] = temp[i] / ten;||| 25 cnt += ko[i];||| 26 ten *= 10;||| 27 }||| 28 if (cnt >= n) {||| 29 ten = 1;||| 30 int now = 0;||| 31 int sum = 0;||| 32 for (int i = 0; i < sz; i++) {||| 33 for (int j = 0; j < ko[i]; j++) {||| 34 if (now < n - 1) {||| 35 cout << ten << ' ';||| 36 now++;||| 37 } else {||| 38 sum += ten;||| 39 }||| 40 }||| 41 ten *= 10;||| 42 }||| 43 cout << sum << endl;||| 44 continue;||| 45 }||| 46 ten = 1;||| 47 while (cnt < n) {||| 48 while (ko[1] == 0) {||| 49 if (cnt >= n) break;||| 50 for (int j = 2; j < sz; j++) {||| 51 if (ko[j] > 0) {||| 52 ko[j] -= 1;||| 53 ko[j - 1] += 10;||| 54 cnt += 9;||| 55 if (cnt >= n) break;||| 56 for (int k = j - 1; k > 1; k--) {||| 57 ko[k] -= 1;||| 58 ko[k - 1] += 10;||| 59 cnt += 9;||| 60 if (cnt >= n) break;||| 61 }||| 62 break;||| 63 }||| 64 if (cnt >= n) break;||| 65 }||| 66 }||| 67 if (cnt >= n) break;||| 68 ko[1] -= 1;||| 69 ko[0] += 10;||| 70 cnt += 9;||| 71 }||| 72 int now = 0, sum = 0;||| 73 vector<int> ans(n);||| 74 int id = 0;||| 75 ten = 1;||| 76 for (int i = 0; i < sz; i++) {||| 77 for (int j = 0; j < ko[i]; j++) {||| 78 ans[id] += ten;||| 79 id = (id + 1) % n;||| 80 }||| 81 ten *= 10;||| 82 }||| 83 for (int i = 0; i < n; i++) {||| 84 if (i != n - 1)||| 85 cout << ans[i] << ' ';||| 86 else||| 87 cout << ans[i] << endl;||| 88 }||| 89 }||| 90 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int codefo;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(nullptr);||| 7 cin >> codefo;||| 8 while (codefo--) {||| 9 int s, n;||| 10 cin >> s >> n;||| 11 long long t = 10;||| 12 vector<int> temp;||| 13 int te = s;||| 14 while (te > 0) {||| 15 temp.push_back(te % t);||| 16 te -= te % t;||| 17 t *= 10;||| 18 }||| 19 int cnt = 0;||| 20 int ten = 1;||| 21 int sz = temp.size();||| 22 vector<int> ko(sz);||| 23 for (int i = 0; i < sz; i++) {||| 24 ko[i] = temp[i] / ten;||| 25 cnt += ko[i];||| 26 ten *= 10;||| 27 }||| 28 if (cnt >= n) {||| 29 ten = 1;||| 30 int now = 0;||| 31 int sum = 0;||| 32 for (int i = 0; i < sz; i++) {||| 33 for (int j = 0; j < ko[i]; j++) {||| 34 if (now < n - 1) {||| 35 cout << ten << ' ';||| 36 now++;||| 37 } else {||| 38 sum += ten;||| 39 }||| 40 }||| 41 ten *= 10;||| 42 }||| 43 cout << sum << endl;||| 44 continue;||| 45 }||| 46 ten = 1;||| 47 while (cnt < n) {||| 48 while (ko[1] == 0) {||| 49 if (cnt >= n) break;||| 50 for (int j = 2; j < sz; j++) {||| 51 if (ko[j] > 0) {||| 52 ko[j] -= 1;||| 53 ko[j - 1] += 10;||| 54 cnt += 9;||| 55 if (cnt >= n) break;||| 56 for (int k = j - 1; k > 1; k--) {||| 57 ko[k] -= 1;||| 58 ko[k - 1] += 10;||| 59 cnt += 9;||| 60 if (cnt >= n) break;||| 61 }||| 62 }||| 63 if (cnt >= n) break;||| 64 }||| 65 }||| 66 if (cnt >= n) break;||| 67 ko[1] -= 1;||| 68 ko[0] += 10;||| 69 cnt += 9;||| 70 }||| 71 int now = 0, sum = 0;||| 72 vector<int> ans(n);||| 73 int id = 0;||| 74 ten = 1;||| 75 for (int i = 0; i < sz; i++) {||| 76 for (int j = 0; j < ko[i]; j++) {||| 77 ans[id] += ten;||| 78 id = (id + 1) % n;||| 79 }||| 80 ten *= 10;||| 81 }||| 82 for (int i = 0; i < n; i++) {||| 83 if (i != n - 1)||| 84 cout << ans[i] << ' ';||| 85 else||| 86 cout << ans[i] << endl;||| 87 }||| 88 }||| 89 }||| 	62 break;
96	64	"1 #include <bits/stdc++.h>||| 2 using std::max;||| 3 using std::min;||| 4 const int maxn = 2e5 + 10;||| 5 int n, m, a[maxn];||| 6 struct node {||| 7 int len[2], s, e, size;||| 8 long long sum;||| 9 };||| 10 class Segtree {||| 11 private:||| 12 int bound;||| 13 node data[maxn << 2];||| 14 inline node unite(const node &x, const node &y) {||| 15 node res;||| 16 res.s = x.s, res.e = y.e;||| 17 res.sum = x.sum + y.sum;||| 18 res.size = x.size + y.size;||| 19 if (x.e <= y.s) {||| 20 if (x.len[0] == x.size)||| 21 res.len[0] = x.len[0] + y.len[0];||| 22 else||| 23 res.len[0] = x.len[0];||| 24 if (y.len[1] == y.size)||| 25 res.len[1] = x.len[1] + y.len[1];||| 26 else||| 27 res.len[1] = y.len[1];||| 28 res.sum += 1ll * x.len[1] * y.len[0];||| 29 } else {||| 30 res.len[0] = x.len[0];||| 31 res.len[1] = y.len[1];||| 32 }||| 33 return res;||| 34 }||| 35 inline void pushup(int u) { data[u] = unite(data[u << 1], data[u << 1 | 1]); }||| 36 void build(int s, int e, int u) {||| 37 if (s == e) {||| 38 data[u].s = a[s], data[u].e = a[e];||| 39 data[u].len[0] = 1, data[u].len[1] = 1;||| 40 data[u].size = 1, data[u].sum = 1;||| 41 return;||| 42 }||| 43 int mid = (s + e) >> 1;||| 44 build(s, mid, u << 1), build(mid + 1, e, u << 1 | 1);||| 45 pushup(u);||| 46 }||| 47 void modify(int s, int e, int u, int pos, int key) {||| 48 if (s == e) {||| 49 a[pos] = key;||| 50 data[u].s = key, data[u].e = key;||| 51 return;||| 52 }||| 53 int mid = (s + e) >> 1;||| 54 if (pos <= mid)||| 55 modify(s, mid, u << 1, pos, key);||| 56 else||| 57 modify(mid + 1, e, u << 1 | 1, pos, key);||| 58 pushup(u);||| 59 }||| 60 node query(int s, int e, int u, int ql, int qr) {||| 61 if (ql <= s && e <= qr) {||| 62 return data[u];||| 63 }||| 64 int mid = (s + e) >> 1;||| 65 if (ql <= mid && qr > mid) {||| 66 return unite(query(s, mid, u << 1, ql, qr),||| 67 query(mid + 1, e, u << 1 | 1, ql, qr));||| 68 } else if (ql <= mid)||| 69 return query(s, mid, u << 1, ql, qr);||| 70 return query(mid + 1, e, u << 1 | 1, ql, qr);||| 71 }||| 72 ||| 73 public:||| 74 inline void build(int n) {||| 75 bound = n;||| 76 build(1, bound, 1);||| 77 }||| 78 inline void modify(int pos, int key) { modify(1, bound, 1, pos, key); }||| 79 inline long long query(int ql, int qr) {||| 80 return query(1, bound, 1, ql, qr).sum;||| 81 }||| 82 } tree;||| 83 int main() {||| 84 scanf(""%d%d"", &n, &m);||| 85 for (int i = 1; i <= n; ++i) scanf(""%d"", a + i);||| 86 tree.build(n);||| 87 int opt, x, y;||| 88 while (m--) {||| 89 scanf(""%d%d%d"", &opt, &x, &y);||| 90 if (opt == 1)||| 91 tree.modify(x, y);||| 92 else||| 93 printf(""%lld\n"", tree.query(x, y));||| 94 }||| 95 return 0;||| 96 }||| "	"1 #include <bits/stdc++.h>||| 2 using std::max;||| 3 using std::min;||| 4 const int maxn = 2e5 + 10;||| 5 int n, m, a[maxn];||| 6 struct node {||| 7 int len[2], s, e, size;||| 8 long long sum;||| 9 };||| 10 class Segtree {||| 11 private:||| 12 int bound;||| 13 node data[maxn << 2];||| 14 inline node unite(const node &x, const node &y) {||| 15 node res;||| 16 res.s = x.s, res.e = y.e;||| 17 res.sum = x.sum + y.sum;||| 18 res.size = x.size + y.size;||| 19 if (x.e <= y.s) {||| 20 if (x.len[0] == x.size)||| 21 res.len[0] = x.len[0] + y.len[0];||| 22 else||| 23 res.len[0] = x.len[0];||| 24 if (y.len[1] == y.size)||| 25 res.len[1] = x.len[1] + y.len[1];||| 26 else||| 27 res.len[0] = y.len[1];||| 28 res.sum += 1ll * x.len[1] * y.len[0];||| 29 } else {||| 30 res.len[0] = x.len[0];||| 31 res.len[1] = y.len[1];||| 32 }||| 33 return res;||| 34 }||| 35 inline void pushup(int u) { data[u] = unite(data[u << 1], data[u << 1 | 1]); }||| 36 void build(int s, int e, int u) {||| 37 if (s == e) {||| 38 data[u].s = a[s], data[u].e = a[e];||| 39 data[u].len[0] = 1, data[u].len[1] = 1;||| 40 data[u].size = 1, data[u].sum = 1;||| 41 return;||| 42 }||| 43 int mid = (s + e) >> 1;||| 44 build(s, mid, u << 1), build(mid + 1, e, u << 1 | 1);||| 45 pushup(u);||| 46 }||| 47 void modify(int s, int e, int u, int pos, int key) {||| 48 if (s == e) {||| 49 a[pos] = key;||| 50 data[u].s = key, data[u].e = key;||| 51 return;||| 52 }||| 53 int mid = (s + e) >> 1;||| 54 if (pos <= mid)||| 55 modify(s, mid, u << 1, pos, key);||| 56 else||| 57 modify(mid + 1, e, u << 1 | 1, pos, key);||| 58 pushup(u);||| 59 }||| 60 node query(int s, int e, int u, int ql, int qr) {||| 61 if (ql <= s && e <= qr) {||| 62 return data[u];||| 63 }||| 64 int mid = (s + e) >> 1;||| 65 if (ql <= mid && qr > mid) {||| 66 return unite(query(s, mid, u << 1, ql, qr),||| 67 query(mid + 1, e, u << 1 | 1, ql, qr));||| 68 } else if (ql <= mid)||| 69 return query(s, mid, u << 1, ql, qr);||| 70 return query(mid + 1, e, u << 1 | 1, ql, qr);||| 71 }||| 72 ||| 73 public:||| 74 inline void build(int n) {||| 75 bound = n;||| 76 build(1, bound, 1);||| 77 }||| 78 inline void modify(int pos, int key) { modify(1, bound, 1, pos, key); }||| 79 inline long long query(int ql, int qr) {||| 80 return query(1, bound, 1, ql, qr).sum;||| 81 }||| 82 } tree;||| 83 int main() {||| 84 scanf(""%d%d"", &n, &m);||| 85 for (int i = 1; i <= n; ++i) scanf(""%d"", a + i);||| 86 tree.build(n);||| 87 int opt, x, y;||| 88 while (m--) {||| 89 scanf(""%d%d%d"", &opt, &x, &y);||| 90 if (opt == 1)||| 91 tree.modify(x, y);||| 92 else||| 93 printf(""%lld\n"", tree.query(x, y));||| 94 }||| 95 return 0;||| 96 }||| "	27 res.len[1] = y.len[1];
96	92	"1 #include <bits/stdc++.h>||| 2 struct yeet {||| 3 long long start;||| 4 long long end;||| 5 long long val;||| 6 long long sval;||| 7 long long eval;||| 8 bool b;||| 9 };||| 10 yeet tree[800010], ans;||| 11 long long arr[200010], n, q, a, b, c;||| 12 yeet merge(yeet x, yeet y) {||| 13 if (x.start == 0) return y;||| 14 yeet z;||| 15 bool d = arr[x.end] <= arr[y.start];||| 16 z.start = x.start;||| 17 z.end = y.end;||| 18 z.val = x.val + y.val;||| 19 if (d) z.val += x.eval * y.sval;||| 20 z.sval = x.sval;||| 21 if (x.b && d) z.sval += y.sval;||| 22 z.eval = y.eval;||| 23 if (y.b && d) z.eval += x.eval;||| 24 z.b = x.b && y.b && d;||| 25 return z;||| 26 }||| 27 void build_segtree(long long s, long long e, long long x) {||| 28 if (s == e) {||| 29 tree[x] = {s, e, 1, 1, 1, true};||| 30 return;||| 31 }||| 32 build_segtree(s, (s + e) / 2, 2 * x);||| 33 build_segtree((s + e) / 2 + 1, e, 2 * x + 1);||| 34 tree[x] = merge(tree[2 * x], tree[2 * x + 1]);||| 35 }||| 36 void change(long long idx, long long to, long long x) {||| 37 if (tree[x].start == tree[x].end) return;||| 38 long long mid = (tree[x].start + tree[x].end) / 2;||| 39 if (idx <= mid)||| 40 change(idx, to, 2 * x);||| 41 else||| 42 change(idx, to, 2 * x + 1);||| 43 tree[x] = merge(tree[2 * x], tree[2 * x + 1]);||| 44 }||| 45 void sum(long long s, long long e, long long x) {||| 46 if (e < tree[x].start) return;||| 47 if (s > tree[x].end) return;||| 48 if (s <= tree[x].start && e >= tree[x].end) {||| 49 ans = merge(ans, tree[x]);||| 50 return;||| 51 }||| 52 sum(s, e, 2 * x);||| 53 sum(s, e, 2 * x + 1);||| 54 }||| 55 signed main() {||| 56 scanf(""%lld%lld"", &n, &q);||| 57 for (long long i = 1; i <= n; i++) scanf(""%lld"", &arr[i]);||| 58 build_segtree(1, n, 1);||| 59 for (long long i = 1; i <= q; i++) {||| 60 scanf(""%lld%lld%lld"", &a, &b, &c);||| 61 if (a == 1)||| 62 arr[b] = c, change(b, c, 1);||| 63 else {||| 64 sum(b, c, 1);||| 65 printf(""%lld\n"", ans.val);||| 66 ans = {0, 0, 0, 0, 0, true};||| 67 }||| 68 }||| 69 }||| "	"1 #include <bits/stdc++.h>||| 2 struct yeet {||| 3 long long start;||| 4 long long end;||| 5 long long val;||| 6 long long sval;||| 7 long long eval;||| 8 bool b;||| 9 };||| 10 yeet tree[4000001], ans;||| 11 long long arr[1000010], n, q, a, b, c;||| 12 yeet merge(yeet x, yeet y) {||| 13 if (x.start == 0) return y;||| 14 yeet z;||| 15 bool d = arr[x.end] <= arr[y.start];||| 16 z.start = x.start;||| 17 z.end = y.end;||| 18 z.val = x.val + y.val;||| 19 if (d) z.val += x.eval * y.sval;||| 20 z.sval = x.sval;||| 21 if (x.b && d) z.sval += y.sval;||| 22 z.eval = y.eval;||| 23 if (y.b && d) z.eval += x.eval;||| 24 z.b = x.b && y.b;||| 25 return z;||| 26 }||| 27 void build_segtree(long long s, long long e, long long x) {||| 28 if (s == e) {||| 29 tree[x] = {s, e, 1, 1, 1, true};||| 30 return;||| 31 }||| 32 build_segtree(s, (s + e) / 2, 2 * x);||| 33 build_segtree((s + e) / 2 + 1, e, 2 * x + 1);||| 34 tree[x] = merge(tree[2 * x], tree[2 * x + 1]);||| 35 }||| 36 void change(long long idx, long long to, long long x) {||| 37 if (tree[x].start == tree[x].end) return;||| 38 long long mid = (tree[x].start + tree[x].end) / 2;||| 39 if (idx <= mid)||| 40 change(idx, to, 2 * x);||| 41 else||| 42 change(idx, to, 2 * x + 1);||| 43 tree[x] = merge(tree[2 * x], tree[2 * x + 1]);||| 44 }||| 45 void sum(long long s, long long e, long long x) {||| 46 if (e < tree[x].start) return;||| 47 if (s > tree[x].end) return;||| 48 if (s <= tree[x].start && e >= tree[x].end) {||| 49 ans = merge(ans, tree[x]);||| 50 return;||| 51 }||| 52 sum(s, e, 2 * x);||| 53 sum(s, e, 2 * x + 1);||| 54 }||| 55 signed main() {||| 56 scanf(""%lld%lld"", &n, &q);||| 57 for (long long i = 1; i <= n; i++) scanf(""%lld"", &arr[i]);||| 58 build_segtree(1, n, 1);||| 59 for (long long i = 1; i <= q; i++) {||| 60 scanf(""%lld%lld%lld"", &a, &b, &c);||| 61 if (a == 1)||| 62 arr[b] = c, change(b, c, 1);||| 63 else {||| 64 sum(b, c, 1);||| 65 printf(""%lld\n"", ans.val);||| 66 ans = {0, 0, 0, 0, 0, true};||| 67 }||| 68 }||| 69 }||| "	10 yeet tree[800010], ans;
96	85	"1 #include <bits/stdc++.h>||| 2 struct Node {||| 3 long long s;||| 4 int l, r;||| 5 int L, R;||| 6 } node[(800010)];||| 7 int a[(800010)];||| 8 inline int empty(int x, int l, int r) { return node[x].l == r - l + 1; }||| 9 inline void pullup(Node &f, Node &x, Node &y, int l, int m, int r) {||| 10 int empl = x.l == m - l + 1, empr = y.l == r - m;||| 11 if (a[m] <= a[m + 1]) {||| 12 if (empl) {||| 13 f.l = m - l + 1 + y.l;||| 14 } else {||| 15 f.l = x.l;||| 16 }||| 17 if (empr) {||| 18 f.r = r - m + x.r;||| 19 } else {||| 20 f.r = y.r;||| 21 }||| 22 f.s = x.s + y.s - 1ll * x.r * (x.r + 1) / 2 - 1ll * y.l * (y.l + 1) / 2 +||| 23 1ll * (x.r + y.l) * (x.r + y.l + 1) / 2;||| 24 } else {||| 25 f.l = x.l;||| 26 f.r = y.r;||| 27 f.s = x.s + y.s;||| 28 }||| 29 }||| 30 void build(int a[], int x, int l, int r) {||| 31 if (l == r) {||| 32 node[x].l = node[x].r = 1;||| 33 node[x].s = 1;||| 34 } else {||| 35 int m = l + r >> 1;||| 36 build(a, x << 1, l, m);||| 37 build(a, x << 1 | 1, m + 1, r);||| 38 pullup(node[x], node[x << 1], node[x << 1 | 1], l, m, r);||| 39 }||| 40 node[x].L = l, node[x].R = r;||| 41 }||| 42 int L, R;||| 43 int cnt;||| 44 Node *li[100];||| 45 void query(int x, int l, int r) {||| 46 if (l >= L && r <= R) {||| 47 li[cnt++] = node + x;||| 48 } else {||| 49 int m = l + r >> 1, cnt = 0;||| 50 if (L <= m) {||| 51 query(x << 1, l, m);||| 52 }||| 53 if (R > m) {||| 54 query(x << 1 | 1, m + 1, r);||| 55 }||| 56 }||| 57 }||| 58 void modify(int x, int l, int r) {||| 59 if (l != r) {||| 60 int m = l + r >> 1;||| 61 if (L <= m) {||| 62 modify(x << 1, l, m);||| 63 } else {||| 64 modify(x << 1 | 1, m + 1, r);||| 65 }||| 66 pullup(node[x], node[x << 1], node[x << 1 | 1], l, m, r);||| 67 }||| 68 }||| 69 int main() {||| 70 int n, q;||| 71 scanf(""%d%d"", &n, &q);||| 72 for (int i = 1; i <= n; ++i) {||| 73 scanf(""%d"", a + i);||| 74 }||| 75 build(a, 1, 1, n);||| 76 while (q--) {||| 77 int op;||| 78 scanf(""%d%d%d"", &op, &L, &R);||| 79 if (op == 1) {||| 80 a[L] = R;||| 81 int lb = L >= 2 ? L - 1 : 1, rb = L < n ? L + 1 : n;||| 82 for (L = lb; L <= rb; ++L) modify(1, 1, n);||| 83 } else {||| 84 cnt = 0;||| 85 query(1, 1, n);||| 86 Node ans = *li[0];||| 87 for (int i = 1; i < cnt; ++i) {||| 88 Node temp = ans;||| 89 pullup(ans, temp, *li[i], li[i - 1]->L, li[i - 1]->R, li[i]->R);||| 90 }||| 91 printf(""%lld\n"", ans.s);||| 92 }||| 93 }||| 94 }||| "	"1 #include <bits/stdc++.h>||| 2 struct Node {||| 3 long long s;||| 4 int l, r;||| 5 int L, R;||| 6 } node[(400010)];||| 7 int a[(400010)];||| 8 inline int empty(int x, int l, int r) { return node[x].l == r - l + 1; }||| 9 inline void pullup(Node &f, Node &x, Node &y, int l, int m, int r) {||| 10 int empl = x.l == m - l + 1, empr = y.l == r - m;||| 11 if (a[m] <= a[m + 1]) {||| 12 if (empl) {||| 13 f.l = m - l + 1 + y.l;||| 14 } else {||| 15 f.l = x.l;||| 16 }||| 17 if (empr) {||| 18 f.r = r - m + y.r;||| 19 } else {||| 20 f.r = y.r;||| 21 }||| 22 f.s = x.s + y.s - 1ll * x.r * (x.r + 1) / 2 - 1ll * y.l * (y.l + 1) / 2 +||| 23 1ll * (x.r + y.l) * (x.r + y.l + 1) / 2;||| 24 } else {||| 25 f.l = x.l;||| 26 f.r = y.r;||| 27 f.s = x.s + y.s;||| 28 }||| 29 }||| 30 void build(int a[], int x, int l, int r) {||| 31 if (l == r) {||| 32 node[x].l = node[x].r = 1;||| 33 node[x].s = 1;||| 34 } else {||| 35 int m = l + r >> 1;||| 36 build(a, x << 1, l, m);||| 37 build(a, x << 1 | 1, m + 1, r);||| 38 pullup(node[x], node[x << 1], node[x << 1 | 1], l, m, r);||| 39 }||| 40 node[x].L = l, node[x].R = r;||| 41 }||| 42 int L, R;||| 43 int cnt;||| 44 Node *li[100];||| 45 void query(int x, int l, int r) {||| 46 if (l >= L && r <= R) {||| 47 li[cnt++] = node + x;||| 48 } else {||| 49 int m = l + r >> 1, cnt = 0;||| 50 if (L <= m) {||| 51 query(x << 1, l, m);||| 52 }||| 53 if (R > m) {||| 54 query(x << 1 | 1, m + 1, r);||| 55 }||| 56 }||| 57 }||| 58 void modify(int x, int l, int r) {||| 59 if (l != r) {||| 60 int m = l + r >> 1;||| 61 if (L <= m) {||| 62 modify(x << 1, l, m);||| 63 } else {||| 64 modify(x << 1 | 1, m + 1, r);||| 65 }||| 66 pullup(node[x], node[x << 1], node[x << 1 | 1], l, m, r);||| 67 }||| 68 }||| 69 int main() {||| 70 int n, q;||| 71 scanf(""%d%d"", &n, &q);||| 72 for (int i = 1; i <= n; ++i) {||| 73 scanf(""%d"", a + i);||| 74 }||| 75 build(a, 1, 1, n);||| 76 while (q--) {||| 77 int op;||| 78 scanf(""%d%d%d"", &op, &L, &R);||| 79 if (op == 1) {||| 80 a[L] = R;||| 81 int lb = L >= 2 ? L - 1 : 1, rb = L < n ? L + 1 : n;||| 82 for (L = lb; L <= rb; ++L) modify(1, 1, n);||| 83 } else {||| 84 cnt = 0;||| 85 query(1, 1, n);||| 86 Node ans = *li[0];||| 87 for (int i = 1; i < cnt; ++i) {||| 88 Node temp = ans;||| 89 pullup(ans, temp, *li[i], li[i - 1]->L, li[i - 1]->R, li[i]->R);||| 90 }||| 91 printf(""%lld\n"", ans.s);||| 92 }||| 93 }||| 94 }||| "	6 } node[(800010)];
96	80	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 2e5 + 5;||| 4 const long long mod = 1e18;||| 5 const long long inf = 1e18;||| 6 long long n, q, a[maxn], seg[maxn * 4], bl[maxn * 4], br[maxn * 4];||| 7 long long ans, al, ar;||| 8 void fix(long long ind, long long v = 1, long long s = 0, long long e = n) {||| 9 if ((e - s) == 1) {||| 10 seg[v] = 1;||| 11 bl[v] = 1;||| 12 br[v] = 1;||| 13 return;||| 14 }||| 15 long long mid = (e + s) / 2ll, lc = v + v, rc = lc | 1;||| 16 if (ind < mid)||| 17 fix(ind, lc, s, mid);||| 18 else||| 19 fix(ind, rc, mid, e);||| 20 if (a[mid] < a[mid - 1]) {||| 21 seg[v] = seg[lc] + seg[rc];||| 22 bl[v] = bl[lc];||| 23 br[v] = br[rc];||| 24 return;||| 25 }||| 26 seg[v] = seg[lc] + seg[rc] + br[lc] * bl[rc];||| 27 if (bl[lc] == (mid - s))||| 28 bl[v] = bl[lc] + bl[rc];||| 29 else||| 30 bl[v] = bl[lc];||| 31 if (br[rc] == (e - mid))||| 32 br[v] = br[rc] + br[lc];||| 33 else||| 34 br[v] = br[rc];||| 35 }||| 36 void solve(long long l, long long r, long long v = 1, long long s = 0,||| 37 long long e = n) {||| 38 if ((l >= e) || (r <= s)) return;||| 39 if ((l <= s) && (e <= r)) {||| 40 if (ans == -1) {||| 41 ans = seg[v];||| 42 al = bl[v];||| 43 ar = br[v];||| 44 return;||| 45 }||| 46 if (a[s - 1] > a[s]) {||| 47 ans += seg[v];||| 48 ar = br[v];||| 49 return;||| 50 }||| 51 ans += seg[v] + ar * bl[v];||| 52 if (br[v] == (e - s))||| 53 ar += br[v];||| 54 else||| 55 ar = br[v];||| 56 if (al == (s - l)) al += bl[v];||| 57 return;||| 58 }||| 59 long long mid = (e + s) / 2ll, lc = v + v, rc = lc | 1;||| 60 solve(l, r, lc, s, mid);||| 61 solve(l, r, rc, mid, e);||| 62 }||| 63 int main() {||| 64 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 65 cin >> n >> q;||| 66 for (long long i = 0; i < n; i++) {||| 67 cin >> a[i];||| 68 fix(i);||| 69 }||| 70 while (q--) {||| 71 long long t;||| 72 cin >> t;||| 73 if (t == 1) {||| 74 long long x, y;||| 75 cin >> x >> y;||| 76 a[x - 1] = y;||| 77 fix(x - 1);||| 78 continue;||| 79 }||| 80 long long l1, r1;||| 81 cin >> l1 >> r1;||| 82 ans = -1;||| 83 solve(l1 - 1, r1);||| 84 cout << ans << endl;||| 85 }||| 86 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long maxn = 2e5 + 5;||| 4 const long long mod = 1e18;||| 5 const long long inf = 1e18;||| 6 long long n, q, a[maxn], seg[maxn * 4], bl[maxn * 4], br[maxn * 4];||| 7 long long ans, al, ar;||| 8 void fix(long long ind, long long v = 1, long long s = 0, long long e = n) {||| 9 if ((e - s) == 1) {||| 10 seg[v] = 1;||| 11 bl[v] = 1;||| 12 br[v] = 1;||| 13 return;||| 14 }||| 15 long long mid = (e + s) / 2ll, lc = v + v, rc = lc | 1;||| 16 if (ind < mid)||| 17 fix(ind, lc, s, mid);||| 18 else||| 19 fix(ind, rc, mid, e);||| 20 if (a[mid] < a[mid - 1]) {||| 21 seg[v] = seg[lc] + seg[rc];||| 22 bl[v] = bl[lc];||| 23 br[v] = br[rc];||| 24 return;||| 25 }||| 26 seg[v] = seg[lc] + seg[rc] + br[lc] * bl[rc];||| 27 if (bl[lc] == (mid - s))||| 28 bl[v] = bl[lc] + bl[rc];||| 29 else||| 30 bl[v] = bl[lc];||| 31 if (br[rc] = (e - mid))||| 32 br[v] = br[rc] + br[lc];||| 33 else||| 34 br[v] = br[rc];||| 35 }||| 36 void solve(long long l, long long r, long long v = 1, long long s = 0,||| 37 long long e = n) {||| 38 if ((l >= e) || (r <= s)) return;||| 39 if ((l <= s) && (e <= r)) {||| 40 if (ans == -1) {||| 41 ans = seg[v];||| 42 al = bl[v];||| 43 ar = br[v];||| 44 return;||| 45 }||| 46 if (a[s - 1] > a[s]) {||| 47 ans += seg[v];||| 48 ar = br[v];||| 49 return;||| 50 }||| 51 ans += seg[v] + ar * bl[v];||| 52 if (br[v] == (e - s))||| 53 ar += br[v];||| 54 else||| 55 ar = br[v];||| 56 if (al == (s - l)) al += bl[v];||| 57 return;||| 58 }||| 59 long long mid = (e + s) / 2ll, lc = v + v, rc = lc | 1;||| 60 solve(l, r, lc, s, mid);||| 61 solve(l, r, rc, mid, e);||| 62 }||| 63 int main() {||| 64 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 65 cin >> n >> q;||| 66 for (long long i = 0; i < n; i++) {||| 67 cin >> a[i];||| 68 fix(i);||| 69 }||| 70 while (q--) {||| 71 long long t;||| 72 cin >> t;||| 73 if (t == 1) {||| 74 long long x, y;||| 75 cin >> x >> y;||| 76 a[x - 1] = y;||| 77 fix(x - 1);||| 78 continue;||| 79 }||| 80 long long l1, r1;||| 81 cin >> l1 >> r1;||| 82 ans = -1;||| 83 solve(l1 - 1, r1);||| 84 cout << ans << '\n';||| 85 }||| 86 }||| 	31 if (br[rc] == (e - mid))
97	62	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 long long dx[] = {0, 0, -1, 1};||| 5 long long dy[] = {1, -1, 0, 0};||| 6 long long grid[505][505];||| 7 char ogrid[505][505];||| 8 long long n, m;||| 9 bool valid(long long x, long long y) {||| 10 return ((x > 0) && (x <= n) && (y > 0) && (y <= m));||| 11 }||| 12 int main() {||| 13 ios_base::sync_with_stdio(0);||| 14 cin.tie(0);||| 15 cout.tie(0);||| 16 cin >> n >> m;||| 17 for (long long i = 1; i <= n; i++) {||| 18 for (long long j = 1; j <= m; j++) cin >> ogrid[i][j];||| 19 }||| 20 for (long long i = 1; i <= n; i++) {||| 21 for (long long j = 1; j <= m; j++) {||| 22 if (ogrid[i][j] == 'X') {||| 23 long long unmarked = 0;||| 24 for (long long d = 0; d < 4; d++) {||| 25 long long ni = i + dx[d], nj = j + dy[d];||| 26 if (valid(ni, nj)) {||| 27 if (ogrid[ni][nj] == '.') unmarked++;||| 28 }||| 29 }||| 30 if (unmarked & 1) {||| 31 cout << ""NO\n"";||| 32 return 0;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << ""YES\n"";||| 38 long long cur = 0;||| 39 for (long long i = 1; i <= n; i++) {||| 40 for (long long j = 1; j <= m; j++) {||| 41 if (ogrid[i][j] == 'X') {||| 42 if (ogrid[i - 1][j] == 'X') cur ^= 1;||| 43 continue;||| 44 }||| 45 if ((i + cur) & 1)||| 46 grid[i][j] = 1;||| 47 else||| 48 grid[i][j] = 4;||| 49 }||| 50 }||| 51 for (long long i = 1; i <= n; i++) {||| 52 for (long long j = 1; j <= m; j++) {||| 53 if (ogrid[i][j] == 'X') {||| 54 for (long long d = 0; d < 4; d++) {||| 55 long long ni = i + dx[d], nj = j + dy[d];||| 56 if ((valid(ni, nj)) && (ogrid[ni][nj] == '.'))||| 57 grid[i][j] += grid[ni][nj];||| 58 }||| 59 }||| 60 }||| 61 }||| 62 for (long long i = 1; i <= n; i++) {||| 63 for (long long j = 1; j <= m; j++) cout << grid[i][j] << "" "";||| 64 cout << ""\n"";||| 65 }||| 66 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());||| 4 long long dx[] = {0, 0, -1, 1};||| 5 long long dy[] = {1, -1, 0, 0};||| 6 long long grid[505][505];||| 7 char ogrid[505][505];||| 8 long long n, m;||| 9 bool valid(long long x, long long y) {||| 10 return ((x > 0) && (x <= n) && (y > 0) && (y <= m));||| 11 }||| 12 int main() {||| 13 ios_base::sync_with_stdio(0);||| 14 cin.tie(0);||| 15 cout.tie(0);||| 16 cin >> n >> m;||| 17 for (long long i = 1; i <= n; i++) {||| 18 for (long long j = 1; j <= m; j++) cin >> ogrid[i][j];||| 19 }||| 20 for (long long i = 1; i <= n; i++) {||| 21 for (long long j = 1; j <= m; j++) {||| 22 if (ogrid[i][j] == 'X') {||| 23 long long unmarked = 0;||| 24 for (long long d = 0; d < 4; d++) {||| 25 long long ni = i + dx[d], nj = j + dy[d];||| 26 if (valid(ni, nj)) {||| 27 if (ogrid[ni][nj] == '.') unmarked++;||| 28 }||| 29 }||| 30 if (unmarked & 1) {||| 31 cout << ""NO\n"";||| 32 return 0;||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << ""YES\n"";||| 38 long long cur = 0;||| 39 for (long long i = 1; i <= n; i++) {||| 40 for (long long j = 1; j <= n; j++) {||| 41 if (ogrid[i][j] == 'X') {||| 42 if (ogrid[i - 1][j] == 'X') cur ^= 1;||| 43 continue;||| 44 }||| 45 if ((i + cur) & 1)||| 46 grid[i][j] = 1;||| 47 else||| 48 grid[i][j] = 4;||| 49 }||| 50 }||| 51 for (long long i = 1; i <= n; i++) {||| 52 for (long long j = 1; j <= m; j++) {||| 53 if (ogrid[i][j] == 'X') {||| 54 for (long long d = 0; d < 4; d++) {||| 55 long long ni = i + dx[d], nj = j + dy[d];||| 56 if ((valid(ni, nj)) && (ogrid[ni][nj] == '.'))||| 57 grid[i][j] += grid[ni][nj];||| 58 }||| 59 }||| 60 }||| 61 }||| 62 for (long long i = 1; i <= n; i++) {||| 63 for (long long j = 1; j <= m; j++) cout << grid[i][j] << "" "";||| 64 cout << ""\n"";||| 65 }||| 66 }||| "	40 for (long long j = 1; j <= m; j++) {
97	57	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 1e3 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 const double Pi = acos(-1.0);||| 20 mt19937 rnd(||| 21 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 22 long long qpow(long long n, long long m) {||| 23 long long ret = 1;||| 24 while (m) {||| 25 if (m & 1) ret = ret * n % mod;||| 26 n = n * n % mod;||| 27 m >>= 1;||| 28 }||| 29 return ret;||| 30 }||| 31 long long getinv(long long a) { return qpow(a, mod - 2); }||| 32 int n, m;||| 33 string s[N];||| 34 int ans[N][N];||| 35 void main0() {||| 36 cin >> n >> m;||| 37 for (int i = 1; i <= n; ++i) {||| 38 cin >> s[i];||| 39 s[i] = ""$"" + s[i];||| 40 int cur = 1;||| 41 for (int j = 1; j <= m; ++j) {||| 42 cur ^= 5;||| 43 if (s[i][j] == '.') ans[i][j] = cur;||| 44 if ((s[i - 1][j] == 'X') && (s[i][j] == 'X')) cur ^= 5;||| 45 }||| 46 }||| 47 int succ = 1;||| 48 for (int i = 2; i <= n - 1; ++i) {||| 49 for (int j = 2; j <= m - 1; ++j)||| 50 if (s[i][j] == 'X') {||| 51 int cnt = 0;||| 52 for (int d = 0; d <= 3; ++d) {||| 53 int xt = i + dx[d];||| 54 int yt = j + dy[d];||| 55 cnt += (s[xt][yt] == '.');||| 56 ans[i][j] += (s[xt][yt] == '.') * ans[xt][yt];||| 57 }||| 58 if (cnt & 1) succ = 0;||| 59 }||| 60 }||| 61 if (succ) {||| 62 cout << ""YES"" << endl;||| 63 for (int i = 1; i <= n; ++i) {||| 64 for (int j = 1; j <= m; ++j) {||| 65 cout << ans[i][j] << ' ';||| 66 }||| 67 cout << endl;||| 68 }||| 69 } else {||| 70 cout << ""NO"" << endl;||| 71 }||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void main0();||| 4 int main() {||| 5 clock_t start, end;||| 6 ios::sync_with_stdio(false);||| 7 cin.tie(0);||| 8 main0();||| 9 return 0;||| 10 }||| 11 const int dx[8] = {0, 1, -1, 0, 1, 1, -1, -1};||| 12 const int dy[8] = {1, 0, 0, -1, 1, -1, -1, 1};||| 13 const int N = 1e3 + 5;||| 14 const int M = 1e5;||| 15 const int INF = 0x3f3f3f3f;||| 16 const long long INFF = 0x3f3f3f3f3f3f3f3f;||| 17 const int mod = 998244353;||| 18 const double eps = 1e-6;||| 19 const double Pi = acos(-1.0);||| 20 mt19937 rnd(||| 21 (unsigned int)chrono::steady_clock::now().time_since_epoch().count());||| 22 long long qpow(long long n, long long m) {||| 23 long long ret = 1;||| 24 while (m) {||| 25 if (m & 1) ret = ret * n % mod;||| 26 n = n * n % mod;||| 27 m >>= 1;||| 28 }||| 29 return ret;||| 30 }||| 31 long long getinv(long long a) { return qpow(a, mod - 2); }||| 32 int n, m;||| 33 string s[N];||| 34 int ans[N][N];||| 35 void main0() {||| 36 cin >> n >> m;||| 37 for (int i = 1; i <= n; ++i) {||| 38 cin >> s[i];||| 39 s[i] = ""$"" + s[i];||| 40 int cur = 1;||| 41 for (int j = 1; j <= m; ++j) {||| 42 cur ^= 5;||| 43 if (s[i][j] == '.') ans[i][j] = cur;||| 44 if ((s[i - 1][j] == 'X') && (s[i][j] == 'X')) cur ^= 5;||| 45 }||| 46 }||| 47 int succ = 1;||| 48 for (int i = 2; i <= n - 1; ++i) {||| 49 for (int j = 2; j <= n - 1; ++j)||| 50 if (s[i][j] == 'X') {||| 51 int cnt = 0;||| 52 for (int d = 0; d <= 3; ++d) {||| 53 int xt = i + dx[d];||| 54 int yt = j + dy[d];||| 55 cnt += (s[xt][yt] == '.');||| 56 ans[i][j] += (s[xt][yt] == '.') * ans[xt][yt];||| 57 }||| 58 if (cnt & 1) succ = 0;||| 59 }||| 60 }||| 61 if (succ) {||| 62 cout << ""YES"" << endl;||| 63 for (int i = 1; i <= n; ++i) {||| 64 for (int j = 1; j <= m; ++j) {||| 65 cout << ans[i][j] << ' ';||| 66 }||| 67 cout << endl;||| 68 }||| 69 } else {||| 70 cout << ""NO"" << endl;||| 71 }||| 72 }||| "	49 for (int j = 2; j <= m - 1; ++j)
97	46	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 510;||| 4 char all[N][N];||| 5 int res[N][N];||| 6 int n, m;||| 7 int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};||| 8 void f() {||| 9 for (int i = 1; i <= n; i++) {||| 10 int z = 1;||| 11 for (int j = 1; j <= m; j++) {||| 12 if (j % 2 == 0 && all[i][j] == '.')||| 13 res[i][j] = 1;||| 14 else if (j % 2 == 1 && all[i][j] == '.')||| 15 res[i][j] = 4;||| 16 }||| 17 }||| 18 }||| 19 int main() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= n; i++) {||| 22 for (int j = 1; j <= m; j++) {||| 23 cin >> all[i][j];||| 24 }||| 25 }||| 26 int p = 0;||| 27 int ok = 1;||| 28 for (int i = 1; i <= n; i++) {||| 29 p = 0;||| 30 for (int j = 1; j <= m; j++) {||| 31 if (all[i][j] == 'X') {||| 32 p ^= (all[i - 1][j] == 'X');||| 33 int z = 0;||| 34 for (int k = 0; k < 4; k++) {||| 35 int a = i + dx[k], b = j + dy[k];||| 36 if (a < 1 || a > n || b < 1 || b > m) continue;||| 37 if (all[a][b] == 'X') continue;||| 38 z++;||| 39 }||| 40 if (z % 2 == 1) {||| 41 cout << ""NO"";||| 42 return 0;||| 43 }||| 44 if (z == 0)||| 45 res[i][j] = 0;||| 46 else if (z == 2)||| 47 res[i][j] = 5;||| 48 else if (z == 4)||| 49 res[i][j] = 10;||| 50 } else {||| 51 res[i][j] = ((j + p) & 1) ? 1 : 4;||| 52 }||| 53 }||| 54 }||| 55 cout << ""YES"" << endl;||| 56 for (int i = 1; i <= n; i++) {||| 57 for (int j = 1; j <= m; j++) {||| 58 cout << res[i][j] << "" "";||| 59 }||| 60 cout << endl;||| 61 }||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 510;||| 4 char all[N][N];||| 5 int res[N][N];||| 6 int n, m;||| 7 int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};||| 8 void f() {||| 9 for (int i = 1; i <= n; i++) {||| 10 int z = 1;||| 11 for (int j = 1; j <= m; j++) {||| 12 if (j % 2 == 0 && all[i][j] == '.')||| 13 res[i][j] = 1;||| 14 else if (j % 2 == 1 && all[i][j] == '.')||| 15 res[i][j] = 4;||| 16 }||| 17 }||| 18 }||| 19 int main() {||| 20 cin >> n >> m;||| 21 for (int i = 1; i <= n; i++) {||| 22 for (int j = 1; j <= m; j++) {||| 23 cin >> all[i][j];||| 24 }||| 25 }||| 26 int p = 0;||| 27 int ok = 1;||| 28 for (int i = 1; i <= n; i++) {||| 29 p = 0;||| 30 for (int j = 1; j <= m; j++) {||| 31 if (all[i][j] == 'X') {||| 32 p ^= (all[i - 1][j] == 'X');||| 33 int z = 0;||| 34 for (int k = 0; k < 4; k++) {||| 35 int a = i + dx[k], b = j + dy[k];||| 36 if (a < 1 || a > n || b < 1 || b > m) continue;||| 37 if (all[a][b] == 'X') continue;||| 38 z++;||| 39 }||| 40 if (z % 2 == 1) {||| 41 cout << ""NO"";||| 42 return 0;||| 43 }||| 44 if (z == 0)||| 45 res[i][j] = -1;||| 46 else if (z == 2)||| 47 res[i][j] = 5;||| 48 else if (z == 4)||| 49 res[i][j] = 10;||| 50 } else {||| 51 res[i][j] = ((j + p) & 1) ? 1 : 4;||| 52 }||| 53 }||| 54 }||| 55 cout << ""YES"" << endl;||| 56 for (int i = 1; i <= n; i++) {||| 57 for (int j = 1; j <= m; j++) {||| 58 cout << res[i][j] << "" "";||| 59 }||| 60 cout << endl;||| 61 }||| 62 return 0;||| 63 }||| "	45 res[i][j] = 0;
97	67	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const double eps = 1e-6;||| 5 const double PI = acos(-1.0);||| 6 inline long long read() {||| 7 char ch;||| 8 long long x = 0;||| 9 bool f = true;||| 10 for (ch = getchar(); !isdigit(ch); ch = getchar())||| 11 if (ch == '-') f ^= f;||| 12 for (; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + ch - 48;||| 13 return f ? x : -x;||| 14 }||| 15 const int N = 1010;||| 16 char ch[N][N];||| 17 int h[N * N], e[2 * N * N], ne[2 * N * N], idx;||| 18 int ans[N][N];||| 19 void add(int a, int b) {||| 20 e[++idx] = b;||| 21 ne[idx] = h[a];||| 22 h[a] = idx;||| 23 }||| 24 void dfs(int u, int res) {||| 25 if (ans[u / N][u % N]) return;||| 26 int t = (res == 1 ? 4 : 1);||| 27 ans[u / N][u % N] = res;||| 28 for (int i = h[u]; i; i = ne[i]) {||| 29 int j = e[i];||| 30 dfs(j, t);||| 31 }||| 32 }||| 33 int z(int x, int y) { return x * N + y; }||| 34 int dx[] = {-1, 0, 1, 0}, dy[] = {0, -1, 0, 1};||| 35 void solve() {||| 36 int n = read(), m = read();||| 37 for (int i = 1; i <= n; i++) cin >> (ch[i] + 1);||| 38 for (int i = 1; i <= n; i++)||| 39 for (int j = 1; j <= m; j++)||| 40 if (ch[i][j] == 'X') {||| 41 vector<int> vs;||| 42 for (int k = 0; k < 4; k++) {||| 43 if (ch[i + dx[k]][j + dy[k]] != '.') continue;||| 44 vs.push_back(z(i + dx[k], j + dy[k]));||| 45 }||| 46 if (vs.size() % 2 == 1) return printf(""NO\n""), void(0);||| 47 for (int k = 0; k < vs.size(); k += 2)||| 48 add(vs[k], vs[k + 1]), add(vs[k + 1], vs[k]);||| 49 }||| 50 for (int i = 1; i <= n; i++)||| 51 for (int j = 1; j <= m; j++) {||| 52 if (ch[i][j] == 'X') continue;||| 53 if (ans[i][j]) continue;||| 54 dfs(z(i, j), 1);||| 55 }||| 56 cout << ""YES\n"";||| 57 for (int i = 1; i <= n; i++) {||| 58 for (int j = 1; j <= m; j++) {||| 59 if (ch[i][j] == 'X')||| 60 for (int k = 0; k < 4; k++)||| 61 if (ch[i + dx[k]][j + dy[k]] == '.')||| 62 ans[i][j] += ans[i + dx[k]][j + dy[k]];||| 63 cout << ans[i][j] << "" "";||| 64 }||| 65 cout << ""\n"";||| 66 }||| 67 }||| 68 int main() {||| 69 int T = 1;||| 70 while (T--) solve();||| 71 return 0;||| 72 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF = 0x3f3f3f3f;||| 4 const double eps = 1e-6;||| 5 const double PI = acos(-1.0);||| 6 inline long long read() {||| 7 char ch;||| 8 long long x = 0;||| 9 bool f = true;||| 10 for (ch = getchar(); !isdigit(ch); ch = getchar())||| 11 if (ch == '-') f ^= f;||| 12 for (; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + ch - 48;||| 13 return f ? x : -x;||| 14 }||| 15 const int N = 1010;||| 16 char ch[N][N];||| 17 int h[N * N], e[2 * N * N], ne[2 * N * N], idx;||| 18 int ans[N][N];||| 19 void add(int a, int b) {||| 20 e[++idx] = b;||| 21 ne[a] = h[a];||| 22 h[a] = idx;||| 23 }||| 24 void dfs(int u, int res) {||| 25 if (ans[u / N][u % N]) return;||| 26 int t = (res == 1 ? 4 : 1);||| 27 ans[u / N][u % N] = res;||| 28 for (int i = h[u]; i; i = ne[i]) {||| 29 int j = e[i];||| 30 dfs(j, t);||| 31 }||| 32 }||| 33 int z(int x, int y) { return x * N + y; }||| 34 int dx[] = {-1, 0, 1, 0}, dy[] = {0, -1, 0, 1};||| 35 void solve() {||| 36 int n = read(), m = read();||| 37 for (int i = 1; i <= n; i++) cin >> (ch[i] + 1);||| 38 for (int i = 1; i <= n; i++)||| 39 for (int j = 1; j <= m; j++)||| 40 if (ch[i][j] == 'X') {||| 41 vector<int> vs;||| 42 for (int k = 0; k < 4; k++) {||| 43 if (ch[i + dx[k]][j + dy[k]] != '.') continue;||| 44 vs.push_back(z(i + dx[k], j + dy[k]));||| 45 }||| 46 if (vs.size() % 2 == 1) return printf(""NO\n""), void(0);||| 47 for (int k = 0; k < vs.size(); k += 2)||| 48 add(vs[k], vs[k + 1]), add(vs[k + 1], vs[k]);||| 49 }||| 50 for (int i = 1; i <= n; i++)||| 51 for (int j = 1; j <= m; j++) {||| 52 if (ch[i][j] == 'X') continue;||| 53 if (ans[i][j]) continue;||| 54 dfs(z(i, j), 1);||| 55 }||| 56 cout << ""YES\n"";||| 57 for (int i = 1; i <= n; i++) {||| 58 for (int j = 1; j <= m; j++) {||| 59 if (ch[i][j] == 'X')||| 60 for (int k = 0; k < 4; k++)||| 61 if (ch[i + dx[k]][j + dy[k]] == '.')||| 62 ans[i][j] += ans[i + dx[k]][j + dy[k]];||| 63 cout << ans[i][j] << "" "";||| 64 }||| 65 cout << ""\n"";||| 66 }||| 67 }||| 68 int main() {||| 69 int T = 1;||| 70 while (T--) solve();||| 71 return 0;||| 72 }||| "	21 ne[idx] = h[a];
98	216	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF32 = 0x3f3f3f3f;||| 4 const long long INF64 = 0x3f3f3f3f3f3f3f3f;||| 5 struct IO {||| 6 char ibuf[(1 << 21)], *ibs, *ibe, obuf[(1 << 21)], *O;||| 7 int IOerror = 0;||| 8 IO() : ibs(ibuf), ibe(ibuf), O(obuf) {}||| 9 inline char getchar(void) {||| 10 return (ibs == ibe &&||| 11 (ibe = (ibs = ibuf) + fread(ibuf, 1, (1 << 21), stdin),||| 12 ibs == ibe)||| 13 ? EOF||| 14 : *ibs++);||| 15 }||| 16 inline void flush(void) {||| 17 fwrite(obuf, 1, O - obuf, stdout);||| 18 O = obuf;||| 19 }||| 20 inline void putchar(char ch) {||| 21 if (O - obuf >= (1 << 21)) flush();||| 22 *O++ = ch;||| 23 }||| 24 ~IO() { flush(); }||| 25 template <typename T>||| 26 inline T getint(void) {||| 27 char ch;||| 28 T ret;||| 29 bool flag = true;||| 30 while (isspace(ch = getchar()) && ch != EOF)||| 31 ;||| 32 if (ch == '-') flag = false, ch = getchar();||| 33 if (ch == EOF || !isdigit(ch)) {||| 34 IOerror = 1;||| 35 return (T)INF64;||| 36 }||| 37 ret = ch - '0';||| 38 while (isdigit(ch = getchar())) ret = ret * 10 + ch - '0';||| 39 return flag ? ret : -ret;||| 40 }||| 41 template <typename T>||| 42 inline void putint(T x) {||| 43 static char numbuf[65];||| 44 int top = 0;||| 45 if (x < 0) putchar('-'), x = -x;||| 46 do numbuf[top++] = x % 10 + '0';||| 47 while (x /= 10);||| 48 while (top--) putchar(numbuf[top]);||| 49 }||| 50 inline void getstr(char *str) {||| 51 do *str = getchar();||| 52 while (*str != EOF && !isspace(*str++));||| 53 *--str = 0;||| 54 }||| 55 inline void getline(char *str) {||| 56 while ((*str = getchar()) != '\n') ++str;||| 57 *str = 0;||| 58 }||| 59 inline void putstr(char *str) {||| 60 while (*str) putchar(*str++);||| 61 }||| 62 };||| 63 IO io;||| 64 int a[55], b[55];||| 65 int main() {||| 66 int T = io.getint<int>();||| 67 while (T--) {||| 68 int N = io.getint<int>();||| 69 memset(a, 0, sizeof(a));||| 70 memset(b, 0, sizeof(b));||| 71 for (int i = 1; i <= N; ++i) {||| 72 char ch;||| 73 while ((ch = io.getchar()) != 'a' && ch != 'b')||| 74 ;||| 75 if (ch == 'a')||| 76 a[i] = a[i - 1] + 1, b[i] = b[i - 1];||| 77 else||| 78 a[i] = a[i - 1], b[i] = b[i - 1] + 1;||| 79 }||| 80 int aa = -1, bb = -1;||| 81 bool flag = true;||| 82 for (int i = 1; i <= N && flag; ++i)||| 83 for (int j = i + 1; j <= N && flag; ++j) {||| 84 if (a[j] - a[i - 1] == b[j] - b[i - 1]) {||| 85 aa = i, bb = j;||| 86 flag = false;||| 87 break;||| 88 }||| 89 }||| 90 io.putint(aa), io.putchar(' '), io.putint(bb), io.putchar('\n');||| 91 }||| 92 return 0;||| 93 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int INF32 = 0x3f3f3f3f;||| 4 const long long INF64 = 0x3f3f3f3f3f3f3f3f;||| 5 struct IO {||| 6 char ibuf[(1 << 21)], *ibs, *ibe, obuf[(1 << 21)], *O;||| 7 int IOerror = 0;||| 8 IO() : ibs(ibuf), ibe(ibuf), O(obuf) {}||| 9 inline char getchar(void) {||| 10 return (ibs == ibe &&||| 11 (ibe = (ibs = ibuf) + fread(ibuf, 1, (1 << 21), stdin),||| 12 ibs == ibe)||| 13 ? EOF||| 14 : *ibs++);||| 15 }||| 16 inline void flush(void) {||| 17 fwrite(obuf, 1, O - obuf, stdout);||| 18 O = obuf;||| 19 }||| 20 inline void putchar(char ch) {||| 21 if (O - obuf >= (1 << 21)) flush();||| 22 *O++ = ch;||| 23 }||| 24 ~IO() { flush(); }||| 25 template <typename T>||| 26 inline T getint(void) {||| 27 char ch;||| 28 T ret;||| 29 bool flag = true;||| 30 while (isspace(ch = getchar()) && ch != EOF)||| 31 ;||| 32 if (ch == '-') flag = false, ch = getchar();||| 33 if (ch == EOF || !isdigit(ch)) {||| 34 IOerror = 1;||| 35 return (T)INF64;||| 36 }||| 37 ret = ch - '0';||| 38 while (isdigit(ch = getchar())) ret = ret * 10 + ch - '0';||| 39 return flag ? ret : -ret;||| 40 }||| 41 template <typename T>||| 42 inline void putint(T x) {||| 43 static char numbuf[65];||| 44 int top = 0;||| 45 if (x < 0) putchar('-'), x = -x;||| 46 do numbuf[top++] = x % 10 + '0';||| 47 while (x /= 10);||| 48 while (top--) putchar(numbuf[top]);||| 49 }||| 50 inline void getstr(char *str) {||| 51 do *str = getchar();||| 52 while (*str != EOF && !isspace(*str++));||| 53 *--str = 0;||| 54 }||| 55 inline void getline(char *str) {||| 56 while ((*str = getchar()) != '\n') ++str;||| 57 *str = 0;||| 58 }||| 59 inline void putstr(char *str) {||| 60 while (*str) putchar(*str++);||| 61 }||| 62 };||| 63 IO io;||| 64 int a[55], b[55];||| 65 int main() {||| 66 int T = io.getint<int>();||| 67 while (T--) {||| 68 int N = io.getint<int>();||| 69 memset(a, 0, sizeof(a));||| 70 memset(b, 0, sizeof(b));||| 71 for (int i = 1; i <= N; ++i) {||| 72 char ch;||| 73 while ((ch = io.getchar()) != 'a' && ch != 'b')||| 74 ;||| 75 if (ch == 'a')||| 76 a[i] = a[i - 1] + 1, b[i] = b[i - 1];||| 77 else||| 78 a[i] = a[i - 1], b[i] = b[i - 1] + 1;||| 79 }||| 80 int aa = -1, bb = -1;||| 81 bool flag = true;||| 82 for (int i = 1; i <= N && flag; ++i)||| 83 for (int j = i + 1; j <= N && flag; ++j) {||| 84 if (a[j] - a[i - 1] == b[j] - b[j - 1]) {||| 85 aa = i, bb = j;||| 86 flag = false;||| 87 break;||| 88 }||| 89 }||| 90 io.putint(aa), io.putchar(' '), io.putint(bb), io.putchar('\n');||| 91 }||| 92 return 0;||| 93 }||| 	84 if (a[j] - a[i - 1] == b[j] - b[i - 1]) {
98	141	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7, N = 1e6 + 10;||| 4 int main() {||| 5 long long int time;||| 6 cin >> time;||| 7 while (time--) {||| 8 long long int l = -1, r = -1, n;||| 9 cin >> n;||| 10 string s;||| 11 cin >> s;||| 12 for (long long int i = 1; i < s.size(); i++) {||| 13 if (s[i - 1] == 'a' and s[i] == 'b') {||| 14 l = i, r = i + 1;||| 15 break;||| 16 }||| 17 if (s[i - 1] == 'b' and s[i] == 'a') {||| 18 l = i;||| 19 r = i + 1;||| 20 break;||| 21 }||| 22 }||| 23 cout << l << "" "" << r << endl;||| 24 }||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7, N = 1e6 + 10;||| 4 int main() {||| 5 long long int time;||| 6 cin >> time;||| 7 while (time--) {||| 8 long long int l = -1, r = -1, n;||| 9 cin >> n;||| 10 string s;||| 11 cin >> s;||| 12 for (long long int i = 1; i < s.size(); i++) {||| 13 if (s[i - 1] = 'a' and s[i] == 'b') {||| 14 l = i, r = i + 1;||| 15 break;||| 16 }||| 17 if (s[i - 1] == 'b' and s[i] == 'a') {||| 18 l = i;||| 19 r = i + 1;||| 20 break;||| 21 }||| 22 }||| 23 cout << l << "" "" << r << endl;||| 24 }||| 25 }||| "	13 if (s[i - 1] == 'a' and s[i] == 'b') {
98	263	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 solve();||| 12 }||| 13 return 0;||| 14 }||| 15 void solve() {||| 16 ios_base::sync_with_stdio(false);||| 17 cin.tie(NULL);||| 18 ;||| 19 int n;||| 20 cin >> n;||| 21 string s;||| 22 cin >> s;||| 23 int a = 0, b = 0;||| 24 int l = -2, r = -2;||| 25 for (int i = 0; i < n; i++) {||| 26 a = 0;||| 27 b = 0;||| 28 for (int j = i; j < n; j++) {||| 29 if (s[j] == 'a')||| 30 a++;||| 31 else if (s[j] == 'b')||| 32 b++;||| 33 if (a == b) {||| 34 l = i;||| 35 r = j;||| 36 break;||| 37 }||| 38 }||| 39 }||| 40 cout << l + 1 << "" "" << r + 1 << ""\n"";||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve();||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 solve();||| 12 }||| 13 return 0;||| 14 }||| 15 void solve() {||| 16 ios_base::sync_with_stdio(false);||| 17 cin.tie(NULL);||| 18 ;||| 19 int n;||| 20 cin >> n;||| 21 string s;||| 22 cin >> s;||| 23 int a = 0, b = 0;||| 24 int l = -1, r = -1;||| 25 for (int i = 0; i < n; i++) {||| 26 a = 0;||| 27 b = 0;||| 28 for (int j = i; j < n; j++) {||| 29 if (s[j] == 'a')||| 30 a++;||| 31 else if (s[j] == 'b')||| 32 b++;||| 33 if (a == b) {||| 34 l = i;||| 35 r = j;||| 36 break;||| 37 }||| 38 }||| 39 }||| 40 cout << l + 1 << "" "" << r + 1 << ""\n"";||| 41 }||| "	24 int l = -2, r = -2;
98	271	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 string s;||| 7 cin >> s;||| 8 long long int a = 0, b = 0;||| 9 for (long long int i = 0; i < n; i++) {||| 10 a = 0, b = 0;||| 11 for (long long int j = i; j < n; j++) {||| 12 if (s[j] == 'a')||| 13 a++;||| 14 else||| 15 b++;||| 16 if (a == b) {||| 17 cout << i + 1 << "" "" << j + 1 << ""\n"";||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 cout << -1 << "" "" << -1 << ""\n"";||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 26 ;||| 27 ;||| 28 long long int t;||| 29 cin >> t;||| 30 while (t--) {||| 31 solve();||| 32 }||| 33 return 0;||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long int n;||| 5 cin >> n;||| 6 string s;||| 7 cin >> s;||| 8 long long int a = 0, b = 0;||| 9 for (long long int i = 0; i < n; i++) {||| 10 a = 0, b = 0;||| 11 for (long long int j = 0; j < n; j++) {||| 12 if (s[j] == 'a')||| 13 a++;||| 14 else||| 15 b++;||| 16 if (a == b) {||| 17 cout << i + 1 << "" "" << j + 1 << ""\n"";||| 18 return;||| 19 }||| 20 }||| 21 }||| 22 cout << -1 << "" "" << -1 << ""\n"";||| 23 }||| 24 int32_t main() {||| 25 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 26 ;||| 27 ;||| 28 long long int t;||| 29 cin >> t;||| 30 while (t--) {||| 31 solve();||| 32 }||| 33 return 0;||| 34 }||| "	11 for (long long int j = i; j < n; j++) {
98	40	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int n;||| 8 scanf(""%d"", &n);||| 9 char s[n + 1];||| 10 scanf(""%s"", s + 1);||| 11 int a[100] = {0}, b[100] = {0};||| 12 int aa = 0, bb = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (s[i] == 'a') {||| 15 aa++;||| 16 b[i] = b[i - 1];||| 17 a[i] = a[i - 1] + 1;||| 18 } else {||| 19 bb++;||| 20 a[i] = a[i - 1];||| 21 b[i] = b[i - 1] + 1;||| 22 }||| 23 }||| 24 int flag = 1;||| 25 if (aa == 0 || bb == 0) {||| 26 printf(""-1 -1\n"");||| 27 continue;||| 28 } else {||| 29 for (int i = 1; i <= n; i++) {||| 30 if (flag == 1)||| 31 for (int j = n; j >= i; j--) {||| 32 if (a[j] - a[i - 1] == b[j] - b[i - 1]) {||| 33 printf(""%d %d\n"", i, j);||| 34 flag = 0;||| 35 break;||| 36 }||| 37 }||| 38 else||| 39 break;||| 40 }||| 41 }||| 42 }||| 43 return 0;||| 44 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 scanf(""%d"", &t);||| 6 while (t--) {||| 7 int n;||| 8 scanf(""%d"", &n);||| 9 char s[n + 1];||| 10 scanf(""%s"", s + 1);||| 11 int a[100] = {0}, b[100] = {0};||| 12 int aa = 0, bb = 0;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (s[i] == 'a') {||| 15 aa++;||| 16 b[i] = b[i - 1];||| 17 a[i] = a[i - 1] + 1;||| 18 } else {||| 19 bb++;||| 20 a[i] = a[i - 1];||| 21 b[i] = b[i - 1] + 1;||| 22 }||| 23 }||| 24 int flag = 1;||| 25 if (aa == 0 || bb == 0) {||| 26 printf(""-1 -1\n"");||| 27 continue;||| 28 } else {||| 29 for (int i = 1; i <= n; i++) {||| 30 if (flag == 1)||| 31 for (int j = n; j >= 1; j--) {||| 32 if (a[j] - a[i - 1] == b[j] - b[i - 1]) {||| 33 printf(""%d %d\n"", i, j);||| 34 flag = 0;||| 35 break;||| 36 }||| 37 }||| 38 else||| 39 break;||| 40 }||| 41 }||| 42 }||| 43 return 0;||| 44 }||| "	31 for (int j = n; j >= i; j--) {
98	150	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 RNG(chrono::steady_clock::now().time_since_epoch().count());||| 4 class Solution {||| 5 private:||| 6 public:||| 7 void solve() {||| 8 long long int n;||| 9 cin >> n;||| 10 string s;||| 11 cin >> s;||| 12 long long int prefix1[n + 1], prefix2[n + 1];||| 13 prefix1[0] = 0;||| 14 prefix2[0] = 0;||| 15 if (s[0] == 'a')||| 16 prefix1[1] = 1;||| 17 else||| 18 prefix2[1] = 1;||| 19 for (long long int i = 1; i <= n; i++) {||| 20 if (s[i - 1] == 'a') {||| 21 prefix1[i] = prefix1[i - 1] + 1;||| 22 prefix2[i] = prefix2[i - 1];||| 23 } else {||| 24 prefix2[i] = prefix2[i - 1] + 1;||| 25 prefix1[i] = prefix1[i - 1];||| 26 }||| 27 }||| 28 long long int x = -1, y = -1;||| 29 for (long long int i = 1; i <= n; i++) {||| 30 for (long long int j = i + 1; j <= n; j++) {||| 31 if (prefix1[j] - prefix1[i - 1] == prefix2[j] - prefix2[i - 1]) {||| 32 x = i, y = j;||| 33 break;||| 34 }||| 35 }||| 36 }||| 37 cout << x << "" "" << y << ""\n"";||| 38 }||| 39 };||| 40 int32_t main() {||| 41 auto begin = std::chrono::high_resolution_clock::now();||| 42 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 43 Solution sol;||| 44 long long int t;||| 45 t = 1;||| 46 cin >> t;||| 47 while (t--) sol.solve();||| 48 auto end = std::chrono::high_resolution_clock::now();||| 49 auto elapsed =||| 50 std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);||| 51 cerr << ""Time measured: "" << elapsed.count() * 1e-9 << "" seconds.\n"";||| 52 return 0;||| 53 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 mt19937_64 RNG(chrono::steady_clock::now().time_since_epoch().count());||| 4 class Solution {||| 5 private:||| 6 public:||| 7 void solve() {||| 8 long long int n;||| 9 cin >> n;||| 10 string s;||| 11 cin >> s;||| 12 long long int prefix1[n + 1], prefix2[n + 1];||| 13 prefix1[0] = 0;||| 14 prefix2[0] = 0;||| 15 if (s[0] == 'a')||| 16 prefix1[1] = 1;||| 17 else||| 18 prefix2[1] = 1;||| 19 for (long long int i = 2; i <= n; i++) {||| 20 if (s[i - 1] == 'a') {||| 21 prefix1[i] = prefix1[i - 1] + 1;||| 22 prefix2[i] = prefix2[i - 1];||| 23 } else {||| 24 prefix2[i] = prefix2[i - 1] + 1;||| 25 prefix1[i] = prefix1[i - 1];||| 26 }||| 27 }||| 28 long long int x = -1, y = -1;||| 29 for (long long int i = 1; i <= n; i++) {||| 30 for (long long int j = i + 1; j <= n; j++) {||| 31 if (prefix1[j] - prefix1[i - 1] == prefix2[j] - prefix2[i - 1]) {||| 32 x = i, y = j;||| 33 break;||| 34 }||| 35 }||| 36 }||| 37 cout << x << "" "" << y << ""\n"";||| 38 }||| 39 };||| 40 int32_t main() {||| 41 auto begin = std::chrono::high_resolution_clock::now();||| 42 ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);||| 43 Solution sol;||| 44 long long int t;||| 45 t = 1;||| 46 cin >> t;||| 47 while (t--) sol.solve();||| 48 auto end = std::chrono::high_resolution_clock::now();||| 49 auto elapsed =||| 50 std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);||| 51 cerr << ""Time measured: "" << elapsed.count() * 1e-9 << "" seconds.\n"";||| 52 return 0;||| 53 }||| "	19 for (long long int i = 1; i <= n; i++) {
98	206	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 10;||| 5 int power(int a, int b) {||| 6 int res = 1;||| 7 while (b > 0) {||| 8 if (b % 2) {||| 9 res = 1LL * res * a % mod;||| 10 }||| 11 a = 1LL * a * a % mod;||| 12 b /= 2;||| 13 }||| 14 return res;||| 15 }||| 16 int main() {||| 17 int test = 1, n;||| 18 char s[100];||| 19 scanf(""%d"", &test);||| 20 while (test--) {||| 21 int l = -1, r = -1;||| 22 scanf(""%d"", &n);||| 23 scanf(""%s"", s + 1);||| 24 for (int i = 1; i <= n; i++) {||| 25 int cnt = 0;||| 26 for (int j = i; j <= n; j++) {||| 27 cnt += (s[j] == 'a');||| 28 cnt -= (s[j] == 'b');||| 29 if (cnt == 0) {||| 30 l = i, r = j;||| 31 break;||| 32 }||| 33 }||| 34 if (l != -1) {||| 35 break;||| 36 }||| 37 }||| 38 printf(""%d %d\n"", l, r);||| 39 }||| 40 return 0;||| 41 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 10;||| 5 int power(int a, int b) {||| 6 int res = 1;||| 7 while (b > 0) {||| 8 if (b % 2) {||| 9 res = 1LL * res * a % mod;||| 10 }||| 11 a = 1LL * a * a % mod;||| 12 b /= 2;||| 13 }||| 14 return res;||| 15 }||| 16 int main() {||| 17 int test = 1, n;||| 18 char s[100];||| 19 scanf(""%d"", &test);||| 20 while (test--) {||| 21 int l = -1, r = -1;||| 22 scanf(""%d"", &n);||| 23 scanf(""%s"", s + 1);||| 24 for (int i = 1; i <= n; i++) {||| 25 int cnt = 0;||| 26 for (int j = 1; j <= n; j++) {||| 27 cnt += (s[j] == 'a');||| 28 cnt -= (s[j] == 'b');||| 29 if (cnt == 0) {||| 30 l = i, r = j;||| 31 break;||| 32 }||| 33 }||| 34 if (l != -1) {||| 35 break;||| 36 }||| 37 }||| 38 printf(""%d %d\n"", l, r);||| 39 }||| 40 return 0;||| 41 }||| "	26 for (int j = i; j <= n; j++) {
98	236	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void printv(vector<long long int>& v) {||| 4 for (auto x : v) {||| 5 cout << x << "" "";||| 6 }||| 7 cout << endl;||| 8 }||| 9 void printvv(vector<vector<long long int>>& vv) {||| 10 for (auto x : vv) {||| 11 for (auto y : x) {||| 12 cout << y << "" "";||| 13 }||| 14 cout << endl;||| 15 }||| 16 }||| 17 void printVS(vector<string> v) {||| 18 for (auto x : v) {||| 19 cout << x << endl;||| 20 }||| 21 }||| 22 int gcd(int a, int b) {||| 23 int R;||| 24 while ((a % b) > 0) {||| 25 R = a % b;||| 26 a = b;||| 27 b = R;||| 28 }||| 29 return b;||| 30 }||| 31 long long int power(long long int x, long long int y, long long int p) {||| 32 long long int res = 1;||| 33 x = x % p;||| 34 while (y > 0) {||| 35 if (y & 1) res = (res * x) % p;||| 36 y = y >> 1;||| 37 x = (x * x) % p;||| 38 }||| 39 return res;||| 40 }||| 41 long long int modInverse(long long int n, long long int p) {||| 42 return power(n, p - 2, p);||| 43 }||| 44 long long int nCrModPFermat(long long int n, long long int r, long long int p) {||| 45 if (r == 0) return 1;||| 46 long long int fac[10];||| 47 fac[0] = 1;||| 48 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 49 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 50 p;||| 51 }||| 52 long long int nPrModPFermat(long long int n, long long int r, long long int p) {||| 53 if (r == 0) return 1;||| 54 long long int fac[10];||| 55 fac[0] = 1;||| 56 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 57 return (fac[n] * modInverse(fac[n - r], p) % p) % p;||| 58 }||| 59 void sieve(vector<long long int>& ans) {||| 60 long long int n = 10000 + 5;||| 61 bool prime[10000 + 5];||| 62 for (long long int j = 0; j < n; j++) {||| 63 prime[j] = true;||| 64 }||| 65 for (long long int p = 2; p * p < n; p++) {||| 66 if (prime[p] == true) {||| 67 for (int i = p * p; i < n; i += p) prime[i] = false;||| 68 }||| 69 }||| 70 for (int p = 2; p < n; p++)||| 71 if (prime[p]) ans.push_back(p);||| 72 }||| 73 long long int gcd(long long int a, long long int b) {||| 74 if (b == 0) return a;||| 75 return gcd(b, a % b);||| 76 }||| 77 long long lcm(long long int a, long long int b) { return (a / gcd(a, b)) * b; }||| 78 long long int countSetBits(long long int x) {||| 79 long long int ans = 0;||| 80 while (x > 0) {||| 81 if (x % 2 == 1) ans++;||| 82 x = x / 2;||| 83 }||| 84 return ans;||| 85 }||| 86 void swap(long long int& x, long long int& y) {||| 87 long long int temp = x;||| 88 x = y;||| 89 y = temp;||| 90 return;||| 91 }||| 92 void swap(vector<long long int>& x, vector<long long int>& y) {||| 93 vector<long long int> temp = x;||| 94 x = y;||| 95 y = temp;||| 96 return;||| 97 }||| 98 bool first(pair<long long int, long long int> pr1,||| 99 pair<long long int, long long int> pr2) {||| 100 return pr1.first < pr2.first;||| 101 }||| 102 int solve() {||| 103 long long int n;||| 104 cin >> n;||| 105 string second;||| 106 cin >> second;||| 107 for (long long int j = 0; j < n - 1; j++) {||| 108 if (second[j] != second[j + 1]) {||| 109 cout << j + 1 << "" "" << j + 2 << endl;||| 110 return 0;||| 111 }||| 112 }||| 113 cout << -1 << "" "" << -1 << endl;||| 114 return 0;||| 115 }||| 116 int main() {||| 117 ios_base::sync_with_stdio(false);||| 118 cin.tie(NULL);||| 119 long long int t = 1;||| 120 cin >> t;||| 121 while (t--) {||| 122 solve();||| 123 }||| 124 return 0;||| 125 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void printv(vector<long long int>& v) {||| 4 for (auto x : v) {||| 5 cout << x << "" "";||| 6 }||| 7 cout << endl;||| 8 }||| 9 void printvv(vector<vector<long long int>>& vv) {||| 10 for (auto x : vv) {||| 11 for (auto y : x) {||| 12 cout << y << "" "";||| 13 }||| 14 cout << endl;||| 15 }||| 16 }||| 17 void printVS(vector<string> v) {||| 18 for (auto x : v) {||| 19 cout << x << endl;||| 20 }||| 21 }||| 22 int gcd(int a, int b) {||| 23 int R;||| 24 while ((a % b) > 0) {||| 25 R = a % b;||| 26 a = b;||| 27 b = R;||| 28 }||| 29 return b;||| 30 }||| 31 long long int power(long long int x, long long int y, long long int p) {||| 32 long long int res = 1;||| 33 x = x % p;||| 34 while (y > 0) {||| 35 if (y & 1) res = (res * x) % p;||| 36 y = y >> 1;||| 37 x = (x * x) % p;||| 38 }||| 39 return res;||| 40 }||| 41 long long int modInverse(long long int n, long long int p) {||| 42 return power(n, p - 2, p);||| 43 }||| 44 long long int nCrModPFermat(long long int n, long long int r, long long int p) {||| 45 if (r == 0) return 1;||| 46 long long int fac[10];||| 47 fac[0] = 1;||| 48 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 49 return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %||| 50 p;||| 51 }||| 52 long long int nPrModPFermat(long long int n, long long int r, long long int p) {||| 53 if (r == 0) return 1;||| 54 long long int fac[10];||| 55 fac[0] = 1;||| 56 for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;||| 57 return (fac[n] * modInverse(fac[n - r], p) % p) % p;||| 58 }||| 59 void sieve(vector<long long int>& ans) {||| 60 long long int n = 10000 + 5;||| 61 bool prime[10000 + 5];||| 62 for (long long int j = 0; j < n; j++) {||| 63 prime[j] = true;||| 64 }||| 65 for (long long int p = 2; p * p < n; p++) {||| 66 if (prime[p] == true) {||| 67 for (int i = p * p; i < n; i += p) prime[i] = false;||| 68 }||| 69 }||| 70 for (int p = 2; p < n; p++)||| 71 if (prime[p]) ans.push_back(p);||| 72 }||| 73 long long int gcd(long long int a, long long int b) {||| 74 if (b == 0) return a;||| 75 return gcd(b, a % b);||| 76 }||| 77 long long lcm(long long int a, long long int b) { return (a / gcd(a, b)) * b; }||| 78 long long int countSetBits(long long int x) {||| 79 long long int ans = 0;||| 80 while (x > 0) {||| 81 if (x % 2 == 1) ans++;||| 82 x = x / 2;||| 83 }||| 84 return ans;||| 85 }||| 86 void swap(long long int& x, long long int& y) {||| 87 long long int temp = x;||| 88 x = y;||| 89 y = temp;||| 90 return;||| 91 }||| 92 void swap(vector<long long int>& x, vector<long long int>& y) {||| 93 vector<long long int> temp = x;||| 94 x = y;||| 95 y = temp;||| 96 return;||| 97 }||| 98 bool first(pair<long long int, long long int> pr1,||| 99 pair<long long int, long long int> pr2) {||| 100 return pr1.first < pr2.first;||| 101 }||| 102 int solve() {||| 103 long long int n;||| 104 cin >> n;||| 105 string second;||| 106 cin >> second;||| 107 for (long long int j = 0; j < n - 1; j++) {||| 108 if (second[j] != second[j + 1]) {||| 109 cout << j + 1 << "" "" << j + 2 << endl;||| 110 return 0;||| 111 }||| 112 }||| 113 cout << -1 << -1 << endl;||| 114 return 0;||| 115 }||| 116 int main() {||| 117 ios_base::sync_with_stdio(false);||| 118 cin.tie(NULL);||| 119 long long int t = 1;||| 120 cin >> t;||| 121 while (t--) {||| 122 solve();||| 123 }||| 124 return 0;||| 125 }||| "	"113 cout << -1 << "" "" << -1 << endl;"
98	237	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool even(long long int x) { return (x % 2 == 0); }||| 4 bool odd(long long int x) { return (x % 2 != 0); }||| 5 vector<int> sieve(int n) {||| 6 bool prime[n + 1];||| 7 memset(prime, true, sizeof(prime));||| 8 for (int p = 2; p * p <= n; p++) {||| 9 if (prime[p] == true) {||| 10 for (int i = p * p; i <= n; i += p) prime[i] = false;||| 11 }||| 12 }||| 13 vector<int> v;||| 14 for (int p = 2; p <= n; p++)||| 15 if (prime[p]) v.push_back(p);||| 16 return v;||| 17 }||| 18 long long gcd(long long int a, long long int b) {||| 19 if (b == 0) return a;||| 20 return gcd(b, a % b);||| 21 }||| 22 bool isprime(long long n) {||| 23 if (n == 1) return false;||| 24 if (n == 2 || n == 3) return true;||| 25 if (n % 2 == 0 || n % 3 == 0) return false;||| 26 for (long long i = 5; i * i <= n; i = i + 6) {||| 27 if (n % i == 0 || n % (i + 2) == 0) return false;||| 28 }||| 29 return true;||| 30 }||| 31 long long lcm(int a, int b) { return (a / gcd(a, b)) * b; }||| 32 bool compare(pair<int, int> p1, pair<int, int> p2) {||| 33 if (p1.first == p2.first)||| 34 return p1.second <= p2.second;||| 35 else||| 36 return p1.first > p2.first;||| 37 }||| 38 vector<int> presum(vector<long long int> v) {||| 39 vector<int> res(v.size());||| 40 res[0] = v[0];||| 41 for (int i = 1; i < v.size(); i++) {||| 42 res[i] = res[i - 1] + v[i];||| 43 }||| 44 return res;||| 45 }||| 46 void precision(int a) { cout << setprecision(a) << fixed; }||| 47 int main() {||| 48 int t;||| 49 cin >> t;||| 50 while (t--) {||| 51 int f = 0;||| 52 int n;||| 53 cin >> n;||| 54 string s;||| 55 cin >> s;||| 56 int l = 0, r = 0;||| 57 for (int i = 0; i < n; i++) {||| 58 int a = 0, b = 0;||| 59 for (int j = i; j < n; j++) {||| 60 if (s[j] == 'a') a++;||| 61 if (s[j] == 'b') b++;||| 62 if (a == b && (a != 0 && b != 0)) {||| 63 l = i;||| 64 r = j;||| 65 f = 1;||| 66 break;||| 67 }||| 68 }||| 69 if (f == 1) break;||| 70 }||| 71 if (f == 1)||| 72 cout << l + 1 << "" "" << r + 1 << endl;||| 73 else||| 74 cout << ""-1 -1"" << endl;||| 75 }||| 76 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 bool even(long long int x) { return (x % 2 == 0); }||| 4 bool odd(long long int x) { return (x % 2 != 0); }||| 5 vector<int> sieve(int n) {||| 6 bool prime[n + 1];||| 7 memset(prime, true, sizeof(prime));||| 8 for (int p = 2; p * p <= n; p++) {||| 9 if (prime[p] == true) {||| 10 for (int i = p * p; i <= n; i += p) prime[i] = false;||| 11 }||| 12 }||| 13 vector<int> v;||| 14 for (int p = 2; p <= n; p++)||| 15 if (prime[p]) v.push_back(p);||| 16 return v;||| 17 }||| 18 long long gcd(long long int a, long long int b) {||| 19 if (b == 0) return a;||| 20 return gcd(b, a % b);||| 21 }||| 22 bool isprime(long long n) {||| 23 if (n == 1) return false;||| 24 if (n == 2 || n == 3) return true;||| 25 if (n % 2 == 0 || n % 3 == 0) return false;||| 26 for (long long i = 5; i * i <= n; i = i + 6) {||| 27 if (n % i == 0 || n % (i + 2) == 0) return false;||| 28 }||| 29 return true;||| 30 }||| 31 long long lcm(int a, int b) { return (a / gcd(a, b)) * b; }||| 32 bool compare(pair<int, int> p1, pair<int, int> p2) {||| 33 if (p1.first == p2.first)||| 34 return p1.second <= p2.second;||| 35 else||| 36 return p1.first > p2.first;||| 37 }||| 38 vector<int> presum(vector<long long int> v) {||| 39 vector<int> res(v.size());||| 40 res[0] = v[0];||| 41 for (int i = 1; i < v.size(); i++) {||| 42 res[i] = res[i - 1] + v[i];||| 43 }||| 44 return res;||| 45 }||| 46 void precision(int a) { cout << setprecision(a) << fixed; }||| 47 int main() {||| 48 int t;||| 49 cin >> t;||| 50 while (t--) {||| 51 int f = 0;||| 52 int n;||| 53 cin >> n;||| 54 string s;||| 55 cin >> s;||| 56 int l = 0, r = 0;||| 57 for (int i = 0; i < n; i++) {||| 58 int a = 0, b = 0;||| 59 for (int j = i; j < n; j++) {||| 60 if (s[j] == 'a') a++;||| 61 if (s[j] == 'b') b++;||| 62 if (a == b && (a != 0 && b != 0)) {||| 63 l = i;||| 64 r = j;||| 65 f = 1;||| 66 break;||| 67 }||| 68 }||| 69 if (f == 1) break;||| 70 }||| 71 if (f == 1)||| 72 cout << l + 1 << "" "" << r + 1 << endl;||| 73 else||| 74 cout << ""-1"" << endl;||| 75 }||| 76 }||| "	"74 cout << ""-1 -1"" << endl;"
99	309	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, c, k, l, d;||| 4 string s;||| 5 char a[100][100];||| 6 signed main() {||| 7 cin >> t;||| 8 for (int i = 1; i <= t; i++) {||| 9 cin >> n;||| 10 cin >> s;||| 11 d = 0;||| 12 set<long long> v, r;||| 13 vector<long long> p;||| 14 set<long long>::iterator m, e, g;||| 15 c = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (int(s[j]) == 49) {||| 18 v.insert(j + 1);||| 19 c = c + 1;||| 20 } else {||| 21 r.insert(j + 1);||| 22 p.push_back(j + 1);||| 23 d = d + 1;||| 24 }||| 25 }||| 26 if ((n - c) == 0) {||| 27 cout << ""YES""||| 28 << ""\n"";||| 29 for (k = 1; k <= n; k++) {||| 30 for (l = 1; l <= n; l++) {||| 31 if (k == l) {||| 32 cout << ""X"";||| 33 } else {||| 34 cout << ""="";||| 35 }||| 36 }||| 37 cout << ""\n"";||| 38 }||| 39 } else if ((n - c) <= 2) {||| 40 cout << ""NO""||| 41 << ""\n"";||| 42 } else {||| 43 cout << ""YES""||| 44 << ""\n"";||| 45 for (k = 1; k <= n; k++) {||| 46 for (l = 1; l <= n; l++) {||| 47 if (k <= p[d - 1] && k >= p[0]) {||| 48 m = r.lower_bound(k);||| 49 if (k == l) {||| 50 cout << ""X"";||| 51 } else if ((k == p[d - 1]) && (l == p[0])) {||| 52 cout << ""+"";||| 53 } else if ((k == p[0]) && (l == p[d - 1])) {||| 54 cout << ""-"";||| 55 } else if (k == (*m)) {||| 56 if (k == p[d - 1]) {||| 57 g = m;||| 58 --g;||| 59 if (l == *g) {||| 60 cout << ""-"";||| 61 } else {||| 62 cout << ""="";||| 63 }||| 64 } else if (k == p[0]) {||| 65 if (l == p[1]) {||| 66 cout << ""+"";||| 67 } else {||| 68 cout << ""="";||| 69 }||| 70 } else {||| 71 g = m;||| 72 e = m;||| 73 --g;||| 74 ++e;||| 75 if (l == *(g)) {||| 76 cout << ""-"";||| 77 } else if (l == *(e)) {||| 78 cout << ""+"";||| 79 } else {||| 80 cout << ""="";||| 81 }||| 82 }||| 83 } else {||| 84 cout << ""="";||| 85 }||| 86 } else {||| 87 if (k == l) {||| 88 cout << ""X"";||| 89 } else {||| 90 cout << ""="";||| 91 }||| 92 }||| 93 }||| 94 cout << ""\n"";||| 95 }||| 96 }||| 97 }||| 98 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long t, n, c, k, l, d;||| 4 string s;||| 5 char a[100][100];||| 6 signed main() {||| 7 cin >> t;||| 8 for (int i = 1; i <= t; i++) {||| 9 cin >> n;||| 10 cin >> s;||| 11 d = 0;||| 12 set<long long> v, r;||| 13 vector<long long> p;||| 14 set<long long>::iterator m, e, g;||| 15 c = 0;||| 16 for (int j = 0; j < n; j++) {||| 17 if (int(s[j]) == 49) {||| 18 v.insert(j + 1);||| 19 c = c + 1;||| 20 } else {||| 21 r.insert(j + 1);||| 22 p.push_back(j + 1);||| 23 d = d + 1;||| 24 }||| 25 }||| 26 if ((n - c) == 0) {||| 27 cout << ""YES""||| 28 << ""\n"";||| 29 for (k = 1; k <= n; k++) {||| 30 for (l = 1; l <= n; l++) {||| 31 if (k == l) {||| 32 cout << ""X"";||| 33 } else {||| 34 cout << ""="";||| 35 }||| 36 }||| 37 cout << ""\n"";||| 38 }||| 39 } else if ((n - c) <= 2) {||| 40 cout << ""NO""||| 41 << ""\n"";||| 42 } else {||| 43 cout << ""YES""||| 44 << ""\n"";||| 45 for (k = 1; k <= 1; k++) {||| 46 for (l = 1; l <= n; l++) {||| 47 if (k <= p[d - 1] && k >= p[0]) {||| 48 m = r.lower_bound(k);||| 49 if (k == l) {||| 50 cout << ""X"";||| 51 } else if ((k == p[d - 1]) && (l == p[0])) {||| 52 cout << ""+"";||| 53 } else if ((k == p[0]) && (l == p[d - 1])) {||| 54 cout << ""-"";||| 55 } else if (k == (*m)) {||| 56 if (k == p[d - 1]) {||| 57 g = m;||| 58 --g;||| 59 if (l == *g) {||| 60 cout << ""-"";||| 61 } else {||| 62 cout << ""="";||| 63 }||| 64 } else if (k == p[0]) {||| 65 if (l == p[1]) {||| 66 cout << ""+"";||| 67 } else {||| 68 cout << ""="";||| 69 }||| 70 } else {||| 71 g = m;||| 72 e = m;||| 73 --g;||| 74 ++e;||| 75 if (l == *(g)) {||| 76 cout << ""-"";||| 77 } else if (l == *(e)) {||| 78 cout << ""+"";||| 79 } else {||| 80 cout << ""="";||| 81 }||| 82 }||| 83 } else {||| 84 cout << ""="";||| 85 }||| 86 } else {||| 87 if (k == l) {||| 88 cout << ""X"";||| 89 } else {||| 90 cout << ""="";||| 91 }||| 92 }||| 93 }||| 94 cout << ""\n"";||| 95 }||| 96 }||| 97 }||| 98 }||| "	45 for (k = 1; k <= n; k++) {
99	49	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int ii = 0; ii < t; ii++) {||| 7 int n;||| 8 cin >> n;||| 9 bool A[52];||| 10 char Aa[52][52];||| 11 for (int i = 0; i < n; i++) {||| 12 char t;||| 13 cin >> t;||| 14 if (t == '1')||| 15 A[i] = 0;||| 16 else||| 17 A[i] = 1;||| 18 }||| 19 int k = 0;||| 20 int t = -1;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 if (A[i] == 0) {||| 23 k++;||| 24 } else {||| 25 t = i;||| 26 }||| 27 }||| 28 if (n - k > 2 || n - k == 0)||| 29 cout << ""YES"" << endl;||| 30 else {||| 31 cout << ""NO"" << endl;||| 32 continue;||| 33 }||| 34 for (int i = 0; i < n; i++) {||| 35 for (int j = 0; j < n; j++) {||| 36 Aa[i][j] = '=';||| 37 }||| 38 }||| 39 for (int i = 0; i < n; i++) Aa[i][i] = 'X';||| 40 int c1 = t;||| 41 if (n - k > 2) {||| 42 for (int i = t + 1; i < n; i++) {||| 43 if (A[i] == 1) {||| 44 Aa[c1][i] = '+';||| 45 Aa[i][c1] = '-';||| 46 c1 = i;||| 47 }||| 48 }||| 49 Aa[c1][t] = '+';||| 50 Aa[t][c1] = '-';||| 51 }||| 52 for (int i = 0; i < n; i++) {||| 53 for (int j = 0; j < n; j++) {||| 54 cout << Aa[i][j];||| 55 }||| 56 cout << endl;||| 57 }||| 58 }||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 for (int ii = 0; ii < t; ii++) {||| 7 int n;||| 8 cin >> n;||| 9 bool A[52];||| 10 char Aa[52][52];||| 11 for (int i = 0; i < n; i++) {||| 12 char t;||| 13 cin >> t;||| 14 if (t == '1')||| 15 A[i] = 0;||| 16 else||| 17 A[i] = 1;||| 18 }||| 19 int k = 0;||| 20 int t = -1;||| 21 for (int i = n - 1; i >= 0; i--) {||| 22 if (A[i] == 0) {||| 23 k++;||| 24 } else {||| 25 t = i;||| 26 }||| 27 }||| 28 if (n - k > 1 || n - k == 0)||| 29 cout << ""YES"" << endl;||| 30 else {||| 31 cout << ""NO"" << endl;||| 32 continue;||| 33 }||| 34 for (int i = 0; i < n; i++) {||| 35 for (int j = 0; j < n; j++) {||| 36 Aa[i][j] = '=';||| 37 }||| 38 }||| 39 for (int i = 0; i < n; i++) Aa[i][i] = 'X';||| 40 int c1 = t;||| 41 if (n - k > 1) {||| 42 for (int i = t + 1; i < n; i++) {||| 43 if (A[i] == 1) {||| 44 Aa[c1][i] = '+';||| 45 Aa[i][c1] = '-';||| 46 c1 = i;||| 47 }||| 48 }||| 49 Aa[c1][t] = '+';||| 50 Aa[t][c1] = '-';||| 51 }||| 52 for (int i = 0; i < n; i++) {||| 53 for (int j = 0; j < n; j++) {||| 54 cout << Aa[i][j];||| 55 }||| 56 cout << endl;||| 57 }||| 58 }||| 59 return 0;||| 60 }||| "	28 if (n - k > 2 || n - k == 0)
99	21	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e5 + 5;||| 4 const int INF = 1e9 + 7;||| 5 const int mod = 1e9 + 7;||| 6 int T, n;||| 7 char s[MAXN];||| 8 char a[66][66];||| 9 int read() {||| 10 int s = 0, f = 0;||| 11 char ch = getchar();||| 12 while (!isdigit(ch)) f |= (ch == '-'), ch = getchar();||| 13 while (isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0', ch = getchar();||| 14 return f ? -s : s;||| 15 }||| 16 int main() {||| 17 T = read();||| 18 while (T--) {||| 19 n = read();||| 20 cin >> s + 1;||| 21 int x = 0, y = 0, z = 0;||| 22 for (int i = 1; i <= n; ++i) {||| 23 if (s[i] == '2') {||| 24 if (x && y && !z) z = i;||| 25 if (x && !y) y = i;||| 26 if (!x) x = i;||| 27 }||| 28 }||| 29 if (!x && !y && !z) {||| 30 puts(""YES"");||| 31 for (int i = 1; i <= n; ++i) {||| 32 for (int j = 1; j <= n; ++j) {||| 33 if (i != j)||| 34 printf(""="");||| 35 else||| 36 printf(""X"");||| 37 }||| 38 puts("""");||| 39 }||| 40 continue;||| 41 }||| 42 if (x && !z) {||| 43 puts(""NO"");||| 44 continue;||| 45 }||| 46 if (x && y && z) {||| 47 puts(""YES"");||| 48 for (int i = 1; i <= n; ++i)||| 49 for (int j = 1; j <= n; ++j) a[i][j] = '=';||| 50 for (int i = 1; i <= n; ++i) a[i][i] = 'X';||| 51 for (int i = 1; i <= n; ++i) {||| 52 if (i != x) a[x][i] = '-', a[i][x] = '+';||| 53 if (i != y) a[y][i] = '-', a[i][y] = '+';||| 54 if (i != z) a[z][i] = '-', a[i][z] = '+';||| 55 }||| 56 a[x][y] = '-', a[y][x] = '+';||| 57 a[y][z] = '-', a[z][y] = '+';||| 58 a[z][x] = '-', a[x][z] = '+';||| 59 for (int i = 1; i <= n; ++i) {||| 60 for (int j = 1; j <= n; ++j) {||| 61 printf(""%c"", a[i][j]);||| 62 }||| 63 puts("""");||| 64 }||| 65 }||| 66 }||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 1e5 + 5;||| 4 const int INF = 1e9 + 7;||| 5 const int mod = 1e9 + 7;||| 6 int T, n;||| 7 char s[MAXN];||| 8 char a[66][66];||| 9 int read() {||| 10 int s = 0, f = 0;||| 11 char ch = getchar();||| 12 while (!isdigit(ch)) f |= (ch == '-'), ch = getchar();||| 13 while (isdigit(ch)) s = (s << 1) + (s << 3) + ch - '0', ch = getchar();||| 14 return f ? -s : s;||| 15 }||| 16 int main() {||| 17 T = read();||| 18 while (T--) {||| 19 n = read();||| 20 cin >> s + 1;||| 21 int x = 0, y = 0, z = 0;||| 22 for (int i = 1; i <= n; ++i) {||| 23 if (s[i] == '2') {||| 24 if (x && y && !z) z = i;||| 25 if (x && !y) y = i;||| 26 if (!x) x = i;||| 27 }||| 28 }||| 29 if (!x && !y && !z) {||| 30 puts(""YES"");||| 31 for (int i = 1; i <= n; ++i) {||| 32 for (int j = 1; j <= n; ++j) {||| 33 if (i != j)||| 34 printf(""="");||| 35 else||| 36 printf(""X"");||| 37 }||| 38 puts("""");||| 39 }||| 40 continue;||| 41 }||| 42 if (x && !z) {||| 43 puts(""NO"");||| 44 continue;||| 45 }||| 46 if (x && y && z) {||| 47 puts(""YES"");||| 48 for (int i = 1; i <= n; ++i)||| 49 for (int j = 1; j <= n; ++j) a[i][i] = '=';||| 50 for (int i = 1; i <= n; ++i) a[i][i] = 'X';||| 51 for (int i = 1; i <= n; ++i) {||| 52 if (i != x) a[x][i] = '-', a[i][x] = '+';||| 53 if (i != y) a[y][i] = '-', a[i][y] = '+';||| 54 if (i != z) a[z][i] = '-', a[i][z] = '+';||| 55 }||| 56 a[x][y] = '-', a[y][x] = '+';||| 57 a[y][z] = '-', a[z][y] = '+';||| 58 a[z][x] = '-', a[x][z] = '+';||| 59 for (int i = 1; i <= n; ++i) {||| 60 for (int j = 1; j <= n; ++j) {||| 61 printf(""%c"", a[i][j]);||| 62 }||| 63 puts("""");||| 64 }||| 65 }||| 66 }||| 67 return 0;||| 68 }||| "	49 for (int j = 1; j <= n; ++j) a[i][j] = '=';
100	120	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 1;||| 4 long long fact[N];||| 5 const int MOD = 998244353;||| 6 long long power(long long x, long long y) {||| 7 long long res = 1;||| 8 x = x % MOD;||| 9 while (y > 0) {||| 10 if (y & 1) res = (res * x) % MOD;||| 11 y = y >> 1;||| 12 x = (x * x) % MOD;||| 13 }||| 14 return res;||| 15 }||| 16 long long modInverse(long long x) { return power(x, MOD - 2); }||| 17 long long modAdd(long long a, long long b) {||| 18 return (a % MOD + b % MOD + 2 * MOD) % MOD;||| 19 }||| 20 long long modMult(long long a, long long b) {||| 21 return (a % MOD * b % MOD) % MOD;||| 22 }||| 23 long long modDiv(long long a, long long b) {||| 24 return (a % MOD * modInverse(b)) % MOD;||| 25 }||| 26 void getFact() {||| 27 fact[0] = 1;||| 28 for (auto i = 1; i < N; i++) {||| 29 fact[i] = (fact[i - 1] * i) % MOD;||| 30 }||| 31 }||| 32 long long nCrModP(long long n, long long r) {||| 33 if (r == 0) return 1;||| 34 return ((fact[n] * modInverse(fact[r])) % MOD * modInverse(fact[n - r])) %||| 35 MOD;||| 36 }||| 37 int main() {||| 38 ios_base ::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 cout.tie(NULL);||| 41 int test;||| 42 cin >> test;||| 43 getFact();||| 44 for (int t = 1; t <= test; t++) {||| 45 int n;||| 46 cin >> n;||| 47 vector<long long> a(n);||| 48 map<long long, int> m;||| 49 for (int i = 0; i < n; i++) {||| 50 cin >> a[i];||| 51 m[a[i]]++;||| 52 }||| 53 sort(a.begin(), a.end());||| 54 long long maxi = a[n - 1];||| 55 int ind = n - 1;||| 56 while (ind >= 0) {||| 57 if (maxi == a[ind]) {||| 58 ind--;||| 59 continue;||| 60 }||| 61 if (maxi - a[ind] >= 2)||| 62 maxi = -1;||| 63 else||| 64 maxi = a[ind];||| 65 break;||| 66 }||| 67 if (maxi == -1 && m[a[n - 1]] == 1) {||| 68 cout << ""0\n"";||| 69 continue;||| 70 }||| 71 int cnt2 = m[maxi];||| 72 int cnt1 = m[a[n - 1]];||| 73 if (cnt1 > 1) {||| 74 cout << fact[n] << ""\n"";||| 75 continue;||| 76 }||| 77 int rem = n - cnt1 - cnt2;||| 78 long long tot = fact[n];||| 79 long long fs = fact[n - cnt1];||| 80 fs = 0ll - fs;||| 81 tot = modAdd(tot, fs);||| 82 for (int i = 1; i <= rem; i++) {||| 83 long long num = nCrModP(rem, i);||| 84 long long rest = fact[n - 1 - i];||| 85 long long no = fact[i];||| 86 num = modMult(num, rest);||| 87 no = modMult(no, num);||| 88 no = 0ll - no;||| 89 tot = modAdd(tot, no);||| 90 }||| 91 cout << tot << ""\n"";||| 92 }||| 93 return 0;||| 94 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 1;||| 4 long long fact[N];||| 5 const int MOD = 998244353;||| 6 long long power(long long x, long long y) {||| 7 long long res = 1;||| 8 x = x % MOD;||| 9 while (y > 0) {||| 10 if (y & 1) res = (res * x) % MOD;||| 11 y = y >> 1;||| 12 x = (x * x) % MOD;||| 13 }||| 14 return res;||| 15 }||| 16 long long modInverse(long long x) { return power(x, MOD - 2); }||| 17 long long modAdd(long long a, long long b) {||| 18 return (a % MOD + b % MOD + 2 * MOD) % MOD;||| 19 }||| 20 long long modMult(long long a, long long b) {||| 21 return (a % MOD * b % MOD) % MOD;||| 22 }||| 23 long long modDiv(long long a, long long b) {||| 24 return (a % MOD * modInverse(b)) % MOD;||| 25 }||| 26 void getFact() {||| 27 fact[0] = 1;||| 28 for (auto i = 1; i < N; i++) {||| 29 fact[i] = (fact[i - 1] * i) % MOD;||| 30 }||| 31 }||| 32 long long nCrModP(long long n, long long r) {||| 33 if (r == 0) return 1;||| 34 return ((fact[n] * modInverse(fact[r])) % MOD * modInverse(fact[n - r])) %||| 35 MOD;||| 36 }||| 37 int main() {||| 38 ios_base ::sync_with_stdio(false);||| 39 cin.tie(NULL);||| 40 cout.tie(NULL);||| 41 int test;||| 42 cin >> test;||| 43 getFact();||| 44 for (int t = 1; t <= test; t++) {||| 45 int n;||| 46 cin >> n;||| 47 vector<long long> a(n);||| 48 map<long long, int> m;||| 49 for (int i = 0; i < n; i++) {||| 50 cin >> a[i];||| 51 m[a[i]]++;||| 52 }||| 53 sort(a.begin(), a.end());||| 54 long long maxi = a[n - 1];||| 55 int ind = n - 1;||| 56 while (ind >= 0) {||| 57 if (maxi == a[ind]) {||| 58 ind--;||| 59 continue;||| 60 }||| 61 if (maxi - a[ind] >= 2)||| 62 maxi = -1;||| 63 else||| 64 maxi = a[ind];||| 65 break;||| 66 }||| 67 if (maxi == -1 && m[a[n - 1]] > 1) {||| 68 cout << ""0\n"";||| 69 continue;||| 70 }||| 71 int cnt2 = m[maxi];||| 72 int cnt1 = m[a[n - 1]];||| 73 if (cnt1 > 1) {||| 74 cout << fact[n] << ""\n"";||| 75 continue;||| 76 }||| 77 int rem = n - cnt1 - cnt2;||| 78 long long tot = fact[n];||| 79 long long fs = fact[n - cnt1];||| 80 fs = 0ll - fs;||| 81 tot = modAdd(tot, fs);||| 82 for (int i = 1; i <= rem; i++) {||| 83 long long num = nCrModP(rem, i);||| 84 long long rest = fact[n - 1 - i];||| 85 long long no = fact[i];||| 86 num = modMult(num, rest);||| 87 no = modMult(no, num);||| 88 no = 0ll - no;||| 89 tot = modAdd(tot, no);||| 90 }||| 91 cout << tot << ""\n"";||| 92 }||| 93 return 0;||| 94 }||| "	67 if (maxi == -1 && m[a[n - 1]] == 1) {
100	279	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double PI = 3.14159265389793238462643383279502884197169;||| 4 const long long MOD = 1e9 + 7;||| 5 const long long MOD1 = 998244353;||| 6 const long long MODo = 1337377;||| 7 const int MAXN = 2e5 + 2;||| 8 const int oo = 1e9;||| 9 const long long oo15 = 1e15;||| 10 const long long oo18 = 1e18;||| 11 const long long oooo = 9223372036854775807;||| 12 int a[200005];||| 13 long long fact[200005], infact[200005];||| 14 long long power(long long x, long long y) {||| 15 if (y == 0) return 1;||| 16 long long yy = power(x, y / 2);||| 17 if (y % 2)||| 18 return yy * yy % MOD1 * x % MOD1;||| 19 else||| 20 return yy * yy % MOD1;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(0);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 fact[0] = 1;||| 27 for (long long i = 1; i <= 2e5 + 3; i++) fact[i] = i * fact[i - 1] % MOD1;||| 28 infact[200003] = power(fact[200003], MOD1 - 2);||| 29 for (long long i = 2e5 + 2; i >= 0; i--)||| 30 infact[i] = (i + 1) * infact[i + 1] % MOD1;||| 31 int testcase;||| 32 cin >> testcase;||| 33 while (testcase--) {||| 34 int n;||| 35 cin >> n;||| 36 int mx1 = 0, mx2 = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 cin >> a[i];||| 39 if (a[i] > mx1) {||| 40 mx2 = mx1;||| 41 mx1 = a[i];||| 42 } else||| 43 mx2 = max(mx2, a[i]);||| 44 }||| 45 if (mx1 - mx2 >= 2) {||| 46 cout << 0 << ""\n"";||| 47 } else if (mx2 == mx1) {||| 48 cout << fact[n] << ""\n"";||| 49 } else {||| 50 long long dem = 0;||| 51 for (int i = 1; i <= n; i++)||| 52 if (a[i] == mx2) dem++;||| 53 cout << fact[n - dem - 1] * fact[dem] % MOD1 *||| 54 (fact[n] * infact[dem + 1] % MOD1 * infact[n - dem - 1] %||| 55 MOD1) %||| 56 MOD1 * dem % MOD1||| 57 << ""\n"";||| 58 }||| 59 }||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const double PI = 3.14159265389793238462643383279502884197169;||| 4 const long long MOD = 1e9 + 7;||| 5 const long long MOD1 = 998244353;||| 6 const long long MODo = 1337377;||| 7 const int MAXN = 2e5 + 2;||| 8 const int oo = 1e9;||| 9 const long long oo15 = 1e15;||| 10 const long long oo18 = 1e18;||| 11 const long long oooo = 9223372036854775807;||| 12 int a[200005];||| 13 long long fact[200005], infact[200005];||| 14 long long power(long long x, long long y) {||| 15 if (y == 0) return 1;||| 16 long long yy = power(x, y / 2);||| 17 if (y % 2)||| 18 return yy * yy % MOD1 * x % MOD1;||| 19 else||| 20 return yy * yy % MOD1;||| 21 }||| 22 int main() {||| 23 ios_base::sync_with_stdio(0);||| 24 cin.tie(0);||| 25 cout.tie(0);||| 26 fact[0] = 1;||| 27 for (long long i = 1; i <= 2e5 + 3; i++) fact[i] = i * fact[i - 1] % MOD1;||| 28 infact[200003] = power(fact[200003], MOD1 - 2);||| 29 for (long long i = 2e5 + 2; i >= 0; i--)||| 30 infact[i] = (i + 1) * infact[i + 1] % MOD1;||| 31 int testcase;||| 32 cin >> testcase;||| 33 while (testcase--) {||| 34 int n;||| 35 cin >> n;||| 36 int mx1 = 0, mx2 = 0;||| 37 for (int i = 1; i <= n; i++) {||| 38 cin >> a[i];||| 39 if (a[i] > mx1) {||| 40 mx2 = mx1;||| 41 mx1 = a[i];||| 42 } else||| 43 mx2 = max(mx2, a[i]);||| 44 }||| 45 if (mx1 - mx2 >= 2) {||| 46 cout << 0 << ""\n"";||| 47 } else if (mx2 == mx1) {||| 48 cout << fact[n] << ""\n"";||| 49 } else {||| 50 long long dem = 0;||| 51 for (int i = 1; i <= n; i++)||| 52 if (a[i] == mx2) dem++;||| 53 cout << fact[n - dem - 1] * fact[dem] % MOD1 *||| 54 (fact[n] * infact[dem + 1] % MOD1 * infact[n - dem - 1] %||| 55 MOD1) *||| 56 dem % MOD1||| 57 << ""\n"";||| 58 }||| 59 }||| 60 }||| "	55 MOD1) %
101	107	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 100;||| 4 const int mod = 1e9 + 7;||| 5 const int inf = 1e6;||| 6 int T;||| 7 int n, m, k;||| 8 int x[maxn], y[maxn];||| 9 int cntx[maxn], cnty[maxn];||| 10 map<pair<int, int>, int> prex, prey;||| 11 int main() {||| 12 std::ios::sync_with_stdio(false);||| 13 cin >> T;||| 14 while (T--) {||| 15 prex.clear();||| 16 prey.clear();||| 17 memset(cntx, 0, sizeof(cntx));||| 18 memset(cnty, 0, sizeof(cnty));||| 19 long long ans = 0;||| 20 cin >> n >> m >> k;||| 21 for (int i = 1; i <= n; i++) cin >> x[i];||| 22 for (int i = 1; i <= m; i++) cin >> y[i];||| 23 x[n + 1] = y[m + 1] = inf;||| 24 while (k--) {||| 25 int u, v;||| 26 cin >> u >> v;||| 27 int ex = lower_bound(x + 1, x + 1 + n + 1, u) - x;||| 28 int ey = lower_bound(y + 1, y + 1 + m + 1, v) - y;||| 29 if (u == x[ex]) {||| 30 if (v == y[ey]) continue;||| 31 ans += cnty[ey]++ - prex[{ex, ey}]++;||| 32 } else||| 33 ans += cntx[ex]++ - prey[{ex, ey}]++;||| 34 }||| 35 cout << ans << endl;||| 36 }||| 37 return 0;||| 38 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 100;||| 4 const int mod = 1e9 + 7;||| 5 const int inf = 1e6;||| 6 int T;||| 7 int n, m, k;||| 8 int x[maxn], y[maxn];||| 9 int cntx[maxn], cnty[maxn];||| 10 map<pair<int, int>, int> prex, prey;||| 11 int main() {||| 12 std::ios::sync_with_stdio(false);||| 13 cin >> T;||| 14 while (T--) {||| 15 prex.clear();||| 16 prey.clear();||| 17 memset(cntx, 0, sizeof(cntx));||| 18 memset(cnty, 0, sizeof(cnty));||| 19 int ans = 0;||| 20 cin >> n >> m >> k;||| 21 for (int i = 1; i <= n; i++) cin >> x[i];||| 22 for (int i = 1; i <= m; i++) cin >> y[i];||| 23 x[n + 1] = y[m + 1] = inf;||| 24 while (k--) {||| 25 int u, v;||| 26 cin >> u >> v;||| 27 int ex = lower_bound(x + 1, x + 1 + n + 1, u) - x;||| 28 int ey = lower_bound(y + 1, y + 1 + m + 1, v) - y;||| 29 if (u == x[ex]) {||| 30 if (v == y[ey]) continue;||| 31 ans += cnty[ey]++ - prex[{ex, ey}]++;||| 32 } else||| 33 ans += cntx[ex]++ - prey[{ex, ey}]++;||| 34 }||| 35 cout << ans << endl;||| 36 }||| 37 return 0;||| 38 }||| 	19 long long ans = 0;
101	45	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 inline bool ckmax(T &x, const T &y) {||| 5 return x < y ? x = y, true : false;||| 6 }||| 7 template <class T>||| 8 inline bool ckmin(T &x, const T &y) {||| 9 return x > y ? x = y, true : false;||| 10 }||| 11 const int maxn = 1e6 + 10;||| 12 int k, m, n, nxtx[maxn], nxty[maxn], px[maxn], py[maxn], sumx[maxn], sumy[maxn],||| 13 t_case, x[maxn], y[maxn];||| 14 bool vis[maxn], visx[maxn], visy[maxn];||| 15 vector<int> c[maxn], r[maxn];||| 16 int main() {||| 17 scanf(""%d"", &t_case);||| 18 while (t_case--) {||| 19 scanf(""%d%d%d"", &n, &m, &k);||| 20 for (register int i = 1; i <= n; ++i)||| 21 scanf(""%d"", x + i), c[x[i]].clear(), visx[x[i]] = true;||| 22 for (register int i = 1; i <= m; ++i)||| 23 scanf(""%d"", y + i), r[y[i]].clear(), visy[y[i]] = true;||| 24 for (register int i = 1; i <= k; ++i) {||| 25 scanf(""%d%d"", px + i, py + i);||| 26 nxtx[i] = *lower_bound(x + 1, x + n + 1, px[i]);||| 27 nxty[i] = *lower_bound(y + 1, y + m + 1, py[i]);||| 28 if (visx[px[i]] && visy[py[i]]) vis[i] = true;||| 29 if (visx[px[i]]) c[px[i]].push_back(i);||| 30 if (visy[py[i]]) r[py[i]].push_back(i);||| 31 }||| 32 long long ans = 0;||| 33 for (register int i = 1; i <= m; ++i) {||| 34 for (auto j : r[y[i]]) {||| 35 if (vis[j]) continue;||| 36 ans += sumx[nxtx[j]];||| 37 }||| 38 for (auto j : r[y[i]]) {||| 39 if (vis[j]) continue;||| 40 ++sumx[nxtx[j]];||| 41 }||| 42 }||| 43 for (register int i = 1; i <= n; ++i) {||| 44 for (auto j : c[x[i]]) {||| 45 if (vis[j]) continue;||| 46 ans += sumy[nxty[j]];||| 47 }||| 48 for (auto j : c[x[i]]) {||| 49 if (vis[j]) continue;||| 50 ++sumy[nxty[j]];||| 51 }||| 52 }||| 53 printf(""%lld\n"", ans);||| 54 for (register int i = 1; i <= n; ++i) visx[x[i]] = false;||| 55 for (register int i = 1; i <= m; ++i) visy[y[i]] = false;||| 56 for (register int i = 1; i <= k; ++i) {||| 57 vis[i] = false;||| 58 sumx[nxtx[i]] = sumy[nxty[i]] = 0;||| 59 }||| 60 }||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 inline bool ckmax(T &x, const T &y) {||| 5 return x < y ? x = y, true : false;||| 6 }||| 7 template <class T>||| 8 inline bool ckmin(T &x, const T &y) {||| 9 return x > y ? x = y, true : false;||| 10 }||| 11 const int maxn = 1e6 + 10;||| 12 int k, m, n, nxtx[maxn], nxty[maxn], px[maxn], py[maxn], sumx[maxn], sumy[maxn],||| 13 t_case, x[maxn], y[maxn];||| 14 bool vis[maxn], visx[maxn], visy[maxn];||| 15 vector<int> c[maxn], r[maxn];||| 16 int main() {||| 17 scanf(""%d"", &t_case);||| 18 while (t_case--) {||| 19 scanf(""%d%d%d"", &n, &m, &k);||| 20 for (register int i = 1; i <= n; ++i)||| 21 scanf(""%d"", x + i), c[x[i]].clear(), visx[x[i]] = true;||| 22 for (register int i = 1; i <= m; ++i)||| 23 scanf(""%d"", y + i), r[y[i]].clear(), visy[y[i]] = true;||| 24 for (register int i = 1; i <= k; ++i) {||| 25 scanf(""%d%d"", px + i, py + i);||| 26 nxtx[i] = *lower_bound(x + 1, x + n + 1, px[i]);||| 27 nxty[i] = *lower_bound(y + 1, y + n + 1, py[i]);||| 28 if (visx[px[i]] && visy[py[i]]) vis[i] = true;||| 29 if (visx[px[i]]) c[px[i]].push_back(i);||| 30 if (visy[py[i]]) r[py[i]].push_back(i);||| 31 }||| 32 long long ans = 0;||| 33 for (register int i = 1; i <= m; ++i) {||| 34 for (auto j : r[y[i]]) {||| 35 if (vis[j]) continue;||| 36 ans += sumx[nxtx[j]];||| 37 }||| 38 for (auto j : r[y[i]]) {||| 39 if (vis[j]) continue;||| 40 ++sumx[nxtx[j]];||| 41 }||| 42 }||| 43 for (register int i = 1; i <= n; ++i) {||| 44 for (auto j : c[x[i]]) {||| 45 if (vis[j]) continue;||| 46 ans += sumy[nxty[j]];||| 47 }||| 48 for (auto j : c[x[i]]) {||| 49 if (vis[j]) continue;||| 50 ++sumy[nxty[j]];||| 51 }||| 52 }||| 53 printf(""%lld\n"", ans);||| 54 for (register int i = 1; i <= n; ++i) visx[x[i]] = false;||| 55 for (register int i = 1; i <= m; ++i) visy[y[i]] = false;||| 56 for (register int i = 1; i <= k; ++i) {||| 57 vis[i] = false;||| 58 sumx[nxtx[i]] = sumy[nxty[i]] = 0;||| 59 }||| 60 }||| 61 return 0;||| 62 }||| "	27 nxty[i] = *lower_bound(y + 1, y + m + 1, py[i]);
101	20	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int a, long long int b, long long int m) {||| 4 long long int ans = 1;||| 5 while (b > 0) {||| 6 if (b & 1) {||| 7 ans = (ans * a) % m;||| 8 }||| 9 a = (a * a) % m;||| 10 b = b / 2;||| 11 }||| 12 return ans;||| 13 }||| 14 bool compare(pair<long long int, long long int>& a,||| 15 pair<long long int, long long int>& b) {||| 16 if (a.second == b.second)||| 17 return a.first <= b.first;||| 18 else||| 19 return a.second < b.second;||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(false);||| 23 cin.tie(NULL);||| 24 int t;||| 25 cin >> t;||| 26 for (int i = 0; i < t; i++) {||| 27 long long int mod = 998244353;||| 28 long long int n, m, k, a;||| 29 cin >> n >> m >> k;||| 30 vector<pair<long long int, long long int> > arr(k);||| 31 set<long long int> myset1, myset2;||| 32 for (int i = 0; i < n; i++) {||| 33 cin >> a;||| 34 myset1.insert(a);||| 35 }||| 36 myset1.insert(1000000);||| 37 for (int i = 0; i < m; i++) {||| 38 cin >> a;||| 39 myset2.insert(a);||| 40 }||| 41 myset2.insert(1000000);||| 42 for (int i = 0; i < k; i++) {||| 43 cin >> arr[i].first >> arr[i].second;||| 44 }||| 45 sort(arr.begin(), arr.end());||| 46 long long int ans = 0, cur = 0;||| 47 for (auto val : myset1) {||| 48 map<long long int, long long int> mymap;||| 49 while (cur < k && arr[cur].first < val) {||| 50 mymap[arr[cur].second]++;||| 51 cur++;||| 52 }||| 53 while (cur < k && arr[cur].first == val) {||| 54 cur++;||| 55 }||| 56 long long int sum = 0, temp = 0;||| 57 for (auto l : mymap) {||| 58 sum += l.second;||| 59 temp += (l.second * (l.second - 1)) / 2;||| 60 }||| 61 ans += ((sum * (sum - 1)) / 2 - temp);||| 62 }||| 63 cur = 0;||| 64 sort(arr.begin(), arr.end(), compare);||| 65 for (auto val : myset2) {||| 66 map<long long int, long long int> mymap;||| 67 while (cur < k && arr[cur].second < val) {||| 68 mymap[arr[cur].first]++;||| 69 cur++;||| 70 }||| 71 while (cur < k && arr[cur].second == val) {||| 72 cur++;||| 73 }||| 74 long long int sum = 0, temp = 0;||| 75 for (auto l : mymap) {||| 76 sum += l.second;||| 77 temp += (l.second * (l.second - 1)) / 2;||| 78 }||| 79 ans += ((sum * (sum - 1)) / 2 - temp);||| 80 }||| 81 cout << ans << endl;||| 82 }||| 83 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long int power(long long int a, long long int b, long long int m) {||| 4 long long int ans = 1;||| 5 while (b > 0) {||| 6 if (b & 1) {||| 7 ans = (ans * a) % m;||| 8 }||| 9 a = (a * a) % m;||| 10 b = b / 2;||| 11 }||| 12 return ans;||| 13 }||| 14 bool compare(pair<long long int, long long int>& a,||| 15 pair<long long int, long long int>& b) {||| 16 if (a.second == b.second)||| 17 return a.first < b.second;||| 18 else||| 19 return a.second < b.second;||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(false);||| 23 cin.tie(NULL);||| 24 int t;||| 25 cin >> t;||| 26 for (int i = 0; i < t; i++) {||| 27 long long int mod = 998244353;||| 28 long long int n, m, k, a;||| 29 cin >> n >> m >> k;||| 30 vector<pair<long long int, long long int> > arr(k);||| 31 set<long long int> myset1, myset2;||| 32 for (int i = 0; i < n; i++) {||| 33 cin >> a;||| 34 myset1.insert(a);||| 35 }||| 36 myset1.insert(1000000);||| 37 for (int i = 0; i < m; i++) {||| 38 cin >> a;||| 39 myset2.insert(a);||| 40 }||| 41 myset2.insert(1000000);||| 42 for (int i = 0; i < k; i++) {||| 43 cin >> arr[i].first >> arr[i].second;||| 44 }||| 45 sort(arr.begin(), arr.end());||| 46 long long int ans = 0, cur = 0;||| 47 for (auto val : myset1) {||| 48 map<long long int, long long int> mymap;||| 49 while (cur < k && arr[cur].first < val) {||| 50 mymap[arr[cur].second]++;||| 51 cur++;||| 52 }||| 53 while (cur < k && arr[cur].first == val) {||| 54 cur++;||| 55 }||| 56 long long int sum = 0, temp = 0;||| 57 for (auto l : mymap) {||| 58 sum += l.second;||| 59 temp += (l.second * (l.second - 1)) / 2;||| 60 }||| 61 ans += ((sum * (sum - 1)) / 2 - temp);||| 62 }||| 63 cur = 0;||| 64 sort(arr.begin(), arr.end(), compare);||| 65 for (auto val : myset2) {||| 66 map<long long int, long long int> mymap;||| 67 while (cur < k && arr[cur].second < val) {||| 68 mymap[arr[cur].first]++;||| 69 cur++;||| 70 }||| 71 while (cur < k && arr[cur].second == val) {||| 72 cur++;||| 73 }||| 74 long long int sum = 0, temp = 0;||| 75 for (auto l : mymap) {||| 76 sum += l.second;||| 77 temp += (l.second * (l.second - 1)) / 2;||| 78 }||| 79 ans += ((sum * (sum - 1)) / 2 - temp);||| 80 }||| 81 cout << ans << endl;||| 82 }||| 83 }||| 	17 return a.first <= b.first;
101	102	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> x, y, x2, y2, h2, v2;||| 4 set<int> h, v;||| 5 vector<int> x3[1000005], y3[1000005];||| 6 int main() {||| 7 int t;||| 8 scanf(""%d"", &t);||| 9 while (t--) {||| 10 h.clear();||| 11 v.clear();||| 12 x.clear();||| 13 y.clear();||| 14 x2.clear();||| 15 y2.clear();||| 16 h2.clear();||| 17 v2.clear();||| 18 int n, m, k, tmp;||| 19 scanf(""%d%d%d"", &n, &m, &k);||| 20 for (int i = 1; i <= n; i++) {||| 21 scanf(""%d"", &tmp);||| 22 h.insert(tmp);||| 23 h2.push_back(tmp);||| 24 }||| 25 for (int i = 1; i <= m; i++) {||| 26 scanf(""%d"", &tmp);||| 27 v.insert(tmp);||| 28 v2.push_back(tmp);||| 29 }||| 30 int tmpx, tmpy;||| 31 for (int i = 1; i <= k; i++) {||| 32 scanf(""%d%d"", &tmpx, &tmpy);||| 33 x.push_back(tmpx);||| 34 y.push_back(tmpy);||| 35 x2.push_back(tmpx);||| 36 y2.push_back(tmpy);||| 37 x3[tmpx].push_back(tmpy);||| 38 y3[tmpy].push_back(tmpx);||| 39 }||| 40 sort(x2.begin(), x2.end());||| 41 sort(y2.begin(), y2.end());||| 42 for (int i : h2) {||| 43 sort(x3[i].begin(), x3[i].end());||| 44 }||| 45 for (int i : v2) {||| 46 sort(y3[i].begin(), y3[i].end());||| 47 }||| 48 vector<int>::iterator it1, it2;||| 49 long long ans = 0;||| 50 for (int i = 0; i < k; i++) {||| 51 tmpx = x[i], tmpy = y[i];||| 52 int f1 = 0, f2 = 0;||| 53 if (h.find(tmpx) != h.end()) f1 = 1;||| 54 if (v.find(tmpy) != v.end()) f2 = 1;||| 55 if (f1 && f2) continue;||| 56 if (f1) {||| 57 it1 = upper_bound(v2.begin(), v2.end(), tmpy);||| 58 it1--;||| 59 it2 = lower_bound(v2.begin(), v2.end(), tmpy);||| 60 if (*it1 >= *it2) continue;||| 61 int l = upper_bound(y2.begin(), y2.end(), *it1) - y2.begin() - 1;||| 62 int r = lower_bound(y2.begin(), y2.end(), *it2) - y2.begin() - 1;||| 63 ans += r - l;||| 64 l = upper_bound(x3[tmpx].begin(), x3[tmpx].end(), *it1) -||| 65 x3[tmpx].begin() - 1;||| 66 r = lower_bound(x3[tmpx].begin(), x3[tmpx].end(), *it2) -||| 67 x3[tmpx].begin() - 1;||| 68 ans -= r - l;||| 69 } else {||| 70 it1 = upper_bound(h2.begin(), h2.end(), tmpx);||| 71 it1--;||| 72 it2 = lower_bound(h2.begin(), h2.end(), tmpx);||| 73 if (*it1 >= *it2) continue;||| 74 int l = upper_bound(x2.begin(), x2.end(), *it1) - x2.begin() - 1;||| 75 int r = lower_bound(x2.begin(), x2.end(), *it2) - x2.begin() - 1;||| 76 ans += r - l;||| 77 l = upper_bound(y3[tmpy].begin(), y3[tmpy].end(), *it1) -||| 78 y3[tmpy].begin() - 1;||| 79 r = lower_bound(y3[tmpy].begin(), y3[tmpy].end(), *it2) -||| 80 y3[tmpy].begin() - 1;||| 81 ans -= r - l;||| 82 }||| 83 }||| 84 ans /= 2;||| 85 printf(""%lld\n"", ans);||| 86 for (int i : x) {||| 87 x3[i].clear();||| 88 }||| 89 for (int i : y) {||| 90 y3[i].clear();||| 91 }||| 92 }||| 93 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 vector<int> x, y, x2, y2, h2, v2;||| 4 set<int> h, v;||| 5 vector<int> x3[1000005], y3[1000005];||| 6 int main() {||| 7 int t;||| 8 scanf(""%d"", &t);||| 9 while (t--) {||| 10 h.clear();||| 11 v.clear();||| 12 x.clear();||| 13 y.clear();||| 14 x2.clear();||| 15 y2.clear();||| 16 h2.clear();||| 17 v2.clear();||| 18 int n, m, k, tmp;||| 19 scanf(""%d%d%d"", &n, &m, &k);||| 20 for (int i = 1; i <= n; i++) {||| 21 scanf(""%d"", &tmp);||| 22 h.insert(tmp);||| 23 h2.push_back(tmp);||| 24 }||| 25 for (int i = 1; i <= m; i++) {||| 26 scanf(""%d"", &tmp);||| 27 v.insert(tmp);||| 28 v2.push_back(tmp);||| 29 }||| 30 int tmpx, tmpy;||| 31 for (int i = 1; i <= k; i++) {||| 32 scanf(""%d%d"", &tmpx, &tmpy);||| 33 x.push_back(tmpx);||| 34 y.push_back(tmpy);||| 35 x2.push_back(tmpx);||| 36 y2.push_back(tmpy);||| 37 x3[tmpx].push_back(tmpy);||| 38 y3[tmpy].push_back(tmpx);||| 39 }||| 40 sort(x2.begin(), x2.end());||| 41 sort(y2.begin(), y2.end());||| 42 for (int i : h2) {||| 43 sort(x3[i].begin(), x3[i].end());||| 44 }||| 45 for (int i : v2) {||| 46 sort(y3[i].begin(), y3[i].end());||| 47 }||| 48 vector<int>::iterator it1, it2;||| 49 long long ans = 0;||| 50 for (int i = 0; i < k; i++) {||| 51 tmpx = x[i], tmpy = y[i];||| 52 int f1 = 0, f2 = 0;||| 53 if (h.find(tmpx) != h.end()) f1 = 1;||| 54 if (v.find(tmpy) != v.end()) f2 = 1;||| 55 if (f1 && f2) continue;||| 56 if (f1) {||| 57 it1 = upper_bound(v2.begin(), v2.end(), tmpy);||| 58 it1--;||| 59 it2 = lower_bound(v2.begin(), v2.end(), tmpy);||| 60 if (*it1 >= *it2) continue;||| 61 int l = upper_bound(y2.begin(), y2.end(), *it1) - y2.begin() - 1;||| 62 int r = lower_bound(y2.begin(), y2.end(), *it2) - y2.begin() - 1;||| 63 ans += r - l;||| 64 l = upper_bound(x3[tmpx].begin(), x3[tmpx].end(), *it1) -||| 65 x3[tmpx].begin() - 1;||| 66 r = lower_bound(x3[tmpx].begin(), x3[tmpx].end(), *it2) -||| 67 x3[tmpx].begin() - 1;||| 68 ans -= r - l;||| 69 } else {||| 70 it1 = upper_bound(h2.begin(), h2.end(), tmpx);||| 71 it1--;||| 72 it2 = lower_bound(h2.begin(), h2.end(), tmpx);||| 73 if (*it1 >= *it2) continue;||| 74 int l = upper_bound(x2.begin(), x2.end(), *it1) - x2.begin() - 1;||| 75 int r = lower_bound(x2.begin(), x2.end(), *it2) - x2.begin() - 1;||| 76 ans += r - l;||| 77 l = upper_bound(y3[tmpy].begin(), y3[tmpy].end(), *it1) -||| 78 y3[tmpy].begin() - 1;||| 79 r = lower_bound(y3[tmpy].begin(), y3[tmpy].end(), *it2) -||| 80 y3[tmpy].begin() - 1;||| 81 ans -= r - l;||| 82 }||| 83 }||| 84 ans /= 2;||| 85 printf(""%lld\n"", ans);||| 86 for (int i : h2) {||| 87 x3[i].clear();||| 88 }||| 89 for (int i : v2) {||| 90 y3[i].clear();||| 91 }||| 92 }||| 93 }||| "	86 for (int i : x) {
101	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 const int MAXM = 2e5 + 10;||| 5 const int MAXK = 3e5 + 10;||| 6 struct Pt {||| 7 int x, y;||| 8 };||| 9 int n, m, kkk;||| 10 int xx[MAXN], yy[MAXM];||| 11 pair<int, int> p[MAXK];||| 12 Pt pt[MAXM];||| 13 inline bool cmpx(Pt qwq, Pt qaq) { return qwq.x < qaq.x; }||| 14 inline bool cmpy(Pt qwq, Pt qaq) { return qwq.y < qaq.y; }||| 15 void solve() {||| 16 scanf(""%d%d%d"", &n, &m, &kkk);||| 17 for (int i = 1; i <= n; i++) scanf(""%d"", &xx[i]);||| 18 for (int i = 1; i <= m; i++) scanf(""%d"", &yy[i]);||| 19 for (int i = 1; i <= kkk; i++) scanf(""%d%d"", &p[i].first, &p[i].second);||| 20 int cnt_id = 0;||| 21 for (int i = 1; i <= kkk; i++) {||| 22 int pos1 = lower_bound(xx + 1, xx + n + 1, p[i].first) - xx;||| 23 int pos2 = lower_bound(yy + 1, yy + m + 1, p[i].second) - yy;||| 24 if (xx[pos1] == p[i].first && yy[pos2] == p[i].second) continue;||| 25 pt[++cnt_id].x = p[i].first;||| 26 pt[cnt_id].y = p[i].second;||| 27 }||| 28 long long ans = 0;||| 29 sort(pt + 1, pt + cnt_id + 1, cmpx);||| 30 map<int, int> mmp;||| 31 int idx = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 long long tot = 0;||| 34 mmp.clear();||| 35 while (idx + 1 <= cnt_id && pt[idx + 1].x < xx[i]) {||| 36 idx++;||| 37 ans += tot - mmp[pt[idx].y];||| 38 mmp[pt[idx].y]++;||| 39 tot++;||| 40 }||| 41 while (idx + 1 <= cnt_id && pt[idx + 1].x == xx[i]) idx++;||| 42 }||| 43 sort(pt + 1, pt + cnt_id + 1, cmpy);||| 44 idx = 0;||| 45 for (int i = 1; i <= m; i++) {||| 46 long long tot = 0;||| 47 mmp.clear();||| 48 while (idx + 1 <= cnt_id && pt[idx + 1].y < yy[i]) {||| 49 idx++;||| 50 ans += tot - mmp[pt[idx].x];||| 51 mmp[pt[idx].x]++;||| 52 tot++;||| 53 }||| 54 while (idx + 1 <= cnt_id && pt[idx + 1].y == yy[i]) idx++;||| 55 }||| 56 printf(""%lld\n"", ans);||| 57 }||| 58 int main() {||| 59 int T;||| 60 scanf(""%d"", &T);||| 61 while (T--) solve();||| 62 return 0;||| 63 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 10;||| 4 const int MAXM = 2e5 + 10;||| 5 const int MAXK = 3e5 + 10;||| 6 struct Pt {||| 7 int x, y;||| 8 };||| 9 int n, m, kkk;||| 10 int xx[MAXN], yy[MAXM];||| 11 pair<int, int> p[MAXK];||| 12 Pt pt[MAXM];||| 13 inline bool cmpx(Pt qwq, Pt qaq) { return qwq.x < qaq.x; }||| 14 inline bool cmpy(Pt qwq, Pt qaq) { return qwq.y < qaq.y; }||| 15 void solve() {||| 16 scanf(""%d%d%d"", &n, &m, &kkk);||| 17 for (int i = 1; i <= n; i++) scanf(""%d"", &xx[i]);||| 18 for (int i = 1; i <= m; i++) scanf(""%d"", &yy[i]);||| 19 for (int i = 1; i <= kkk; i++) scanf(""%d%d"", &p[i].first, &p[i].second);||| 20 int cnt_id = 0;||| 21 for (int i = 1; i <= kkk; i++) {||| 22 int pos1 = lower_bound(xx + 1, xx + n + 1, p[i].first) - xx;||| 23 int pos2 = lower_bound(yy + 1, yy + n + 1, p[i].second) - yy;||| 24 if (xx[pos1] == p[i].first && yy[pos2] == p[i].second) continue;||| 25 pt[++cnt_id].x = p[i].first;||| 26 pt[cnt_id].y = p[i].second;||| 27 }||| 28 long long ans = 0;||| 29 sort(pt + 1, pt + cnt_id + 1, cmpx);||| 30 map<int, int> mmp;||| 31 int idx = 0;||| 32 for (int i = 1; i <= n; i++) {||| 33 long long tot = 0;||| 34 mmp.clear();||| 35 while (idx + 1 <= cnt_id && pt[idx + 1].x < xx[i]) {||| 36 idx++;||| 37 ans += tot - mmp[pt[idx].y];||| 38 mmp[pt[idx].y]++;||| 39 tot++;||| 40 }||| 41 while (idx + 1 <= cnt_id && pt[idx + 1].x == xx[i]) idx++;||| 42 }||| 43 sort(pt + 1, pt + cnt_id + 1, cmpy);||| 44 idx = 0;||| 45 for (int i = 1; i <= m; i++) {||| 46 long long tot = 0;||| 47 mmp.clear();||| 48 while (idx + 1 <= cnt_id && pt[idx + 1].y < yy[i]) {||| 49 idx++;||| 50 ans += tot - mmp[pt[idx].x];||| 51 mmp[pt[idx].x]++;||| 52 tot++;||| 53 }||| 54 while (idx + 1 <= cnt_id && pt[idx + 1].y == yy[i]) idx++;||| 55 }||| 56 printf(""%lld\n"", ans);||| 57 }||| 58 int main() {||| 59 int T;||| 60 scanf(""%d"", &T);||| 61 while (T--) solve();||| 62 return 0;||| 63 }||| "	23 int pos2 = lower_bound(yy + 1, yy + m + 1, p[i].second) - yy;
101	26	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Point {||| 4 int x, y;||| 5 } p[2][300005];||| 6 struct Sta {||| 7 int num, val, upd;||| 8 } s[2][200005];||| 9 int T, n, m, k, num[2];||| 10 map<int, bool> r;||| 11 map<int, bool> c;||| 12 int rr[200005], cc[200005];||| 13 inline int cmp1(const Point& a, const Point& b) { return a.x < b.x; }||| 14 inline int cmp2(const Point& a, const Point& b) { return a.y < b.y; }||| 15 int lower(int w, int t) {||| 16 int ans;||| 17 int l = 1, r;||| 18 if (t == 0)||| 19 r = m;||| 20 else||| 21 r = n;||| 22 while (l <= r) {||| 23 int mid = l + r >> 1;||| 24 if (t == 0) {||| 25 if (cc[mid] <= w)||| 26 ans = mid, l = mid + 1;||| 27 else||| 28 r = mid - 1;||| 29 }||| 30 if (t == 1) {||| 31 if (rr[mid] <= w)||| 32 ans = mid, l = mid + 1;||| 33 else||| 34 r = mid - 1;||| 35 }||| 36 }||| 37 return ans;||| 38 }||| 39 int main() {||| 40 cin >> T;||| 41 while (T--) {||| 42 r.clear();||| 43 c.clear();||| 44 num[0] = num[1] = 0;||| 45 cin >> n >> m >> k;||| 46 int lim = max(n, m);||| 47 for (int i = 0; i <= lim; ++i) {||| 48 s[0][i].num = 0;||| 49 s[0][i].upd = 0;||| 50 s[0][i].val = -1;||| 51 s[1][i].num = 0;||| 52 s[1][i].upd = 0;||| 53 s[1][i].val = -1;||| 54 }||| 55 for (int i = 1; i <= n; ++i) {||| 56 cin >> rr[i];||| 57 r[rr[i]] = true;||| 58 }||| 59 for (int i = 1; i <= m; ++i) {||| 60 cin >> cc[i];||| 61 c[cc[i]] = true;||| 62 }||| 63 sort(rr + 1, rr + n + 1);||| 64 sort(cc + 1, cc + m + 1);||| 65 for (int i = 1; i <= k; ++i) {||| 66 int x, y;||| 67 cin >> x >> y;||| 68 if (r[x] && c[y]) continue;||| 69 if (r[x])||| 70 p[0][++num[0]].x = x, p[0][num[0]].y = y;||| 71 else||| 72 p[1][++num[1]].x = x, p[1][num[1]].y = y;||| 73 }||| 74 sort(p[0] + 1, p[0] + num[0] + 1, cmp1);||| 75 sort(p[1] + 1, p[1] + num[1] + 1, cmp2);||| 76 long long ans = 0;||| 77 for (int i = 1; i <= num[0]; ++i) {||| 78 int pos = lower(p[0][i].y, 0);||| 79 if (p[0][i].x > s[0][pos].val)||| 80 s[0][pos].num += s[0][pos].upd, s[0][pos].val = p[0][i].x,||| 81 s[0][pos].upd = 1;||| 82 else||| 83 ++s[0][pos].upd;||| 84 ans += s[0][pos].num;||| 85 }||| 86 for (int i = 1; i <= num[1]; ++i) {||| 87 int pos = lower(p[1][i].x, 1);||| 88 if (p[1][i].y > s[1][pos].val)||| 89 s[1][pos].num += s[1][pos].upd, s[1][pos].val = p[1][i].y,||| 90 s[1][pos].upd = 1;||| 91 else||| 92 ++s[1][pos].upd;||| 93 ans += s[1][pos].num;||| 94 }||| 95 cout << ans << endl;||| 96 }||| 97 return 0;||| 98 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct Point {||| 4 int x, y;||| 5 } p[2][300005];||| 6 struct Sta {||| 7 int num, val, upd;||| 8 } s[2][200005];||| 9 int T, n, m, k, num[2];||| 10 map<int, bool> r;||| 11 map<int, bool> c;||| 12 int rr[200005], cc[200005];||| 13 inline int cmp1(const Point& a, const Point& b) { return a.x < b.x; }||| 14 inline int cmp2(const Point& a, const Point& b) { return a.y < b.y; }||| 15 int lower(int w, int t) {||| 16 int ans;||| 17 int l = 1, r;||| 18 if (t == 0)||| 19 r = m;||| 20 else||| 21 r = n;||| 22 while (l <= r) {||| 23 int mid = l + r >> 1;||| 24 if (t == 0) {||| 25 if (cc[mid] <= w)||| 26 ans = mid, l = mid + 1;||| 27 else||| 28 r = mid - 1;||| 29 }||| 30 if (t == 1) {||| 31 if (rr[mid] <= w)||| 32 ans = mid, l = mid + 1;||| 33 else||| 34 r = mid - 1;||| 35 }||| 36 }||| 37 return ans;||| 38 }||| 39 int main() {||| 40 cin >> T;||| 41 while (T--) {||| 42 r.clear();||| 43 c.clear();||| 44 num[0] = num[1] = 0;||| 45 cin >> n >> m >> k;||| 46 int lim = max(n, m);||| 47 for (int i = 0; i <= lim; ++i) {||| 48 s[0][i].num = 0;||| 49 s[0][i].upd = 0;||| 50 s[0][i].val = -1;||| 51 s[1][i].num = 0;||| 52 s[1][i].upd = 0;||| 53 s[1][i].val = -1;||| 54 }||| 55 for (int i = 1; i <= n; ++i) {||| 56 cin >> rr[i];||| 57 r[rr[i]] = true;||| 58 }||| 59 for (int i = 1; i <= m; ++i) {||| 60 cin >> cc[i];||| 61 c[cc[i]] = true;||| 62 }||| 63 sort(rr + 1, rr + n + 1);||| 64 sort(cc + 1, cc + m + 1);||| 65 for (int i = 1; i <= k; ++i) {||| 66 int x, y;||| 67 cin >> x >> y;||| 68 if (r[x] && c[y]) continue;||| 69 if (r[x])||| 70 p[0][++num[0]].x = x, p[0][num[0]].y = y;||| 71 else||| 72 p[1][++num[1]].x = x, p[1][num[1]].y = y;||| 73 }||| 74 sort(p[0] + 1, p[0] + num[0] + 1, cmp1);||| 75 sort(p[1] + 1, p[1] + num[1] + 1, cmp2);||| 76 int ans = 0;||| 77 for (int i = 1; i <= num[0]; ++i) {||| 78 int pos = lower(p[0][i].y, 0);||| 79 if (p[0][i].x > s[0][pos].val)||| 80 s[0][pos].num += s[0][pos].upd, s[0][pos].val = p[0][i].x,||| 81 s[0][pos].upd = 1;||| 82 else||| 83 ++s[0][pos].upd;||| 84 ans += s[0][pos].num;||| 85 }||| 86 for (int i = 1; i <= num[1]; ++i) {||| 87 int pos = lower(p[1][i].x, 1);||| 88 if (p[1][i].y > s[1][pos].val)||| 89 s[1][pos].num += s[1][pos].upd, s[1][pos].val = p[1][i].y,||| 90 s[1][pos].upd = 1;||| 91 else||| 92 ++s[1][pos].upd;||| 93 ans += s[1][pos].num;||| 94 }||| 95 cout << ans << endl;||| 96 }||| 97 return 0;||| 98 }||| 	76 long long ans = 0;
101	75	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 int n, m, k;||| 5 int a[maxn], b[maxn], suma[maxn], sumb[maxn];||| 6 unordered_map<int, int> mpa[maxn], mpb[maxn];||| 7 inline int read() {||| 8 int x = 0;||| 9 char c = getchar();||| 10 while (!isdigit(c)) c = getchar();||| 11 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 12 return x;||| 13 }||| 14 inline void init() {||| 15 for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear();||| 16 for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 17 }||| 18 int main() {||| 19 int T = read();||| 20 while (T--) {||| 21 long long ans = 0;||| 22 n = read(), m = read(), k = read();||| 23 init();||| 24 for (int i = 1; i <= n; i++) a[i] = read();||| 25 for (int i = 1; i <= m; i++) b[i] = read();||| 26 for (int i = 1; i <= k; i++) {||| 27 int x = read(), y = read();||| 28 int px = lower_bound(a + 1, a + 1 + n, x) - a;||| 29 int py = lower_bound(b + 1, b + 1 + m, y) - b;||| 30 if (a[px] != x) ans += suma[px]++ - mpa[px][py]++;||| 31 if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++;||| 32 }||| 33 printf(""%lld\n"", ans);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 int n, m, k;||| 5 int a[maxn], b[maxn], suma[maxn], sumb[maxn];||| 6 unordered_map<int, int> mpa[maxn], mpb[maxn];||| 7 inline int read() {||| 8 int x = 0;||| 9 char c = getchar();||| 10 while (!isdigit(c)) c = getchar();||| 11 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 12 return x;||| 13 }||| 14 inline void init() {||| 15 for (int i = 1; i <= n; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 16 for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 17 }||| 18 int main() {||| 19 int T = read();||| 20 while (T--) {||| 21 long long ans = 0;||| 22 n = read(), m = read(), k = read();||| 23 init();||| 24 for (int i = 1; i <= n; i++) a[i] = read();||| 25 for (int i = 1; i <= m; i++) b[i] = read();||| 26 for (int i = 1; i <= k; i++) {||| 27 int x = read(), y = read();||| 28 int px = lower_bound(a + 1, a + 1 + n, x) - a;||| 29 int py = lower_bound(b + 1, b + 1 + m, y) - b;||| 30 if (a[px] != x) ans += suma[px]++ - mpa[px][py]++;||| 31 if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++;||| 32 }||| 33 printf(""%lld\n"", ans);||| 34 }||| 35 return 0;||| 36 }||| "	15 for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear();
101	82	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 2e5 + 5;||| 4 int n, m, k;||| 5 int a[maxn], b[maxn], suma[maxn], sumb[maxn];||| 6 unordered_map<int, int> mpa[maxn], mpb[maxn];||| 7 inline int read() {||| 8 int x = 0;||| 9 char c = getchar();||| 10 while (!isdigit(c)) c = getchar();||| 11 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 12 return x;||| 13 }||| 14 inline void init() {||| 15 for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear();||| 16 for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 17 }||| 18 int main() {||| 19 int T = read();||| 20 while (T--) {||| 21 long long ans = 0;||| 22 n = read(), m = read(), k = read();||| 23 init();||| 24 for (int i = 1; i <= n; i++) a[i] = read();||| 25 for (int i = 1; i <= m; i++) b[i] = read();||| 26 for (int i = 1; i <= k; i++) {||| 27 int x = read(), y = read();||| 28 int px = lower_bound(a + 1, a + 1 + n, x) - a;||| 29 int py = lower_bound(b + 1, b + 1 + m, y) - b;||| 30 if (a[px] != x) ans += suma[px]++ - mpa[px][py]++;||| 31 if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++;||| 32 }||| 33 printf(""%lld\n"", ans);||| 34 }||| 35 return 0;||| 36 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int maxn = 1e6 + 10;||| 4 int n, m, k;||| 5 int a[maxn], b[maxn], suma[maxn], sumb[maxn];||| 6 unordered_map<int, int> mpa[maxn], mpb[maxn];||| 7 inline int read() {||| 8 int x = 0;||| 9 char c = getchar();||| 10 while (!isdigit(c)) c = getchar();||| 11 while (isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();||| 12 return x;||| 13 }||| 14 inline void init() {||| 15 for (int i = 1; i <= n; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 16 for (int i = 1; i <= m; i++) sumb[i] = 0, mpa[i].clear(), mpb[i].clear();||| 17 }||| 18 int main() {||| 19 int T = read();||| 20 while (T--) {||| 21 long long ans = 0;||| 22 n = read(), m = read(), k = read();||| 23 init();||| 24 for (int i = 1; i <= n; i++) a[i] = read();||| 25 for (int i = 1; i <= m; i++) b[i] = read();||| 26 for (int i = 1; i <= k; i++) {||| 27 int x = read(), y = read();||| 28 int px = lower_bound(a + 1, a + 1 + n, x) - a;||| 29 int py = lower_bound(b + 1, b + 1 + m, y) - b;||| 30 if (a[px] != x) ans += suma[px]++ - mpa[px][py]++;||| 31 if (b[py] != y) ans += sumb[py]++ - mpb[px][py]++;||| 32 }||| 33 printf(""%lld\n"", ans);||| 34 }||| 35 return 0;||| 36 }||| "	3 const int maxn = 2e5 + 5;
101	113	"1 #include <bits/stdc++.h>||| 2 inline long long read() {||| 3 long long num = 0, f = 1;||| 4 char c = getchar();||| 5 while (c < 48 || c > 57) {||| 6 if (c == '-') f = -1;||| 7 c = getchar();||| 8 }||| 9 while (c > 47 && c < 58) num = num * 10 + (c ^ 48), c = getchar();||| 10 return num * f;||| 11 }||| 12 inline long long re1d() {||| 13 char c = getchar();||| 14 while (c < 48 || c > 49) c = getchar();||| 15 return c & 1;||| 16 }||| 17 inline long long min(long long a, long long b) { return a > b ? b : a; }||| 18 inline long long max(long long a, long long b) { return a < b ? b : a; }||| 19 long long X[300005], Y[300005], x[300005], y[300005], xx[300005], yy[300005];||| 20 std::map<long long, long long> mpx[300005], mpy[300005];||| 21 long long sumx[300005], sumy[300005];||| 22 signed main() {||| 23 long long T = read();||| 24 for (long long i = 1; i <= (T); i++) {||| 25 long long n = read(), m = read(), k = read();||| 26 for (long long i = 1; i <= (n); i++) {||| 27 X[i] = xx[i] = read();||| 28 }||| 29 for (long long i = 1; i <= (m); i++) {||| 30 Y[i] = yy[i] = read();||| 31 }||| 32 for (long long i = 1; i <= (n); i++) {||| 33 mpx[i].clear();||| 34 sumx[i] = 0;||| 35 }||| 36 for (long long i = 1; i <= (m); i++) {||| 37 mpy[i].clear();||| 38 sumy[i] = 0;||| 39 }||| 40 long long ans = 0;||| 41 for (long long i = 1; i <= (k); i++) {||| 42 x[i] = read(), y[i] = read();||| 43 long long dx = std::lower_bound(X + 1, X + 1 + n, x[i]) - X;||| 44 long long dy = std::lower_bound(Y + 1, Y + 1 + m, y[i]) - Y;||| 45 if (X[dx] == x[i] && Y[dy] == y[i]) continue;||| 46 if (X[dx] != x[i]) {||| 47 sumx[dx]++;||| 48 mpx[dx][dy]++;||| 49 ans += (sumx[dx] - mpx[dx][dy]);||| 50 } else {||| 51 sumy[dy]++;||| 52 mpy[dy][dx]++;||| 53 ans += (sumy[dy] - mpy[dy][dx]);||| 54 }||| 55 }||| 56 printf(""%lld\n"", ans);||| 57 }||| 58 return 0;||| 59 }||| "	"1 #include <bits/stdc++.h>||| 2 inline long long read() {||| 3 long long num = 0, f = 1;||| 4 char c = getchar();||| 5 while (c < 48 || c > 57) {||| 6 if (c == '-') f = -1;||| 7 c = getchar();||| 8 }||| 9 while (c > 47 && c < 58) num = num * 10 + (c ^ 48), c = getchar();||| 10 return num * f;||| 11 }||| 12 inline long long re1d() {||| 13 char c = getchar();||| 14 while (c < 48 || c > 49) c = getchar();||| 15 return c & 1;||| 16 }||| 17 inline long long min(long long a, long long b) { return a > b ? b : a; }||| 18 inline long long max(long long a, long long b) { return a < b ? b : a; }||| 19 long long X[300005], Y[300005], x[300005], y[300005], xx[300005], yy[300005];||| 20 std::map<long long, long long> mpx[300005], mpy[300005];||| 21 long long sumx[300005], sumy[300005];||| 22 signed main() {||| 23 long long T = read();||| 24 for (long long i = 1; i <= (T); i++) {||| 25 long long n = read(), m = read(), k = read();||| 26 for (long long i = 1; i <= (n); i++) {||| 27 X[i] = xx[i] = read();||| 28 }||| 29 for (long long i = 1; i <= (m); i++) {||| 30 Y[i] = yy[i] = read();||| 31 }||| 32 for (long long i = 1; i <= (n); i++) {||| 33 mpx[i].clear();||| 34 sumx[i] = 0;||| 35 }||| 36 for (long long i = 1; i <= (m); i++) {||| 37 mpy[i].clear();||| 38 sumy[i] = 0;||| 39 }||| 40 long long ans = 0;||| 41 for (long long i = 1; i <= (k); i++) {||| 42 x[i] = read(), y[i] = read();||| 43 long long dx = std::lower_bound(X + 1, X + 1 + n, x[i]) - X;||| 44 long long dy = std::lower_bound(Y + 1, Y + 1 + n, y[i]) - Y;||| 45 if (X[dx] == x[i] && Y[dy] == y[i]) continue;||| 46 if (X[dx] != x[i]) {||| 47 sumx[dx]++;||| 48 mpx[dx][dy]++;||| 49 ans += (sumx[dx] - mpx[dx][dy]);||| 50 } else {||| 51 sumy[dy]++;||| 52 mpy[dy][dx]++;||| 53 ans += (sumy[dy] - mpy[dy][dx]);||| 54 }||| 55 }||| 56 printf(""%lld\n"", ans);||| 57 }||| 58 return 0;||| 59 }||| "	44 long long dy = std::lower_bound(Y + 1, Y + 1 + m, y[i]) - Y;
101	44	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e6 + 9;||| 4 const long long inf = 0x3f3f3f3f;||| 5 vector<int> x, y;||| 6 map<int, int> ma[N], mb[N], cntx, cnty;||| 7 void solve() {||| 8 int n, m, k;||| 9 cin >> n >> m >> k;||| 10 for (int i = 1; i <= n; i++) {||| 11 int xx;||| 12 cin >> xx;||| 13 x.push_back(xx);||| 14 }||| 15 for (int i = 1; i <= m; i++) {||| 16 int yy;||| 17 cin >> yy;||| 18 y.push_back(yy);||| 19 }||| 20 long long ans = 0;||| 21 for (int i = 1; i <= k; i++) {||| 22 int xx, yy;||| 23 cin >> xx >> yy;||| 24 int pos1 = lower_bound(x.begin(), x.end(), xx) - x.begin();||| 25 int pos2 = lower_bound(y.begin(), y.end(), yy) - y.begin();||| 26 if (x[pos1] == xx && y[pos2] == yy) continue;||| 27 if (x[pos1] == xx) {||| 28 pos2--;||| 29 ans += ++cnty[pos2] - ++ma[pos1][pos2];||| 30 } else {||| 31 pos1--;||| 32 ans += ++cntx[pos1] - ++mb[pos2][pos1];||| 33 }||| 34 }||| 35 for (int i = 0; i <= max(n, m) + 1; i++) {||| 36 ma[i].clear();||| 37 mb[i].clear();||| 38 }||| 39 cntx.clear();||| 40 cnty.clear();||| 41 x.clear();||| 42 y.clear();||| 43 cout << ans << endl;||| 44 }||| 45 signed main() {||| 46 long long t = 1;||| 47 cin >> t;||| 48 while (t--) {||| 49 solve();||| 50 }||| 51 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long N = 1e6 + 9;||| 4 const long long inf = 0x3f3f3f3f;||| 5 vector<int> x, y;||| 6 map<int, int> ma[N], mb[N], cntx, cnty;||| 7 void solve() {||| 8 int n, m, k;||| 9 cin >> n >> m >> k;||| 10 for (int i = 1; i <= n; i++) {||| 11 int xx;||| 12 cin >> xx;||| 13 x.push_back(xx);||| 14 }||| 15 for (int i = 1; i <= m; i++) {||| 16 int yy;||| 17 cin >> yy;||| 18 y.push_back(yy);||| 19 }||| 20 int ans = 0;||| 21 for (int i = 1; i <= k; i++) {||| 22 int xx, yy;||| 23 cin >> xx >> yy;||| 24 int pos1 = lower_bound(x.begin(), x.end(), xx) - x.begin();||| 25 int pos2 = lower_bound(y.begin(), y.end(), yy) - y.begin();||| 26 if (x[pos1] == xx && y[pos2] == yy) continue;||| 27 if (x[pos1] == xx) {||| 28 pos2--;||| 29 ans += ++cnty[pos2] - ++ma[pos1][pos2];||| 30 } else {||| 31 pos1--;||| 32 ans += ++cntx[pos1] - ++mb[pos2][pos1];||| 33 }||| 34 }||| 35 for (int i = 0; i <= max(n, m) + 1; i++) {||| 36 ma[i].clear();||| 37 mb[i].clear();||| 38 }||| 39 cntx.clear();||| 40 cnty.clear();||| 41 x.clear();||| 42 y.clear();||| 43 cout << ans << endl;||| 44 }||| 45 signed main() {||| 46 long long t = 1;||| 47 cin >> t;||| 48 while (t--) {||| 49 solve();||| 50 }||| 51 }||| 	20 long long ans = 0;
101	80	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 int qkpow(int a, int b) {||| 5 int base = a, ans = 1;||| 6 while (b) {||| 7 if (b & 1) ans = 1ll * ans * base % mod;||| 8 base = 1ll * base * base % mod;||| 9 b >>= 1;||| 10 }||| 11 return ans;||| 12 }||| 13 int fac[1000005], inv[1000005];||| 14 int C(int n, int m) {||| 15 if (n < m || m < 0) return 0;||| 16 return 1ll * fac[n] * inv[m] % mod * inv[n - m] % mod;||| 17 }||| 18 void init_C(int n) {||| 19 fac[0] = 1;||| 20 for (int i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 21 inv[0] = 1;||| 22 inv[n] = qkpow(fac[n], mod - 2);||| 23 for (int i = n - 1; i >= 1; i--) inv[i] = 1ll * inv[i + 1] * (i + 1) % mod;||| 24 }||| 25 int read() {||| 26 int x;||| 27 scanf(""%d"", &x);||| 28 return x;||| 29 }||| 30 long long t, n, m, k, now, len1, len2, x[200005], y[200005], f[2][300005];||| 31 long long ans;||| 32 set<long long> X, Y;||| 33 struct node {||| 34 long long x, y;||| 35 } a[300005];||| 36 bool cmp(node A, node B) { return A.x < B.x; }||| 37 signed main() {||| 38 scanf(""%lld"", &t);||| 39 while (t--) {||| 40 scanf(""%lld %lld %lld"", &n, &m, &k);||| 41 X.clear(), Y.clear();||| 42 len1 = len2 = 0;||| 43 X.insert(1e9);||| 44 Y.insert(1e9);||| 45 for (long long i = 1; i <= n; i++) scanf(""%lld"", &x[i]), X.insert(x[i]);||| 46 for (long long i = 1; i <= m; i++) scanf(""%lld"", &y[i]), Y.insert(y[i]);||| 47 for (long long i = 1; i <= k; i++) {||| 48 scanf(""%lld %lld"", &a[i].x, &a[i].y);||| 49 if (X.count(a[i].x))||| 50 f[0][i] = 1;||| 51 else||| 52 f[0][i] = 0;||| 53 if (Y.count(a[i].y))||| 54 f[1][i] = 1;||| 55 else||| 56 f[1][i] = 0;||| 57 }||| 58 ans = 0;||| 59 map<long long, vector<long long>> XX, YY;||| 60 for (long long i = 1; i <= k; i++) {||| 61 if (f[0][i] && f[1][i]) continue;||| 62 if (f[0][i]) {||| 63 long long Id = *Y.lower_bound(a[i].y);||| 64 YY[Id].push_back(a[i].x);||| 65 }||| 66 if (f[1][i]) {||| 67 long long Id = *X.lower_bound(a[i].x);||| 68 XX[Id].push_back(a[i].y);||| 69 }||| 70 }||| 71 for (auto pi : XX) {||| 72 vector<long long>& v = pi.second;||| 73 sort(v.begin(), v.end());||| 74 long long tot = v.size(), now = 0;||| 75 for (long long i = 0; i < tot; i++) {||| 76 while (now < tot && v[now] == v[i]) now++;||| 77 ans += tot - now;||| 78 }||| 79 }||| 80 for (auto pi : YY) {||| 81 vector<long long>& v = pi.second;||| 82 sort(v.begin(), v.end());||| 83 long long tot = v.size(), now = 0;||| 84 for (long long i = 0; i < tot; i++) {||| 85 while (now < tot && v[now] == v[i]) now++;||| 86 ans += tot - now;||| 87 }||| 88 }||| 89 cout << ans << endl;||| 90 }||| 91 return 0;||| 92 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 998244353;||| 4 int qkpow(int a, int b) {||| 5 int base = a, ans = 1;||| 6 while (b) {||| 7 if (b & 1) ans = 1ll * ans * base % mod;||| 8 base = 1ll * base * base % mod;||| 9 b >>= 1;||| 10 }||| 11 return ans;||| 12 }||| 13 int fac[1000005], inv[1000005];||| 14 int C(int n, int m) {||| 15 if (n < m || m < 0) return 0;||| 16 return 1ll * fac[n] * inv[m] % mod * inv[n - m] % mod;||| 17 }||| 18 void init_C(int n) {||| 19 fac[0] = 1;||| 20 for (int i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % mod;||| 21 inv[0] = 1;||| 22 inv[n] = qkpow(fac[n], mod - 2);||| 23 for (int i = n - 1; i >= 1; i--) inv[i] = 1ll * inv[i + 1] * (i + 1) % mod;||| 24 }||| 25 int read() {||| 26 int x;||| 27 scanf(""%d"", &x);||| 28 return x;||| 29 }||| 30 long long t, n, m, k, now, len1, len2, x[200005], y[200005], f[2][200005];||| 31 long long ans;||| 32 set<long long> X, Y;||| 33 struct node {||| 34 long long x, y;||| 35 } a[300005];||| 36 bool cmp(node A, node B) { return A.x < B.x; }||| 37 signed main() {||| 38 scanf(""%lld"", &t);||| 39 while (t--) {||| 40 scanf(""%lld %lld %lld"", &n, &m, &k);||| 41 X.clear(), Y.clear();||| 42 len1 = len2 = 0;||| 43 X.insert(1e9);||| 44 Y.insert(1e9);||| 45 for (long long i = 1; i <= n; i++) scanf(""%lld"", &x[i]), X.insert(x[i]);||| 46 for (long long i = 1; i <= m; i++) scanf(""%lld"", &y[i]), Y.insert(y[i]);||| 47 for (long long i = 1; i <= k; i++) {||| 48 scanf(""%lld %lld"", &a[i].x, &a[i].y);||| 49 if (X.count(a[i].x))||| 50 f[0][i] = 1;||| 51 else||| 52 f[0][i] = 0;||| 53 if (Y.count(a[i].y))||| 54 f[1][i] = 1;||| 55 else||| 56 f[1][i] = 0;||| 57 }||| 58 ans = 0;||| 59 map<long long, vector<long long>> XX, YY;||| 60 for (long long i = 1; i <= k; i++) {||| 61 if (f[0][i] && f[1][i]) continue;||| 62 if (f[0][i]) {||| 63 long long Id = *Y.lower_bound(a[i].y);||| 64 YY[Id].push_back(a[i].x);||| 65 }||| 66 if (f[1][i]) {||| 67 long long Id = *X.lower_bound(a[i].x);||| 68 XX[Id].push_back(a[i].y);||| 69 }||| 70 }||| 71 for (auto pi : XX) {||| 72 vector<long long>& v = pi.second;||| 73 sort(v.begin(), v.end());||| 74 long long tot = v.size(), now = 0;||| 75 for (long long i = 0; i < tot; i++) {||| 76 while (now < tot && v[now] == v[i]) now++;||| 77 ans += tot - now;||| 78 }||| 79 }||| 80 for (auto pi : YY) {||| 81 vector<long long>& v = pi.second;||| 82 sort(v.begin(), v.end());||| 83 long long tot = v.size(), now = 0;||| 84 for (long long i = 0; i < tot; i++) {||| 85 while (now < tot && v[now] == v[i]) now++;||| 86 ans += tot - now;||| 87 }||| 88 }||| 89 cout << ans << endl;||| 90 }||| 91 return 0;||| 92 }||| "	30 long long t, n, m, k, now, len1, len2, x[200005], y[200005], f[2][300005];
102	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 int T;||| 5 int n, k;||| 6 long long A;||| 7 long long h;||| 8 int cnt[6] = {1, 1, 2, 4, 8, 16}, p[125];||| 9 int rk[6];||| 10 long long a[7], AA[25];||| 11 bool in[10][125];||| 12 long long qpow(long long a, long long b) {||| 13 long long r = 1;||| 14 while (b) {||| 15 if (b & 1) r = r * a % mod;||| 16 b >>= 1;||| 17 a = a * a % mod;||| 18 }||| 19 return r;||| 20 }||| 21 void dfs(int x, int last, int c) {||| 22 if (x == k) {||| 23 for (int i = 0; i < n; ++i)||| 24 if (!in[x][i >> k - x]) {||| 25 p[i] = rk[x];||| 26 }||| 27 long long w = 0;||| 28 for (int i = 0; i < n; ++i) w += AA[p[i]] * (i + 1);||| 29 w %= mod;||| 30 if (w == h) {||| 31 for (int i = 0; i < n; ++i) printf(""%d "", p[i]);||| 32 printf(""\n"");||| 33 exit(0);||| 34 }||| 35 return;||| 36 }||| 37 if (x == 4) {||| 38 static int q[9];||| 39 q[0] = 0;||| 40 for (int i = 0; i < n; ++i) {||| 41 if (!in[5][i]) {||| 42 if (i % 2 == 1 || in[5][i + 1])||| 43 p[i] = rk[x + 1];||| 44 else {||| 45 q[++q[0]] = i;||| 46 p[i] = rk[x];||| 47 p[i + 1] = rk[x + 1];||| 48 ++i;||| 49 }||| 50 }||| 51 }||| 52 long long w = 0;||| 53 for (int i = 0; i < n; ++i) w += AA[p[i]] * (i + 1);||| 54 w %= mod;||| 55 long long det = (a[5] - a[6] + mod) % mod;||| 56 for (int i = 0; i <= 8; ++i)||| 57 if ((w + det * i) % mod == h) {||| 58 for (int j = 1; j <= i; ++j) swap(p[q[j]], p[q[j] + 1]);||| 59 for (int i = 0; i < n; ++i) printf(""%d "", p[i]);||| 60 printf(""\n"");||| 61 exit(0);||| 62 }||| 63 return;||| 64 }||| 65 for (int i = last; i < n; ++i)||| 66 if (!in[x][i >> k - x]) {||| 67 p[i] = rk[x];||| 68 for (int t = x; t <= k; ++t) in[t][i >> k - t] = 1;||| 69 if (c == cnt[x])||| 70 dfs(x + 1, 0, 1);||| 71 else||| 72 dfs(x, i + 1, c + 1);||| 73 p[i] = 0;||| 74 for (int t = x; t <= k; ++t) in[t][i >> k - t] = 0;||| 75 }||| 76 }||| 77 int main() {||| 78 cin >> k >> A >> h;||| 79 AA[1] = a[1] = qpow(A, rk[0] = 1);||| 80 AA[2] = a[2] = qpow(A, rk[1] = 2);||| 81 AA[3] = a[3] = qpow(A, rk[2] = 3);||| 82 AA[5] = a[4] = qpow(A, rk[3] = 5);||| 83 AA[9] = a[5] = qpow(A, rk[4] = 9);||| 84 AA[17] = a[6] = qpow(A, rk[5] = 17);||| 85 n = 1 << k;||| 86 dfs(0, 0, 1);||| 87 puts(""-1"");||| 88 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 int T;||| 5 int n, k;||| 6 long long A;||| 7 long long h;||| 8 int cnt[6] = {1, 1, 2, 4, 8, 16}, p[125];||| 9 int rk[6];||| 10 long long a[7], AA[25];||| 11 bool in[10][125];||| 12 long long qpow(long long a, long long b) {||| 13 long long r = 1;||| 14 while (b) {||| 15 if (b & 1) r = r * a % mod;||| 16 b >>= 1;||| 17 a = a * a % mod;||| 18 }||| 19 return r;||| 20 }||| 21 void dfs(int x, int last, int c) {||| 22 if (x == k) {||| 23 for (int i = 0; i < n; ++i)||| 24 if (!in[x][i >> k - x]) {||| 25 p[i] = rk[x];||| 26 }||| 27 long long w = 0;||| 28 for (int i = 0; i < n; ++i) w += AA[p[i]] * (i + 1);||| 29 w %= mod;||| 30 if (w == h) {||| 31 for (int i = 0; i < n; ++i) printf(""%d "", p[i]);||| 32 printf(""\n"");||| 33 exit(0);||| 34 }||| 35 return;||| 36 }||| 37 if (x == 4) {||| 38 static int q[9];||| 39 q[0] = 0;||| 40 for (int i = 0; i < n; ++i) {||| 41 if (!in[5][i]) {||| 42 if (i % 2 == 1 || in[5][i + 1])||| 43 p[i] = rk[x + 1];||| 44 else {||| 45 q[++q[0]] = i;||| 46 p[i] = rk[x];||| 47 p[i + 1] = rk[x + 1];||| 48 ++i;||| 49 }||| 50 }||| 51 }||| 52 long long w = 0;||| 53 for (int i = 0; i < n; ++i) w += AA[p[i]] * (i + 1);||| 54 w %= mod;||| 55 long long det = (a[5] - a[6] + mod) % mod;||| 56 for (int i = 0; i <= 8; ++i)||| 57 if ((w + det * i) % mod == h) {||| 58 for (int j = 0; j < i; ++j) swap(p[q[j]], p[q[j] + 1]);||| 59 for (int i = 0; i < n; ++i) printf(""%d "", p[i]);||| 60 printf(""\n"");||| 61 exit(0);||| 62 }||| 63 return;||| 64 }||| 65 for (int i = last; i < n; ++i)||| 66 if (!in[x][i >> k - x]) {||| 67 p[i] = rk[x];||| 68 for (int t = x; t <= k; ++t) in[t][i >> k - t] = 1;||| 69 if (c == cnt[x])||| 70 dfs(x + 1, 0, 1);||| 71 else||| 72 dfs(x, i + 1, c + 1);||| 73 p[i] = 0;||| 74 for (int t = x; t <= k; ++t) in[t][i >> k - t] = 0;||| 75 }||| 76 }||| 77 int main() {||| 78 cin >> k >> A >> h;||| 79 AA[1] = a[1] = qpow(A, rk[0] = 1);||| 80 AA[2] = a[2] = qpow(A, rk[1] = 2);||| 81 AA[3] = a[3] = qpow(A, rk[2] = 3);||| 82 AA[5] = a[4] = qpow(A, rk[3] = 5);||| 83 AA[9] = a[5] = qpow(A, rk[4] = 9);||| 84 AA[17] = a[6] = qpow(A, rk[5] = 17);||| 85 n = 1 << k;||| 86 dfs(0, 0, 1);||| 87 puts(""-1"");||| 88 }||| "	58 for (int j = 1; j <= i; ++j) swap(p[q[j]], p[q[j] + 1]);
102	106	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 long long sum(long long a, long long b) {||| 5 a += b;||| 6 if (a >= mod) a -= mod;||| 7 if (a < 0) a += mod;||| 8 return a;||| 9 }||| 10 long long p[1 << 5];||| 11 map<int, vector<pair<int, int>>> mp;||| 12 void solve(vector<pair<int, int>> &v, int t) {||| 13 vector<int> x;||| 14 for (int i = 0; i < v.size(); i++)||| 15 if (v[i].second == 0) x.push_back(i);||| 16 int k = x.size();||| 17 if (k == 0) {||| 18 long long s = 0;||| 19 for (auto &i : v) s = sum(s, i.first * p[i.second] % mod);||| 20 mp[s] = v;||| 21 return;||| 22 }||| 23 if (k == 1) {||| 24 v[x[0]].second = t;||| 25 solve(v, t);||| 26 v[x[0]].second = 0;||| 27 return;||| 28 }||| 29 k /= 2;||| 30 for (int i = 0; i < (1 << k); i++) {||| 31 for (int j = 0; j < k; j++) {||| 32 int y = x[2 * j + (i >> j & 1)];||| 33 v[y].second = x.size() + 1;||| 34 }||| 35 solve(v, t);||| 36 for (int j = 0; j < k; j++) {||| 37 int y = x[2 * j + (i >> j & 1)];||| 38 v[y].second = 0;||| 39 }||| 40 }||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 int k, a, h;||| 46 cin >> k >> a >> h;||| 47 p[0] = 1;||| 48 for (int i = 1; i <= (1 << k); i++) p[i] = p[i - 1] * a % mod;||| 49 vector<pair<int, int>> f, s;||| 50 for (int i = 1; i <= (1 << (k - 1)); i++) f.push_back({i, 0});||| 51 for (int i = (1 << (k - 1)) + 1; i <= (1 << k); i++) s.push_back({i, 0});||| 52 map<int, vector<pair<int, int>>> a1, a2, b1, b2;||| 53 solve(f, 1);||| 54 a1 = mp;||| 55 mp.clear();||| 56 solve(s, 1);||| 57 b1 = mp;||| 58 mp.clear();||| 59 solve(f, 2);||| 60 a2 = mp;||| 61 mp.clear();||| 62 solve(s, 2);||| 63 b2 = mp;||| 64 mp.clear();||| 65 for (auto &i : a1) {||| 66 if (b2.count(sum(h, -i.first))) {||| 67 vector<pair<int, int>> ans = i.second;||| 68 for (auto &j : b2[sum(h, -i.first)]) ans.push_back(j);||| 69 for (auto &j : ans) cout << j.second << "" \n""[&j == &ans.back()];||| 70 exit(0);||| 71 }||| 72 }||| 73 for (auto &i : a2) {||| 74 if (b1.count(sum(h, -i.first))) {||| 75 vector<pair<int, int>> ans = i.second;||| 76 for (auto &j : b1[sum(h, -i.first)]) ans.push_back(j);||| 77 for (auto &j : ans) cout << j.second << "" \n""[&j == &ans.back()];||| 78 exit(0);||| 79 }||| 80 }||| 81 cout << ""-1\n"";||| 82 return 0;||| 83 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long mod = 998244353;||| 4 long long sum(long long a, long long b) {||| 5 a += b;||| 6 if (a >= mod) a -= mod;||| 7 if (a < 0) a += mod;||| 8 return a;||| 9 }||| 10 long long p[1 << 5];||| 11 map<int, vector<pair<int, int>>> mp;||| 12 void solve(vector<pair<int, int>> &v, int t) {||| 13 vector<int> x;||| 14 for (int i = 0; i < v.size(); i++)||| 15 if (v[i].second == 0) x.push_back(i);||| 16 int k = x.size();||| 17 if (k == 0) {||| 18 long long s = 0;||| 19 for (auto &i : v) s = sum(s, i.first * p[i.second] % mod);||| 20 mp[s] = v;||| 21 return;||| 22 }||| 23 if (k == 1) {||| 24 v[x[0]].second = t;||| 25 solve(v, t);||| 26 v[x[0]].second = 0;||| 27 return;||| 28 }||| 29 k /= 2;||| 30 for (int i = 0; i < (1 << k); i++) {||| 31 for (int j = 0; j < k; j++) {||| 32 int y = x[2 * j + (i >> j & 1)];||| 33 v[y].second = x.size() + 1;||| 34 }||| 35 solve(v, t);||| 36 for (int j = 0; j < k; j++) {||| 37 int y = x[2 * j + (i >> j & 1)];||| 38 v[y].second = 0;||| 39 }||| 40 }||| 41 }||| 42 int main() {||| 43 ios_base::sync_with_stdio(0);||| 44 cin.tie(0);||| 45 int k, a, h;||| 46 cin >> k >> a >> h;||| 47 p[0] = 1;||| 48 for (int i = 1; i < (1 << k); i++) p[i] = p[i - 1] * a % mod;||| 49 vector<pair<int, int>> f, s;||| 50 for (int i = 1; i <= (1 << (k - 1)); i++) f.push_back({i, 0});||| 51 for (int i = (1 << (k - 1)) + 1; i <= (1 << k); i++) s.push_back({i, 0});||| 52 map<int, vector<pair<int, int>>> a1, a2, b1, b2;||| 53 solve(f, 1);||| 54 a1 = mp;||| 55 mp.clear();||| 56 solve(s, 1);||| 57 b1 = mp;||| 58 mp.clear();||| 59 solve(f, 2);||| 60 a2 = mp;||| 61 mp.clear();||| 62 solve(s, 2);||| 63 b2 = mp;||| 64 mp.clear();||| 65 for (auto &i : a1) {||| 66 if (b2.count(sum(h, -i.first))) {||| 67 vector<pair<int, int>> ans = i.second;||| 68 for (auto &j : b2[sum(h, -i.first)]) ans.push_back(j);||| 69 for (auto &j : ans) cout << j.second << "" \n""[&j == &ans.back()];||| 70 exit(0);||| 71 }||| 72 }||| 73 for (auto &i : a2) {||| 74 if (b1.count(sum(h, -i.first))) {||| 75 vector<pair<int, int>> ans = i.second;||| 76 for (auto &j : b1[sum(h, -i.first)]) ans.push_back(j);||| 77 for (auto &j : ans) cout << j.second << "" \n""[&j == &ans.back()];||| 78 exit(0);||| 79 }||| 80 }||| 81 cout << ""-1\n"";||| 82 return 0;||| 83 }||| "	48 for (int i = 1; i <= (1 << k); i++) p[i] = p[i - 1] * a % mod;
102	90	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int P = 998244353;||| 4 const int N = 1 << 16, K = 1 << 6;||| 5 int k, A, h;||| 6 int ran[K + 5];||| 7 int power[K + 5];||| 8 map<int, vector<int> > rev[2], ver[2];||| 9 deque<int> q;||| 10 int main() {||| 11 cin >> k >> A >> h;||| 12 power[0] = 1;||| 13 for (int i = 1; i <= (1 << k); i++) power[i] = 1ll * power[i - 1] * A % P;||| 14 for (int i = 0; i < 1 << (1 << (k - 1)); i++) {||| 15 q.clear();||| 16 int mask = i;||| 17 for (int j = 1; j <= (1 << (k - 1)); j++)||| 18 ran[j] = (1 << (k - 1)), q.push_back(j);||| 19 while (q.size() > 1) {||| 20 int first = q.front();||| 21 q.pop_front();||| 22 int second = q.front();||| 23 q.pop_front();||| 24 if (mask & 1)||| 25 ran[second] >>= 1, q.push_back(second), mask >>= 1;||| 26 else||| 27 ran[first] >>= 1, q.push_back(first), mask >>= 1;||| 28 }||| 29 int sum = 0;||| 30 vector<int> ans;||| 31 for (int j = 1; j <= (1 << (k - 1)); j++)||| 32 sum = (sum + 1ll * j * power[ran[j] + 1] % P) % P,||| 33 ans.push_back(ran[j] + 1);||| 34 int ed = q.back();||| 35 rev[0][sum] = ans;||| 36 sum = (sum - 1ll * ed * power[ans[ed - 1]] % P + P) % P;||| 37 ans[ed - 1]--;||| 38 rev[1][(sum + 1ll * ed * power[ans[ed - 1]] % P) % P] = ans;||| 39 }||| 40 vector<int> all;||| 41 for (int i = 0; i < 1 << (1 << (k - 1)); i++) {||| 42 q.clear();||| 43 int mask = i;||| 44 for (int j = 1 + (1 << (k - 1)); j <= (1 << k); j++)||| 45 ran[j] = (1 << (k - 1)), q.push_back(j);||| 46 while (q.size() > 1) {||| 47 int first = q.front();||| 48 q.pop_front();||| 49 int second = q.front();||| 50 q.pop_front();||| 51 if (mask & 1)||| 52 ran[second] >>= 1, q.push_back(second), mask >>= 1;||| 53 else||| 54 ran[first] >>= 1, q.push_back(first), mask >>= 1;||| 55 }||| 56 int sum = 0;||| 57 vector<int> ans;||| 58 for (int j = 1 + (1 << (k - 1)); j <= (1 << k); j++)||| 59 sum = (sum + 1ll * j * power[ran[j] + 1] % P) % P,||| 60 ans.push_back(ran[j] + 1);||| 61 int ed = q.back();||| 62 if (rev[1].count((h - sum + P) % P)) {||| 63 all = rev[1][(h - sum + P) % P];||| 64 all.insert(all.end(), ans.begin(), ans.end());||| 65 break;||| 66 }||| 67 sum = (sum - 1ll * ed * power[ans[ed - 1 - (1 << (k - 1))]] % P + P) % P;||| 68 ans[ed - 1 - (1 << (k - 1))]--;||| 69 (sum += 1ll * ed * power[ans[ed - 1 - (1 << (k - 1))]] % P) %= P;||| 70 if (rev[0].count((h - sum + P) % P)) {||| 71 all = rev[0][(h - sum + P) % P];||| 72 all.insert(all.end(), ans.begin(), ans.end());||| 73 break;||| 74 }||| 75 }||| 76 if (all.empty())||| 77 cout << ""-1"" << endl;||| 78 else {||| 79 for (int i = 0; i < (1 << k); i++) cout << all[i] << "" "";||| 80 cout << endl;||| 81 }||| 82 return 0;||| 83 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int P = 998244353;||| 4 const int N = 1 << 16, K = 1 << 6;||| 5 int k, A, h;||| 6 int ran[K + 5];||| 7 int power[K + 5];||| 8 map<int, vector<int> > rev[2], ver[2];||| 9 deque<int> q;||| 10 int main() {||| 11 cin >> k >> A >> h;||| 12 power[0] = 1;||| 13 for (int i = 1; i < (1 << k); i++) power[i] = 1ll * power[i - 1] * A % P;||| 14 for (int i = 0; i < 1 << (1 << (k - 1)); i++) {||| 15 q.clear();||| 16 int mask = i;||| 17 for (int j = 1; j <= (1 << (k - 1)); j++)||| 18 ran[j] = (1 << (k - 1)), q.push_back(j);||| 19 while (q.size() > 1) {||| 20 int first = q.front();||| 21 q.pop_front();||| 22 int second = q.front();||| 23 q.pop_front();||| 24 if (mask & 1)||| 25 ran[second] >>= 1, q.push_back(second), mask >>= 1;||| 26 else||| 27 ran[first] >>= 1, q.push_back(first), mask >>= 1;||| 28 }||| 29 int sum = 0;||| 30 vector<int> ans;||| 31 for (int j = 1; j <= (1 << (k - 1)); j++)||| 32 sum = (sum + 1ll * j * power[ran[j] + 1] % P) % P,||| 33 ans.push_back(ran[j] + 1);||| 34 int ed = q.back();||| 35 rev[0][sum] = ans;||| 36 sum = (sum - 1ll * ed * power[ans[ed - 1]] % P + P) % P;||| 37 ans[ed - 1]--;||| 38 rev[1][(sum + 1ll * ed * power[ans[ed - 1]] % P) % P] = ans;||| 39 }||| 40 vector<int> all;||| 41 for (int i = 0; i < 1 << (1 << (k - 1)); i++) {||| 42 q.clear();||| 43 int mask = i;||| 44 for (int j = 1 + (1 << (k - 1)); j <= (1 << k); j++)||| 45 ran[j] = (1 << (k - 1)), q.push_back(j);||| 46 while (q.size() > 1) {||| 47 int first = q.front();||| 48 q.pop_front();||| 49 int second = q.front();||| 50 q.pop_front();||| 51 if (mask & 1)||| 52 ran[second] >>= 1, q.push_back(second), mask >>= 1;||| 53 else||| 54 ran[first] >>= 1, q.push_back(first), mask >>= 1;||| 55 }||| 56 int sum = 0;||| 57 vector<int> ans;||| 58 for (int j = 1 + (1 << (k - 1)); j <= (1 << k); j++)||| 59 sum = (sum + 1ll * j * power[ran[j] + 1] % P) % P,||| 60 ans.push_back(ran[j] + 1);||| 61 int ed = q.back();||| 62 if (rev[1].count((h - sum + P) % P)) {||| 63 all = rev[1][(h - sum + P) % P];||| 64 all.insert(all.end(), ans.begin(), ans.end());||| 65 break;||| 66 }||| 67 sum = (sum - 1ll * ed * power[ans[ed - 1 - (1 << (k - 1))]] % P + P) % P;||| 68 ans[ed - 1 - (1 << (k - 1))]--;||| 69 (sum += 1ll * ed * power[ans[ed - 1 - (1 << (k - 1))]] % P) %= P;||| 70 if (rev[0].count((h - sum + P) % P)) {||| 71 all = rev[0][(h - sum + P) % P];||| 72 all.insert(all.end(), ans.begin(), ans.end());||| 73 break;||| 74 }||| 75 }||| 76 if (all.empty())||| 77 cout << ""-1"" << endl;||| 78 else {||| 79 for (int i = 0; i < (1 << k); i++) cout << all[i] << "" "";||| 80 cout << endl;||| 81 }||| 82 return 0;||| 83 }||| "	13 for (int i = 1; i <= (1 << k); i++) power[i] = 1ll * power[i - 1] * A % P;
104	130	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 template <class T>||| 6 int size(T &&a) {||| 7 return (int)(a.size());||| 8 }||| 9 ostream &operator<<(ostream &os, string str) {||| 10 for (char c : str) os << c;||| 11 return os;||| 12 }||| 13 template <class A, class B>||| 14 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 15 return os << '(' << p.first << "","" << p.second << ')';||| 16 }||| 17 template <class T>||| 18 auto operator<<(ostream &os, T &&x) -> decltype(x.begin(), os) {||| 19 os << '{';||| 20 for (auto it = x.begin(); it != x.end(); ++it)||| 21 os << *it << (it == prev(x.end()) ? """" : "" "");||| 22 return os << '}';||| 23 }||| 24 template <class T>||| 25 ostream &operator<<(ostream &os, vector<vector<T>> vec) {||| 26 for (auto x : vec) os << ""\n  "" << x;||| 27 return os;||| 28 }||| 29 void dump() {}||| 30 template <class T, class... Args>||| 31 void dump(T &&x, Args... args) {||| 32 cerr << x << ""; "";||| 33 dump(args...);||| 34 }||| 35 vector<int> ans;||| 36 void print_sequence(int st, int en) {||| 37 if (en - st + 1 < 3) return;||| 38 for (int i = st; i <= en - 2; i += 2) ans.emplace_back(i);||| 39 for (int i = en - 4; i >= st; i -= 2) ans.emplace_back(i);||| 40 }||| 41 void solve() {||| 42 int n;||| 43 cin >> n;||| 44 vector<int> a(n), pref_xor(n);||| 45 for (int i = 0; i < (n); ++i) {||| 46 cin >> a[i];||| 47 if (i == 0)||| 48 pref_xor[i] = a[i];||| 49 else||| 50 pref_xor[i] = pref_xor[i - 1] ^ a[i];||| 51 }||| 52 if (pref_xor[n - 1] == 1) {||| 53 cout << ""NO\n"";||| 54 return;||| 55 }||| 56 ans.clear();||| 57 if (n % 2 == 1) {||| 58 cout << ""YES\n"";||| 59 print_sequence(0, n - 1);||| 60 cout << size(ans) << '\n';||| 61 for (int x : ans) cout << x + 1 << ' ';||| 62 cout << '\n';||| 63 return;||| 64 }||| 65 for (int i = 0; i < n; i += 2) {||| 66 if (pref_xor[i] == 0) {||| 67 cout << ""YES\n"";||| 68 print_sequence(0, i);||| 69 print_sequence(i + 1, n - 1);||| 70 cout << size(ans) << '\n';||| 71 for (int x : ans) cout << x + 1 << ' ';||| 72 cout << '\n';||| 73 return;||| 74 }||| 75 }||| 76 cout << ""NO\n"";||| 77 }||| 78 int main() {||| 79 ios_base::sync_with_stdio(0);||| 80 cin.tie(0);||| 81 int T;||| 82 cin >> T;||| 83 while (T--) solve();||| 84 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 using pii = pair<int, int>;||| 5 template <class T>||| 6 int size(T &&a) {||| 7 return (int)(a.size());||| 8 }||| 9 ostream &operator<<(ostream &os, string str) {||| 10 for (char c : str) os << c;||| 11 return os;||| 12 }||| 13 template <class A, class B>||| 14 ostream &operator<<(ostream &os, const pair<A, B> &p) {||| 15 return os << '(' << p.first << "","" << p.second << ')';||| 16 }||| 17 template <class T>||| 18 auto operator<<(ostream &os, T &&x) -> decltype(x.begin(), os) {||| 19 os << '{';||| 20 for (auto it = x.begin(); it != x.end(); ++it)||| 21 os << *it << (it == prev(x.end()) ? """" : "" "");||| 22 return os << '}';||| 23 }||| 24 template <class T>||| 25 ostream &operator<<(ostream &os, vector<vector<T>> vec) {||| 26 for (auto x : vec) os << ""\n  "" << x;||| 27 return os;||| 28 }||| 29 void dump() {}||| 30 template <class T, class... Args>||| 31 void dump(T &&x, Args... args) {||| 32 cerr << x << ""; "";||| 33 dump(args...);||| 34 }||| 35 vector<int> ans;||| 36 void print_sequence(int st, int en) {||| 37 if (en - st + 1 < 3) return;||| 38 for (int i = st; i <= en - 2; i += 2) ans.emplace_back(i);||| 39 for (int i = en - 4; i >= st; i -= 2) ans.emplace_back(i);||| 40 }||| 41 void solve() {||| 42 int n;||| 43 cin >> n;||| 44 vector<int> a(n), pref_xor(n);||| 45 for (int i = 0; i < (n); ++i) {||| 46 cin >> a[i];||| 47 if (i == 0)||| 48 pref_xor[i] = a[i];||| 49 else||| 50 pref_xor[i] = pref_xor[i - 1] ^ a[i];||| 51 }||| 52 if (pref_xor[n - 1] == 1) {||| 53 cout << ""NO\n"";||| 54 return;||| 55 }||| 56 ans.clear();||| 57 if (n % 2 == 1) {||| 58 cout << ""YES\n"";||| 59 print_sequence(0, n - 1);||| 60 cout << size(ans) << '\n';||| 61 for (int x : ans) cout << x + 1 << ' ';||| 62 cout << '\n';||| 63 return;||| 64 }||| 65 for (int i = 0; i < n; i += 2) {||| 66 if (pref_xor[i] == 0) {||| 67 cout << ""YES\n"";||| 68 print_sequence(0, i);||| 69 print_sequence(i + 1, n - 1);||| 70 cout << size(ans);||| 71 for (int x : ans) cout << x + 1 << ' ';||| 72 cout << '\n';||| 73 return;||| 74 }||| 75 }||| 76 cout << ""NO\n"";||| 77 }||| 78 int main() {||| 79 ios_base::sync_with_stdio(0);||| 80 cin.tie(0);||| 81 int T;||| 82 cin >> T;||| 83 while (T--) solve();||| 84 }||| "	70 cout << size(ans) << '\n';
104	116	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void calc(vector<int> &arr, vector<int> &ids, int l, int r) {||| 4 for (int i = r - 2; i >= l; i -= 2) {||| 5 ids.push_back(i);||| 6 int v = arr[i] ^ arr[i + 1] ^ arr[i + 2];||| 7 arr[i] = arr[i + 1] = arr[i + 2] = v;||| 8 }||| 9 for (int i = l; i <= r - 2; i += 2) {||| 10 ids.push_back(i);||| 11 int v = arr[i] ^ arr[i + 1] ^ arr[i + 2];||| 12 arr[i] = arr[i + 1] = arr[i + 2] = v;||| 13 }||| 14 }||| 15 void solve() {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> arr(n + 1), pre(n + 1), ids;||| 19 for (int i = 1; i <= n; i++) {||| 20 cin >> arr[i];||| 21 pre[i] = pre[i - 1] ^ arr[i];||| 22 }||| 23 if (pre[n] != 0) {||| 24 cout << ""NO\n"";||| 25 return;||| 26 }||| 27 if (n & 1)||| 28 calc(arr, ids, 1, n);||| 29 else {||| 30 bool f = false;||| 31 for (int i = 1; !f && i <= n; i += 2) {||| 32 if (pre[i] == 0) {||| 33 f = true;||| 34 calc(arr, ids, 1, i);||| 35 calc(arr, ids, i + 1, n);||| 36 }||| 37 }||| 38 if (!f) {||| 39 cout << ""NO\n"";||| 40 return;||| 41 }||| 42 }||| 43 cout << ""YES\n"";||| 44 if (ids.empty()) {||| 45 cout << ""0\n"";||| 46 return;||| 47 }||| 48 cout << (int)ids.size() << ""\n"";||| 49 for (int id : ids) cout << id << "" "";||| 50 cout << ""\n"";||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(0);||| 55 cout.tie(0);||| 56 int t;||| 57 cin >> t;||| 58 while (t-- > 0) solve();||| 59 return 0;||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void calc(vector<int> &arr, vector<int> &ids, int l, int r) {||| 4 for (int i = r - 2; i >= l; i -= 2) {||| 5 ids.push_back(i);||| 6 int v = arr[i] ^ arr[i + 1] ^ arr[i + 2];||| 7 arr[i] = arr[i + 1] = arr[i + 2] = v;||| 8 }||| 9 for (int i = l; i <= r - 2; i++) {||| 10 ids.push_back(i);||| 11 int v = arr[i] ^ arr[i + 1] ^ arr[i + 2];||| 12 arr[i] = arr[i + 1] = arr[i + 2] = v;||| 13 }||| 14 }||| 15 void solve() {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> arr(n + 1), pre(n + 1), ids;||| 19 for (int i = 1; i <= n; i++) {||| 20 cin >> arr[i];||| 21 pre[i] = pre[i - 1] ^ arr[i];||| 22 }||| 23 if (pre[n] != 0) {||| 24 cout << ""NO\n"";||| 25 return;||| 26 }||| 27 if (n & 1)||| 28 calc(arr, ids, 1, n);||| 29 else {||| 30 bool f = false;||| 31 for (int i = 1; !f && i <= n; i += 2) {||| 32 if (pre[i] == 0) {||| 33 f = true;||| 34 calc(arr, ids, 1, i);||| 35 calc(arr, ids, i + 1, n);||| 36 }||| 37 }||| 38 if (!f) {||| 39 cout << ""NO\n"";||| 40 return;||| 41 }||| 42 }||| 43 cout << ""YES\n"";||| 44 if (ids.empty()) {||| 45 cout << ""0\n"";||| 46 return;||| 47 }||| 48 cout << (int)ids.size() << ""\n"";||| 49 for (int id : ids) cout << id << "" "";||| 50 cout << ""\n"";||| 51 }||| 52 int main() {||| 53 ios_base::sync_with_stdio(false);||| 54 cin.tie(0);||| 55 cout.tie(0);||| 56 int t;||| 57 cin >> t;||| 58 while (t-- > 0) solve();||| 59 return 0;||| 60 }||| "	9 for (int i = l; i <= r - 2; i += 2) {
104	70	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> a(n);||| 13 for (auto& i : a) {||| 14 cin >> i;||| 15 }||| 16 vector<int> ops;||| 17 for (int i = 0; i < n - 2; ++i) {||| 18 if (a[i] == 0) {||| 19 continue;||| 20 }||| 21 int j = i + 1;||| 22 while (j < n and a[j] == 1) {||| 23 ++j;||| 24 }||| 25 int sz = j - i;||| 26 if (sz % 2 == 0 or j + 1 >= n) {||| 27 i = j;||| 28 } else if (a[j + 1] == 0) {||| 29 ops.push_back(j - 1);||| 30 a[j] = a[j + 1] = 1;||| 31 i = j;||| 32 } else {||| 33 ops.push_back(j - 1);||| 34 a[j - 1] = a[j + 1] = 0;||| 35 i = j;||| 36 }||| 37 }||| 38 for (int i = 0; i < n - 2; ++i) {||| 39 if (a[i] + a[i + 1] + a[i + 2] == 2) {||| 40 ops.push_back(i);||| 41 a[i] = a[i + 1] = a[i + 2] = 0;||| 42 }||| 43 }||| 44 for (int i = n - 1; i >= 2; --i) {||| 45 if (a[i] + a[i - 1] + a[i - 2] == 2) {||| 46 ops.push_back(i - 2);||| 47 a[i] = a[i - 1] = a[i - 2] = 0;||| 48 }||| 49 }||| 50 if (count(a.begin(), a.end(), 1)) {||| 51 cout << ""NO\n"";||| 52 } else {||| 53 cout << ""YES\n"";||| 54 cout << ops.size() << '\n';||| 55 for (auto& i : ops) {||| 56 cout << i + 1 << ' ';||| 57 }||| 58 cout << '\n';||| 59 }||| 60 }||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 1e5 + 10;||| 4 int main() {||| 5 ios_base::sync_with_stdio(false);||| 6 cin.tie(NULL);||| 7 int t;||| 8 cin >> t;||| 9 while (t--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> a(n);||| 13 for (auto& i : a) {||| 14 cin >> i;||| 15 }||| 16 vector<int> ops;||| 17 for (int i = 0; i < n - 2; ++i) {||| 18 if (a[i] == 0) {||| 19 continue;||| 20 }||| 21 int j = i + 1;||| 22 while (j < n and a[j] == 1) {||| 23 ++j;||| 24 }||| 25 int sz = j - i;||| 26 if (sz % 2 == 0 or j + 1 >= n) {||| 27 i = j;||| 28 } else if (a[j + 1] == 0) {||| 29 ops.push_back(j - 1);||| 30 a[j] = a[j + 1] = 0;||| 31 i = j;||| 32 } else {||| 33 ops.push_back(j - 1);||| 34 a[j - 1] = a[j + 1] = 0;||| 35 i = j;||| 36 }||| 37 }||| 38 for (int i = 0; i < n - 2; ++i) {||| 39 if (a[i] + a[i + 1] + a[i + 2] == 2) {||| 40 ops.push_back(i);||| 41 a[i] = a[i + 1] = a[i + 2] = 0;||| 42 }||| 43 }||| 44 for (int i = n - 1; i >= 2; --i) {||| 45 if (a[i] + a[i - 1] + a[i - 2] == 2) {||| 46 ops.push_back(i - 2);||| 47 a[i] = a[i - 1] = a[i - 2] = 0;||| 48 }||| 49 }||| 50 if (count(a.begin(), a.end(), 1)) {||| 51 cout << ""NO\n"";||| 52 } else {||| 53 cout << ""YES\n"";||| 54 cout << ops.size() << '\n';||| 55 for (auto& i : ops) {||| 56 cout << i + 1 << ' ';||| 57 }||| 58 cout << '\n';||| 59 }||| 60 }||| 61 }||| "	30 a[j] = a[j + 1] = 1;
104	143	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 int times;||| 8 cin >> times;||| 9 while (times--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> x(n);||| 13 for (int i = 0; i < n; ++i) cin >> x[i];||| 14 vector<int> ans;||| 15 bool flag = true;||| 16 for (int i = 0; i < n;) {||| 17 if (x[i] == 0) {||| 18 ++i;||| 19 continue;||| 20 }||| 21 int j = i;||| 22 while (j < n && x[j] == 1) ++j;||| 23 while ((j - i) & 1) {||| 24 int oj = j;||| 25 while (j + 1 < n && x[j] == 0 && x[j + 1] == 0) {||| 26 ans.push_back(j);||| 27 x[j] = x[j + 1] = 1;||| 28 j += 2;||| 29 }||| 30 while (j < n && x[j] == 1) ++j;||| 31 if (oj == j) break;||| 32 }||| 33 if ((j - i) & 1) {||| 34 if (j == n || j + 1 == n) {||| 35 flag = false;||| 36 break;||| 37 }||| 38 x[j + 1] = 0;||| 39 for (int k = j - 1; k >= i; k -= 2) {||| 40 ans.push_back(k + 1);||| 41 }||| 42 } else {||| 43 if (i > 0) {||| 44 for (int k = i; k < j; k += 2) {||| 45 ans.push_back(k);||| 46 }||| 47 } else if (j < n) {||| 48 for (int k = j - 2; k >= i; k -= 2) {||| 49 ans.push_back(k + 1);||| 50 }||| 51 } else {||| 52 flag = false;||| 53 break;||| 54 }||| 55 }||| 56 i = j;||| 57 }||| 58 if (flag) {||| 59 cout << ""YES\n"";||| 60 cout << ans.size() << ""\n"";||| 61 for (int i : ans) cout << i << "" "";||| 62 cout << ""\n"";||| 63 } else {||| 64 cout << ""NO\n"";||| 65 }||| 66 }||| 67 return 0;||| 68 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using LL = long long;||| 4 int main() {||| 5 ios::sync_with_stdio(false);||| 6 cin.tie(0);||| 7 int times;||| 8 cin >> times;||| 9 while (times--) {||| 10 int n;||| 11 cin >> n;||| 12 vector<int> x(n);||| 13 for (int i = 0; i < n; ++i) cin >> x[i];||| 14 vector<int> ans;||| 15 bool flag = true;||| 16 for (int i = 0; i < n;) {||| 17 if (x[i] == 0) {||| 18 ++i;||| 19 continue;||| 20 }||| 21 int j = i;||| 22 while (j < n && x[j] == 1) ++j;||| 23 while ((j - i) & 1) {||| 24 int oj = j;||| 25 while (j + 1 < n && x[j] == 0 && x[j + 1] == 0) {||| 26 ans.push_back(j);||| 27 x[j] = x[j + 1] = 1;||| 28 j += 2;||| 29 }||| 30 while (j < n && x[j] == 1) ++j;||| 31 if (oj == j) break;||| 32 }||| 33 if ((j - i) & 1) {||| 34 if (j == n || j + 1 == n) {||| 35 flag = false;||| 36 break;||| 37 }||| 38 x[j + 1] = 0;||| 39 for (int k = j - 1; k >= i; k -= 2) {||| 40 ans.push_back(k + 1);||| 41 }||| 42 } else {||| 43 if (i > 0) {||| 44 for (int k = i; k < j; k += 2) {||| 45 ans.push_back(k + 1);||| 46 }||| 47 } else if (j < n) {||| 48 for (int k = j - 2; k >= i; k -= 2) {||| 49 ans.push_back(k + 1);||| 50 }||| 51 } else {||| 52 flag = false;||| 53 break;||| 54 }||| 55 }||| 56 i = j;||| 57 }||| 58 if (flag) {||| 59 cout << ""YES\n"";||| 60 cout << ans.size() << ""\n"";||| 61 for (int i : ans) cout << i << "" "";||| 62 cout << ""\n"";||| 63 } else {||| 64 cout << ""NO\n"";||| 65 }||| 66 }||| 67 return 0;||| 68 }||| "	45 ans.push_back(k);
104	114	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> a(n);||| 7 for (int& x : a) cin >> x;||| 8 int asum = 0;||| 9 for (int x : a) asum ^= x;||| 10 if (asum) {||| 11 cout << ""NO"" << '\n';||| 12 return;||| 13 }||| 14 vector<int> b(n + 1);||| 15 b[0] = a[0];||| 16 for (int i = 0; i < n - 1; i++) {||| 17 b[i + 1] = a[i + 1] ^ a[i];||| 18 }||| 19 b[n] = a[n - 1];||| 20 vector<int> steps;||| 21 if (n & 1) {||| 22 for (int i = 0; i <= n - 3; i += 2) steps.push_back(i);||| 23 for (int i = n - 3; i >= 0; i -= 2) steps.push_back(i);||| 24 } else {||| 25 int split = -1;||| 26 int psum = 0;||| 27 for (int i = 0; i < n; i += 2) {||| 28 psum ^= b[i];||| 29 if (psum == 0) {||| 30 split = i;||| 31 break;||| 32 }||| 33 }||| 34 if (split == -1) {||| 35 cout << ""NO"" << '\n';||| 36 return;||| 37 }||| 38 for (int i = split - 2; i >= 0; i -= 2) {||| 39 steps.push_back(i);||| 40 }||| 41 for (int i = split + 2; i < n; i += 2) {||| 42 steps.push_back(i - 1);||| 43 }||| 44 for (int i = 0; i < n - 2; i += 2) {||| 45 steps.push_back(i);||| 46 }||| 47 }||| 48 cout << ""YES"" << '\n';||| 49 cout << steps.size() << '\n';||| 50 for (int x : steps) {||| 51 cout << (x + 1) << ' ';||| 52 }||| 53 cout << '\n';||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 57 int T;||| 58 cin >> T;||| 59 while (T--) solve();||| 60 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int n;||| 5 cin >> n;||| 6 vector<int> a(n);||| 7 for (int& x : a) cin >> x;||| 8 int asum = 0;||| 9 for (int x : a) asum ^= x;||| 10 if (asum) {||| 11 cout << ""NO"" << '\n';||| 12 return;||| 13 }||| 14 vector<int> b(n + 1);||| 15 b[0] = a[0];||| 16 for (int i = 0; i < n - 1; i++) {||| 17 b[i + 1] = a[i + 1] ^ a[i];||| 18 }||| 19 b[n] = a[n - 1];||| 20 vector<int> steps;||| 21 if (n & 1) {||| 22 for (int i = 0; i <= n - 3; i += 2) steps.push_back(i);||| 23 for (int i = n - 3; i >= 0; i -= 2) steps.push_back(i);||| 24 } else {||| 25 int split = -1;||| 26 int psum = 0;||| 27 for (int i = 0; i < n; i += 2) {||| 28 psum ^= b[i];||| 29 if (psum == 0) {||| 30 split = i;||| 31 break;||| 32 }||| 33 }||| 34 if (split == -1) {||| 35 cout << ""NO"" << '\n';||| 36 return;||| 37 }||| 38 for (int i = split - 2; i >= 0; i -= 2) {||| 39 steps.push_back(i);||| 40 }||| 41 for (int i = split; i < n; i += 2) {||| 42 steps.push_back(i - 1);||| 43 }||| 44 for (int i = 0; i < n - 2; i += 2) {||| 45 steps.push_back(i);||| 46 }||| 47 }||| 48 cout << ""YES"" << '\n';||| 49 cout << steps.size() << '\n';||| 50 for (int x : steps) {||| 51 cout << (x + 1) << ' ';||| 52 }||| 53 cout << '\n';||| 54 }||| 55 int main() {||| 56 ios_base::sync_with_stdio(false), cin.tie(nullptr);||| 57 int T;||| 58 cin >> T;||| 59 while (T--) solve();||| 60 }||| "	41 for (int i = split + 2; i < n; i += 2) {
105	24	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void rd(T& x) {||| 5 int f = 0, c;||| 6 while (!isdigit(c = getchar())) f ^= !(c ^ 45);||| 7 x = (c & 15);||| 8 while (isdigit(c = getchar())) x = x * 10 + (c & 15);||| 9 if (f) x = -x;||| 10 }||| 11 template <typename T>||| 12 void pt(T x, int c = -1) {||| 13 if (x < 0) putchar('-'), x = -x;||| 14 if (x > 9) pt(x / 10);||| 15 putchar(x % 10 + 48);||| 16 if (c != -1) putchar(c);||| 17 }||| 18 const int N = 3005, INF = 0X3F3F3F3F;||| 19 int T, n, a[N], dp[N][N], nex[N], pre[N];||| 20 int sol(int l, int r) {||| 21 if (l >= r) return 0;||| 22 if (dp[l][r] != -1) return dp[l][r];||| 23 if (a[l] == a[l + 1]) return dp[l][r] = sol(l + 1, r) + 1;||| 24 int ret = sol(l + 1, r);||| 25 if (nex[l] <= r) {||| 26 for (int i = nex[l]; i; i = nex[i])||| 27 if (i <= r) {||| 28 ret = max(ret, sol(l + 1, i - 1) + sol(i, r) + 1);||| 29 }||| 30 }||| 31 return dp[l][r] = ret;||| 32 }||| 33 int main() {||| 34 rd(T);||| 35 while (T--) {||| 36 rd(n);||| 37 for (int i = (1); i <= (n); ++i) rd(a[i]);||| 38 map<int, int> lst;||| 39 for (int i = (1); i <= (n); ++i) {||| 40 if (lst.count(a[i])) {||| 41 pre[i] = lst[a[i]];||| 42 } else {||| 43 pre[i] = 0;||| 44 }||| 45 lst[a[i]] = i;||| 46 }||| 47 lst.clear();||| 48 for (int i = (n); i >= (1); --i) {||| 49 if (lst.count(a[i])) {||| 50 nex[i] = lst[a[i]];||| 51 } else {||| 52 nex[i] = n + 1;||| 53 }||| 54 lst[a[i]] = i;||| 55 }||| 56 for (int i = (0); i <= (n); ++i)||| 57 for (int j = (0); j <= (n); ++j) dp[i][j] = -1;||| 58 printf(""%d\n"", n - 1 - sol(1, n));||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void rd(T& x) {||| 5 int f = 0, c;||| 6 while (!isdigit(c = getchar())) f ^= !(c ^ 45);||| 7 x = (c & 15);||| 8 while (isdigit(c = getchar())) x = x * 10 + (c & 15);||| 9 if (f) x = -x;||| 10 }||| 11 template <typename T>||| 12 void pt(T x, int c = -1) {||| 13 if (x < 0) putchar('-'), x = -x;||| 14 if (x > 9) pt(x / 10);||| 15 putchar(x % 10 + 48);||| 16 if (c != -1) putchar(c);||| 17 }||| 18 const int N = 3005, INF = 0X3F3F3F3F;||| 19 int T, n, a[N], dp[N][N], nex[N], pre[N];||| 20 int sol(int l, int r) {||| 21 if (l >= r) return 0;||| 22 if (dp[l][r] != -1) return dp[l][r];||| 23 if (a[l] == a[l + 1]) return dp[l][r] = sol(l + 1, r) + 1;||| 24 int ret = sol(l + 1, r);||| 25 if (nex[l] <= r) {||| 26 for (int i = nex[l]; i; i = nex[i])||| 27 if (i <= r) {||| 28 ret = max(ret, sol(l + 1, i - 1) + sol(i, r) + 1);||| 29 break;||| 30 }||| 31 }||| 32 return dp[l][r] = ret;||| 33 }||| 34 int main() {||| 35 rd(T);||| 36 while (T--) {||| 37 rd(n);||| 38 for (int i = (1); i <= (n); ++i) rd(a[i]);||| 39 map<int, int> lst;||| 40 for (int i = (1); i <= (n); ++i) {||| 41 if (lst.count(a[i])) {||| 42 pre[i] = lst[a[i]];||| 43 } else {||| 44 pre[i] = 0;||| 45 }||| 46 lst[a[i]] = i;||| 47 }||| 48 lst.clear();||| 49 for (int i = (n); i >= (1); --i) {||| 50 if (lst.count(a[i])) {||| 51 nex[i] = lst[a[i]];||| 52 } else {||| 53 nex[i] = n + 1;||| 54 }||| 55 lst[a[i]] = i;||| 56 }||| 57 for (int i = (0); i <= (n); ++i)||| 58 for (int j = (0); j <= (n); ++j) dp[i][j] = -1;||| 59 printf(""%d\n"", n - 1 - sol(1, n));||| 60 }||| 61 return 0;||| 62 }||| "	29 
105	34	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void rd(T& x) {||| 5 int f = 0, c;||| 6 while (!isdigit(c = getchar())) f ^= !(c ^ 45);||| 7 x = (c & 15);||| 8 while (isdigit(c = getchar())) x = x * 10 + (c & 15);||| 9 if (f) x = -x;||| 10 }||| 11 template <typename T>||| 12 void pt(T x, int c = -1) {||| 13 if (x < 0) putchar('-'), x = -x;||| 14 if (x > 9) pt(x / 10);||| 15 putchar(x % 10 + 48);||| 16 if (c != -1) putchar(c);||| 17 }||| 18 const int N = 3005, INF = 0X3F3F3F3F;||| 19 int T, n, a[N], dp[N][N], nex[N], pre[N];||| 20 int sol(int l, int r) {||| 21 if (l >= r) return 0;||| 22 if (dp[l][r] != -1) return dp[l][r];||| 23 if (a[l] == a[l + 1]) return dp[l][r] = sol(l + 1, r) + 1;||| 24 int ret = sol(l + 1, r);||| 25 if (nex[l] <= r) {||| 26 for (int i = nex[l]; i; i = nex[i])||| 27 if (i <= r) {||| 28 ret = max(ret, sol(l + 1, i - 1) + sol(i, r) + 1);||| 29 }||| 30 }||| 31 return dp[l][r] = ret;||| 32 }||| 33 int main() {||| 34 rd(T);||| 35 while (T--) {||| 36 rd(n);||| 37 for (int i = (1); i <= (n); ++i) rd(a[i]);||| 38 map<int, int> lst;||| 39 for (int i = (1); i <= (n); ++i) {||| 40 if (lst.count(a[i])) {||| 41 pre[i] = lst[a[i]];||| 42 } else {||| 43 pre[i] = 0;||| 44 }||| 45 lst[a[i]] = i;||| 46 }||| 47 lst.clear();||| 48 for (int i = (n); i >= (1); --i) {||| 49 if (lst.count(a[i])) {||| 50 nex[i] = lst[a[i]];||| 51 } else {||| 52 nex[i] = n + 1;||| 53 }||| 54 lst[a[i]] = i;||| 55 }||| 56 for (int i = (0); i <= (n); ++i)||| 57 for (int j = (0); j <= (n); ++j) dp[i][j] = -1;||| 58 printf(""%d\n"", n - 1 - sol(1, n));||| 59 }||| 60 return 0;||| 61 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 void rd(T& x) {||| 5 int f = 0, c;||| 6 while (!isdigit(c = getchar())) f ^= !(c ^ 45);||| 7 x = (c & 15);||| 8 while (isdigit(c = getchar())) x = x * 10 + (c & 15);||| 9 if (f) x = -x;||| 10 }||| 11 template <typename T>||| 12 void pt(T x, int c = -1) {||| 13 if (x < 0) putchar('-'), x = -x;||| 14 if (x > 9) pt(x / 10);||| 15 putchar(x % 10 + 48);||| 16 if (c != -1) putchar(c);||| 17 }||| 18 const int N = 3005, INF = 0X3F3F3F3F;||| 19 int T, n, a[N], dp[N][N], nex[N], pre[N];||| 20 int sol(int l, int r) {||| 21 if (l >= r) return 0;||| 22 if (dp[l][r] != -1) return dp[l][r];||| 23 if (a[l] == a[l + 1]) return dp[l][r] = sol(l + 1, r) + 1;||| 24 int ret = sol(l + 1, r);||| 25 if (nex[l] <= r) {||| 26 for (int i = nex[l]; i; i = nex[i])||| 27 if (i <= r) {||| 28 ret = max(ret, sol(l + 1, i - 1) + sol(i + 1, r) + 1);||| 29 }||| 30 }||| 31 return dp[l][r] = ret;||| 32 }||| 33 int main() {||| 34 rd(T);||| 35 while (T--) {||| 36 rd(n);||| 37 for (int i = (1); i <= (n); ++i) rd(a[i]);||| 38 map<int, int> lst;||| 39 for (int i = (1); i <= (n); ++i) {||| 40 if (lst.count(a[i])) {||| 41 pre[i] = lst[a[i]];||| 42 } else {||| 43 pre[i] = 0;||| 44 }||| 45 lst[a[i]] = i;||| 46 }||| 47 lst.clear();||| 48 for (int i = (n); i >= (1); --i) {||| 49 if (lst.count(a[i])) {||| 50 nex[i] = lst[a[i]];||| 51 } else {||| 52 nex[i] = n + 1;||| 53 }||| 54 lst[a[i]] = i;||| 55 }||| 56 for (int i = (0); i <= (n); ++i)||| 57 for (int j = (0); j <= (n); ++j) dp[i][j] = -1;||| 58 printf(""%d\n"", n - 1 - sol(1, n));||| 59 }||| 60 return 0;||| 61 }||| "	28 ret = max(ret, sol(l + 1, i - 1) + sol(i, r) + 1);
105	70	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3;||| 4 uint16_t a[N], lst[N], nxt[N], cnxt[20], dp[N][N + 1];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, 0, n * sizeof *lst);||| 15 for (int i = 0; i < n; ++i) {||| 16 ++lst[a[i]];||| 17 }||| 18 int w = -1, r = 0, purged = 0;||| 19 while (r < n) {||| 20 if (w >= 0 && a[w] == a[r]) {||| 21 if (--lst[a[r++]] == 1) {||| 22 --w;||| 23 ++purged;||| 24 }||| 25 } else if (lst[a[r]] == 1) {||| 26 ++r;||| 27 ++purged;||| 28 } else {||| 29 a[++w] = a[r++];||| 30 }||| 31 }||| 32 memset(lst, -1, n * sizeof *lst);||| 33 n = w + 1;||| 34 memset(nxt, 127, n * sizeof *nxt);||| 35 for (int i = 0; i < n; ++i) {||| 36 if (lst[a[i]] != (uint16_t)-1) {||| 37 nxt[lst[a[i]]] = i;||| 38 }||| 39 lst[a[i]] = i;||| 40 }||| 41 for (int i = n - 1; i > -1; --i) {||| 42 auto* cnxte = cnxt;||| 43 for (int z = nxt[i]; z < n; z = nxt[z]) {||| 44 *cnxte++ = z;||| 45 }||| 46 *cnxte = n;||| 47 cnxte = cnxt;||| 48 for (int j = i + 2; j <= n; ++j) {||| 49 if (a[j - 1] == a[i]) {||| 50 ++cnxte;||| 51 }||| 52 int t = dp[i + 1][j] - 1;||| 53 for (const auto* z = cnxt; z < cnxte; ++z) {||| 54 t = max(t, dp[i + 1][*z] + dp[*z][j]);||| 55 }||| 56 dp[i][j] = t + 1;||| 57 }||| 58 }||| 59 cout << (n ? n - dp[0][n] : 0) - 1 + purged << '\n';||| 60 }||| 61 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3;||| 4 uint16_t a[N], lst[N], nxt[N], cnxt[20], dp[N][N + 1];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, 0, n * sizeof *lst);||| 15 for (int i = 0; i < n; ++i) {||| 16 ++lst[a[i]];||| 17 }||| 18 int w = -1, r = 0, purged = 0;||| 19 while (r < n) {||| 20 if (w >= 0 && a[w] == a[r]) {||| 21 if (--lst[a[r++]] == 1) {||| 22 --w;||| 23 ++purged;||| 24 }||| 25 } else if (lst[a[r]] == 1) {||| 26 ++r;||| 27 ++purged;||| 28 } else {||| 29 a[++w] = a[r++];||| 30 }||| 31 }||| 32 memset(lst, -1, n * sizeof *lst);||| 33 n = w + 1;||| 34 memset(nxt, 127, n * sizeof *nxt);||| 35 for (int i = 0; i < n; ++i) {||| 36 if (lst[a[i]] != (uint16_t)-1) {||| 37 nxt[lst[a[i]]] = i;||| 38 }||| 39 lst[a[i]] = i;||| 40 }||| 41 for (int i = n - 1; i > -1; --i) {||| 42 auto* cnxte = cnxt;||| 43 for (int z = nxt[i]; z < n; z = nxt[z]) {||| 44 *cnxte++ = z;||| 45 }||| 46 *cnxte = n;||| 47 cnxte = cnxt;||| 48 for (int j = i + 2; j <= n; ++j) {||| 49 if (a[j - 1] == a[i]) {||| 50 ++cnxte;||| 51 }||| 52 int t = dp[i + 1][j] - 1;||| 53 for (const auto* z = cnxt; z < cnxte; ++z) {||| 54 t = max(t, dp[i + 1][*z] + dp[*z][j]);||| 55 }||| 56 dp[i][j] = t + 1;||| 57 }||| 58 }||| 59 cout << (n ? n - dp[0][n - 1] : 0) - 1 + purged << '\n';||| 60 }||| 61 }||| 	59 cout << (n ? n - dp[0][n] : 0) - 1 + purged << '\n';
105	91	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long spf[101];||| 4 long long fac[101];||| 5 long long add(long long a, long long b) {||| 6 if (a + b > 1000000007)||| 7 return a + b - 1000000007;||| 8 else||| 9 return a + b;||| 10 }||| 11 long long sub(long long a, long long b) {||| 12 if (a - b < 0)||| 13 return a - b + 1000000007;||| 14 else||| 15 return a - b;||| 16 }||| 17 void sieve() {||| 18 spf[1] = 1;||| 19 for (long long i = 2; i < 101; i++) spf[i] = i;||| 20 for (long long i = 4; i < 101; i += 2) spf[i] = 2;||| 21 for (long long i = 3; i * i < 101; i++) {||| 22 if (spf[i] == i) {||| 23 for (long long j = i * i; j < 101; j += i)||| 24 if (spf[j] == j) spf[j] = i;||| 25 }||| 26 }||| 27 }||| 28 map<long long, long long> getfactor(long long a) {||| 29 map<long long, long long> m;||| 30 while (a > 1) {||| 31 m[spf[a]]++;||| 32 a /= spf[a];||| 33 }||| 34 return m;||| 35 }||| 36 long long power(long long x, long long y, long long p) {||| 37 long long res = 1;||| 38 x = x % p;||| 39 if (x == 0 || y < 0) return 0;||| 40 while (y > 0) {||| 41 if (y & 1) res = (res * x) % p;||| 42 y = y >> 1;||| 43 x = (x * x) % p;||| 44 }||| 45 return res;||| 46 }||| 47 long long gcd(long long a, long long b) {||| 48 if (a == 0) return b;||| 49 return gcd(b % a, a);||| 50 }||| 51 long long inverse(long long a, long long p) { return power(a, p - 2, p); }||| 52 long long ncr(long long n, long long r, long long p) {||| 53 if (r > n) return 0;||| 54 if (r == 0 || r == n) return 1;||| 55 return (fac[n] * inverse(fac[r], p) % p * inverse(fac[n - r], p) % p) % p;||| 56 }||| 57 void solve() {||| 58 long long n;||| 59 cin >> n;||| 60 vector<long long> v[n + 1];||| 61 long long a[n + 1];||| 62 for (long long i = 1; i <= n; i++) {||| 63 cin >> a[i];||| 64 v[a[i]].push_back(i);||| 65 }||| 66 long long dp[n + 1][n + 1];||| 67 memset(dp, 0, sizeof(dp));||| 68 for (long long j = 1; j < n; j++) {||| 69 for (long long i = 1; i <= n - j; i++) {||| 70 if (a[i] == a[i + 1])||| 71 dp[i][i + j] = dp[i + 1][i + j];||| 72 else||| 73 dp[i][i + j] = 1 + dp[i + 1][i + j];||| 74 for (auto it : v[a[i]]) {||| 75 if (it <= i + j && it > i + 1)||| 76 dp[i][i + j] =||| 77 min(dp[i][i + j], dp[it][i + j] + dp[i + 1][it - 1] + 1);||| 78 }||| 79 }||| 80 }||| 81 cout << dp[1][n] << '\n';||| 82 }||| 83 signed main() {||| 84 ios_base::sync_with_stdio(false);||| 85 cin.tie(NULL);||| 86 long long test = 1;||| 87 cin >> test;||| 88 while (test--) {||| 89 solve();||| 90 }||| 91 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long spf[101];||| 4 long long fac[101];||| 5 long long add(long long a, long long b) {||| 6 if (a + b > 1000000007)||| 7 return a + b - 1000000007;||| 8 else||| 9 return a + b;||| 10 }||| 11 long long sub(long long a, long long b) {||| 12 if (a - b < 0)||| 13 return a - b + 1000000007;||| 14 else||| 15 return a - b;||| 16 }||| 17 void sieve() {||| 18 spf[1] = 1;||| 19 for (long long i = 2; i < 101; i++) spf[i] = i;||| 20 for (long long i = 4; i < 101; i += 2) spf[i] = 2;||| 21 for (long long i = 3; i * i < 101; i++) {||| 22 if (spf[i] == i) {||| 23 for (long long j = i * i; j < 101; j += i)||| 24 if (spf[j] == j) spf[j] = i;||| 25 }||| 26 }||| 27 }||| 28 map<long long, long long> getfactor(long long a) {||| 29 map<long long, long long> m;||| 30 while (a > 1) {||| 31 m[spf[a]]++;||| 32 a /= spf[a];||| 33 }||| 34 return m;||| 35 }||| 36 long long power(long long x, long long y, long long p) {||| 37 long long res = 1;||| 38 x = x % p;||| 39 if (x == 0 || y < 0) return 0;||| 40 while (y > 0) {||| 41 if (y & 1) res = (res * x) % p;||| 42 y = y >> 1;||| 43 x = (x * x) % p;||| 44 }||| 45 return res;||| 46 }||| 47 long long gcd(long long a, long long b) {||| 48 if (a == 0) return b;||| 49 return gcd(b % a, a);||| 50 }||| 51 long long inverse(long long a, long long p) { return power(a, p - 2, p); }||| 52 long long ncr(long long n, long long r, long long p) {||| 53 if (r > n) return 0;||| 54 if (r == 0 || r == n) return 1;||| 55 return (fac[n] * inverse(fac[r], p) % p * inverse(fac[n - r], p) % p) % p;||| 56 }||| 57 void solve() {||| 58 long long n;||| 59 cin >> n;||| 60 vector<long long> v[n + 1];||| 61 long long a[n + 1];||| 62 for (long long i = 1; i <= n; i++) {||| 63 cin >> a[i];||| 64 v[a[i]].push_back(i);||| 65 }||| 66 long long dp[n + 1][n + 1];||| 67 memset(dp, 0, sizeof(dp));||| 68 for (long long j = 1; j < n; j++) {||| 69 for (long long i = 1; i <= n - j; i++) {||| 70 if (a[i] == a[i + 1])||| 71 dp[i][i + j] = dp[i + 1][i + j];||| 72 else||| 73 dp[i][i + j] = 1 + dp[i + 1][i + j];||| 74 for (auto it : v[a[i]]) {||| 75 if (i <= i + j && it > i + 1)||| 76 dp[i][i + j] =||| 77 min(dp[i][i + j], dp[it][i + j] + dp[i + 1][it - 1] + 1);||| 78 }||| 79 }||| 80 }||| 81 cout << dp[1][n] << '\n';||| 82 }||| 83 signed main() {||| 84 ios_base::sync_with_stdio(false);||| 85 cin.tie(NULL);||| 86 long long test = 1;||| 87 cin >> test;||| 88 while (test--) {||| 89 solve();||| 90 }||| 91 }||| 	75 if (it <= i + j && it > i + 1)
105	93	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3003, mod = 1e9 + 7;||| 4 int n, a[N], dp[N][N], f[N][N];||| 5 vector<int> s[N];||| 6 void Main() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) s[i].clear();||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i], s[a[i]].push_back(i);||| 10 for (int i = (1); i <= (n); ++i)||| 11 for (int j = (i); j <= (n); ++j) dp[i][j] = f[i][j] = 1e9;||| 12 for (int i = (1); i <= (n); ++i)||| 13 for (int j = i; j <= n && a[j] == a[i]; j += 1) dp[i][j] = f[i][j] = 0;||| 14 for (int len = (2); len <= (n); ++len)||| 15 for (int l = (1); l <= (n - len + 1); ++l) {||| 16 int r = l + len - 1;||| 17 dp[l][r] = dp[l][r - 1] + (a[r] != a[r - 1]);||| 18 for (const int &t : s[a[r]])||| 19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);||| 20 dp[l][r] = min(dp[l][r], f[l][r]);||| 21 f[l][r] = min(f[l][r], dp[l][r - 1] + (a[r] != a[r - 1]));||| 22 }||| 23 cout << dp[1][n] << ""\n"";||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 int T;||| 30 cin >> T;||| 31 while (T--) Main();||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3003, mod = 1e9 + 7;||| 4 int n, a[N], dp[N][N], f[N][N];||| 5 vector<int> s[N];||| 6 void Main() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) s[i].clear();||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i], s[a[i]].push_back(i);||| 10 for (int i = (1); i <= (n); ++i)||| 11 for (int j = (i); j <= (n); ++j) dp[i][j] = f[i][j] = 1e9;||| 12 for (int i = (1); i <= (n); ++i)||| 13 for (int j = i; j <= n && a[j] == a[i]; j += 1) dp[i][j] = f[i][j] = 0;||| 14 for (int len = (2); len <= (n); ++len)||| 15 for (int l = (1); l <= (n - len + 1); ++l) {||| 16 int r = l + len - 1;||| 17 dp[l][r] = dp[l][r - 1] + (a[r] != a[r - 1]);||| 18 for (const int &t : s[a[r]])||| 19 if (t <= l && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);||| 20 dp[l][r] = min(dp[l][r], f[l][r]);||| 21 f[l][r] = min(f[l][r], dp[l][r - 1] + (a[r] != a[r - 1]));||| 22 }||| 23 cout << dp[1][n] << ""\n"";||| 24 }||| 25 int main() {||| 26 ios::sync_with_stdio(false);||| 27 cin.tie(0);||| 28 cout.tie(0);||| 29 int T;||| 30 cin >> T;||| 31 while (T--) Main();||| 32 return 0;||| 33 }||| "	19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);
105	107	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 ostream& operator<<(ostream& out, vector<T>& v) {||| 5 out << ""["";||| 6 for (auto k : v) out << k << "","";||| 7 out << ""]""||| 8 << ""\n"";||| 9 return out;||| 10 }||| 11 template <class T>||| 12 ostream& operator<<(ostream& out, set<T> s) {||| 13 out << ""{"";||| 14 for (auto k : s) out << k << "","";||| 15 out << ""}""||| 16 << ""\n"";||| 17 return out;||| 18 }||| 19 template <class T, class U>||| 20 ostream& operator<<(ostream& out, pair<T, U> p) {||| 21 out << ""[ "" << p.first << "" , "" << p.second << "" ] "";||| 22 return out;||| 23 }||| 24 template <class T, class U>||| 25 istream& operator>>(istream& in, pair<T, U>& p) {||| 26 in >> p.first >> p.second;||| 27 return in;||| 28 }||| 29 vector<int> app[(int)1e4];||| 30 int dp[3500][3500];||| 31 int a[4000];||| 32 int DP(int i, int j) {||| 33 if (i >= j) return 0;||| 34 if (dp[i][j] != -1) return dp[i][j];||| 35 dp[i][j] = DP(i + 1, j);||| 36 for (auto k : app[a[i]]) {||| 37 if (k > i and k <= j)||| 38 dp[i][j] = max(dp[i][j], 1 + DP(i + 1, k - 1) + DP(k, j));||| 39 }||| 40 return dp[i][j];||| 41 }||| 42 int main() {||| 43 cin.tie(0);||| 44 cin.sync_with_stdio(0);||| 45 int t;||| 46 cin >> t;||| 47 while (t--) {||| 48 int n;||| 49 cin >> n;||| 50 for (int i = 0; i < int(n); i++) {||| 51 app[i + 1].clear();||| 52 for (int j = 0; j < int(n); j++) dp[i][j] = -1;||| 53 cin >> a[i];||| 54 }||| 55 for (int i = 0; i < int(n); i++) app[a[i]].push_back(i);||| 56 cout << n - 1 - DP(0, n - 1) << '\n';||| 57 }||| 58 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <class T>||| 4 ostream& operator<<(ostream& out, vector<T>& v) {||| 5 out << ""["";||| 6 for (auto k : v) out << k << "","";||| 7 out << ""]""||| 8 << ""\n"";||| 9 return out;||| 10 }||| 11 template <class T>||| 12 ostream& operator<<(ostream& out, set<T> s) {||| 13 out << ""{"";||| 14 for (auto k : s) out << k << "","";||| 15 out << ""}""||| 16 << ""\n"";||| 17 return out;||| 18 }||| 19 template <class T, class U>||| 20 ostream& operator<<(ostream& out, pair<T, U> p) {||| 21 out << ""[ "" << p.first << "" , "" << p.second << "" ] "";||| 22 return out;||| 23 }||| 24 template <class T, class U>||| 25 istream& operator>>(istream& in, pair<T, U>& p) {||| 26 in >> p.first >> p.second;||| 27 return in;||| 28 }||| 29 vector<int> app[(int)1e4];||| 30 int dp[3500][3500];||| 31 int a[4000];||| 32 int DP(int i, int j) {||| 33 if (i >= j) return 0;||| 34 if (dp[i][j] != -1) return dp[i][j];||| 35 dp[i][j] = DP(i + 1, j);||| 36 for (auto k : app[a[i]]) {||| 37 if (k > i and k <= j)||| 38 dp[i][j] = max(dp[i][j], 1 + DP(i + 1, k - 1) + DP(k, j));||| 39 }||| 40 return dp[i][j];||| 41 }||| 42 int main() {||| 43 cin.tie(0);||| 44 cin.sync_with_stdio(0);||| 45 int t;||| 46 cin >> t;||| 47 while (t--) {||| 48 int n;||| 49 cin >> n;||| 50 for (int i = 0; i < int(n); i++) {||| 51 app[i].clear();||| 52 for (int j = 0; j < int(n); j++) dp[i][j] = -1;||| 53 cin >> a[i];||| 54 }||| 55 for (int i = 0; i < int(n); i++) app[a[i]].push_back(i);||| 56 cout << n - 1 - DP(0, n - 1) << '\n';||| 57 }||| 58 }||| "	51 app[i + 1].clear();
105	22	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3 + 1;||| 4 int a[N], dp[N][N], nxt[N], prv[N], lst[N];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, -1, n * sizeof *lst);||| 15 n = unique(a, a + n) - a;||| 16 memset(prv, -1, n * sizeof *prv);||| 17 memset(nxt, 127, n * sizeof *nxt);||| 18 for (int i = 0; i < n; ++i) {||| 19 if (lst[a[i]] != -1) {||| 20 prv[i] = lst[a[i]];||| 21 nxt[lst[a[i]]] = i;||| 22 }||| 23 lst[a[i]] = i;||| 24 }||| 25 for (int le = 2; le <= n; ++le)||| 26 for (int i = 0; i + le <= n; ++i) {||| 27 int j = i + le - 1;||| 28 dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);||| 29 if (nxt[i] - i > j - prv[j]) {||| 30 for (int z = nxt[i]; z <= j; z = nxt[z]) {||| 31 dp[i][j] = max(dp[i][j], dp[i + 1][z - 1] + dp[z][j] + 1);||| 32 }||| 33 } else {||| 34 for (int z = prv[j]; z >= i; z = prv[z]) {||| 35 dp[i][j] = max(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);||| 36 }||| 37 }||| 38 }||| 39 cout << n - dp[0][n - 1] - 1 << '\n';||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3 + 1;||| 4 int a[N], dp[N][N], nxt[N], prv[N], lst[N];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, -1, n * sizeof *lst);||| 15 n = unique(a, a + n) - a;||| 16 memset(prv, -1, n * sizeof *prv);||| 17 memset(nxt, 127, n * sizeof *nxt);||| 18 for (int i = 0; i < n; ++i) {||| 19 if (lst[a[i]] != -1) {||| 20 prv[i] = lst[a[i]];||| 21 nxt[lst[a[i]]] = i;||| 22 }||| 23 lst[a[i]] = i;||| 24 }||| 25 for (int le = 2; le <= n; ++le)||| 26 for (int i = 0; i + le <= n; ++i) {||| 27 int j = i + le - 1;||| 28 dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);||| 29 if (nxt[i] - i > j - prv[j]) {||| 30 for (int z = nxt[i]; z <= j; z = nxt[z]) {||| 31 dp[i][j] = max(dp[i][j], dp[i + 1][z - 1] + dp[z][j] + 1);||| 32 }||| 33 } else {||| 34 for (int z = prv[j]; z >= i; z = prv[z]) {||| 35 dp[i][j] = min(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);||| 36 }||| 37 }||| 38 }||| 39 cout << n - dp[0][n - 1] - 1 << '\n';||| 40 }||| 41 return 0;||| 42 }||| 	35 dp[i][j] = max(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);
105	60	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3003, mod = 1e9 + 7;||| 4 int n, a[N], dp[N][N], f[N][N];||| 5 vector<int> s[N];||| 6 void Main() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) s[i].clear();||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i], s[a[i]].push_back(i);||| 10 for (int i = (1); i <= (n); ++i)||| 11 for (int j = (i); j <= (n); ++j) dp[i][j] = f[i][j] = 1e9;||| 12 for (int i = (1); i <= (n); ++i)||| 13 for (int j = i; j <= n && a[j] == a[i]; j += 1) dp[i][j] = f[i][j] = 0;||| 14 for (int len = (2); len <= (n); ++len)||| 15 for (int l = (1); l <= (n - len + 1); ++l) {||| 16 int r = l + len - 1;||| 17 dp[l][r] = dp[l][r - 1] + (a[r] != a[r - 1]);||| 18 for (const int &t : s[a[r]])||| 19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);||| 20 dp[l][r] = min(dp[l][r], f[l][r]);||| 21 f[l][r] = min(f[l][r], dp[l][r - 1] + (a[r] != a[r - 1]));||| 22 }||| 23 int ns = dp[1][n];||| 24 for (int i = (1); i <= (n); ++i) ns = min(ns, f[1][i] + dp[i + 1][n] + 1);||| 25 cout << ns << ""\n"";||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(0);||| 30 cout.tie(0);||| 31 int T;||| 32 cin >> T;||| 33 while (T--) Main();||| 34 return 0;||| 35 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 3003, mod = 1e9 + 7;||| 4 int n, a[N], dp[N][N], f[N][N];||| 5 vector<int> s[N];||| 6 void Main() {||| 7 cin >> n;||| 8 for (int i = (1); i <= (n); ++i) s[i].clear();||| 9 for (int i = (1); i <= (n); ++i) cin >> a[i], s[a[i]].push_back(i);||| 10 for (int i = (1); i <= (n); ++i)||| 11 for (int j = (i); j <= (n); ++j) dp[i][j] = f[i][j] = 1e9;||| 12 for (int i = (1); i <= (n); ++i)||| 13 for (int j = i; j <= n && a[j] == a[i]; j += 1) dp[i][j] = f[i][j] = 0;||| 14 for (int len = (2); len <= (n); ++len)||| 15 for (int l = (1); l <= (n - len + 1); ++l) {||| 16 int r = l + len - 1;||| 17 dp[l][r] = dp[l][r - 1] + (a[r] != a[r - 1]);||| 18 for (const int &t : s[a[r]])||| 19 if (t <= l && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);||| 20 dp[l][r] = min(dp[l][r], f[l][r]);||| 21 f[l][r] = min(f[l][r], dp[l][r - 1] + (a[r] != a[r - 1]));||| 22 }||| 23 int ns = dp[1][n];||| 24 for (int i = (1); i <= (n); ++i) ns = min(ns, f[1][i] + dp[i + 1][n] + 1);||| 25 cout << ns << ""\n"";||| 26 }||| 27 int main() {||| 28 ios::sync_with_stdio(false);||| 29 cin.tie(0);||| 30 cout.tie(0);||| 31 int T;||| 32 cin >> T;||| 33 while (T--) Main();||| 34 return 0;||| 35 }||| "	19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);
105	95	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3;||| 4 uint16_t a[N], lst[N], nxt[N], cnxt[20], dp[N][N + 1];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, 0, n * sizeof *lst);||| 15 for (int i = 0; i < n; ++i) {||| 16 ++lst[a[i]];||| 17 }||| 18 int w = -1, r = 0, purged = 0;||| 19 while (r < n) {||| 20 if (w >= 0 && a[w] == a[r]) {||| 21 if (--lst[a[r++]] == 1) {||| 22 --w;||| 23 ++purged;||| 24 }||| 25 } else if (lst[a[r]] == 1) {||| 26 ++r;||| 27 ++purged;||| 28 } else {||| 29 a[++w] = a[r++];||| 30 }||| 31 }||| 32 memset(lst, -1, n * sizeof *lst);||| 33 n = w + 1;||| 34 memset(nxt, 127, n * sizeof *nxt);||| 35 for (int i = 0; i < n; ++i) {||| 36 if (lst[a[i]] != (uint16_t)-1) {||| 37 nxt[lst[a[i]]] = i;||| 38 }||| 39 lst[a[i]] = i;||| 40 }||| 41 for (int i = n - 2; i > -1; --i) {||| 42 auto* cnxte = cnxt;||| 43 for (int z = nxt[i]; z < n; z = nxt[z]) {||| 44 *cnxte++ = z;||| 45 }||| 46 *cnxte = n;||| 47 cnxte = cnxt;||| 48 for (int j = i + 1; j <= n; ++j) {||| 49 int t = dp[i + 1][j] - 1;||| 50 for (const auto* z = cnxt; z < cnxte; ++z) {||| 51 t = max(t, dp[i + 1][*z] + dp[*z][j]);||| 52 }||| 53 dp[i][j] = t + 1;||| 54 if (a[j] == a[i]) {||| 55 ++cnxte;||| 56 }||| 57 }||| 58 }||| 59 cout << (n ? n - dp[0][n] : 0) - 1 + purged << '\n';||| 60 }||| 61 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3;||| 4 uint16_t a[N], lst[N], nxt[N], cnxt[20], dp[N][N + 1];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, 0, n * sizeof *lst);||| 15 for (int i = 0; i < n; ++i) {||| 16 ++lst[a[i]];||| 17 }||| 18 int w = -1, r = 0, purged = 0;||| 19 while (r < n) {||| 20 if (w >= 0 && a[w] == a[r]) {||| 21 if (--lst[a[r++]] == 1) {||| 22 --w;||| 23 ++purged;||| 24 }||| 25 } else if (lst[a[r]] == 1) {||| 26 ++r;||| 27 ++purged;||| 28 } else {||| 29 a[++w] = a[r++];||| 30 }||| 31 }||| 32 memset(lst, -1, n * sizeof *lst);||| 33 n = w + 1;||| 34 memset(nxt, 127, n * sizeof *nxt);||| 35 for (int i = 0; i < n; ++i) {||| 36 if (lst[a[i]] != (uint16_t)-1) {||| 37 nxt[lst[a[i]]] = i;||| 38 }||| 39 lst[a[i]] = i;||| 40 }||| 41 for (int i = n - 1; i > -1; --i) {||| 42 auto* cnxte = cnxt;||| 43 for (int z = nxt[i]; z < n; z = nxt[z]) {||| 44 *cnxte++ = z;||| 45 }||| 46 *cnxte = n;||| 47 cnxte = cnxt;||| 48 for (int j = i + 1; j <= n; ++j) {||| 49 int t = dp[i + 1][j] - 1;||| 50 for (const auto* z = cnxt; z < cnxte; ++z) {||| 51 t = max(t, dp[i + 1][*z] + dp[*z][j]);||| 52 }||| 53 dp[i][j] = t + 1;||| 54 if (a[j] == a[i]) {||| 55 ++cnxte;||| 56 }||| 57 }||| 58 }||| 59 cout << (n ? n - dp[0][n] : 0) - 1 + purged << '\n';||| 60 }||| 61 }||| 	41 for (int i = n - 2; i > -1; --i) {
105	91	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long spf[101];||| 4 long long fac[101];||| 5 long long add(long long a, long long b) {||| 6 if (a + b > 1000000007)||| 7 return a + b - 1000000007;||| 8 else||| 9 return a + b;||| 10 }||| 11 long long sub(long long a, long long b) {||| 12 if (a - b < 0)||| 13 return a - b + 1000000007;||| 14 else||| 15 return a - b;||| 16 }||| 17 void sieve() {||| 18 spf[1] = 1;||| 19 for (long long i = 2; i < 101; i++) spf[i] = i;||| 20 for (long long i = 4; i < 101; i += 2) spf[i] = 2;||| 21 for (long long i = 3; i * i < 101; i++) {||| 22 if (spf[i] == i) {||| 23 for (long long j = i * i; j < 101; j += i)||| 24 if (spf[j] == j) spf[j] = i;||| 25 }||| 26 }||| 27 }||| 28 map<long long, long long> getfactor(long long a) {||| 29 map<long long, long long> m;||| 30 while (a > 1) {||| 31 m[spf[a]]++;||| 32 a /= spf[a];||| 33 }||| 34 return m;||| 35 }||| 36 long long power(long long x, long long y, long long p) {||| 37 long long res = 1;||| 38 x = x % p;||| 39 if (x == 0 || y < 0) return 0;||| 40 while (y > 0) {||| 41 if (y & 1) res = (res * x) % p;||| 42 y = y >> 1;||| 43 x = (x * x) % p;||| 44 }||| 45 return res;||| 46 }||| 47 long long gcd(long long a, long long b) {||| 48 if (a == 0) return b;||| 49 return gcd(b % a, a);||| 50 }||| 51 long long inverse(long long a, long long p) { return power(a, p - 2, p); }||| 52 long long ncr(long long n, long long r, long long p) {||| 53 if (r > n) return 0;||| 54 if (r == 0 || r == n) return 1;||| 55 return (fac[n] * inverse(fac[r], p) % p * inverse(fac[n - r], p) % p) % p;||| 56 }||| 57 void solve() {||| 58 long long n;||| 59 cin >> n;||| 60 vector<long long> v[n + 1];||| 61 long long a[n + 1];||| 62 for (long long i = 1; i <= n; i++) {||| 63 cin >> a[i];||| 64 v[a[i]].push_back(i);||| 65 }||| 66 long long dp[n + 1][n + 1];||| 67 memset(dp, 0, sizeof(dp));||| 68 for (long long j = 1; j < n; j++) {||| 69 for (long long i = 1; i <= n - j; i++) {||| 70 if (a[i] == a[i + 1])||| 71 dp[i][i + j] = dp[i + 1][i + j];||| 72 else||| 73 dp[i][i + j] = 1 + dp[i + 1][i + j];||| 74 for (auto &it : v[a[i]]) {||| 75 if (it <= i + j && it > i + 1)||| 76 dp[i][i + j] =||| 77 min(dp[i][i + j], dp[it][i + j] + dp[i + 1][it - 1] + 1);||| 78 }||| 79 }||| 80 }||| 81 cout << dp[1][n] << '\n';||| 82 }||| 83 signed main() {||| 84 ios_base::sync_with_stdio(false);||| 85 cin.tie(NULL);||| 86 long long test = 1;||| 87 cin >> test;||| 88 while (test--) {||| 89 solve();||| 90 }||| 91 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 long long spf[101];||| 4 long long fac[101];||| 5 long long add(long long a, long long b) {||| 6 if (a + b > 1000000007)||| 7 return a + b - 1000000007;||| 8 else||| 9 return a + b;||| 10 }||| 11 long long sub(long long a, long long b) {||| 12 if (a - b < 0)||| 13 return a - b + 1000000007;||| 14 else||| 15 return a - b;||| 16 }||| 17 void sieve() {||| 18 spf[1] = 1;||| 19 for (long long i = 2; i < 101; i++) spf[i] = i;||| 20 for (long long i = 4; i < 101; i += 2) spf[i] = 2;||| 21 for (long long i = 3; i * i < 101; i++) {||| 22 if (spf[i] == i) {||| 23 for (long long j = i * i; j < 101; j += i)||| 24 if (spf[j] == j) spf[j] = i;||| 25 }||| 26 }||| 27 }||| 28 map<long long, long long> getfactor(long long a) {||| 29 map<long long, long long> m;||| 30 while (a > 1) {||| 31 m[spf[a]]++;||| 32 a /= spf[a];||| 33 }||| 34 return m;||| 35 }||| 36 long long power(long long x, long long y, long long p) {||| 37 long long res = 1;||| 38 x = x % p;||| 39 if (x == 0 || y < 0) return 0;||| 40 while (y > 0) {||| 41 if (y & 1) res = (res * x) % p;||| 42 y = y >> 1;||| 43 x = (x * x) % p;||| 44 }||| 45 return res;||| 46 }||| 47 long long gcd(long long a, long long b) {||| 48 if (a == 0) return b;||| 49 return gcd(b % a, a);||| 50 }||| 51 long long inverse(long long a, long long p) { return power(a, p - 2, p); }||| 52 long long ncr(long long n, long long r, long long p) {||| 53 if (r > n) return 0;||| 54 if (r == 0 || r == n) return 1;||| 55 return (fac[n] * inverse(fac[r], p) % p * inverse(fac[n - r], p) % p) % p;||| 56 }||| 57 void solve() {||| 58 long long n;||| 59 cin >> n;||| 60 vector<long long> v[n + 1];||| 61 long long a[n + 1];||| 62 for (long long i = 1; i <= n; i++) {||| 63 cin >> a[i];||| 64 v[a[i]].push_back(i);||| 65 }||| 66 long long dp[n + 1][n + 1];||| 67 memset(dp, 0, sizeof(dp));||| 68 for (long long j = 1; j < n; j++) {||| 69 for (long long i = 1; i <= n - j; i++) {||| 70 if (a[i] == a[i + 1])||| 71 dp[i][i + j] = dp[i + 1][i + j];||| 72 else||| 73 dp[i][i + j] = 1 + dp[i + 1][i + j];||| 74 for (auto it : v[a[i]]) {||| 75 if (i <= i + j && it > i + 1)||| 76 dp[i][i + j] =||| 77 min(dp[i][i + j], dp[it][i + j] + dp[i + 1][it - 1] + 1);||| 78 }||| 79 }||| 80 }||| 81 cout << dp[1][n] << '\n';||| 82 }||| 83 signed main() {||| 84 ios_base::sync_with_stdio(false);||| 85 cin.tie(NULL);||| 86 long long test = 1;||| 87 cin >> test;||| 88 while (test--) {||| 89 solve();||| 90 }||| 91 }||| 	74 for (auto &it : v[a[i]]) {
105	50	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 const int maxN = 3005;||| 5 vector<int> where[maxN];||| 6 int a[maxN];||| 7 int dp[maxN][maxN];||| 8 void solve() {||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 where[i].clear();||| 12 }||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> a[i];||| 15 where[a[i]].emplace_back(i);||| 16 }||| 17 for (int len = 1; len <= n; len++) {||| 18 for (int i = 1; i + len - 1 <= n; i++) {||| 19 int j = i + len - 1;||| 20 dp[i][j] = len - 1;||| 21 if (len == 1) continue;||| 22 dp[i][j] = min(dp[i][j], dp[i + 1][j] + 1);||| 23 int pt1 = lower_bound(where[a[i]].begin(), where[a[i]].end(), i) -||| 24 where[a[i]].begin();||| 25 int pt2 = upper_bound(where[a[i]].begin(), where[a[i]].end(), j) -||| 26 where[a[i]].begin() - 1;||| 27 for (int t = pt1 + 1; t <= pt2; t++) {||| 28 if (i + 1 <= where[a[i]][t] - 1) {||| 29 dp[i][j] = min(dp[i][j], dp[i + 1][where[a[i]][t] - 1] + 1 +||| 30 dp[where[a[i]][t]][j]);||| 31 } else {||| 32 dp[i][j] = min(dp[i][j], dp[where[a[i]][t]][j]);||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << dp[1][n] << '\n';||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(nullptr);||| 42 int tst;||| 43 cin >> tst;||| 44 while (tst--) solve();||| 45 return 0;||| 46 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n;||| 4 const int maxN = 3005;||| 5 vector<int> where[maxN];||| 6 int a[maxN];||| 7 int dp[maxN][maxN];||| 8 void solve() {||| 9 cin >> n;||| 10 for (int i = 1; i <= n; i++) {||| 11 where[i].clear();||| 12 }||| 13 for (int i = 1; i <= n; i++) {||| 14 cin >> a[i];||| 15 where[a[i]].emplace_back(i);||| 16 }||| 17 for (int len = 1; len <= n; len++) {||| 18 for (int i = 1; i + len - 1 <= n; i++) {||| 19 int j = i + len - 1;||| 20 dp[i][j] = len - 1;||| 21 if (len == 1) continue;||| 22 dp[i][j] = min(dp[i][j], dp[i + 1][j] + 1);||| 23 int pt1 = lower_bound(where[a[i]].begin(), where[a[i]].end(), i) -||| 24 where[a[i]].begin();||| 25 int pt2 = upper_bound(where[a[i]].begin(), where[a[i]].end(), j) -||| 26 where[a[i]].begin() - 1;||| 27 for (int t = pt1 + 1; t <= pt2; t++) {||| 28 if (i + 1 < where[a[i]][t] - 1) {||| 29 dp[i][j] = min(dp[i][j], dp[i + 1][where[a[i]][t] - 1] + 1 +||| 30 dp[where[a[i]][t]][j]);||| 31 } else {||| 32 dp[i][j] = min(dp[i][j], dp[where[a[i]][t]][j]);||| 33 }||| 34 }||| 35 }||| 36 }||| 37 cout << dp[1][n] << '\n';||| 38 }||| 39 int main() {||| 40 ios_base::sync_with_stdio(false);||| 41 cin.tie(nullptr);||| 42 int tst;||| 43 cin >> tst;||| 44 while (tst--) solve();||| 45 return 0;||| 46 }||| 	28 if (i + 1 <= where[a[i]][t] - 1) {
105	22	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3 + 1;||| 4 int a[N], dp[N][N], nxt[N], prv[N], lst[N];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, -1, n * sizeof *lst);||| 15 n = unique(a, a + n) - a;||| 16 memset(prv, -1, n * sizeof *prv);||| 17 memset(nxt, 127, n * sizeof *nxt);||| 18 for (int i = 0; i < n; ++i) {||| 19 if (lst[a[i]] != -1) {||| 20 prv[i] = lst[a[i]];||| 21 nxt[lst[a[i]]] = i;||| 22 }||| 23 lst[a[i]] = i;||| 24 }||| 25 for (int le = 2; le <= n; ++le)||| 26 for (int i = 0; i + le <= n; ++i) {||| 27 int j = i + le - 1;||| 28 dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);||| 29 if (nxt[i] - i < j - prv[j]) {||| 30 for (int z = nxt[i]; z <= j; z = nxt[z]) {||| 31 dp[i][j] = max(dp[i][j], dp[i + 1][z - 1] + dp[z][j] + 1);||| 32 }||| 33 } else {||| 34 for (int z = prv[j]; z >= i; z = prv[z]) {||| 35 dp[i][j] = max(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);||| 36 }||| 37 }||| 38 }||| 39 cout << n - dp[0][n - 1] - 1 << '\n';||| 40 }||| 41 return 0;||| 42 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 constexpr int N = 3e3 + 1;||| 4 int a[N], dp[N][N], nxt[N], prv[N], lst[N];||| 5 int main() {||| 6 cin.tie(0), ios::sync_with_stdio(0);||| 7 int t, n;||| 8 cin >> t;||| 9 while (t--) {||| 10 cin >> n;||| 11 for (int i = 0; i < n; ++i) {||| 12 cin >> a[i], --a[i];||| 13 }||| 14 memset(lst, -1, n * sizeof *lst);||| 15 n = unique(a, a + n) - a;||| 16 memset(prv, -1, n * sizeof *prv);||| 17 memset(nxt, 127, n * sizeof *nxt);||| 18 for (int i = 0; i < n; ++i) {||| 19 if (lst[a[i]] != -1) {||| 20 prv[i] = lst[a[i]];||| 21 nxt[lst[a[i]]] = i;||| 22 }||| 23 lst[a[i]] = i;||| 24 }||| 25 for (int le = 2; le <= n; ++le)||| 26 for (int i = 0; i + le <= n; ++i) {||| 27 int j = i + le - 1;||| 28 dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);||| 29 if (nxt[i] - i > j - prv[j]) {||| 30 for (int z = nxt[i]; z <= j; z = nxt[z]) {||| 31 dp[i][j] = max(dp[i][j], dp[i + 1][z - 1] + dp[z][j] + 1);||| 32 }||| 33 } else {||| 34 for (int z = prv[j]; z >= i; z = prv[z]) {||| 35 dp[i][j] = min(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);||| 36 }||| 37 }||| 38 }||| 39 cout << n - dp[0][n - 1] - 1 << '\n';||| 40 }||| 41 return 0;||| 42 }||| 	29 if (nxt[i] - i < j - prv[j]) {
107	8	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"", ""unroll-loops"")||| 3 using namespace std;||| 4 const int inf = 1000111222;||| 5 const int max_n = 211;||| 6 struct point {||| 7 int x, y;||| 8 };||| 9 long long get_sqr(const point& p1, const point& p2, const point& p3) {||| 10 long long res = 0;||| 11 res += (p2.x - p1.x) * 1LL * (p1.y + p2.y);||| 12 res += (p3.x - p2.x) * 1LL * (p2.y + p3.y);||| 13 res += (p1.x - p3.x) * 1LL * (p3.y + p1.y);||| 14 return abs(res);||| 15 }||| 16 point p[max_n];||| 17 int dp[max_n][max_n], n, k;||| 18 long long all_sqr[max_n][max_n][max_n], sums[max_n][max_n];||| 19 bool check(long long sz) {||| 20 for (int l = 2; l < n; ++l) {||| 21 for (int st = 0; st < n; ++st) {||| 22 int fn = (st + l) % n;||| 23 if (sums[st][fn] < sz) {||| 24 dp[st][fn] = 0;||| 25 continue;||| 26 }||| 27 int ans = 0;||| 28 long long curr_sqr = 0;||| 29 int curr_st = 0;||| 30 for (int i = st + 1; i != fn; ++i) {||| 31 int pr = i - 1;||| 32 if (i == n) i -= n;||| 33 if (i == fn) break;||| 34 if (curr_sqr < sz) {||| 35 curr_st = i;||| 36 curr_sqr += all_sqr[fn][pr][i];||| 37 }||| 38 if (all_sqr[st][fn][i] >= sz) {||| 39 ans = max(ans, dp[st][i] + dp[i][fn] + 1);||| 40 }||| 41 }||| 42 if (curr_sqr >= sz) {||| 43 ans = max(ans, 1 + dp[curr_st][fn]);||| 44 }||| 45 int pr = (curr_st - 1 + n) % n;||| 46 assert(curr_st != fn && ans);||| 47 for (int fnn = fn - 1; fnn != st; --fnn) {||| 48 int nxt = fnn + 1;||| 49 if (fnn < 0) fnn += n;||| 50 if (fnn == st) break;||| 51 curr_sqr += all_sqr[fnn][curr_st][nxt];||| 52 long long nxt_sqr = all_sqr[fnn][pr][curr_st];||| 53 while (curr_sqr - nxt_sqr >= sz && curr_st != st) {||| 54 curr_sqr -= nxt_sqr;||| 55 curr_st = pr;||| 56 --pr;||| 57 if (pr < 0) pr += n;||| 58 nxt_sqr = all_sqr[fnn][pr][curr_st];||| 59 }||| 60 ans = max(ans, dp[curr_st][fnn] + 1);||| 61 if (curr_st == st) {||| 62 break;||| 63 }||| 64 }||| 65 dp[st][fn] = ans;||| 66 if (ans >= k + 1) {||| 67 return true;||| 68 }||| 69 }||| 70 }||| 71 return false;||| 72 }||| 73 int main() {||| 74 cin >> n >> k;||| 75 for (int i = 0; i < n; ++i) {||| 76 cin >> p[i].x >> p[i].y;||| 77 }||| 78 auto stt = clock();||| 79 for (int i = 0; i < n; ++i) {||| 80 const point& p1 = p[i];||| 81 for (int q = 0; q < n; ++q) {||| 82 const point& p2 = p[q];||| 83 for (int w = 0; w < n; ++w) {||| 84 all_sqr[i][q][w] = get_sqr(p1, p2, p[w]);||| 85 }||| 86 }||| 87 int pr, cr = (i + 1) % n;||| 88 for (;;) {||| 89 pr = cr;||| 90 if (++cr == n) cr -= n;||| 91 if (cr == i) break;||| 92 sums[i][cr] = sums[i][pr] + all_sqr[i][pr][cr];||| 93 }||| 94 }||| 95 long long l = 1, r = 1LL * inf * inf;||| 96 while (l + 1 < r) {||| 97 long long mid = (l + r) / 2;||| 98 if (check(mid)) {||| 99 l = mid;||| 100 } else {||| 101 r = mid;||| 102 }||| 103 }||| 104 cout << l << ""\n"";||| 105 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"", ""unroll-loops"")||| 3 using namespace std;||| 4 const int inf = 1000111222;||| 5 const int max_n = 211;||| 6 struct point {||| 7 int x, y;||| 8 };||| 9 long long get_sqr(const point& p1, const point& p2, const point& p3) {||| 10 long long res = 0;||| 11 res += (p2.x - p1.x) * 1LL * (p1.y + p2.y);||| 12 res += (p3.x - p2.x) * 1LL * (p2.y + p3.y);||| 13 res += (p1.x - p3.x) * 1LL * (p3.y + p1.y);||| 14 return abs(res);||| 15 }||| 16 point p[max_n];||| 17 int dp[max_n][max_n], n, k;||| 18 long long all_sqr[max_n][max_n][max_n], sums[max_n][max_n];||| 19 bool check(long long sz) {||| 20 for (int l = 2; l < n; ++l) {||| 21 for (int st = 0; st + l < n; ++st) {||| 22 int fn = (st + l) % n;||| 23 if (sums[st][fn] < sz) {||| 24 dp[st][fn] = 0;||| 25 continue;||| 26 }||| 27 int ans = 0;||| 28 long long curr_sqr = 0;||| 29 int curr_st = 0;||| 30 for (int i = st + 1; i != fn; ++i) {||| 31 int pr = i - 1;||| 32 if (i == n) i -= n;||| 33 if (i == fn) break;||| 34 if (curr_sqr < sz) {||| 35 curr_st = i;||| 36 curr_sqr += all_sqr[fn][pr][i];||| 37 }||| 38 if (all_sqr[st][fn][i] >= sz) {||| 39 ans = max(ans, dp[st][i] + dp[i][fn] + 1);||| 40 }||| 41 }||| 42 if (curr_sqr >= sz) {||| 43 ans = max(ans, 1 + dp[curr_st][fn]);||| 44 }||| 45 int pr = (curr_st - 1 + n) % n;||| 46 assert(curr_st != fn && ans);||| 47 for (int fnn = fn - 1; fnn != st; --fnn) {||| 48 int nxt = fnn + 1;||| 49 if (fnn < 0) fnn += n;||| 50 if (fnn == st) break;||| 51 curr_sqr += all_sqr[fnn][curr_st][nxt];||| 52 long long nxt_sqr = all_sqr[fnn][pr][curr_st];||| 53 while (curr_sqr - nxt_sqr >= sz && curr_st != st) {||| 54 curr_sqr -= nxt_sqr;||| 55 curr_st = pr;||| 56 --pr;||| 57 if (pr < 0) pr += n;||| 58 nxt_sqr = all_sqr[fnn][pr][curr_st];||| 59 }||| 60 ans = max(ans, dp[curr_st][fnn] + 1);||| 61 if (curr_st == st) {||| 62 break;||| 63 }||| 64 }||| 65 dp[st][fn] = ans;||| 66 if (ans >= k + 1) {||| 67 return true;||| 68 }||| 69 }||| 70 }||| 71 return false;||| 72 }||| 73 int main() {||| 74 cin >> n >> k;||| 75 for (int i = 0; i < n; ++i) {||| 76 cin >> p[i].x >> p[i].y;||| 77 }||| 78 auto stt = clock();||| 79 for (int i = 0; i < n; ++i) {||| 80 const point& p1 = p[i];||| 81 for (int q = 0; q < n; ++q) {||| 82 const point& p2 = p[q];||| 83 for (int w = 0; w < n; ++w) {||| 84 all_sqr[i][q][w] = get_sqr(p1, p2, p[w]);||| 85 }||| 86 }||| 87 int pr, cr = (i + 1) % n;||| 88 for (;;) {||| 89 pr = cr;||| 90 if (++cr == n) cr -= n;||| 91 if (cr == i) break;||| 92 sums[i][cr] = sums[i][pr] + all_sqr[i][pr][cr];||| 93 }||| 94 }||| 95 long long l = 1, r = 1LL * inf * inf;||| 96 while (l + 1 < r) {||| 97 long long mid = (l + r) / 2;||| 98 if (check(mid)) {||| 99 l = mid;||| 100 } else {||| 101 r = mid;||| 102 }||| 103 }||| 104 cout << l << ""\n"";||| 105 }||| "	21 for (int st = 0; st < n; ++st) {
107	9	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct pnt {||| 4 long long x, y;||| 5 pnt(long long _x = 0, long long _y = 0) : x(_x), y(_y) {}||| 6 } P[300];||| 7 long long operator*(pnt A, pnt B) { return A.x * B.y - A.y * B.x; }||| 8 long long area(pnt A, pnt B, pnt C) { return A * B + B * C + C * A; }||| 9 pair<int, long long> dp[300][300];||| 10 long long sz[300][300];||| 11 int main() {||| 12 int n = 0, k = 0;||| 13 scanf(""%d%d"", &n, &k);||| 14 k++;||| 15 for (int i = 1; i <= n; i++) scanf(""%lld%lld"", &P[i].x, &P[i].y);||| 16 for (int l = 1; l <= n; l++) {||| 17 for (int r = l + 1; r <= n; r++) sz[l][r] = sz[l][r - 1] + P[r - 1] * P[r];||| 18 for (int r = l + 1; r <= n; r++) sz[l][r] += P[r] * P[l];||| 19 }||| 20 long long S = 0;||| 21 for (int i = 1; i < n; i++) S += P[i] * P[i + 1];||| 22 S += P[n] * P[1];||| 23 long long L = 0, R = S / k;||| 24 while (L < R) {||| 25 long long x = (L + R + 1) >> 1;||| 26 memset(dp, 0, sizeof(dp));||| 27 for (int len = 3; len <= n; len++) {||| 28 for (int l = 1; l + len - 1 <= n; l++) {||| 29 int r = l + len - 1;||| 30 if (sz[l][r] < x) continue;||| 31 dp[l][r] = make_pair(1, 0);||| 32 for (int k = l + 1; k <= r - 1; k++) {||| 33 pair<int, long long> val = make_pair(||| 34 dp[l][k].first + dp[k][r].first,||| 35 dp[l][k].second + dp[k][r].second + area(P[l], P[k], P[r]));||| 36 if (val.second >= x) val.first++, val.second = 0;||| 37 dp[l][r] = max(dp[l][r], val);||| 38 }||| 39 }||| 40 }||| 41 if (dp[1][n].first >= k)||| 42 L = x;||| 43 else||| 44 R = x - 1;||| 45 }||| 46 printf(""%lld"", L);||| 47 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 struct pnt {||| 4 long long x, y;||| 5 pnt(long long _x = 0, long long _y = 0) : x(_x), y(_y) {}||| 6 } P[300];||| 7 long long operator*(pnt A, pnt B) { return A.x * B.y - A.y * B.x; }||| 8 long long area(pnt A, pnt B, pnt C) { return A * B + B * C + C * A; }||| 9 pair<int, long long> dp[300][300];||| 10 long long sz[300][300];||| 11 int main() {||| 12 int n = 0, k = 0;||| 13 scanf(""%d%d"", &n, &k);||| 14 k++;||| 15 for (int i = 1; i <= n; i++) scanf(""%lld%lld"", &P[i].x, &P[i].y);||| 16 for (int l = 1; l <= n; l++) {||| 17 for (int r = l + 1; r <= n; r++) sz[l][r] = sz[l][r - 1] + P[r - 1] * P[r];||| 18 for (int r = l + 1; r <= n; r++) sz[l][r] += P[r] * P[l];||| 19 }||| 20 long long S = 0;||| 21 for (int i = 1; i < n; i++) S += P[i] * P[i + 1];||| 22 S += P[n] * P[1];||| 23 long long L = 0, R = S / k;||| 24 while (L < R) {||| 25 long long x = (L + R + 1) >> 1;||| 26 memset(dp, 0, sizeof(dp));||| 27 for (int len = 3; len <= n; len++) {||| 28 for (int l = 1; l + len - 1 <= n; l++) {||| 29 int r = l + len - 1;||| 30 if (sz[l][r] < x) continue;||| 31 dp[l][r] = make_pair(1, 0);||| 32 for (int k = l + 1; k <= r - 1; k++) {||| 33 pair<int, long long> val = make_pair(||| 34 dp[l][k].first + dp[k][r].first,||| 35 dp[l][k].second + dp[r][k].second + area(P[l], P[k], P[r]));||| 36 if (val.second >= x) val.first++, val.second = 0;||| 37 dp[l][r] = max(dp[l][r], val);||| 38 }||| 39 }||| 40 }||| 41 if (dp[1][n].first >= k)||| 42 L = x;||| 43 else||| 44 R = x - 1;||| 45 }||| 46 printf(""%lld"", L);||| 47 }||| "	35 dp[l][k].second + dp[k][r].second + area(P[l], P[k], P[r]));
107	11	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"", ""unroll-loops"")||| 3 using namespace std;||| 4 const int inf = 1000111222;||| 5 const int max_n = 211;||| 6 struct point {||| 7 int x, y;||| 8 };||| 9 long long get_sqr(const point& p1, const point& p2, const point& p3) {||| 10 long long res = 0;||| 11 res += (p2.x - p1.x) * 1LL * (p1.y + p2.y);||| 12 res += (p3.x - p2.x) * 1LL * (p2.y + p3.y);||| 13 res += (p1.x - p3.x) * 1LL * (p3.y + p1.y);||| 14 return abs(res);||| 15 }||| 16 point p[max_n];||| 17 int dp[max_n][max_n], n, k;||| 18 long long all_sqr[max_n][max_n][max_n], sums[max_n][max_n];||| 19 bool check(long long sz) {||| 20 for (int l = 2; l < n; ++l) {||| 21 for (int st = 0; st + l < n; ++st) {||| 22 int fn = st + l;||| 23 if (sums[st][fn] < sz) {||| 24 dp[st][fn] = 0;||| 25 continue;||| 26 }||| 27 int ans = 0;||| 28 long long curr_sqr = 0;||| 29 int curr_st = 0;||| 30 for (int i = st + 1; i < fn; ++i) {||| 31 if (curr_sqr < sz) {||| 32 curr_st = i;||| 33 curr_sqr += all_sqr[fn][curr_st - 1][i];||| 34 }||| 35 if (all_sqr[st][fn][i] >= sz) {||| 36 ans = max(ans, dp[st][i] + dp[i][fn] + 1);||| 37 }||| 38 }||| 39 if (curr_sqr >= sz) {||| 40 ans = max(ans, 1 + dp[curr_st][fn]);||| 41 }||| 42 int pr = curr_st - 1;||| 43 assert(curr_st != fn && ans);||| 44 for (int fnn = fn - 1; fnn > st; --fnn) {||| 45 curr_sqr += all_sqr[fnn][curr_st][fnn + 1];||| 46 long long nxt_sqr = all_sqr[fnn][pr][curr_st];||| 47 while (curr_sqr - nxt_sqr >= sz && curr_st != st) {||| 48 curr_sqr -= nxt_sqr;||| 49 curr_st = pr;||| 50 --pr;||| 51 nxt_sqr = all_sqr[fnn][pr][curr_st];||| 52 }||| 53 ans = max(ans, dp[curr_st][fnn] + 1);||| 54 if (curr_st == st) {||| 55 break;||| 56 }||| 57 }||| 58 dp[st][fn] = ans;||| 59 if (ans >= k + 1) {||| 60 return true;||| 61 }||| 62 }||| 63 }||| 64 return false;||| 65 }||| 66 long long get_ans() {||| 67 long long l = 1, r = 1LL * inf * inf;||| 68 while (l + 1 < r) {||| 69 long long mid = (l + r) / 2;||| 70 if (check(mid)) {||| 71 l = mid;||| 72 } else {||| 73 r = mid;||| 74 }||| 75 }||| 76 return l;||| 77 }||| 78 void init() {||| 79 for (int i = 0; i < n; ++i) {||| 80 const point& p1 = p[i];||| 81 for (int q = 0; q < n; ++q) {||| 82 const point& p2 = p[q];||| 83 for (int w = 0; w < n; ++w) {||| 84 all_sqr[i][q][w] = get_sqr(p1, p2, p[w]);||| 85 }||| 86 }||| 87 int pr, cr = (i + 1) % n;||| 88 for (;;) {||| 89 pr = cr;||| 90 if (++cr == n) cr -= n;||| 91 if (cr == i) break;||| 92 sums[i][cr] = sums[i][pr] + all_sqr[i][pr][cr];||| 93 }||| 94 }||| 95 }||| 96 void shift(int l) { rotate(p, p + l, p + n); }||| 97 int main() {||| 98 cin >> n >> k;||| 99 for (int i = 0; i < n; ++i) {||| 100 cin >> p[i].x >> p[i].y;||| 101 }||| 102 long long l = 0;||| 103 for (int i = 0; i < 3; ++i) {||| 104 shift(rand() % (n - 1) + 1);||| 105 init();||| 106 l = max(l, get_ans());||| 107 }||| 108 cout << l << ""\n"";||| 109 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""Ofast"", ""unroll-loops"")||| 3 using namespace std;||| 4 const int inf = 1000111222;||| 5 const int max_n = 211;||| 6 struct point {||| 7 int x, y;||| 8 };||| 9 long long get_sqr(const point& p1, const point& p2, const point& p3) {||| 10 long long res = 0;||| 11 res += (p2.x - p1.x) * 1LL * (p1.y + p2.y);||| 12 res += (p3.x - p2.x) * 1LL * (p2.y + p3.y);||| 13 res += (p1.x - p3.x) * 1LL * (p3.y + p1.y);||| 14 return abs(res);||| 15 }||| 16 point p[max_n];||| 17 int dp[max_n][max_n], n, k;||| 18 long long all_sqr[max_n][max_n][max_n], sums[max_n][max_n];||| 19 bool check(long long sz) {||| 20 for (int l = 2; l < n; ++l) {||| 21 for (int st = 0; st + l < n; ++st) {||| 22 int fn = st + l;||| 23 if (sums[st][fn] < sz) {||| 24 dp[st][fn] = 0;||| 25 continue;||| 26 }||| 27 int ans = 0;||| 28 long long curr_sqr = 0;||| 29 int curr_st = 0;||| 30 for (int i = st + 1; i < fn; ++i) {||| 31 if (curr_sqr < sz) {||| 32 curr_st = i;||| 33 curr_sqr += all_sqr[fn][curr_st - 1][i];||| 34 }||| 35 if (all_sqr[st][fn][i] >= sz) {||| 36 ans = max(ans, dp[st][i] + dp[i][fn] + 1);||| 37 }||| 38 }||| 39 if (curr_sqr >= sz) {||| 40 ans = max(ans, 1 + dp[curr_st][fn]);||| 41 }||| 42 int pr = curr_st - 1;||| 43 assert(curr_st != fn && ans);||| 44 for (int fnn = fn - 1; fnn > st; --fnn) {||| 45 curr_sqr += all_sqr[fnn][curr_st][fnn + 1];||| 46 long long nxt_sqr = all_sqr[fnn][pr][curr_st];||| 47 while (curr_sqr - nxt_sqr >= sz && curr_st != st) {||| 48 curr_sqr -= nxt_sqr;||| 49 curr_st = pr;||| 50 --pr;||| 51 nxt_sqr = all_sqr[fnn][pr][curr_st];||| 52 }||| 53 ans = max(ans, dp[curr_st][fnn] + 1);||| 54 if (curr_st == st) {||| 55 break;||| 56 }||| 57 }||| 58 dp[st][fn] = ans;||| 59 if (ans >= k + 1) {||| 60 return true;||| 61 }||| 62 }||| 63 }||| 64 return false;||| 65 }||| 66 long long get_ans() {||| 67 long long l = 1, r = 1LL * inf * inf;||| 68 while (l + 1 < r) {||| 69 long long mid = (l + r) / 2;||| 70 if (check(mid)) {||| 71 l = mid;||| 72 } else {||| 73 r = mid;||| 74 }||| 75 }||| 76 return l;||| 77 }||| 78 void init() {||| 79 for (int i = 0; i < n; ++i) {||| 80 const point& p1 = p[i];||| 81 for (int q = 0; q < n; ++q) {||| 82 const point& p2 = p[q];||| 83 for (int w = 0; w < n; ++w) {||| 84 all_sqr[i][q][w] = get_sqr(p1, p2, p[w]);||| 85 }||| 86 }||| 87 int pr, cr = (i + 1) % n;||| 88 for (;;) {||| 89 pr = cr;||| 90 if (++cr == n) cr -= n;||| 91 if (cr == i) break;||| 92 sums[i][cr] = sums[i][pr] + all_sqr[i][pr][cr];||| 93 }||| 94 }||| 95 }||| 96 void shift(int l) { rotate(p, p + l, p + n); }||| 97 int main() {||| 98 cin >> n >> k;||| 99 for (int i = 0; i < n; ++i) {||| 100 cin >> p[i].x >> p[i].y;||| 101 }||| 102 long long l = 0;||| 103 for (int i = 0; i < 1; ++i) {||| 104 shift(rand() % (n - 1) + 1);||| 105 init();||| 106 l = max(l, get_ans());||| 107 }||| 108 cout << l << ""\n"";||| 109 }||| "	103 for (int i = 0; i < 3; ++i) {
107	7	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 struct P {||| 5 ll x, y;||| 6 P(ll xx = 0, ll yy = 0) { x = xx, y = yy; }||| 7 P operator-(P r) { return P(x - r.x, y - r.y); }||| 8 } p[205];||| 9 ll Cross(P A, P B) { return A.x * B.y - A.y * B.x; }||| 10 pair<int, ll> dp[205][205];||| 11 int n, t;||| 12 int main() {||| 13 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 14 cin >> n >> t;||| 15 for (int i = 1; i <= n; i += 1) {||| 16 cin >> p[i].x >> p[i].y;||| 17 }||| 18 ll lo = -1e18, hi = 1e18, ans = -1e18;||| 19 while (hi >= lo) {||| 20 ll mid = lo + hi >> 1;||| 21 for (int len = 2; len <= n; len += 1) {||| 22 for (int l = 1; l + len - 1 <= n; l += 1) {||| 23 int r = l + len - 1;||| 24 if (len == 2)||| 25 dp[l][r] = make_pair(0, 0);||| 26 else {||| 27 dp[l][r] = make_pair(-1000000000, 0);||| 28 for (int k = l + 1; k < r; k += 1) {||| 29 int nk = dp[l][k].first + dp[k][r].first;||| 30 ll area = dp[l][k].second + dp[k][r].second +||| 31 abs(Cross(p[l] - p[r], p[k] - p[r]));||| 32 if (area >= mid) {||| 33 area = 0;||| 34 nk += 1;||| 35 }||| 36 dp[l][r] = max(dp[l][r], make_pair(nk, area));||| 37 }||| 38 }||| 39 }||| 40 }||| 41 if (dp[1][n].first >= t + 1) {||| 42 lo = mid + 1;||| 43 ans = mid;||| 44 } else||| 45 hi = mid - 1;||| 46 }||| 47 cout << ans << endl;||| 48 return 0;||| 49 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 using ll = long long;||| 4 struct P {||| 5 ll x, y;||| 6 P(ll xx = 0, ll yy = 0) { x = xx, y = yy; }||| 7 P operator-(P r) { return P(x - r.x, y - r.y); }||| 8 } p[205];||| 9 ll Cross(P A, P B) { return A.x * B.y - A.y * B.x; }||| 10 pair<int, ll> dp[205][205];||| 11 int n, t;||| 12 int main() {||| 13 ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);||| 14 cin >> n >> t;||| 15 for (int i = 1; i <= n; i += 1) {||| 16 cin >> p[i].x >> p[i].y;||| 17 }||| 18 ll lo = -1e12, hi = 1e12, ans = -1e12;||| 19 while (hi >= lo) {||| 20 ll mid = lo + hi >> 1;||| 21 for (int len = 2; len <= n; len += 1) {||| 22 for (int l = 1; l + len - 1 <= n; l += 1) {||| 23 int r = l + len - 1;||| 24 if (len == 2)||| 25 dp[l][r] = make_pair(0, 0);||| 26 else {||| 27 dp[l][r] = make_pair(-1000000000, 0);||| 28 for (int k = l + 1; k < r; k += 1) {||| 29 int nk = dp[l][k].first + dp[k][r].first;||| 30 ll area = dp[l][k].second + dp[k][r].second +||| 31 abs(Cross(p[l] - p[r], p[k] - p[r]));||| 32 if (area >= mid) {||| 33 area = 0;||| 34 nk += 1;||| 35 }||| 36 dp[l][r] = max(dp[l][r], make_pair(nk, area));||| 37 }||| 38 }||| 39 }||| 40 }||| 41 if (dp[1][n].first >= t + 1) {||| 42 lo = mid + 1;||| 43 ans = mid;||| 44 } else {||| 45 hi = mid - 1;||| 46 }||| 47 }||| 48 cout << ans << endl;||| 49 return 0;||| 50 }||| 	18 ll lo = -1e18, hi = 1e18, ans = -1e18;
109	146	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t = 0;||| 5 int n = 0;||| 6 cin >> t;||| 7 string s = """";||| 8 int sum1 = 0;||| 9 int number_of_non_zeros = 0;||| 10 for (int i = 0; i < t; i++) {||| 11 cin >> n;||| 12 cin >> s;||| 13 sum1 = 0;||| 14 number_of_non_zeros = 0;||| 15 for (int j = 0; j < s.size(); j++) {||| 16 if (s[j] != '0') {||| 17 int e = s[j] - '0';||| 18 number_of_non_zeros++;||| 19 sum1 += e;||| 20 }||| 21 }||| 22 if (s[s.size() - 1] != '0') {||| 23 number_of_non_zeros--;||| 24 }||| 25 cout << (sum1 + number_of_non_zeros) << endl;||| 26 }||| 27 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t = 0;||| 5 int n = 0;||| 6 cin >> t;||| 7 string s = """";||| 8 int sum1 = 0;||| 9 int number_of_non_zeros = 0;||| 10 for (int i = 0; i < t; i++) {||| 11 cin >> n;||| 12 cin >> s;||| 13 sum1 = 0;||| 14 number_of_non_zeros = 0;||| 15 for (int j = 0; j < s.size(); j++) {||| 16 if (s[j] != '0') {||| 17 int e = s[j] - '0';||| 18 number_of_non_zeros++;||| 19 sum1 += e;||| 20 }||| 21 }||| 22 if (s[s.size() - 1] != 0) {||| 23 number_of_non_zeros--;||| 24 }||| 25 cout << (sum1 + number_of_non_zeros) << endl;||| 26 }||| 27 }||| "	22 if (s[s.size() - 1] != '0') {
109	163	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 while (n--) {||| 7 int x;||| 8 cin >> x;||| 9 getchar();||| 10 string s;||| 11 cin >> s;||| 12 long long ans = 0;||| 13 for (int i = 0; i < x; i++) {||| 14 int y;||| 15 y = s[i] - '0';||| 16 if (i == (x - 1)) {||| 17 ans = ans + y;||| 18 } else {||| 19 if (y != 0) ans = ans + y + 1;||| 20 }||| 21 }||| 22 cout << ans << endl;||| 23 }||| 24 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int n;||| 5 cin >> n;||| 6 while (n--) {||| 7 int x;||| 8 cin >> x;||| 9 getchar();||| 10 string s;||| 11 cin >> s;||| 12 long long ans = 0;||| 13 for (int i = 0; i < n; i++) {||| 14 int y;||| 15 y = s[i] - '0';||| 16 if (i == (n - 1)) {||| 17 ans = ans + y;||| 18 } else {||| 19 if (y != 0) ans = ans + y + 1;||| 20 }||| 21 }||| 22 cout << ans << endl;||| 23 }||| 24 }||| 	13 for (int i = 0; i < x; i++) {
111	119	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void printsinglepairs(int numofpairs) {||| 4 for (int i = 0; i < numofpairs; i++) {||| 5 cout << ""()"";||| 6 }||| 7 }||| 8 int main() {||| 9 int n, j, k, t;||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (i == 1) {||| 15 printsinglepairs(n);||| 16 cout << endl;||| 17 } else {||| 18 for (k = 1; k <= i; k++) {||| 19 cout << ""("";||| 20 }||| 21 for (k = 1; k <= i; k++) {||| 22 cout << "")"";||| 23 }||| 24 printsinglepairs(n - i);||| 25 cout << endl;||| 26 }||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void printsinglepairs(int numofpairs) {||| 4 for (int i = 0; i < numofpairs; i++) {||| 5 cout << ""()"";||| 6 }||| 7 }||| 8 int main() {||| 9 int n, j, k, t;||| 10 cin >> t;||| 11 while (t--) {||| 12 cin >> n;||| 13 for (int i = 1; i <= n; i++) {||| 14 if (i == 1) {||| 15 printsinglepairs(i);||| 16 cout << endl;||| 17 } else {||| 18 for (k = 1; k <= i; k++) {||| 19 cout << ""("";||| 20 }||| 21 for (k = 1; k <= i; k++) {||| 22 cout << "")"";||| 23 }||| 24 printsinglepairs(n - i);||| 25 cout << endl;||| 26 }||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	15 printsinglepairs(n);
111	8	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T powe(T a, T b) {||| 5 if (b == 0) return 1;||| 6 T x = powe(a, b / 2) % 1000000007;||| 7 x = (x * x) % 1000000007;||| 8 if (b & 1) x = (x * (a % 1000000007)) % 1000000007;||| 9 return x;||| 10 }||| 11 void fun(long long int n) {||| 12 for (long long int i = 0; i < n; i++) {||| 13 cout << ""("";||| 14 }||| 15 for (long long int i = 0; i < n; i++) {||| 16 cout << "")"";||| 17 }||| 18 }||| 19 void solve() {||| 20 long long int n;||| 21 cin >> n;||| 22 for (long long int i = 1; i <= n; i++) {||| 23 fun(i);||| 24 fun(n - i);||| 25 cout << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(NULL);||| 31 long long int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 template <typename T>||| 4 T powe(T a, T b) {||| 5 if (b == 0) return 1;||| 6 T x = powe(a, b / 2) % 1000000007;||| 7 x = (x * x) % 1000000007;||| 8 if (b & 1) x = (x * (a % 1000000007)) % 1000000007;||| 9 return x;||| 10 }||| 11 void fun(long long int n) {||| 12 for (long long int i = 0; i < n; i++) {||| 13 cout << ""("";||| 14 }||| 15 for (long long int i = 0; i < n; i++) {||| 16 cout << "")"";||| 17 }||| 18 }||| 19 void solve() {||| 20 long long int n;||| 21 cin >> n;||| 22 for (long long int i = 0; i <= n; i++) {||| 23 fun(i);||| 24 fun(n - i);||| 25 cout << ""\n"";||| 26 }||| 27 }||| 28 int main() {||| 29 ios_base::sync_with_stdio(false);||| 30 cin.tie(NULL);||| 31 long long int t;||| 32 cin >> t;||| 33 while (t--) {||| 34 solve();||| 35 }||| 36 return 0;||| 37 }||| "	22 for (long long int i = 1; i <= n; i++) {
111	155	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""unroll-loops"")||| 3 #pragma GCC optimize 03||| 4 using namespace std;||| 5 int n1, m1, q, r;||| 6 int ans = 0;||| 7 int gcd(int a, int b) {||| 8 if (a > b) swap(a, b);||| 9 return (a == 0) ? b : gcd(b % a, a);||| 10 }||| 11 int lcm(int a, int b) { return (a * b) / gcd(a, b); }||| 12 signed main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> a(2 * n);||| 19 for (int i = 0; i < 2 * n; ++i) {||| 20 if (i < n)||| 21 a[i] = 1;||| 22 else||| 23 a[i] = 0;||| 24 }||| 25 vector<int> b = a;||| 26 for (int i = 0; i < n; ++i) {||| 27 for (int j = 0; j < 2 * n; ++j) {||| 28 if (b[j] == 1)||| 29 cout << ""("";||| 30 else||| 31 cout << "")"";||| 32 }||| 33 cout << ""\n"";||| 34 b = a;||| 35 swap(b[i + 1], b[2 * n - i - 2]);||| 36 }||| 37 }||| 38 }||| "	"1 #include <bits/stdc++.h>||| 2 #pragma GCC optimize(""unroll-loops"")||| 3 #pragma GCC optimize 03||| 4 using namespace std;||| 5 int n1, m1, q, r;||| 6 int ans = 0;||| 7 int gcd(int a, int b) {||| 8 if (a > b) swap(a, b);||| 9 return (a == 0) ? b : gcd(b % a, a);||| 10 }||| 11 int lcm(int a, int b) { return (a * b) / gcd(a, b); }||| 12 signed main() {||| 13 int t;||| 14 cin >> t;||| 15 while (t--) {||| 16 int n;||| 17 cin >> n;||| 18 vector<int> a(2 * n);||| 19 for (int i = 0; i < 2 * n; ++i) {||| 20 if (i < n)||| 21 a[i] = 1;||| 22 else||| 23 a[i] = 0;||| 24 }||| 25 vector<int> b = a;||| 26 for (int i = 0; i < n; ++i) {||| 27 for (int j = 0; j < 2 * n; ++j) {||| 28 if (b[j] == 1)||| 29 cout << ""("";||| 30 else||| 31 cout << "")"";||| 32 }||| 33 cout << ""\n"";||| 34 b = a;||| 35 swap(a[i + 1], a[2 * n - i - 2]);||| 36 }||| 37 }||| 38 }||| "	35 swap(b[i + 1], b[2 * n - i - 2]);
111	18	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n;||| 5 cin >> t;||| 6 int x, sum2 = 0;||| 7 char s1 = '(', s2 = ')';||| 8 string temp;||| 9 for (int i = 0; i < t; i++) {||| 10 cin >> n;||| 11 string sum[2 * n];||| 12 if (n >= 1) {||| 13 for (int j = 0; j < n; j++) {||| 14 for (int i = 0; i < n; i++) {||| 15 sum[i] = s1;||| 16 }||| 17 for (int i = n; i < 2 * n; i++) {||| 18 sum[i] = s2;||| 19 }||| 20 }||| 21 do {||| 22 for (int i = 0; i < 2 * n; i++) {||| 23 cout << sum[i];||| 24 }||| 25 sum2 += 1;||| 26 for (int i = n - 1; i >= 0; i--) {||| 27 for (int j = n; j < 2 * n; j++) {||| 28 temp = sum[i];||| 29 sum[i] = sum[j];||| 30 sum[j] = temp;||| 31 break;||| 32 }||| 33 }||| 34 cout << endl;||| 35 } while (sum2 < n);||| 36 }||| 37 sum2 = 0;||| 38 }||| 39 return 0;||| 40 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t, n;||| 5 cin >> t;||| 6 int x, sum2 = 0;||| 7 char s1 = '(', s2 = ')';||| 8 string temp;||| 9 for (int i = 0; i < t; i++) {||| 10 cin >> n;||| 11 string sum[2 * n];||| 12 if (n > 1) {||| 13 for (int j = 0; j < n; j++) {||| 14 for (int i = 0; i < n; i++) {||| 15 sum[i] = s1;||| 16 }||| 17 for (int i = n; i < 2 * n; i++) {||| 18 sum[i] = s2;||| 19 }||| 20 }||| 21 do {||| 22 for (int i = 0; i < 2 * n; i++) {||| 23 cout << sum[i];||| 24 }||| 25 sum2 += 1;||| 26 for (int i = n - 1; i >= 0; i--) {||| 27 for (int j = n; j < 2 * n; j++) {||| 28 temp = sum[i];||| 29 sum[i] = sum[j];||| 30 sum[j] = temp;||| 31 break;||| 32 }||| 33 }||| 34 cout << endl;||| 35 } while (sum2 < n);||| 36 }||| 37 sum2 = 0;||| 38 }||| 39 return 0;||| 40 }||| 	12 if (n >= 1) {
111	153	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 4;||| 5 void generateParenthesis(int n, int open, int close, string s,||| 6 vector<string> &ans) {||| 7 if (open == n && close == n) {||| 8 ans.push_back(s);||| 9 return;||| 10 }||| 11 if (ans.size() == n) {||| 12 return;||| 13 }||| 14 if (open < n) {||| 15 generateParenthesis(n, open + 1, close, s + ""("", ans);||| 16 }||| 17 if (close < open) {||| 18 generateParenthesis(n, open, close + 1, s + "")"", ans);||| 19 }||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(false);||| 23 cin.tie(NULL);||| 24 cout.tie(NULL);||| 25 long long test = 1;||| 26 cin >> test;||| 27 while (test--) {||| 28 int n;||| 29 cin >> n;||| 30 vector<string> ans;||| 31 generateParenthesis(n, 0, 0, """", ans);||| 32 for (int i = 0; i < n; i++) {||| 33 cout << ans[i] << endl;||| 34 }||| 35 }||| 36 return 0;||| 37 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 const int N = 1e6 + 4;||| 5 void generateParenthesis(int n, int open, int close, string s,||| 6 vector<string> &ans) {||| 7 if (open == n && close == n) {||| 8 ans.push_back(s);||| 9 return;||| 10 }||| 11 if (ans.size() == n) {||| 12 return;||| 13 }||| 14 if (open < n) {||| 15 generateParenthesis(n, open + 1, close, s + ""{"", ans);||| 16 }||| 17 if (close < open) {||| 18 generateParenthesis(n, open, close + 1, s + ""}"", ans);||| 19 }||| 20 }||| 21 int main() {||| 22 ios_base::sync_with_stdio(false);||| 23 cin.tie(NULL);||| 24 cout.tie(NULL);||| 25 long long test = 1;||| 26 cin >> test;||| 27 while (test--) {||| 28 int n;||| 29 cin >> n;||| 30 vector<string> ans;||| 31 generateParenthesis(n, 0, 0, """", ans);||| 32 for (int i = 0; i < n; i++) {||| 33 cout << ans[i] << endl;||| 34 }||| 35 }||| 36 return 0;||| 37 }||| "	"15 generateParenthesis(n, open + 1, close, s + ""("", ans);"
111	232	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void pB(int a) {||| 4 for (int i = a; i > 0; i--) {||| 5 cout << ""(""||| 6 << "")"";||| 7 }||| 8 }||| 9 void pBOC(int x, int y) {||| 10 for (int i = 0; i < x; i++) {||| 11 cout << ""("";||| 12 }||| 13 pB(y - x);||| 14 for (int i = 0; i < x; i++) {||| 15 cout << "")"";||| 16 }||| 17 }||| 18 int main() {||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int n;||| 23 cin >> n;||| 24 for (int i = 0; i < n; i++) {||| 25 pBOC(i, n);||| 26 cout << ""\n"";||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void pB(int a) {||| 4 for (int i = a; i > 0; i--) {||| 5 cout << ""(""||| 6 << "")"";||| 7 }||| 8 }||| 9 void pBOC(int x, int y) {||| 10 for (int i = 0; i < x; i++) {||| 11 cout << ""("";||| 12 }||| 13 pB(y - x);||| 14 for (int i = 0; i < x; i++) {||| 15 cout << "")"";||| 16 }||| 17 }||| 18 int main() {||| 19 int t;||| 20 cin >> t;||| 21 while (t--) {||| 22 int n;||| 23 cin >> n;||| 24 for (int i = 0; i <= n; i++) {||| 25 pBOC(i, n);||| 26 cout << ""\n"";||| 27 }||| 28 }||| 29 return 0;||| 30 }||| "	24 for (int i = 0; i < n; i++) {
111	37	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 if (n == 1) {||| 11 cout << ""()"" << endl;||| 12 } else if (n == 2) {||| 13 cout << ""()()"" << endl;||| 14 cout << ""(())"" << endl;||| 15 } else {||| 16 for (int i = 1; i <= n; i++) {||| 17 int k = 2 * n;||| 18 for (int j = 0; j < i; j++) {||| 19 cout << ""("";||| 20 }||| 21 for (int j = 0; j < i; j++) {||| 22 cout << "")"";||| 23 }||| 24 k = k - (2 * i);||| 25 for (int j = 0; j < k / 2; j++) {||| 26 cout << ""()"";||| 27 }||| 28 cout << endl;||| 29 }||| 30 }||| 31 }||| 32 return 0;||| 33 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int mod = 1e9 + 7;||| 4 int main() {||| 5 int t;||| 6 cin >> t;||| 7 while (t--) {||| 8 int n;||| 9 cin >> n;||| 10 if (n == 1) {||| 11 cout << ""()"" << endl;||| 12 } else if (n == 2) {||| 13 cout << ""()"" << endl;||| 14 cout << ""(())"" << endl;||| 15 } else {||| 16 for (int i = 1; i <= n; i++) {||| 17 int k = 2 * n;||| 18 for (int j = 0; j < i; j++) {||| 19 cout << ""("";||| 20 }||| 21 for (int j = 0; j < i; j++) {||| 22 cout << "")"";||| 23 }||| 24 k = k - (2 * i);||| 25 for (int j = 0; j < k / 2; j++) {||| 26 cout << ""()"";||| 27 }||| 28 cout << endl;||| 29 }||| 30 }||| 31 }||| 32 return 0;||| 33 }||| "	"13 cout << ""()()"" << endl;"
111	134	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int tt;||| 12 cin >> tt;||| 13 for (int i = 1; i < tt + 1; i++) {||| 14 for (int j = 0; j < i; j++) {||| 15 cout << '(';||| 16 }||| 17 for (int j = 0; j < i; j++) {||| 18 cout << ')';||| 19 }||| 20 for (int j = 0; j < tt - i; j++) {||| 21 cout << ""()"";||| 22 }||| 23 cout << endl;||| 24 }||| 25 }||| 26 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 ios_base::sync_with_stdio(0);||| 5 cin.tie(0);||| 6 cout.tie(0);||| 7 ;||| 8 int t;||| 9 cin >> t;||| 10 while (t--) {||| 11 int tt;||| 12 cin >> tt;||| 13 for (int i = 1; i <= tt + 1; i++) {||| 14 for (int j = 0; j < i; j++) {||| 15 cout << '(';||| 16 }||| 17 for (int j = 0; j < i; j++) {||| 18 cout << ')';||| 19 }||| 20 for (int j = 0; j < tt - i; j++) {||| 21 cout << ""()"";||| 22 }||| 23 cout << endl;||| 24 }||| 25 }||| 26 }||| "	13 for (int i = 1; i < tt + 1; i++) {
112	10	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(int argc, char const *argv[]) {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long a[3], m;||| 10 cin >> a[0] >> a[1] >> a[2] >> m;||| 11 long long mx = a[0] + a[1] + a[2] - 3;||| 12 sort(a, a + 3);||| 13 long long mn = 0;||| 14 if (a[0] + a[1] + 1 < a[2]) mn = a[2] - a[0] - a[1] - 1;||| 15 if (m > mx || m < mn)||| 16 cout << ""NO\n"";||| 17 else||| 18 cout << ""YES\n"";||| 19 }||| 20 return 0;||| 21 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main(int argc, char const *argv[]) {||| 4 ios_base::sync_with_stdio(false);||| 5 cin.tie(NULL);||| 6 long long t;||| 7 cin >> t;||| 8 while (t--) {||| 9 long long a[3], m;||| 10 cin >> a[0] >> a[1] >> a[2] >> m;||| 11 long long mx = a[0] + a[1] + a[2] - 3;||| 12 sort(a, a + 3);||| 13 long long mn = 0;||| 14 if (a[0] + a[1] + 1 < a[2]) mn = a[2] - a[0] - a[1] - 1;||| 15 if (m > mx || mx < mn)||| 16 cout << ""NO\n"";||| 17 else||| 18 cout << ""YES\n"";||| 19 }||| 20 return 0;||| 21 }||| "	15 if (m > mx || m < mn)
112	164	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int t;||| 66 cin >> t;||| 67 while (t--) {||| 68 int in[3], m;||| 69 cin >> in[0] >> in[1] >> in[2] >> m;||| 70 sort(in, in + 3);||| 71 int maxp = in[0] + in[1] + in[2] - 3;||| 72 if (m <= maxp) {||| 73 if (in[2] - 1 <= in[0] + in[1]) {||| 74 cout << ""Yes\n"";||| 75 } else if (m >= in[2] - 1 - in[1] - in[0]) {||| 76 cout << ""Yes\n"";||| 77 } else {||| 78 cout << ""No\n"";||| 79 }||| 80 } else {||| 81 cout << ""No\n"";||| 82 }||| 83 }||| 84 }||| 85 int main() {||| 86 ios_base::sync_with_stdio(false);||| 87 cin.tie(NULL);||| 88 cout.tie(NULL);||| 89 solve();||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int t;||| 66 cin >> t;||| 67 while (t--) {||| 68 int in[3], m;||| 69 cin >> in[0] >> in[1] >> in[2] >> m;||| 70 sort(in, in + 3);||| 71 int maxp = in[0] + in[1] + in[2] - 3;||| 72 if (m <= maxp) {||| 73 if (in[2] - 1 >= in[0] + in[1]) {||| 74 cout << ""Yes\n"";||| 75 } else if (m >= in[2] - 1 - in[1] - in[0]) {||| 76 cout << ""Yes\n"";||| 77 } else {||| 78 cout << ""No\n"";||| 79 }||| 80 } else {||| 81 cout << ""No\n"";||| 82 }||| 83 }||| 84 }||| 85 int main() {||| 86 ios_base::sync_with_stdio(false);||| 87 cin.tie(NULL);||| 88 cout.tie(NULL);||| 89 solve();||| 90 }||| "	73 if (in[2] - 1 <= in[0] + in[1]) {
112	354	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int t;||| 66 cin >> t;||| 67 while (t--) {||| 68 int in[3], m;||| 69 cin >> in[0] >> in[1] >> in[2] >> m;||| 70 sort(in, in + 3);||| 71 int maxp = in[0] + in[1] + in[2] - 3;||| 72 if (m <= maxp) {||| 73 if (in[2] - 1 <= in[0] + in[1]) {||| 74 cout << ""Yes\n"";||| 75 } else if (m >= in[2] - 1 - in[1] - in[0]) {||| 76 cout << ""Yes\n"";||| 77 } else {||| 78 cout << ""No\n"";||| 79 }||| 80 } else {||| 81 cout << ""No\n"";||| 82 }||| 83 }||| 84 }||| 85 int main() {||| 86 ios_base::sync_with_stdio(false);||| 87 cin.tie(NULL);||| 88 cout.tie(NULL);||| 89 solve();||| 90 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void _print(long long t) { cerr << t; }||| 4 void _print(int t) { cerr << t; }||| 5 void _print(string t) { cerr << t; }||| 6 void _print(char t) { cerr << t; }||| 7 void _print(long double t) { cerr << t; }||| 8 void _print(double t) { cerr << t; }||| 9 void _print(unsigned long long t) { cerr << t; }||| 10 template <class T, class V>||| 11 void _print(pair<T, V> p);||| 12 template <class T>||| 13 void _print(vector<T> v);||| 14 template <class T>||| 15 void _print(set<T> v);||| 16 template <class T, class V>||| 17 void _print(map<T, V> v);||| 18 template <class T>||| 19 void _print(multiset<T> v);||| 20 template <class T, class V>||| 21 void _print(pair<T, V> p) {||| 22 cerr << ""{"";||| 23 _print(p.first);||| 24 cerr << "","";||| 25 _print(p.second);||| 26 cerr << ""}"";||| 27 }||| 28 template <class T>||| 29 void _print(vector<T> v) {||| 30 cerr << ""[ "";||| 31 for (T i : v) {||| 32 _print(i);||| 33 cerr << "" "";||| 34 }||| 35 cerr << ""]"";||| 36 }||| 37 template <class T>||| 38 void _print(set<T> v) {||| 39 cerr << ""[ "";||| 40 for (T i : v) {||| 41 _print(i);||| 42 cerr << "" "";||| 43 }||| 44 cerr << ""]"";||| 45 }||| 46 template <class T>||| 47 void _print(multiset<T> v) {||| 48 cerr << ""[ "";||| 49 for (T i : v) {||| 50 _print(i);||| 51 cerr << "" "";||| 52 }||| 53 cerr << ""]"";||| 54 }||| 55 template <class T, class V>||| 56 void _print(map<T, V> v) {||| 57 cerr << ""[ "";||| 58 for (auto i : v) {||| 59 _print(i);||| 60 cerr << "" "";||| 61 }||| 62 cerr << ""]"";||| 63 }||| 64 void solve() {||| 65 int t;||| 66 cin >> t;||| 67 while (t--) {||| 68 int in[3], m;||| 69 cin >> in[0] >> in[1] >> in[2] >> m;||| 70 sort(in, in + 3);||| 71 int maxp = in[0] + in[1] + in[2] - 3;||| 72 if (m <= maxp) {||| 73 if (in[2] - 1 >= in[0] + in[1]) {||| 74 cout << ""Yes\n"";||| 75 } else if (m > in[2] - 1 - in[1] - in[0]) {||| 76 cout << ""Yes\n"";||| 77 } else {||| 78 cout << ""No\n"";||| 79 }||| 80 } else {||| 81 cout << ""No\n"";||| 82 }||| 83 }||| 84 }||| 85 int main() {||| 86 ios_base::sync_with_stdio(false);||| 87 cin.tie(NULL);||| 88 cout.tie(NULL);||| 89 solve();||| 90 }||| "	73 if (in[2] - 1 <= in[0] + in[1]) {
112	154	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long a, b, c, m;||| 5 cin >> a >> b >> c >> m;||| 6 if (m > a + b + c - 3) {||| 7 cout << ""NO"" << endl;||| 8 return;||| 9 }||| 10 vector<long long> v;||| 11 v.push_back(a);||| 12 v.push_back(b);||| 13 v.push_back(c);||| 14 sort(v.begin(), v.end());||| 15 if (m + 1 >= v[2]) {||| 16 cout << ""YES"" << endl;||| 17 return;||| 18 }||| 19 v[2] = v[2] - m - 1;||| 20 if (v[2] > (v[0] + v[1] + v[2]) / 2) {||| 21 cout << ""NO"" << endl;||| 22 return;||| 23 }||| 24 cout << ""YES"" << endl;||| 25 }||| 26 int main() {||| 27 ios::sync_with_stdio(0);||| 28 cin.tie(0);||| 29 long long t;||| 30 cin >> t;||| 31 while (t--) {||| 32 solve();||| 33 }||| 34 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long a, b, c, m;||| 5 cin >> a >> b >> c >> m;||| 6 if (m > a + b + c - 3) {||| 7 cout << ""NO"" << endl;||| 8 return;||| 9 }||| 10 vector<long long> v;||| 11 v.push_back(a);||| 12 v.push_back(b);||| 13 v.push_back(c);||| 14 sort(v.begin(), v.end());||| 15 if (m - 1 >= v[2]) {||| 16 cout << ""YES"" << endl;||| 17 return;||| 18 }||| 19 v[2] = v[2] - m + 1;||| 20 if (v[2] > (v[0] + v[1] + v[2]) / 2) {||| 21 cout << ""NO"" << endl;||| 22 return;||| 23 }||| 24 cout << ""YES"" << endl;||| 25 }||| 26 int main() {||| 27 ios::sync_with_stdio(0);||| 28 cin.tie(0);||| 29 long long t;||| 30 cin >> t;||| 31 while (t--) {||| 32 solve();||| 33 }||| 34 }||| "	15 if (m + 1 >= v[2]) {
112	283	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long x[3], m;||| 5 for (long long i = 0; i < 3; i++) cin >> x[i];||| 6 cin >> m;||| 7 sort(x, x + 3);||| 8 long long maxm = x[0] + x[1] + x[2] - 3;||| 9 long long minm = max((long long)0, x[2] - x[1] - x[0] - 1);||| 10 if (m <= maxm && m >= minm) {||| 11 cout << ""YES\n"";||| 12 } else {||| 13 cout << ""NO\n"";||| 14 }||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(NULL);||| 19 cout.tie(NULL);||| 20 long long t;||| 21 cin >> t;||| 22 while (t--) {||| 23 solve();||| 24 }||| 25 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 long long x[3], m;||| 5 for (long long i = 0; i < 3; i++) cin >> x[i];||| 6 cin >> m;||| 7 sort(x, x + 3);||| 8 long long maxm = x[0] + x[1] + x[2] - 3;||| 9 long long minm = max((long long)0, x[2] - x[1] - x[0] - 2);||| 10 if (m <= maxm && m >= minm) {||| 11 cout << ""YES\n"";||| 12 } else {||| 13 cout << ""NO\n"";||| 14 }||| 15 }||| 16 int main() {||| 17 ios_base::sync_with_stdio(false);||| 18 cin.tie(NULL);||| 19 cout.tie(NULL);||| 20 long long t;||| 21 cin >> t;||| 22 while (t--) {||| 23 solve();||| 24 }||| 25 }||| "	9 long long minm = max((long long)0, x[2] - x[1] - x[0] - 1);
112	43	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a[3], m;||| 8 scanf(""%d%d%d%d"", &a[0], &a[1], &a[2], &m);||| 9 sort(a, a + 3);||| 10 if (m >= max(0, a[2] - 1 - a[0] - a[1]) &&||| 11 m <= max(a[0] - 1, 0) + max(a[1] - 1, 0) + max(a[2] - 1, 0))||| 12 puts(""YES"");||| 13 else||| 14 puts(""NO"");||| 15 }||| 16 return 0;||| 17 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int a[3], m;||| 8 scanf(""%d%d%d%d"", &a[0], &a[1], &a[2], &m);||| 9 sort(a, a + 2);||| 10 if (m >= max(0, a[2] - 1 - a[0] - a[1]) &&||| 11 m <= max(a[0] - 1, 0) + max(a[1] - 1, 0) + max(a[2] - 1, 0))||| 12 puts(""YES"");||| 13 else||| 14 puts(""NO"");||| 15 }||| 16 return 0;||| 17 }||| "	9 sort(a, a + 3);
112	210	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int m;||| 8 int arr[5];||| 9 cin >> arr[1] >> arr[2] >> arr[3] >> m;||| 10 sort(arr + 1, arr + 3 + 1);||| 11 if ((arr[3] - arr[2] - arr[1] - 1) > m)||| 12 cout << ""NO"" << endl;||| 13 else if ((arr[3] + arr[2] + arr[1] - 3) < m)||| 14 cout << ""NO"" << endl;||| 15 else||| 16 cout << ""YES"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int main() {||| 4 int t;||| 5 cin >> t;||| 6 while (t--) {||| 7 int m;||| 8 int arr[5];||| 9 cin >> arr[1] >> arr[2] >> arr[3] >> m;||| 10 sort(arr + 1, arr + 3 + 1);||| 11 if ((arr[3] - arr[2] - arr[1] + 1) > m)||| 12 cout << ""NO"" << endl;||| 13 else if ((arr[3] + arr[2] + arr[1] - 3) < m)||| 14 cout << ""NO"" << endl;||| 15 else||| 16 cout << ""YES"" << endl;||| 17 }||| 18 return 0;||| 19 }||| "	11 if ((arr[3] - arr[2] - arr[1] - 1) > m)
112	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a[3], m;||| 5 cin >> a[0] >> a[1] >> a[2] >> m;||| 6 sort(a, a + 3);||| 7 int minsum = 0, maxsum = 0;||| 8 maxsum = a[0] + a[1] + a[2] - 3;||| 9 minsum = a[2] - a[1] - a[0] - 1;||| 10 if (m >= minsum && m <= maxsum)||| 11 cout << ""Yes"" << endl;||| 12 else||| 13 cout << ""No"" << endl;||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0), cin.tie(0);||| 17 int t = 0;||| 18 cin >> t;||| 19 while (t--) {||| 20 solve();||| 21 }||| 22 return 0;||| 23 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 void solve() {||| 4 int a[3], m;||| 5 cin >> a[0] >> a[1] >> a[2] >> m;||| 6 sort(a, a + 3);||| 7 int minsum = 0, maxsum = 0;||| 8 maxsum = a[0] + a[1] + a[2] - 3;||| 9 minsum = a[0] - a[1] - a[2] - 1;||| 10 if (m >= minsum && m <= maxsum)||| 11 cout << ""Yes"" << endl;||| 12 else||| 13 cout << ""No"" << endl;||| 14 }||| 15 int main() {||| 16 ios::sync_with_stdio(0), cin.tie(0);||| 17 int t = 0;||| 18 cin >> t;||| 19 while (t--) {||| 20 solve();||| 21 }||| 22 return 0;||| 23 }||| "	9 minsum = a[2] - a[1] - a[0] - 1;
113	273	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long modd = (1000LL * 1000LL * 1000LL + 7LL);||| 4 int main(int argc, char *argv[]) {||| 5 mt19937 rang(chrono::steady_clock::now().time_since_epoch().count());||| 6 uniform_int_distribution<int> rand_gen(0, modd);||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.precision(12);||| 10 int test_cases = 1;||| 11 for (int t = (1); t < (1) + (test_cases); ++t) {||| 12 int n;||| 13 cin >> n;||| 14 set<long long> a;||| 15 long long sum = 0;||| 16 for (int i = (0); i < (0) + (n); ++i) {||| 17 long long x;||| 18 cin >> x;||| 19 a.insert(x);||| 20 sum += x;||| 21 }||| 22 int m;||| 23 cin >> m;||| 24 for (int i = (0); i < (0) + (m); ++i) {||| 25 long long x;||| 26 cin >> x;||| 27 long long y;||| 28 cin >> y;||| 29 long long bord_low = x, bord_high = sum - y;||| 30 long long ans = 3LL * modd * modd;||| 31 if (bord_high < bord_low) {||| 32 auto it = a.lower_bound(bord_low);||| 33 if (it != a.begin()) {||| 34 --it;||| 35 ans = min(ans, max(bord_low - bord_high, bord_low - *it));||| 36 }||| 37 it = a.lower_bound(bord_low);||| 38 if (it != a.end()) {||| 39 ans = min(ans, *it - bord_high);||| 40 }||| 41 } else {||| 42 auto it = a.lower_bound(bord_low);||| 43 if ((it != a.end()) && (*it <= bord_high)) {||| 44 ans = 0;||| 45 } else {||| 46 if (it != a.begin()) {||| 47 --it;||| 48 ans = min(ans, bord_low - *it);||| 49 }||| 50 it = a.lower_bound(bord_high);||| 51 if (it != a.end()) {||| 52 ans = min(ans, *it - bord_high);||| 53 }||| 54 }||| 55 }||| 56 cout << ans << endl;||| 57 }||| 58 }||| 59 return 0;||| 60 }||| 	1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long modd = (1000LL * 1000LL * 1000LL + 7LL);||| 4 int main(int argc, char *argv[]) {||| 5 mt19937 rang(chrono::steady_clock::now().time_since_epoch().count());||| 6 uniform_int_distribution<int> rand_gen(0, modd);||| 7 ios_base::sync_with_stdio(false);||| 8 cin.tie(0);||| 9 cout.precision(12);||| 10 int test_cases = 1;||| 11 for (int t = (1); t < (1) + (test_cases); ++t) {||| 12 int n;||| 13 cin >> n;||| 14 set<long long> a;||| 15 long long sum = 0;||| 16 for (int i = (0); i < (0) + (n); ++i) {||| 17 long long x;||| 18 cin >> x;||| 19 a.insert(x);||| 20 sum += x;||| 21 }||| 22 int m;||| 23 cin >> m;||| 24 for (int i = (0); i < (0) + (m); ++i) {||| 25 long long x;||| 26 cin >> x;||| 27 long long y;||| 28 cin >> y;||| 29 long long bord_low = x, bord_high = sum - y;||| 30 long long ans = modd * modd;||| 31 if (bord_high < bord_low) {||| 32 auto it = a.lower_bound(bord_low);||| 33 if (it != a.begin()) {||| 34 --it;||| 35 ans = min(ans, max(bord_low - bord_high, bord_low - *it));||| 36 }||| 37 it = a.lower_bound(bord_low);||| 38 if (it != a.end()) {||| 39 ans = min(ans, *it - bord_high);||| 40 }||| 41 } else {||| 42 auto it = a.lower_bound(bord_low);||| 43 if ((it != a.end()) && (*it <= bord_high)) {||| 44 ans = 0;||| 45 } else {||| 46 if (it != a.begin()) {||| 47 --it;||| 48 ans = min(ans, bord_low - *it);||| 49 }||| 50 it = a.lower_bound(bord_high);||| 51 if (it != a.end()) {||| 52 ans = min(ans, *it - bord_high);||| 53 }||| 54 }||| 55 }||| 56 cout << ans << endl;||| 57 }||| 58 }||| 59 return 0;||| 60 }||| 	30 long long ans = 3LL * modd * modd;
113	312	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 5;||| 4 const int INF = 0x3f3f3f3f;||| 5 long long a[MAXN];||| 6 struct node {||| 7 long long x, y;||| 8 } b[MAXN];||| 9 int n;||| 10 int findpos(long long val) {||| 11 int l = 1, r = n;||| 12 int res = -1;||| 13 while (l <= r) {||| 14 int mid = (l + r) >> 1;||| 15 if (a[mid] < val) {||| 16 l = mid + 1;||| 17 } else {||| 18 res = mid;||| 19 r = mid - 1;||| 20 }||| 21 }||| 22 return res;||| 23 }||| 24 void solve() {||| 25 cin >> n;||| 26 long long sum = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 cin >> a[i];||| 29 sum += a[i];||| 30 }||| 31 sort(a + 1, a + 1 + n);||| 32 int m;||| 33 cin >> m;||| 34 for (int i = 1; i <= m; i++) {||| 35 cin >> b[i].x >> b[i].y;||| 36 int pos = findpos(b[i].x);||| 37 if (pos == -1) {||| 38 long long tmp = b[i].x - a[n];||| 39 long long now = sum - a[n];||| 40 if (now >= b[i].y)||| 41 ;||| 42 else {||| 43 tmp += b[i].y - now;||| 44 }||| 45 cout << tmp << ""\n"";||| 46 } else {||| 47 long long minn = 1e18;||| 48 long long now = sum - a[pos];||| 49 if (now >= b[i].y)||| 50 minn = 0;||| 51 else {||| 52 minn = b[i].y - now;||| 53 }||| 54 if (pos != 1) {||| 55 pos--;||| 56 long long now1 = b[i].x - a[pos];||| 57 now = sum - a[pos];||| 58 if (now < b[i].y) {||| 59 now1 += b[i].y - now;||| 60 }||| 61 minn = min(minn, now1);||| 62 }||| 63 cout << minn << ""\n"";||| 64 }||| 65 }||| 66 }||| 67 int main() {||| 68 ios::sync_with_stdio(0);||| 69 cin.tie(nullptr);||| 70 cout.tie(nullptr);||| 71 int t;||| 72 t = 1;||| 73 while (t--) {||| 74 solve();||| 75 }||| 76 return 0;||| 77 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int MAXN = 2e5 + 5;||| 4 const int INF = 0x3f3f3f3f;||| 5 long long a[MAXN];||| 6 struct node {||| 7 long long x, y;||| 8 } b[MAXN];||| 9 int n;||| 10 int findpos(int val) {||| 11 int l = 1, r = n;||| 12 int res = -1;||| 13 while (l <= r) {||| 14 int mid = (l + r) >> 1;||| 15 if (a[mid] < val) {||| 16 l = mid + 1;||| 17 } else {||| 18 res = mid;||| 19 r = mid - 1;||| 20 }||| 21 }||| 22 return res;||| 23 }||| 24 void solve() {||| 25 cin >> n;||| 26 long long sum = 0;||| 27 for (int i = 1; i <= n; i++) {||| 28 cin >> a[i];||| 29 sum += a[i];||| 30 }||| 31 sort(a + 1, a + 1 + n);||| 32 int m;||| 33 cin >> m;||| 34 for (int i = 1; i <= m; i++) {||| 35 cin >> b[i].x >> b[i].y;||| 36 int pos = findpos(b[i].x);||| 37 if (pos == -1) {||| 38 long long tmp = b[i].x - a[n];||| 39 long long now = sum - a[n];||| 40 if (now >= b[i].y)||| 41 ;||| 42 else {||| 43 tmp += b[i].y - now;||| 44 }||| 45 cout << tmp << ""\n"";||| 46 } else {||| 47 long long minn = 1e18;||| 48 long long now = sum - a[pos];||| 49 if (now >= b[i].y)||| 50 minn = 0;||| 51 else {||| 52 minn = b[i].y - now;||| 53 }||| 54 if (pos != 1) {||| 55 pos--;||| 56 long long now1 = b[i].x - a[pos];||| 57 now = sum - a[pos];||| 58 if (now < b[i].y) {||| 59 now1 += b[i].y - now;||| 60 }||| 61 minn = min(minn, now1);||| 62 }||| 63 cout << minn << ""\n"";||| 64 }||| 65 }||| 66 }||| 67 int main() {||| 68 ios::sync_with_stdio(0);||| 69 cin.tie(nullptr);||| 70 cout.tie(nullptr);||| 71 int t;||| 72 t = 1;||| 73 while (t--) {||| 74 solve();||| 75 }||| 76 return 0;||| 77 }||| "	10 int findpos(long long val) {
113	210	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 long long a[N];||| 5 int main() {||| 6 long long T, n, sum = 0, x, y, p;||| 7 cin >> n;||| 8 for (int i = 0; i < n; i++) {||| 9 scanf(""%lld"", &a[i]);||| 10 sum += a[i];||| 11 }||| 12 cin >> T;||| 13 sort(a, a + n);||| 14 while (T--) {||| 15 scanf(""%lld%lld"", &x, &y);||| 16 long long p;||| 17 p = lower_bound(a, a + n, x) - a;||| 18 if (p == n) {||| 19 printf(""%lld\n"", max((long long)0, x - a[n - 1]) +||| 20 max((long long)0, y - sum + a[n - 1]));||| 21 } else if (p == 0) {||| 22 printf(""%lld\n"",||| 23 max((long long)0, x - a[0]) + max((long long)0, y - sum + a[0]));||| 24 } else {||| 25 printf(""%lld\n"", min(max((long long)0, x - a[p]) +||| 26 max((long long)0, y - sum + a[p]),||| 27 max((long long)0, x - a[p - 1]) +||| 28 max((long long)0, y - sum + a[p - 1])));||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const int N = 2e5 + 10;||| 4 long long a[N];||| 5 int main() {||| 6 long long T, n, sum = 0, x, y, p;||| 7 cin >> n;||| 8 for (int i = 0; i < n; i++) {||| 9 scanf(""%lld"", &a[i]);||| 10 sum += a[i];||| 11 }||| 12 cin >> T;||| 13 sort(a, a + n);||| 14 while (T--) {||| 15 scanf(""%lld%lld"", &x, &y);||| 16 long long p;||| 17 p = lower_bound(a, a + n, x) - a;||| 18 if (p == n) {||| 19 printf(""%lld\n"", max((long long)0, x - a[n - 1]) +||| 20 max((long long)0, y - sum + a[n - 1]));||| 21 } else if (p == 0) {||| 22 printf(""%lld\n"",||| 23 max((long long)0, x - a[0]) + max((long long)0, y - sum + a[0]));||| 24 } else {||| 25 printf(""%lld\n"", min(min((long long)0, x - a[p]) +||| 26 max((long long)0, y - sum + a[p]),||| 27 max((long long)0, x - a[p - 1]) +||| 28 max((long long)0, y - sum + a[p - 1])));||| 29 }||| 30 }||| 31 return 0;||| 32 }||| "	"25 printf(""%lld\n"", min(max((long long)0, x - a[p]) +"
113	170	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 std::ios::sync_with_stdio(false);||| 4 std::cin.tie(0);||| 5 int32_t n;||| 6 std::cin >> n;||| 7 int64_t* arr = new int64_t[n];||| 8 for (int32_t i = 0; i < n; i++) std::cin >> arr[i];||| 9 std::sort(arr, arr + n);||| 10 int64_t sum = 0;||| 11 for (int32_t i = 0; i < n; i++) sum += arr[i];||| 12 int32_t m;||| 13 std::cin >> m;||| 14 for (int32_t i = 0; i < m; i++) {||| 15 int64_t x, y;||| 16 std::cin >> x >> y;||| 17 int64_t answer = INT64_MAX;||| 18 int32_t attacks = std::lower_bound(arr, arr + n, x) - arr;||| 19 if (attacks < n)||| 20 answer = std::min(answer, std::max((int64_t)0, y - (sum - arr[attacks])));||| 21 attacks--;||| 22 if (attacks >= 0)||| 23 answer =||| 24 std::min(answer, x - arr[attacks] +||| 25 std::max((int64_t)0, y - (sum - arr[attacks])));||| 26 std::cout << answer << ""\n"";||| 27 }||| 28 return 0;||| 29 }||| "	"1 #include <bits/stdc++.h>||| 2 int main() {||| 3 std::ios::sync_with_stdio(false);||| 4 std::cin.tie(0);||| 5 int32_t n;||| 6 std::cin >> n;||| 7 int64_t* arr = new int64_t[n];||| 8 for (int32_t i = 0; i < n; i++) std::cin >> arr[i];||| 9 std::sort(arr, arr + n);||| 10 int64_t sum = 0;||| 11 for (int32_t i = 0; i < n; i++) sum += arr[i];||| 12 int32_t m;||| 13 std::cin >> m;||| 14 for (int32_t i = 0; i < m; i++) {||| 15 int32_t x, y;||| 16 std::cin >> x >> y;||| 17 int64_t answer = INT64_MAX;||| 18 int32_t attacks = std::lower_bound(arr, arr + n, x) - arr;||| 19 if (attacks < n)||| 20 answer = std::min(answer, std::max((int64_t)0, y - (sum - arr[attacks])));||| 21 attacks--;||| 22 if (attacks >= 0)||| 23 answer =||| 24 std::min(answer, x - arr[attacks] +||| 25 std::max((int64_t)0, y - (sum - arr[attacks])));||| 26 std::cout << answer << ""\n"";||| 27 }||| 28 return 0;||| 29 }||| "	15 int64_t x, y;
113	29	"1 #include <bits/stdc++.h>||| 2 long long a[200001], sum = 0;||| 3 int n, m;||| 4 int main() {||| 5 scanf(""%d"", &n);||| 6 for (int i = 1; i <= n; i++) {||| 7 scanf(""%lld"", &a[i]);||| 8 sum += a[i];||| 9 }||| 10 std::sort(a + 1, a + n + 1);||| 11 scanf(""%d"", &m);||| 12 for (int i = 1; i <= m; i++) {||| 13 long long u, v;||| 14 scanf(""%lld%lld"", &u, &v);||| 15 int l = 1, r = n + 1, pos = n + 1;||| 16 while (l < r) {||| 17 int mid = l + r >> 1;||| 18 if (a[mid] >= u) {||| 19 r = mid;||| 20 pos = std::min(pos, mid);||| 21 } else {||| 22 l = mid + 1;||| 23 }||| 24 }||| 25 long long ans = 0;||| 26 if (pos != n + 1) {||| 27 if (sum - a[pos] >= v)||| 28 ans = 0;||| 29 else||| 30 ans = v - (sum - a[pos]);||| 31 if (pos > 1) {||| 32 if (sum - a[pos - 1] >= v)||| 33 ans = std::min(ans, u - a[pos - 1]);||| 34 else||| 35 ans = std::min(ans, u - a[pos - 1] + v - (sum - a[pos - 1]));||| 36 }||| 37 } else {||| 38 pos = n;||| 39 ans = u - a[pos];||| 40 if (v > sum - a[pos]) ans += v - (sum - a[pos]);||| 41 }||| 42 std::cout << ans << std::endl;||| 43 }||| 44 return 0;||| 45 }||| "	"1 #include <bits/stdc++.h>||| 2 long long a[200001], sum = 0;||| 3 int n, m;||| 4 int main() {||| 5 scanf(""%lld"", &n);||| 6 for (int i = 1; i <= n; i++) {||| 7 scanf(""%lld"", &a[i]);||| 8 sum += a[i];||| 9 }||| 10 std::sort(a + 1, a + n + 1);||| 11 scanf(""%lld"", &m);||| 12 for (int i = 1; i <= m; i++) {||| 13 long long u, v;||| 14 scanf(""%lld%lld"", &u, &v);||| 15 int l = 1, r = n + 1, pos = n + 1;||| 16 while (l < r) {||| 17 int mid = l + r >> 1;||| 18 if (a[mid] >= u) {||| 19 r = mid;||| 20 pos = std::min(pos, mid);||| 21 } else {||| 22 l = mid + 1;||| 23 }||| 24 }||| 25 long long ans = 0;||| 26 if (pos != n + 1) {||| 27 if (sum - a[pos] >= v)||| 28 ans = 0;||| 29 else||| 30 ans = v - (sum - a[pos]);||| 31 if (pos > 1) {||| 32 if (sum - a[pos - 1] >= v)||| 33 ans = std::min(ans, u - a[pos - 1]);||| 34 else||| 35 ans = std::min(ans, u - a[pos - 1] + v - (sum - a[pos - 1]));||| 36 }||| 37 } else {||| 38 pos = n;||| 39 ans = u - a[pos];||| 40 if (v > sum - a[pos]) ans += v - (sum - a[pos]);||| 41 }||| 42 std::cout << ans << std::endl;||| 43 }||| 44 return 0;||| 45 }||| "	"5 scanf(""%d"", &n);"
114	165	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7;||| 4 long long int power(long long int x, long long int y) {||| 5 long long int res = 1;||| 6 x = x % mod;||| 7 while (y > 0) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y >> 1;||| 10 x = (x * x) % mod;||| 11 }||| 12 return res;||| 13 }||| 14 long long int exp(long long int x, long long int y) {||| 15 if (y == 0) return 1;||| 16 if (x == 0 || x == 1) return x;||| 17 long long int p = exp(x, y / 2);||| 18 p = (p * p);||| 19 if (y % 2) p = (x * p);||| 20 return p;||| 21 }||| 22 bool check_prime(long long int n) {||| 23 if (n <= 1) return false;||| 24 if (n <= 3) return true;||| 25 if (n % 2 == 0 || n % 3 == 0) return false;||| 26 for (long long int i = 5; i * i <= n; i = i + 6)||| 27 if (n % i == 0 || n % (i + 2) == 0) return false;||| 28 return true;||| 29 }||| 30 const long long int max_size = 1e7 + 5;||| 31 bool prime[max_size];||| 32 void prime_seive(long long int n) {||| 33 memset(prime, true, sizeof(prime));||| 34 for (long long int i = 2; i * i <= n; i++) {||| 35 if (prime[i]) {||| 36 for (long long int j = i * i; j <= n; j += i) prime[j] = false;||| 37 }||| 38 }||| 39 }||| 40 void solve();||| 41 int main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(NULL);||| 44 cout.tie(NULL);||| 45 long long int t;||| 46 t = 1;||| 47 for (long long int z = 1; z <= t; z++) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 52 void solve() {||| 53 long long int n;||| 54 cin >> n;||| 55 vector<vector<long long int> > A(n);||| 56 for (long long int i = 0; i < n; i++) {||| 57 long long int cnt;||| 58 cin >> cnt;||| 59 for (long long int j = 0; j < cnt; j++) {||| 60 long long int d;||| 61 cin >> d;||| 62 A[i].push_back(d);||| 63 }||| 64 }||| 65 long long int m;||| 66 cin >> m;||| 67 vector<vector<long long int> > B(m);||| 68 set<vector<long long int> > s;||| 69 for (long long int i = 0; i < m; i++) {||| 70 for (long long int j = 0; j < n; j++) {||| 71 long long int d;||| 72 cin >> d;||| 73 B[i].push_back(d - 1);||| 74 }||| 75 s.insert(B[i]);||| 76 }||| 77 priority_queue<pair<long long int, vector<long long int> > > q;||| 78 long long int sum = 0;||| 79 vector<long long int> pp;||| 80 for (long long int i = 0; i < n; i++) {||| 81 sum += A[i].back();||| 82 pp.push_back(A[i].size() - 1);||| 83 }||| 84 q.push({sum, pp});||| 85 vector<long long int> ans;||| 86 while (!q.empty()) {||| 87 pair<long long int, vector<long long int> > p = q.top();||| 88 q.pop();||| 89 long long int add = p.first;||| 90 vector<long long int> pos = p.second;||| 91 if (s.find(p.second) == s.end()) {||| 92 ans = p.second;||| 93 break;||| 94 }||| 95 for (long long int i = 0; i < n; i++) {||| 96 if (pos[i] > 0) {||| 97 add -= A[i][pos[i]];||| 98 add += A[i][pos[i] - 1];||| 99 pos[i]--;||| 100 q.push({add, pos});||| 101 pos[i]++;||| 102 add += A[i][pos[i]];||| 103 add -= A[i][pos[i] - 1];||| 104 }||| 105 if (pos[i] < A[i].size() - 1) {||| 106 break;||| 107 }||| 108 }||| 109 }||| 110 for (long long int i = 0; i < ans.size(); i++) {||| 111 cout << ans[i] + 1 << "" "";||| 112 }||| 113 cout << ""\n"";||| 114 return;||| 115 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 const long long int mod = 1e9 + 7;||| 4 long long int power(long long int x, long long int y) {||| 5 long long int res = 1;||| 6 x = x % mod;||| 7 while (y > 0) {||| 8 if (y & 1) res = (res * x) % mod;||| 9 y = y >> 1;||| 10 x = (x * x) % mod;||| 11 }||| 12 return res;||| 13 }||| 14 long long int exp(long long int x, long long int y) {||| 15 if (y == 0) return 1;||| 16 if (x == 0 || x == 1) return x;||| 17 long long int p = exp(x, y / 2);||| 18 p = (p * p);||| 19 if (y % 2) p = (x * p);||| 20 return p;||| 21 }||| 22 bool check_prime(long long int n) {||| 23 if (n <= 1) return false;||| 24 if (n <= 3) return true;||| 25 if (n % 2 == 0 || n % 3 == 0) return false;||| 26 for (long long int i = 5; i * i <= n; i = i + 6)||| 27 if (n % i == 0 || n % (i + 2) == 0) return false;||| 28 return true;||| 29 }||| 30 const long long int max_size = 1e7 + 5;||| 31 bool prime[max_size];||| 32 void prime_seive(long long int n) {||| 33 memset(prime, true, sizeof(prime));||| 34 for (long long int i = 2; i * i <= n; i++) {||| 35 if (prime[i]) {||| 36 for (long long int j = i * i; j <= n; j += i) prime[j] = false;||| 37 }||| 38 }||| 39 }||| 40 void solve();||| 41 int main() {||| 42 ios_base::sync_with_stdio(false);||| 43 cin.tie(NULL);||| 44 cout.tie(NULL);||| 45 long long int t;||| 46 t = 1;||| 47 for (long long int z = 1; z <= t; z++) {||| 48 solve();||| 49 }||| 50 return 0;||| 51 }||| 52 void solve() {||| 53 long long int n;||| 54 cin >> n;||| 55 vector<vector<long long int> > A(n);||| 56 for (long long int i = 0; i < n; i++) {||| 57 long long int cnt;||| 58 cin >> cnt;||| 59 for (long long int j = 0; j < cnt; j++) {||| 60 long long int d;||| 61 cin >> d;||| 62 A[i].push_back(d);||| 63 }||| 64 }||| 65 long long int m;||| 66 cin >> m;||| 67 vector<vector<long long int> > B(m);||| 68 set<vector<long long int> > s;||| 69 for (long long int i = 0; i < m; i++) {||| 70 for (long long int j = 0; j < n; j++) {||| 71 long long int d;||| 72 cin >> d;||| 73 B[i].push_back(d - 1);||| 74 }||| 75 s.insert(B[i]);||| 76 }||| 77 priority_queue<pair<long long int, vector<long long int> > > q;||| 78 long long int sum = 0;||| 79 vector<long long int> pp;||| 80 for (long long int i = 0; i < n; i++) {||| 81 sum += A[i].back();||| 82 pp.push_back(A[i].size() - 1);||| 83 }||| 84 q.push({sum, pp});||| 85 vector<long long int> ans;||| 86 while (!q.empty()) {||| 87 pair<long long int, vector<long long int> > p = q.top();||| 88 q.pop();||| 89 long long int add = p.first;||| 90 vector<long long int> pos = p.second;||| 91 if (s.find(p.second) == s.end()) {||| 92 ans = p.second;||| 93 break;||| 94 }||| 95 for (long long int i = 0; i < n; i++) {||| 96 if (pos[i] > 0) {||| 97 add -= A[i][pos[i]];||| 98 add += A[i][pos[i] - 1];||| 99 pos[i]--;||| 100 q.push({add, pos});||| 101 pos[i]++;||| 102 add += A[i][pos[i]];||| 103 add -= A[i][pos[i] - 1];||| 104 }||| 105 if (pos[i] < A[i].size() - 2) {||| 106 break;||| 107 }||| 108 }||| 109 }||| 110 for (long long int i = 0; i < ans.size(); i++) {||| 111 cout << ans[i] + 1 << "" "";||| 112 }||| 113 cout << ""\n"";||| 114 return;||| 115 }||| "	105 if (pos[i] < A[i].size() - 1) {
114	6	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 template <typename T>||| 11 void print(T x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x >= 10) print(x / 10);||| 14 putchar(x % 10 + '0');||| 15 }||| 16 template <typename T>||| 17 void print(T x, char let) {||| 18 print(x), putchar(let);||| 19 }||| 20 const int N = 1e5;||| 21 int n, m, c[15];||| 22 long long a[15][2 * N + 5], x[N + 5], y[N + 5], x1[N + 5];||| 23 vector<int> v[N + 5], v1[N + 5];||| 24 struct Node {||| 25 int i, j, last;||| 26 bool operator<(const Node &n2) const {||| 27 return x[i] + y[j] < x[n2.i] + y[n2.j];||| 28 }||| 29 };||| 30 priority_queue<Node> pq;||| 31 set<vector<int> > s;||| 32 int main() {||| 33 n = read();||| 34 for (int i = 1; i <= n; i++) {||| 35 c[i] = read();||| 36 for (int j = 1; j <= c[i]; j++) {||| 37 a[i][j] = read();||| 38 }||| 39 }||| 40 int lx = min(c[1], N + 1);||| 41 for (int i = 1; i <= lx; i++) {||| 42 x[i] = a[1][c[1] - i + 1];||| 43 v[i].push_back(c[1] - i + 1);||| 44 }||| 45 int ly;||| 46 int tot = lx;||| 47 for (int i = 2; i <= n; i++) {||| 48 while (!pq.empty()) pq.pop();||| 49 ly = min(c[i], N + 1);||| 50 for (int j = 1; j <= ly; j++) {||| 51 y[j] = a[i][c[i] - j + 1];||| 52 }||| 53 Node start = {1, 1, false};||| 54 pq.push(start);||| 55 tot = 0;||| 56 while (!pq.empty()) {||| 57 Node u = pq.top();||| 58 pq.pop();||| 59 tot++;||| 60 x1[tot] = x[u.i] + y[u.j];||| 61 v1[tot] = v[u.i];||| 62 v1[tot].push_back(c[i] - u.j + 1);||| 63 if (tot >= N + 1) {||| 64 break;||| 65 }||| 66 if (u.j < ly) {||| 67 Node v1 = {u.i, u.j + 1, true};||| 68 pq.push(v1);||| 69 }||| 70 if (u.last == false && u.i < lx) {||| 71 Node v1 = {u.i + 1, u.j, false};||| 72 pq.push(v1);||| 73 }||| 74 }||| 75 lx = tot;||| 76 for (int i = 1; i <= tot; i++) {||| 77 x[i] = x1[i];||| 78 v[i] = v1[i];||| 79 }||| 80 }||| 81 m = read();||| 82 vector<int> vt;||| 83 int t;||| 84 for (int i = 1; i <= m; i++) {||| 85 vt.clear();||| 86 for (int j = 1; j <= n; j++) {||| 87 t = read();||| 88 vt.push_back(t);||| 89 }||| 90 s.insert(vt);||| 91 }||| 92 for (int i = 1; i <= tot; i++) {||| 93 if (s.find(v[i]) == s.end()) {||| 94 for (int j = 0; j <= n - 1; j++) cout << v[i][j] << "" "";||| 95 cout << endl;||| 96 break;||| 97 }||| 98 }||| 99 return 0;||| 100 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int read() {||| 4 int x = 0, f = 0;||| 5 char ch = getchar();||| 6 while (!isdigit(ch)) f |= ch == '-', ch = getchar();||| 7 while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();||| 8 return f ? -x : x;||| 9 }||| 10 template <typename T>||| 11 void print(T x) {||| 12 if (x < 0) putchar('-'), x = -x;||| 13 if (x >= 10) print(x / 10);||| 14 putchar(x % 10 + '0');||| 15 }||| 16 template <typename T>||| 17 void print(T x, char let) {||| 18 print(x), putchar(let);||| 19 }||| 20 const int N = 1e5;||| 21 int n, m, c[15];||| 22 long long a[15][2 * N + 5], x[N + 5], y[N + 5], x1[N + 5];||| 23 vector<int> v[N + 5], v1[N + 5];||| 24 struct Node {||| 25 int i, j, last;||| 26 bool operator<(const Node &n2) const {||| 27 return x[i] + y[j] < x[n2.i] + y[n2.j];||| 28 }||| 29 };||| 30 priority_queue<Node> pq;||| 31 set<vector<int> > s;||| 32 int main() {||| 33 n = read();||| 34 for (int i = 1; i <= n; i++) {||| 35 c[i] = read();||| 36 for (int j = 1; j <= c[i]; j++) {||| 37 a[i][j] = read();||| 38 }||| 39 }||| 40 int lx = min(c[1], N + 1);||| 41 for (int i = 1; i <= lx; i++) {||| 42 x[i] = a[1][c[1] - i + 1];||| 43 v[i].push_back(c[1] - i + 1);||| 44 }||| 45 int ly;||| 46 int tot = 0;||| 47 for (int i = 2; i <= n; i++) {||| 48 while (!pq.empty()) pq.pop();||| 49 ly = min(c[i], N + 1);||| 50 for (int j = 1; j <= ly; j++) {||| 51 y[j] = a[i][c[i] - j + 1];||| 52 }||| 53 Node start = {1, 1, false};||| 54 pq.push(start);||| 55 tot = 0;||| 56 while (!pq.empty()) {||| 57 Node u = pq.top();||| 58 pq.pop();||| 59 tot++;||| 60 x1[tot] = x[u.i] + y[u.j];||| 61 v1[tot] = v[u.i];||| 62 v1[tot].push_back(c[i] - u.j + 1);||| 63 if (tot >= N + 1) {||| 64 break;||| 65 }||| 66 if (u.j < ly) {||| 67 Node v1 = {u.i, u.j + 1, true};||| 68 pq.push(v1);||| 69 }||| 70 if (u.last == false && u.i < lx) {||| 71 Node v1 = {u.i + 1, u.j, false};||| 72 pq.push(v1);||| 73 }||| 74 }||| 75 lx = tot;||| 76 for (int i = 1; i <= tot; i++) {||| 77 x[i] = x1[i];||| 78 v[i] = v1[i];||| 79 }||| 80 }||| 81 m = read();||| 82 vector<int> vt;||| 83 int t;||| 84 for (int i = 1; i <= m; i++) {||| 85 vt.clear();||| 86 for (int j = 1; j <= n; j++) {||| 87 t = read();||| 88 vt.push_back(t);||| 89 }||| 90 s.insert(vt);||| 91 }||| 92 for (int i = 1; i <= tot; i++) {||| 93 if (s.find(v[i]) == s.end()) {||| 94 for (int j = 0; j <= n - 1; j++) cout << v[i][j] << "" "";||| 95 cout << endl;||| 96 break;||| 97 }||| 98 }||| 99 return 0;||| 100 }||| "	46 int tot = lx;
114	112	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<vector<int> > a;||| 5 vector<vector<int> > b;||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 a.resize(n);||| 9 for (int i = 0; i < n; i++) {||| 10 int x;||| 11 scanf(""%d"", &x);||| 12 a[i].resize(x);||| 13 for (int j = 0; j < x; j++) {||| 14 scanf(""%d"", &a[i][j]);||| 15 }||| 16 }||| 17 scanf(""%d"", &m);||| 18 b.resize(m);||| 19 for (int i = 0; i < m; i++) {||| 20 b[i].resize(n);||| 21 for (int j = 0; j < n; j++) {||| 22 scanf(""%d"", &b[i][j]);||| 23 b[i][j]--;||| 24 }||| 25 }||| 26 sort(b.begin(), b.end());||| 27 vector<int> now(n);||| 28 for (int i = 0; i < n; i++) {||| 29 now[i] = (int)a[i].size() - 1;||| 30 }||| 31 if (!binary_search(b.begin(), b.end(), now)) {||| 32 for (int i = 0; i < n; i++) {||| 33 printf(""%d "", now[i] + 1);||| 34 }||| 35 printf(""\n"");||| 36 return 0;||| 37 }||| 38 int Max = 0;||| 39 vector<int> ans(n, -1);||| 40 for (int i = 0; i < m; i++) {||| 41 vector<int> temp = b[i];||| 42 int sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 sum += a[j][temp[j]];||| 45 }||| 46 for (int j = 0; j < n; j++) {||| 47 if (temp[j] != 0) {||| 48 temp[j]--;||| 49 if (!binary_search(b.begin(), b.end(), temp) &&||| 50 sum - a[j][temp[j] + 1] + a[j][temp[j]] > Max) {||| 51 Max = sum - a[j][temp[j] + 1] + a[j][temp[j]];||| 52 ans = temp;||| 53 }||| 54 temp[j]++;||| 55 }||| 56 }||| 57 }||| 58 for (int i = 0; i < n; i++) {||| 59 printf(""%d "", ans[i] + 1);||| 60 }||| 61 return 0;||| 62 }||| "	"1 #include <bits/stdc++.h>||| 2 using namespace std;||| 3 int n, m;||| 4 vector<vector<int> > a;||| 5 vector<vector<int> > b;||| 6 int main() {||| 7 scanf(""%d"", &n);||| 8 a.resize(n);||| 9 for (int i = 0; i < n; i++) {||| 10 int x;||| 11 scanf(""%d"", &x);||| 12 a[i].resize(x);||| 13 for (int j = 0; j < x; j++) {||| 14 scanf(""%d"", &a[i][j]);||| 15 }||| 16 }||| 17 scanf(""%d"", &m);||| 18 b.resize(m);||| 19 for (int i = 0; i < m; i++) {||| 20 b[i].resize(n);||| 21 for (int j = 0; j < n; j++) {||| 22 scanf(""%d"", &b[i][j]);||| 23 b[i][j]--;||| 24 }||| 25 }||| 26 sort(b.begin(), b.end());||| 27 vector<int> now(n);||| 28 for (int i = 0; i < n; i++) {||| 29 now[i] = (int)a[i].size() - 1;||| 30 }||| 31 if (!binary_search(b.begin(), b.end(), now)) {||| 32 for (int i = 0; i < n; i++) {||| 33 printf(""%d "", now[i] + 1);||| 34 }||| 35 printf(""\n"");||| 36 return 0;||| 37 }||| 38 int Max = 0;||| 39 vector<int> ans(n, -1);||| 40 for (int i = 0; i < m; i++) {||| 41 vector<int> temp = b[i];||| 42 int sum = 0;||| 43 for (int j = 0; j < n; j++) {||| 44 sum += a[j][temp[j]];||| 45 }||| 46 for (int j = 0; j < n; j++) {||| 47 if (temp[j] != 0) {||| 48 temp[j]--;||| 49 if (!binary_search(b.begin(), b.end(), temp) &&||| 50 sum - a[j][temp[j] + 1] + a[j][temp[j]] > Max) {||| 51 Max = sum - a[j][temp[j] + 1] + a[j][temp[j]];||| 52 ans = temp;||| 53 }||| 54 temp[j]++;||| 55 }||| 56 }||| 57 for (int i = 0; i < n; i++) {||| 58 printf(""%d "", ans[i] + 1);||| 59 }||| 60 return 0;||| 61 }||| 62 }||| "	57 }
