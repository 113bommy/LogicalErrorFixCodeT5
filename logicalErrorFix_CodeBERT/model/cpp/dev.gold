114	15 if (s == "j") return 10;
25	14 cout << p << ' ' << x << '\n';
281	20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;
250	80 count(i) * p[i].first % mod * g[GetIndexBase3(i, j)].first % mod;
228	93 printf("finish %d\n", array[k - 1]);
142	66 for (long long i = 1; i < 10; i++) {
104	38 dp[j][l] = (dp[j - 1][l] + dp[j][l]) % mod;
558	35 swap(b[i + 1], b[2 * n - i - 2]);
89	11 for (int j = 1; j <= i; j++) {
432	22 return;
32	43 a[i] = 2;
30	47 } else if (a[i] == 0) {
95	81 for (int i = 0; i <= n; i++) {
223	29 printf("and 1 3\n");
238	55 printf("%lld\n", ans.mx);
517	67 if (maxi == -1 && m[a[n - 1]] == 1) {
27	19 c[i - 1] = 'k';
203	68 if (a != 1) ++a;
572	30 long long ans = 3LL * modd * modd;
429	41 return;
225	14 int s = 1;
459	32 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)
284	80 long long rst_idx = 1;
6	4 long long n, q, inv[maxn], inv_fac[maxn], fac[maxn], dp[maxn][3];
163	13 int n, m, q, a[maxn], pr[maxn], pl, mn[maxm], fa[maxn], id[maxn], at[maxm];
570	11 if ((arr[3] - arr[2] - arr[1] - 1) > m)
348	43 cout << pos << " " << 1 << "\n";
557	22 for (long long int i = 1; i <= n; i++) {
159	53 ans -= (nowcnt - prev) * 1ll * cur;
220	36 v.push_back(x - a);
344	15 cout << c - n << endl;
573	10 int findpos(long long val) {
94	17 for (int del = 1; del <= i; ++del)
389	33 if (x.first >= sumcovered) {
99	43 for (int j = 0; j <= n; j++) dp[i][j] = mx[j] = 0;
367	25 string b2[100];
352	35 cout << 1 << " " << i + 1 << "\n";
270	17 long long int ctr = 1;
44	18 cout << n / 3 << " " << n / 3 + 1 << '\n';
470	67 printf("%lld ", vec[i]);
127	19 sum -= a[j];
387	35 sort(power, power + n);
80	28 for (int j = 0; j < m / 2 * 2; j += 2) {
300	56 int l = 0, r = 1e9 + 1, ans;
370	62 cout << -1 << "\n";
196	16 s[m + 1] = 0;
71	29 if (k >= m / 2) {
46	14 cout << 0 << " " << 1 << "\n";
233	11 mn[x] = min(mn[x << 1], mn[x << 1 | 1]);
296	52 for (int i = 1; i <= (N - 1); ++i) scanf("%d", a + i + 1), ++a[i + 1];
81	100 for (int i = 0; i < m - 1; i += 2) {
565	73 if (in[2] - 1 <= in[0] + in[1]) {
103	30 dp[j + 1] = max(dp[j + 1], f[j]);
546	41 for (int i = n - 2; i > -1; --i) {
552	103 for (int i = 0; i < 3; ++i) {
464	32 if ((i & 1) == k && get(i) == j)
373	61 ans = 1111111111;
166	4 static const int MAX = 1 << 22;
379	46 if (go(i + 1, n, k, s, 1) == true)
363	27 unsigned long long int a, b, c, i, j, k;
214	40 cout << m << "\n";
273	38 gr = binpow(binpow(2, n, mod) % mod, k - i, mod);
73	31 if (k >= m / 2) {
175	68 cout << "a\n";
576	5 scanf("%d", &n);
167	16 if (j < 0) break;
473	61 z[i] = z[i - l];
388	25 sort(res, res + n, cmp);
276	22 fac[i] = (1ll * fac[i - 1] * i) % mod;
506	13 if (s[i - 1] == 'a' and s[i] == 'b') {
513	74 cout << "-1 -1" << endl;
327	20 for (int i = b[1].first; i <= b[1].second; i++) dp[1][i] = 1;
543	51 app[i + 1].clear();
285	59 for (int i = 0; n - 2 * i > 1; i += 1) {
112	17 return res = (f(i - 1, j) + V[i - 1] * f(i - 1, j - 1)) % MOD;
350	15 cout << a << " " << 1 << endl;
522	86 for (int i : x) {
431	61 if (arr[2] == 1 and s[0] != '2') {
393	22 return {ans, armor.size()};
397	4 long long f[N], sum[N];
28	25 break;
117	108 if (r[id][j] > r[i][j]) ++cnt;
420	9 if (l <= r / 2) {
16	34 long long ans = 0;
412	13 ans = r % l;
161	29 ans += sum + 1ll * (j - 1) * x - T2.ask(x), sum += x;
205	15 if (lazy[si] != 0) {
137	36 if (n % 10 == 9) {
33	46 if (arr[u] == 0) ans++;
108	84 for (long long h = 1; h <= maxn; h++) {
467	27 int lsum = -(s[r] - s[l + 1]);
482	20 T[cur]++;
290	35 long long fact[2 * 200005];
448	16 if (pd == 0) {
544	35 dp[i][j] = max(dp[i][j], dp[i][z] + dp[z + 1][j - 1] + 1);
494	68 for (int i = 1; i <= 10; i++) {
490	16 while (first < maxm) {
335	10 while (count < n) {
255	56 for (int i = 0; i < 1500; i += 1) {
202	27 int sum = 100000000;
452	20 cout << 1 << " " << n / 2 << " " << (n + 3) / 2 << " " << n << '\n';
468	39 if (lq * 1ll * mq > 0) {
329	14 if (num % 10 == 3 || num % 3 == 0)
234	55 if (c[r] != tmp || rmq_max(l, r) > tmp) {
564	15 if (m > mx || m < mn)
135	33 long long go = popcnt(cur & f[dep][q[dep]]);
533	70 cout << size(ans) << '\n';
126	45 k -= A.at(j);
381	43 if (a[j] != b[j]) {
287	38 ans.emplace_back(i);
275	22 ans = power(power(2, n - 1) - 1, k);
134	45 g[i][j] = 1LL << read() - 1;
382	64 temp = temp && arr[j] == brr[j];
299	86 long long l = 0, r = 1e9 + 1;
219	63 printf("%lld\n", ans);
561	24 for (int i = 0; i < n; i++) {
298	26 int L = 0, R = 1e9 + 1;
204	15 if (lazy[si] != 0) {
185	13 distw = max(x1, W - x2);
505	84 if (a[j] - a[i - 1] == b[j] - b[i - 1]) {
70	50 if (k % 2 || res < k)
260	16 vector<long long> pref(n + 1);
252	56 for (int i = 0; i < 300; i += 1) {
532	13 for (int i = 1; i <= (1 << k); i++) power[i] = 1ll * power[i - 1] * A % P;
386	43 b = v[0].first + v[0].second;
24	15 cout << 2 << " " << p - 1 << '\n';
440	110 cout << 1 << " " << n - 1 << " " << 2 << " " << n << "\n";
56	17 if (0) {
78	33 k--;
321	39 findParent(i, par3) != findParent(j, par3)) {
529	30 long long t, n, m, k, now, len1, len2, x[200005], y[200005], f[2][300005];
405	24 scanf("%lld%lld", &n, &m);
553	18 ll lo = -1e18, hi = 1e18, ans = -1e18;
216	15 long long ret = n * n;
305	18 v.push_back({'a', 0});
569	9 sort(a, a + 3);
197	9 char str[10][10] = {" ", " abc", " acb", " bac", " bca", " cab", " cba"};
195	24 if ((m - 2) >= 0)
445	91 cout << 1 << " " << n - 1 << " " << 2 << " " << n << "\n";
239	74 node res = query(l, r, 1, P, 1);
542	19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);
128	8 bool operator<(const node &b) const { return right < b.right; }
283	47 for (int i = 0; i < n; i++) pn = pn * 2 % mod;
5	3 const long long maxn = 3000005;
447	24 for (int i = 1; i <= n / 2; i++) {
369	38 while (i >= 0) {
58	13 for (int i = 0; i <= n - 3; i++) {
349	39 } else if (a <= xxx && a >= (xxx - yyy + 1))
274	53 for (long long int i = 1; i < k; i++) mlt[i] = (mlt[i - 1] * p2n) % mod;
384	13 for (int i = 0; i <= k1; i++) {
136	68 return;
501	40 for (long long j = 1; j <= m; j++) {
328	28 mu[i * p] = -mu[i];
174	9 cout << char('a' + i - 1);
57	13 sum += (hash[i] > 2) ? 2 : hash[i];
150	9 if (a[i] == b[j]) {
222	52 int pos = Or - And;
537	41 for (int i = split + 2; i < n; i += 2) {
232	29 long long a = (r1 + r2 - r3) / 2;
1	65 while (i < q and query[i].first == x) {
434	76 } else if (ct.count(3) > 0 && ct[3] >= 2) {
368	3 int cntsrc[30];
478	24 if (i != s1.size() - 1 && s1[i + 1] == '1' && s2[i + 1] == '1') {
256	56 for (int i = 0; i < 1000; i += 1) {
390	20 if (cave[i].first >= pow) {
91	48 for (j = 1; j < i + 1; j++) {
259	56 for (int i = 0; i < 500; i += 1) {
54	18 if (a[i] <= 2)
320	58
152	93 pos[b[i]] = i, pos[b[need]] = need;
508	11 for (long long int j = i; j < n; j++) {
413	11 if (r / 2 >= l && r > 1) {
311	15 while (s[i] == '?' && i < n && ++i)
101	108 for (int i = 0; i <= n; i++)
451	19 if (idx > n / 2) {
191	25 l = j;
415	15 if (l > h)
82	58 for (int j = 1; j <= m; j++) {
511	26 for (int j = i; j <= n; j++) {
398	49 long long acum = 0;
271	25 ms[m] = xEnd - xStart;
0	32 for (int i = 2; i <= 3 * n + 1; i++) d[i] = C(3 * n + 1, i);
306	68 for (int j = v[i].second + 1; j <= n; j++) {
165	4 int n, k, cnt[N], a[N], ans[K][N];
515	28 if (n - k > 2 || n - k == 0)
9	6 long long _, n, x[N], y[N], cnt[2][2];
425	52 else
461	22 else if (temp % 2 != 0)
157	26 ans = ans + pref + x * 1ll * (i - 1) - ft1.sum(0, x);
122	33 for (int j = 1; j <= i - 1; j++) ans += cross(a[i], b[i], a[j], b[j]);
29	13 if (i - 1 >= 0 && str[i - 1] == '1')
123	31 for (long long i = 0; i < n - k; i++) {
487	42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;
40	16 for (int k = 1; k <= lg[n]; ++k) {
43	14 printf("%lld %d\n", x - 2 * di, di);
374	46 cout << ans << endl;
248	17 for (int j = 0; j < n; j++)
35	67 marks[u] = 0;
272	33 return (res + (n % 2 == 0) * ksm(b[k - i], n)) % 1000000007;
64	56 sort(s + 1, s + 1 + n, cmpd);
65	26 }
337	4 int t, k[100], a[1667];
243	57 ans *= adj[i][j];
577	105 if (pos[i] < A[i].size() - 1) {
84	48 if (j < m - 1) {
474	10 cout << s << endl;
439	16 return;
310	27 s[i] = (s[i + 1] == 'B' ? 'R' : 'B');
446	22 for (int i = n / 2 - 1; i >= 0; i--) {
483	11 s[o].v += y;
401	10 scanf("%d", &x);
353	11 long long d = sq - k;
102	15 for (int j = 1; j <= i; ++j) {
365	5 long long i = 1;
551	35 dp[l][k].second + dp[k][r].second + area(P[l], P[k], P[r]));
462	22 else if (abs(sum[r] - sum[l - 1]) % 2 == 1)
343	18 else if (c > 2 * k)
332	9 if (i % 3 == 0 or i % 10 == 3) {
404	4 long long n, m, ans[4 * N + 1];
224	28 long long a123 = a12 & a23;
264	15 int j = 0, part = 1;
231	13 for (int i = (int)(2); i < (int)(n + 1); i++) {
61	27 else if (s1[j] == 'e')
472	20 inline int judge(int x, int y) {
115	13 while (l < len) {
444	25 if (i - 1 > n - i - 1) {
173	26 } else if (ni == 1 && mi == 0) {
10	2 long long i = 4, j, n, m, r, s[6], k;
301	49 int l = 0, r = inf + 1;
437	25 int ppp = s.find('0', pos);
498	10 yeet tree[800010], ans;
351	8 cout << c << " " << 1 << "\n";
460	67 cout << 2 - ((r - l + 1) % 2) << '\n';
3	3 const int N = 3000005, mod = 1e9 + 7, mx = 3000001;
36	34 if (!hi[min(y, z)]) cnt--;
323	61 while (j <= n && find(j, 2) == 1) j++;
568	9 long long minm = max((long long)0, x[2] - x[1] - x[0] - 1);
554	22 if (s[s.size() - 1] != '0') {
34	67 } else if (ask == 1) {
496	62 break;
169	133 for (int j = n; j >= max(n - 500, 1ll); --j) {
345	12 for (i = 1; i * i < n; i++)
263	16 printf("%.9f\n", ans);
121	7 vector<bool> b(2 * n + 1, false);
574	25 printf("%lld\n", min(max((long long)0, x - a[p]) +
383	27 for (int j = 1; j < n; j++) {
109	87 for (long long b = 0; b <= k; b++)
419	9 cout << (b - a) << "\n";
67	9 if (k == 0) {
292	59 int l = 1, r = 1e9 + 5, ans = -1;
295	94 int l = 0, r = 1e9 + 1;
242	56 prob[i][j] = a[i] * inv(a[i] + a[j]) % MOD;
124	28 for (int j = i + 1; j < k; j++) {
427	9 string n2 = "222527323335525557727577";
208	6 if (abs(a - b) % 2 == 1) {
97	19 for (int i = 0; i <= n; i++) {
48	16 a++;
49	16 else if (n % 3 == 1)
550	21 for (int st = 0; st < n; ++st) {
181	49 for (int j = i * 2; j <= n; j += i) ans[i] -= ans[j];
371	32 cout << "1111111111\n";
210	29 }
453	66 cout << "1 " << n - 1 << " ";
563	13 for (int i = 1; i < tt + 1; i++) {
50	9 printf("%.0f %.0f\n", a - (s * 2), s);
31	27 if (s2[i] == '1' && s1[i] != '0') {
206	44 if ((c - d) % 2)
418	11 if (min_t <= max_t / 2)
55	12 for (int i = 0; i < 55; i++) {
539	28 ret = max(ret, sol(l + 1, i - 1) + sol(i, r) + 1);
98	26 for (long long j = 0; j <= n; ++j) {
324	58
502	49 for (int j = 2; j <= m - 1; ++j)
229	36 for (i = 4; i <= n; i++) v.push_back((a ^ ior(1, i)) | iand(1, i));
509	31 for (int j = n; j >= i; j--) {
319	62 par2[p1] = p2;
93	26 for (long long j = 0; j <= n; ++j) {
488	33 id[(j - 1) % m + 1] = c[i][now - j + len - 1];
236	38 if (r < ql || l > qr) return -inf;
372	61 ans = 2e9;
38	47 int largest_friend_group = 1;
226	93 printf("finish %d\n", array[k - 1]);
376	34 for (int i = ptr + 1; i < n.size(); i++) n[i] = '0';
315	18 for (long long int j = 0; j <= i - 1; j++) cout << j + 1 << " ";
578	46 int tot = lx;
362	12 if ((n - i) <= 0) {
7	31 cout << ans1 / 3 + ans2 << endl;
47	16 cout << ((n - 1) / 3) << " " << ((n - 1) / 3) + 1 << "\n";
336	8 if (i % 10 != 3 && i % 3 != 0) {
85	43 work(i, j, 0), work(i, j + 1, 0);
325	37 for (int j = (1); j <= (m / x); j++) (f[i][j] += f[i][j - 1]) %= mod;
334	15 if (i % 3 == 0 || i % 10 == 3) continue;
246	64 ans = (ans + (long long)__builtin_popcount(i) * dp[i] % mod * cur) % mod;
333	20 cout << count << endl;
493	14 x = 0;
520	27 nxty[i] = *lower_bound(y + 1, y + m + 1, py[i]);
375	35 printf("%s\n", a);
194	33 for (int i = 1; i < m; ++i) {
497	27 res.len[1] = y.len[1];
199	23 if (l > 0)
430	53 ourmap1['3'] < ourmap1['5']) {
421	43 if (r - mposs >= l)
146	71 int c = rec(q, 0, 0, 0);
304	38 if (s[i + 1] == 'B') {
249	18 long long g[1 << N];
79	28 for (int j = 0; j < m / 2 * 2; j += 2) {
308	31 if (d1 == n - 1) {
151	21 if (j == -1) {
111	65 ans = add(ans, dp[adjlist[p].size()][k]);
526	3 const int maxn = 2e5 + 5;
314	15 if (cur == 0) {
160	3 const int N = 7e5 + 113;
523	23 int pos2 = lower_bound(yy + 1, yy + m + 1, p[i].second) - yy;
477	20 if (zero > 1 && st > 1 && one == 1) {
244	10 int a[N], e[N][N], p[M], n, ll[O][O], lr[O][O], rl[O][O], rr[O][O];
257	56 for (int i = 0; i < 1000; i += 1) {
422	10 if (l <= (r / 2)) {
267	96 if (arr[i].second != arr[i + 1].second - 1) {
458	38 if (sum[r] == sum[l - 1])
41	36 while (j <= i && query(j, i) == 1) j++;
567	15 if (m + 1 >= v[2]) {
489	51 memset(c[i], 0, sizeof(long long) * (m + 1));
341	25 cout << 1 + c - b1 << endl;
120	57 if (rank[ans][j] > rank[i][j]) {
313	52 for (long long j = 1; j <= i; j++) {
525	15 for (int i = 1; i <= n; i++) suma[i] = 0, mpa[i].clear(), mpb[i].clear();
241	43 long long h[N][S], pr[S];
227	72 a[2][i] = 0;
145	5 if (w1 > w2 + rem2 || w2 > w1 + rem1) {
63	54 sum += e[i];
148	29 if (scrB + (4 - i / 2) < scrA) {
410	35 if (p >= l)
507	24 int l = -2, r = -2;
158	40 ans += 1ll * a[i] * (i - 1);
20	18 cout << 2 << " " << n - 1 << "\n";
107	47 long long sum = 0;
168	30 for (long long i = max(1LL, n - 2 * k); i < n; i++) {
149	25 if (s[i] == '1') me++;
144	31 rem2--;
133	83 value |= mask_one[depth][real_zero];
378	34 return;
66	6 if (a.first - a.second > b.first - b.second) return true;
52	28 cout << c1 << " " << c2 << '\n';
171	20 while (x <= m) x <<= 1;
183	35 if (n <= 5) {
317	31 } else if (a[n - 1] == 0) {
357	20 while (i * i < n) {
331	8 for (int i = 1; i <= 1666; i++) {
406	17 ans = (r - 1) / 2;
491	36 printf("%d\n", solve());
435	46
396	12 dp[i] = (dp[i] + (r - l + 1LL) * dp[i / l]) % m;
76	15 if ((n * m / 2 - k) >= 0 && (n * m / 2 - k) <= (n * m - m) / 2 &&
342	9 if (c > max_number || a > max_number || b > max_number) {
476	36 if (s1[i + 1] == '1' && s2[i + 1] == '1') {
192	37 sum -= r1[i];
18	7 printf("2 %d\n", p - 1);
2	7 const int N = (int)3e6 + 5;
463	27 continue;
366	25 string b2[100];
253	56 for (int i = 0; i < 300; i += 1) {
266	100 if (c < t) {
566	73 if (in[2] - 1 <= in[0] + in[1]) {
492	54 dp[i][0] = min(min(cost1, costR) + dp[i - 1][0], cost2 + dp[i - 1][1]);
495	83 while (s - x >= n - 1) {
129	6 int n, k, a[10005], tot, app[105][105], cnt[10005], ci, lim, sel[105];
278	18 for (int i = 1; i <= k; i++) {
230	46 cout << "or " << 1 << " " << i << endl;
571	9 minsum = a[2] - a[1] - a[0] - 1;
17	24 b[i].first = lower_bound(V + 1, V + tot + 1, b[i].first) - V;
62	53 while (i < n && sum + e[i] > 0) {
547	74 for (auto &it : v[a[i]]) {
72	27 if (k < m / 2) {
455	25 else if ((r - l + 1) % 2)
347	8 cout << base << " " << 1 << endl;
139	76 break;
180	43 if (!u.first) return make_pair(0, 0);
77	19 if (n % 2 == 1 && m % 2 == 0 && k % 2 == 0 && (n * m) - (k * 2) >= m) {
156	45 void upd(int l, int r, ll val, int i, int cl, int cr) {
514	45 for (k = 1; k <= n; k++) {
279	73 now += power(nn, i - 1, mod) * power(ans, k - i, mod);
423	17 cout << sec % fir << endl;
170	8 for (int i = 30; i >= 0 && n < m; --i) {
141	64 for (long long int i = 0; i < s.size(); i++) {
457	43 int xx = !sum ? 0 : abs(sum + 1) % 2 + 1;
339	17 if (most % 3 != 0 && most % 10 != 3) jok.push_back(most);
26	14 b = n - 1;
359	14 int one = (i - 1) * (i - 1);
213	78 cout << ans1 << endl;
262	17 printf("%0.8lf\n", s);
316	15 if (a[0] == 1) {
534	9 for (int i = l; i <= r - 2; i += 2) {
39	64 cout << 1 << endl;
69	26 if (k % 2 == 0)
207	40 } else if ((c + d) & 1) {
154	73 g.adedge(j, v2[j]);
53	45 if (cnt[s[i] - 'a'] >= 2) continue;
87	14 }
237	56 printf("%lld\n", a[l - 1] - mi);
516	49 for (int j = 1; j <= n; ++j) a[i][j] = '=';
162	59 for (int i = 1; i <= 1000001; i++) {
361	9 c = 1;
519	19 long long ans = 0;
125	3 const long long N = 205;
380	22 if (mark.size() < k) mark.insert('0');
13	32 for (long long i = 0; i < 4; i++) {
23	16 cout << l << ' ' << j << endl;
179	34 for (long long j = 1; j <= n; ++j) dp[j] = 0;
535	30 a[j] = a[j + 1] = 1;
524	76 long long ans = 0;
11	38 ll ans = 0;
400	4 long long f[maxn] = {};
538	29
212	17 if (abs(c - d) % 2) {
555	13 for (int i = 0; i < x; i++) {
178	24 if (cnt % gr == 0) return 1;
261	37 long double mx = -2000000001;
113	15 if (((s[i] - 'a') <= (s[mn] - 'a')) && (s[i] - 'a' != s[start] - 'a')) {
188	28 dy = h - dy;
286	34 cout << z.size() + 1 << '\n';
143	41 cnt + decide2 > cnt1 + (9 - i) / 2) {
198	19 p[i] = p[i - 1] + (k[i % 3] != v[i]);
499	6 } node[(800010)];
19	13 cout << ans2 << ' ' << ans1 << endl;
466	25 pre = ((a % 2 == 0) ? pre1[b + 1] - pre1[a] : pre2[b + 1] - pre2[a]);
364	12 for (int i = 1; i < 64; i++) {
394	21 for (int j = i; j <= n; j += i) dp2[j] = (dp2[j] + now) % m;
289	34
326	5 const int MOD = 998244353;
484	33 for (int i = 1; i <= 100000; i++) {
37	82 if (v1[v].lower_bound(v) != v1[v].end())
110	50 dp[i + 1][j + 1] += 1ll * dp[i][j] * cnts(con[r][i], d - 1) % mod2;
354	23 cout << l - ((p - l + 1) - n) << " " << l << endl;
247	81 for (long long i = 0; i < m; i++) {
486	42 for (int j = m, k = L; j >= lc; j--, k++) g[R + lc - j].p = k;
303	15 for (int i = 2; i <= n; i++) res &= a[i];
277	46 res = (res + (bounus * powlc(powlc(2, i - 1), n) % mod)) % mod;
414	19 a = 0;
235	61 printf("%lld\n", MAX.query(l, r + 1) - S[l]);
395	4 long long f[N];
193	20 for (i = n - 2; i >= 0; i--) {
90	18 for (int i = n; i >= 0; i--)
548	28 if (i + 1 <= where[a[i]][t] - 1) {
187	9 int min_dis(int W, int H, int x1, int y1, int x2, int y2, int w, int h) {
60	40 }
575	15 int64_t x, y;
45	19 for (i = 0; i < t; i++) printf("%ld %ld\n", n1[i], n2[i]);
105	98 for (int x = 1; x <= 1; ++x) {
556	15 printsinglepairs(n);
240	34 v[i][S] = 1ll * v[i][S & (S - 1)] * a[i] % P *
200	25 ps[j][i][k] = ps[j][i - 1][(k + 2) % 3] + (perm[j][k] != A[i]);
132	3 vector<long long> x, y, s, dp;
140	34 if (k < t.size() / 2) {
360	25 continue;
245	80 f[S] = (f[S] - P * f[T] % mod + mod) % mod;
100	18 for (int i = 0; i <= n; ++i)
211	79 else if (abs(c - d) & 1) {
426	8 for (int i = 2; i <= sqrt(num); i++)
549	29 if (nxt[i] - i < j - prv[j]) {
399	12 return (pref[l] - (r >= n ? 0 : pref[r + 1]) + 2 * mod) % mod;
4	28 g[1] = 3ll * n * (n + 1) / 2 % mod;
268	96 if (arr[i].second != arr[i + 1].second - 1) {
280	63 int gl = binpow(2, n);
391	24 if (caves[i][j] >= need + j) {
218	27 ll d = abs(x - y);
294	59 long long l = 1, r = 1e9 + 1, ans = 0;
433	76 } else if (ct.count(3) > 0 && ct[3] >= 2) {
541	75 if (it <= i + j && it > i + 1)
560	15 generateParenthesis(n, open + 1, close, s + "(", ans);
438	51 if (2 * (i + 1) > n) {
358	14 c = 1;
190	64 } else if (i == n - 1) {
116	13 while (l < len) {
346	24 for (j = 0; j <= val - rangeBeg; j++) {
504	21 ne[idx] = h[a];
454	52 if (ok) continue;
51	18 if (ceil(fn / 3.0) <= fn / 2.0) {
42	34 long long l = 0, ans = 1;
258	56 for (int i = 0; i < 500; i += 1) {
8	21 int x = X[i] % 4, y = Y[i] % 4;
309	41 if (s[i] != '?') {
118	61 cout << -1 << endl;
510	19 for (long long int i = 1; i <= n; i++) {
402	3 const long long N = 4e6 + 10;
521	17 return a.first <= b.first;
527	44 long long dy = std::lower_bound(Y + 1, Y + 1 + m, y[i]) - Y;
86	22 for (int j = 0; j < horizontal; j++) {
68	35 if (q > k) {
485	35 sort(arr.begin(), arr.end());
106	17 for (long long j = 0; j <= k; j++) {
14	13 printf("%lld\n", res);
503	45 res[i][j] = 0;
22	8 printf("%d %d\n", b, a);
74	32 if (n % 2 == 0) {
88	7 for (int j = 1; j <= i; j++) {
119	7 if (a[i] < b[i])
403	4 long long sum[4000010], f[4000010];
442	25 int ppp = s.find('0', pos);
407	12 if (m <= (n / 2)) {
518	55 MOD1) %
481	25 int maxx = 1e9 + 100, pos = 0;
449	15 if (i >= n / 2)
480	47 if (s[i + 1] == '1' && t[i + 1] == '1') {
408	14 cout << r % l << endl;
512	113 cout << -1 << " " << -1 << endl;
322	31 while (find2(j) == find2(1)) j++;
475	90 while (j < n and s[j] == '0') {
579	57 }
147	53 if (dp1[i] > goal2[i - 1] + (5 - i + 1) or
436	25 int ppp = s.find('0', pos);
251	67 scanf("%s%lld%lld", op, a + i, b + i);
377	34 return;
528	20 long long ans = 0;
355	17 if (d < r) {
456	37 } else if ((p + m) % 2 == 0) {
186	56 mih = y2 - y4, miw = x4 - x1;
409	61 if (2 * l <= r) {
221	59 cout << "and " << 1 << " " << i << endl;
302	61 const int INF = 1000000001;
172	16 while (high <= max(n + 1, m + 1)) {
21	10 cout << 2 << " " << re << endl;
416	10 cout << r - l << endl;
176	16 cout << string(n / 2, 'a') + (n & 1 ? "bv" : "b") + string(n / 2 - 1, 'a')
531	48 for (int i = 1; i <= (1 << k); i++) p[i] = p[i - 1] * a % mod;
215	86 cout << max2 << "\n";
293	80 dich(0, inf);
96	12 for (long long j = 0; j <= i; j++) {
201	30 ((query[w][0] - 2 >= 0) ? dp[k][query[w][0] - 2] : 0),
441	24 } else if (zero >= n / 2) {
411	12 if ((b / 2) + 1 >= a)
479	109 } else if (s1[i + 1] == '1' && s2[i + 1] == '1') {
184	31 } else if (y2 - y1 + h <= H) {
428	27 cout << 1 << "\n" << vt << "\n";
164	8 int mid = l - 1;
559	12 if (n >= 1) {
217	15 long long ret = n * n;
545	19 if (l <= t && t < r) f[l][r] = min(f[l][r], f[l][t] + f[t + 1][r]);
536	45 ans.push_back(k);
12	25 return n * (n - 1) * (n - 2) / 6;
291	34 bool bit(long long x, int p) { return x & (1ll << p); }
392	15 if (a.first < b.first || (a.first == b.first && a.second > b.second))
282	20 ans = (ans + cur * ksm(p[i - 1], n) % mod) % mod;
338	11 if (a % 3 != 0 && a % 10 != 3) {
530	58 for (int j = 1; j <= i; ++j) swap(p[q[j]], p[q[j] + 1]);
424	27 if ((s[0] == '2' || s[0] == '5') && (s[i] == '7')) {
92	12 for (long long j = 0; j < n; j++) {
471	68 printf("%d\n", ans);
130	16 *max_element(blocked + j, blocked + i) < (n + k - 2) / (k - 1)) {
83	22 for (int j = 0; j < horizontal; j++) {
269	27 if (t + 1 <= k)
385	48 curp += cvs[mnps[i].second].size();
288	85 op(1, i);
177	16 cout << string(n / 2, 'a') + (n & 1 ? "bv" : "b") + string(n / 2 - 1, 'a')
330	19 while (t--) {
450	36 printf("2 %d 1 %d\n", len, len - 1);
75	51 else if (k >= m / 2 && (k - m / 2) % 2 == 0)
209	25 cout << 2 << '\n';
312	15 if (s[0] == '?') {
59	8 int a[200005];
131	43 cout << ans % mod << '\n';
340	11 if (maxi <= dif * 2) {
15	26 if (abs(v[2].first - v[0].first) == 2 ||
443	19 printf("%d %d %d %d\n", x, n, x + 1, n);
540	59 cout << (n ? n - dp[0][n] : 0) - 1 + purged << '\n';
153	82 while (visited[r] == 0) {
465	47
500	31 if (br[rc] == (e - mid))
254	56 for (int i = 0; i < 1500; i += 1) {
265	28 if (y + 1 <= k) {
318	25 for (int i = 0; i <= n - 2; i++) {
297	64 int l = 1, r = 1000000001;
138	23 if (s.length() == 1) {
469	37 printf("0\n");
155	20 for (int j = 0; j < n; j++) fa[j] = j;
307	36
417	7 if (l <= r / 2) {
356	27 cout << i << " " << old + 2 * i - 1 - n << endl;
182	47 else if ((curr + 1) % k == 0)
189	16 if (x1 - (w - (W - x2)) >= 0) {
562	13 cout << "()()" << endl;
